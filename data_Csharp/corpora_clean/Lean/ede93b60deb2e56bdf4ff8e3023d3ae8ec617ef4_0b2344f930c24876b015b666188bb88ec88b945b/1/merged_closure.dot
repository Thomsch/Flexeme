digraph  {
n26 [label="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper", span=""];
n0 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="52-52"];
n1 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="Py.GIL()", span="54-54"];
n3 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="!model.HasAttr(attributeName)", span="58-58"];
n4 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="throw new NotImplementedException($''IAlphaModel.{attributeName} must be implemented. Please implement this missing method on {model.GetPythonType()}'');", span="60-60"];
n5 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="_model = model", span="64-64"];
n2 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="new[] { ''Update'', ''OnSecuritiesChanged'' }", span="56-56"];
n7 [cluster="Unk.GIL", label="Entry Unk.GIL", span=""];
n8 [cluster="Unk.HasAttr", label="Entry Unk.HasAttr", span=""];
n6 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="52-52"];
n9 [cluster="System.NotImplementedException.NotImplementedException(string)", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
n10 [cluster="Unk.GetPythonType", label="Entry Unk.GetPythonType", span=""];
n11 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="74-74"];
n12 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="Py.GIL()", span="76-76"];
n15 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="yield return insight.AsManagedObject(typeof(Insight)) as Insight;", span="81-81"];
n13 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="var insights = _model.Update(algorithm, data) as PyObject", span="78-78"];
n14 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label=insights, span="79-79"];
n18 [cluster="Unk.Update", label="Entry Unk.Update", span=""];
n16 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="insights.Destroy()", span="83-83"];
n19 [cluster="Unk.AsManagedObject", label="Entry Unk.AsManagedObject", span=""];
n17 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="74-74"];
n20 [cluster="PyObject.Destroy()", label="Entry PyObject.Destroy()", span="1143-1143"];
n21 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="92-92"];
n22 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Py.GIL()", span="94-94"];
n23 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="_model.OnSecuritiesChanged(algorithm, changes)", span="96-96"];
n24 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="92-92"];
n25 [cluster="Unk.OnSecuritiesChanged", label="Entry Unk.OnSecuritiesChanged", span=""];
m0_17 [cluster="PyObject.TryConvert<T>(out T)", file="CompositeAlphaModel.cs", label="Entry PyObject.TryConvert<T>(out T)", span="1037-1037"];
m0_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.GetModelName()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.GetModelName()", span="43-43"];
m0_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="96-96"];
m0_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CompositeAlphaModel.cs", label=_alphaModels, span="98-98"];
m0_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CompositeAlphaModel.cs", label="model.OnSecuritiesChanged(algorithm, changes)", span="100-100"];
m0_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="96-96"];
m0_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="72-72"];
m0_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label=_alphaModels, span="74-74"];
m0_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label="yield return insight;", span="85-85"];
m0_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label="model.Update(algorithm, data)", span="77-77"];
m0_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label="var name = model.GetModelName()", span="76-76"];
m0_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label="insight.SourceModel = name", span="82-82"];
m0_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label="string.IsNullOrEmpty(insight.SourceModel)", span="79-79"];
m0_26 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="72-72"];
m0_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", span="46-46"];
m0_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", file="CompositeAlphaModel.cs", label="alphaModels.IsNullOrEmpty()", span="48-48"];
m0_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", file="CompositeAlphaModel.cs", label="_alphaModels = new IAlphaModel[alphaModels.Length]", span="53-53"];
m0_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", file="CompositeAlphaModel.cs", label="i < alphaModels.Length", span="55-55"];
m0_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", file="CompositeAlphaModel.cs", label="!alphaModels[i].TryConvert(out _alphaModels[i])", span="57-57"];
m0_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", file="CompositeAlphaModel.cs", label="_alphaModels[i] = new AlphaModelPythonWrapper(alphaModels[i])", span="59-59"];
m0_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", file="CompositeAlphaModel.cs", label="throw new ArgumentException(''Must specify at least 1 alpha model for the CompositeAlphaModel'');", span="50-50"];
m0_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", file="CompositeAlphaModel.cs", label="var i = 0", span="55-55"];
m0_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", file="CompositeAlphaModel.cs", label="i++", span="55-55"];
m0_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(PyObject[])", span="46-46"];
m0_5 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="CompositeAlphaModel.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="118-118"];
m0_29 [cluster="string.IsNullOrEmpty(string)", file="CompositeAlphaModel.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_34 [cluster="QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="29-29"];
m0_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", span="36-36"];
m0_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", file="CompositeAlphaModel.cs", label="alphaModels.IsNullOrEmpty()", span="38-38"];
m0_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", file="CompositeAlphaModel.cs", label="_alphaModels = alphaModels", span="43-43"];
m0_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", file="CompositeAlphaModel.cs", label="throw new ArgumentException(''Must specify at least 1 alpha model for the CompositeAlphaModel'');", span="40-40"];
m0_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", span="36-36"];
m0_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="32-32"];
m0_6 [cluster="System.ArgumentException.ArgumentException(string)", file="CompositeAlphaModel.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m0_35 [file="CompositeAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel", span=""];
m1_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="47-47"];
m1_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan)", span="47-47"];
m1_17 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m1_26 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="129-129"];
m1_41 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", span="120-120"];
m1_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="DateTime generatedTimeUtc", span="122-122"];
m1_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol.TryGetValue(symbol, out generatedTimeUtc)", span="123-123"];
m1_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="utcTime - generatedTimeUtc < _period", span="127-127"];
m1_38 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol[symbol] = utcTime", span="135-135"];
m1_37 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="return false;", span="129-129"];
m1_39 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="return true;", span="136-136"];
m1_40 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ShouldEmitInsight(System.DateTime, QuantConnect.Symbol)", span="120-120"];
m1_19 [cluster="Unk.nameof", file="ConstantAlphaModel.cs", label="Entry Unk.nameof", span=""];
m1_32 [cluster="QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.NotifiedSecurityChanges.UpdateCollection(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="32-32"];
m1_33 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m1_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="93-93"];
m1_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label=_securities, span="95-95"];
m1_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="yield return new Insight(security.Symbol, _period, _type, _direction, _magnitude, _confidence);", span="99-99"];
m1_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="ShouldEmitInsight(algorithm.UtcTime, security.Symbol)", span="97-97"];
m1_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="93-93"];
m1_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="60-60"];
m1_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_type = type", span="62-62"];
m1_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_direction = direction", span="63-63"];
m1_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_period = period", span="64-64"];
m1_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_magnitude = magnitude", span="67-67"];
m1_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_confidence = confidence", span="68-68"];
m1_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Name = $''{nameof(ConstantAlphaModel)}({type},{direction},{period}''", span="73-73"];
m1_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="magnitude.HasValue", span="74-74"];
m1_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Name += $'',{magnitude.Value}''", span="76-76"];
m1_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="confidence.HasValue", span="79-79"];
m1_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Name += $'',{confidence.Value}''", span="81-81"];
m1_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_securities = new HashSet<Security>()", span="70-70"];
m1_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol = new Dictionary<Symbol, DateTime>()", span="71-71"];
m1_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Name += '')''", span="84-84"];
m1_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="60-60"];
m1_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="109-109"];
m1_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="NotifiedSecurityChanges.UpdateCollection(_securities, changes)", span="111-111"];
m1_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="changes.RemovedSecurities", span="114-114"];
m1_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol.Remove(removed.Symbol)", span="116-116"];
m1_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="109-109"];
m1_18 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_42 [file="ConstantAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", span=""];
m2_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="101-101"];
m2_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EmaCrossAlphaModel.cs", label="changes.AddedSecurities", span="103-103"];
m2_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EmaCrossAlphaModel.cs", label="var fast = algorithm.EMA(added.Symbol, _fastPeriod)", span="109-109"];
m2_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EmaCrossAlphaModel.cs", label="var slow = algorithm.EMA(added.Symbol, _slowPeriod)", span="110-110"];
m2_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EmaCrossAlphaModel.cs", label="SymbolData symbolData", span="105-105"];
m2_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EmaCrossAlphaModel.cs", label="!_symbolDataBySymbol.TryGetValue(added.Symbol, out symbolData)", span="106-106"];
m2_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EmaCrossAlphaModel.cs", label="_symbolDataBySymbol[added.Symbol] = new SymbolData\r\n                    {\r\n                        Security = added,\r\n                        Fast = fast,\r\n                        Slow = slow\r\n                    }", span="111-116"];
m2_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EmaCrossAlphaModel.cs", label="symbolData.Fast.Reset()", span="121-121"];
m2_37 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EmaCrossAlphaModel.cs", label="symbolData.Slow.Reset()", span="122-122"];
m2_38 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="101-101"];
m2_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="194-194"];
m2_28 [cluster="System.Collections.Generic.List<T>.Add(T)", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m2_41 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.SymbolData.SymbolData()", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.SymbolData.SymbolData()", span="130-130"];
m2_26 [cluster="System.TimeSpan.Multiply(double)", file="EmaCrossAlphaModel.cs", label="Entry System.TimeSpan.Multiply(double)", span="230-230"];
m2_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.EmaCrossAlphaModel(int, int, QuantConnect.Resolution)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.EmaCrossAlphaModel(int, int, QuantConnect.Resolution)", span="45-45"];
m2_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.EmaCrossAlphaModel(int, int, QuantConnect.Resolution)", file="EmaCrossAlphaModel.cs", label="_fastPeriod = fastPeriod", span="51-51"];
m2_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.EmaCrossAlphaModel(int, int, QuantConnect.Resolution)", file="EmaCrossAlphaModel.cs", label="_slowPeriod = slowPeriod", span="52-52"];
m2_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.EmaCrossAlphaModel(int, int, QuantConnect.Resolution)", file="EmaCrossAlphaModel.cs", label="_resolution = resolution", span="53-53"];
m2_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.EmaCrossAlphaModel(int, int, QuantConnect.Resolution)", file="EmaCrossAlphaModel.cs", label="_predictionInterval = fastPeriod", span="54-54"];
m2_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.EmaCrossAlphaModel(int, int, QuantConnect.Resolution)", file="EmaCrossAlphaModel.cs", label="Name = $''{nameof(EmaCrossAlphaModel)}({fastPeriod},{slowPeriod},{resolution})''", span="56-56"];
m2_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.EmaCrossAlphaModel(int, int, QuantConnect.Resolution)", file="EmaCrossAlphaModel.cs", label="_symbolDataBySymbol = new Dictionary<Symbol, SymbolData>()", span="55-55"];
m2_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.EmaCrossAlphaModel(int, int, QuantConnect.Resolution)", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.EmaCrossAlphaModel(int, int, QuantConnect.Resolution)", span="45-45"];
m2_24 [cluster="System.Collections.Generic.List<T>.List()", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_25 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m2_42 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="121-121"];
m2_9 [cluster="Unk.nameof", file="EmaCrossAlphaModel.cs", label="Entry Unk.nameof", span=""];
m2_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="360-360"];
m2_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="66-66"];
m2_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="var insights = new List<Insight>()", span="68-68"];
m2_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="_symbolDataBySymbol.Values", span="69-69"];
m2_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="insights.Add(Insight.Price(symbolData.Symbol, insightPeriod, InsightDirection.Down))", span="78-78"];
m2_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="insights.Add(Insight.Price(symbolData.Symbol, insightPeriod, InsightDirection.Up))", span="85-85"];
m2_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="return insights;", span="93-93"];
m2_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="symbolData.Fast.IsReady && symbolData.Slow.IsReady", span="71-71"];
m2_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="symbolData.FastIsOverSlow", span="74-74"];
m2_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="symbolData.Slow > symbolData.Fast", span="76-76"];
m2_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="symbolData.SlowIsOverFast", span="81-81"];
m2_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="symbolData.Fast > symbolData.Slow", span="83-83"];
m2_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="symbolData.FastIsOverSlow = symbolData.Fast > symbolData.Slow", span="90-90"];
m2_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="var insightPeriod = _resolution.ToTimeSpan().Multiply(_predictionInterval)", span="73-73"];
m2_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="66-66"];
m2_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_43 [file="EmaCrossAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel", span=""];
m3_12 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="105-105"];
m3_13 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="Symbol = original.Symbol", span="107-107"];
m3_14 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="Time = new DateTime(original.Time.Ticks)", span="108-108"];
m3_15 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="BidPrice = original.BidPrice", span="109-109"];
m3_16 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="AskPrice = original.AskPrice", span="110-110"];
m3_17 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="Exchange = original.Exchange", span="111-111"];
m3_18 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="SaleCondition = original.SaleCondition", span="112-112"];
m3_19 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="Quantity = original.Quantity", span="113-113"];
m3_20 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="Suspicious = original.Suspicious", span="114-114"];
m3_21 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="DataType = MarketDataType.Tick", span="115-115"];
m3_22 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="105-105"];
m3_52 [cluster="string.Split(params char[])", file="FundamentalUniverseSelectionModel.cs", label="Entry string.Split(params char[])", span="0-0"];
m3_67 [cluster="System.Convert.ToInt32(string)", file="FundamentalUniverseSelectionModel.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m3_33 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", span="146-146"];
m3_34 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="DataType = MarketDataType.Tick", span="148-148"];
m3_35 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Time = time", span="149-149"];
m3_36 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Symbol = symbol", span="150-150"];
m3_37 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Value = last", span="151-151"];
m3_39 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="BidPrice = bid", span="153-153"];
m3_40 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="AskPrice = ask", span="154-154"];
m3_38 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="TickType = TickType.Quote", span="152-152"];
m3_41 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", span="146-146"];
m3_23 [cluster="System.DateTime.DateTime(long)", file="FundamentalUniverseSelectionModel.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m3_55 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", span="180-180"];
m3_56 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="var csv = line.Split(',')", span="182-182"];
m3_58 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Symbol = symbol", span="184-184"];
m3_59 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Time = baseDate.Date.AddMilliseconds(Convert.ToInt32(csv[0]))", span="185-185"];
m3_57 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="DataType = MarketDataType.Tick", span="183-183"];
m3_60 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Value = csv[1].ToDecimal()/10000m", span="186-186"];
m3_62 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Quantity = Convert.ToInt32(csv[2])", span="188-188"];
m3_63 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Exchange = csv[3].Trim()", span="189-189"];
m3_64 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="SaleCondition = csv[4]", span="190-190"];
m3_65 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Suspicious = Convert.ToInt32(csv[5]) == 1", span="191-191"];
m3_61 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="TickType = TickType.Trade", span="187-187"];
m3_66 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(string, string, System.DateTime)", span="180-180"];
m3_103 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="267-267"];
m3_104 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="var dataType = TickType.Trade", span="269-269"];
m3_105 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label=isLiveMode, span="271-271"];
m3_108 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="config.SecurityType == SecurityType.Forex", span="278-278"];
m3_112 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="var symbol = string.IsNullOrEmpty(config.MappedSymbol) ? config.Symbol : config.MappedSymbol", span="285-285"];
m3_113 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="var securityType = config.SecurityType.ToString().ToLower()", span="286-286"];
m3_114 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="var countryCode = config.Country.ToString().ToLower()", span="287-287"];
m3_115 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="var resolution = config.Resolution.ToString().ToLower()", span="288-288"];
m3_116 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="var file = date.ToString(dateFormat) + ''_'' + dataType.ToString().ToLower() + ''.zip''", span="289-289"];
m3_117 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="config.SecurityType == SecurityType.Equity", span="291-291"];
m3_119 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="config.SecurityType == SecurityType.Forex || config.SecurityType == SecurityType.Cfd", span="296-296"];
m3_120 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="var dataSource = config.LiquditySource.ToString().ToLower()", span="299-299"];
m3_106 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="274-274"];
m3_107 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="var dateFormat = ''yyyyMMdd''", span="277-277"];
m3_109 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="dataType = TickType.Quote", span="280-280"];
m3_111 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="string source", span="284-284"];
m3_110 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="dateFormat = ''yyMMdd''", span="281-281"];
m3_118 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="source = Path.Combine(Constants.DataFolder, securityType, countryCode, resolution, symbol.ToLower(), file)", span="294-294"];
m3_121 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="source = Path.Combine(Constants.DataFolder, securityType, dataSource, resolution, symbol.ToLower(), file)", span="300-300"];
m3_122 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="source = Path.Combine(Constants.DataFolder, securityType, resolution, symbol.ToLower(), file)", span="305-305"];
m3_123 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile);", span="308-308"];
m3_124 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="267-267"];
m3_68 [cluster="System.DateTime.AddMilliseconds(double)", file="FundamentalUniverseSelectionModel.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m3_97 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m3_98 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="249-249"];
m3_99 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label=isLiveMode, span="251-251"];
m3_101 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="return new Tick(config, line, date);", span="257-257"];
m3_100 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="return new Tick();", span="254-254"];
m3_102 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="249-249"];
m3_130 [cluster="System.IO.Path.Combine(params string[])", file="FundamentalUniverseSelectionModel.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m3_24 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", span="126-126"];
m3_25 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="DataType = MarketDataType.Tick", span="128-128"];
m3_26 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Time = time", span="129-129"];
m3_27 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Symbol = symbol", span="130-130"];
m3_28 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Value = bid + (ask - bid) / 2", span="131-131"];
m3_30 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="BidPrice = bid", span="133-133"];
m3_31 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="AskPrice = ask", span="134-134"];
m3_29 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="TickType = TickType.Quote", span="132-132"];
m3_32 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", span="126-126"];
m3_129 [cluster="System.DateTime.ToString(string)", file="FundamentalUniverseSelectionModel.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_131 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", span="319-319"];
m3_132 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Value = lastTrade", span="321-321"];
m3_133 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="BidPrice = bidPrice", span="322-322"];
m3_134 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="AskPrice = askPrice", span="323-323"];
m3_135 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Quantity = Convert.ToInt32(volume)", span="324-324"];
m3_136 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", span="319-319"];
m3_71 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="201-201"];
m3_72 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="var csv = line.Split(',')", span="205-205"];
m3_74 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="config.SecurityType", span="209-209"];
m3_76 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Symbol = config.Symbol", span="212-212"];
m3_77 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Time = date.Date.AddMilliseconds(Convert.ToInt64(csv[0]))", span="213-213"];
m3_78 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Value = config.GetNormalizedPrice(csv[1].ToDecimal() / 10000m)", span="214-214"];
m3_86 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Symbol = config.Symbol", span="226-226"];
m3_73 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="DataType = MarketDataType.Tick", span="206-206"];
m3_80 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Quantity = Convert.ToInt32(csv[2])", span="216-216"];
m3_81 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="csv.Length > 3", span="217-217"];
m3_82 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Exchange = csv[3]", span="219-219"];
m3_83 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="SaleCondition = csv[4]", span="220-220"];
m3_84 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Suspicious = (csv[5] == ''1'')", span="221-221"];
m3_88 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Time = DateTime.ParseExact(csv[0], DateFormat.Forex, CultureInfo.InvariantCulture)", span="228-228"];
m3_89 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="BidPrice = csv[1].ToDecimal()", span="229-229"];
m3_90 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="AskPrice = csv[2].ToDecimal()", span="230-230"];
m3_75 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="SecurityType.Equity", span="211-211"];
m3_85 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="SecurityType.Forex", span="225-225"];
m3_79 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="TickType = TickType.Trade", span="215-215"];
m3_92 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label=Exception, span="235-235"];
m3_87 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="TickType = TickType.Quote", span="227-227"];
m3_91 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Value = BidPrice + (AskPrice - BidPrice) / 2", span="231-231"];
m3_93 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Log.Error(''Error Generating Tick: '' + err.Message)", span="237-237"];
m3_94 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime)", span="201-201"];
m3_96 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="187-187"];
m3_128 [cluster="string.ToLower()", file="FundamentalUniverseSelectionModel.cs", label="Entry string.ToLower()", span="0-0"];
m3_53 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="FundamentalUniverseSelectionModel.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m3_125 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="39-39"];
m3_127 [cluster="System.Enum.ToString()", file="FundamentalUniverseSelectionModel.cs", label="Entry System.Enum.ToString()", span="0-0"];
m3_69 [cluster="string.ToDecimal()", file="FundamentalUniverseSelectionModel.cs", label="Entry string.ToDecimal()", span="145-145"];
m3_137 [cluster="System.Convert.ToInt32(decimal)", file="FundamentalUniverseSelectionModel.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m3_95 [cluster="System.Convert.ToInt64(string)", file="FundamentalUniverseSelectionModel.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m3_70 [cluster="string.Trim()", file="FundamentalUniverseSelectionModel.cs", label="Entry string.Trim()", span="0-0"];
m3_126 [cluster="string.IsNullOrEmpty(string)", file="FundamentalUniverseSelectionModel.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_42 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(string, string)", span="162-162"];
m3_43 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="FundamentalUniverseSelectionModel.cs", label="var csv = line.Split(',')", span="164-164"];
m3_45 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="FundamentalUniverseSelectionModel.cs", label="Symbol = symbol", span="166-166"];
m3_44 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="FundamentalUniverseSelectionModel.cs", label="DataType = MarketDataType.Tick", span="165-165"];
m3_46 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="FundamentalUniverseSelectionModel.cs", label="Time = DateTime.ParseExact(csv[0], DateFormat.Forex, CultureInfo.InvariantCulture)", span="167-167"];
m3_49 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="FundamentalUniverseSelectionModel.cs", label="BidPrice = Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture)", span="170-170"];
m3_50 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="FundamentalUniverseSelectionModel.cs", label="AskPrice = Convert.ToDecimal(csv[2], CultureInfo.InvariantCulture)", span="171-171"];
m3_47 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="FundamentalUniverseSelectionModel.cs", label="Value = BidPrice + (AskPrice - BidPrice) / 2", span="168-168"];
m3_48 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="FundamentalUniverseSelectionModel.cs", label="TickType = TickType.Quote", span="169-169"];
m3_51 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(string, string)", span="162-162"];
m3_0 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="88-88"];
m3_1 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="Value = 0", span="90-90"];
m3_2 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="Time = new DateTime()", span="91-91"];
m3_3 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="DataType = MarketDataType.Tick", span="92-92"];
m3_4 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="Symbol = ''''", span="93-93"];
m3_5 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="TickType = TickType.Trade", span="94-94"];
m3_6 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="Quantity = 0", span="95-95"];
m3_7 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="Exchange = ''''", span="96-96"];
m3_8 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="SaleCondition = ''''", span="97-97"];
m3_9 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="Suspicious = false", span="98-98"];
m3_10 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.Tick()", span="88-88"];
m3_11 [cluster="System.DateTime.DateTime()", file="FundamentalUniverseSelectionModel.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m3_138 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="FundamentalUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="332-332"];
m3_139 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="FundamentalUniverseSelectionModel.cs", label="return new Tick(this);", span="334-334"];
m3_140 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="FundamentalUniverseSelectionModel.cs", label="Exit QuantConnect.Data.Market.Tick.Clone()", span="332-332"];
m3_54 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="FundamentalUniverseSelectionModel.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m3_141 [file="FundamentalUniverseSelectionModel.cs", label="QuantConnect.Data.Market.Tick", span=""];
m4_6 [cluster="QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", file="Future.cs", label="Entry QuantConnect.Securities.Future.FutureHolding.FutureHolding(QuantConnect.Securities.Security)", span="29-29"];
m4_30 [cluster="System.Func<T, TResult>.Invoke(T)", file="Future.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_7 [cluster="System.TimeSpan.FromDays(double)", file="Future.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m4_25 [cluster="QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", file="Future.cs", label="Entry QuantConnect.Securities.FuncSecurityDerivativeFilter.FuncSecurityDerivativeFilter(System.Func<QuantConnect.Securities.IDerivativeSecurityFilterUniverse, QuantConnect.Securities.IDerivativeSecurityFilterUniverse>)", span="33-33"];
m4_9 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="79-79"];
m4_10 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SettlementType = SettlementType.Cash", span="97-97"];
m4_12 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="_symbolProperties = symbolProperties", span="99-99"];
m4_11 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Holdings = new FutureHolding(this)", span="98-98"];
m4_13 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SetFilter(TimeSpan.Zero, TimeSpan.FromDays(35))", span="100-100"];
m4_14 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.Future(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="79-79"];
m4_31 [cluster="QuantConnect.Securities.Future.Future.SetFilter(PyObject)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.SetFilter(PyObject)", span="180-180"];
m4_32 [cluster="QuantConnect.Securities.Future.Future.SetFilter(PyObject)", file="Future.cs", label="var pyUniverseFunc = PythonUtil.ToFunc<FutureFilterUniverse, FutureFilterUniverse>(universeFunc)", span="182-182"];
m4_33 [cluster="QuantConnect.Securities.Future.Future.SetFilter(PyObject)", file="Future.cs", label="SetFilter(pyUniverseFunc)", span="183-183"];
m4_34 [cluster="QuantConnect.Securities.Future.Future.SetFilter(PyObject)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.SetFilter(PyObject)", span="180-180"];
m4_8 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="156-156"];
m4_15 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="SetFilter(universe => universe.Expiration(minExpiry, maxExpiry))", span="158-158"];
m4_16 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.SetFilter(System.TimeSpan, System.TimeSpan)", span="156-156"];
m4_0 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="48-48"];
m4_1 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SettlementType = SettlementType.Cash", span="66-66"];
m4_3 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="_symbolProperties = symbolProperties", span="68-68"];
m4_2 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Holdings = new FutureHolding(this)", span="67-67"];
m4_4 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="SetFilter(TimeSpan.Zero, TimeSpan.FromDays(35))", span="69-69"];
m4_5 [cluster="QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.Future(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="48-48"];
m4_17 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="Entry QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", span="165-165"];
m4_22 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="Func<IDerivativeSecurityFilterUniverse, IDerivativeSecurityFilterUniverse> func = universe =>\r\n            {\r\n                var futureUniverse = universe as FutureFilterUniverse;\r\n                return universeFunc(futureUniverse);\r\n            }", span="167-171"];
m4_23 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="ContractFilter = new FuncSecurityDerivativeFilter(func)", span="173-173"];
m4_24 [cluster="QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", file="Future.cs", label="Exit QuantConnect.Securities.Future.Future.SetFilter(System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>)", span="165-165"];
m4_35 [cluster="QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", file="Future.cs", label="Entry QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", span="78-78"];
m4_21 [cluster="QuantConnect.Securities.FutureFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="Future.cs", label="Entry QuantConnect.Securities.FutureFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="111-111"];
m4_26 [cluster="lambda expression", file="Future.cs", label="Entry lambda expression", span="167-171"];
m4_19 [cluster="lambda expression", file="Future.cs", label="universe.Expiration(minExpiry, maxExpiry)", span="158-158"];
m4_18 [cluster="lambda expression", file="Future.cs", label="Entry lambda expression", span="158-158"];
m4_20 [cluster="lambda expression", file="Future.cs", label="Exit lambda expression", span="158-158"];
m4_28 [cluster="lambda expression", file="Future.cs", label="return universeFunc(futureUniverse);", span="170-170"];
m4_27 [cluster="lambda expression", file="Future.cs", label="var futureUniverse = universe as FutureFilterUniverse", span="169-169"];
m4_29 [cluster="lambda expression", file="Future.cs", label="Exit lambda expression", span="167-171"];
m4_36 [file="Future.cs", label="QuantConnect.Securities.Future.Future", span=""];
m4_37 [file="Future.cs", label="System.TimeSpan", span=""];
m4_38 [file="Future.cs", label="System.TimeSpan", span=""];
m4_39 [file="Future.cs", label="System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>", span=""];
m5_0 [cluster="QuantConnect.Securities.SecurityCache.SecurityCache()", file="LinqExtensions.cs", label="Entry QuantConnect.Securities.SecurityCache.SecurityCache()", span="43-43"];
m5_1 [cluster="QuantConnect.Securities.SecurityCache.SecurityCache()", file="LinqExtensions.cs", label="Exit QuantConnect.Securities.SecurityCache.SecurityCache()", span="43-43"];
m5_6 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="LinqExtensions.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData()", span="62-62"];
m5_7 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="LinqExtensions.cs", label="return _lastData;", span="64-64"];
m5_8 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="LinqExtensions.cs", label="Exit QuantConnect.Securities.SecurityCache.GetData()", span="62-62"];
m5_2 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="LinqExtensions.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="52-52"];
m5_3 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="LinqExtensions.cs", label="data != null", span="55-55"];
m5_4 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="LinqExtensions.cs", label="_lastData = data", span="55-55"];
m5_5 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="LinqExtensions.cs", label="Exit QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="52-52"];
m5_9 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="LinqExtensions.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="70-70"];
m5_10 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="LinqExtensions.cs", label="_lastData = null", span="72-72"];
m5_11 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="LinqExtensions.cs", label="Exit QuantConnect.Securities.SecurityCache.Reset()", span="70-70"];
m5_12 [file="LinqExtensions.cs", label="QuantConnect.Securities.SecurityCache", span=""];
m6_40 [cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202"];
m6_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="194-194"];
m6_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m6_38 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_37 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", span="141-141"];
m6_41 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Security = security", span="143-143"];
m6_42 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, resolution)", span="144-144"];
m6_43 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="algorithm.SubscriptionManager.AddConsolidator(security.Symbol, Consolidator)", span="145-145"];
m6_44 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="MACD = new MovingAverageConvergenceDivergence(fastPeriod, slowPeriod, signalPeriod, movingAverageType)", span="147-147"];
m6_45 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="algorithm.RegisterIndicator(security.Symbol, MACD, Consolidator)", span="149-149"];
m6_46 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", span="141-141"];
m6_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="115-115"];
m6_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs", label="changes.AddedSecurities", span="117-117"];
m6_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs", label="_symbolData.Add(added.Symbol, new SymbolData(algorithm, added, _fastPeriod, _slowPeriod, _signalPeriod, _movingAverageType, _resolution))", span="119-119"];
m6_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs", label="changes.RemovedSecurities", span="122-122"];
m6_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs", label="algorithm.SubscriptionManager.RemoveConsolidator(data.Security.Symbol, data.Consolidator)", span="128-128"];
m6_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs", label="SymbolData data", span="124-124"];
m6_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs", label="_symbolData.TryGetValue(removed.Symbol, out data)", span="125-125"];
m6_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="115-115"];
m6_27 [cluster="System.TimeSpan.Multiply(double)", file="MacdAlphaModel.cs", label="Entry System.TimeSpan.Multiply(double)", span="230-230"];
m6_49 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(int, int, int, QuantConnect.Indicators.MovingAverageType)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(int, int, int, QuantConnect.Indicators.MovingAverageType)", span="62-62"];
m6_48 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m6_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="76-76"];
m6_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="_symbolData.Values", span="78-78"];
m6_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="yield return insight;", span="105-105"];
m6_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="sd.Security.Price == 0", span="80-80"];
m6_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="var normalizedSignal = sd.MACD.Signal / sd.Security.Price", span="86-86"];
m6_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="direction == sd.PreviousDirection", span="97-97"];
m6_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="var insight = Insight.Price(sd.Security.Symbol, insightPeriod, direction)", span="103-103"];
m6_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="sd.PreviousDirection = insight.Direction", span="104-104"];
m6_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="var direction = InsightDirection.Flat", span="85-85"];
m6_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="normalizedSignal > BounceThresholdPercent", span="87-87"];
m6_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="normalizedSignal < -BounceThresholdPercent", span="91-91"];
m6_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="direction = InsightDirection.Up", span="89-89"];
m6_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="direction = InsightDirection.Down", span="93-93"];
m6_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="var insightPeriod = _resolution.ToTimeSpan().Multiply(_fastPeriod)", span="102-102"];
m6_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="76-76"];
m6_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1465-1465"];
m6_26 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
m6_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1367-1367"];
m6_10 [cluster="Unk.nameof", file="MacdAlphaModel.cs", label="Entry Unk.nameof", span=""];
m6_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", span="53-53"];
m6_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="_fastPeriod = fastPeriod", span="61-61"];
m6_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="_slowPeriod = slowPeriod", span="62-62"];
m6_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="_signalPeriod = signalPeriod", span="63-63"];
m6_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="_movingAverageType = movingAverageType", span="64-64"];
m6_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="_resolution = resolution", span="65-65"];
m6_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Name = $''{nameof(MacdAlphaModel)}({fastPeriod},{slowPeriod},{signalPeriod},{movingAverageType},{resolution})''", span="67-67"];
m6_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="_symbolData = new Dictionary<Symbol, SymbolData>()", span="66-66"];
m6_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.MacdAlphaModel(int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution)", span="53-53"];
m6_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_51 [file="MacdAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", span=""];
m6_52 [file="MacdAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", span=""];
m7_36 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="throw new Exception(''Error in Kraken API: '' + result.error[0]);", span="114-114"];
m7_22 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", color=green, community=0, file="ManualUniverseSelectionModel.cs", label="yield return new Tick\r\n                    {\r\n                        Value = value,\r\n                        Time = time,\r\n                        DataType = MarketDataType.Tick,\r\n                        Symbol = symbol,\r\n                        TickType = TickType.Trade,\r\n                        Quantity = volume,\r\n                        Exchange = ''kraken''\r\n                    };", prediction=0, span="82-91"];
m7_23 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var last = Convert.ToInt64(result.result.last)", span="94-94"];
m7_38 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label=data, span="119-119"];
m7_24 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="last < endUnixTime", span="95-95"];
m7_25 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="url = string.Format(UrlPrototype, symbol.Value, last)", span="97-97"];
m7_26 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="rateGate.WaitToProceed()", span="99-99"];
m7_37 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="data = result.result[symbol.Value].ToObject<List<List<string>>>()", span="117-117"];
m7_27 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="response = client.DownloadString(url)", span="100-100"];
m7_28 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="result = JsonConvert.DeserializeObject<dynamic>(response)", span="101-101"];
m7_29 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var errorCount = 0", span="103-103"];
m7_30 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="result.error.Count != 0 && errorCount < 10", span="104-104"];
m7_31 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="errorCount++", span="106-106"];
m7_35 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="result.error.Count != 0 && errorCount >= 10", span="112-112"];
m7_32 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="rateGate.WaitToProceed()", span="107-107"];
m7_33 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="response = client.DownloadString(url)", span="108-108"];
m7_34 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="result = JsonConvert.DeserializeObject<dynamic>(response)", span="109-109"];
m7_39 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var time = Time.UnixTimeStampToDateTime(Convert.ToDouble(i[2].Split('.')[0]))", span="121-121"];
m7_52 [cluster="QuantConnect.Util.RateGate.RateGate(int, System.TimeSpan)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Util.RateGate.RateGate(int, System.TimeSpan)", span="87-87"];
m7_15 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="throw new Exception(''Error in Kraken API: '' + result.error[0]);", span="66-66"];
m7_51 [cluster="System.Net.WebClient.WebClient()", file="ManualUniverseSelectionModel.cs", label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel", span=""];
m7_2 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="throw new ArgumentException(''The end date must be greater or equal than the start date.'');", span="44-44"];
m7_3 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="resolution != Resolution.Tick", span="47-47"];
m7_0 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="40-40"];
m7_1 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="endUtc < startUtc", span="42-42"];
m7_58 [cluster="string.Split(params char[])", file="ManualUniverseSelectionModel.cs", label="Entry string.Split(params char[])", span="0-0"];
m7_14 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="result.error.Count != 0", span="64-64"];
m7_21 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var volume = Decimal.Parse(i[1])", span="80-80"];
m7_63 [cluster="Unk.ToInt64", file="ManualUniverseSelectionModel.cs", label="Entry Unk.ToInt64", span=""];
m7_48 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="169-169"];
m7_18 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var time = Time.UnixTimeStampToDateTime(Convert.ToDouble(i[2].Split('.')[0]))", span="73-73"];
m7_19 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="time > endUtc", span="74-74"];
m7_20 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var value = Decimal.Parse(i[0])", span="79-79"];
m7_49 [cluster="System.Convert.ToInt64(double)", file="ManualUniverseSelectionModel.cs", label="Entry System.Convert.ToInt64(double)", span="0-0"];
m7_50 [cluster="string.Format(string, object, object)", file="ManualUniverseSelectionModel.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m7_45 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="Exit QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", span="40-40"];
m7_46 [cluster="System.ArgumentException.ArgumentException(string)", file="ManualUniverseSelectionModel.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m7_60 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m7_53 [cluster="System.TimeSpan.FromMinutes(double)", file="ManualUniverseSelectionModel.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m7_57 [cluster="System.Exception.Exception(string)", file="ManualUniverseSelectionModel.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m7_4 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="throw new NotSupportedException(''Only Tick Resolution is supported.'');", span="49-49"];
m7_5 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var startUnixTime = Convert.ToInt64(Time.DateTimeToUnixTimeStamp(startUtc) * 1000000000)", span="52-52"];
m7_6 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var endUnixTime = Convert.ToInt64(Time.DateTimeToUnixTimeStamp(endUtc) * 1000000000)", span="53-53"];
m7_7 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var url = string.Format(UrlPrototype, symbol.Value, startUnixTime)", span="54-54"];
m7_8 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="List<List<string>> data", span="55-55"];
m7_9 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var client = new WebClient()", span="57-57"];
m7_10 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var rateGate = new RateGate(10, TimeSpan.FromMinutes(1))", span="59-59"];
m7_11 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="rateGate.WaitToProceed()", span="61-61"];
m7_12 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var response = client.DownloadString(url)", span="62-62"];
m7_13 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="dynamic result = JsonConvert.DeserializeObject<dynamic>(response)", span="63-63"];
m7_16 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="data = result.result[symbol.Value].ToObject<List<List<string>>>()", span="69-69"];
m7_41 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="var value = Decimal.Parse(i[0])", span="127-127"];
m7_56 [cluster="Unk.>", file="ManualUniverseSelectionModel.cs", label="Entry Unk.>", span=""];
m7_43 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDataDownloader.Get(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, System.DateTime)", file="ManualUniverseSelectionModel.cs", label="yield return new Tick\r\n                        {\r\n                            Value = value,\r\n                            Time = time,\r\n                            DataType = MarketDataType.Tick,\r\n                            Symbol = symbol,\r\n                            TickType = TickType.Trade,\r\n                            Quantity = volume,\r\n                            Exchange = ''kraken''\r\n                        };", span="130-139"];
m7_61 [cluster="decimal.Parse(string)", file="ManualUniverseSelectionModel.cs", label="Entry decimal.Parse(string)", span="0-0"];
m7_17 [cluster="QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", span="36-36"];
m7_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ManualUniverseSelectionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m7_42 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetDatabaseSymbolKey(QuantConnect.Symbol)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDatabaseSymbolKey(QuantConnect.Symbol)", span="212-212"];
m7_44 [cluster="QuantConnect.Securities.MarketHoursDatabase.SetEntry(string, string, QuantConnect.SecurityType, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.SetEntry(string, string, QuantConnect.SecurityType, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone)", span="144-144"];
m7_47 [cluster="System.NotSupportedException.NotSupportedException(string)", file="ManualUniverseSelectionModel.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m7_64 [cluster="Unk.Format", file="ManualUniverseSelectionModel.cs", label="Entry Unk.Format", span=""];
m7_55 [cluster="System.Net.WebClient.DownloadString(string)", file="ManualUniverseSelectionModel.cs", label="Entry System.Net.WebClient.DownloadString(string)", span="0-0"];
m7_54 [cluster="QuantConnect.Util.RateGate.WaitToProceed()", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Util.RateGate.WaitToProceed()", span="181-181"];
m7_62 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m7_59 [cluster="System.Convert.ToDouble(string)", file="ManualUniverseSelectionModel.cs", label="Entry System.Convert.ToDouble(string)", span="0-0"];
m8_29 [cluster="System.DateTime.AddHours(double)", file="Option.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m8_0 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Entry QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", span="26-26"];
m8_1 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="TradeBar newTradeBar = null", span="28-28"];
m8_2 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="var creator = new BaseDataConsolidator(4)", span="29-29"];
m8_3 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="creator.DataConsolidated += (sender, tradeBar) =>\r\n            {\r\n                newTradeBar = tradeBar;\r\n            }", span="30-33"];
m8_6 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="creator.Update(bar1)", span="42-42"];
m8_9 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="creator.Update(bar2)", span="52-52"];
m8_12 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="creator.Update(bar3)", span="61-61"];
m8_15 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="creator.Update(bar4)", span="71-71"];
m8_4 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="var reference = DateTime.Today", span="34-34"];
m8_5 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="var bar1 = new Tick\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference,\r\n                Value = 5,\r\n                Quantity = 10\r\n            }", span="35-41"];
m8_8 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="var bar2 = new Tick\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference.AddHours(1),\r\n                Value = 10,\r\n                Quantity = 20\r\n            }", span="45-51"];
m8_11 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="var bar3 = new Tick\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference.AddHours(2),\r\n                Value = 1,\r\n                Quantity = 10\r\n            }", span="54-60"];
m8_14 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="var bar4 = new Tick\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = reference.AddHours(3),\r\n                Value = 9,\r\n                Quantity = 20\r\n            }", span="64-70"];
m8_18 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.AreEqual(bar1.Time, newTradeBar.Time)", span="75-75"];
m8_19 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.AreEqual(bar1.Value, newTradeBar.Open)", span="76-76"];
m8_7 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.IsNull(newTradeBar)", span="43-43"];
m8_20 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.AreEqual(bar2.Value, newTradeBar.High)", span="77-77"];
m8_10 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.IsNull(newTradeBar)", span="53-53"];
m8_21 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.AreEqual(bar3.Value, newTradeBar.Low)", span="78-78"];
m8_13 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.IsNull(newTradeBar)", span="62-62"];
m8_22 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.AreEqual(bar4.Value, newTradeBar.Close)", span="79-79"];
m8_16 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.IsNotNull(newTradeBar)", span="72-72"];
m8_17 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.AreEqual(''SPY'', newTradeBar.Symbol)", span="74-74"];
m8_23 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Assert.AreEqual(0, newTradeBar.Volume)", span="82-82"];
m8_24 [cluster="QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", file="Option.cs", label="Exit QuantConnect.Tests.Common.Data.BaseDataConsolidatorTests.AggregatesNewTradeBarProperly()", span="26-26"];
m8_25 [cluster="QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(int)", file="Option.cs", label="Entry QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(int)", span="48-48"];
m8_28 [cluster="Unk.IsNull", file="Option.cs", label="Entry Unk.IsNull", span=""];
m8_31 [cluster="Unk.AreEqual", file="Option.cs", label="Entry Unk.AreEqual", span=""];
m8_30 [cluster="Unk.IsNotNull", file="Option.cs", label="Entry Unk.IsNotNull", span=""];
m8_27 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="Option.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", span="32-32"];
m8_26 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Option.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="88-88"];
m8_32 [cluster="lambda expression", file="Option.cs", label="Entry lambda expression", span="30-33"];
m8_33 [cluster="lambda expression", file="Option.cs", label="newTradeBar = tradeBar", span="32-32"];
m8_34 [cluster="lambda expression", file="Option.cs", label="Exit lambda expression", span="30-33"];
m9_0 [cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", span="86-86"];
m9_1 [cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="OptionFilterUniverse.cs", label="_allSymbols = allSymbols", span="88-88"];
m9_2 [cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="OptionFilterUniverse.cs", label="_underlying = underlying", span="89-89"];
m9_3 [cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="OptionFilterUniverse.cs", label="_type = Type.Standard", span="90-90"];
m9_22 [cluster="QuantConnect.Holding.Clone()", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Holding.Clone()", span="108-108"];
m9_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m9_159 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", span="378-378"];
m9_160 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", file="OptionFilterUniverse.cs", label="universe._allSymbols = universe._allSymbols.Where(predicate).ToList()", span="380-380"];
m9_161 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", file="OptionFilterUniverse.cs", label="universe._isDynamic = true", span="381-381"];
m9_162 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", file="OptionFilterUniverse.cs", label="return universe;", span="382-382"];
m9_163 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", span="378-378"];
m9_10 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="OptionFilterUniverse.cs", label="rounding = 5", span="93-93"];
m9_11 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="OptionFilterUniverse.cs", label="string basec, quotec", span="94-94"];
m9_12 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="OptionFilterUniverse.cs", label="Forex.DecomposeCurrencyPair(holding.Symbol, out basec, out quotec)", span="95-95"];
m9_13 [cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="OptionFilterUniverse.cs", label="CurrencySymbol = Forex.CurrencySymbols[quotec]", span="96-96"];
m9_156 [cluster="QuantConnect.Securities.OptionFilterUniverse.System.Collections.IEnumerable.GetEnumerator()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.System.Collections.IEnumerable.GetEnumerator()", span="361-361"];
m9_157 [cluster="QuantConnect.Securities.OptionFilterUniverse.System.Collections.IEnumerable.GetEnumerator()", file="OptionFilterUniverse.cs", label="return _allSymbols.GetEnumerator();", span="363-363"];
m9_158 [cluster="QuantConnect.Securities.OptionFilterUniverse.System.Collections.IEnumerable.GetEnumerator()", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.System.Collections.IEnumerable.GetEnumerator()", span="361-361"];
m9_33 [cluster="QuantConnect.Securities.Option.OptionSymbol.IsStandardContract(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="QuantConnect.Holding", span=""];
m9_130 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="210-210"];
m9_26 [cluster="QuantConnect.Holding.ToString()", file="OptionFilterUniverse.cs", label="return string.Format(''{0}: {1} @ {2}{3} - Market: {2}{4} - Conversion: {5}'', Symbol, Quantity, CurrencySymbol, AveragePrice, MarketPrice, ConversionRate);", span="131-131"];
m9_27 [cluster="QuantConnect.Holding.ToString()", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Holding.ToString()", span="125-125"];
m9_29 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="memoizedMap[dt] = res", span="130-130"];
m9_25 [cluster="QuantConnect.Holding.ToString()", file="OptionFilterUniverse.cs", label="return string.Format(''{0}: {1} @ {2}{3} - Market: {2}{4}'', Symbol, Quantity, CurrencySymbol, AveragePrice, MarketPrice);", span="129-129"];
m9_28 [cluster="string.Format(string, params object[])", file="OptionFilterUniverse.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m9_37 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="return !memoizedIsStandardType(x);", span="140-140"];
m9_39 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="return memoizedIsStandardType(x);", span="142-142"];
m9_34 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="135-148"];
m9_24 [cluster="QuantConnect.Holding.ToString()", file="OptionFilterUniverse.cs", label="ConversionRate == 1.0m", span="127-127"];
m9_30 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="return res;", span="132-132"];
m9_31 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="123-133"];
m9_35 [cluster="lambda expression", file="OptionFilterUniverse.cs", label=_type, span="137-137"];
m9_36 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Type.Weeklys", span="139-139"];
m9_38 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Type.Standard", span="141-141"];
m9_40 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Type.Standard | Type.Weeklys", span="143-143"];
m9_42 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="return false;", span="146-146"];
m9_41 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="return true;", span="144-144"];
m9_43 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="135-148"];
m9_57 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="161-161"];
m9_61 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="ordered[0].ID.Date == x.ID.Date", span="162-162"];
m9_60 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="162-162"];
m9_58 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="x.ID.Date", span="161-161"];
m9_59 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="161-161"];
m9_62 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="162-162"];
m9_72 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="175-175"];
m9_76 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="ordered[0].ID.Date == x.ID.Date", span="176-176"];
m9_75 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="176-176"];
m9_73 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="x.ID.Date", span="175-175"];
m9_74 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="175-175"];
m9_77 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="176-176"];
m9_124 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="208-208"];
m9_127 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="209-209"];
m9_125 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="x.ID.StrikePrice", span="208-208"];
m9_126 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="208-208"];
m9_128 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="x.ID.StrikePrice", span="209-209"];
m9_129 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="209-209"];
m9_131 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="symbol.ID.StrikePrice", span="210-210"];
m9_132 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="210-210"];
m9_4 [cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="OptionFilterUniverse.cs", label="_isDynamic = false", span="91-91"];
m9_5 [cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", span="86-86"];
m9_6 [cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", span="98-98"];
m9_7 [cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="OptionFilterUniverse.cs", label="_type |= Type.Weeklys", span="100-100"];
m9_14 [cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", span="118-118"];
m9_15 [cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="OptionFilterUniverse.cs", label="var memoizedMap = new Dictionary<DateTime, bool>()", span="121-121"];
m9_16 [cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="OptionFilterUniverse.cs", label="Func<Symbol, bool> memoizedIsStandardType = symbol =>\r\n            {\r\n                var dt = symbol.ID.Date;\r\n\r\n                if (memoizedMap.ContainsKey(dt))\r\n                    return memoizedMap[dt];\r\n                var res = OptionSymbol.IsStandardContract(symbol);\r\n                memoizedMap[dt] = res;\r\n\r\n                return res;\r\n            }", span="123-133"];
m9_8 [cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="OptionFilterUniverse.cs", label="return this;", span="101-101"];
m9_9 [cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", span="98-98"];
m9_17 [cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="OptionFilterUniverse.cs", label="var filtered = _allSymbols.Where(x =>\r\n            {\r\n                switch (_type)\r\n                {\r\n                    case Type.Weeklys:\r\n                        return !memoizedIsStandardType(x);\r\n                    case Type.Standard:\r\n                        return memoizedIsStandardType(x);\r\n                    case Type.Standard | Type.Weeklys:\r\n                        return true;\r\n                    default:\r\n                        return false;\r\n                }\r\n            })", span="135-148"];
m9_18 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="83-83"];
m9_19 [cluster="System.Math.Round(decimal, int)", file="OptionFilterUniverse.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m9_20 [cluster="QuantConnect.Holding.Clone()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Holding.Clone()", span="108-108"];
m9_122 [cluster="System.Collections.Generic.List<T>.BinarySearch(T)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.List<T>.BinarySearch(T)", span="0-0"];
m9_148 [cluster="QuantConnect.Securities.OptionFilterUniverse.Contracts(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Contracts(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="343-343"];
m9_151 [cluster="QuantConnect.Securities.OptionFilterUniverse.Contracts(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.Contracts(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="343-343"];
m9_23 [cluster="Unk.ToList", file="OptionFilterUniverse.cs", label="Entry Unk.ToList", span=""];
m9_63 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.BackMonths()", span="172-172"];
m9_64 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="OptionFilterUniverse.cs", label="!_allSymbols.Any()", span="174-174"];
m9_65 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="OptionFilterUniverse.cs", label="return this;", span="174-174"];
m9_66 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="OptionFilterUniverse.cs", label="var ordered = this.OrderBy(x => x.ID.Date).ToList()", span="175-175"];
m9_67 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="OptionFilterUniverse.cs", label="var backMonths = ordered.SkipWhile(x => ordered[0].ID.Date == x.ID.Date)", span="176-176"];
m9_68 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="OptionFilterUniverse.cs", label="_allSymbols = backMonths.ToList()", span="178-178"];
m9_69 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="OptionFilterUniverse.cs", label="return this;", span="179-179"];
m9_70 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.BackMonths()", span="172-172"];
m9_78 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonth()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.BackMonth()", span="186-186"];
m9_79 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonth()", file="OptionFilterUniverse.cs", label="return BackMonths().FrontMonth();", span="188-188"];
m9_80 [cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonth()", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.BackMonth()", span="186-186"];
m9_120 [cluster="System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", span="277-277"];
m9_133 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="303-303"];
m9_134 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="_underlying == null", span="305-305"];
m9_136 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="maxExpiry > Time.MaxTimeSpan", span="310-310"];
m9_138 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="var minExpiryToDate = _underlying.Time.Date + minExpiry", span="312-312"];
m9_139 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="var maxExpiryToDate = _underlying.Time.Date + maxExpiry", span="313-313"];
m9_135 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="return this;", span="307-307"];
m9_137 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="maxExpiry = Time.MaxTimeSpan", span="310-310"];
m9_140 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="var filtered =\r\n                   from symbol in _allSymbols\r\n                   let contract = symbol.ID\r\n                   where contract.Date >= minExpiryToDate\r\n                      && contract.Date <= maxExpiryToDate\r\n                   select symbol", span="315-320"];
m9_141 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="_allSymbols = filtered.ToList()", span="322-322"];
m9_142 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="return this;", span="324-324"];
m9_143 [cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="303-303"];
m9_174 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m9_81 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="197-197"];
m9_82 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="_underlying == null", span="199-199"];
m9_96 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="var indexMinPrice = index + minStrike", span="243-243"];
m9_97 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="var indexMaxPrice = index + maxStrike", span="244-244"];
m9_99 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="minStrike < 0 && maxStrike > 0", span="247-247"];
m9_101 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="minStrike > 0", span="251-251"];
m9_83 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="return this;", span="201-201"];
m9_84 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="_underlying.Time.Date != _uniqueStrikesResolveDate", span="204-204"];
m9_85 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="_uniqueStrikes = _allSymbols\r\n                    .DistinctBy(x => x.ID.StrikePrice)\r\n                    .OrderBy(x => x.ID.StrikePrice)\r\n                    .Select(symbol => symbol.ID.StrikePrice)\r\n                    .ToList()", span="207-211"];
m9_87 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="_isDynamic = true", span="217-217"];
m9_86 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="_uniqueStrikesResolveDate = _underlying.Time.Date", span="213-213"];
m9_88 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="var exactPriceFound = true", span="220-220"];
m9_89 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="var index = _uniqueStrikes.BinarySearch(_underlying.Price)", span="221-221"];
m9_98 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="!exactPriceFound", span="245-245"];
m9_90 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="index < 0", span="227-227"];
m9_92 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="index == ~_uniqueStrikes.Count", span="232-232"];
m9_95 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="index = ~index", span="239-239"];
m9_91 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="exactPriceFound = false", span="230-230"];
m9_93 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="_allSymbols = Enumerable.Empty<Symbol>()", span="235-235"];
m9_94 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="return this;", span="236-236"];
m9_102 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="indexMinPrice--", span="253-253"];
m9_104 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="indexMinPrice < 0", span="258-258"];
m9_106 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="indexMinPrice >= _uniqueStrikes.Count", span="262-262"];
m9_114 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="var minPrice = _uniqueStrikes[indexMinPrice]", span="280-280"];
m9_100 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="indexMaxPrice--", span="249-249"];
m9_103 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="indexMaxPrice--", span="254-254"];
m9_109 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="indexMaxPrice < 0", span="269-269"];
m9_112 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="indexMaxPrice >= _uniqueStrikes.Count", span="275-275"];
m9_115 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="var maxPrice = _uniqueStrikes[indexMaxPrice]", span="281-281"];
m9_105 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="indexMinPrice = 0", span="260-260"];
m9_107 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="_allSymbols = Enumerable.Empty<Symbol>()", span="265-265"];
m9_108 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="return this;", span="266-266"];
m9_110 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="_allSymbols = Enumerable.Empty<Symbol>()", span="272-272"];
m9_111 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="return this;", span="273-273"];
m9_113 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="indexMaxPrice = _uniqueStrikes.Count - 1", span="277-277"];
m9_116 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="var filtered =\r\n                    from symbol in _allSymbols\r\n                    let contract = symbol.ID\r\n                    where contract.StrikePrice >= minPrice\r\n                        && contract.StrikePrice <= maxPrice\r\n                    select symbol", span="283-288"];
m9_117 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="_allSymbols = filtered.ToList()", span="290-290"];
m9_118 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="return this;", span="292-292"];
m9_119 [cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="197-197"];
m9_152 [cluster="QuantConnect.Securities.OptionFilterUniverse.GetEnumerator()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.GetEnumerator()", span="353-353"];
m9_153 [cluster="QuantConnect.Securities.OptionFilterUniverse.GetEnumerator()", file="OptionFilterUniverse.cs", label="return _allSymbols.GetEnumerator();", span="355-355"];
m9_154 [cluster="QuantConnect.Securities.OptionFilterUniverse.GetEnumerator()", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.GetEnumerator()", span="353-353"];
m9_45 [cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", span="158-158"];
m9_46 [cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="OptionFilterUniverse.cs", label="!_allSymbols.Any()", span="160-160"];
m9_47 [cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="OptionFilterUniverse.cs", label="return this;", span="160-160"];
m9_48 [cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="OptionFilterUniverse.cs", label="var ordered = this.OrderBy(x => x.ID.Date).ToList()", span="161-161"];
m9_49 [cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="OptionFilterUniverse.cs", label="var frontMonth = ordered.TakeWhile(x => ordered[0].ID.Date == x.ID.Date)", span="162-162"];
m9_50 [cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="OptionFilterUniverse.cs", label="_allSymbols = frontMonth.ToList()", span="164-164"];
m9_51 [cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="OptionFilterUniverse.cs", label="return this;", span="165-165"];
m9_52 [cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", span="158-158"];
m9_55 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m9_164 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", span="388-388"];
m9_165 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="universe._allSymbols = universe._allSymbols.Select(mapFunc).ToList()", span="390-390"];
m9_166 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="universe._isDynamic = true", span="391-391"];
m9_167 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="return universe;", span="392-392"];
m9_168 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", span="388-388"];
m9_155 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m9_123 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="OptionFilterUniverse.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m9_54 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m9_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m9_144 [cluster="QuantConnect.Securities.OptionFilterUniverse.Contracts(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverse.Contracts(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="332-332"];
m9_147 [cluster="QuantConnect.Securities.OptionFilterUniverse.Contracts(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverse.Contracts(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="332-332"];
m9_21 [cluster="QuantConnect.Holding.Clone()", color=green, community=0, file="OptionFilterUniverse.cs", label="return new Holding\r\n            {\r\n                AveragePrice = AveragePrice,\r\n                Symbol = Symbol,\r\n                Type = Type,\r\n                Quantity = Quantity,\r\n                MarketPrice = MarketPrice,\r\n                ConversionRate  = ConversionRate,\r\n                CurrencySymbol = CurrencySymbol\r\n            };", prediction=1, span="110-119"];
m9_56 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m9_44 [cluster="System.Func<T, TResult>.Invoke(T)", file="OptionFilterUniverse.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_169 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="398-398"];
m9_170 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="OptionFilterUniverse.cs", label="universe._allSymbols = universe._allSymbols.SelectMany(mapFunc).ToList()", span="400-400"];
m9_171 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="OptionFilterUniverse.cs", label="universe._isDynamic = true", span="401-401"];
m9_172 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="OptionFilterUniverse.cs", label="return universe;", span="402-402"];
m9_173 [cluster="QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="398-398"];
m9_121 [cluster="Unk.Select", file="OptionFilterUniverse.cs", label="Entry Unk.Select", span=""];
m9_71 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m9_175 [file="OptionFilterUniverse.cs", label="QuantConnect.Securities.OptionFilterUniverse", span=""];
m9_176 [file="OptionFilterUniverse.cs", label=memoizedMap, span=""];
m9_177 [file="OptionFilterUniverse.cs", label=memoizedIsStandardType, span=""];
m9_178 [file="OptionFilterUniverse.cs", label=ordered, span=""];
m9_179 [file="OptionFilterUniverse.cs", label=ordered, span=""];
m10_23 [cluster="System.TimeSpan.FromMinutes(double)", file="PairsTradingAlphaModel.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m10_63 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="PortfolioSelection == null", span="176-176"];
m10_65 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="Signal == null", span="180-180"];
m10_67 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="PortfolioConstruction == null", span="184-184"];
m10_69 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="Execution == null", span="188-188"];
m10_71 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="RiskManagement == null", span="192-192"];
m10_64 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="throw new Exception(''Framework algorithms must specify a portfolio selection model using the 'PortfolioSelection' property.'');", span="178-178"];
m10_66 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="throw new Exception(''Framework algorithms must specify a signal model using the 'Signal' property.'');", span="182-182"];
m10_68 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="throw new Exception(''Framework algorithms must specify a portfolio construction model using the 'PortfolioConstruction' property'');", span="186-186"];
m10_70 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="throw new Exception(''Framework algorithms must specify an execution model using the 'Execution' property.'');", span="190-190"];
m10_72 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="throw new Exception(''Framework algorithms must specify an risk management model using the 'RiskManagement' property.'');", span="194-194"];
m10_73 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", file="PairsTradingAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.CheckModels()", span="174-174"];
m10_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="var longAsset1 = Insight.Price(_asset1, TimeSpan.FromMinutes(15), InsightDirection.Up)", span="86-86"];
m10_38 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="var lower = new ConstantIndicator<IndicatorDataPoint>(''ct'', 1 - _threshold / 100m)", span="133-133"];
m10_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="var longAsset2 = Insight.Price(_asset2, TimeSpan.FromMinutes(15), InsightDirection.Up)", span="73-73"];
m10_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="Insight.Group(shortAsset1, longAsset2)", span="76-76"];
m10_48 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel)", span="133-133"];
m10_49 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel)", file="PairsTradingAlphaModel.cs", label="PortfolioSelection = portfolioSelection", span="135-135"];
m10_50 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel)", file="PairsTradingAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel)", span="133-133"];
m10_44 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="Execution.OnSecuritiesChanged(this, changes)", span="125-125"];
m10_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="_state != State.ShortRatio && _ratio < _lowerThreshold", span="81-81"];
m10_42 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="Signal.OnSecuritiesChanged(this, changes)", span="123-123"];
m10_47 [cluster="QuantConnect.Algorithm.Framework.INotifiedSecurityChanges.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel", span=""];
m10_54 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="151-151"];
m10_55 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="PairsTradingAlphaModel.cs", label="PortfolioConstruction = portfolioConstruction", span="153-153"];
m10_56 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="PairsTradingAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="151-151"];
m10_26 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="102-102"];
m10_37 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="_upperThreshold = _mean.Times(upper, ''UpperThreshold'')", span="131-131"];
m10_45 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="RiskManagement.OnSecuritiesChanged(this, changes)", span="126-126"];
m10_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="497-497"];
m10_43 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(int)", span="53-53"];
m10_46 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Times(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string)", span="273-273"];
m10_40 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="102-102"];
m10_24 [cluster="QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.IPortfolioSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="31-31"];
m10_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59"];
m10_39 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="_lowerThreshold = _mean.Times(lower, ''LowerThreshold'')", span="134-134"];
m10_0 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", span="60-60"];
m10_1 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="PairsTradingAlphaModel.cs", label="var type = GetType()", span="62-62"];
m10_2 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="PairsTradingAlphaModel.cs", label="var frameworkOnData = type.GetMethod(nameof(OnFrameworkData), new[] {typeof(Slice)})", span="63-63"];
m10_3 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="PairsTradingAlphaModel.cs", label="frameworkOnData.DeclaringType != typeof(QCAlgorithmFramework)", span="64-64"];
m10_4 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.QCAlgorithmFramework()", file="PairsTradingAlphaModel.cs", label="throw new Exception(''Framework algorithms can not override OnFrameworkData(Slice)'');", span="66-66"];
m10_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="var upper = new ConstantIndicator<IndicatorDataPoint>(''ct'', 1 + _threshold / 100m)", span="130-130"];
m10_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="_mean = new ExponentialMovingAverage(500).Of(_ratio)", span="128-128"];
m10_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="59-59"];
m10_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="_state != State.LongRatio && _ratio > _upperThreshold", span="67-67"];
m10_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="_state = State.LongRatio", span="69-69"];
m10_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="_mean?.IsReady != true", span="61-61"];
m10_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="return Enumerable.Empty<Insight>();", span="63-63"];
m10_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="var shortAsset1 = Insight.Price(_asset1, TimeSpan.FromMinutes(15), InsightDirection.Down)", span="72-72"];
m10_22 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", file="PairsTradingAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.PostInitialize()", span="83-83"];
m10_51 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", span="142-142"];
m10_52 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", file="PairsTradingAlphaModel.cs", label="Signal = signal", span="144-144"];
m10_53 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", file="PairsTradingAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetSignal(QuantConnect.Algorithm.Framework.Signals.ISignalModel)", span="142-142"];
m10_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="changes.AddedSecurities", span="104-104"];
m10_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="PairsTradingAlphaModel.cs", label="added.Symbol != _asset1 && added.Symbol != _asset2", prediction=2, span="107-107"];
m10_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="added.Symbol == _asset1", span="112-112"];
m10_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="_asset1Price = algorithm.Identity(added.Symbol)", span="114-114"];
m10_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="_asset2Price = algorithm.Identity(added.Symbol)", span="118-118"];
m10_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="_ratio == null", span="122-122"];
m10_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="_asset1Price != null && _asset2Price != null", span="125-125"];
m10_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="PairsTradingAlphaModel.cs", label="_ratio = _asset1Price.Over(_asset2Price)", span="127-127"];
m10_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="return new[] {shortAsset1, longAsset2};", span="77-77"];
m10_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="_state = State.ShortRatio", span="83-83"];
m10_60 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="169-169"];
m10_61 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="PairsTradingAlphaModel.cs", label="RiskManagement = riskManagement", span="171-171"];
m10_62 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="PairsTradingAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="169-169"];
m10_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="var shortAsset2 = Insight.Price(_asset2, TimeSpan.FromMinutes(15), InsightDirection.Down)", span="87-87"];
m10_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="Insight.Group(longAsset1, shortAsset2)", span="90-90"];
m10_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="return new[] {longAsset1, shortAsset2};", span="91-91"];
m10_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="return Enumerable.Empty<Insight>();", span="94-94"];
m10_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="PairsTradingAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="59-59"];
m10_57 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="PairsTradingAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="160-160"];
m10_58 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="PairsTradingAlphaModel.cs", label="Execution = execution", span="162-162"];
m10_59 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="PairsTradingAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="160-160"];
m10_74 [file="PairsTradingAlphaModel.cs", label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span=""];
m12_7 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="63-63"];
m12_8 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_timeZone = timeZone", span="65-65"];
m12_9 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_dateRule = dateRule", span="66-66"];
m12_10 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_timeRule = timeRule", span="67-67"];
m12_11 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_selector = selector", span="68-68"];
m12_12 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_settings = settings", span="69-69"];
m12_13 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_initializer = initializer", span="70-70"];
m12_14 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="63-63"];
m12_38 [cluster="ScheduledUniverse.cstr", file="ScheduledUniverseSelectionModel.cs", label="Entry ScheduledUniverse.cstr", span=""];
m12_35 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ScheduledUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="118-118"];
m12_36 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ScheduledUniverseSelectionModel.cs", label="yield return new ScheduledUniverse(\r\n                _timeZone ?? algorithm.TimeZone,\r\n                _dateRule,\r\n                _timeRule,\r\n                _selector,\r\n                _settings ?? algorithm.UniverseSettings,\r\n                _initializer ?? algorithm.SecurityInitializer\r\n            );", span="120-127"];
m12_37 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ScheduledUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="118-118"];
m12_24 [cluster="PyObject.TryConvertToDelegate<T>(out T)", file="ScheduledUniverseSelectionModel.cs", label="Entry PyObject.TryConvertToDelegate<T>(out T)", span="1071-1071"];
m12_0 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="45-45"];
m12_1 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_dateRule = dateRule", span="47-47"];
m12_2 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_timeRule = timeRule", span="48-48"];
m12_3 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_selector = selector", span="49-49"];
m12_4 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_settings = settings", span="50-50"];
m12_5 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_initializer = initializer", span="51-51"];
m12_6 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, System.Func<System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="45-45"];
m12_25 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="101-101"];
m12_26 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="Func<DateTime, Symbol[]> func", span="103-103"];
m12_27 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="selector.TryConvertToDelegate(out func)", span="104-104"];
m12_28 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_timeZone = timeZone", span="105-105"];
m12_29 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_dateRule = dateRule", span="106-106"];
m12_30 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_timeRule = timeRule", span="107-107"];
m12_32 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_settings = settings", span="109-109"];
m12_33 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_initializer = initializer", span="110-110"];
m12_31 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_selector = func", span="108-108"];
m12_34 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(DateTimeZone, QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="101-101"];
m12_15 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="81-81"];
m12_16 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="Func<DateTime, Symbol[]> func", span="83-83"];
m12_17 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="selector.TryConvertToDelegate(out func)", span="84-84"];
m12_18 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_dateRule = dateRule", span="85-85"];
m12_19 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_timeRule = timeRule", span="86-86"];
m12_21 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_settings = settings", span="88-88"];
m12_22 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_initializer = initializer", span="89-89"];
m12_20 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="_selector = func", span="87-87"];
m12_23 [cluster="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ScheduledUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel.ScheduledUniverseSelectionModel(QuantConnect.Scheduling.IDateRule, QuantConnect.Scheduling.ITimeRule, PyObject, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="81-81"];
m12_39 [file="ScheduledUniverseSelectionModel.cs", label="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel", span=""];
m13_39 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m13_33 [cluster="System.TimeSpan.FromMinutes(double)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m13_38 [cluster="System.Math.Round(double)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.Math.Round(double)", span="0-0"];
m13_35 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken)", span="0-0"];
m13_42 [cluster="System.DateTime.AddMinutes(double)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m13_34 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m13_47 [cluster="System.Exception.Exception(string)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m13_36 [cluster="System.GC.GetTotalMemory(bool)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.GC.GetTotalMemory(bool)", span="0-0"];
m13_44 [cluster="string.IsNullOrEmpty(string)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m13_0 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="58-58"];
m13_1 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="withinCustomLimits = withinCustomLimits ?? (() => null)", span="61-61"];
m13_3 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="var end = DateTime.Now + timeSpan", span="64-64"];
m13_5 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="memoryCap *= 1024 * 1024", span="68-68"];
m13_8 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="var task = Task.Factory.StartNew(codeBlock, CancelToken)", span="75-75"];
m13_25 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="message = ''Execution Security Error: Operation timed out - '' + timeSpan.TotalMinutes + '' minutes max. Check for recursive loops.''", span="114-114"];
m13_2 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="var message = ''''", span="63-63"];
m13_20 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="var possibleMessage = withinCustomLimits()", span="102-102"];
m13_24 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="task.IsCompleted == false && message == ''''", span="112-112"];
m13_27 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="message != ''''", span="118-118"];
m13_29 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Log.Error(''Security.ExecuteWithTimeLimit(): '' + message)", span="121-121"];
m13_30 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="throw new Exception(message);", span="122-122"];
m13_4 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="var memoryLogger = DateTime.Now + TimeSpan.FromMinutes(1)", span="65-65"];
m13_9 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="!task.IsCompleted && DateTime.Now < end", span="77-77"];
m13_14 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="DateTime.Now > memoryLogger", span="90-90"];
m13_6 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Cancellation = new CancellationTokenSource()", span="71-71"];
m13_11 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="memoryUsed > memoryCap", span="81-81"];
m13_12 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="GC.GetTotalMemory(true) > memoryCap", span="83-83"];
m13_13 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="message = ''Execution Security Error: Memory Usage Maxed Out - '' + Math.Round(Convert.ToDouble(memoryCap / (1024 * 1024))) + ''MB max.''", span="85-85"];
m13_15 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="memoryUsed > (memoryCap * 0.8)", span="92-92"];
m13_7 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="CancelToken = Cancellation.Token", span="72-72"];
m13_31 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="return task.IsCompleted;", span="124-124"];
m13_10 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="var memoryUsed = GC.GetTotalMemory(false)", span="79-79"];
m13_18 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Log.Trace(DateTime.Now.ToString(''u'') + '' Isolator.ExecuteWithTimeLimit(): Used: '' + Math.Round(Convert.ToDouble(memoryUsed / (1024 * 1024))))", span="97-97"];
m13_16 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="memoryUsed = GC.GetTotalMemory(true)", span="94-94"];
m13_17 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Log.Error(''Execution Security Error: Memory usage over 80% capacity.'')", span="95-95"];
m13_19 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="memoryLogger = DateTime.Now.AddMinutes(1)", span="98-98"];
m13_21 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="!string.IsNullOrEmpty(possibleMessage)", span="103-103"];
m13_22 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="message = possibleMessage", span="105-105"];
m13_23 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Thread.Sleep(100)", span="109-109"];
m13_26 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Log.Trace(''Isolator.ExecuteWithTimeLimit(): '' + message)", span="115-115"];
m13_28 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Cancellation.Cancel()", span="120-120"];
m13_32 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Exit QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="58-58"];
m13_40 [cluster="System.DateTime.ToString(string)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m13_37 [cluster="System.Convert.ToDouble(long)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.Convert.ToDouble(long)", span="0-0"];
m13_41 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="112-112"];
m13_45 [cluster="System.Threading.Thread.Sleep(int)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m13_46 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m13_51 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="134-134"];
m13_52 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="return ExecuteWithTimeLimit(timeSpan, null, codeBlock, memoryCap);", span="136-136"];
m13_53 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="UniverseSelectionModelPythonWrapper.cs", label="Exit QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="134-134"];
m13_43 [cluster="System.Func<TResult>.Invoke()", file="UniverseSelectionModelPythonWrapper.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m13_48 [cluster="lambda expression", file="UniverseSelectionModelPythonWrapper.cs", label="Entry lambda expression", span="61-61"];
m13_49 [cluster="lambda expression", file="UniverseSelectionModelPythonWrapper.cs", label=null, span="61-61"];
m13_50 [cluster="lambda expression", file="UniverseSelectionModelPythonWrapper.cs", label="Exit lambda expression", span="61-61"];
m13_54 [file="UniverseSelectionModelPythonWrapper.cs", label="QuantConnect.Isolator", span=""];
n26 -> n23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
n2 -> n4  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
n13 -> n16  [color=darkseagreen4, key=1, label=insights, style=dashed];
n21 -> n23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m0_19 -> m0_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m0_20 -> m0_22  [color=darkseagreen4, key=1, label=model, style=dashed];
m0_22 -> m0_25  [color=darkseagreen4, key=1, label=insight, style=dashed];
m0_7 -> m0_12  [color=darkseagreen4, key=1, label="PyObject[]", style=dashed];
m0_7 -> m0_13  [color=darkseagreen4, key=1, label="PyObject[]", style=dashed];
m0_11 -> m0_13  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_11 -> m0_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_15 -> m0_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_35 -> m0_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel", style=dashed];
m0_35 -> m0_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel", style=dashed];
m0_35 -> m0_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel", style=dashed];
m1_25 -> m1_35  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m1_25 -> m1_36  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m1_20 -> m1_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m1_21 -> m1_23  [color=darkseagreen4, key=1, label=security, style=dashed];
m1_2 -> m1_11  [color=darkseagreen4, key=1, label="double?", style=dashed];
m1_2 -> m1_13  [color=darkseagreen4, key=1, label="double?", style=dashed];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m1_42 -> m1_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m1_42 -> m1_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m1_42 -> m1_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m1_42 -> m1_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m1_42 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m1_42 -> m1_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m1_42 -> m1_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_30 -> m2_32  [color=darkseagreen4, key=1, label=added, style=dashed];
m2_32 -> m2_37  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_11 -> m2_17  [color=darkseagreen4, key=1, label=insights, style=dashed];
m2_11 -> m2_20  [color=darkseagreen4, key=1, label=insights, style=dashed];
m2_11 -> m2_22  [color=darkseagreen4, key=1, label=insights, style=dashed];
m2_12 -> m2_15  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_12 -> m2_16  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_12 -> m2_17  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_12 -> m2_18  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_12 -> m2_19  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_12 -> m2_20  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_14 -> m2_17  [color=darkseagreen4, key=1, label=insightPeriod, style=dashed];
m2_14 -> m2_20  [color=darkseagreen4, key=1, label=insightPeriod, style=dashed];
m2_43 -> m2_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel", style=dashed];
m2_43 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.EmaCrossAlphaModel", style=dashed];
m3_103 -> m3_105  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_103 -> m3_108  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_103 -> m3_117  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_103 -> m3_119  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_98 -> m3_101  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_71 -> m3_74  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m3_72 -> m3_81  [color=darkseagreen4, key=1, label=csv, style=dashed];
m3_141 -> m3_139  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m4_8 -> m4_19  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_15 -> m4_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_17 -> m4_28  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>", style=dashed];
m4_36 -> m4_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m4_36 -> m4_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m4_36 -> m4_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m4_36 -> m4_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Future.Future", style=dashed];
m4_37 -> m4_19  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_38 -> m4_19  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m4_39 -> m4_28  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Securities.FutureFilterUniverse, QuantConnect.Securities.FutureFilterUniverse>", style=dashed];
m5_12 -> m5_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m6_37 -> m6_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_37 -> m6_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_29 -> m6_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_29 -> m6_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m6_29 -> m6_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m6_32 -> m6_34  [color=darkseagreen4, key=1, label=removed, style=dashed];
m6_12 -> m6_20  [color=darkseagreen4, key=1, label=sd, style=dashed];
m6_15 -> m6_18  [color=darkseagreen4, key=1, label=normalizedSignal, style=dashed];
m6_22 -> m6_24  [color=darkseagreen4, key=1, label=insight, style=dashed];
m6_14 -> m6_20  [color=darkseagreen4, key=1, label=direction, style=dashed];
m6_51 -> m6_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m6_51 -> m6_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m6_51 -> m6_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel", style=dashed];
m6_52 -> m6_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m6_52 -> m6_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.MacdAlphaModel.SymbolData", style=dashed];
m7_22 -> m7_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m7_23 -> m7_38  [color=darkseagreen4, key=1, label=universeSettings, style=dashed];
m7_38 -> m7_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_24 -> m7_38  [color=darkseagreen4, key=1, label=securityInitializer, style=dashed];
m7_27 -> m7_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_27 -> m7_30  [color=darkseagreen4, key=1, label=grp, style=dashed];
m7_27 -> m7_38  [color=darkseagreen4, key=1, label=grp, style=dashed];
m7_28 -> m7_36  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_28 -> m7_30  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_28 -> m7_35  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_28 -> m7_44  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_29 -> m7_31  [color=darkseagreen4, key=1, label=errorCount, style=dashed];
m7_29 -> m7_35  [color=darkseagreen4, key=1, label=errorCount, style=dashed];
m7_29 -> m7_36  [color=darkseagreen4, key=1, label=market, style=dashed];
m7_30 -> m7_32  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m7_30 -> m7_35  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m7_30 -> m7_36  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m7_31 -> m7_35  [color=darkseagreen4, key=1, label=errorCount, style=dashed];
m7_31 -> m7_31  [color=darkseagreen4, key=1, label=errorCount, style=dashed];
m7_33 -> m7_35  [color=darkseagreen4, key=1, label=symbolString, style=dashed];
m7_34 -> m7_36  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_34 -> m7_44  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_51 -> m7_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel", style=dashed];
m7_51 -> m7_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel", style=dashed];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m7_0 -> m7_19  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_0 -> m7_40  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m7_4 -> m7_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.UniverseSettings", style=dashed];
m7_6 -> m7_24  [color=darkseagreen4, key=1, label=endUnixTime, style=dashed];
m7_10 -> m7_26  [color=darkseagreen4, key=1, label=rateGate, style=dashed];
m7_10 -> m7_32  [color=darkseagreen4, key=1, label=rateGate, style=dashed];
m7_13 -> m7_15  [color=darkseagreen4, key=1, label=result, style=dashed];
m8_2 -> m8_6  [color=darkseagreen4, key=1, label=creator, style=dashed];
m8_2 -> m8_9  [color=darkseagreen4, key=1, label=creator, style=dashed];
m8_2 -> m8_12  [color=darkseagreen4, key=1, label=creator, style=dashed];
m8_2 -> m8_15  [color=darkseagreen4, key=1, label=creator, style=dashed];
m8_5 -> m8_18  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m8_5 -> m8_19  [color=darkseagreen4, key=1, label=bar1, style=dashed];
m8_8 -> m8_20  [color=darkseagreen4, key=1, label=bar2, style=dashed];
m8_11 -> m8_21  [color=darkseagreen4, key=1, label=bar3, style=dashed];
m8_14 -> m8_22  [color=darkseagreen4, key=1, label=bar4, style=dashed];
m8_33 -> m8_7  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m8_33 -> m8_10  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m8_33 -> m8_13  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m8_33 -> m8_16  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m8_33 -> m8_17  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m8_33 -> m8_18  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m8_33 -> m8_19  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m8_33 -> m8_20  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m8_33 -> m8_21  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m8_33 -> m8_22  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m8_33 -> m8_23  [color=darkseagreen4, key=1, label=newTradeBar, style=dashed];
m9_159 -> m9_162  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_33 -> m9_5  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m9_33 -> m9_6  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m9_33 -> m9_14  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m9_33 -> m9_24  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m9_33 -> m9_25  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m9_33 -> m9_26  [color=darkseagreen4, key=1, label="QuantConnect.Holding", style=dashed];
m9_25 -> m9_27  [color=darkseagreen4, key=1, label=dt, style=dashed];
m9_28 -> m9_30  [color=darkseagreen4, key=1, label=res, style=dashed];
m9_34 -> m9_37  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m9_34 -> m9_39  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m9_24 -> m9_28  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m9_4 -> m9_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m9_4 -> m9_14  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m9_4 -> m9_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m9_4 -> m9_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityHolding", style=dashed];
m9_15 -> m9_26  [color=darkseagreen4, key=1, label=memoizedMap, style=dashed];
m9_15 -> m9_27  [color=darkseagreen4, key=1, label=memoizedMap, style=dashed];
m9_16 -> m9_25  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m9_16 -> m9_28  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m9_16 -> m9_37  [color=darkseagreen4, key=1, label=memoizedIsStandardType, style=dashed];
m9_16 -> m9_39  [color=darkseagreen4, key=1, label=memoizedIsStandardType, style=dashed];
m9_17 -> m9_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_66 -> m9_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_66 -> m9_76  [color=darkseagreen4, key=1, label=ordered, style=dashed];
m9_67 -> m9_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_133 -> m9_136  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m9_81 -> m9_99  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_81 -> m9_101  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_96 -> m9_102  [color=darkseagreen4, key=1, label=indexMinPrice, style=dashed];
m9_96 -> m9_104  [color=darkseagreen4, key=1, label=indexMinPrice, style=dashed];
m9_96 -> m9_106  [color=darkseagreen4, key=1, label=indexMinPrice, style=dashed];
m9_97 -> m9_100  [color=darkseagreen4, key=1, label=indexMaxPrice, style=dashed];
m9_97 -> m9_103  [color=darkseagreen4, key=1, label=indexMaxPrice, style=dashed];
m9_97 -> m9_109  [color=darkseagreen4, key=1, label=indexMaxPrice, style=dashed];
m9_97 -> m9_112  [color=darkseagreen4, key=1, label=indexMaxPrice, style=dashed];
m9_85 -> m9_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_85 -> m9_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_85 -> m9_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_88 -> m9_98  [color=darkseagreen4, key=1, label=exactPriceFound, style=dashed];
m9_89 -> m9_92  [color=darkseagreen4, key=1, label=index, style=dashed];
m9_91 -> m9_98  [color=darkseagreen4, key=1, label=exactPriceFound, style=dashed];
m9_102 -> m9_102  [color=darkseagreen4, key=1, label=indexMinPrice, style=dashed];
m9_102 -> m9_104  [color=darkseagreen4, key=1, label=indexMinPrice, style=dashed];
m9_102 -> m9_106  [color=darkseagreen4, key=1, label=indexMinPrice, style=dashed];
m9_100 -> m9_100  [color=darkseagreen4, key=1, label=indexMaxPrice, style=dashed];
m9_100 -> m9_109  [color=darkseagreen4, key=1, label=indexMaxPrice, style=dashed];
m9_100 -> m9_112  [color=darkseagreen4, key=1, label=indexMaxPrice, style=dashed];
m9_103 -> m9_103  [color=darkseagreen4, key=1, label=indexMaxPrice, style=dashed];
m9_103 -> m9_109  [color=darkseagreen4, key=1, label=indexMaxPrice, style=dashed];
m9_103 -> m9_112  [color=darkseagreen4, key=1, label=indexMaxPrice, style=dashed];
m9_48 -> m9_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_48 -> m9_61  [color=darkseagreen4, key=1, label=ordered, style=dashed];
m9_49 -> m9_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_164 -> m9_167  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_169 -> m9_172  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_11  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_12  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_46  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_51  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_64  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_65  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_69  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_82  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_83  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_84  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_92  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_94  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_106  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_108  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_111  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_112  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_118  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_134  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_135  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_142  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_153  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_175 -> m9_157  [color=darkseagreen4, key=1, label="QuantConnect.Securities.OptionFilterUniverse", style=dashed];
m9_176 -> m9_26  [color=darkseagreen4, key=1, label=memoizedMap, style=dashed];
m9_176 -> m9_27  [color=darkseagreen4, key=1, label=memoizedMap, style=dashed];
m9_177 -> m9_37  [color=darkseagreen4, key=1, label=memoizedIsStandardType, style=dashed];
m9_177 -> m9_39  [color=darkseagreen4, key=1, label=memoizedIsStandardType, style=dashed];
m9_178 -> m9_61  [color=darkseagreen4, key=1, label=ordered, style=dashed];
m9_179 -> m9_76  [color=darkseagreen4, key=1, label=ordered, style=dashed];
m10_16 -> m10_18  [color=darkseagreen4, key=1, label=longAsset1, style=dashed];
m10_16 -> m10_19  [color=darkseagreen4, key=1, label=longAsset1, style=dashed];
m10_11 -> m10_13  [color=darkseagreen4, key=1, label=longAsset2, style=dashed];
m10_47 -> m10_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel", style=dashed];
m10_47 -> m10_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel", style=dashed];
m10_47 -> m10_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel", style=dashed];
m10_47 -> m10_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel", style=dashed];
m10_47 -> m10_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel", style=dashed];
m10_47 -> m10_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel", style=dashed];
m10_47 -> m10_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel", style=dashed];
m10_47 -> m10_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.PairsTradingAlphaModel", style=dashed];
m10_41 -> m10_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m10_41 -> m10_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m10_41 -> m10_45  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m10_1 -> m10_5  [color=darkseagreen4, key=1, label=type, style=dashed];
m10_10 -> m10_12  [color=darkseagreen4, key=1, label=shortAsset1, style=dashed];
m10_10 -> m10_13  [color=darkseagreen4, key=1, label=shortAsset1, style=dashed];
m10_27 -> m10_29  [color=darkseagreen4, key=1, label=added, style=dashed];
m10_17 -> m10_19  [color=darkseagreen4, key=1, label=shortAsset2, style=dashed];
m10_74 -> m10_28  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_44  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_69  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m10_74 -> m10_71  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m12_25 -> m12_27  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_15 -> m12_17  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_39 -> m12_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ScheduledUniverseSelectionModel", style=dashed];
m13_3 -> m13_9  [color=darkseagreen4, key=1, label=end, style=dashed];
m13_5 -> m13_11  [color=darkseagreen4, key=1, label=long, style=dashed];
m13_5 -> m13_12  [color=darkseagreen4, key=1, label=long, style=dashed];
m13_5 -> m13_15  [color=darkseagreen4, key=1, label=long, style=dashed];
m13_8 -> m13_24  [color=darkseagreen4, key=1, label=task, style=dashed];
m13_8 -> m13_31  [color=darkseagreen4, key=1, label=task, style=dashed];
m13_25 -> m13_27  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_25 -> m13_29  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_25 -> m13_30  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_2 -> m13_24  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_2 -> m13_27  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_2 -> m13_29  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_2 -> m13_30  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_4 -> m13_14  [color=darkseagreen4, key=1, label=memoryLogger, style=dashed];
m13_13 -> m13_27  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_13 -> m13_29  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_13 -> m13_30  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_10 -> m13_15  [color=darkseagreen4, key=1, label=memoryUsed, style=dashed];
m13_10 -> m13_18  [color=darkseagreen4, key=1, label=memoryUsed, style=dashed];
m13_16 -> m13_18  [color=darkseagreen4, key=1, label=memoryUsed, style=dashed];
m13_22 -> m13_27  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_22 -> m13_29  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_22 -> m13_30  [color=darkseagreen4, key=1, label=message, style=dashed];
m13_54 -> m13_28  [color=darkseagreen4, key=1, label="QuantConnect.Isolator", style=dashed];
m13_54 -> m13_52  [color=darkseagreen4, key=1, label="QuantConnect.Isolator", style=dashed];
}
