digraph  {
n218 [label=listPerformance, span=""];
n219 [label=equity, span=""];
n220 [label=dtPrevious, span=""];
n221 [label=listBenchmark, span=""];
n0 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label="Entry QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", span="89-89"];
n1 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label="var dictionary = new SortedDictionary<DateTime, decimal>()", span="91-91"];
n2 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label=points, span="94-94"];
n11 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary()", span="0-0"];
n4 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label="!dictionary.ContainsKey(x)", span="97-97"];
n5 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label="dictionary.Add(x, point.y)", span="99-99"];
n6 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label="dictionary[x] = point.y", span="103-103"];
n9 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label="return dictionary;", span="111-111"];
n3 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label="var x = Time.UnixTimeStampToDateTime(point.x)", span="96-96"];
n7 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label=Exception, span="107-107"];
n12 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="69-69"];
n13 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n14 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n8 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label="Log.Error(''Statistics.ChartPointToDictionary(): '' + err.Message)", span="109-109"];
n15 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
n10 [cluster="QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", label="Exit QuantConnect.Statistics.Statistics.ChartPointToDictionary(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>)", span="89-89"];
n16 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="Entry QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", span="124-124"];
n17 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="double riskFreeRate = 0", span="127-127"];
n28 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal profitLossValue = 0, runningCash = startingCash", span="138-138"];
n45 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="performance = ChartPointToDictionary(pointsPerformance)", span="159-159"];
n46 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="equity = ChartPointToDictionary(pointsEquity)", span="160-160"];
n60 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="algoCompoundingPerformance = CompoundingAnnualPerformance(startingCash, equity.Values.LastOrDefault(), (decimal)fractionOfYears)", span="210-210"];
n61 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="finalBenchmarkCash = ((Benchmark.Values.Last() - Benchmark.Values.First()) / Benchmark.Values.First()) * startingCash", span="211-211"];
n62 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="benchCompoundingPerformance = CompoundingAnnualPerformance(startingCash, finalBenchmarkCash, (decimal)fractionOfYears)", span="212-212"];
n65 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="profitLoss.Keys", span="222-222"];
n66 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="profitLossValue = profitLoss[closedTrade]", span="224-224"];
n84 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="profitLoss.Keys.Count > 0", span="267-267"];
n88 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="totalNetProfit = (equity.Values.LastOrDefault() / startingCash) - 1", span="272-272"];
n108 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="statistics = new Dictionary<string, string>() { \r\n                    { ''Total Trades'', Math.Round(totalTrades, 0).ToString() },\r\n                    { ''Average Win'', Math.Round(averageWin * 100, 2) + ''%''  },\r\n                    { ''Average Loss'', Math.Round(averageLoss * 100, 2) + ''%'' },\r\n                    { ''Compounding Annual Return'', Math.Round(algoCompoundingPerformance * 100, 3) + ''%'' },\r\n                    { ''Drawdown'', (DrawdownPercent(equity, 3) * 100) + ''%'' },\r\n                    { ''Expectancy'', Math.Round((winRate * averageWinRatio) - (lossRate), 3).ToString() },\r\n                    { ''Net Profit'', Math.Round(totalNetProfit * 100, 3) + ''%''},\r\n                    { ''Sharpe Ratio'', Math.Round(SharpeRatio(listPerformance, riskFreeRate), 3).ToString() },\r\n                    { ''Loss Rate'', Math.Round(lossRate * 100) + ''%'' },\r\n                    { ''Win Rate'', Math.Round(winRate * 100) + ''%'' }, \r\n                    { ''Profit-Loss Ratio'', profitLossRatioHuman },\r\n                    { ''Alpha'', Math.Round(Alpha(listPerformance, listBenchmark, riskFreeRate), 3).ToString() },\r\n                    { ''Beta'', Math.Round(Beta(listPerformance, listBenchmark), 3).ToString() },\r\n                    { ''Annual Standard Deviation'', Math.Round(AnnualStandardDeviation(listPerformance, tradingDaysPerYear), 3).ToString() },\r\n                    { ''Annual Variance'', Math.Round(AnnualVariance(listPerformance, tradingDaysPerYear), 3).ToString() },\r\n                    { ''Information Ratio'', Math.Round(InformationRatio(listPerformance, listBenchmark), 3).ToString() },\r\n                    { ''Tracking Error'', Math.Round(TrackingError(listPerformance, listBenchmark), 3).ToString() },\r\n                    { ''Treynor Ratio'', Math.Round(TreynorRatio(listPerformance, listBenchmark, riskFreeRate), 3).ToString() }\r\n                }", span="316-335"];
n18 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal totalTrades = 0", span="128-128"];
n19 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal totalWins = 0", span="129-129"];
n20 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal totalLosses = 0", span="130-130"];
n21 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal averageWin = 0", span="131-131"];
n22 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal averageLoss = 0", span="132-132"];
n104 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var profitLossRatio = Statistics.ProfitLossRatio(averageWin, averageLoss)", span="311-311"];
n23 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal averageWinRatio = 0", span="133-133"];
n24 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal winRate = 0", span="134-134"];
n25 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal lossRate = 0", span="135-135"];
n26 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal totalNetProfit = 0", span="136-136"];
n27 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="double fractionOfYears = 1", span="137-137"];
n29 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal algoCompoundingPerformance = 0", span="139-139"];
n78 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualWinTotal[year] += profitLossValue / runningCash", span="246-246"];
n80 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualLossTotal[year] += profitLossValue / runningCash", span="251-251"];
n81 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="runningCash += profitLossValue", span="255-255"];
n30 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal finalBenchmarkCash = 0", span="140-140"];
n31 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="decimal benchCompoundingPerformance = 0", span="141-141"];
n32 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var years = new List<int>()", span="142-142"];
n33 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var annualTrades = new SortedDictionary<int, int>()", span="143-143"];
n113 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n68 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="!years.Contains(year)", span="228-228"];
n69 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="years.Add(year)", span="231-231"];
n82 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label=years, span="259-259"];
n34 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var annualWins = new SortedDictionary<int, int>()", span="144-144"];
n70 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualTrades.Add(year, 0)", span="232-232"];
n75 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualTrades[year]++", span="240-240"];
n85 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="totalTrades = annualTrades.Values.Sum()", span="269-269"];
n35 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var annualLosses = new SortedDictionary<int, int>()", span="145-145"];
n71 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualWins.Add(year, 0)", span="233-233"];
n77 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualWins[year]++", span="245-245"];
n86 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="totalWins = annualWins.Values.Sum()", span="270-270"];
n36 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var annualLossTotal = new SortedDictionary<int, decimal>()", span="146-146"];
n73 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualLosses.Add(year, 0)", span="235-235"];
n79 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualLosses[year]++", span="250-250"];
n87 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="totalLosses = annualLosses.Values.Sum()", span="271-271"];
n37 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var annualWinTotal = new SortedDictionary<int, decimal>()", span="147-147"];
n74 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualLossTotal.Add(year, 0)", span="236-236"];
n83 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualNetProfit[year] = (annualWinTotal[year] + annualLossTotal[year])", span="261-261"];
n95 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="averageLoss = annualLossTotal.Values.Sum() / totalLosses", span="290-290"];
n38 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var annualNetProfit = new SortedDictionary<int, decimal>()", span="148-148"];
n72 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="annualWinTotal.Add(year, 0)", span="234-234"];
n91 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="averageWin = annualWinTotal.Values.Sum() / totalWins", span="281-281"];
n39 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var statistics = new Dictionary<string, string>()", span="149-149"];
n40 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var dtPrevious = new DateTime()", span="150-150"];
n114 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n41 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var listPerformance = new List<double>()", span="151-151"];
n115 [cluster="System.DateTime.DateTime()", label="Entry System.DateTime.DateTime()", span="0-0"];
n48 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="Benchmark.Keys.ToList().ForEach(dt =>\r\n                {\r\n                    if (dt >= equity.Keys.FirstOrDefault().AddDays(-1) && dt < equity.Keys.LastOrDefault())\r\n                    {\r\n                        if (Benchmark.ContainsKey(dtPrevious))\r\n                        {\r\n                            var deltaBenchmark = (Benchmark[dt] - Benchmark[dtPrevious]) / Benchmark[dtPrevious];\r\n                            listBenchmark.Add((double)(deltaBenchmark));\r\n                        }\r\n                        else\r\n                        {\r\n                            listBenchmark.Add(0);\r\n                        }\r\n                        dtPrevious = dt;\r\n                    }\r\n                })", span="164-179"];
n42 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var listBenchmark = new List<double>()", span="152-152"];
n47 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="performance.Values.ToList().ForEach(i => listPerformance.Add((double)(i / 100)))", span="161-161"];
n144 [cluster="lambda expression", label="listPerformance.Add((double)(i / 100))", span="161-161"];
n49 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="listPerformance.Count < listBenchmark.Count", span="182-182"];
n50 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="listPerformance.Add(0)", span="184-184"];
n52 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="listPerformance.Count > listBenchmark.Count", span="187-187"];
n43 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var equity = new SortedDictionary<DateTime, decimal>()", span="153-153"];
n150 [cluster="lambda expression", label="listBenchmark.Add((double)(deltaBenchmark))", span="171-171"];
n151 [cluster="lambda expression", label="listBenchmark.Add(0)", span="175-175"];
n53 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="listBenchmark.Add(0)", span="189-189"];
n44 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var performance = new SortedDictionary<DateTime, decimal>()", span="154-154"];
n147 [cluster="lambda expression", label="dt >= equity.Keys.FirstOrDefault().AddDays(-1) && dt < equity.Keys.LastOrDefault()", span="166-166"];
n57 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="fractionOfYears = (equity.Keys.LastOrDefault() - equity.Keys.FirstOrDefault()).TotalDays / 365", span="201-201"];
n116 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
n117 [cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0"];
n143 [cluster="lambda expression", label="Entry lambda expression", span="161-161"];
n146 [cluster="lambda expression", label="Entry lambda expression", span="164-179"];
n148 [cluster="lambda expression", label="Benchmark.ContainsKey(dtPrevious)", span="168-168"];
n149 [cluster="lambda expression", label="var deltaBenchmark = (Benchmark[dt] - Benchmark[dtPrevious]) / Benchmark[dtPrevious]", span="170-170"];
n51 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="Log.Error(''Statistics.Generate(): Padded Performance'')", span="185-185"];
n118 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n55 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label=Exception, span="193-193"];
n54 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="Log.Error(''Statistics.Generate(): Padded Benchmark'')", span="190-190"];
n56 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="Log.Error(''Statistics.Generate.Dic-Array Convert: '' + err.Message)", span="195-195"];
n58 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label=Exception, span="203-203"];
n119 [cluster="System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.LastOrDefault<TSource>()", span="0-0"];
n120 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
n59 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="Log.Error(''Statistics.Generate(): Fraction of Years: '' + err.Message)", span="205-205"];
n121 [cluster="QuantConnect.Statistics.Statistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", label="Entry QuantConnect.Statistics.Statistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", span="433-433"];
n122 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
n123 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
n63 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label=Exception, span="214-214"];
n64 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="Log.Error(''Statistics.Generate(): Compounding: '' + err.Message)", span="216-216"];
n67 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var year = closedTrade.Year", span="227-227"];
n76 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="profitLossValue > 0", span="243-243"];
n124 [cluster="System.Collections.Generic.List<T>.Contains(T)", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
n102 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label=Exception, span="306-306"];
n125 [cluster="System.Collections.Generic.IEnumerable<int>.Sum()", label="Entry System.Collections.Generic.IEnumerable<int>.Sum()", span="0-0"];
n97 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="totalTrades == 0", span="293-293"];
n100 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="winRate = Math.Round(totalWins / totalTrades, 5)", span="300-300"];
n101 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="lossRate = Math.Round(totalLosses / totalTrades, 5)", span="301-301"];
n89 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="totalWins == 0", span="275-275"];
n92 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="totalLosses == 0", span="283-283"];
n90 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="averageWin = 0", span="277-277"];
n96 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="averageWinRatio = Math.Abs(averageWin / averageLoss)", span="291-291"];
n126 [cluster="System.Collections.Generic.IEnumerable<decimal>.Sum()", label="Entry System.Collections.Generic.IEnumerable<decimal>.Sum()", span="0-0"];
n93 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="averageLoss = 0", span="285-285"];
n94 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="averageWinRatio = 0", span="286-286"];
n127 [cluster="System.Math.Abs(decimal)", label="Entry System.Math.Abs(decimal)", span="0-0"];
n98 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="winRate = 0", span="295-295"];
n99 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="lossRate = 0", span="296-296"];
n128 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
n103 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="Log.Error(''Statistics.RunOrders(): Second Half: '' + err.Message)", span="308-308"];
n105 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="var profitLossRatioHuman = profitLossRatio.ToString()", span="312-312"];
n129 [cluster="QuantConnect.Statistics.Statistics.ProfitLossRatio(decimal, decimal)", label="Entry QuantConnect.Statistics.Statistics.ProfitLossRatio(decimal, decimal)", span="350-350"];
n106 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="profitLossRatio == -1", span="313-313"];
n130 [cluster="decimal.ToString()", label="Entry decimal.ToString()", span="0-0"];
n107 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="profitLossRatioHuman = ''0''", span="313-313"];
n109 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label=Exception, span="337-337"];
n111 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="return statistics;", span="341-341"];
n131 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="Entry QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", span="362-362"];
n132 [cluster="QuantConnect.Statistics.Statistics.SharpeRatio(System.Collections.Generic.List<double>, double)", label="Entry QuantConnect.Statistics.Statistics.SharpeRatio(System.Collections.Generic.List<double>, double)", span="534-534"];
n133 [cluster="System.Math.Round(double, int)", label="Entry System.Math.Round(double, int)", span="0-0"];
n134 [cluster="double.ToString()", label="Entry double.ToString()", span="0-0"];
n135 [cluster="System.Math.Round(decimal)", label="Entry System.Math.Round(decimal)", span="0-0"];
n136 [cluster="QuantConnect.Statistics.Statistics.Alpha(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, double)", label="Entry QuantConnect.Statistics.Statistics.Alpha(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, double)", span="496-496"];
n137 [cluster="QuantConnect.Statistics.Statistics.Beta(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", label="Entry QuantConnect.Statistics.Statistics.Beta(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", span="484-484"];
n138 [cluster="QuantConnect.Statistics.Statistics.AnnualStandardDeviation(System.Collections.Generic.List<double>, double)", label="Entry QuantConnect.Statistics.Statistics.AnnualStandardDeviation(System.Collections.Generic.List<double>, double)", span="472-472"];
n139 [cluster="QuantConnect.Statistics.Statistics.AnnualVariance(System.Collections.Generic.List<double>, double)", label="Entry QuantConnect.Statistics.Statistics.AnnualVariance(System.Collections.Generic.List<double>, double)", span="457-457"];
n140 [cluster="QuantConnect.Statistics.Statistics.InformationRatio(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", label="Entry QuantConnect.Statistics.Statistics.InformationRatio(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", span="522-522"];
n141 [cluster="QuantConnect.Statistics.Statistics.TrackingError(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", label="Entry QuantConnect.Statistics.Statistics.TrackingError(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", span="508-508"];
n142 [cluster="QuantConnect.Statistics.Statistics.TreynorRatio(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, double)", label="Entry QuantConnect.Statistics.Statistics.TreynorRatio(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, double)", span="546-546"];
n110 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="Log.Error(''QC.Statistics.RunOrders(): '' + err.Message + err.InnerException + err.TargetSite)", span="339-339"];
n112 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", label="Exit QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", span="124-124"];
n145 [cluster="lambda expression", label="Exit lambda expression", span="161-161"];
n152 [cluster="lambda expression", label="dtPrevious = dt", span="177-177"];
n153 [cluster="lambda expression", label="Exit lambda expression", span="164-179"];
n154 [cluster="System.DateTime.AddDays(double)", label="Entry System.DateTime.AddDays(double)", span="0-0"];
n155 [cluster="QuantConnect.Statistics.Statistics.ProfitLossRatio(decimal, decimal)", label="averageLoss == 0", span="352-352"];
n157 [cluster="QuantConnect.Statistics.Statistics.ProfitLossRatio(decimal, decimal)", label="return Math.Round(averageWin / Math.Abs(averageLoss), 2);", span="353-353"];
n156 [cluster="QuantConnect.Statistics.Statistics.ProfitLossRatio(decimal, decimal)", label="return -1;", span="352-352"];
n158 [cluster="QuantConnect.Statistics.Statistics.ProfitLossRatio(decimal, decimal)", label="Exit QuantConnect.Statistics.Statistics.ProfitLossRatio(decimal, decimal)", span="350-350"];
n159 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="var dd = 0m", span="364-364"];
n160 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="var lPrices = equityOverTime.Values.ToList()", span="367-367"];
n167 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="dd = Math.Round(Math.Abs(lDrawdowns.Min()), rounding)", span="375-375"];
n161 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="var lDrawdowns = new List<decimal>()", span="368-368"];
n162 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="var high = lPrices[0]", span="369-369"];
n163 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label=lPrices, span="370-370"];
n166 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="lDrawdowns.Add((price/high) - 1)", span="373-373"];
n164 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="price >= high", span="372-372"];
n165 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="high = price", span="372-372"];
n168 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label=Exception, span="377-377"];
n170 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="return dd;", span="381-381"];
n172 [cluster="System.Collections.Generic.IEnumerable<decimal>.Min()", label="Entry System.Collections.Generic.IEnumerable<decimal>.Min()", span="0-0"];
n169 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="Log.Error(''Statistics.DrawdownPercentage(): '' + err.Message)", span="379-379"];
n171 [cluster="QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="Exit QuantConnect.Statistics.Statistics.DrawdownPercent(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", span="362-362"];
n173 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="Entry QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", span="390-390"];
n174 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="var priceMaximum = 0", span="393-393"];
n177 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="var lPrices = equityOverTime.Values.ToList()", span="399-399"];
n186 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="return Math.Round((lPrices[previousMaximum] - lPrices[previousMinimum]), rounding);", span="416-416"];
n175 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="var previousMinimum = 0", span="394-394"];
n180 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="lPrices[id] >= lPrices[priceMaximum]", span="403-403"];
n182 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="(lPrices[priceMaximum] - lPrices[id]) > (lPrices[previousMaximum] - lPrices[previousMinimum])", span="409-409"];
n183 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="previousMaximum = priceMaximum", span="411-411"];
n176 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="var previousMaximum = 0", span="395-395"];
n178 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="var id = 0", span="401-401"];
n179 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="id < lPrices.Count", span="401-401"];
n181 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="priceMaximum = id", span="405-405"];
n184 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="previousMinimum = id", span="412-412"];
n185 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="id++", span="401-401"];
n187 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label=Exception, span="418-418"];
n188 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="Log.Error(''Statistics.DrawdownValue(): '' + err.Message)", span="420-420"];
n189 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="return 0;", span="422-422"];
n190 [cluster="QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", label="Exit QuantConnect.Statistics.Statistics.DrawdownValue(System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, int)", span="390-390"];
n191 [cluster="QuantConnect.Statistics.Statistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", label="return (decimal)Math.Pow((double)finalCapital / (double)startingCapital, (1 / (double)years)) - 1;", span="435-435"];
n192 [cluster="QuantConnect.Statistics.Statistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", label="Exit QuantConnect.Statistics.Statistics.CompoundingAnnualPerformance(decimal, decimal, decimal)", span="433-433"];
n193 [cluster="System.Math.Pow(double, double)", label="Entry System.Math.Pow(double, double)", span="0-0"];
n194 [cluster="QuantConnect.Statistics.Statistics.AnnualPerformance(System.Collections.Generic.List<double>, double)", label="Entry QuantConnect.Statistics.Statistics.AnnualPerformance(System.Collections.Generic.List<double>, double)", span="445-445"];
n195 [cluster="QuantConnect.Statistics.Statistics.AnnualPerformance(System.Collections.Generic.List<double>, double)", label="return performance.Average() * tradingDaysPerYear;", span="447-447"];
n196 [cluster="QuantConnect.Statistics.Statistics.AnnualPerformance(System.Collections.Generic.List<double>, double)", label="Exit QuantConnect.Statistics.Statistics.AnnualPerformance(System.Collections.Generic.List<double>, double)", span="445-445"];
n197 [cluster="System.Collections.Generic.IEnumerable<double>.Average()", label="Entry System.Collections.Generic.IEnumerable<double>.Average()", span="0-0"];
n198 [cluster="QuantConnect.Statistics.Statistics.AnnualVariance(System.Collections.Generic.List<double>, double)", label="return (performance.Variance())*tradingDaysPerYear;", span="459-459"];
n199 [cluster="QuantConnect.Statistics.Statistics.AnnualVariance(System.Collections.Generic.List<double>, double)", label="Exit QuantConnect.Statistics.Statistics.AnnualVariance(System.Collections.Generic.List<double>, double)", span="457-457"];
n200 [cluster="Unk.Variance", label="Entry Unk.Variance", span=""];
n201 [cluster="QuantConnect.Statistics.Statistics.AnnualStandardDeviation(System.Collections.Generic.List<double>, double)", color=red, community=0, label="10: return Math.Sqrt(performance.Variance() * tradingDaysPerYear);", span="474-474"];
n202 [cluster="QuantConnect.Statistics.Statistics.AnnualStandardDeviation(System.Collections.Generic.List<double>, double)", label="Exit QuantConnect.Statistics.Statistics.AnnualStandardDeviation(System.Collections.Generic.List<double>, double)", span="472-472"];
n203 [cluster="Unk.Sqrt", label="Entry Unk.Sqrt", span=""];
n204 [cluster="QuantConnect.Statistics.Statistics.Beta(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", label="return algoPerformance.Covariance(benchmarkPerformance) / benchmarkPerformance.Variance();", span="486-486"];
n205 [cluster="QuantConnect.Statistics.Statistics.Beta(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", label="Exit QuantConnect.Statistics.Statistics.Beta(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", span="484-484"];
n206 [cluster="Unk.Covariance", label="Entry Unk.Covariance", span=""];
n207 [cluster="QuantConnect.Statistics.Statistics.Alpha(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, double)", label="return AnnualPerformance(algoPerformance) - (riskFreeRate + Beta(algoPerformance, benchmarkPerformance) * (AnnualPerformance(benchmarkPerformance) - riskFreeRate));", span="498-498"];
n208 [cluster="QuantConnect.Statistics.Statistics.Alpha(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, double)", label="Exit QuantConnect.Statistics.Statistics.Alpha(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, double)", span="496-496"];
n209 [cluster="QuantConnect.Statistics.Statistics.TrackingError(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", label="return Math.Sqrt(AnnualVariance(algoPerformance) - 2 * Correlation.Pearson(algoPerformance, benchmarkPerformance) * AnnualStandardDeviation(algoPerformance) * AnnualStandardDeviation(benchmarkPerformance) + AnnualVariance(benchmarkPerformance));", span="510-510"];
n210 [cluster="QuantConnect.Statistics.Statistics.TrackingError(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", label="Exit QuantConnect.Statistics.Statistics.TrackingError(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", span="508-508"];
n211 [cluster="Unk.Pearson", label="Entry Unk.Pearson", span=""];
n212 [cluster="QuantConnect.Statistics.Statistics.InformationRatio(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", label="return (AnnualPerformance(algoPerformance) - AnnualPerformance(benchmarkPerformance)) / (TrackingError(algoPerformance, benchmarkPerformance));", span="524-524"];
n213 [cluster="QuantConnect.Statistics.Statistics.InformationRatio(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", label="Exit QuantConnect.Statistics.Statistics.InformationRatio(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>)", span="522-522"];
n214 [cluster="QuantConnect.Statistics.Statistics.SharpeRatio(System.Collections.Generic.List<double>, double)", label="return (AnnualPerformance(algoPerformance) - riskFreeRate) / (AnnualStandardDeviation(algoPerformance));", span="536-536"];
n215 [cluster="QuantConnect.Statistics.Statistics.SharpeRatio(System.Collections.Generic.List<double>, double)", label="Exit QuantConnect.Statistics.Statistics.SharpeRatio(System.Collections.Generic.List<double>, double)", span="534-534"];
n216 [cluster="QuantConnect.Statistics.Statistics.TreynorRatio(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, double)", label="return (AnnualPerformance(algoPerformance) - riskFreeRate) / (Beta(algoPerformance, benchmarkPerformance));", span="548-548"];
n217 [cluster="QuantConnect.Statistics.Statistics.TreynorRatio(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, double)", label="Exit QuantConnect.Statistics.Statistics.TreynorRatio(System.Collections.Generic.List<double>, System.Collections.Generic.List<double>, double)", span="546-546"];
m1_29 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="ExtensionsTests.cs", label="Log.Error(''Security.ExecuteWithTimeLimit(): '' + message)", span="132-132"];
m1_43 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ExtensionsTests.cs", label="int quantity = (int)Math.Floor(Portfolio.Cash / data[_symbol].Close)", span="118-118"];
m1_20 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="ExtensionsTests.cs", label="Log.Error(''Execution Security Error: Memory usage over 80% capacity.'')", span="115-115"];
m1_16 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="ExtensionsTests.cs", label="message = ''Execution Security Error: Memory Usage Maxed Out - '' + Math.Round(Convert.ToDouble(memoryCap / (1024 * 1024))) + ''MB max.''", span="105-105"];
m1_33 [cluster="System.TimeSpan.FromMinutes(double)", file="ExtensionsTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m1_30 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="ExtensionsTests.cs", label="throw new Exception(message);", span="133-133"];
m1_31 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="ExtensionsTests.cs", label="return task.IsCompleted;", span="135-135"];
m1_32 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="ExtensionsTests.cs", label="Exit QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="83-83"];
m1_34 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken)", file="ExtensionsTests.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken)", span="0-0"];
m1_35 [cluster="System.GC.GetTotalMemory(bool)", file="ExtensionsTests.cs", label="Entry System.GC.GetTotalMemory(bool)", span="0-0"];
m1_26 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="ExtensionsTests.cs", label="Log.Trace(''Isolator.ExecuteWithTimeLimit(): '' + message)", span="126-126"];
m1_19 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="ExtensionsTests.cs", label="memoryUsed = GC.GetTotalMemory(true)", span="114-114"];
m1_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="185-185"];
m1_27 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="ExtensionsTests.cs", label="message != ''''", span="129-129"];
m1_72 [cluster="QuantConnect.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.BaseData)", file="ExtensionsTests.cs", label="Entry QuantConnect.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.BaseData)", span="186-186"];
m1_73 [cluster="QuantConnect.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.BaseData)", file="ExtensionsTests.cs", label="var bar = (TradeBar)baseData", span="188-188"];
m1_74 [cluster="QuantConnect.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.BaseData)", file="ExtensionsTests.cs", label="return new TradeBar\r\n            {\r\n                Close = 2 * bar.Close,\r\n                DataType = bar.DataType,\r\n                High = 2 * bar.High,\r\n                Low = 2 * bar.Low,\r\n                Open = 2 * bar.Open,\r\n                Symbol = bar.Symbol,\r\n                Time = bar.Time,\r\n                Value = 2 * bar.Value,\r\n                Volume = 2 * bar.Volume,\r\n                Period = bar.Period\r\n            };", span="189-201"];
m1_75 [cluster="QuantConnect.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.BaseData)", file="ExtensionsTests.cs", label="Exit QuantConnect.IndicatorSuiteAlgorithm.SelectorDoubleTradeBar(QuantConnect.Data.BaseData)", span="186-186"];
m1_44 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ExtensionsTests.cs", label="Order(_symbol, quantity)", span="121-121"];
m1_38 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ExtensionsTests.cs", label="Entry QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="110-110"];
m1_39 [cluster="System.DateTime.ToString(string)", file="ExtensionsTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m1_41 [cluster="System.DateTime.AddMinutes(double)", file="ExtensionsTests.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m1_40 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="ExtensionsTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m1_42 [cluster="System.Threading.Thread.Sleep(int)", file="ExtensionsTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m1_45 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ExtensionsTests.cs", label="Debug(''Purchased SPY on '' + Time.ToShortDateString())", span="124-124"];
m1_46 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ExtensionsTests.cs", label="Exit QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="110-110"];
m1_5 [cluster="QuantConnect.IndicatorSuiteAlgorithm.Initialize()", file="ExtensionsTests.cs", label="AddData<Bitcoin>(''BTC'')", span="54-54"];
m1_6 [cluster="QuantConnect.IndicatorSuiteAlgorithm.Initialize()", color=green, community=0, file="ExtensionsTests.cs", label="12: _indicators = new Indicators\r\n            {\r\n                BB = BB(_symbol, 20, 1, MovingAverageType.Simple, Resolution.Daily),\r\n                RSI = RSI(_symbol, 14, MovingAverageType.Simple, Resolution.Daily),\r\n                ATR = ATR(_symbol, 14, MovingAverageType.Simple, Resolution.Daily),\r\n                EMA = EMA(_symbol, 14, Resolution.Daily),\r\n                SMA = SMA(_symbol, 14, Resolution.Daily),\r\n                MACD = MACD(_symbol, 12, 26, 9, MovingAverageType.Simple, Resolution.Daily),\r\n                AROON = AROON(_symbol, 20, Resolution.Daily),\r\n                MOM = MOM(_symbol, 20, Resolution.Daily),\r\n                MOMP = MOMP(_symbol, 20, Resolution.Daily),\r\n                STD = STD(_symbol, 20, Resolution.Daily),\r\n                MIN = MIN(_symbol, 14, Resolution.Daily), // by default if the symbol is a tradebar type then it will be the min of the low property\r\n                MAX = MAX(_symbol, 14, Resolution.Daily)  // by default if the symbol is a tradebar type then it will be the max of the high property\r\n            }", span="57-71"];
m1_7 [cluster="QuantConnect.IndicatorSuiteAlgorithm.Initialize()", color=green, community=0, file="ExtensionsTests.cs", label="12: _selectorIndicators = new Indicators\r\n            {\r\n                BB = BB(_symbol, 20, 1, MovingAverageType.Simple, Resolution.Daily, SelectorLow),\r\n                RSI = RSI(_symbol, 14, MovingAverageType.Simple, Resolution.Daily, SelectorLow),\r\n                EMA = EMA(_symbol, 14, Resolution.Daily, SelectorLow),\r\n                SMA = SMA(_symbol, 14, Resolution.Daily, SelectorLow),\r\n                MACD = MACD(_symbol, 12, 26, 9, MovingAverageType.Simple, Resolution.Daily, SelectorLow),\r\n                MOM = MOM(_symbol, 20, Resolution.Daily, SelectorLow),\r\n                MOMP = MOMP(_symbol, 20, Resolution.Daily, SelectorLow),\r\n                STD = STD(_symbol, 20, Resolution.Daily, SelectorLow),\r\n                MIN = MIN(_symbol, 14, Resolution.Daily, baseData => ((TradeBar)baseData).High), // this will find the 14 day min of the high property\r\n                MAX = MAX(_symbol, 14, Resolution.Daily, baseData => ((TradeBar)baseData).Low),  // this will find the 14 day max of the low property\r\n\r\n                // ATR and AROON are special in that they accept a TradeBar instance instead of a decimal, we could easily project and/or transform the input TradeBar\r\n                // before it gets sent to the ATR/AROON indicator, here we use a function that will multiply the input trade bar by a factor of two\r\n                ATR = ATR(_symbol, 14, MovingAverageType.Simple, Resolution.Daily, SelectorDoubleTradeBar),\r\n                AROON = AROON(_symbol, 20, Resolution.Daily, SelectorDoubleTradeBar)\r\n            }", span="80-97"];
m1_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(string, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="198-198"];
m1_8 [cluster="QuantConnect.IndicatorSuiteAlgorithm.Initialize()", color=green, community=0, file="ExtensionsTests.cs", label="38: _rsiCustom = RSI(_customSymbol, 14, MovingAverageType.Simple, Resolution.Daily)", span="100-100"];
m1_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="489-489"];
m1_9 [cluster="QuantConnect.IndicatorSuiteAlgorithm.Initialize()", color=green, community=0, file="ExtensionsTests.cs", label="22: _minCustom = MIN(_customSymbol, 14, Resolution.Daily)", span="101-101"];
m1_10 [cluster="QuantConnect.IndicatorSuiteAlgorithm.Initialize()", color=green, community=0, file="ExtensionsTests.cs", label="12: _maxCustom = MAX(_customSymbol, 14, Resolution.Daily)", span="102-102"];
m1_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="438-438"];
m1_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="669-669"];
m1_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(string, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BB(string, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="333-333"];
m1_17 [cluster="QuantConnect.IndicatorSuiteAlgorithm.Indicators.Indicators()", file="ExtensionsTests.cs", label="Entry QuantConnect.IndicatorSuiteAlgorithm.Indicators.Indicators()", span="159-159"];
m1_11 [cluster="QuantConnect.IndicatorSuiteAlgorithm.Initialize()", file="ExtensionsTests.cs", label="Exit QuantConnect.IndicatorSuiteAlgorithm.Initialize()", span="43-43"];
m1_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(string, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(string, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="229-229"];
m1_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(string, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIN(string, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="170-170"];
m1_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="124-124"];
m1_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="514-514"];
m1_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(string, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(string, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="88-88"];
m1_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(string, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(string, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="105-105"];
m1_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="815-815"];
m1_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="217-217"];
m1_51 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Entry QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", span="129-129"];
m1_52 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="!_indicators.BB.IsReady", span="131-131"];
m1_53 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="return;", span="131-131"];
m1_54 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''BB'', ''Price'', _price)", span="133-133"];
m1_55 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''BB'', _indicators.BB.UpperBand, _indicators.BB.MiddleBand, _indicators.BB.LowerBand)", span="134-134"];
m1_56 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''RSI'', _indicators.RSI)", span="136-136"];
m1_57 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''RSI-BTC'', _rsiCustom)", span="139-139"];
m1_58 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''ATR'', _indicators.ATR)", span="141-141"];
m1_59 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''STD'', _indicators.STD)", span="143-143"];
m1_60 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''AROON'', _indicators.AROON.AroonUp, _indicators.AROON.AroonDown)", span="145-145"];
m1_61 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''MOM'', _indicators.MOM)", span="147-147"];
m1_62 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''MOMP'', _indicators.MOMP)", span="148-148"];
m1_63 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''MACD'', ''Price'', _price)", span="150-150"];
m1_64 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''MACD'', _indicators.MACD.Fast, _indicators.MACD.Slow, _indicators.MACD.Signal)", span="151-151"];
m1_65 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Plot(''Averages'', _indicators.EMA, _indicators.SMA)", span="153-153"];
m1_66 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", file="ExtensionsTests.cs", label="Exit QuantConnect.IndicatorSuiteAlgorithm.OnEndOfDay()", span="129-129"];
m1_4 [cluster="QuantConnect.IndicatorSuiteAlgorithm.Initialize()", file="ExtensionsTests.cs", label="AddSecurity(SecurityType.Equity, _symbol, Resolution.Minute)", span="51-51"];
m1_0 [cluster="QuantConnect.Isolator.ResetCancelToken()", file="ExtensionsTests.cs", label="Entry QuantConnect.Isolator.ResetCancelToken()", span="69-69"];
m1_1 [cluster="QuantConnect.Isolator.ResetCancelToken()", file="ExtensionsTests.cs", label="cancellation = new CancellationTokenSource()", span="71-71"];
m1_2 [cluster="QuantConnect.Isolator.ResetCancelToken()", file="ExtensionsTests.cs", label="cancelToken = cancellation.Token", span="72-72"];
m1_3 [cluster="QuantConnect.Isolator.ResetCancelToken()", file="ExtensionsTests.cs", label="Exit QuantConnect.Isolator.ResetCancelToken()", span="69-69"];
m1_36 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Bitcoin)", file="ExtensionsTests.cs", label="Entry QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Bitcoin)", span="106-106"];
m1_69 [cluster="QuantConnect.IndicatorSuiteAlgorithm.SelectorLow(QuantConnect.Data.BaseData)", file="ExtensionsTests.cs", label="Entry QuantConnect.IndicatorSuiteAlgorithm.SelectorLow(QuantConnect.Data.BaseData)", span="178-178"];
m1_70 [cluster="QuantConnect.IndicatorSuiteAlgorithm.SelectorLow(QuantConnect.Data.BaseData)", file="ExtensionsTests.cs", label="return ((TradeBar)baseData).Low;", span="180-180"];
m1_71 [cluster="QuantConnect.IndicatorSuiteAlgorithm.SelectorLow(QuantConnect.Data.BaseData)", file="ExtensionsTests.cs", label="Exit QuantConnect.IndicatorSuiteAlgorithm.SelectorLow(QuantConnect.Data.BaseData)", span="178-178"];
m1_37 [cluster="QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Bitcoin)", file="ExtensionsTests.cs", label="Exit QuantConnect.IndicatorSuiteAlgorithm.OnData(QuantConnect.Bitcoin)", span="106-106"];
m1_49 [cluster="System.DateTime.ToShortDateString()", file="ExtensionsTests.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m1_47 [cluster="System.Math.Floor(decimal)", file="ExtensionsTests.cs", label="Entry System.Math.Floor(decimal)", span="0-0"];
m1_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="ExtensionsTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="170-170"];
m1_76 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="ExtensionsTests.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="92-92"];
m1_77 [file="ExtensionsTests.cs", label="QuantConnect.IndicatorSuiteAlgorithm", span=""];
m2_150 [cluster="System.Collections.Generic.List<T>.List()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_67 [cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection.OptionChainUniverseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.BaseData)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverseDataCollection.OptionChainUniverseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.BaseData)", span="52-52"];
m2_68 [cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection.FuturesChainUniverseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverseDataCollection.FuturesChainUniverseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="46-46"];
m2_69 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="57-57"];
m2_59 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="237-237"];
m2_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="packet.Add(clone)", span="101-101"];
m2_80 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="173-173"];
m2_81 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="SubscriptionSynchronizer.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m2_83 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="!allData.TryGetValue(datum.Symbol, out symbolData)", span="294-294"];
m2_85 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="allData[datum.Symbol] = symbolData", span="297-297"];
m2_99 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="return allData;", span="325-325"];
m2_82 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", span=""];
m2_84 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="symbolData = new SymbolData(datum.Symbol)", span="296-296"];
m2_86 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="datum.DataType", span="300-300"];
m2_89 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="symbolData.Custom = datum", span="304-304"];
m2_92 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="symbolData.TradeBar = (TradeBar)datum", span="309-309"];
m2_95 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="symbolData.Ticks.Add((Tick)datum)", span="314-314"];
m2_97 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="symbolData.AuxilliaryData.Add(datum)", span="318-318"];
m2_88 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="symbolData.Type = SubscriptionType.Custom", span="303-303"];
m2_91 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="symbolData.Type = SubscriptionType.TradeBar", span="308-308"];
m2_94 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="symbolData.Type = SubscriptionType.Tick", span="313-313"];
m2_87 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="MarketDataType.Base", span="302-302"];
m2_90 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="MarketDataType.TradeBar", span="307-307"];
m2_93 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="MarketDataType.Tick", span="312-312"];
m2_96 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="MarketDataType.Auxiliary", span="317-317"];
m2_98 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="throw new ArgumentOutOfRangeException();", span="322-322"];
m2_100 [cluster="QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.CreateDynamicDataDictionary(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="288-288"];
m2_102 [cluster="QuantConnect.Data.Slice.SymbolData.SymbolData(QuantConnect.Symbol)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Slice.SymbolData.SymbolData(QuantConnect.Symbol)", span="407-407"];
m2_146 [cluster="QuantConnect.Data.Slice.SymbolData.SymbolData(QuantConnect.Symbol)", file="SubscriptionSynchronizer.cs", label="Symbol = symbol", span="409-409"];
m2_147 [cluster="QuantConnect.Data.Slice.SymbolData.SymbolData(QuantConnect.Symbol)", file="SubscriptionSynchronizer.cs", label="Ticks = new List<Tick>()", span="410-410"];
m2_148 [cluster="QuantConnect.Data.Slice.SymbolData.SymbolData(QuantConnect.Symbol)", file="SubscriptionSynchronizer.cs", label="AuxilliaryData = new List<BaseData>()", span="411-411"];
m2_149 [cluster="QuantConnect.Data.Slice.SymbolData.SymbolData(QuantConnect.Symbol)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.SymbolData.SymbolData(QuantConnect.Symbol)", span="407-407"];
m2_66 [cluster="QuantConnect.Data.Slice.Get<T>(QuantConnect.Symbol)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.Get<T>(QuantConnect.Symbol)", span="251-251"];
m2_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var underlying = current != null ? current.Underlying : null", span="126-126"];
m2_64 [cluster="Unk.ExchangeRoundDownInTimeZone", file="SubscriptionSynchronizer.cs", label="Entry Unk.ExchangeRoundDownInTimeZone", span=""];
m2_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.Add(QuantConnect.Data.BaseData)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.Add(QuantConnect.Data.BaseData)", span="91-91"];
m2_113 [cluster="Unk.Where", file="SubscriptionSynchronizer.cs", label="Entry Unk.Where", span=""];
m2_75 [cluster="QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol, out dynamic)", file="SubscriptionSynchronizer.cs", label="data = symbolData.GetData()", span="279-279"];
m2_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.Sync(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone, QuantConnect.Securities.CashBook, out System.DateTime)", file="SubscriptionSynchronizer.cs", label="var offsetProvider = subscription.OffsetProvider", span="92-92"];
m2_105 [cluster="QuantConnect.Data.Slice.CreateTicksCollection(QuantConnect.Data.Market.Ticks)", file="SubscriptionSynchronizer.cs", label="ticks != null", span="333-333"];
m2_106 [cluster="QuantConnect.Data.Slice.CreateTicksCollection(QuantConnect.Data.Market.Ticks)", file="SubscriptionSynchronizer.cs", label="return ticks;", span="333-333"];
m2_107 [cluster="QuantConnect.Data.Slice.CreateTicksCollection(QuantConnect.Data.Market.Ticks)", file="SubscriptionSynchronizer.cs", label="ticks = new Ticks(Time)", span="334-334"];
m2_108 [cluster="QuantConnect.Data.Slice.CreateTicksCollection(QuantConnect.Data.Market.Ticks)", file="SubscriptionSynchronizer.cs", label="_data.Value.Values.Select(x => x.GetData()).OfType<List<Tick>>().Where(x => x.Count != 0)", span="335-335"];
m2_109 [cluster="QuantConnect.Data.Slice.CreateTicksCollection(QuantConnect.Data.Market.Ticks)", file="SubscriptionSynchronizer.cs", label="ticks[listTicks[0].Symbol] = listTicks", span="337-337"];
m2_110 [cluster="QuantConnect.Data.Slice.CreateTicksCollection(QuantConnect.Data.Market.Ticks)", file="SubscriptionSynchronizer.cs", label="return ticks;", span="339-339"];
m2_111 [cluster="QuantConnect.Data.Slice.CreateTicksCollection(QuantConnect.Data.Market.Ticks)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.CreateTicksCollection(QuantConnect.Data.Market.Ticks)", span="331-331"];
m2_3 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="157-157"];
m2_25 [cluster="lambda expression", color=green, community=0, file="SubscriptionSynchronizer.cs", label="35: Exit lambda expression", span="183-183"];
m2_12 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="_quoteBars = CreateCollection<QuoteBars, QuoteBar>(quoteBars)", span="189-189"];
m2_20 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="SubscriptionSynchronizer.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m2_24 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="CreateDynamicDataDictionary(data)", span="183-183"];
m2_45 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.GetData()", span="233-233"];
m2_11 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="_bars = CreateCollection<TradeBars, TradeBar>(tradeBars)", span="188-188"];
m2_14 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="_splits = CreateCollection<Splits, Split>(splits)", span="193-193"];
m2_17 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="_symbolChangedEvents = CreateCollection<SymbolChangedEvents, SymbolChangedEvent>(symbolChanges)", span="196-196"];
m2_44 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="233-233"];
m2_13 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="_optionChains = CreateCollection<OptionChains, OptionChain>(optionChains)", span="190-190"];
m2_46 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="233-233"];
m2_15 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="_dividends = CreateCollection<Dividends, Dividend>(dividends)", span="194-194"];
m2_16 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="_delistings = CreateCollection<Delistings, Delisting>(delistings)", span="195-195"];
m2_18 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", span="176-176"];
m2_23 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="183-183"];
m2_27 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Slice.Get<T>()", span="225-225"];
m2_28 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SubscriptionSynchronizer.cs", label="Lazy<object> dictionary", span="228-228"];
m2_29 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SubscriptionSynchronizer.cs", label="!_dataByType.TryGetValue(typeof(T), out dictionary)", span="229-229"];
m2_33 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SubscriptionSynchronizer.cs", label="_dataByType[typeof(T)] = dictionary", span="240-240"];
m2_35 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.Get<T>()", span="225-225"];
m2_37 [cluster="Lazy<object>.cstr", file="SubscriptionSynchronizer.cs", label="Entry Lazy<object>.cstr", span=""];
m2_39 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="new DataDictionary<T>(_data.Value.Values.SelectMany<dynamic, dynamic>(x => x.GetData()).OfType<T>(), x => x.Symbol)", span="233-233"];
m2_40 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="233-233"];
m2_41 [cluster="QuantConnect.Data.Market.DataDictionary<T>.DataDictionary(System.Collections.Generic.IEnumerable<T>, System.Func<T, QuantConnect.Symbol>)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.DataDictionary(System.Collections.Generic.IEnumerable<T>, System.Func<T, QuantConnect.Symbol>)", span="27-27"];
m2_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m2_19 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_4 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="157-157"];
m2_22 [cluster="QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", span="349-349"];
m2_49 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.Symbol", span="233-233"];
m2_52 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="new DataDictionary<T>(_data.Value.Values.Select(x => x.GetData()).OfType<T>(), x => x.Symbol)", span="237-237"];
m2_53 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="237-237"];
m2_6 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="Time = time", span="178-178"];
m2_10 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="_ticks = CreateTicksCollection(ticks)", span="187-187"];
m2_50 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="233-233"];
m2_51 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="237-237"];
m2_43 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m2_8 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="_data = new Lazy<DataDictionary<SymbolData>>(() => CreateDynamicDataDictionary(data))", span="183-183"];
m2_47 [cluster="Unk.GetData", file="SubscriptionSynchronizer.cs", label="Entry Unk.GetData", span=""];
m2_30 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SubscriptionSynchronizer.cs", label="typeof(T) == typeof(Tick)", span="231-231"];
m2_31 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SubscriptionSynchronizer.cs", label="dictionary = new Lazy<object>(() => new DataDictionary<T>(_data.Value.Values.SelectMany<dynamic, dynamic>(x => x.GetData()).OfType<T>(), x => x.Symbol))", span="233-233"];
m2_32 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SubscriptionSynchronizer.cs", label="dictionary = new Lazy<object>(() => new DataDictionary<T>(_data.Value.Values.Select(x => x.GetData()).OfType<T>(), x => x.Symbol))", span="237-237"];
m2_34 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SubscriptionSynchronizer.cs", label="return (DataDictionary<T>)dictionary.Value;", span="242-242"];
m2_38 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="233-233"];
m2_7 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="_dataByType = new Dictionary<Type, Lazy<object>>()", span="180-180"];
m2_5 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", span="176-176"];
m2_9 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.QuoteBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.OptionChains, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="SubscriptionSynchronizer.cs", label="HasData = hasData ?? _data.Value.Count > 0", span="185-185"];
m2_48 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="233-233"];
m2_54 [cluster="DataDictionary<T>.cstr", file="SubscriptionSynchronizer.cs", label="Entry DataDictionary<T>.cstr", span=""];
m2_145 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m2_60 [cluster="QuantConnect.Data.Slice.SymbolData.GetData()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Slice.SymbolData.GetData()", span="414-414"];
m2_71 [cluster="QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol, out dynamic)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol, out dynamic)", span="273-273"];
m2_132 [cluster="QuantConnect.Data.Slice.GetEnumerator()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Slice.GetEnumerator()", span="372-372"];
m2_133 [cluster="QuantConnect.Data.Slice.GetEnumerator()", file="SubscriptionSynchronizer.cs", label="return GetKeyValuePairEnumerable().GetEnumerator();", span="374-374"];
m2_134 [cluster="QuantConnect.Data.Slice.GetEnumerator()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.GetEnumerator()", span="372-372"];
m2_135 [cluster="QuantConnect.Data.Slice.GetKeyValuePairEnumerable()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Slice.GetKeyValuePairEnumerable()", span="389-389"];
m2_140 [cluster="QuantConnect.Data.Slice.GetKeyValuePairEnumerable()", file="SubscriptionSynchronizer.cs", label="return _data.Value.Select(kvp => new KeyValuePair<Symbol, BaseData>(kvp.Key, kvp.Value.GetData()));", span="392-392"];
m2_141 [cluster="QuantConnect.Data.Slice.GetKeyValuePairEnumerable()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.GetKeyValuePairEnumerable()", span="389-389"];
m2_142 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="392-392"];
m2_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.SubscriptionSynchronizer(QuantConnect.Lean.Engine.DataFeeds.UniverseSelection)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.SubscriptionSynchronizer(QuantConnect.Lean.Engine.DataFeeds.UniverseSelection)", span="41-41"];
m2_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.SubscriptionSynchronizer(QuantConnect.Lean.Engine.DataFeeds.UniverseSelection)", file="SubscriptionSynchronizer.cs", label="_universeSelection = universeSelection", span="43-43"];
m2_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.SubscriptionSynchronizer(QuantConnect.Lean.Engine.DataFeeds.UniverseSelection)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.SubscriptionSynchronizer(QuantConnect.Lean.Engine.DataFeeds.UniverseSelection)", span="41-41"];
m2_57 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0"];
m2_62 [cluster="QuantConnect.TimeZoneOffsetProvider.GetOffsetTicks(System.DateTime)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.TimeZoneOffsetProvider.GetOffsetTicks(System.DateTime)", span="84-84"];
m2_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer.OnSubscriptionFinished(QuantConnect.Lean.Engine.DataFeeds.Subscription)", span="173-173"];
m2_61 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_63 [cluster="QuantConnect.Data.BaseData.Clone(bool)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="249-249"];
m2_114 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="335-335"];
m2_117 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="335-335"];
m2_115 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.GetData()", span="335-335"];
m2_116 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="335-335"];
m2_118 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.Count != 0", span="335-335"];
m2_119 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="335-335"];
m2_129 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Entry lambda expression", span="358-358"];
m2_130 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="x.GetData()", span="358-358"];
m2_131 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="358-358"];
m2_143 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="new KeyValuePair<Symbol, BaseData>(kvp.Key, kvp.Value.GetData())", span="392-392"];
m2_144 [cluster="lambda expression", file="SubscriptionSynchronizer.cs", label="Exit lambda expression", span="392-392"];
m2_77 [cluster="QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol, out dynamic)", file="SubscriptionSynchronizer.cs", label="return false;", span="282-282"];
m2_79 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m2_78 [cluster="QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol, out dynamic)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol, out dynamic)", span="273-273"];
m2_137 [cluster="QuantConnect.Data.Slice.System.Collections.IEnumerable.GetEnumerator()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Slice.System.Collections.IEnumerable.GetEnumerator()", span="384-384"];
m2_138 [cluster="QuantConnect.Data.Slice.System.Collections.IEnumerable.GetEnumerator()", file="SubscriptionSynchronizer.cs", label="return GetEnumerator();", span="386-386"];
m2_139 [cluster="QuantConnect.Data.Slice.System.Collections.IEnumerable.GetEnumerator()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.System.Collections.IEnumerable.GetEnumerator()", span="384-384"];
m2_72 [cluster="System.Math.Min(long, long)", file="SubscriptionSynchronizer.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m2_74 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="SubscriptionSynchronizer.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m2_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="62-62"];
m2_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
m2_70 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m2_101 [cluster="QuantConnect.Data.Market.DataDictionary<T>.DataDictionary()", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.DataDictionary()", span="17-17"];
m2_112 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", file="SubscriptionSynchronizer.cs", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="37-37"];
m2_56 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_151 [cluster="QuantConnect.Data.Slice.SymbolData.GetData()", file="SubscriptionSynchronizer.cs", label=Type, span="416-416"];
m2_152 [cluster="QuantConnect.Data.Slice.SymbolData.GetData()", file="SubscriptionSynchronizer.cs", label="SubscriptionType.TradeBar", span="418-418"];
m2_154 [cluster="QuantConnect.Data.Slice.SymbolData.GetData()", file="SubscriptionSynchronizer.cs", label="SubscriptionType.Tick", span="420-420"];
m2_156 [cluster="QuantConnect.Data.Slice.SymbolData.GetData()", file="SubscriptionSynchronizer.cs", label="SubscriptionType.Custom", span="422-422"];
m2_158 [cluster="QuantConnect.Data.Slice.SymbolData.GetData()", file="SubscriptionSynchronizer.cs", label="throw new ArgumentOutOfRangeException();", span="425-425"];
m2_153 [cluster="QuantConnect.Data.Slice.SymbolData.GetData()", file="SubscriptionSynchronizer.cs", label="return TradeBar;", span="419-419"];
m2_155 [cluster="QuantConnect.Data.Slice.SymbolData.GetData()", file="SubscriptionSynchronizer.cs", label="return Ticks;", span="421-421"];
m2_157 [cluster="QuantConnect.Data.Slice.SymbolData.GetData()", file="SubscriptionSynchronizer.cs", label="return Custom;", span="423-423"];
m2_159 [cluster="QuantConnect.Data.Slice.SymbolData.GetData()", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.SymbolData.GetData()", span="414-414"];
m2_136 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m2_120 [cluster="QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", file="SubscriptionSynchronizer.cs", label="collection != null", span="353-353"];
m2_121 [cluster="QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", file="SubscriptionSynchronizer.cs", label="return collection;", span="353-353"];
m2_122 [cluster="QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", file="SubscriptionSynchronizer.cs", label="collection = new T()", span="354-354"];
m2_123 [cluster="QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", file="SubscriptionSynchronizer.cs", label="collection.Time = Time", span="356-356"];
m2_125 [cluster="QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", file="SubscriptionSynchronizer.cs", label="collection[item.Symbol] = item", span="360-360"];
m2_126 [cluster="QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", file="SubscriptionSynchronizer.cs", label="return collection;", span="362-362"];
m2_124 [cluster="QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", file="SubscriptionSynchronizer.cs", label="_data.Value.Values.Select(x => x.GetData()).OfType<TItem>()", span="358-358"];
m2_127 [cluster="QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", file="SubscriptionSynchronizer.cs", label="Exit QuantConnect.Data.Slice.CreateCollection<T, TItem>(T)", span="349-349"];
m2_128 [cluster="T.cstr", file="SubscriptionSynchronizer.cs", label="Entry T.cstr", span=""];
m2_103 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SubscriptionSynchronizer.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_104 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="SubscriptionSynchronizer.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m2_55 [cluster="Unk.Select", file="SubscriptionSynchronizer.cs", label="Entry Unk.Select", span=""];
m2_160 [file="SubscriptionSynchronizer.cs", label="QuantConnect.Data.Slice", span=""];
m2_161 [file="SubscriptionSynchronizer.cs", label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", span=""];
m2_162 [file="SubscriptionSynchronizer.cs", label="QuantConnect.Data.Slice.SymbolData", span=""];
n218 -> n144  [color=darkseagreen4, key=1, label=listPerformance, style=dashed];
n219 -> n147  [color=darkseagreen4, key=1, label=equity, style=dashed];
n220 -> n148  [color=darkseagreen4, key=1, label=dtPrevious, style=dashed];
n220 -> n149  [color=darkseagreen4, key=1, label=dtPrevious, style=dashed];
n221 -> n150  [color=darkseagreen4, key=1, label=listBenchmark, style=dashed];
n221 -> n151  [color=darkseagreen4, key=1, label=listBenchmark, style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n11  [key=2, style=dotted];
n1 -> n4  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
n1 -> n5  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
n1 -> n6  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
n1 -> n9  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
n2 -> n3  [key=0, style=solid];
n2 -> n7  [key=0, style=solid];
n2 -> n9  [key=0, style=solid];
n2 -> n5  [color=darkseagreen4, key=1, label=point, style=dashed];
n2 -> n6  [color=darkseagreen4, key=1, label=point, style=dashed];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=0, style=solid];
n4 -> n13  [key=2, style=dotted];
n5 -> n2  [key=0, style=solid];
n5 -> n14  [key=2, style=dotted];
n6 -> n2  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n12  [key=2, style=dotted];
n3 -> n5  [color=darkseagreen4, key=1, label=x, style=dashed];
n3 -> n6  [color=darkseagreen4, key=1, label=x, style=dashed];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n15  [key=2, style=dotted];
n10 -> n0  [color=blue, key=0, style=bold];
n16 -> n17  [key=0, style=solid];
n16 -> n28  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n16 -> n45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>", style=dashed];
n16 -> n46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>", style=dashed];
n16 -> n60  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n16 -> n61  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n16 -> n62  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n16 -> n65  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, decimal>", style=dashed];
n16 -> n66  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, decimal>", style=dashed];
n16 -> n84  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, decimal>", style=dashed];
n16 -> n88  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n16 -> n108  [color=darkseagreen4, key=1, label=double, style=dashed];
n17 -> n18  [key=0, style=solid];
n17 -> n108  [color=darkseagreen4, key=1, label=riskFreeRate, style=dashed];
n28 -> n29  [key=0, style=solid];
n28 -> n78  [color=darkseagreen4, key=1, label=runningCash, style=dashed];
n28 -> n80  [color=darkseagreen4, key=1, label=runningCash, style=dashed];
n28 -> n81  [color=darkseagreen4, key=1, label=runningCash, style=dashed];
n45 -> n46  [key=0, style=solid];
n45 -> n0  [key=2, style=dotted];
n45 -> n47  [color=darkseagreen4, key=1, label=performance, style=dashed];
n46 -> n47  [key=0, style=solid];
n46 -> n0  [key=2, style=dotted];
n46 -> n48  [color=darkseagreen4, key=1, label=equity, style=dashed];
n46 -> n147  [color=darkseagreen4, key=1, label=equity, style=dashed];
n46 -> n57  [color=darkseagreen4, key=1, label=equity, style=dashed];
n46 -> n60  [color=darkseagreen4, key=1, label=equity, style=dashed];
n46 -> n88  [color=darkseagreen4, key=1, label=equity, style=dashed];
n46 -> n108  [color=darkseagreen4, key=1, label=equity, style=dashed];
n60 -> n61  [key=0, style=solid];
n60 -> n119  [key=2, style=dotted];
n60 -> n121  [key=2, style=dotted];
n60 -> n108  [color=darkseagreen4, key=1, label=algoCompoundingPerformance, style=dashed];
n61 -> n62  [key=0, style=solid];
n61 -> n122  [key=2, style=dotted];
n61 -> n123  [key=2, style=dotted];
n62 -> n63  [key=0, style=solid];
n62 -> n65  [key=0, style=solid];
n62 -> n121  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n82  [key=0, style=solid];
n65 -> n67  [color=darkseagreen4, key=1, label=closedTrade, style=dashed];
n66 -> n67  [key=0, style=solid];
n66 -> n76  [color=darkseagreen4, key=1, label=profitLossValue, style=dashed];
n66 -> n78  [color=darkseagreen4, key=1, label=profitLossValue, style=dashed];
n66 -> n80  [color=darkseagreen4, key=1, label=profitLossValue, style=dashed];
n66 -> n81  [color=darkseagreen4, key=1, label=profitLossValue, style=dashed];
n84 -> n85  [key=0, style=solid];
n84 -> n102  [key=0, style=solid];
n84 -> n104  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n88 -> n119  [key=2, style=dotted];
n88 -> n108  [color=darkseagreen4, key=1, label=totalNetProfit, style=dashed];
n108 -> n109  [key=0, style=solid];
n108 -> n111  [key=0, style=solid];
n108 -> n114  [key=2, style=dotted];
n108 -> n128  [key=2, style=dotted];
n108 -> n130  [key=2, style=dotted];
n108 -> n131  [key=2, style=dotted];
n108 -> n132  [key=2, style=dotted];
n108 -> n133  [key=2, style=dotted];
n108 -> n134  [key=2, style=dotted];
n108 -> n135  [key=2, style=dotted];
n108 -> n136  [key=2, style=dotted];
n108 -> n137  [key=2, style=dotted];
n108 -> n138  [key=2, style=dotted];
n108 -> n139  [key=2, style=dotted];
n108 -> n140  [key=2, style=dotted];
n108 -> n141  [key=2, style=dotted];
n108 -> n142  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n108  [color=darkseagreen4, key=1, label=totalTrades, style=dashed];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n104  [color=darkseagreen4, key=1, label=averageWin, style=dashed];
n21 -> n108  [color=darkseagreen4, key=1, label=averageWin, style=dashed];
n22 -> n23  [key=0, style=solid];
n22 -> n104  [color=darkseagreen4, key=1, label=averageLoss, style=dashed];
n22 -> n108  [color=darkseagreen4, key=1, label=averageLoss, style=dashed];
n104 -> n105  [key=0, style=solid];
n104 -> n129  [key=2, style=dotted];
n104 -> n106  [color=darkseagreen4, key=1, label=profitLossRatio, style=dashed];
n23 -> n24  [key=0, style=solid];
n23 -> n108  [color=darkseagreen4, key=1, label=averageWinRatio, style=dashed];
n24 -> n25  [key=0, style=solid];
n24 -> n108  [color=darkseagreen4, key=1, label=winRate, style=dashed];
n25 -> n26  [key=0, style=solid];
n25 -> n108  [color=darkseagreen4, key=1, label=lossRate, style=dashed];
n26 -> n27  [key=0, style=solid];
n26 -> n108  [color=darkseagreen4, key=1, label=totalNetProfit, style=dashed];
n27 -> n28  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n78 -> n81  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n81 -> n65  [key=0, style=solid];
n81 -> n81  [color=darkseagreen4, key=1, label=runningCash, style=dashed];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n113  [key=2, style=dotted];
n32 -> n68  [color=darkseagreen4, key=1, label=years, style=dashed];
n32 -> n69  [color=darkseagreen4, key=1, label=years, style=dashed];
n32 -> n82  [color=darkseagreen4, key=1, label=years, style=dashed];
n33 -> n34  [key=0, style=solid];
n33 -> n11  [key=2, style=dotted];
n33 -> n70  [color=darkseagreen4, key=1, label=annualTrades, style=dashed];
n33 -> n75  [color=darkseagreen4, key=1, label=annualTrades, style=dashed];
n33 -> n85  [color=darkseagreen4, key=1, label=annualTrades, style=dashed];
n68 -> n69  [key=0, style=solid];
n68 -> n75  [key=0, style=solid];
n68 -> n124  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n118  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n84  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n34 -> n11  [key=2, style=dotted];
n34 -> n71  [color=darkseagreen4, key=1, label=annualWins, style=dashed];
n34 -> n77  [color=darkseagreen4, key=1, label=annualWins, style=dashed];
n34 -> n86  [color=darkseagreen4, key=1, label=annualWins, style=dashed];
n70 -> n71  [key=0, style=solid];
n70 -> n14  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n85 -> n125  [key=2, style=dotted];
n85 -> n97  [color=darkseagreen4, key=1, label=totalTrades, style=dashed];
n85 -> n100  [color=darkseagreen4, key=1, label=totalTrades, style=dashed];
n85 -> n101  [color=darkseagreen4, key=1, label=totalTrades, style=dashed];
n85 -> n108  [color=darkseagreen4, key=1, label=totalTrades, style=dashed];
n35 -> n36  [key=0, style=solid];
n35 -> n11  [key=2, style=dotted];
n35 -> n73  [color=darkseagreen4, key=1, label=annualLosses, style=dashed];
n35 -> n79  [color=darkseagreen4, key=1, label=annualLosses, style=dashed];
n35 -> n87  [color=darkseagreen4, key=1, label=annualLosses, style=dashed];
n71 -> n72  [key=0, style=solid];
n71 -> n14  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n125  [key=2, style=dotted];
n86 -> n89  [color=darkseagreen4, key=1, label=totalWins, style=dashed];
n86 -> n91  [color=darkseagreen4, key=1, label=totalWins, style=dashed];
n86 -> n100  [color=darkseagreen4, key=1, label=totalWins, style=dashed];
n36 -> n37  [key=0, style=solid];
n36 -> n11  [key=2, style=dotted];
n36 -> n74  [color=darkseagreen4, key=1, label=annualLossTotal, style=dashed];
n36 -> n80  [color=darkseagreen4, key=1, label=annualLossTotal, style=dashed];
n36 -> n83  [color=darkseagreen4, key=1, label=annualLossTotal, style=dashed];
n36 -> n95  [color=darkseagreen4, key=1, label=annualLossTotal, style=dashed];
n73 -> n74  [key=0, style=solid];
n73 -> n14  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n87 -> n125  [key=2, style=dotted];
n87 -> n92  [color=darkseagreen4, key=1, label=totalLosses, style=dashed];
n87 -> n95  [color=darkseagreen4, key=1, label=totalLosses, style=dashed];
n87 -> n101  [color=darkseagreen4, key=1, label=totalLosses, style=dashed];
n37 -> n38  [key=0, style=solid];
n37 -> n11  [key=2, style=dotted];
n37 -> n72  [color=darkseagreen4, key=1, label=annualWinTotal, style=dashed];
n37 -> n78  [color=darkseagreen4, key=1, label=annualWinTotal, style=dashed];
n37 -> n83  [color=darkseagreen4, key=1, label=annualWinTotal, style=dashed];
n37 -> n91  [color=darkseagreen4, key=1, label=annualWinTotal, style=dashed];
n74 -> n75  [key=0, style=solid];
n74 -> n14  [key=2, style=dotted];
n83 -> n82  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n95 -> n126  [key=2, style=dotted];
n95 -> n104  [color=darkseagreen4, key=1, label=averageLoss, style=dashed];
n95 -> n108  [color=darkseagreen4, key=1, label=averageLoss, style=dashed];
n38 -> n39  [key=0, style=solid];
n38 -> n11  [key=2, style=dotted];
n38 -> n83  [color=darkseagreen4, key=1, label=annualNetProfit, style=dashed];
n72 -> n73  [key=0, style=solid];
n72 -> n14  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n126  [key=2, style=dotted];
n91 -> n96  [color=darkseagreen4, key=1, label=averageWin, style=dashed];
n91 -> n104  [color=darkseagreen4, key=1, label=averageWin, style=dashed];
n91 -> n108  [color=darkseagreen4, key=1, label=averageWin, style=dashed];
n39 -> n40  [key=0, style=solid];
n39 -> n114  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n115  [key=2, style=dotted];
n40 -> n48  [color=darkseagreen4, key=1, label=dtPrevious, style=dashed];
n41 -> n42  [key=0, style=solid];
n41 -> n113  [key=2, style=dotted];
n41 -> n47  [color=darkseagreen4, key=1, label=listPerformance, style=dashed];
n41 -> n144  [color=darkseagreen4, key=1, label=listPerformance, style=dashed];
n41 -> n49  [color=darkseagreen4, key=1, label=listPerformance, style=dashed];
n41 -> n50  [color=darkseagreen4, key=1, label=listPerformance, style=dashed];
n41 -> n52  [color=darkseagreen4, key=1, label=listPerformance, style=dashed];
n41 -> n108  [color=darkseagreen4, key=1, label=listPerformance, style=dashed];
n48 -> n49  [key=0, style=solid];
n48 -> n116  [key=2, style=dotted];
n48 -> n117  [key=2, style=dotted];
n48 -> n146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n48 -> n148  [color=darkseagreen4, key=1, label=dtPrevious, style=dashed];
n48 -> n149  [color=darkseagreen4, key=1, label=dtPrevious, style=dashed];
n42 -> n43  [key=0, style=solid];
n42 -> n113  [key=2, style=dotted];
n42 -> n48  [color=darkseagreen4, key=1, label=listBenchmark, style=dashed];
n42 -> n150  [color=darkseagreen4, key=1, label=listBenchmark, style=dashed];
n42 -> n151  [color=darkseagreen4, key=1, label=listBenchmark, style=dashed];
n42 -> n49  [color=darkseagreen4, key=1, label=listBenchmark, style=dashed];
n42 -> n52  [color=darkseagreen4, key=1, label=listBenchmark, style=dashed];
n42 -> n53  [color=darkseagreen4, key=1, label=listBenchmark, style=dashed];
n42 -> n108  [color=darkseagreen4, key=1, label=listBenchmark, style=dashed];
n47 -> n48  [key=0, style=solid];
n47 -> n116  [key=2, style=dotted];
n47 -> n117  [key=2, style=dotted];
n47 -> n143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n144 -> n145  [key=0, style=solid];
n144 -> n118  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n52  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n50 -> n118  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n55  [key=0, style=solid];
n52 -> n57  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n43 -> n11  [key=2, style=dotted];
n150 -> n152  [key=0, style=solid];
n150 -> n118  [key=2, style=dotted];
n151 -> n152  [key=0, style=solid];
n151 -> n118  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n118  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n11  [key=2, style=dotted];
n147 -> n148  [key=0, style=solid];
n147 -> n153  [key=0, style=solid];
n147 -> n120  [key=2, style=dotted];
n147 -> n154  [key=2, style=dotted];
n147 -> n119  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n60  [key=0, style=solid];
n57 -> n119  [key=2, style=dotted];
n57 -> n120  [key=2, style=dotted];
n57 -> n62  [color=darkseagreen4, key=1, label=fractionOfYears, style=dashed];
n143 -> n144  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n146 -> n149  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n146 -> n152  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
n148 -> n149  [key=0, style=solid];
n148 -> n151  [key=0, style=solid];
n148 -> n13  [key=2, style=dotted];
n149 -> n150  [key=0, style=solid];
n51 -> n49  [key=0, style=solid];
n51 -> n15  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n54 -> n50  [key=0, style=solid];
n54 -> n15  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n15  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n15  [key=2, style=dotted];
n121 -> n191  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n15  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n69  [color=darkseagreen4, key=1, label=year, style=dashed];
n67 -> n70  [color=darkseagreen4, key=1, label=year, style=dashed];
n67 -> n71  [color=darkseagreen4, key=1, label=year, style=dashed];
n67 -> n72  [color=darkseagreen4, key=1, label=year, style=dashed];
n67 -> n73  [color=darkseagreen4, key=1, label=year, style=dashed];
n67 -> n74  [color=darkseagreen4, key=1, label=year, style=dashed];
n67 -> n75  [color=darkseagreen4, key=1, label=year, style=dashed];
n67 -> n77  [color=darkseagreen4, key=1, label=year, style=dashed];
n67 -> n78  [color=darkseagreen4, key=1, label=year, style=dashed];
n67 -> n79  [color=darkseagreen4, key=1, label=year, style=dashed];
n67 -> n80  [color=darkseagreen4, key=1, label=year, style=dashed];
n76 -> n77  [key=0, style=solid];
n76 -> n79  [key=0, style=solid];
n102 -> n103  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n100  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n128  [key=2, style=dotted];
n100 -> n108  [color=darkseagreen4, key=1, label=winRate, style=dashed];
n101 -> n102  [key=0, style=solid];
n101 -> n104  [key=0, style=solid];
n101 -> n128  [key=2, style=dotted];
n101 -> n108  [color=darkseagreen4, key=1, label=lossRate, style=dashed];
n89 -> n90  [key=0, style=solid];
n89 -> n91  [key=0, style=solid];
n92 -> n93  [key=0, style=solid];
n92 -> n95  [key=0, style=solid];
n90 -> n92  [key=0, style=solid];
n90 -> n96  [color=darkseagreen4, key=1, label=averageWin, style=dashed];
n90 -> n104  [color=darkseagreen4, key=1, label=averageWin, style=dashed];
n90 -> n108  [color=darkseagreen4, key=1, label=averageWin, style=dashed];
n96 -> n97  [key=0, style=solid];
n96 -> n127  [key=2, style=dotted];
n96 -> n108  [color=darkseagreen4, key=1, label=averageWinRatio, style=dashed];
n93 -> n94  [key=0, style=solid];
n93 -> n104  [color=darkseagreen4, key=1, label=averageLoss, style=dashed];
n93 -> n108  [color=darkseagreen4, key=1, label=averageLoss, style=dashed];
n94 -> n97  [key=0, style=solid];
n94 -> n108  [color=darkseagreen4, key=1, label=averageWinRatio, style=dashed];
n98 -> n99  [key=0, style=solid];
n98 -> n108  [color=darkseagreen4, key=1, label=winRate, style=dashed];
n99 -> n102  [key=0, style=solid];
n99 -> n104  [key=0, style=solid];
n99 -> n108  [color=darkseagreen4, key=1, label=lossRate, style=dashed];
n103 -> n104  [key=0, style=solid];
n103 -> n15  [key=2, style=dotted];
n105 -> n106  [key=0, style=solid];
n105 -> n130  [key=2, style=dotted];
n105 -> n108  [color=darkseagreen4, key=1, label=profitLossRatioHuman, style=dashed];
n129 -> n155  [key=0, style=solid];
n129 -> n157  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n106 -> n107  [key=0, style=solid];
n106 -> n108  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n131 -> n159  [key=0, style=solid];
n131 -> n160  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, decimal>", style=dashed];
n131 -> n167  [color=darkseagreen4, key=1, label=int, style=dashed];
n132 -> n214  [key=0, style=solid];
n136 -> n207  [key=0, style=solid];
n137 -> n204  [key=0, style=solid];
n138 -> n201  [color=red, key=0, style=solid];
n139 -> n198  [key=0, style=solid];
n140 -> n212  [key=0, style=solid];
n141 -> n209  [key=0, style=solid];
n142 -> n216  [key=0, style=solid];
n110 -> n111  [key=0, style=solid];
n110 -> n15  [key=2, style=dotted];
n112 -> n16  [color=blue, key=0, style=bold];
n145 -> n143  [color=blue, key=0, style=bold];
n152 -> n153  [key=0, style=solid];
n153 -> n146  [color=blue, key=0, style=bold];
n155 -> n156  [key=0, style=solid];
n155 -> n157  [key=0, style=solid];
n157 -> n158  [key=0, style=solid];
n157 -> n127  [key=2, style=dotted];
n157 -> n128  [key=2, style=dotted];
n156 -> n158  [key=0, style=solid];
n158 -> n129  [color=blue, key=0, style=bold];
n159 -> n160  [key=0, style=solid];
n160 -> n161  [key=0, style=solid];
n160 -> n116  [key=2, style=dotted];
n160 -> n162  [color=darkseagreen4, key=1, label=lPrices, style=dashed];
n160 -> n163  [color=darkseagreen4, key=1, label=lPrices, style=dashed];
n167 -> n168  [key=0, style=solid];
n167 -> n170  [key=0, style=solid];
n167 -> n172  [key=2, style=dotted];
n167 -> n127  [key=2, style=dotted];
n167 -> n128  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n113  [key=2, style=dotted];
n161 -> n166  [color=darkseagreen4, key=1, label=lDrawdowns, style=dashed];
n161 -> n167  [color=darkseagreen4, key=1, label=lDrawdowns, style=dashed];
n162 -> n163  [key=0, style=solid];
n162 -> n164  [color=darkseagreen4, key=1, label=high, style=dashed];
n162 -> n166  [color=darkseagreen4, key=1, label=high, style=dashed];
n163 -> n164  [key=0, style=solid];
n163 -> n167  [key=0, style=solid];
n163 -> n165  [color=darkseagreen4, key=1, label=price, style=dashed];
n163 -> n166  [color=darkseagreen4, key=1, label=price, style=dashed];
n166 -> n163  [key=0, style=solid];
n166 -> n118  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n164 -> n166  [key=0, style=solid];
n165 -> n166  [key=0, style=solid];
n168 -> n169  [key=0, style=solid];
n170 -> n171  [key=0, style=solid];
n169 -> n170  [key=0, style=solid];
n169 -> n15  [key=2, style=dotted];
n171 -> n131  [color=blue, key=0, style=bold];
n173 -> n174  [key=0, style=solid];
n173 -> n177  [color=darkseagreen4, key=1, label="System.Collections.Generic.SortedDictionary<System.DateTime, decimal>", style=dashed];
n173 -> n186  [color=darkseagreen4, key=1, label=int, style=dashed];
n174 -> n175  [key=0, style=solid];
n174 -> n180  [color=darkseagreen4, key=1, label=priceMaximum, style=dashed];
n174 -> n182  [color=darkseagreen4, key=1, label=priceMaximum, style=dashed];
n174 -> n183  [color=darkseagreen4, key=1, label=priceMaximum, style=dashed];
n177 -> n178  [key=0, style=solid];
n177 -> n116  [key=2, style=dotted];
n177 -> n179  [color=darkseagreen4, key=1, label=lPrices, style=dashed];
n177 -> n180  [color=darkseagreen4, key=1, label=lPrices, style=dashed];
n177 -> n182  [color=darkseagreen4, key=1, label=lPrices, style=dashed];
n177 -> n186  [color=darkseagreen4, key=1, label=lPrices, style=dashed];
n186 -> n190  [key=0, style=solid];
n186 -> n128  [key=2, style=dotted];
n175 -> n176  [key=0, style=solid];
n175 -> n182  [color=darkseagreen4, key=1, label=previousMinimum, style=dashed];
n175 -> n186  [color=darkseagreen4, key=1, label=previousMinimum, style=dashed];
n180 -> n181  [key=0, style=solid];
n180 -> n182  [key=0, style=solid];
n182 -> n183  [key=0, style=solid];
n182 -> n185  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n183 -> n186  [color=darkseagreen4, key=1, label=previousMaximum, style=dashed];
n176 -> n177  [key=0, style=solid];
n176 -> n182  [color=darkseagreen4, key=1, label=previousMaximum, style=dashed];
n176 -> n186  [color=darkseagreen4, key=1, label=previousMaximum, style=dashed];
n178 -> n179  [key=0, style=solid];
n178 -> n180  [color=darkseagreen4, key=1, label=id, style=dashed];
n178 -> n181  [color=darkseagreen4, key=1, label=id, style=dashed];
n178 -> n182  [color=darkseagreen4, key=1, label=id, style=dashed];
n178 -> n184  [color=darkseagreen4, key=1, label=id, style=dashed];
n178 -> n185  [color=darkseagreen4, key=1, label=id, style=dashed];
n179 -> n180  [key=0, style=solid];
n179 -> n186  [key=0, style=solid];
n181 -> n185  [key=0, style=solid];
n184 -> n185  [key=0, style=solid];
n184 -> n186  [color=darkseagreen4, key=1, label=previousMinimum, style=dashed];
n185 -> n179  [key=0, style=solid];
n185 -> n185  [color=darkseagreen4, key=1, label=id, style=dashed];
n187 -> n188  [key=0, style=solid];
n188 -> n189  [key=0, style=solid];
n188 -> n15  [key=2, style=dotted];
n189 -> n190  [key=0, style=solid];
n190 -> n173  [color=blue, key=0, style=bold];
n191 -> n192  [key=0, style=solid];
n191 -> n193  [key=2, style=dotted];
n192 -> n121  [color=blue, key=0, style=bold];
n194 -> n195  [key=0, style=solid];
n195 -> n196  [key=0, style=solid];
n195 -> n197  [key=2, style=dotted];
n196 -> n194  [color=blue, key=0, style=bold];
n198 -> n199  [key=0, style=solid];
n198 -> n200  [key=2, style=dotted];
n199 -> n139  [color=blue, key=0, style=bold];
n201 -> n202  [color=red, key=0, style=solid];
n201 -> n200  [color=red, key=2, style=dotted];
n201 -> n203  [color=red, key=2, style=dotted];
n202 -> n138  [color=blue, key=0, style=bold];
n204 -> n205  [key=0, style=solid];
n204 -> n206  [key=2, style=dotted];
n204 -> n200  [key=2, style=dotted];
n205 -> n137  [color=blue, key=0, style=bold];
n207 -> n208  [key=0, style=solid];
n207 -> n194  [key=2, style=dotted];
n207 -> n137  [key=2, style=dotted];
n208 -> n136  [color=blue, key=0, style=bold];
n209 -> n210  [key=0, style=solid];
n209 -> n139  [key=2, style=dotted];
n209 -> n211  [key=2, style=dotted];
n209 -> n138  [key=2, style=dotted];
n209 -> n203  [key=2, style=dotted];
n210 -> n141  [color=blue, key=0, style=bold];
n212 -> n213  [key=0, style=solid];
n212 -> n194  [key=2, style=dotted];
n212 -> n141  [key=2, style=dotted];
n213 -> n140  [color=blue, key=0, style=bold];
n214 -> n215  [key=0, style=solid];
n214 -> n194  [key=2, style=dotted];
n214 -> n138  [key=2, style=dotted];
n215 -> n132  [color=blue, key=0, style=bold];
n216 -> n217  [key=0, style=solid];
n216 -> n194  [key=2, style=dotted];
n216 -> n137  [key=2, style=dotted];
n217 -> n142  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> n15  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_47  [key=2, style=dotted];
m1_20 -> n15  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_16 -> m1_24  [key=0, style=solid];
m1_16 -> m1_27  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_16 -> m1_29  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_16 -> m1_30  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_16 -> m1_36  [key=2, style=dotted];
m1_16 -> m1_37  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=0, style=solid];
m1_30 -> m1_44  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_30  [color=blue, key=0, style=bold];
m1_32 -> m1_5  [color=blue, key=0, style=bold];
m1_34 -> m1_35  [key=0, style=solid];
m1_35 -> m1_33  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_40  [key=2, style=dotted];
m1_19 -> m1_35  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=memoryUsed, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_31  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [key=2, style=dotted];
m1_75 -> m1_72  [color=blue, key=0, style=bold];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_48  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m1_38 -> m1_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_40 -> m1_46  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_46  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_49  [key=2, style=dotted];
m1_45 -> m1_50  [key=2, style=dotted];
m1_46 -> m1_38  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [color=green, key=0, style=solid];
m1_5 -> m1_7  [color=green, key=1, label="System.TimeSpan", style=dashed];
m1_5 -> m1_9  [color=green, key=1, label=long, style=dashed];
m1_5 -> m1_11  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m1_5 -> m1_25  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_5 -> m1_16  [key=2, style=dotted];
m1_6 -> m1_7  [color=green, key=0, style=solid];
m1_6 -> m1_24  [color=green, key=1, label=message, style=dashed];
m1_6 -> m1_27  [color=green, key=1, label=message, style=dashed];
m1_6 -> m1_29  [color=green, key=1, label=message, style=dashed];
m1_6 -> m1_30  [color=green, key=1, label=message, style=dashed];
m1_6 -> m1_17  [key=2, style=dotted];
m1_6 -> m1_18  [key=2, style=dotted];
m1_6 -> m1_19  [key=2, style=dotted];
m1_6 -> m1_20  [key=2, style=dotted];
m1_6 -> m1_21  [key=2, style=dotted];
m1_6 -> m1_22  [key=2, style=dotted];
m1_6 -> m1_23  [key=2, style=dotted];
m1_6 -> m1_25  [key=2, style=dotted];
m1_6 -> m1_26  [key=2, style=dotted];
m1_6 -> m1_28  [key=2, style=dotted];
m1_7 -> m1_8  [color=green, key=0, style=solid];
m1_7 -> m1_12  [color=green, key=1, label=end, style=dashed];
m1_7 -> m1_17  [key=2, style=dotted];
m1_7 -> m1_18  [key=2, style=dotted];
m1_7 -> m1_19  [key=2, style=dotted];
m1_7 -> m1_21  [key=2, style=dotted];
m1_7 -> m1_22  [key=2, style=dotted];
m1_7 -> m1_23  [key=2, style=dotted];
m1_7 -> m1_25  [key=2, style=dotted];
m1_7 -> m1_26  [key=2, style=dotted];
m1_7 -> m1_27  [key=2, style=dotted];
m1_7 -> m1_28  [key=2, style=dotted];
m1_7 -> m1_29  [key=2, style=dotted];
m1_7 -> m1_20  [key=2, style=dotted];
m1_7 -> m1_24  [key=2, style=dotted];
m1_7 -> m1_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_7 -> m1_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_27  [key=0, style=solid];
m1_8 -> m1_9  [color=green, key=0, style=solid];
m1_8 -> m1_33  [color=green, key=2, style=dotted];
m1_8 -> m1_17  [color=green, key=1, label=memoryLogger, style=dashed];
m1_8 -> m1_19  [key=2, style=dotted];
m1_12 -> m1_24  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_9 -> m1_9  [color=green, key=1, label=long, style=dashed];
m1_9 -> m1_10  [color=green, key=0, style=solid];
m1_9 -> m1_14  [color=green, key=1, label=long, style=dashed];
m1_9 -> m1_15  [color=green, key=1, label=long, style=dashed];
m1_9 -> m1_16  [color=green, key=1, label=long, style=dashed];
m1_9 -> m1_18  [color=green, key=1, label=long, style=dashed];
m1_9 -> m1_28  [key=2, style=dotted];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_10 -> m1_0  [color=green, key=2, style=dotted];
m1_10 -> m1_29  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_17  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_15 -> m1_35  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_21  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_23  [key=0, style=solid];
m1_11 -> m1_24  [color=darkseagreen4, key=1, label=task, style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_34  [key=2, style=dotted];
m1_11 -> m1_31  [color=darkseagreen4, key=1, label=task, style=dashed];
m1_11 -> m1_0  [color=blue, key=0, style=bold];
m1_25 -> m1_27  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_25 -> m1_29  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_25 -> m1_30  [color=darkseagreen4, key=1, label=message, style=dashed];
m1_25 -> m1_25  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_43  [key=2, style=dotted];
m1_23 -> m1_12  [key=0, style=solid];
m1_23 -> m1_42  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_18  [color=darkseagreen4, key=1, label=memoryUsed, style=dashed];
m1_13 -> m1_35  [key=2, style=dotted];
m1_13 -> m1_21  [color=darkseagreen4, key=1, label=memoryUsed, style=dashed];
m1_21 -> m1_36  [key=2, style=dotted];
m1_21 -> m1_37  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_39  [key=2, style=dotted];
m1_21 -> m1_40  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_41  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_54  [key=0, style=solid];
m1_53 -> m1_66  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_67  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_68  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_68  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_68  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_68  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_68  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_68  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_68  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_68  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_67  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_68  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_68  [key=2, style=dotted];
m1_65 -> m1_70  [color=darkorchid, key=3, label="method methodReturn bool Setup", style=bold];
m1_66 -> m1_51  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_15  [key=2, style=dotted];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_12  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_13  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_14  [key=2, style=dotted];
m1_3 -> m1_0  [color=blue, key=0, style=bold];
m1_36 -> m1_37  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_71 -> m1_69  [color=blue, key=0, style=bold];
m1_37 -> m1_36  [color=blue, key=0, style=bold];
m1_77 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_39  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_41  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_42  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_43  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_44  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_45  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_52  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_54  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_55  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_56  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_57  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_58  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_59  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_60  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_61  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_62  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_63  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_64  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m1_77 -> m1_65  [color=darkseagreen4, key=1, label="QuantConnect.IndicatorSuiteAlgorithm", style=dashed];
m2_67 -> m2_68  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_70  [key=2, style=dotted];
m2_69 -> m2_67  [color=blue, key=0, style=bold];
m2_59 -> m2_57  [color=blue, key=0, style=bold];
m2_26 -> m2_80  [key=0, style=solid];
m2_26 -> m2_81  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m2_26 -> m2_5  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData> data", style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_65  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_101  [key=2, style=dotted];
m2_80 -> m2_83  [color=darkseagreen4, key=1, label=allData, style=dashed];
m2_80 -> m2_85  [color=darkseagreen4, key=1, label=allData, style=dashed];
m2_80 -> m2_99  [color=darkseagreen4, key=1, label=allData, style=dashed];
m2_80 -> m2_58  [color=blue, key=0, style=bold];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_99  [key=0, style=solid];
m2_81 -> m2_83  [color=darkseagreen4, key=1, label=datum, style=dashed];
m2_81 -> m2_84  [color=darkseagreen4, key=1, label=datum, style=dashed];
m2_81 -> m2_85  [color=darkseagreen4, key=1, label=datum, style=dashed];
m2_81 -> m2_86  [color=darkseagreen4, key=1, label=datum, style=dashed];
m2_81 -> m2_89  [color=darkseagreen4, key=1, label=datum, style=dashed];
m2_81 -> m2_92  [color=darkseagreen4, key=1, label=datum, style=dashed];
m2_81 -> m2_95  [color=darkseagreen4, key=1, label=datum, style=dashed];
m2_81 -> m2_97  [color=darkseagreen4, key=1, label=datum, style=dashed];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_86  [key=0, style=solid];
m2_83 -> m2_79  [key=2, style=dotted];
m2_83 -> m2_88  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_83 -> m2_89  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_83 -> m2_91  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_83 -> m2_92  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_83 -> m2_94  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_83 -> m2_95  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_83 -> m2_97  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_85 -> m2_86  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m2_82 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m2_82 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m2_82 -> m2_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m2_82 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m2_82 -> m2_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m2_82 -> m2_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionSynchronizer", style=dashed];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_102  [key=2, style=dotted];
m2_84 -> m2_88  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_84 -> m2_89  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_84 -> m2_91  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_84 -> m2_92  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_84 -> m2_94  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_84 -> m2_95  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_84 -> m2_97  [color=darkseagreen4, key=1, label=symbolData, style=dashed];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_90  [key=0, style=solid];
m2_86 -> m2_93  [key=0, style=solid];
m2_86 -> m2_96  [key=0, style=solid];
m2_86 -> m2_98  [key=0, style=solid];
m2_89 -> m2_81  [key=0, style=solid];
m2_92 -> m2_81  [key=0, style=solid];
m2_95 -> m2_81  [key=0, style=solid];
m2_95 -> m2_103  [key=2, style=dotted];
m2_97 -> m2_81  [key=0, style=solid];
m2_97 -> m2_103  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_91 -> m2_92  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_93 -> m2_94  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_98 -> m2_100  [key=0, style=solid];
m2_98 -> m2_104  [key=2, style=dotted];
m2_100 -> m2_26  [color=blue, key=0, style=bold];
m2_102 -> m2_146  [key=0, style=solid];
m2_146 -> m2_147  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_150  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_150  [key=2, style=dotted];
m2_149 -> m2_102  [color=blue, key=0, style=bold];
m2_66 -> m2_64  [color=blue, key=0, style=bold];
m2_36 -> m2_37  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_27  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_60  [key=2, style=dotted];
m2_75 -> m2_78  [color=darkseagreen4, key=1, label="out dynamic", style=dashed];
m2_21 -> m2_105  [key=0, style=solid];
m2_21 -> m2_106  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Ticks", style=dashed];
m2_21 -> m2_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.Market.Ticks ticks", style=bold];
m2_21 -> m2_21  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.Market.Ticks CreateTicksCollection", style=bold];
m2_21 -> m2_45  [color=darkseagreen4, key=1, label=offsetProvider, style=dashed];
m2_21 -> m2_22  [key=0, style=solid];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_107  [key=0, style=solid];
m2_106 -> m2_111  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_112  [key=2, style=dotted];
m2_107 -> m2_109  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Ticks", style=dashed];
m2_107 -> m2_110  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Ticks", style=dashed];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_110  [key=0, style=solid];
m2_108 -> m2_55  [key=2, style=dotted];
m2_108 -> m2_56  [key=2, style=dotted];
m2_108 -> m2_113  [key=2, style=dotted];
m2_108 -> m2_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_108 -> m2_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_109 -> m2_108  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_21  [color=blue, key=0, style=bold];
m2_3 -> m2_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>", style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_22  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_3 -> m2_23  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_3 -> m2_37  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_3 -> m2_40  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_3 -> m2_41  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_3 -> m2_49  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_3 -> m2_52  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_3 -> m2_53  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_25 -> m2_26  [color=green, key=0, style=solid];
m2_25 -> m2_64  [color=green, key=2, style=dotted];
m2_25 -> m2_23  [color=blue, key=0, style=bold];
m2_12 -> m2_25  [color=green, key=1, label=subscription, style=dashed];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_46  [key=0, style=solid];
m2_12 -> m2_14  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_15  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_16  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_17  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_18  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_20  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_21  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_23  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_24  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_27  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_28  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_29  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_33  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_35  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_37  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_39  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_40  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_41  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_42  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_44  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_45  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m2_12 -> m2_22  [key=2, style=dotted];
m2_20 -> m2_25  [color=green, key=1, label=configuration, style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_24 -> m2_25  [color=green, key=0, style=solid];
m2_24 -> m2_63  [key=2, style=dotted];
m2_24 -> m2_26  [color=darkseagreen4, key=1, label=clone, style=dashed];
m2_45 -> m2_12  [key=0, style=solid];
m2_45 -> m2_45  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m2_45 -> m2_71  [key=2, style=dotted];
m2_45 -> m2_72  [key=2, style=dotted];
m2_45 -> m2_52  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_47  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_49  [color=darkseagreen4, key=1, label=newChanges, style=dashed];
m2_11 -> m2_50  [color=darkseagreen4, key=1, label=newChanges, style=dashed];
m2_11 -> m2_51  [color=darkseagreen4, key=1, label=newChanges, style=dashed];
m2_11 -> m2_22  [key=2, style=dotted];
m2_14 -> m2_12  [key=0, style=solid];
m2_14 -> m2_58  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_22  [key=2, style=dotted];
m2_17 -> m2_12  [key=0, style=solid];
m2_17 -> m2_58  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_22  [key=2, style=dotted];
m2_44 -> m2_12  [key=0, style=solid];
m2_44 -> m2_45  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=0, style=solid];
m2_13 -> m2_22  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_50  [key=0, style=solid];
m2_46 -> m2_44  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_18  [key=0, style=solid];
m2_15 -> m2_22  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=0, style=solid];
m2_16 -> m2_59  [key=2, style=dotted];
m2_16 -> m2_22  [key=2, style=dotted];
m2_18 -> m2_26  [color=darkseagreen4, key=1, label=packet, style=dashed];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_60  [key=2, style=dotted];
m2_18 -> m2_29  [color=darkseagreen4, key=1, label=packet, style=dashed];
m2_18 -> m2_30  [color=darkseagreen4, key=1, label=packet, style=dashed];
m2_18 -> m2_31  [color=darkseagreen4, key=1, label=packet, style=dashed];
m2_18 -> m2_5  [color=blue, key=0, style=bold];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_29  [key=0, style=solid];
m2_27 -> m2_23  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_59  [key=2, style=dotted];
m2_28 -> m2_58  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_29 -> m2_44  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_34  [key=0, style=solid];
m2_29 -> m2_36  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_43  [key=0, style=solid];
m2_33 -> m2_66  [key=2, style=dotted];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_27  [color=blue, key=0, style=bold];
m2_37 -> m2_42  [key=0, style=solid];
m2_37 -> m2_67  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_39 -> m2_42  [key=2, style=dotted];
m2_39 -> m2_43  [key=2, style=dotted];
m2_39 -> m2_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_39 -> m2_49  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_40 -> m2_42  [key=0, style=solid];
m2_40 -> m2_68  [key=2, style=dotted];
m2_40 -> m2_38  [color=blue, key=0, style=bold];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_69  [key=2, style=dotted];
m2_42 -> m2_44  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_61  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_50  [color=darkseagreen4, key=1, label=changes, style=dashed];
m2_4 -> m2_9  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.UniverseSelection.SecurityChanges changes", style=bold];
m2_4 -> m2_3  [color=blue, key=0, style=bold];
m2_22 -> m2_45  [color=darkseagreen4, key=1, label=currentOffsetTicks, style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_62  [key=2, style=dotted];
m2_22 -> m2_120  [key=0, style=solid];
m2_22 -> m2_121  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_22 -> m2_5  [color=darkorchid, key=3, label="Parameter variable T collection", style=bold];
m2_22 -> m2_22  [color=darkorchid, key=3, label="method methodReturn T CreateCollection", style=bold];
m2_49 -> m2_46  [key=0, style=solid];
m2_49 -> m2_49  [color=darkseagreen4, key=1, label=newChanges, style=dashed];
m2_49 -> m2_73  [key=2, style=dotted];
m2_49 -> m2_50  [color=darkseagreen4, key=1, label=newChanges, style=dashed];
m2_49 -> m2_51  [color=darkseagreen4, key=1, label=newChanges, style=dashed];
m2_52 -> m2_54  [color=darkseagreen4, key=1, label="out System.DateTime", style=dashed];
m2_52 -> m2_53  [key=0, style=solid];
m2_52 -> m2_74  [key=2, style=dotted];
m2_52 -> m2_75  [key=2, style=dotted];
m2_52 -> m2_55  [key=2, style=dotted];
m2_52 -> m2_56  [key=2, style=dotted];
m2_52 -> m2_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_52 -> m2_62  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_53 -> m2_54  [key=0, style=solid];
m2_53 -> m2_76  [key=2, style=dotted];
m2_53 -> m2_51  [color=blue, key=0, style=bold];
m2_6 -> m2_45  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m2_6 -> m2_52  [color=darkseagreen4, key=1, label=earlyBirdTicks, style=dashed];
m2_6 -> m2_7  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_57  [key=2, style=dotted];
m2_10 -> m2_21  [key=2, style=dotted];
m2_50 -> m2_53  [color=darkseagreen4, key=1, label=changes, style=dashed];
m2_50 -> m2_50  [color=darkseagreen4, key=1, label=changes, style=dashed];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_48  [color=blue, key=0, style=bold];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_9  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_70  [key=2, style=dotted];
m2_8 -> m2_46  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m2_8 -> m2_33  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m2_8 -> m2_42  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label=universeData, style=dashed];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_56  [key=2, style=dotted];
m2_8 -> m2_20  [key=2, style=dotted];
m2_47 -> m2_49  [color=darkseagreen4, key=1, label=universe, style=dashed];
m2_47 -> m2_47  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_47 -> m2_48  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_34  [color=darkseagreen4, key=1, label=packetBaseDataCollection, style=dashed];
m2_30 -> m2_38  [color=darkseagreen4, key=1, label=packetBaseDataCollection, style=dashed];
m2_30 -> m2_32  [key=0, style=solid];
m2_31 -> m2_37  [color=darkseagreen4, key=1, label=packetData, style=dashed];
m2_31 -> m2_40  [color=darkseagreen4, key=1, label=packetData, style=dashed];
m2_31 -> m2_41  [color=darkseagreen4, key=1, label=packetData, style=dashed];
m2_31 -> m2_43  [color=darkseagreen4, key=1, label=packetData, style=dashed];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_33  [key=0, style=solid];
m2_31 -> m2_20  [key=2, style=dotted];
m2_31 -> m2_34  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_37  [key=2, style=dotted];
m2_32 -> m2_34  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_38  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_41  [key=0, style=solid];
m2_7 -> m2_19  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_7 -> m2_53  [color=darkseagreen4, key=1, label=data, style=dashed];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> n113  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m2_5 -> m2_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m2_5 -> m2_9  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m2_5 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Ticks", style=dashed];
m2_5 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m2_5 -> m2_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.QuoteBars", style=dashed];
m2_5 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.OptionChains", style=dashed];
m2_5 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Splits", style=dashed];
m2_5 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Dividends", style=dashed];
m2_5 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Delistings", style=dashed];
m2_5 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.SymbolChangedEvents", style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_48  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m2_54 -> m2_3  [color=blue, key=0, style=bold];
m2_60 -> m2_151  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_74  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_71 -> m2_60  [color=darkorchid, key=3, label="Parameter variable dynamic data", style=bold];
m2_71 -> m2_77  [color=darkorchid, key=3, label="method methodReturn bool TryGetValue", style=bold];
m2_132 -> m2_133  [key=0, style=solid];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_135  [key=2, style=dotted];
m2_133 -> m2_136  [key=2, style=dotted];
m2_134 -> m2_132  [color=blue, key=0, style=bold];
m2_135 -> m2_140  [key=0, style=solid];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_55  [key=2, style=dotted];
m2_140 -> m2_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_141 -> m2_135  [color=blue, key=0, style=bold];
m2_142 -> m2_143  [key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_1  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.BaseData>", style=dashed];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_57 -> m2_58  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=2, style=dotted];
m2_58 -> m2_12  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Lean.Engine.DataFeeds.Subscription subscription", style=bold];
m2_58 -> m2_77  [key=0, style=solid];
m2_58 -> m2_79  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Subscription", style=dashed];
m2_61 -> m2_62  [key=0, style=solid];
m2_63 -> m2_61  [color=blue, key=0, style=bold];
m2_114 -> m2_115  [key=0, style=solid];
m2_117 -> m2_118  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_60  [key=2, style=dotted];
m2_116 -> m2_114  [color=blue, key=0, style=bold];
m2_118 -> m2_119  [key=0, style=solid];
m2_119 -> m2_117  [color=blue, key=0, style=bold];
m2_129 -> m2_130  [key=0, style=solid];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_60  [key=2, style=dotted];
m2_131 -> m2_129  [color=blue, key=0, style=bold];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_145  [key=2, style=dotted];
m2_143 -> m2_60  [key=2, style=dotted];
m2_143 -> m2_143  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Slice.SymbolData>", style=dashed];
m2_144 -> m2_142  [color=blue, key=0, style=bold];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_79  [color=darkseagreen4, key=1, label=handler, style=dashed];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=2, style=dotted];
m2_78 -> m2_80  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_71  [color=blue, key=0, style=bold];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_132  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_132  [key=2, style=dotted];
m2_139 -> m2_137  [color=blue, key=0, style=bold];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_78  [color=darkseagreen4, key=1, label="out dynamic", style=dashed];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_77  [key=0, style=solid];
m2_74 -> m2_79  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_76 -> m2_78  [key=0, style=solid];
m2_112 -> m2_22  [color=darkorchid, key=3, label="Field variable QuantConnect.Data.Market.Delistings _delistings", style=bold];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_154  [key=0, style=solid];
m2_151 -> m2_156  [key=0, style=solid];
m2_151 -> m2_158  [key=0, style=solid];
m2_152 -> m2_153  [key=0, style=solid];
m2_154 -> m2_155  [key=0, style=solid];
m2_156 -> m2_157  [key=0, style=solid];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_104  [key=2, style=dotted];
m2_153 -> m2_159  [key=0, style=solid];
m2_155 -> m2_159  [key=0, style=solid];
m2_157 -> m2_159  [key=0, style=solid];
m2_159 -> m2_60  [color=blue, key=0, style=bold];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_122  [key=0, style=solid];
m2_121 -> m2_127  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_128  [key=2, style=dotted];
m2_122 -> m2_125  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_122 -> m2_126  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_123 -> m2_124  [key=0, style=solid];
m2_125 -> m2_124  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_126  [key=0, style=solid];
m2_124 -> m2_55  [key=2, style=dotted];
m2_124 -> m2_56  [key=2, style=dotted];
m2_124 -> m2_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_127 -> m2_22  [color=blue, key=0, style=bold];
m2_160 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_68  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_74  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_107  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_108  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_123  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_124  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_133  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_138  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_160 -> m2_140  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m2_161 -> m2_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m2_162 -> m2_146  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice.SymbolData", style=dashed];
m2_162 -> m2_147  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice.SymbolData", style=dashed];
m2_162 -> m2_148  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice.SymbolData", style=dashed];
m2_162 -> m2_151  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice.SymbolData", style=dashed];
m2_162 -> m2_153  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice.SymbolData", style=dashed];
m2_162 -> m2_155  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice.SymbolData", style=dashed];
m2_162 -> m2_157  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice.SymbolData", style=dashed];
}
