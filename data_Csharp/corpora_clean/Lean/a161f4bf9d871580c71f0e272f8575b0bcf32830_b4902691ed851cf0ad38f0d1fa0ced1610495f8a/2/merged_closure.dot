digraph  {
n24 [label="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper", span=""];
n0 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="52-52"];
n1 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="Py.GIL()", span="54-54"];
n3 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="!model.HasAttr(attributeName)", span="58-58"];
n4 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="throw new NotImplementedException($''IAlphaModel.{attributeName} must be implemented. Please implement this missing method on {model.GetPythonType()}'');", span="60-60"];
n5 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="_model = model", span="64-64"];
n2 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="new[] { ''Update'', ''OnSecuritiesChanged'' }", span="56-56"];
n7 [cluster="Unk.GIL", label="Entry Unk.GIL", span=""];
n8 [cluster="Unk.HasAttr", label="Entry Unk.HasAttr", span=""];
n6 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="52-52"];
n9 [cluster="System.NotImplementedException.NotImplementedException(string)", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
n10 [cluster="Unk.GetPythonType", label="Entry Unk.GetPythonType", span=""];
n11 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="74-74"];
n12 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="Py.GIL()", span="76-76"];
n15 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="yield return insight.AsManagedObject(typeof(Insight)) as Insight;", span="81-81"];
n13 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="var insights = _model.Update(algorithm, data) as PyObject", span="78-78"];
n14 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label=insights, span="79-79"];
n17 [cluster="Unk.Update", label="Entry Unk.Update", span=""];
n16 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="74-74"];
n18 [cluster="Unk.AsManagedObject", label="Entry Unk.AsManagedObject", span=""];
n19 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91"];
n20 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Py.GIL()", span="93-93"];
n21 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="_model.OnSecuritiesChanged(algorithm, changes)", span="95-95"];
n22 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91"];
n23 [cluster="Unk.OnSecuritiesChanged", label="Entry Unk.OnSecuritiesChanged", span=""];
d1 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, label="message = null", prediction=0, span="43-43"];
d0 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="41-41"];
d2 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", label="return true;", span="44-44"];
d3 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="41-41"];
m0_15 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.CredentialsManager.GetLastCredential()", span="30-30"];
m0_13 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", span="34-34"];
m0_17 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", span="51-51"];
m0_18 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", color=green, community=0, file="AuthenticationCommand.cs", label="var logInDialog = new LoginDialog(AuthorizationManager.GetInstance(), previousCredentials, serviceProvider)", prediction=1, span="53-53"];
m0_19 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", color=green, community=0, file="AuthenticationCommand.cs", label="VsUtils.DisplayDialogWindow(logInDialog)", prediction=2, span="54-54"];
m0_20 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="var credentials = logInDialog.GetCredentials()", span="56-56"];
m0_21 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="credentials.HasValue", span="58-58"];
m0_23 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="CredentialsManager.StoreCredentials(credentials.Value)", span="61-61"];
m0_22 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="VSActivityLog.Info(''Storing credentials'')", span="60-60"];
m0_25 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="VSActivityLog.Info(''Login cancelled'')", span="66-66"];
m0_24 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="return true;", span="62-62"];
m0_26 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="return false;", span="67-67"];
m0_27 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoginWithDialog(System.IServiceProvider, QuantConnect.VisualStudioPlugin.Credentials?)", span="51-51"];
m0_30 [cluster="QuantConnect.VisualStudioPlugin.LoginDialog.GetCredentials()", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.LoginDialog.GetCredentials()", span="108-108"];
m0_37 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", span="68-68"];
m0_31 [cluster="QuantConnect.VisualStudioPlugin.CredentialsManager.StoreCredentials(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.CredentialsManager.StoreCredentials(QuantConnect.VisualStudioPlugin.Credentials)", span="45-45"];
m0_12 [cluster="QuantConnect.VisualStudioPlugin.VSActivityLog.Info(string, string)", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.VSActivityLog.Info(string, string)", span="26-26"];
m0_16 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", span="71-71"];
m0_32 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="!previousCredentials.HasValue", span="73-73"];
m0_34 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", color=green, community=0, file="AuthenticationCommand.cs", label="var credentials = previousCredentials.Value", prediction=3, span="78-78"];
m0_33 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="return false;", span="75-75"];
m0_36 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", file="AuthenticationCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthenticationCommand.LoggedInWithLastStorredPassword(QuantConnect.VisualStudioPlugin.Credentials?)", span="71-71"];
m0_14 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", span="58-58"];
m0_28 [cluster="QuantConnect.VisualStudioPlugin.LoginDialog.LoginDialog(QuantConnect.VisualStudioPlugin.AuthorizationManager, QuantConnect.VisualStudioPlugin.Credentials?, System.IServiceProvider)", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.LoginDialog.LoginDialog(QuantConnect.VisualStudioPlugin.AuthorizationManager, QuantConnect.VisualStudioPlugin.Credentials?, System.IServiceProvider)", span="43-43"];
m0_29 [cluster="Unk.DisplayDialogWindow", file="AuthenticationCommand.cs", label="Entry Unk.DisplayDialogWindow", span=""];
m0_38 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", span="86-86"];
m0_39 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", file="AuthenticationCommand.cs", label="AuthorizationManager.GetInstance().Logout()", span="88-88"];
m0_40 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", file="AuthenticationCommand.cs", label="VsUtils.DisplayInStatusBar(serviceProvider, ''Logged out of QuantConnect'')", span="89-89"];
m0_41 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", file="AuthenticationCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", span="86-86"];
m0_0 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", span="30-30"];
m0_1 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", color=green, community=0, file="AuthenticationCommand.cs", label="VSActivityLog.Info(''Logging in'')", prediction=4, span="32-32"];
m0_2 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs", label="var authorizationManager = AuthorizationManager.GetInstance()", span="34-34"];
m0_3 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs", label="authorizationManager.IsLoggedIn()", span="35-35"];
m0_4 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs", label="VSActivityLog.Info(''Already logged in'')", span="37-37"];
m0_6 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs", label="var previousCredentials = CredentialsManager.GetLastCredential()", span="41-41"];
m0_5 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs", label="return true;", span="38-38"];
m0_8 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", color=green, community=0, file="AuthenticationCommand.cs", label="VSActivityLog.Info(''Logged in with previously storred credentials'')", prediction=5, span="44-44"];
m0_9 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs", label="return true;", span="45-45"];
m0_11 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="AuthenticationCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", span="30-30"];
m0_42 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", span="91-91"];
m0_43 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="AuthenticationCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="32-32"];
m0_44 [file="AuthenticationCommand.cs", label="QuantConnect.VisualStudioPlugin.AuthenticationCommand", span=""];
m1_30 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", file="AuthorizationManager.cs", label="_api = null", span="93-93"];
m1_19 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", color=green, community=0, file="AuthorizationManager.cs", label="_api = api", prediction=6, span="77-77"];
m1_20 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="return true;", span="78-78"];
m1_21 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label=FormatException, span="81-81"];
m1_14 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", span="68-68"];
m1_0 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="AuthorizationManager.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="214-214"];
m1_1 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="AuthorizationManager.cs", label="_config = config", span="216-216"];
m1_2 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="AuthorizationManager.cs", label="_symbol = config.Symbol", span="217-217"];
m1_3 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", span="44-44"];
m1_9 [cluster="QuantConnect.VisualStudioPlugin.VSActivityLog.Error(string, string)", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.VSActivityLog.Error(string, string)", span="30-30"];
m1_4 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="_api == null", span="46-46"];
m1_5 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="VSActivityLog.Error(''Accessing API without logging in first'')", span="48-48"];
m1_6 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="throw new InvalidOperationException(''Accessing API without logging in first'');", span="49-49"];
m1_7 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="return _api;", span="51-51"];
m1_8 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", span="44-44"];
m1_10 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="AuthorizationManager.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_11 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", span="58-58"];
m1_18 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="api.Connected", span="75-75"];
m1_17 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="api.Initialize(int.Parse(credentials.UserId), credentials.AccessToken, Globals.DataFolder)", span="74-74"];
m1_22 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", color=green, community=0, file="AuthorizationManager.cs", label="VSActivityLog.Error(''User id is not a valid number'')", prediction=7, span="83-83"];
m1_31 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", file="AuthorizationManager.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", span="91-91"];
m1_16 [cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="AuthorizationManager.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="42-42"];
m1_23 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", color=green, community=0, file="AuthorizationManager.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", prediction=8, span="395-395"];
m1_15 [cluster="QuantConnect.Securities.SecurityPortfolioModel.SecurityPortfolioModel()", file="AuthorizationManager.cs", label="Entry QuantConnect.Securities.SecurityPortfolioModel.SecurityPortfolioModel()", span="24-24"];
m1_24 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", file="AuthorizationManager.cs", label="Exchange.SetDateTimeFrontier(frontier)", span="398-398"];
m1_32 [cluster="QuantConnect.Securities.SecurityHolding.UpdateMarketPrice(decimal)", file="AuthorizationManager.cs", label="QuantConnect.VisualStudioPlugin.AuthorizationManager", span=""];
m1_29 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", file="AuthorizationManager.cs", label="Exit QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", span="395-395"];
m1_12 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", file="AuthorizationManager.cs", label="return _api != null;", span="60-60"];
m1_28 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", file="AuthorizationManager.cs", label="Holdings.UpdateMarketPrice(data.Value)", span="403-403"];
m1_27 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", file="AuthorizationManager.cs", label="Cache.AddData(data)", span="402-402"];
m1_13 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", file="AuthorizationManager.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", span="58-58"];
m1_25 [cluster="QuantConnect.VisualStudioPlugin.VSActivityLog.Info(string, string)", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.VSActivityLog.Info(string, string)", span="26-26"];
m1_26 [cluster="QuantConnect.Api.Api.Api()", file="AuthorizationManager.cs", label="Entry QuantConnect.Api.Api.Api()", span="30-30"];
m1_33 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="AuthorizationManager.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="410-410"];
m1_34 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="AuthorizationManager.cs", label="MarginModel.SetLeverage(this, leverage)", span="412-412"];
m1_35 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="AuthorizationManager.cs", label="Exit QuantConnect.Securities.Security.SetLeverage(decimal)", span="410-410"];
m1_36 [cluster="QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", file="AuthorizationManager.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="39-39"];
m1_37 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="AuthorizationManager.cs", label="Entry QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="418-418"];
m1_38 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="AuthorizationManager.cs", label="_config.DataNormalizationMode = mode", span="420-420"];
m1_39 [cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="AuthorizationManager.cs", label="Exit QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="418-418"];
m1_40 [file="AuthorizationManager.cs", label="QuantConnect.Securities.Security", span=""];
m4_48 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="462-462"];
m4_49 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="462-462"];
m4_34 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="423-423"];
m4_35 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="423-423"];
m4_12 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="360-360"];
m4_13 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="360-360"];
m4_72 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="555-555"];
m4_73 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="555-555"];
m4_30 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="411-411"];
m4_31 [cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="411-411"];
m4_54 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="494-494"];
m4_55 [cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="494-494"];
m4_74 [cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="561-561"];
m4_75 [cluster="QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="561-561"];
m4_26 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="399-399"];
m4_27 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="399-399"];
m4_36 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="428-428"];
m4_37 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="428-428"];
m4_52 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="484-484"];
m4_53 [cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="484-484"];
m4_62 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="523-523"];
m4_63 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="523-523"];
m4_64 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="529-529"];
m4_65 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="529-529"];
m4_2 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="308-308"];
m4_3 [cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="308-308"];
m4_16 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Log(string)", span="372-372"];
m4_17 [cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Log(string)", span="372-372"];
m4_66 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="534-534"];
m4_67 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="534-534"];
m4_44 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="450-450"];
m4_45 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="450-450"];
m4_50 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="474-474"];
m4_51 [cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="474-474"];
m4_80 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="579-579"];
m4_81 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="579-579"];
m4_6 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="322-322"];
m4_7 [cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="322-322"];
m4_70 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="546-546"];
m4_71 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="546-546"];
m4_18 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="378-378"];
m4_19 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Error(string)", span="378-378"];
m4_22 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="389-389"];
m4_23 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="389-389"];
m4_60 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="515-515"];
m4_61 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="515-515"];
m4_4 [cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="316-316"];
m4_5 [cluster="QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetParameter(string)", span="316-316"];
m4_28 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="404-404"];
m4_29 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="404-404"];
m4_20 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="384-384"];
m4_21 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="384-384"];
m4_8 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="330-330"];
m4_9 [cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="330-330"];
m4_40 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="439-439"];
m4_41 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="439-439"];
m4_78 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="573-573"];
m4_79 [cluster="QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="573-573"];
m4_10 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="354-354"];
m4_11 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="354-354"];
m4_42 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="445-445"];
m4_43 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="445-445"];
m4_14 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="366-366"];
m4_15 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="366-366"];
m4_38 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="433-433"];
m4_39 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="433-433"];
m4_24 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="394-394"];
m4_25 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="394-394"];
m4_46 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="455-455"];
m4_47 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="455-455"];
m4_56 [cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="501-501"];
m4_57 [cluster="QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="501-501"];
m4_32 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="418-418"];
m4_33 [cluster="QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="418-418"];
m4_68 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="540-540"];
m4_69 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="540-540"];
m4_82 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="585-585"];
m4_83 [cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="585-585"];
m4_76 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="567-567"];
m4_77 [cluster="QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetRunTimeError(System.Exception)", span="567-567"];
m4_0 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="302-302"];
m4_1 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.Initialize()", span="302-302"];
m4_58 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="507-507"];
m4_59 [cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="507-507"];
m9_39 [cluster="System.Math.Abs(decimal)", file="ImmediateExecutionModel.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m9_54 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m9_74 [cluster="Unk.All", file="ImmediateExecutionModel.cs", label="Entry Unk.All", span=""];
m9_121 [cluster="Unk.ConvertOrderStatus", file="ImmediateExecutionModel.cs", label="Entry Unk.ConvertOrderStatus", span=""];
m9_123 [cluster="Unk.Where", file="ImmediateExecutionModel.cs", label="Entry Unk.Where", span=""];
m9_56 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m9_58 [cluster="int.ToString()", file="ImmediateExecutionModel.cs", label="Entry int.ToString()", span="0-0"];
m9_165 [cluster="System.Collections.Generic.List<T>.Clear()", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m9_155 [cluster="Unk.ToUpper", file="ImmediateExecutionModel.cs", label="Entry Unk.ToUpper", span=""];
m9_72 [cluster="System.Collections.Generic.List<T>.List()", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_117 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42"];
m9_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="413-413"];
m9_126 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Entry lambda expression", span="202-202"];
m9_75 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Entry lambda expression", span="136-136"];
m9_76 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label=a, span="136-136"];
m9_77 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Exit lambda expression", span="136-136"];
m9_127 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="c.Value.BrokerId.Contains(item.BrokerId.First())", span="202-202"];
m9_128 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Exit lambda expression", span="202-202"];
m9_59 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="114-114"];
m9_60 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="throw new NotSupportedException(''GDAXBrokerage.UpdateOrder: Order update not supported. Please cancel and re-create.'');", span="116-116"];
m9_61 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="114-114"];
m9_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="86-86"];
m9_45 [cluster="Unk.GetAuthenticationToken", file="ImmediateExecutionModel.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m9_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="153-153"];
m9_85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="var list = new List<Order>()", span="155-155"];
m9_86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="var req = new RestRequest(''/orders?status=open&status=pending'', Method.GET)", span="157-157"];
m9_107 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="list.Add(order)", span="195-195"];
m9_108 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label=list, span="198-198"];
m9_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="return list;", span="210-210"];
m9_87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="GetAuthenticationToken(req)", span="158-158"];
m9_88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="var response = RestClient.Execute(req)", span="159-159"];
m9_89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="161-161"];
m9_90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="throw new Exception($''GDAXBrokerage.GetOpenOrders: request failed: [{(int) response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="163-163"];
m9_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="var orders = JsonConvert.DeserializeObject<Messages.Order[]>(response.Content)", span="166-166"];
m9_100 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode,\r\n                        ''GDAXBrokerage.GetOpenOrders: Unsupported order type returned from brokerage: '' + item.Type))", span="184-185"];
m9_92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label=orders, span="167-167"];
m9_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="Order order = null", span="169-169"];
m9_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="item.Type == ''market''", span="170-170"];
m9_95 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="order = new MarketOrder { Price = item.Price }", span="172-172"];
m9_96 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="item.Type == ''limit''", span="174-174"];
m9_97 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="order = new LimitOrder { LimitPrice = item.Price }", span="176-176"];
m9_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="item.Type == ''stop''", span="178-178"];
m9_99 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="order = new StopMarketOrder { StopPrice = item.Price }", span="180-180"];
m9_101 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="order.Quantity = item.Side == ''sell'' ? -item.Size : item.Size", span="189-189"];
m9_102 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="order.BrokerId = new List<string> { item.Id.ToString() }", span="190-190"];
m9_103 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="order.Symbol = ConvertProductId(item.ProductId)", span="191-191"];
m9_105 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="order.Status = ConvertOrderStatus(item)", span="193-193"];
m9_106 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="order.Price = item.Price", span="194-194"];
m9_104 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="order.Time = DateTime.UtcNow", span="192-192"];
m9_109 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="item.Status.IsOpen()", span="200-200"];
m9_110 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="var cached = this.CachedOrderIDs.Where(c => c.Value.BrokerId.Contains(item.BrokerId.First()))", span="202-202"];
m9_112 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="this.CachedOrderIDs[cached.First().Key] = item", span="205-205"];
m9_111 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="cached.Any()", span="203-203"];
m9_114 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetOpenOrders()", span="153-153"];
m9_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="104-104"];
m9_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="44-44"];
m9_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="LockStream()", span="46-46"];
m9_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="payload.size = Math.Abs(order.Quantity)", span="52-52"];
m9_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="payload.side = order.Direction.ToString().ToLower()", span="53-53"];
m9_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="payload.type = ConvertOrderType(order.Type)", span="54-54"];
m9_7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="payload.price = order is LimitOrder ? ((LimitOrder)order).LimitPrice : order is StopMarketOrder ? ((StopMarketOrder)order).StopPrice : 0", span="55-55"];
m9_8 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="payload.product_id = ConvertSymbol(order.Symbol)", span="56-56"];
m9_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="CachedOrderIDs.ContainsKey(order.Id)", span="80-80"];
m9_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="82-82"];
m9_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="order.BrokerId.Add(brokerId)", span="86-86"];
m9_24 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="CachedOrderIDs.TryAdd(order.Id, order)", span="87-87"];
m9_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="91-91"];
m9_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="94-94"];
m9_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.PlaceOrder: Order completed successfully orderid:'' + order.Id.ToString()))", span="96-96"];
m9_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="101-101"];
m9_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var message = $''GDAXBrokerage.PlaceOrder: Order failed Order Id: {order.Id} timestamp: {order.Time} quantity: {order.Quantity} content: {response.Content}''", span="103-103"];
m9_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var req = new RestRequest(''/orders'', Method.POST)", span="48-48"];
m9_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="dynamic payload = new ExpandoObject()", span="50-50"];
m9_11 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="req.AddJsonBody(payload)", span="63-63"];
m9_12 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="GetAuthenticationToken(req)", span="65-65"];
m9_13 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var response = RestClient.Execute(req)", span="66-66"];
m9_10 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="payload.overdraft_enabled = true", span="60-60"];
m9_9 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="_algorithm.BrokerageModel.AccountType == AccountType.Margin", span="58-58"];
m9_14 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="response.StatusCode == System.Net.HttpStatusCode.OK && response.Content != null", span="68-68"];
m9_15 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var raw = JsonConvert.DeserializeObject<Messages.Order>(response.Content)", span="70-70"];
m9_17 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GDAXBrokerage.PlaceOrder: Error parsing response from place order: '' + response.Content))", span="74-74"];
m9_16 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="raw == null || raw.Id == null", span="72-72"];
m9_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var brokerId = raw.Id", span="79-79"];
m9_18 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="UnlockStream()", span="75-75"];
m9_19 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="return false;", span="76-76"];
m9_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="UnlockStream()", span="97-97"];
m9_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="return true;", span="98-98"];
m9_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, message))", span="104-104"];
m9_33 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="UnlockStream()", span="105-105"];
m9_34 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="return false;", span="106-106"];
m9_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="44-44"];
m9_37 [cluster="RestRequest.cstr", file="ImmediateExecutionModel.cs", label="Entry RestRequest.cstr", span=""];
m9_38 [cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="ImmediateExecutionModel.cs", label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0"];
m9_48 [cluster="BrokerageMessageEvent.cstr", file="ImmediateExecutionModel.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m9_82 [cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Disconnect()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Disconnect()", span="219-219"];
m9_119 [cluster="Unk.ToString", file="ImmediateExecutionModel.cs", label="Entry Unk.ToString", span=""];
m9_115 [cluster="System.Exception.Exception(string)", file="ImmediateExecutionModel.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m9_156 [cluster="Unk.Create", file="ImmediateExecutionModel.cs", label="Entry Unk.Create", span=""];
m9_53 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m9_44 [cluster="Unk.AddJsonBody", file="ImmediateExecutionModel.cs", label="Entry Unk.AddJsonBody", span=""];
m9_47 [cluster="Unk.>", file="ImmediateExecutionModel.cs", label="Entry Unk.>", span=""];
m9_41 [cluster="string.ToLower()", file="ImmediateExecutionModel.cs", label="Entry string.ToLower()", span="0-0"];
m9_63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="124-124"];
m9_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var success = new List<bool>()", span="126-126"];
m9_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="order.BrokerId", span="128-128"];
m9_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="success.Add(response.StatusCode == System.Net.HttpStatusCode.OK)", span="133-133"];
m9_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="return success.All(a => a);", span="136-136"];
m9_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var req = new RestRequest(''/orders/'' + id, Method.DELETE)", span="130-130"];
m9_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="GetAuthenticationToken(req)", span="131-131"];
m9_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var response = RestClient.Execute(req)", span="132-132"];
m9_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="124-124"];
m9_83 [cluster="QuantConnect.Brokerages.IWebSocket.Close()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.IWebSocket.Close()", span="45-45"];
m9_116 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29"];
m9_52 [cluster="Unk.Add", file="ImmediateExecutionModel.cs", label="Entry Unk.Add", span=""];
m9_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="274-274"];
m9_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="ImmediateExecutionModel.cs", label=Ticks, span="276-276"];
m9_160 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="ImmediateExecutionModel.cs", label="var copy = Ticks.ToArray()", span="278-278"];
m9_161 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="ImmediateExecutionModel.cs", label="Ticks.Clear()", span="279-279"];
m9_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="ImmediateExecutionModel.cs", label="return copy;", span="280-280"];
m9_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetNextTicks()", span="274-274"];
m9_130 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m9_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="218-218"];
m9_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="ImmediateExecutionModel.cs", label="return new List<Holding>();", span="225-225"];
m9_133 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetAccountHoldings()", span="218-218"];
m9_40 [cluster="System.Enum.ToString()", file="ImmediateExecutionModel.cs", label="Entry System.Enum.ToString()", span="0-0"];
m9_49 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m9_78 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="142-142"];
m9_79 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="ImmediateExecutionModel.cs", label="base.Disconnect()", span="144-144"];
m9_80 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="ImmediateExecutionModel.cs", label="WebSocket.Close()", span="146-146"];
m9_81 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="142-142"];
m9_124 [cluster="Unk.Any", file="ImmediateExecutionModel.cs", label="Entry Unk.Any", span=""];
m9_154 [cluster="Unk.GetConversionRate", file="ImmediateExecutionModel.cs", label="Entry Unk.GetConversionRate", span=""];
m9_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="290-290"];
m9_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var totalFee = 0m", span="292-292"];
m9_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="order.BrokerId", span="294-294"];
m9_175 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="totalFee += (decimal)fill.fill_fees", span="307-307"];
m9_176 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="return totalFee;", span="310-310"];
m9_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="296-296"];
m9_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="GetAuthenticationToken(req)", span="297-297"];
m9_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var response = RestClient.Execute(req)", span="298-298"];
m9_172 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="300-300"];
m9_173 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="throw new Exception($''GDAXBrokerage.GetFee: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="302-302"];
m9_174 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="305-305"];
m9_177 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="290-290"];
m9_46 [cluster="Unk.Execute", file="ImmediateExecutionModel.cs", label="Entry Unk.Execute", span=""];
m9_118 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42"];
m9_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m9_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UnlockStream()", span="95-95"];
m9_57 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m9_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="232-232"];
m9_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="var list = new List<Cash>()", span="234-234"];
m9_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="var request = new RestRequest(''/accounts'', Method.GET)", span="236-236"];
m9_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="list.Add(new Cash(item.Currency, item.Balance, 1))", span="251-251"];
m9_147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="list.Add(new Cash(item.Currency.ToUpper(), item.Balance, rate))", span="256-256"];
m9_149 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="list.Add(new Cash(item.Currency.ToUpper(), item.Balance, tick.Price))", span="262-262"];
m9_150 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="return list;", span="267-267"];
m9_137 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="GetAuthenticationToken(request)", span="237-237"];
m9_138 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="var response = RestClient.Execute(request)", span="238-238"];
m9_139 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="240-240"];
m9_140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="throw new Exception($''GDAXBrokerage.GetCashBalance: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="242-242"];
m9_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="JsonConvert.DeserializeObject<Messages.Account[]>(response.Content)", span="245-245"];
m9_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="item.Balance > 0", span="247-247"];
m9_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="item.Currency == ''USD''", span="249-249"];
m9_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="new[] {''GBP'', ''EUR''}.Contains(item.Currency)", span="253-253"];
m9_146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="var rate = GetConversionRate(item.Currency)", span="255-255"];
m9_148 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="var tick = GetTick(Symbol.Create(item.Currency + ''USD'', SecurityType.Crypto, Market.GDAX))", span="260-260"];
m9_151 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", span="232-232"];
m9_73 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="133-133"];
m9_153 [cluster="Unk.Contains", file="ImmediateExecutionModel.cs", label="Entry Unk.Contains", span=""];
m9_122 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m9_125 [cluster="Unk.First", file="ImmediateExecutionModel.cs", label="Entry Unk.First", span=""];
m9_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m9_62 [cluster="System.NotSupportedException.NotSupportedException(string)", file="ImmediateExecutionModel.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m9_164 [cluster="System.Collections.Generic.List<T>.ToArray()", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m9_152 [cluster="Cash.cstr", file="ImmediateExecutionModel.cs", label="Entry Cash.cstr", span=""];
m9_55 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m9_120 [cluster="Unk.ConvertProductId", file="ImmediateExecutionModel.cs", label="Entry Unk.ConvertProductId", span=""];
m9_178 [file="ImmediateExecutionModel.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m9_179 [file="ImmediateExecutionModel.cs", label=item, span=""];
m10_145 [cluster="System.Convert.ToDouble(object)", file="Insight.cs", label="Entry System.Convert.ToDouble(object)", span="0-0"];
m10_180 [cluster="Unk.ToPython", file="Insight.cs", label="Entry Unk.ToPython", span=""];
m10_28 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Insight.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m10_40 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="Insight.cs", label="Entry QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", span="284-284"];
m10_146 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="Insight.cs", label="var seriesDict = GetPandasSeries(pandas, levels)", span="286-286"];
m10_151 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="Insight.cs", label="return pandas.DataFrame(pyDict);", span="294-294"];
m10_147 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="Insight.cs", label="Py.GIL()", span="287-287"];
m10_149 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="Insight.cs", label=seriesDict, span="290-290"];
m10_148 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="Insight.cs", label="var pyDict = new PyDict()", span="289-289"];
m10_150 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="Insight.cs", label="pyDict.SetItem(series.Key, series.Value)", span="292-292"];
m10_152 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="Insight.cs", label="Exit QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", span="284-284"];
m10_65 [cluster="System.Collections.Generic.List<T>.List()", file="Insight.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_99 [cluster="string.Split(params char[])", file="Insight.cs", label="Entry string.Split(params char[])", span="0-0"];
m10_98 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Insight.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m10_35 [cluster="Unk.ToArray", file="Insight.cs", label="Entry Unk.ToArray", span=""];
m10_192 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="348-348"];
m10_38 [cluster="lambda expression", file="Insight.cs", label="x.Value.ToPandasDataFrame(_pandas, maxLevels)", span="86-86"];
m10_37 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="86-86"];
m10_39 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="86-86"];
m10_71 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="145-145"];
m10_74 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="145-145"];
m10_72 [cluster="lambda expression", file="Insight.cs", label="x.ToLower()", span="145-145"];
m10_73 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="145-145"];
m10_75 [cluster="lambda expression", file="Insight.cs", label=x, span="145-145"];
m10_76 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="145-145"];
m10_101 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="198-198"];
m10_104 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="198-198"];
m10_102 [cluster="lambda expression", file="Insight.cs", label=k, span="198-198"];
m10_103 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="198-198"];
m10_105 [cluster="lambda expression", file="Insight.cs", label="new List<double>()", span="198-198"];
m10_106 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="198-198"];
m10_185 [cluster="lambda expression", file="Insight.cs", label="pyObjectArray[levels - 1] = x.ToPython()", span="341-341"];
m10_193 [cluster="lambda expression", file="Insight.cs", label="pandas.Series(v.Value, index)", span="348-348"];
m10_186 [cluster="lambda expression", file="Insight.cs", label="return new PyTuple(pyObjectArray);", span="342-342"];
m10_184 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="339-343"];
m10_189 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="348-348"];
m10_187 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="339-343"];
m10_190 [cluster="lambda expression", file="Insight.cs", label="k.Key", span="348-348"];
m10_191 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="348-348"];
m10_194 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="348-348"];
m10_33 [cluster="Unk.DataFrame", file="Insight.cs", label="Entry Unk.DataFrame", span=""];
m10_10 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Insight.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m10_68 [cluster="Unk.Series", file="Insight.cs", label="Entry Unk.Series", span=""];
m10_179 [cluster="QuantConnect.Symbol.ToString()", file="Insight.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m10_183 [cluster="Unk.from_tuples", file="Insight.cs", label="Entry Unk.from_tuples", span=""];
m10_30 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="Insight.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m10_80 [cluster="Unk.Repr", file="Insight.cs", label="Entry Unk.Repr", span=""];
m10_77 [cluster="QuantConnect.Python.PandasConverter.ToString()", file="Insight.cs", label="Entry QuantConnect.Python.PandasConverter.ToString()", span="153-153"];
m10_78 [cluster="QuantConnect.Python.PandasConverter.ToString()", file="Insight.cs", label="return _pandas == null\r\n                ? ''pandas module was not imported.''\r\n                : _pandas.Repr();", span="155-157"];
m10_79 [cluster="QuantConnect.Python.PandasConverter.ToString()", file="Insight.cs", label="Exit QuantConnect.Python.PandasConverter.ToString()", span="153-153"];
m10_31 [cluster="System.Math.Max(int, int)", file="Insight.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m10_0 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="Insight.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m10_1 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="Insight.cs", label="pandas == null", span="40-40"];
m10_4 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="Insight.cs", label="_pandas = pandas", span="48-48"];
m10_2 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="Insight.cs", label="Py.GIL()", span="42-42"];
m10_3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="Insight.cs", label="pandas = Py.Import(''pandas'')", span="44-44"];
m10_5 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="Insight.cs", label=PythonException, span="50-50"];
m10_6 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="Insight.cs", label="Logging.Log.Error($''PandasConverter: Failed to import pandas module: {pythonException}'')", span="52-52"];
m10_7 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="Insight.cs", label="Exit QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m10_29 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="Entry QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", span="179-179"];
m10_81 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="var columns = ''open,high,low,close''", span="181-181"];
m10_82 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="baseData is TradeBar", span="183-183"];
m10_84 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="baseData is QuoteBar", span="187-187"];
m10_86 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="baseData is DynamicData", span="191-191"];
m10_87 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="columns = ''value,'' + string.Join('','', ((DynamicData)baseData).GetStorageDictionary().Keys)", span="195-195"];
m10_89 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_symbol = baseData.Symbol", span="199-199"];
m10_83 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="columns += '',volume''", span="185-185"];
m10_85 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="columns += '',askopen,askhigh,asklow,askclose,asksize,bidopen,bidhigh,bidlow,bidclose,bidsize''", span="189-189"];
m10_88 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series = columns.Split(',').ToDictionary(k => k, v => new List<double>())", span="198-198"];
m10_90 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_timeIndex = new List<DateTime>()", span="200-200"];
m10_91 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="Levels = 2", span="202-202"];
m10_92 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_symbol.SecurityType == SecurityType.Future", span="203-203"];
m10_93 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="Levels = 3", span="203-203"];
m10_94 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_symbol.SecurityType == SecurityType.Option", span="204-204"];
m10_95 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="Levels = 5", span="204-204"];
m10_96 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="Insight.cs", label="Exit QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", span="179-179"];
m10_32 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="Entry QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", span="211-211"];
m10_107 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_timeIndex.Add(baseData.EndTime)", span="213-213"];
m10_108 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="var bar = baseData as IBaseDataBar", span="215-215"];
m10_139 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="var data = baseData as DynamicData", span="267-267"];
m10_109 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="bar != null", span="216-216"];
m10_110 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''open''].Add((double)bar.Open)", span="218-218"];
m10_111 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''high''].Add((double)bar.High)", span="219-219"];
m10_112 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''low''].Add((double)bar.Low)", span="220-220"];
m10_113 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''close''].Add((double)bar.Close)", span="221-221"];
m10_114 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="var tradeBar = bar as TradeBar", span="223-223"];
m10_117 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="var quoteBar = bar as QuoteBar", span="229-229"];
m10_115 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="tradeBar != null", span="224-224"];
m10_116 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''volume''].Add((double)tradeBar.Volume)", span="226-226"];
m10_118 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="quoteBar != null", span="230-230"];
m10_119 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''asksize''].Add((double)quoteBar.LastAskSize)", span="232-232"];
m10_120 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''bidsize''].Add((double)quoteBar.LastBidSize)", span="233-233"];
m10_121 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="quoteBar.Ask != null", span="235-235"];
m10_122 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''askopen''].Add((double)quoteBar.Ask.Open)", span="237-237"];
m10_123 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''askhigh''].Add((double)quoteBar.Ask.High)", span="238-238"];
m10_124 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''asklow''].Add((double)quoteBar.Ask.Low)", span="239-239"];
m10_125 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''askclose''].Add((double)quoteBar.Ask.Close)", span="240-240"];
m10_130 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="quoteBar.Bid != null", span="250-250"];
m10_131 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''bidopen''].Add((double)quoteBar.Bid.Open)", span="252-252"];
m10_132 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''bidhigh''].Add((double)quoteBar.Bid.High)", span="253-253"];
m10_133 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''bidlow''].Add((double)quoteBar.Bid.Low)", span="254-254"];
m10_134 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''bidclose''].Add((double)quoteBar.Bid.Close)", span="255-255"];
m10_126 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''askopen''].Add(double.NaN)", span="244-244"];
m10_127 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''askhigh''].Add(double.NaN)", span="245-245"];
m10_128 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''asklow''].Add(double.NaN)", span="246-246"];
m10_129 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''askclose''].Add(double.NaN)", span="247-247"];
m10_135 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''bidopen''].Add(double.NaN)", span="259-259"];
m10_136 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''bidhigh''].Add(double.NaN)", span="260-260"];
m10_137 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''bidlow''].Add(double.NaN)", span="261-261"];
m10_138 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''bidclose''].Add(double.NaN)", span="262-262"];
m10_140 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="data != null", span="268-268"];
m10_141 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="data.GetStorageDictionary()", span="270-270"];
m10_143 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[''value''].Add((double)data.Value)", span="274-274"];
m10_142 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="_series[kvp.Key].Add(Convert.ToDouble(kvp.Value))", span="272-272"];
m10_144 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="Insight.cs", label="Exit QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", span="211-211"];
m10_70 [cluster="Unk.OrderBy", file="Insight.cs", label="Entry Unk.OrderBy", span=""];
m10_52 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="Entry QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="126-126"];
m10_53 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="Py.GIL()", span="128-128"];
m10_55 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label=data, span="132-132"];
m10_62 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="return _pandas.DataFrame(pyDict, columns: data.Keys.Select(x => x.ToLower()).OrderBy(x => x));", span="145-145"];
m10_54 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="var pyDict = new PyDict()", span="130-130"];
m10_61 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="pyDict.SetItem(kvp.Key.ToLower(), _pandas.Series(values, index))", span="142-142"];
m10_56 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="var index = new List<DateTime>()", span="134-134"];
m10_58 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="kvp.Value", span="137-137"];
m10_57 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="var values = new List<double>()", span="135-135"];
m10_59 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="index.Add(item.EndTime)", span="139-139"];
m10_60 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="values.Add((double)item.Value)", span="140-140"];
m10_63 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="Insight.cs", label="Exit QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="126-126"];
m10_188 [cluster="PyTuple.cstr", file="Insight.cs", label="Entry PyTuple.cstr", span=""];
m10_67 [cluster="string.ToLower()", file="Insight.cs", label="Entry string.ToLower()", span="0-0"];
m10_41 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="96-96"];
m10_42 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label="PandasData sliceData = null", span="99-99"];
m10_43 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label=data, span="100-100"];
m10_44 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label="sliceData == null", span="102-102"];
m10_46 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label="sliceData.Add(datum)", span="106-106"];
m10_47 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label="sliceData == null", span="111-111"];
m10_50 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label="return sliceData.ToPandasDataFrame(_pandas);", span="118-118"];
m10_45 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label="sliceData = new PandasData(datum)", span="104-104"];
m10_48 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label="Py.GIL()", span="113-113"];
m10_49 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label="return _pandas.DataFrame();", span="115-115"];
m10_51 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="Insight.cs", label="Exit QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="96-96"];
m10_69 [cluster="Unk.SetItem", file="Insight.cs", label="Entry Unk.SetItem", span=""];
m10_181 [cluster="System.Enum.ToString()", file="Insight.cs", label="Entry System.Enum.ToString()", span="0-0"];
m10_182 [cluster="PyString.cstr", file="Insight.cs", label="Entry PyString.cstr", span=""];
m10_9 [cluster="Unk.Import", file="Insight.cs", label="Entry Unk.Import", span=""];
m10_153 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="Entry QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", span="304-304"];
m10_154 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="var pyObjectArray = new PyObject[levels]", span="306-306"];
m10_155 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="pyObjectArray[levels - 2] = _symbol.ToString().ToPython()", span="307-307"];
m10_165 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="i < levels - 1", span="323-323"];
m10_170 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="levels == 3", span="333-333"];
m10_172 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="levels == 5", span="334-334"];
m10_175 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="var tuples = _timeIndex.Select(x =>\r\n                {\r\n                    pyObjectArray[levels - 1] = x.ToPython();\r\n                    return new PyTuple(pyObjectArray);\r\n                }).ToArray()", span="339-343"];
m10_176 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="var index = pandas.MultiIndex.from_tuples(tuples, names: names.Split(','))", span="345-345"];
m10_177 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="return _series.ToDictionary(k => k.Key, v => pandas.Series(v.Value, index));", span="348-348"];
m10_157 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="pyObjectArray[0] = _symbol.ID.Date.ToPython()", span="311-311"];
m10_158 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="pyObjectArray[1] = _symbol.Value.ToPython()", span="312-312"];
m10_160 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="pyObjectArray[0] = _symbol.ID.Date.ToPython()", span="316-316"];
m10_161 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="pyObjectArray[1] = _symbol.ID.StrikePrice.ToPython()", span="317-317"];
m10_162 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="pyObjectArray[2] = _symbol.ID.OptionRight.ToString().ToPython()", span="318-318"];
m10_163 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="pyObjectArray[3] = _symbol.Value.ToPython()", span="319-319"];
m10_166 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="pyObjectArray[i] == null", span="325-325"];
m10_167 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="pyObjectArray[i] = new PyString(string.Empty)", span="327-327"];
m10_156 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="_symbol.SecurityType == SecurityType.Future", span="309-309"];
m10_159 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="_symbol.SecurityType == SecurityType.Option", span="314-314"];
m10_164 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="var i = 0", span="323-323"];
m10_168 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="i++", span="323-323"];
m10_169 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="var names = ''symbol,time''", span="332-332"];
m10_171 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="names = ''expiry,symbol,time''", span="333-333"];
m10_173 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="names = ''expiry,strike,type,symbol,time''", span="334-334"];
m10_174 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="Py.GIL()", span="336-336"];
m10_178 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="Insight.cs", label="Exit QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", span="304-304"];
m10_27 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Insight.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_66 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Insight.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_36 [cluster="Unk.concat", file="Insight.cs", label="Entry Unk.concat", span=""];
m10_11 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m10_12 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="var maxLevels = 0", span="63-63"];
m10_14 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label=data, span="66-66"];
m10_13 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="var sliceDataDict = new Dictionary<Symbol, PandasData>()", span="64-64"];
m10_19 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="maxLevels = Math.Max(maxLevels, value.Levels)", span="74-74"];
m10_24 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="var dataFrames = sliceDataDict.Select(x => x.Value.ToPandasDataFrame(_pandas, maxLevels))", span="86-86"];
m10_17 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="!sliceDataDict.TryGetValue(baseData.Symbol, out value)", span="71-71"];
m10_18 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="sliceDataDict.Add(baseData.Symbol, value = new PandasData(baseData))", span="73-73"];
m10_22 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="sliceDataDict.Count == 0", span="82-82"];
m10_15 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="slice.Values", span="68-68"];
m10_21 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="Py.GIL()", span="80-80"];
m10_16 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="PandasData value", span="70-70"];
m10_20 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="value.Add(baseData)", span="76-76"];
m10_23 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="return _pandas.DataFrame();", span="84-84"];
m10_25 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="return _pandas.concat(dataFrames.ToArray());", span="87-87"];
m10_26 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="Insight.cs", label="Exit QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m10_97 [cluster="QuantConnect.Data.DynamicData.GetStorageDictionary()", file="Insight.cs", label="Entry QuantConnect.Data.DynamicData.GetStorageDictionary()", span="131-131"];
m10_64 [cluster="PyDict.cstr", file="Insight.cs", label="Entry PyDict.cstr", span=""];
m10_34 [cluster="Unk.Select", file="Insight.cs", label="Entry Unk.Select", span=""];
m10_100 [cluster="Unk.ToDictionary", file="Insight.cs", label="Entry Unk.ToDictionary", span=""];
m10_195 [file="Insight.cs", label="QuantConnect.Python.PandasConverter", span=""];
m10_196 [file="Insight.cs", label=maxLevels, span=""];
m10_197 [file="Insight.cs", label="QuantConnect.Python.PandasData", span=""];
m10_198 [file="Insight.cs", label=int, span=""];
m10_199 [file="Insight.cs", label=pyObjectArray, span=""];
m10_200 [file="Insight.cs", label=dynamic, span=""];
m10_201 [file="Insight.cs", label=index, span=""];
m11_207 [cluster="QuantConnect.Securities.SecurityTransactionModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="369-369"];
m11_184 [cluster="QuantConnect.Securities.SecurityTransactionModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="313-313"];
m11_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", span="119-119"];
m11_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="var model = new SecurityTransactionModel()", span="121-121"];
m11_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="var order = new StopLimitOrder(Symbol, 100, 101.5m, 101.75m, DateTime.Now, type: SecurityType.Equity)", span="122-122"];
m11_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="var fill = model.StopLimitFill(security, order)", span="127-127"];
m11_85 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="fill = model.StopLimitFill(security, order)", span="136-136"];
m11_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="fill = model.StopLimitFill(security, order)", span="145-145"];
m11_76 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="123-123"];
m11_83 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="132-132"];
m11_89 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="141-141"];
m11_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="148-148"];
m11_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.LimitPrice, fill.FillPrice)", span="149-149"];
m11_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="151-151"];
m11_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="var security = new Security(config, 1)", span="124-124"];
m11_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 100m))", span="125-125"];
m11_84 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 102m))", span="134-134"];
m11_90 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101.66m))", span="143-143"];
m11_80 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="129-129"];
m11_81 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="130-130"];
m11_82 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="131-131"];
m11_86 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="138-138"];
m11_87 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="139-139"];
m11_88 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="140-140"];
m11_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="150-150"];
m11_96 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", file="InsightAnalysisContext.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillBuy()", span="119-119"];
m11_15 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="214-214"];
m11_50 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="55-55"];
m11_98 [cluster="QuantConnect.Securities.SecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="177-177"];
m11_99 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", span="155-155"];
m11_100 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="var model = new SecurityTransactionModel()", span="157-157"];
m11_101 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="var order = new StopLimitOrder(Symbol, -100, 101.75m, 101.50m, DateTime.Now, type: SecurityType.Equity)", span="158-158"];
m11_105 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="var fill = model.StopLimitFill(security, order)", span="163-163"];
m11_111 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="fill = model.StopLimitFill(security, order)", span="172-172"];
m11_117 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="fill = model.StopLimitFill(security, order)", span="181-181"];
m11_102 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="159-159"];
m11_109 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="168-168"];
m11_115 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="177-177"];
m11_118 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="184-184"];
m11_119 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.LimitPrice, fill.FillPrice)", span="185-185"];
m11_121 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="187-187"];
m11_103 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="var security = new Security(config, 1)", span="160-160"];
m11_104 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 102m))", span="161-161"];
m11_110 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101m))", span="170-170"];
m11_116 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101.66m))", span="179-179"];
m11_106 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="165-165"];
m11_107 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="166-166"];
m11_108 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="167-167"];
m11_112 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="174-174"];
m11_113 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="175-175"];
m11_114 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="176-176"];
m11_120 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="186-186"];
m11_122 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", file="InsightAnalysisContext.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopLimitFillSell()", span="155-155"];
m11_14 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool, int)", span="109-109"];
m11_97 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="65-65"];
m11_13 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="51-51"];
m11_16 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", span="52-52"];
m11_186 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", span="275-275"];
m11_187 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="var reference = DateTime.Today.AddHours(15)", span="277-277"];
m11_188 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="var model = new SecurityTransactionModel()", span="278-278"];
m11_189 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="var order = new MarketOnCloseOrder(Symbol, SecurityType.Equity, 100, reference, 1m)", span="279-279"];
m11_192 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="var time = reference", span="282-282"];
m11_196 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="time = reference.AddMinutes(59)", span="289-289"];
m11_200 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="time = reference.AddMinutes(60)", span="296-296"];
m11_194 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="var fill = model.MarketOnCloseFill(security, order)", span="285-285"];
m11_198 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="fill = model.MarketOnCloseFill(security, order)", span="292-292"];
m11_202 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="fill = model.MarketOnCloseFill(security, order)", span="299-299"];
m11_190 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="280-280"];
m11_203 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="300-300"];
m11_191 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="var security = new Security(config, 1) { Exchange = new EquityExchange() }", span="281-281"];
m11_193 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1m, 2m, 0.5m, 1.33m, 100))", span="283-283"];
m11_197 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1.33m, 2.75m, 1.15m, 1.45m, 100))", span="290-290"];
m11_201 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1.45m, 2.0m, 1.1m, 1.40m, 100))", span="297-297"];
m11_204 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(security.Close, fill.FillPrice)", span="301-301"];
m11_195 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="286-286"];
m11_199 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="293-293"];
m11_205 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", file="InsightAnalysisContext.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnCloseUsingClosingPrice()", span="275-275"];
m11_123 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", span="191-191"];
m11_124 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="var model = new SecurityTransactionModel()", span="193-193"];
m11_125 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="var order = new StopMarketOrder(Symbol, 100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="194-194"];
m11_129 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="var fill = model.StopMarketFill(security, order)", span="199-199"];
m11_135 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="fill = model.StopMarketFill(security, order)", span="208-208"];
m11_126 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="195-195"];
m11_133 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="204-204"];
m11_136 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="211-211"];
m11_137 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(Math.Max(security.Price, order.StopPrice), fill.FillPrice)", span="212-212"];
m11_139 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="214-214"];
m11_127 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="var security = new Security(config, 1)", span="196-196"];
m11_128 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101m))", span="197-197"];
m11_134 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 102.5m))", span="206-206"];
m11_130 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="201-201"];
m11_131 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="202-202"];
m11_132 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="203-203"];
m11_138 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="213-213"];
m11_140 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", file="InsightAnalysisContext.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillBuy()", span="191-191"];
m11_141 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="54-54"];
m11_183 [cluster="QuantConnect.Securities.Equity.EquityExchange.EquityExchange()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Securities.Equity.EquityExchange.EquityExchange()", span="47-47"];
m11_181 [cluster="System.DateTime.AddHours(double)", file="InsightAnalysisContext.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m11_19 [cluster="Unk.AreEqual", file="InsightAnalysisContext.cs", label="Entry Unk.AreEqual", span=""];
m11_161 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", span="245-245"];
m11_162 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="var reference = DateTime.Today.AddHours(9)", span="247-247"];
m11_163 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="var model = new SecurityTransactionModel()", span="248-248"];
m11_164 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="var order = new MarketOnOpenOrder(Symbol, SecurityType.Equity, 100, reference, 1m)", span="249-249"];
m11_167 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="var time = reference", span="252-252"];
m11_171 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="time = reference.AddMinutes(29)", span="259-259"];
m11_175 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="time = reference.AddMinutes(30)", span="266-266"];
m11_169 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="var fill = model.MarketOnOpenFill(security, order)", span="255-255"];
m11_173 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="fill = model.MarketOnOpenFill(security, order)", span="262-262"];
m11_177 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="fill = model.MarketOnOpenFill(security, order)", span="269-269"];
m11_165 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="250-250"];
m11_178 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="270-270"];
m11_166 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="var security = new Security(config, 1) {Exchange = new EquityExchange()}", span="251-251"];
m11_168 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1m, 2m, 0.5m, 1.33m, 100))", span="253-253"];
m11_172 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1.33m, 2.75m, 1.15m, 1.45m, 100))", span="260-260"];
m11_176 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(time, new TradeBar(time, Symbol, 1.45m, 2.0m, 1.1m, 1.40m, 100))", span="267-267"];
m11_179 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(security.Open, fill.FillPrice)", span="271-271"];
m11_170 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="256-256"];
m11_174 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="263-263"];
m11_180 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", file="InsightAnalysisContext.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketOnOpenUsingOpenPrice()", span="245-245"];
m11_17 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", span="403-403"];
m11_206 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", span="50-50"];
m11_18 [cluster="QuantConnect.Securities.SecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="60-60"];
m11_12 [cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="42-42"];
m11_51 [cluster="QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="251-251"];
m11_0 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", span="32-32"];
m11_1 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="var model = new SecurityTransactionModel()", span="34-34"];
m11_2 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="var order = new MarketOrder(Symbol, 100, DateTime.Now, type: SecurityType.Equity)", span="35-35"];
m11_6 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="var fill = model.MarketFill(security, order)", span="41-41"];
m11_3 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="36-36"];
m11_7 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="42-42"];
m11_10 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="45-45"];
m11_4 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="var security = new Security(config, 1)", span="37-37"];
m11_5 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101.123m))", span="39-39"];
m11_8 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(security.Price, fill.FillPrice)", span="43-43"];
m11_9 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="44-44"];
m11_11 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", file="InsightAnalysisContext.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillBuy()", span="32-32"];
m11_20 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", span="48-48"];
m11_21 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="InsightAnalysisContext.cs", label="var model = new SecurityTransactionModel()", span="50-50"];
m11_22 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="InsightAnalysisContext.cs", label="var order = new MarketOrder(Symbol, -100, DateTime.Now, type: SecurityType.Equity)", span="51-51"];
m11_23 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="InsightAnalysisContext.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="52-52"];
m11_30 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="61-61"];
m11_24 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="InsightAnalysisContext.cs", label="var security = new Security(config, 1)", span="53-53"];
m11_28 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(security.Price, fill.FillPrice)", span="59-59"];
m11_29 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="60-60"];
m11_31 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", file="InsightAnalysisContext.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsMarketFillSell()", span="48-48"];
m11_143 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", span="218-218"];
m11_144 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="var model = new SecurityTransactionModel()", span="220-220"];
m11_145 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="var order = new StopMarketOrder(Symbol, -100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="221-221"];
m11_149 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="var fill = model.StopMarketFill(security, order)", span="226-226"];
m11_155 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="fill = model.StopMarketFill(security, order)", span="235-235"];
m11_146 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="222-222"];
m11_153 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="231-231"];
m11_156 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="238-238"];
m11_157 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(Math.Min(security.Price, order.StopPrice), fill.FillPrice)", span="239-239"];
m11_159 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="241-241"];
m11_147 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="var security = new Security(config, 1)", span="223-223"];
m11_148 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 102m))", span="224-224"];
m11_154 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101m))", span="233-233"];
m11_150 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="228-228"];
m11_151 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="229-229"];
m11_152 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="230-230"];
m11_158 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="240-240"];
m11_160 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", file="InsightAnalysisContext.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsStopMarketFillSell()", span="218-218"];
m11_142 [cluster="QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="105-105"];
m11_72 [cluster="System.Math.Max(decimal, decimal)", file="InsightAnalysisContext.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m11_53 [cluster="System.Math.Min(decimal, decimal)", file="InsightAnalysisContext.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m11_185 [cluster="System.DateTime.AddMinutes(double)", file="InsightAnalysisContext.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m11_32 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", span="65-65"];
m11_33 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="var model = new SecurityTransactionModel()", span="67-67"];
m11_34 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="var order = new LimitOrder(Symbol, 100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="68-68"];
m11_38 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="var fill = model.LimitFill(security, order)", span="73-73"];
m11_44 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="fill = model.LimitFill(security, order)", span="82-82"];
m11_35 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="69-69"];
m11_42 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="78-78"];
m11_45 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="85-85"];
m11_46 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(Math.Min(order.LimitPrice, security.High), fill.FillPrice)", span="86-86"];
m11_48 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="88-88"];
m11_36 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="var security = new Security(config, 1)", span="70-70"];
m11_37 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 102m))", span="71-71"];
m11_43 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new TradeBar(DateTime.Now, Symbol, 102m, 103m, 101m, 102.3m, 100))", span="80-80"];
m11_39 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="75-75"];
m11_40 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="76-76"];
m11_41 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="77-77"];
m11_47 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="87-87"];
m11_49 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", file="InsightAnalysisContext.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillBuy()", span="65-65"];
m11_54 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", span="92-92"];
m11_55 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="var model = new SecurityTransactionModel()", span="94-94"];
m11_56 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="var order = new LimitOrder(Symbol, -100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="95-95"];
m11_60 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="var fill = model.LimitFill(security, order)", span="100-100"];
m11_66 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="fill = model.LimitFill(security, order)", span="109-109"];
m11_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, Symbol, Resolution.Minute, true, true, true, true, false, 0)", span="96-96"];
m11_64 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="105-105"];
m11_67 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="112-112"];
m11_68 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(Math.Max(order.LimitPrice, security.Low), fill.FillPrice)", span="113-113"];
m11_70 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="115-115"];
m11_58 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="var security = new Security(config, 1)", span="97-97"];
m11_59 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(Symbol, DateTime.Now, 101m))", span="98-98"];
m11_65 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="security.SetMarketPrice(DateTime.Now, new TradeBar(DateTime.Now, Symbol, 102m, 103m, 101m, 102.3m, 100))", span="107-107"];
m11_63 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="104-104"];
m11_69 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="114-114"];
m11_71 [cluster="QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", file="InsightAnalysisContext.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityTransactionModelTests.PerformsLimitFillSell()", span="92-92"];
m11_182 [cluster="QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Orders.MarketOnOpenOrder.MarketOnOpenOrder(string, QuantConnect.SecurityType, int, System.DateTime, decimal, string)", span="49-49"];
m11_52 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="InsightAnalysisContext.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="178-178"];
m12_24 [cluster="Unk.ToLower", file="InsightJsonConverterTests.cs", label="Entry Unk.ToLower", span=""];
m12_22 [cluster="Unk.AreEqual", file="InsightJsonConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m12_44 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", span="74-74"];
m12_45 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="var jObject = JObject.Parse(jsonNoScore)", span="76-76"];
m12_46 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="var insight = Insight.FromSerializedInsight(new SerializedInsight\r\n            {\r\n                Id = jObject[''id''].Value<string>(),\r\n                SourceModel = jObject[''source-model''].Value<string>(),\r\n                GeneratedTime = jObject[''generated-time''].Value<double>(),\r\n                CloseTime = jObject[''close-time''].Value<double>(),\r\n                Symbol = jObject[''symbol''].Value<string>(),\r\n                Ticker = jObject[''ticker''].Value<string>(),\r\n                Type = (InsightType)Enum.Parse(typeof(InsightType), jObject[''type''].Value<string>(), true),\r\n                ReferenceValue = jObject[''reference''].Value<decimal>(),\r\n                Direction = (InsightDirection)Enum.Parse(typeof(InsightDirection), jObject[''direction''].Value<string>(), true),\r\n                Period = jObject[''period''].Value<double>(),\r\n                Magnitude = jObject[''magnitude''].Value<double>()\r\n            })", span="77-90"];
m12_47 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="var result = JsonConvert.SerializeObject(insight, Formatting.Indented)", span="91-91"];
m12_48 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jsonNoScore, result)", span="92-92"];
m12_49 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithoutScore()", span="74-74"];
m12_21 [cluster="Unk.ToString", file="InsightJsonConverterTests.cs", label="Entry Unk.ToString", span=""];
m12_19 [cluster="Unk.Parse", file="InsightJsonConverterTests.cs", label="Entry Unk.Parse", span=""];
m12_51 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", span="198-198"];
m12_25 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", span="52-52"];
m12_26 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="var jObject = JObject.Parse(jsonWithScore)", span="54-54"];
m12_27 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="var result = JsonConvert.DeserializeObject<Insight>(jsonWithScore)", span="55-55"];
m12_28 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''id''].Value<string>(), result.Id.ToString(''N''))", span="56-56"];
m12_29 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''source-model''].Value<string>(), result.SourceModel)", span="57-57"];
m12_30 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''generated-time''].Value<double>(), Time.DateTimeToUnixTimeStamp(result.GeneratedTimeUtc), 5e-4)", span="58-58"];
m12_31 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''close-time''].Value<double>(), Time.DateTimeToUnixTimeStamp(result.CloseTimeUtc), 5e-4)", span="59-59"];
m12_32 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''symbol''].Value<string>(), result.Symbol.ID.ToString())", span="60-60"];
m12_33 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''ticker''].Value<string>(), result.Symbol.Value)", span="61-61"];
m12_34 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''type''].Value<string>(), result.Type.ToLower())", span="62-62"];
m12_35 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''reference''].Value<decimal>(), result.ReferenceValue)", span="63-63"];
m12_36 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''direction''].Value<string>(), result.Direction.ToLower())", span="64-64"];
m12_37 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''period''].Value<double>(), result.Period.TotalSeconds)", span="65-65"];
m12_38 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''magnitude''].Value<double>(), result.Magnitude)", span="66-66"];
m12_41 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''score-magnitude''].Value<double>(), result.Score.Magnitude)", span="69-69"];
m12_42 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''score-direction''].Value<double>(), result.Score.Direction)", span="70-70"];
m12_39 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(null, result.Confidence)", span="67-67"];
m12_40 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(true, result.Score.IsFinalScore)", span="68-68"];
m12_43 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithScore()", span="52-52"];
m12_53 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", span="96-96"];
m12_54 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="var jObject = JObject.Parse(jsonWithScore)", span="98-98"];
m12_55 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="var insight = Insight.FromSerializedInsight(new SerializedInsight\r\n            {\r\n                Id = jObject[''id''].Value<string>(),\r\n                SourceModel = jObject[''source-model''].Value<string>(),\r\n                GeneratedTime = jObject[''generated-time''].Value<double>(),\r\n                CloseTime = jObject[''close-time''].Value<double>(),\r\n                Symbol = jObject[''symbol''].Value<string>(),\r\n                Ticker = jObject[''ticker''].Value<string>(),\r\n                Type = (InsightType)Enum.Parse(typeof(InsightType), jObject[''type''].Value<string>(), true),\r\n                ReferenceValue = jObject[''reference''].Value<decimal>(),\r\n                Direction = (InsightDirection)Enum.Parse(typeof(InsightDirection), jObject[''direction''].Value<string>(), true),\r\n                Period = jObject[''period''].Value<double>(),\r\n                Magnitude = jObject[''magnitude''].Value<double>(),\r\n                ScoreIsFinal = jObject[''score-final''].Value<bool>(),\r\n                ScoreMagnitude = jObject[''score-magnitude''].Value<double>(),\r\n                ScoreDirection = jObject[''score-direction''].Value<double>(),\r\n                EstimatedValue = jObject[''estimated-value''].Value<decimal>()\r\n            })", span="99-116"];
m12_56 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="var result = JsonConvert.SerializeObject(insight, Formatting.Indented)", span="117-117"];
m12_57 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jsonWithScore, result)", span="118-118"];
m12_58 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.SerializesInsightWithScore()", span="96-96"];
m12_20 [cluster="Unk.>", file="InsightJsonConverterTests.cs", label="Entry Unk.>", span=""];
m12_23 [cluster="Unk.DateTimeToUnixTimeStamp", file="InsightJsonConverterTests.cs", label="Entry Unk.DateTimeToUnixTimeStamp", span=""];
m12_50 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", span="112-112"];
m12_0 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", span="28-28"];
m12_1 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="var jObject = JObject.Parse(jsonNoScore)", span="30-30"];
m12_2 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="var result = JsonConvert.DeserializeObject<Insight>(jsonNoScore)", span="31-31"];
m12_3 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''id''].Value<string>(), result.Id.ToString(''N''))", span="32-32"];
m12_4 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''source-model''].Value<string>(), result.SourceModel)", span="33-33"];
m12_5 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''generated-time''].Value<double>(), Time.DateTimeToUnixTimeStamp(result.GeneratedTimeUtc), 5e-4)", span="34-34"];
m12_6 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''close-time''].Value<double>(), Time.DateTimeToUnixTimeStamp(result.CloseTimeUtc), 5e-4)", span="35-35"];
m12_7 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''symbol''].Value<string>(), result.Symbol.ID.ToString())", span="36-36"];
m12_8 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''ticker''].Value<string>(), result.Symbol.Value)", span="37-37"];
m12_9 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''type''].Value<string>(), result.Type.ToLower())", span="38-38"];
m12_10 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''reference''].Value<decimal>(), result.ReferenceValue)", span="39-39"];
m12_11 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''direction''].Value<string>(), result.Direction.ToLower())", span="40-40"];
m12_12 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''period''].Value<double>(), result.Period.TotalSeconds)", span="41-41"];
m12_13 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(jObject[''magnitude''].Value<double>(), result.Magnitude)", span="42-42"];
m12_14 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(null, result.Confidence)", span="43-43"];
m12_15 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(false, result.Score.IsFinalScore)", span="46-46"];
m12_16 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(0, result.Score.Magnitude)", span="47-47"];
m12_17 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(0, result.Score.Direction)", span="48-48"];
m12_18 [cluster="QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.Alphas.Serialization.InsightJsonConverterTests.DeserializesInsightWithoutScore()", span="28-28"];
m12_52 [cluster="Unk.SerializeObject", file="InsightJsonConverterTests.cs", label="Entry Unk.SerializeObject", span=""];
m13_4 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="InsightTests.cs", label="Assert.AreEqual(one, one)", span="32-32"];
m13_5 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="InsightTests.cs", label="Assert.AreEqual(two, two)", span="33-33"];
m13_82 [cluster="QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", file="InsightTests.cs", label="Entry QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", span="33-33"];
m13_40 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="InsightTests.cs", label="Assert.AreEqual(original.Confidence, copy.Confidence)", prediction=9, span="69-69"];
m13_41 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.Direction, copy.Direction)", span="70-70"];
m13_42 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.EstimatedValue, copy.EstimatedValue)", span="71-71"];
m13_43 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.GeneratedTimeUtc, copy.GeneratedTimeUtc)", span="72-72"];
m13_59 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="206-206"];
m13_60 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="security.Type", span="208-208"];
m13_61 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Base", span="210-210"];
m13_64 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Forex", span="214-214"];
m13_67 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Commodity", span="218-218"];
m13_62 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Equity", span="211-211"];
m13_63 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="return new ConstantSlippageModel(0);", span="212-212"];
m13_65 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Cfd", span="215-215"];
m13_66 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="return new ConstantSlippageModel(0);", span="216-216"];
m13_68 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Option", span="219-219"];
m13_69 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Future", span="220-220"];
m13_70 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="return new ConstantSlippageModel(0);", span="222-222"];
m13_71 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="206-206"];
m13_33 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="InsightTests.cs", label="return 50m;", span="155-155"];
m13_72 [cluster="QuantConnect.Orders.Slippage.ConstantSlippageModel.ConstantSlippageModel(decimal)", file="InsightTests.cs", label="Entry QuantConnect.Orders.Slippage.ConstantSlippageModel.ConstantSlippageModel(decimal)", span="30-30"];
m13_19 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Assert.AreEqual(insight.GeneratedTimeUtc, deserialized.GeneratedTimeUtc)", span="48-48"];
m13_20 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Assert.AreEqual(insight.Id, deserialized.Id)", span="49-49"];
m13_21 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", color=green, community=0, file="InsightTests.cs", label="Assert.AreEqual(insight.Magnitude, deserialized.Magnitude)", prediction=10, span="50-50"];
m13_23 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Assert.AreEqual(insight.SourceModel, deserialized.SourceModel)", span="52-52"];
m13_25 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Assert.AreEqual(insight.Score.Magnitude, deserialized.Score.Magnitude)", span="54-54"];
m13_22 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Assert.AreEqual(insight.Period, deserialized.Period)", span="51-51"];
m13_10 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="100-100"];
m13_12 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="InsightTests.cs", label="return true;", prediction=10, span="118-118"];
m13_11 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="116-116"];
m13_13 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="InsightTests.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", prediction=12, span="116-116"];
m13_15 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="InsightTests.cs", label="var splitFactor = split.SplitFactor", span="132-132"];
m13_16 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="InsightTests.cs", label="tickets.ForEach(ticket => ticket.Update(new UpdateOrderFields\r\n            {\r\n                Quantity = (int?) (ticket.Quantity/splitFactor),\r\n                LimitPrice = ticket.OrderType.IsLimitOrder() ? ticket.Get(OrderField.LimitPrice)*splitFactor : (decimal?) null,\r\n                StopPrice = ticket.OrderType.IsStopOrder() ? ticket.Get(OrderField.StopPrice)*splitFactor : (decimal?) null\r\n            }))", span="133-138"];
m13_17 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="129-129"];
m13_18 [cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file="InsightTests.cs", label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0"];
m13_24 [cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="InsightTests.cs", label="Entry QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", span="211-211"];
m13_26 [cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="InsightTests.cs", label="Entry QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", span="249-249"];
m13_27 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="146-146"];
m13_28 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="InsightTests.cs", label="security.Type", span="148-148"];
m13_29 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Equity", span="150-150"];
m13_14 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="129-129"];
m13_30 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="InsightTests.cs", label="return 2m;", span="151-151"];
m13_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="InsightTests.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="188-188"];
m13_8 [cluster="Unk.AreNotEqual", file="InsightTests.cs", label="Entry Unk.AreNotEqual", span=""];
m13_9 [cluster="Unk.AreEqual", file="InsightTests.cs", label="Entry Unk.AreEqual", span=""];
m13_34 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Base", span="157-157"];
m13_58 [cluster="QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", file="InsightTests.cs", label="Entry QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", span="38-38"];
m13_31 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Forex", span="153-153"];
m13_32 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="InsightTests.cs", label="SecurityType.Cfd", span="154-154"];
m13_57 [cluster="QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", file="InsightTests.cs", label="Entry QuantConnect.Orders.Fees.ConstantFeeModel.ConstantFeeModel(decimal)", span="31-31"];
m13_35 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Entry QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", span="62-62"];
m13_36 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="var time = new DateTime(2000, 01, 02, 03, 04, 05, 06)", span="64-64"];
m13_37 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="var original = new Insight(time, Symbols.SPY, Time.OneMinute, InsightType.Volatility, InsightDirection.Up, 1, 2)", span="65-65"];
m13_38 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="var copy = original.Clone()", span="66-66"];
m13_39 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="InsightTests.cs", label="Assert.AreEqual(original.CloseTimeUtc, copy.CloseTimeUtc)", prediction=9, span="68-68"];
m13_73 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="232-232"];
m13_74 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="InsightTests.cs", label="accountType == AccountType.Cash", span="234-234"];
m13_75 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="InsightTests.cs", label="security.Type", span="236-236"];
m13_80 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="InsightTests.cs", label="return new ImmediateSettlementModel();", span="246-246"];
m13_76 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="InsightTests.cs", label="SecurityType.Equity", span="238-238"];
m13_78 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="InsightTests.cs", label="SecurityType.Option", span="241-241"];
m13_77 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="InsightTests.cs", label="return new DelayedSettlementModel(Equity.DefaultSettlementDays, Equity.DefaultSettlementTime);", span="239-239"];
m13_79 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="InsightTests.cs", label="return new DelayedSettlementModel(Option.DefaultSettlementDays, Option.DefaultSettlementTime);", span="242-242"];
m13_81 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="232-232"];
m13_55 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="return new ConstantFeeModel(0m);", span="197-197"];
m13_83 [cluster="QuantConnect.Securities.ImmediateSettlementModel.ImmediateSettlementModel()", file="InsightTests.cs", label="Entry QuantConnect.Securities.ImmediateSettlementModel.ImmediateSettlementModel()", span="23-23"];
m13_0 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="70-70"];
m13_1 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="InsightTests.cs", label="AccountType = accountType", span="72-72"];
m13_3 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="InsightTests.cs", label="Assert.AreNotEqual(one, two)", span="31-31"];
m13_2 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="70-70"];
m13_6 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", file="InsightTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.InsightTests.HasReferenceTypeEqualitySemantics()", span="27-27"];
m13_44 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.Id, copy.Id)", span="73-73"];
m13_45 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.Magnitude, copy.Magnitude)", span="74-74"];
m13_46 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.Period, copy.Period)", span="75-75"];
m13_50 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.Score.UpdatedTimeUtc, copy.Score.UpdatedTimeUtc)", span="79-79"];
m13_54 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", span="62-62"];
m13_47 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.SourceModel, copy.SourceModel)", span="76-76"];
m13_48 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", color=green, community=0, file="InsightTests.cs", label="Assert.AreEqual(original.Score.Direction, copy.Score.Direction)", prediction=9, span="77-77"];
m13_49 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.Score.Magnitude, copy.Score.Magnitude)", span="78-78"];
m13_51 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.Score.IsFinalScore, copy.Score.IsFinalScore)", span="80-80"];
m13_52 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.Symbol, copy.Symbol)", span="81-81"];
m13_53 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripCopy()", file="InsightTests.cs", label="Assert.AreEqual(original.Type, copy.Type)", span="82-82"];
m13_56 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="181-181"];
m13_84 [file="InsightTests.cs", label="QuantConnect.Brokerages.DefaultBrokerageModel", span=""];
m13_85 [file="InsightTests.cs", label=splitFactor, span=""];
m14_50 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Loader.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m14_106 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", span="288-288"];
m14_122 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="Log.Error(err)", span="321-321"];
m14_121 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label=Exception, span="319-319"];
m14_123 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="return types;", span="324-324"];
m14_113 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="var types = new List<string>()", span="290-290"];
m14_115 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="assemblyTypes = assembly.GetTypes()", span="296-296"];
m14_119 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="types = (from t in assemblyTypes\r\n                             where t.IsClass                                    // require class\r\n                             where !t.IsAbstract                                // require concrete impl\r\n                             where AlgorithmInterfaceType.IsAssignableFrom(t)   // require derived from IAlgorithm\r\n                             where t.FullName != AlgorithmBaseTypeFullName      // require not equal to QuantConnect.QCAlgorithm\r\n                             where t.FullName != FrameworkBaseTypeFullName      // require not equal to QuantConnect.QCAlgorithmFramework\r\n                             where t.GetConstructor(Type.EmptyTypes) != null    // require default ctor\r\n                             select t.FullName).ToList()", span="305-312"];
m14_120 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="Log.Error(''API.GetExtendedTypeNames(): No types found in assembly.'')", span="316-316"];
m14_114 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="Type[] assemblyTypes", span="293-293"];
m14_116 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label=ReflectionTypeLoadException, span="298-298"];
m14_118 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="assemblyTypes != null && assemblyTypes.Length > 0", span="303-303"];
m14_117 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="assemblyTypes = e.Types", span="300-300"];
m14_124 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", span="288-288"];
m14_127 [cluster="Unk.IsAssignableFrom", file="Loader.cs", label="Entry Unk.IsAssignableFrom", span=""];
m14_125 [cluster="System.Collections.Generic.List<T>.List()", file="Loader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m14_112 [cluster="object.GetType()", file="Loader.cs", label="Entry object.GetType()", span="0-0"];
m14_6 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="87-87"];
m14_107 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Loader.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m14_15 [cluster="System.Environment.SetEnvironmentVariable(string, string)", file="Loader.cs", label="Entry System.Environment.SetEnvironmentVariable(string, string)", span="0-0"];
m14_144 [cluster="lambda expression", file="Loader.cs", label="Entry lambda expression", span="342-345"];
m14_145 [cluster="lambda expression", file="Loader.cs", label="success = TryCreateAlgorithmInstance(assemblyPath, out instance, out error)", span="344-344"];
m14_146 [cluster="lambda expression", file="Loader.cs", label="Exit lambda expression", span="342-345"];
m14_100 [cluster="string.Substring(int, int)", file="Loader.cs", label="Entry string.Substring(int, int)", span="0-0"];
m14_7 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="_language = language", span="89-89"];
m14_16 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="111-111"];
m14_23 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="TryCreatePythonAlgorithm(assemblyPath, out algorithmInstance, out errorMessage)", span="126-126"];
m14_20 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="120-120"];
m14_22 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Language.Python", span="125-125"];
m14_25 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return algorithmInstance != null;", span="135-135"];
m14_17 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = null", span="114-114"];
m14_19 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="!File.Exists(assemblyPath)", span="118-118"];
m14_24 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="TryCreateILAlgorithm(assemblyPath, out algorithmInstance, out errorMessage)", span="130-130"];
m14_21 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label=_language, span="123-123"];
m14_18 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''''", span="115-115"];
m14_26 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="111-111"];
m14_130 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="335-335"];
m14_133 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var success = false", span="340-340"];
m14_131 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="IAlgorithm instance = null", span="337-337"];
m14_132 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var error = string.Empty", span="338-338"];
m14_135 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var complete = isolator.ExecuteWithTimeLimit(_loaderTimeLimit, () =>\r\n            {\r\n                success = TryCreateAlgorithmInstance(assemblyPath, out instance, out error);\r\n            }, ramLimit)", span="342-345"];
m14_134 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var isolator = new Isolator()", span="341-341"];
m14_136 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = instance", span="347-347"];
m14_137 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = error", span="348-348"];
m14_138 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="!complete", span="351-351"];
m14_139 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''Failed to create algorithm instance within 10 seconds. Try re-building algorithm. '' + error", span="353-353"];
m14_140 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return complete && success && algorithmInstance != null;", span="356-356"];
m14_141 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="335-335"];
m14_105 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Loader.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m14_128 [cluster="Unk.GetConstructor", file="Loader.cs", label="Entry Unk.GetConstructor", span=""];
m14_49 [cluster="Unk.BeginAllowThreads", file="Loader.cs", label="Entry Unk.BeginAllowThreads", span=""];
m14_29 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="187-187"];
m14_54 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var directoryName = new FileInfo(assemblyPath).DirectoryName", span="198-198"];
m14_60 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="File.Exists(mdbFilename)", span="209-209"];
m14_58 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="File.Exists(pdbFilename)", span="204-204"];
m14_53 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="byte[] debugInformationBytes = null", span="194-194"];
m14_55 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="directoryName != null && directoryName.TrimEnd(Path.DirectorySeparatorChar) != AppDomain.CurrentDomain.BaseDirectory.TrimEnd(Path.DirectorySeparatorChar)", span="199-199"];
m14_80 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="types[0] = _multipleTypeNameResolverFunction.Invoke(types)", span="250-250"];
m14_51 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''''", span="189-189"];
m14_56 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var mdbFilename = assemblyPath + ''.mdb''", span="202-202"];
m14_57 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var pdbFilename = assemblyPath.Substring(0, assemblyPath.Length - 4) + ''.pdb''", span="203-203"];
m14_65 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="assembly = Assembly.LoadFrom(assemblyPath)", span="220-220"];
m14_67 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var assemblyBytes = File.ReadAllBytes(assemblyPath)", span="225-225"];
m14_59 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="debugInformationBytes = File.ReadAllBytes(pdbFilename)", span="206-206"];
m14_61 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="debugInformationBytes = File.ReadAllBytes(mdbFilename)", span="211-211"];
m14_62 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Assembly assembly", span="216-216"];
m14_52 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = null", span="190-190"];
m14_63 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="debugInformationBytes == null", span="217-217"];
m14_68 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="assembly = Assembly.Load(assemblyBytes, debugInformationBytes)", span="226-226"];
m14_73 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var types = GetExtendedTypeNames(assembly)", span="236-236"];
m14_79 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="types.Count > 1", span="247-247"];
m14_81 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="string.IsNullOrEmpty(types[0])", span="252-252"];
m14_89 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(err)", span="270-270"];
m14_94 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(err)", span="276-276"];
m14_85 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = (IAlgorithm)assembly.CreateInstance(types[0], true)", span="260-260"];
m14_70 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''Assembly is null.''", span="230-230"];
m14_72 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="232-232"];
m14_76 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''Algorithm type was not found.''", span="242-242"];
m14_78 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="244-244"];
m14_82 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''Please verify algorithm type name matches the algorithm name in the configuration file. Unable to resolve multiple algorithm types to a single type.''", span="254-254"];
m14_84 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="256-256"];
m14_97 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return true;", span="280-280"];
m14_92 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = err.InnerException.Message", span="272-272"];
m14_96 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = err.InnerException.Message", span="277-277"];
m14_64 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Trace(''Loader.TryCreateILAlgorithm(): Loading only the algorithm assembly'')", span="219-219"];
m14_69 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="assembly == null", span="228-228"];
m14_66 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Trace(''Loader.TryCreateILAlgorithm(): Loading debug information with algorithm'')", span="224-224"];
m14_74 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Debug(''Loader.TryCreateILAlgorithm(): Assembly types: '' + string.Join('','', types))", span="237-237"];
m14_75 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="types.Count == 0", span="240-240"];
m14_88 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label=ReflectionTypeLoadException, span="268-268"];
m14_90 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(''Loader.TryCreateILAlgorithm(1): '' + err.LoaderExceptions[0])", span="271-271"];
m14_93 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label=Exception, span="274-274"];
m14_95 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="err.InnerException != null", span="277-277"];
m14_86 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance != null", span="262-262"];
m14_87 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Trace(''Loader.TryCreateILAlgorithm(): Loaded '' + algorithmInstance.GetType().Name)", span="264-264"];
m14_71 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(''Loader.TryCreateILAlgorithm(): Assembly is null'')", span="231-231"];
m14_77 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(''Loader.TryCreateILAlgorithm(): Types array empty, no algorithm type found.'')", span="243-243"];
m14_83 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(''Loader.TryCreateILAlgorithm(): Failed resolving multiple algorithm types to a single type.'')", span="255-255"];
m14_91 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="err.InnerException != null", span="272-272"];
m14_98 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="187-187"];
m14_142 [cluster="QuantConnect.Isolator.Isolator()", file="Loader.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m14_103 [cluster="System.Reflection.Assembly.LoadFrom(string)", file="Loader.cs", label="Entry System.Reflection.Assembly.LoadFrom(string)", span="0-0"];
m14_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Loader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m14_143 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Loader.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145"];
m14_129 [cluster="Unk.ToList", file="Loader.cs", label="Entry Unk.ToList", span=""];
m14_99 [cluster="string.TrimEnd(params char[])", file="Loader.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m14_48 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(string)", span="52-52"];
m14_47 [cluster="string.Replace(string, string)", file="Loader.cs", label="Entry string.Replace(string, string)", span="0-0"];
m14_108 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Loader.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m14_27 [cluster="System.IO.File.Exists(string)", file="Loader.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m14_147 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Unload()", span="365-365"];
m14_148 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="Loader.cs", label="appDomain != null", span="366-366"];
m14_149 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="Loader.cs", label="AppDomain.Unload(appDomain)", span="368-368"];
m14_150 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="Loader.cs", label="appDomain = null", span="369-369"];
m14_151 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.Unload()", span="365-365"];
m14_126 [cluster="System.Reflection.Assembly.GetTypes()", file="Loader.cs", label="Entry System.Reflection.Assembly.GetTypes()", span="0-0"];
m14_104 [cluster="System.Reflection.Assembly.Load(byte[], byte[])", file="Loader.cs", label="Entry System.Reflection.Assembly.Load(byte[], byte[])", span="0-0"];
m14_109 [cluster="System.Func<T, TResult>.Invoke(T)", file="Loader.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m14_111 [cluster="System.Reflection.Assembly.CreateInstance(string, bool)", file="Loader.cs", label="Entry System.Reflection.Assembly.CreateInstance(string, bool)", span="0-0"];
m14_46 [cluster="System.IO.FileInfo.FileInfo(string)", file="Loader.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m14_12 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="Environment.SetEnvironmentVariable(''PYTHONPATH'', Environment.CurrentDirectory)", span="100-100"];
m14_11 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="_multipleTypeNameResolverFunction = multipleTypeNameResolverFunction", span="97-97"];
m14_10 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="_loaderTimeLimit = loaderTimeLimit", span="96-96"];
m14_9 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="throw new ArgumentNullException(''multipleTypeNameResolverFunction'');", span="93-93"];
m14_8 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="multipleTypeNameResolverFunction == null", span="91-91"];
m14_13 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="87-87"];
m14_152 [cluster="System.AppDomain.Unload(System.AppDomain)", file="Loader.cs", label="Entry System.AppDomain.Unload(System.AppDomain)", span="0-0"];
m14_28 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="145-145"];
m14_35 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="Loader.cs", label="var pythonFile = new FileInfo(assemblyPath)", prediction=15, span="157-157"];
m14_32 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="!File.Exists(assemblyPath)", span="151-151"];
m14_36 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="Loader.cs", label="var moduleName = pythonFile.Name.Replace(''.pyc'', '''').Replace(''.py'', '''')", prediction=16, span="158-158"];
m14_37 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="Loader.cs", label="Environment.SetEnvironmentVariable(''PYTHONPATH'', pythonFile.DirectoryName)", prediction=15, span="161-161"];
m14_38 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=green, community=0, file="Loader.cs", label="algorithmInstance = new AlgorithmPythonWrapper(moduleName)", prediction=18, span="165-165"];
m14_39 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="PythonEngine.BeginAllowThreads()", span="167-167"];
m14_30 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = null", span="147-147"];
m14_33 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = $''Loader.TryCreatePythonAlgorithm(): Unable to find py file: {assemblyPath}''", span="153-153"];
m14_42 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = $''Loader.TryCreatePythonAlgorithm(): Unable to import python module {assemblyPath}. {e.Message}''", span="172-172"];
m14_44 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return true;", span="177-177"];
m14_31 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = string.Empty", span="148-148"];
m14_40 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label=Exception, span="169-169"];
m14_34 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="154-154"];
m14_43 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="173-173"];
m14_41 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(e)", span="171-171"];
m14_45 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="145-145"];
m14_101 [cluster="System.IO.File.ReadAllBytes(string)", file="Loader.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m14_110 [cluster="string.IsNullOrEmpty(string)", file="Loader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m14_102 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Loader.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m14_0 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", file="Loader.cs", label="Entry QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", span="28-28"];
m14_1 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", file="Loader.cs", label="model.GetType() == typeof (DefaultBrokerageModel)", span="30-30"];
m14_3 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", file="Loader.cs", label="algorithm.Securities.Values", span="36-36"];
m14_4 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", file="Loader.cs", label="security.TransactionModel = model.GetTransactionModel(security)", span="38-38"];
m14_2 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", file="Loader.cs", label="return;", span="33-33"];
m14_5 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", file="Loader.cs", label="Exit QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", span="28-28"];
m14_153 [file="Loader.cs", label="QuantConnect.AlgorithmFactory.Loader", span=""];
m14_154 [file="Loader.cs", label=string, span=""];
m15_57 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="535-535"];
m15_58 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.Debug(message)", span="537-537"];
m15_59 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="535-535"];
m15_131 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="708-708"];
m15_132 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="Py.GIL()", span="712-712"];
m15_133 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="var pyRequests = _algorithm.OnMarginCall(requests) as PyObject", span="714-714"];
m15_136 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="requests.Clear()", span="722-722"];
m15_140 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="requests.Add(request)", span="729-729"];
m15_141 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="requests.Count == 0", span="734-734"];
m15_145 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.OnMarginCall(requests)", span="745-745"];
m15_134 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="pyRequests == null || !pyRequests.IsIterable()", span="717-717"];
m15_137 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label=pyRequests, span="724-724"];
m15_135 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="719-719"];
m15_138 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="SubmitOrderRequest request", span="726-726"];
m15_139 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="TryConvert(pyRequest, out request)", span="727-727"];
m15_142 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="736-736"];
m15_143 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label=PythonException, span="740-740"];
m15_144 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="pythonException.Message.Contains(''TypeError : No method matches given arguments'')", span="743-743"];
m15_146 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="throw pythonException;", span="750-750"];
m15_147 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="708-708"];
m15_152 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="987-987"];
m15_240 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="LogInDialog.xaml.cs", label="result = default(T)", span="989-989"];
m15_241 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="LogInDialog.xaml.cs", label="var type = (Type)pyObject.GetPythonType().AsManagedObject(typeof(Type))", span="990-990"];
m15_243 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="LogInDialog.xaml.cs", label="result = (T)pyObject.AsManagedObject(typeof(T))", span="994-994"];
m15_242 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="LogInDialog.xaml.cs", label="type == typeof(T)", span="992-992"];
m15_244 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="LogInDialog.xaml.cs", label="return type == typeof(T);", span="997-997"];
m15_245 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="987-987"];
m15_45 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="500-500"];
m15_46 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="LogInDialog.xaml.cs", label="return _baseAlgorithm.AddSecurity(securityType, symbol, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="502-502"];
m15_47 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="500-500"];
m15_24 [cluster="Unk.Split", file="LogInDialog.xaml.cs", label="Entry Unk.Split", span=""];
m15_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1227-1227"];
m15_207 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="880-880"];
m15_208 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetRunTimeError(exception)", span="882-882"];
m15_209 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="880-880"];
m15_187 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="833-833"];
m15_188 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetBrokerageMessageHandler(brokerageMessageHandler)", span="835-835"];
m15_189 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="833-833"];
m15_23 [cluster="Unk.Repr", file="LogInDialog.xaml.cs", label="Entry Unk.Repr", span=""];
m15_26 [cluster="Unk.ToString", file="LogInDialog.xaml.cs", label="Entry Unk.ToString", span=""];
m15_227 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="923-923"];
m15_228 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetMaximumOrders(max)", span="925-925"];
m15_229 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="923-923"];
m15_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="561-561"];
m15_175 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="805-805"];
m15_176 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="LogInDialog.xaml.cs", label="_baseAlgorithm.PostInitialize()", span="807-807"];
m15_177 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="805-805"];
m15_104 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="644-644"];
m15_105 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="LogInDialog.xaml.cs", label="Py.GIL()", span="646-646"];
m15_106 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="LogInDialog.xaml.cs", label="_algorithm.OnBrokerageReconnect()", span="648-648"];
m15_107 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="644-644"];
m15_41 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="407-407"];
m15_42 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetOptionChainProvider(optionChainProvider)", span="409-409"];
m15_43 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="407-407"];
m15_199 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="862-862"];
m15_200 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetCash(symbol, startingCash, conversionRate)", span="864-864"];
m15_201 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="862-862"];
m15_99 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="633-633"];
m15_100 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="LogInDialog.xaml.cs", label="Py.GIL()", span="635-635"];
m15_101 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="LogInDialog.xaml.cs", label="_algorithm.OnBrokerageMessage(messageEvent)", span="637-637"];
m15_102 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="633-633"];
m15_169 [cluster="Unk.OnAssignmentOrderEvent", file="LogInDialog.xaml.cs", label="Entry Unk.OnAssignmentOrderEvent", span=""];
m15_29 [cluster="Unk.SetAttr", file="LogInDialog.xaml.cs", label="Entry Unk.SetAttr", span=""];
m15_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="900-900"];
m15_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="315-315"];
m15_211 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="888-888"];
m15_212 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetFinishedWarmingUp()", span="890-890"];
m15_213 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="888-888"];
m15_25 [cluster="Unk.Dir", file="LogInDialog.xaml.cs", label="Entry Unk.Dir", span=""];
m15_153 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LogInDialog.xaml.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m15_49 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="513-513"];
m15_50 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="LogInDialog.xaml.cs", label="return _baseAlgorithm.AddFutureContract(symbol, resolution, fillDataForward, leverage);", span="515-515"];
m15_51 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="513-513"];
m15_98 [cluster="Unk.OnBrokerageDisconnect", file="LogInDialog.xaml.cs", label="Entry Unk.OnBrokerageDisconnect", span=""];
m15_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1539-1539"];
m15_32 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m15_61 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="544-544"];
m15_62 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.Error(message)", span="546-546"];
m15_63 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="544-544"];
m15_90 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="613-613"];
m15_91 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.Log(message)", span="615-615"];
m15_92 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="613-613"];
m15_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="533-533"];
m15_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1053-1053"];
m15_81 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="590-590"];
m15_82 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="LogInDialog.xaml.cs", label="Py.GIL()", span="592-592"];
m15_83 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="LogInDialog.xaml.cs", label="_algorithm.Initialize()", span="594-594"];
m15_84 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="590-590"];
m15_239 [cluster="Unk.ModuleFromString", file="LogInDialog.xaml.cs", label="Entry Unk.ModuleFromString", span=""];
m15_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="602-602"];
m15_0 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", span="50-50"];
m15_1 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="_algorithm = null", span="52-52"];
m15_3 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="!module.HasAttr(''QCAlgorithm'')", span="58-58"];
m15_7 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="var moduleName = module.Repr().Split('\'')[1]", span="68-68"];
m15_8 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="module.Dir()", span="70-70"];
m15_9 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="var attr = module.GetAttr(name.ToString())", span="72-72"];
m15_2 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="Py.GIL()", span="56-56"];
m15_4 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="return;", span="60-60"];
m15_6 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="_util = ImportUtil()", span="66-66"];
m15_10 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="attr.IsSubclass(baseClass) && attr.Repr().Contains(moduleName)", span="74-74"];
m15_16 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label=Exception, span="91-91"];
m15_12 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="_algorithm = attr.Invoke()", span="78-78"];
m15_13 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="_baseAlgorithm = (QCAlgorithm)_algorithm", span="81-81"];
m15_14 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetPandas()", span="84-84"];
m15_15 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="return;", span="86-86"];
m15_17 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="Logging.Log.Error(e)", span="93-93"];
m15_18 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", span="50-50"];
m15_160 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="770-770"];
m15_161 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="LogInDialog.xaml.cs", label="Py.GIL()", span="772-772"];
m15_162 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="LogInDialog.xaml.cs", label="_algorithm.OnOrderEvent(newEvent)", span="774-774"];
m15_163 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="770-770"];
m15_117 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="673-673"];
m15_118 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="LogInDialog.xaml.cs", label="Py.GIL()", span="675-675"];
m15_119 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="LogInDialog.xaml.cs", label="_algorithm.OnEndOfAlgorithm()", span="677-677"];
m15_120 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="673-673"];
m15_77 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="582-582"];
m15_78 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="LogInDialog.xaml.cs", label="return _baseAlgorithm.GetWarmupHistoryRequests();", span="584-584"];
m15_79 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="582-582"];
m15_148 [cluster="Unk.OnMarginCall", file="LogInDialog.xaml.cs", label="Entry Unk.OnMarginCall", span=""];
m15_251 [cluster="object.ToString()", file="LogInDialog.xaml.cs", label="Entry object.ToString()", span="0-0"];
m15_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1776-1776"];
m15_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1638-1638"];
m15_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="828-828"];
m15_20 [cluster="Unk.HasAttr", file="LogInDialog.xaml.cs", label="Entry Unk.HasAttr", span=""];
m15_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1651-1651"];
m15_149 [cluster="Unk.IsIterable", file="LogInDialog.xaml.cs", label="Entry Unk.IsIterable", span=""];
m15_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="110-110"];
m15_219 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="906-906"];
m15_220 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetLiveMode(live)", span="908-908"];
m15_221 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="906-906"];
m15_122 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="684-684"];
m15_123 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="LogInDialog.xaml.cs", label="Py.GIL()", span="686-686"];
m15_124 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="LogInDialog.xaml.cs", label="_algorithm.OnEndOfDay()", span="688-688"];
m15_125 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="684-684"];
m15_191 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="842-842"];
m15_192 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetBrokerageModel(brokerageModel)", span="844-844"];
m15_193 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="842-842"];
m15_115 [cluster="Unk.OnPythonData", file="LogInDialog.xaml.cs", label="Entry Unk.OnPythonData", span=""];
m15_94 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="621-621"];
m15_95 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="LogInDialog.xaml.cs", label="Py.GIL()", span="623-623"];
m15_96 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="LogInDialog.xaml.cs", label="_algorithm.OnBrokerageDisconnect()", span="625-625"];
m15_97 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="621-621"];
m15_247 [cluster="Unk.AsManagedObject", file="LogInDialog.xaml.cs", label="Entry Unk.AsManagedObject", span=""];
m15_126 [cluster="Unk.OnEndOfDay", file="LogInDialog.xaml.cs", label="Entry Unk.OnEndOfDay", span=""];
m15_231 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="932-932"];
m15_232 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetParameters(parameters)", span="934-934"];
m15_233 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="932-932"];
m15_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="730-730"];
m15_151 [cluster="System.Collections.Generic.List<T>.Clear()", file="LogInDialog.xaml.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m15_30 [cluster="Unk.Invoke", file="LogInDialog.xaml.cs", label="Entry Unk.Invoke", span=""];
m15_21 [cluster="Unk.GetAttr", file="LogInDialog.xaml.cs", label="Entry Unk.GetAttr", span=""];
m15_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1663-1663"];
m15_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1803-1803"];
m15_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1123-1123"];
m15_150 [cluster="System.Exception.Exception(string)", file="LogInDialog.xaml.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m15_86 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="604-604"];
m15_87 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="LogInDialog.xaml.cs", label="return _baseAlgorithm.Liquidate(symbolToLiquidate, tag);", span="606-606"];
m15_88 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="604-604"];
m15_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1473-1473"];
m15_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="477-477"];
m15_121 [cluster="Unk.OnEndOfAlgorithm", file="LogInDialog.xaml.cs", label="Entry Unk.OnEndOfAlgorithm", span=""];
m15_159 [cluster="Unk.OnMarginCallWarning", file="LogInDialog.xaml.cs", label="Entry Unk.OnMarginCallWarning", span=""];
m15_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1235-1235"];
m15_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="543-543"];
m15_179 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="815-815"];
m15_180 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="LogInDialog.xaml.cs", label="return _baseAlgorithm.RemoveSecurity(symbol);", span="817-817"];
m15_181 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="815-815"];
m15_53 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="526-526"];
m15_54 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="LogInDialog.xaml.cs", label="return _baseAlgorithm.AddOptionContract(symbol, resolution, fillDataForward, leverage);", span="528-528"];
m15_55 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="526-526"];
m15_109 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="655-655"];
m15_110 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="LogInDialog.xaml.cs", label="Py.GIL()", span="657-657"];
m15_112 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="LogInDialog.xaml.cs", label="_algorithm.OnPythonData(slice)", span="661-661"];
m15_113 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="LogInDialog.xaml.cs", label="_algorithm.OnData(slice)", span="665-665"];
m15_111 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="LogInDialog.xaml.cs", label="SubscriptionManager.HasCustomData", span="659-659"];
m15_114 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="655-655"];
m15_248 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="1004-1004"];
m15_249 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="LogInDialog.xaml.cs", label="return _algorithm == null ? base.ToString() : _algorithm.Repr();", span="1006-1006"];
m15_250 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="1004-1004"];
m15_116 [cluster="Unk.OnData", file="LogInDialog.xaml.cs", label="Entry Unk.OnData", span=""];
m15_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820"];
m15_73 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="573-573"];
m15_74 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="LogInDialog.xaml.cs", label="return _baseAlgorithm.GetParameter(name);", span="575-575"];
m15_75 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="573-573"];
m15_165 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="782-782"];
m15_166 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="LogInDialog.xaml.cs", label="Py.GIL()", span="784-784"];
m15_167 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="LogInDialog.xaml.cs", label="_algorithm.OnAssignmentOrderEvent(newEvent)", span="786-786"];
m15_168 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="782-782"];
m15_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1035-1035"];
m15_127 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="696-696"];
m15_128 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="LogInDialog.xaml.cs", label="Py.GIL()", span="698-698"];
m15_129 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="LogInDialog.xaml.cs", label="_algorithm.OnEndOfDay(symbol)", span="700-700"];
m15_130 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="696-696"];
m15_155 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="758-758"];
m15_156 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="LogInDialog.xaml.cs", label="Py.GIL()", span="760-760"];
m15_157 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="LogInDialog.xaml.cs", label="_algorithm.OnMarginCallWarning()", span="762-762"];
m15_158 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="758-758"];
m15_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1789-1789"];
m15_85 [cluster="Unk.Initialize", file="LogInDialog.xaml.cs", label="Entry Unk.Initialize", span=""];
m15_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1455-1455"];
m15_37 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="398-398"];
m15_38 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetAvailableDataTypes(availableDataTypes)", span="400-400"];
m15_39 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="398-398"];
m15_195 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="851-851"];
m15_196 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetCash(startingCash)", span="853-853"];
m15_197 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="851-851"];
m15_215 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="897-897"];
m15_216 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetHistoryProvider(historyProvider)", span="899-899"];
m15_217 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="897-897"];
m15_108 [cluster="Unk.OnBrokerageReconnect", file="LogInDialog.xaml.cs", label="Entry Unk.OnBrokerageReconnect", span=""];
m15_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1298-1298"];
m15_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m15_223 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="914-914"];
m15_224 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetLocked()", span="916-916"];
m15_225 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="914-914"];
m15_65 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="554-554"];
m15_66 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="LogInDialog.xaml.cs", label="return _baseAlgorithm.GetChartUpdates(clearChartData);", span="556-556"];
m15_67 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="554-554"];
m15_164 [cluster="Unk.OnOrderEvent", file="LogInDialog.xaml.cs", label="Entry Unk.OnOrderEvent", span=""];
m15_203 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="871-871"];
m15_204 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetDateTime(time)", span="873-873"];
m15_205 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="871-871"];
m15_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41"];
m15_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="932-932"];
m15_103 [cluster="Unk.OnBrokerageMessage", file="LogInDialog.xaml.cs", label="Entry Unk.OnBrokerageMessage", span=""];
m15_246 [cluster="Unk.GetPythonType", file="LogInDialog.xaml.cs", label="Entry Unk.GetPythonType", span=""];
m15_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m15_170 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="794-794"];
m15_171 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LogInDialog.xaml.cs", label="Py.GIL()", span="796-796"];
m15_172 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LogInDialog.xaml.cs", label="_algorithm.OnSecuritiesChanged(changes)", span="798-798"];
m15_173 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="794-794"];
m15_19 [cluster="Unk.GIL", file="LogInDialog.xaml.cs", label="Entry Unk.GIL", span=""];
m15_33 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="389-389"];
m15_34 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetStatus(value)", span="391-391"];
m15_35 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="389-389"];
m15_22 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", span="941-941"];
m15_235 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="LogInDialog.xaml.cs", label="var code =\r\n                ''from clr import AddReference\n'' +\r\n                ''AddReference(\''System\'')\n'' +\r\n                ''AddReference(\''QuantConnect.Common\'')\n'' +\r\n                ''import decimal\n'' +\r\n\r\n                // OnPythonData call OnData after converting the Slice object\r\n                ''def OnPythonData(self, data):\n'' +\r\n                ''    self.OnData(PythonSlice(data))\n'' +\r\n\r\n                // PythonSlice class\r\n                ''class PythonSlice(dict):\n'' +\r\n                ''    def __init__(self, slice):\n'' +\r\n                ''        for data in slice:\n'' +\r\n                ''            self[data.Key] = Data(data.Value)\n'' +\r\n                ''            self[data.Key.Value] = Data(data.Value)\n'' +\r\n\r\n                // Python Data class: Converts custom data (PythonData) into a python object'''\r\n                ''class Data(object):\n'' +\r\n                ''    def __init__(self, data):\n'' +\r\n                ''        members = [attr for attr in dir(data) if not callable(attr) and not attr.startswith(\''__\'')]\n'' +\r\n                ''        for member in members:\n'' +\r\n                ''            setattr(self, member, getattr(data, member))\n'' +\r\n\r\n                ''        if not hasattr(data, 'GetStorageDictionary'): return\n'' +\r\n\r\n                ''        for kvp in data.GetStorageDictionary():\n'' +\r\n                ''           name = kvp.Key.replace('-',' ').replace('.',' ').title().replace(' ', '')\n'' +\r\n                ''           value = decimal.Decimal(kvp.Value) if isinstance(kvp.Value, float) else kvp.Value\n'' +\r\n                ''           setattr(self, name, value)''", span="943-972"];
m15_236 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="LogInDialog.xaml.cs", label="Py.GIL()", span="974-974"];
m15_237 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="LogInDialog.xaml.cs", label="return PythonEngine.ModuleFromString(''AlgorithmPythonUtil'', code);", span="976-976"];
m15_238 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", span="941-941"];
m15_183 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="824-824"];
m15_184 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="LogInDialog.xaml.cs", label="_baseAlgorithm.SetAlgorithmId(algorithmId)", span="826-826"];
m15_185 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="824-824"];
m15_28 [cluster="Unk.Contains", file="LogInDialog.xaml.cs", label="Entry Unk.Contains", span=""];
m15_27 [cluster="Unk.IsSubclass", file="LogInDialog.xaml.cs", label="Entry Unk.IsSubclass", span=""];
m15_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1219-1219"];
m15_69 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="563-563"];
m15_70 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="LogInDialog.xaml.cs", label="return _baseAlgorithm.GetLocked();", span="565-565"];
m15_71 [cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="563-563"];
m15_252 [file="LogInDialog.xaml.cs", label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", span=""];
m16_33 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175"];
m16_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m16_17 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="83-83"];
m16_18 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="var universeSettings = _universeSettings ?? algorithm.UniverseSettings", span="85-85"];
m16_28 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="yield return new ManualUniverse(config, universeSettings, securityInitializer, grp);", span="99-99"];
m16_19 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="var securityInitializer = _securityInitializer ?? algorithm.SecurityInitializer", span="86-86"];
m16_20 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="var resolution = universeSettings.Resolution", span="88-88"];
m16_21 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="var type = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="89-89"];
m16_27 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", color=green, community=0, file="ManualUniverseSelectionModel.cs", label="var config = new SubscriptionDataConfig(type, universeSymbol, resolution, entry.DataTimeZone, entry.ExchangeHours.TimeZone, false, false, true)", prediction=19, span="98-98"];
m16_22 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="_symbols.GroupBy(s => new { s.ID.Market, s.SecurityType })", span="92-92"];
m16_23 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="var market = grp.Key.Market", span="94-94"];
m16_24 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="var securityType = grp.Key.SecurityType", span="95-95"];
m16_25 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="var universeSymbol = Symbol.Create($''manual-portfolio-selection-model-{securityType}-{market}'', securityType, market)", span="96-96"];
m16_29 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", file="ManualUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.CreateUniverses(QuantConnect.Algorithm.Framework.QCAlgorithmFramework)", span="83-83"];
m16_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="ManualUniverseSelectionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m16_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ManualUniverseSelectionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m16_16 [cluster="QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", span="36-36"];
m16_4 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="61-61"];
m16_5 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualUniverseSelectionModel.cs", label="symbols == null", span="63-63"];
m16_6 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualUniverseSelectionModel.cs", label="throw new ArgumentNullException(nameof(symbols));", span="65-65"];
m16_8 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualUniverseSelectionModel.cs", label="_universeSettings = universeSettings", span="69-69"];
m16_9 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualUniverseSelectionModel.cs", label="_securityInitializer = securityInitializer", span="70-70"];
m16_10 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualUniverseSelectionModel.cs", label=_symbols, span="72-72"];
m16_11 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualUniverseSelectionModel.cs", label="SymbolCache.Set(symbol.Value, symbol)", span="74-74"];
m16_12 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", file="ManualUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer)", span="61-61"];
m16_2 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(params QuantConnect.Symbol[])", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(params QuantConnect.Symbol[])", span="50-50"];
m16_3 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(params QuantConnect.Symbol[])", file="ManualUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(params QuantConnect.Symbol[])", span="50-50"];
m16_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ManualUniverseSelectionModel.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m16_0 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="40-40"];
m16_1 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel.ManualUniverseSelectionModel(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="40-40"];
m16_35 [cluster="QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.ManualUniverse.ManualUniverse(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="30-30"];
m16_31 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m16_32 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
m16_14 [cluster="Unk.nameof", file="ManualUniverseSelectionModel.cs", label="Entry Unk.nameof", span=""];
m16_36 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="Entry lambda expression", span="92-92"];
m16_37 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="new { s.ID.Market, s.SecurityType }", span="92-92"];
m16_38 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="Exit lambda expression", span="92-92"];
m16_39 [file="ManualUniverseSelectionModel.cs", label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel", span=""];
m18_11 [cluster="QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="OptionFilterTests.cs", label="Entry QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="59-59"];
m18_13 [cluster="QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="OptionFilterTests.cs", label="var source = Path.Combine(new[] {Globals.DataFolder, ''forex'', ''fxcm'', config.Resolution.ToLower()})", span="61-61"];
m18_15 [cluster="QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="OptionFilterTests.cs", label="config.Resolution == Resolution.Minute", span="64-64"];
m18_16 [cluster="QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="OptionFilterTests.cs", label="filename = string.Format(''{0:yyyyMMdd}_volume.zip'', date)", span="66-66"];
m18_18 [cluster="QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="OptionFilterTests.cs", label="filename = string.Format(''{0}_volume.zip'', config.Symbol.Value.ToLower())", span="71-71"];
m18_14 [cluster="QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="OptionFilterTests.cs", label="string filename", span="62-62"];
m18_19 [cluster="QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="OptionFilterTests.cs", label="source = Path.Combine(source, filename)", span="72-72"];
m18_20 [cluster="QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="OptionFilterTests.cs", label="return source;", span="74-74"];
m18_21 [cluster="QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", file="OptionFilterTests.cs", label="Exit QuantConnect.Data.Custom.FxcmVolume.GenerateZipFilePath(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="59-59"];
m18_36 [cluster="string.Split(params char[])", file="OptionFilterTests.cs", label="Entry string.Split(params char[])", span="0-0"];
m18_10 [cluster="QuantConnect.Data.Custom.FxcmVolume.CheckForexPair(string)", file="OptionFilterTests.cs", label="Entry QuantConnect.Data.Custom.FxcmVolume.CheckForexPair(string)", span="111-111"];
m18_42 [cluster="QuantConnect.Data.Custom.FxcmVolume.CheckForexPair(string)", file="OptionFilterTests.cs", label="!_availableSymbols.Contains(symbol)", span="113-113"];
m18_43 [cluster="QuantConnect.Data.Custom.FxcmVolume.CheckForexPair(string)", file="OptionFilterTests.cs", label="throw new ArgumentException(''Volume data is not available for the selected symbol.\nAvailable pairs:\n\t'' +\r\n                    string.Join('', '', _availableSymbols), ''symbol'');", span="115-116"];
m18_44 [cluster="QuantConnect.Data.Custom.FxcmVolume.CheckForexPair(string)", file="OptionFilterTests.cs", label="Exit QuantConnect.Data.Custom.FxcmVolume.CheckForexPair(string)", span="111-111"];
m18_38 [cluster="System.DateTime.AddMilliseconds(double)", file="OptionFilterTests.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m18_51 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="OptionFilterTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m18_41 [cluster="long.Parse(string)", file="OptionFilterTests.cs", label="Entry long.Parse(string)", span="0-0"];
m18_23 [cluster="System.IO.Path.Combine(params string[])", file="OptionFilterTests.cs", label="Entry System.IO.Path.Combine(params string[])", span="0-0"];
m18_28 [cluster="QuantConnect.Data.Custom.FxcmVolume.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="OptionFilterTests.cs", label="Entry QuantConnect.Data.Custom.FxcmVolume.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="89-89"];
m18_29 [cluster="QuantConnect.Data.Custom.FxcmVolume.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="OptionFilterTests.cs", label="DateTime time", span="91-91"];
m18_30 [cluster="QuantConnect.Data.Custom.FxcmVolume.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="OptionFilterTests.cs", label="var obs = line.Split(',')", span="92-92"];
m18_31 [cluster="QuantConnect.Data.Custom.FxcmVolume.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="OptionFilterTests.cs", label="config.Resolution == Resolution.Minute", span="93-93"];
m18_32 [cluster="QuantConnect.Data.Custom.FxcmVolume.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="OptionFilterTests.cs", label="time = date.Date.AddMilliseconds(int.Parse(obs[0]))", span="95-95"];
m18_34 [cluster="QuantConnect.Data.Custom.FxcmVolume.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="OptionFilterTests.cs", label="return new FxcmVolume\r\n            {\r\n                DataType = MarketDataType.Base,\r\n                Symbol = config.Symbol,\r\n                Time = time,\r\n                Value = long.Parse(obs[1]),\r\n                Transactions = int.Parse(obs[2]),\r\n            };", span="101-108"];
m18_33 [cluster="QuantConnect.Data.Custom.FxcmVolume.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="OptionFilterTests.cs", label="time = DateTime.ParseExact(obs[0], ''yyyyMMdd HH:mm'', CultureInfo.InvariantCulture)", span="99-99"];
m18_35 [cluster="QuantConnect.Data.Custom.FxcmVolume.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="OptionFilterTests.cs", label="Exit QuantConnect.Data.Custom.FxcmVolume.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="89-89"];
m18_22 [cluster="System.Enum.ToLower()", file="OptionFilterTests.cs", label="Entry System.Enum.ToLower()", span="879-879"];
m18_0 [cluster="QuantConnect.Data.Custom.FxcmVolume.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="OptionFilterTests.cs", label="Entry QuantConnect.Data.Custom.FxcmVolume.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="50-50"];
m18_1 [cluster="QuantConnect.Data.Custom.FxcmVolume.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="OptionFilterTests.cs", label=isLiveMode, span="52-52"];
m18_3 [cluster="QuantConnect.Data.Custom.FxcmVolume.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="OptionFilterTests.cs", label="CheckResolution(config.Resolution)", span="53-53"];
m18_4 [cluster="QuantConnect.Data.Custom.FxcmVolume.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="OptionFilterTests.cs", label="CheckForexPair(config.Symbol.Value)", span="54-54"];
m18_5 [cluster="QuantConnect.Data.Custom.FxcmVolume.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="OptionFilterTests.cs", label="var source = GenerateZipFilePath(config, date)", span="55-55"];
m18_2 [cluster="QuantConnect.Data.Custom.FxcmVolume.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="OptionFilterTests.cs", label="throw new NotImplementedException(''FOREX Volume data is not available in live mode, yet.'');", span="52-52"];
m18_6 [cluster="QuantConnect.Data.Custom.FxcmVolume.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="OptionFilterTests.cs", label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile);", span="56-56"];
m18_7 [cluster="QuantConnect.Data.Custom.FxcmVolume.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="OptionFilterTests.cs", label="Exit QuantConnect.Data.Custom.FxcmVolume.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="50-50"];
m18_25 [cluster="string.ToLower()", file="OptionFilterTests.cs", label="Entry string.ToLower()", span="0-0"];
m18_39 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="OptionFilterTests.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m18_37 [cluster="int.Parse(string)", file="OptionFilterTests.cs", label="Entry int.Parse(string)", span="0-0"];
m18_12 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="OptionFilterTests.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="44-44"];
m18_24 [cluster="string.Format(string, object)", file="OptionFilterTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m18_47 [cluster="string.Join(string, params string[])", file="OptionFilterTests.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m18_40 [cluster="QuantConnect.Data.Custom.FxcmVolume.FxcmVolume()", file="OptionFilterTests.cs", label="Entry QuantConnect.Data.Custom.FxcmVolume.FxcmVolume()", span="17-17"];
m18_27 [cluster="System.IO.Path.Combine(string, string)", file="OptionFilterTests.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m18_9 [cluster="QuantConnect.Data.Custom.FxcmVolume.CheckResolution(QuantConnect.Resolution)", file="OptionFilterTests.cs", label="Entry QuantConnect.Data.Custom.FxcmVolume.CheckResolution(QuantConnect.Resolution)", span="120-120"];
m18_48 [cluster="QuantConnect.Data.Custom.FxcmVolume.CheckResolution(QuantConnect.Resolution)", file="OptionFilterTests.cs", label="resolution != Resolution.Minute && resolution != Resolution.Hour && resolution != Resolution.Daily", span="122-122"];
m18_49 [cluster="QuantConnect.Data.Custom.FxcmVolume.CheckResolution(QuantConnect.Resolution)", file="OptionFilterTests.cs", label="throw new ArgumentOutOfRangeException(''resolution'', resolution,\r\n                    ''Available resolutions for FXCM Forex Volume data are Minute, Hour and Daily.'');", span="124-125"];
m18_50 [cluster="QuantConnect.Data.Custom.FxcmVolume.CheckResolution(QuantConnect.Resolution)", file="OptionFilterTests.cs", label="Exit QuantConnect.Data.Custom.FxcmVolume.CheckResolution(QuantConnect.Resolution)", span="120-120"];
m18_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="OptionFilterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m18_46 [cluster="System.ArgumentException.ArgumentException(string, string)", file="OptionFilterTests.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m18_26 [cluster="System.IO.Path.Combine(string, string, string)", file="OptionFilterTests.cs", label="Entry System.IO.Path.Combine(string, string, string)", span="0-0"];
m18_52 [file="OptionFilterTests.cs", label="QuantConnect.Data.Custom.FxcmVolume", span=""];
m19_82 [cluster="QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", span="94-94"];
m19_85 [cluster="System.Collections.IEnumerator.MoveNext()", file="OptionFilterUniverse.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m19_90 [cluster="System.Collections.Generic.List<T>.List()", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m19_111 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58"];
m19_88 [cluster="object.ReferenceEquals(object, object)", file="OptionFilterUniverse.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m19_99 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m19_100 [cluster="Unk.TryGetValue", file="OptionFilterUniverse.cs", label="Entry Unk.TryGetValue", span=""];
m19_113 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="79-79"];
m19_7 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="dataFeed.Subscriptions", span="53-53"];
m19_6 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="53-53"];
m19_8 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="53-53"];
m19_114 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="new[] { dateTimeUtc }", span="79-79"];
m19_117 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="x.Status.IsOpen() && x.Symbol == member.Symbol", span="123-123"];
m19_116 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="123-123"];
m19_121 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="x.Status.IsOpen() && x.Symbol == member.Symbol", span="147-147"];
m19_120 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="147-147"];
m19_115 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="79-79"];
m19_118 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="123-123"];
m19_122 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="147-147"];
m19_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", span="43-43"];
m19_105 [cluster="QuantConnect.Symbol.ToString()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m19_133 [cluster="System.Collections.Generic.List<T>.Remove(T)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0"];
m19_98 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="119-119"];
m19_131 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="237-237"];
m19_96 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m19_102 [cluster="QuantConnect.Data.UniverseSelection.Universe.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="188-188"];
m19_108 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", span="219-219"];
m19_78 [cluster="QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", span="82-82"];
m19_135 [cluster="QuantConnect.SymbolCache.TryRemove(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.SymbolCache.TryRemove(QuantConnect.Symbol)", span="92-92"];
m19_80 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72"];
m19_104 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="379-379"];
m19_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var exchangeHours = _marketHoursDatabase.GetEntry(symbol.ID.Market, symbol, symbol.ID.SecurityType).ExchangeHours", span="82-82"];
m19_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="62-62"];
m19_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="IEnumerable<Symbol> selectSymbolsResult", span="64-64"];
m19_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var fineFiltered = universe as FineFundamentalFilteredUniverse", span="67-67"];
m19_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="selectSymbolsResult = universe.SelectSymbols(dateTimeUtc, universeData)", span="71-71"];
m19_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var factory = new FineFundamentalSubscriptionEnumeratorFactory(_algorithm.LiveMode, x => new[] { dateTimeUtc })", span="79-79"];
m19_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var request = new SubscriptionRequest(true, universe, security, new SubscriptionDataConfig(config), dateTimeUtc, dateTimeUtc)", span="88-88"];
m19_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="selectSymbolsResult = fineFiltered.FineFundamentalUniverse.PerformSelection(dateTimeUtc, fineCollection)", span="99-99"];
m19_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="selectSymbolsResult = universe.PerformSelection(dateTimeUtc, universeData)", span="104-104"];
m19_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="RemoveSecurityFromUniverse(universe, member, removals, dateTimeUtc, algorithmEndDateUtc)", span="126-126"];
m19_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="universe.Members.Values", span="133-133"];
m19_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="!universe.CanRemoveMember(dateTimeUtc, member)", span="139-139"];
m19_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="RemoveSecurityFromUniverse(universe, member, removals, dateTimeUtc, algorithmEndDateUtc)", span="150-150"];
m19_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="security = universe.CreateSecurity(symbol, _algorithm, _marketHoursDatabase, _symbolPropertiesDatabase)", span="165-165"];
m19_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="universe.GetSubscriptionRequests(security, dateTimeUtc, algorithmEndDateUtc)", span="170-170"];
m19_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var addedMember = universe.AddMember(dateTimeUtc, security)", span="194-194"];
m19_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="_dataFeed.AddSubscription(new SubscriptionRequest(false, universe, security, new SubscriptionDataConfig(security.Subscriptions.First()), dateTimeUtc, algorithmEndDateUtc))", span="210-210"];
m19_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="Log.Debug(''UniverseSelection.ApplyUniverseSelection(): '' + dateTimeUtc + '': '' + securityChanges)", span="221-221"];
m19_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="fineFiltered != null", span="68-68"];
m19_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var fineCollection = new BaseDataCollection()", span="74-74"];
m19_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label=selectSymbolsResult, span="77-77"];
m19_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var dataProvider = new DefaultDataProvider()", span="75-75"];
m19_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="fineCollection.Data.Add(enumerator.Current)", span="93-93"];
m19_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var enumerator = factory.CreateEnumerator(request, dataProvider)", span="89-89"];
m19_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var config = FineFundamentalUniverse.CreateConfiguration(symbol)", span="80-80"];
m19_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol, symbol.ID.SecurityType, CashBook.AccountCurrency)", span="83-83"];
m19_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var security = new Equity(symbol, exchangeHours, quoteCash, symbolProperties)", span="86-86"];
m19_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var quoteCash = _algorithm.Portfolio.CashBook[symbolProperties.QuoteCurrency]", span="84-84"];
m19_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="enumerator.MoveNext()", span="91-91"];
m19_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="ReferenceEquals(selectSymbolsResult, Universe.Unchanged)", span="108-108"];
m19_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var selections = selectSymbolsResult.ToHashSet()", span="114-114"];
m19_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="return SecurityChanges.None;", span="110-110"];
m19_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var additions = new List<Security>()", span="116-116"];
m19_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="selections.Contains(member.Symbol)", span="136-136"];
m19_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label=selections, span="159-159"];
m19_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var removals = new List<Security>()", span="117-117"];
m19_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="additions.Add(security)", span="198-198"];
m19_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="additions.Count > 0", span="204-204"];
m19_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var securityChanges = additions.Count + removals.Count != 0\r\n                ? new SecurityChanges(additions, removals)\r\n                : SecurityChanges.None", span="215-217"];
m19_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var algorithmEndDateUtc = _algorithm.EndDate.ConvertToUtc(_algorithm.TimeZone)", span="118-118"];
m19_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="removals.Add(member)", span="144-144"];
m19_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="_pendingRemovals.ToList()", span="121-121"];
m19_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var openOrders = _algorithm.Transactions.GetOrders(x => x.Status.IsOpen() && x.Symbol == member.Symbol)", span="123-123"];
m19_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="!member.HoldStock && !openOrders.Any()", span="124-124"];
m19_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="_pendingRemovals.Remove(member)", span="128-128"];
m19_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var openOrders = _algorithm.Transactions.GetOrders(x => x.Status.IsOpen() && x.Symbol == member.Symbol)", span="147-147"];
m19_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="!member.HoldStock && !openOrders.Any()", span="148-148"];
m19_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="_pendingRemovals.Add(member)", span="154-154"];
m19_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="Security security", span="162-162"];
m19_50 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="!_algorithm.Securities.TryGetValue(symbol, out security)", span="163-163"];
m19_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var addedSubscription = false", span="168-168"];
m19_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label=addedSubscription, span="192-192"];
m19_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="string reason", span="173-173"];
m19_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="!_limiter.CanAddSubscription(request.Configuration.Resolution, out reason)", span="174-174"];
m19_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="Log.Trace(''UniverseSelection.ApplyUniverseSelection(): Skipping adding subscription: '' + request.Configuration.Symbol.ToString() + '': '' + reason)", span="179-179"];
m19_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="_dataFeed.AddSubscription(request)", span="183-183"];
m19_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="!request.IsUniverseSubscription", span="186-186"];
m19_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="_algorithm.Error(reason)", span="178-178"];
m19_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="addedSubscription = true", span="188-188"];
m19_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label=addedMember, span="196-196"];
m19_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="var addedSecurities = _algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(_algorithm.Securities, _algorithm.SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, _algorithm.BrokerageModel.DefaultMarkets)", span="206-206"];
m19_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label=addedSecurities, span="207-207"];
m19_70 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="securityChanges != SecurityChanges.None", span="219-219"];
m19_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="return securityChanges;", span="224-224"];
m19_73 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="62-62"];
m19_103 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", span="85-85"];
m19_95 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="227-227"];
m19_124 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="OptionFilterUniverse.cs", label="member.Cache.Reset()", span="235-235"];
m19_125 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="OptionFilterUniverse.cs", label="universe.GetSubscriptionRequests(member, dateTimeUtc, algorithmEndDateUtc)", span="236-236"];
m19_127 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="OptionFilterUniverse.cs", label="removals.Remove(member)", span="240-240"];
m19_129 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="OptionFilterUniverse.cs", label="SymbolCache.TryRemove(member.Symbol)", span="249-249"];
m19_126 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="OptionFilterUniverse.cs", label="subscription.IsUniverseSubscription", span="238-238"];
m19_128 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="OptionFilterUniverse.cs", label="_dataFeed.RemoveSubscription(subscription.Configuration)", span="244-244"];
m19_130 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="227-227"];
m19_107 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="60-60"];
m19_132 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182"];
m19_92 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m19_87 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="139-139"];
m19_75 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", span="46-46"];
m19_109 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78"];
m19_112 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m19_74 [cluster="QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="163-163"];
m19_93 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292"];
m19_94 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m19_76 [cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", span="26-26"];
m19_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", span="49-49"];
m19_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="OptionFilterUniverse.cs", label="_dataFeed = dataFeed", span="51-51"];
m19_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="OptionFilterUniverse.cs", label="_algorithm = algorithm", span="52-52"];
m19_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="OptionFilterUniverse.cs", label="_limiter = new SubscriptionLimiter(() => dataFeed.Subscriptions, controls.TickLimit, controls.SecondLimit, controls.MinuteLimit)", span="53-53"];
m19_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", span="49-49"];
m19_134 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", span="67-67"];
m19_77 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="47-47"];
m19_91 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="OptionFilterUniverse.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m19_84 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="59-59"];
m19_86 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m19_97 [cluster="Unk.Contains", file="OptionFilterUniverse.cs", label="Entry Unk.Contains", span=""];
m19_83 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m19_119 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
m19_89 [cluster="Unk.ToHashSet", file="OptionFilterUniverse.cs", label="Entry Unk.ToHashSet", span=""];
m19_79 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="210-210"];
m19_106 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m19_101 [cluster="Unk.CreateSecurity", file="OptionFilterUniverse.cs", label="Entry Unk.CreateSecurity", span=""];
m19_110 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m19_81 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m19_136 [file="OptionFilterUniverse.cs", label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", span=""];
m19_137 [file="OptionFilterUniverse.cs", label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", span=""];
m19_138 [file="OptionFilterUniverse.cs", label="System.DateTime", span=""];
m19_139 [file="OptionFilterUniverse.cs", label=member, span=""];
m19_140 [file="OptionFilterUniverse.cs", label=member, span=""];
m24_6 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", span="54-54"];
m24_8 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", file="ProjectNameDialog.xaml.cs", label="projects.ForEach(p => projectNameBox.Items.Add(new ComboboxItem(p.Item1, p.Item2)))", span="56-56"];
m24_9 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", span="54-54"];
m24_15 [cluster="Unk.Add", file="ProjectNameDialog.xaml.cs", label="Entry Unk.Add", span=""];
m24_10 [cluster="Unk.ForEach", file="ProjectNameDialog.xaml.cs", label="Entry Unk.ForEach", span=""];
m24_41 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", span="99-99"];
m24_42 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Close()", span="101-101"];
m24_43 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", span="99-99"];
m24_5 [cluster="Unk.InitializeComponent", file="ProjectNameDialog.xaml.cs", label="Entry Unk.InitializeComponent", span=""];
m24_33 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", span="86-86"];
m24_34 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="ProjectNameDialog.xaml.cs", label="projectNameBox.BorderBrush = System.Windows.Media.Brushes.Red", span="88-88"];
m24_35 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="ProjectNameDialog.xaml.cs", label="projectNameBox.ToolTip = ''Error occurred with the data of the control.''", span="89-89"];
m24_36 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", span="86-86"];
m24_30 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", span="92-92"];
m24_37 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", file="ProjectNameDialog.xaml.cs", label="ProjectNameProvided = true", span="94-94"];
m24_38 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", file="ProjectNameDialog.xaml.cs", label="SelectedProjectName = projectName", span="95-95"];
m24_39 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", file="ProjectNameDialog.xaml.cs", label="SelectedProjectId = projectId", span="96-96"];
m24_40 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", span="92-92"];
m24_31 [cluster="Unk.Close", file="ProjectNameDialog.xaml.cs", label="Entry Unk.Close", span=""];
m24_7 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", span="59-59"];
m24_16 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", file="ProjectNameDialog.xaml.cs", label="projectNameBox.Text = suggestedProjectName", span="61-61"];
m24_17 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", span="59-59"];
m24_18 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", span="64-64"];
m24_19 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="var selectedItem = projectNameBox.SelectedItem as ComboboxItem", span="66-66"];
m24_20 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="selectedItem != null", span="68-68"];
m24_21 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="var projectId = selectedItem.ProjectId", span="70-70"];
m24_22 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="var projectName = selectedItem.ProjectName", span="71-71"];
m24_25 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="projectNameBox.Text.Length != 0", span="75-75"];
m24_23 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="SaveSelectedProjectName(projectId, projectName)", span="72-72"];
m24_24 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Close()", span="73-73"];
m24_26 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="SaveSelectedProjectName(null, projectNameBox.Text)", span="77-77"];
m24_28 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="DisplayProjectNameError()", span="82-82"];
m24_27 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Close()", span="78-78"];
m24_29 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", span="64-64"];
m24_14 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", span="111-111"];
m24_44 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", file="ProjectNameDialog.xaml.cs", label="ProjectId = projectId", span="113-113"];
m24_45 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", file="ProjectNameDialog.xaml.cs", label="ProjectName = projectName", span="114-114"];
m24_46 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", span="111-111"];
m24_0 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", span="47-47"];
m24_1 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="ProjectNameDialog.xaml.cs", label="InitializeComponent()", span="49-49"];
m24_2 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="ProjectNameDialog.xaml.cs", label="SetProjectNames(projects)", span="50-50"];
m24_3 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="ProjectNameDialog.xaml.cs", label="SetSuggestedProjectName(suggestedProjectName)", span="51-51"];
m24_4 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", span="47-47"];
m24_47 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", span="117-117"];
m24_48 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", file="ProjectNameDialog.xaml.cs", label="return ProjectName;", span="119-119"];
m24_49 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", span="117-117"];
m24_32 [cluster="Unk.SaveSelectedProjectName", file="ProjectNameDialog.xaml.cs", label="Entry Unk.SaveSelectedProjectName", span=""];
m24_11 [cluster="lambda expression", file="ProjectNameDialog.xaml.cs", label="Entry lambda expression", span="56-56"];
m24_12 [cluster="lambda expression", file="ProjectNameDialog.xaml.cs", label="projectNameBox.Items.Add(new ComboboxItem(p.Item1, p.Item2))", span="56-56"];
m24_13 [cluster="lambda expression", file="ProjectNameDialog.xaml.cs", label="Exit lambda expression", span="56-56"];
m24_50 [file="ProjectNameDialog.xaml.cs", label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", span=""];
m24_51 [file="ProjectNameDialog.xaml.cs", label="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem", span=""];
m25_2 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", file="QuantConnectPackage.cs", label="Entry QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", span="68-68"];
m25_5 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", color=green, community=0, file="QuantConnectPackage.cs", label="ToolMenuCommand.Initialize(this)", prediction=20, span="72-72"];
m25_6 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", file="QuantConnectPackage.cs", label="Exit QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", span="68-68"];
m25_0 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", file="QuantConnectPackage.cs", label="Entry QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", span="54-54"];
m25_1 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", file="QuantConnectPackage.cs", label="Exit QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", span="54-54"];
m25_7 [cluster="Unk.Initialize", file="QuantConnectPackage.cs", label="Entry Unk.Initialize", span=""];
m25_8 [file="QuantConnectPackage.cs", label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", span=""];
m26_4 [cluster="WebSocket.cstr", file="RegressionTests.cs", label="Entry WebSocket.cstr", span=""];
m26_9 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Connect()", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Connect()", span="54-54"];
m26_10 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Connect()", file="RegressionTests.cs", label="wrapped.Connect()", span="56-56"];
m26_11 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Connect()", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Connect()", span="54-54"];
m26_12 [cluster="Unk.Connect", file="RegressionTests.cs", label="Entry Unk.Connect", span=""];
m26_16 [cluster="Unk.Close", file="RegressionTests.cs", label="Entry Unk.Close", span=""];
m26_5 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Send(string)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Send(string)", span="46-46"];
m26_6 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Send(string)", file="RegressionTests.cs", label="wrapped.Send(data)", span="48-48"];
m26_7 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Send(string)", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Send(string)", span="46-46"];
m26_13 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Close()", span="62-62"];
m26_14 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="RegressionTests.cs", label="wrapped.Close()", span="64-64"];
m26_15 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Close()", span="62-62"];
m26_8 [cluster="Unk.Send", file="RegressionTests.cs", label="Entry Unk.Send", span=""];
m26_0 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", span="36-36"];
m26_1 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="RegressionTests.cs", label="wrapped = new WebSocket(url)", span="38-38"];
m26_2 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="RegressionTests.cs", label="wrapped.EmitOnPing = true", span="39-39"];
m26_3 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", span="36-36"];
m26_17 [file="RegressionTests.cs", label="QuantConnect.Brokerages.WebSocketWrapper", span=""];
m27_14 [cluster="string.Format(string, params object[])", file="RenkoConsolidator.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m27_3 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="65-65"];
m27_4 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", color=green, community=0, file="RenkoConsolidator.cs", label="StopPrice = stopPrice", prediction=21, span="68-68"];
m27_5 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="RenkoConsolidator.cs", label="LimitPrice = limitPrice", span="69-69"];
m27_7 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="RenkoConsolidator.cs", label="tag == ''''", span="72-72"];
m27_8 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="RenkoConsolidator.cs", label="Tag = ''Stop Price: '' + stopPrice.ToString(''C'') + '' Limit Price: '' + limitPrice.ToString(''C'')", span="75-75"];
m27_6 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="RenkoConsolidator.cs", label="Type = OrderType.StopLimit", span="70-70"];
m27_9 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="RenkoConsolidator.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="65-65"];
m27_0 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="50-50"];
m27_1 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="RenkoConsolidator.cs", label="Type = OrderType.StopLimit", span="52-52"];
m27_2 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="50-50"];
m27_11 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Orders.StopLimitOrder.ToString()", span="86-86"];
m27_12 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="RenkoConsolidator.cs", label="return string.Format(''{0} order for {1} unit{2} of {3} at stop {4} limit {5}'', Type, Quantity, Quantity == 1 ? '''' : ''s'', Symbol, StopPrice, LimitPrice);", span="88-88"];
m27_13 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Orders.StopLimitOrder.ToString()", span="86-86"];
m27_10 [cluster="decimal.ToString(string)", file="RenkoConsolidator.cs", label="Entry decimal.ToString(string)", span="0-0"];
m27_15 [file="RenkoConsolidator.cs", label="QuantConnect.Orders.StopLimitOrder", span=""];
m30_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", span="120-120"];
m30_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="Id = insight.Id.ToString(''N'')", span="122-122"];
m30_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="SourceModel = insight.SourceModel", span="123-123"];
m30_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="GeneratedTime = Time.DateTimeToUnixTimeStamp(insight.GeneratedTimeUtc)", span="124-124"];
m30_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="CloseTime = Time.DateTimeToUnixTimeStamp(insight.CloseTimeUtc)", span="125-125"];
m30_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="Symbol = insight.Symbol.ID.ToString()", span="126-126"];
m30_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="Ticker = insight.Symbol.Value", span="127-127"];
m30_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="Type = insight.Type", span="128-128"];
m30_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="ReferenceValue = insight.ReferenceValue", span="129-129"];
m30_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="Direction = insight.Direction", span="130-130"];
m30_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="Period = insight.Period.TotalSeconds", span="131-131"];
m30_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="Magnitude = insight.Magnitude", span="132-132"];
m30_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="Confidence = insight.Confidence", span="133-133"];
m30_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="ScoreIsFinal = insight.Score.IsFinalScore", span="134-134"];
m30_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="ScoreMagnitude = insight.Score.Magnitude", span="135-135"];
m30_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="ScoreDirection = insight.Score.Direction", span="136-136"];
m30_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="EstimatedValue = insight.EstimatedValue", span="137-137"];
m30_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", file="SerializedInsight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", span="120-120"];
m30_22 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="SerializedInsight.cs", label="Entry QuantConnect.SecurityIdentifier.ToString()", span="717-717"];
m30_21 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="SerializedInsight.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="169-169"];
m30_20 [cluster="System.Guid.ToString(string)", file="SerializedInsight.cs", label="Entry System.Guid.ToString(string)", span="0-0"];
m30_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", file="SerializedInsight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", span="112-112"];
m30_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", file="SerializedInsight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", span="112-112"];
m30_23 [file="SerializedInsight.cs", label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", span=""];
m31_0 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.Initialize()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.Initialize()", span="28-28"];
m31_1 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.Initialize()", file="SolutionExplorerMenuCommand.cs", label="SetStartDate(2013, 10, 07)", span="30-30"];
m31_2 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.Initialize()", file="SolutionExplorerMenuCommand.cs", label="SetEndDate(2013, 10, 11)", span="31-31"];
m31_3 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.Initialize()", file="SolutionExplorerMenuCommand.cs", label="SetCash(100000)", span="32-32"];
m31_4 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.Initialize()", file="SolutionExplorerMenuCommand.cs", label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Second)", span="34-34"];
m31_5 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.Initialize()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.Initialize()", span="28-28"];
m31_18 [cluster="System.TimeSpan.FromHours(double)", file="SolutionExplorerMenuCommand.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m31_17 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
m31_10 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="41-41"];
m31_11 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="SolutionExplorerMenuCommand.cs", label="data.Bars.ContainsKey(''SPY'')", span="43-43"];
m31_15 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="SolutionExplorerMenuCommand.cs", label="LimitOrder(''SPY'', negative*10, data[''SPY''].Price)", span="49-49"];
m31_12 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="SolutionExplorerMenuCommand.cs", label="Time.TimeOfDay.Ticks%TimeSpan.FromHours(1).Ticks == 0", span="45-45"];
m31_13 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="SolutionExplorerMenuCommand.cs", label="bool goLong = Time < StartDate + TimeSpan.FromTicks((EndDate - StartDate).Ticks/2)", span="47-47"];
m31_14 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="SolutionExplorerMenuCommand.cs", label="int negative = goLong ? 1 : -1", span="48-48"];
m31_16 [cluster="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="41-41"];
m31_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095"];
m31_19 [cluster="System.TimeSpan.FromTicks(long)", file="SolutionExplorerMenuCommand.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m31_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262"];
m31_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070"];
m31_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019"];
m31_20 [cluster="Unk.LimitOrder", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.LimitOrder", span=""];
m31_21 [file="SolutionExplorerMenuCommand.cs", label="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm", span=""];
m33_158 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m33_250 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m33_181 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ToolMenuCommand.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m33_216 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="424-424"];
m33_145 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="53-53"];
m33_148 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", span="42-42"];
m33_139 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="91-91"];
m33_180 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ToolMenuCommand.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m33_153 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="193-193"];
m33_191 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="70-70"];
m33_217 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="429-429"];
m33_160 [cluster="object.GetType()", file="ToolMenuCommand.cs", label="Entry object.GetType()", span="0-0"];
m33_154 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="ToolMenuCommand.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m33_179 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="448-448"];
m33_251 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="ToolMenuCommand.cs", label="var orders = transactions.GetOrders(x => x.Status.IsFill())", span="450-450"];
m33_252 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="ToolMenuCommand.cs", label="var path = Path.GetDirectoryName(csvFileName)", span="452-452"];
m33_255 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="ToolMenuCommand.cs", label="var writer = new StreamWriter(csvFileName)", span="456-456"];
m33_256 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="ToolMenuCommand.cs", label=orders, span="458-458"];
m33_253 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="ToolMenuCommand.cs", label="path != null && !Directory.Exists(path)", span="453-453"];
m33_254 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="ToolMenuCommand.cs", label="Directory.CreateDirectory(path)", span="454-454"];
m33_258 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="ToolMenuCommand.cs", label="writer.WriteLine(line)", span="466-466"];
m33_257 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="ToolMenuCommand.cs", label="var line = string.Format(''{0},{1},{2},{3},{4}'',\r\n                        order.Time.ToString(''yyyy-MM-dd HH:mm:ss''),\r\n                        order.Symbol.Value,\r\n                        order.Direction,\r\n                        order.Quantity,\r\n                        order.Price)", span="460-465"];
m33_259 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="ToolMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="448-448"];
m33_138 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44"];
m33_267 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Entry lambda expression", span="450-450"];
m33_220 [cluster="lambda expression", file="ToolMenuCommand.cs", label="algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _systemHandlers.LeanManager, isolator.CancellationToken)", span="250-250"];
m33_224 [cluster="lambda expression", file="ToolMenuCommand.cs", label="algorithmManager.SetStatus(AlgorithmStatus.RuntimeError)", span="257-257"];
m33_201 [cluster="lambda expression", file="ToolMenuCommand.cs", label="!algorithm.GetLocked() || algorithm.IsWarmingUp", span="136-136"];
m33_207 [cluster="lambda expression", file="ToolMenuCommand.cs", label="algorithm.BrokerageMessageHandler.Handle(message)", span="205-205"];
m33_208 [cluster="lambda expression", file="ToolMenuCommand.cs", label="algorithm.OnBrokerageMessage(message)", span="208-208"];
m33_211 [cluster="lambda expression", file="ToolMenuCommand.cs", label="algorithm.OnBrokerageDisconnect()", span="212-212"];
m33_213 [cluster="lambda expression", file="ToolMenuCommand.cs", label="algorithm.OnBrokerageReconnect()", span="215-215"];
m33_223 [cluster="lambda expression", file="ToolMenuCommand.cs", label="algorithm.RunTimeError = err", span="256-256"];
m33_200 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Entry lambda expression", span="133-141"];
m33_209 [cluster="lambda expression", file="ToolMenuCommand.cs", label="message.Type", span="209-209"];
m33_219 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Entry lambda expression", span="242-262"];
m33_230 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Entry lambda expression", span="317-317"];
m33_202 [cluster="lambda expression", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress))", span="138-139"];
m33_203 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Exit lambda expression", span="133-141"];
m33_206 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Entry lambda expression", span="203-218"];
m33_210 [cluster="lambda expression", file="ToolMenuCommand.cs", label="BrokerageMessageType.Disconnect", span="211-211"];
m33_212 [cluster="lambda expression", file="ToolMenuCommand.cs", label="BrokerageMessageType.Reconnect", span="214-214"];
m33_214 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Exit lambda expression", span="203-218"];
m33_221 [cluster="lambda expression", file="ToolMenuCommand.cs", label=Exception, span="252-252"];
m33_226 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="261-261"];
m33_222 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Log.Error(err)", span="255-255"];
m33_225 [cluster="lambda expression", file="ToolMenuCommand.cs", label="return;", span="258-258"];
m33_227 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Exit lambda expression", span="242-262"];
m33_231 [cluster="lambda expression", file="ToolMenuCommand.cs", label="x.Status.IsFill()", span="317-317"];
m33_232 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Exit lambda expression", span="317-317"];
m33_268 [cluster="lambda expression", file="ToolMenuCommand.cs", label="x.Status.IsFill()", span="450-450"];
m33_269 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Exit lambda expression", span="450-450"];
m33_143 [cluster="QuantConnect.Lean.Engine.Server.ILeanManager.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Server.ILeanManager.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="41-41"];
m33_155 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m33_168 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
m33_164 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="42-42"];
m33_149 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="44-44"];
m33_162 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="451-451"];
m33_169 [cluster="QuantConnect.Isolator.Isolator()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m33_5 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83"];
m33_6 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var algorithm = default(IAlgorithm)", span="85-85"];
m33_7 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var algorithmManager = manager", span="86-86"];
m33_13 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_systemHandlers.Notify.SetAuthentication(job)", span="98-98"];
m33_14 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.Initialize(job, _systemHandlers.Notify, _systemHandlers.Api, _algorithmHandlers.DataFeed, _algorithmHandlers.Setup, _algorithmHandlers.Transactions)", span="101-101"];
m33_18 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="algorithm = _algorithmHandlers.Setup.CreateAlgorithmInstance(job, assemblyPath)", span="110-110"];
m33_21 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="brokerage = _algorithmHandlers.Setup.CreateBrokerage(job, algorithm, out factory)", span="117-117"];
m33_22 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.DataFeed.Initialize(algorithm, job, _algorithmHandlers.Results, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, _algorithmHandlers.DataProvider)", span="120-120"];
m33_24 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var historyProvider = GetHistoryProvider(job.HistoryProvider)", span="126-126"];
m33_28 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="historyProvider.Initialize(job, _algorithmHandlers.DataProvider, historyDataCacheProvider, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, progress =>\r\n                    {\r\n                        // send progress updates to the result handler only during initialization\r\n                        if (!algorithm.GetLocked() || algorithm.IsWarmingUp)\r\n                        {\r\n                            _algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress));\r\n                        }\r\n                    })", span="133-141"];
m33_30 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="algorithm.BrokerageMessageHandler = factory.CreateBrokerageMessageHandler(algorithm, job, _systemHandlers.Api)", span="146-146"];
m33_31 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="initializeComplete = _algorithmHandlers.Setup.Setup(algorithm, brokerage, job, _algorithmHandlers.Results, _algorithmHandlers.Transactions, _algorithmHandlers.RealTime)", span="149-149"];
m33_39 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, errorMessage)", span="163-163"];
m33_44 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="171-171"];
m33_53 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="job is LiveNodePacket", span="186-186"];
m33_57 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="195-195"];
m33_60 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.RealTime.Setup(algorithm, job, _algorithmHandlers.Results, _systemHandlers.Api)", span="200-200"];
m33_69 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Globals.Version))", span="234-234"];
m33_71 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var complete = isolator.ExecuteWithTimeLimit(_algorithmHandlers.Setup.MaximumRuntime, algorithmManager.TimeLoopWithinLimits, () =>\r\n                        {\r\n                            try\r\n                            {\r\n                                //Run Algorithm Job:\r\n                                // -> Using this Data Feed, \r\n                                // -> Send Orders to this TransactionHandler, \r\n                                // -> Send Results to ResultHandler.\r\n                                algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _systemHandlers.LeanManager, isolator.CancellationToken);\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                //Debugging at this level is difficult, stack trace needed.\r\n                                Log.Error(err);\r\n                                algorithm.RunTimeError = err;\r\n                                algorithmManager.SetStatus(AlgorithmStatus.RuntimeError);\r\n                                return;\r\n                            }\r\n\r\n                            Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n                        }, job.Controls.RamAllocation)", span="242-262"];
m33_76 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="HandleAlgorithmError(job, algorithm.RunTimeError)", span="274-274"];
m33_78 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="HandleAlgorithmError(job, err)", span="280-280"];
m33_109 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.DebugMessage(\r\n                            string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                                job.AlgorithmId, totalSeconds.ToString(''F2''), ((dataPoints/(double) 1000)/totalSeconds).ToString(''F0''),\r\n                                dataPoints.ToString(''N0'')))", span="344-347"];
m33_110 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statisticsResults, banner)", span="349-349"];
m33_8 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var initializeComplete = false", span="91-91"];
m33_108 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var dataPoints = algorithmManager.DataPoints + algorithm.HistoryProvider.DataPointCount", span="343-343"];
m33_9 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Thread threadFeed = null", span="92-92"];
m33_10 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Thread threadTransactions = null", span="93-93"];
m33_121 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadFeed != null && threadFeed.IsAlive", span="378-378"];
m33_122 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadFeed.Abort()", span="378-378"];
m33_11 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Thread threadResults = null", span="94-94"];
m33_123 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadTransactions != null && threadTransactions.IsAlive", span="379-379"];
m33_124 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadTransactions.Abort()", span="379-379"];
m33_12 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Thread threadRealTime = null", span="95-95"];
m33_15 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadResults = new Thread(_algorithmHandlers.Results.Run, 0) { IsBackground = true, Name = ''Result Thread'' }", span="103-103"];
m33_16 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadResults.Start()", span="104-104"];
m33_125 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadResults != null && threadResults.IsAlive", span="380-380"];
m33_126 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadResults.Abort()", span="380-380"];
m33_17 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="IBrokerage brokerage = null", span="106-106"];
m33_19 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_systemHandlers.LeanManager.SetAlgorithm(algorithm)", span="113-113"];
m33_23 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", color=green, community=0, file="ToolMenuCommand.cs", label="algorithm.Transactions.SetOrderProcessor(_algorithmHandlers.Transactions)", prediction=22, span="123-123"];
m33_29 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="algorithm.HistoryProvider = historyProvider", span="143-143"];
m33_32 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.SetAlgorithm(algorithm)", span="152-152"];
m33_33 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || _algorithmHandlers.Setup.Errors.Count > 0", span="155-155"];
m33_35 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="159-159"];
m33_51 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="algorithm != null && algorithm.HistoryProvider != null", span="182-182"];
m33_52 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''         History Provider:     '' + algorithm.HistoryProvider.GetType().FullName)", span="184-184"];
m33_58 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="algorithm.SetLocked()", span="196-196"];
m33_59 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Transactions.Initialize(algorithm, brokerage, _algorithmHandlers.Results)", span="199-199"];
m33_61 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="brokerage.Message += (sender, message) =>\r\n                    {\r\n                        algorithm.BrokerageMessageHandler.Handle(message);\r\n\r\n                        // fire brokerage message events\r\n                        algorithm.OnBrokerageMessage(message);\r\n                        switch (message.Type)\r\n                        {\r\n                            case BrokerageMessageType.Disconnect:\r\n                                algorithm.OnBrokerageDisconnect();\r\n                                break;\r\n                            case BrokerageMessageType.Reconnect:\r\n                                algorithm.OnBrokerageReconnect();\r\n                                break;\r\n                        }\r\n                    }", span="203-218"];
m33_75 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="algorithm.RunTimeError != null", span="272-272"];
m33_79 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var trades = algorithm.TradeBuilder.ClosedTrades", span="285-285"];
m33_95 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var profitLoss = new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="316-316"];
m33_96 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var totalTransactions = algorithm.Transactions.GetOrders(x => x.Status.IsFill()).Count()", span="317-317"];
m33_98 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="statisticsResults = StatisticsBuilder.Generate(trades, profitLoss, equity, performance, benchmark,\r\n                                    _algorithmHandlers.Setup.StartingPortfolioValue, algorithm.Portfolio.TotalFees, totalTransactions)", span="320-321"];
m33_99 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var netReturn = _algorithmHandlers.Setup.StartingPortfolioValue > 0 ?\r\n                                                (algorithm.Portfolio.TotalPortfolioValue - _algorithmHandlers.Setup.StartingPortfolioValue) / _algorithmHandlers.Setup.StartingPortfolioValue\r\n                                                : 0", span="324-326"];
m33_100 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="banner.Add(''Unrealized'', ''$'' + algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="329-329"];
m33_101 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="banner.Add(''Fees'', ''-$'' + algorithm.Portfolio.TotalFees.ToString(''N2''))", span="330-330"];
m33_102 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="banner.Add(''Net Profit'', ''$'' + algorithm.Portfolio.TotalProfit.ToString(''N2''))", span="331-331"];
m33_104 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="banner.Add(''Equity'', ''$'' + algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="333-333"];
m33_20 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="IBrokerageFactory factory", span="116-116"];
m33_26 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="(historyProvider as BrokerageHistoryProvider).SetBrokerage(brokerage)", span="129-129"];
m33_54 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''         Brokerage:      '' + brokerage.GetType().FullName)", span="186-186"];
m33_127 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="brokerage != null", span="382-382"];
m33_129 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="brokerage.Disconnect()", span="385-385"];
m33_130 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="brokerage.Dispose()", span="386-386"];
m33_25 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="historyProvider is BrokerageHistoryProvider", span="127-127"];
m33_27 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var historyDataCacheProvider = new ZipDataCacheProvider(_algorithmHandlers.DataProvider)", span="132-132"];
m33_55 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label=initializeComplete, span="189-189"];
m33_34 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="initializeComplete = false", span="157-157"];
m33_40 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label=Exception, span="166-166"];
m33_45 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''JOB HANDLERS: '')", span="176-176"];
m33_36 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="errorMessage += String.Join('','', _algorithmHandlers.Setup.Errors)", span="160-160"];
m33_37 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Error(''Engine.Run(): '' + errorMessage)", span="161-161"];
m33_38 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.RuntimeError(errorMessage)", span="162-162"];
m33_41 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Error(err)", span="168-168"];
m33_42 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="169-169"];
m33_43 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.RuntimeError(runtimeMessage, err.StackTrace)", span="170-170"];
m33_46 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''         DataFeed:     '' + _algorithmHandlers.DataFeed.GetType().FullName)", span="177-177"];
m33_47 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''         Setup:        '' + _algorithmHandlers.Setup.GetType().FullName)", span="178-178"];
m33_48 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''         RealTime:     '' + _algorithmHandlers.RealTime.GetType().FullName)", span="179-179"];
m33_49 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''         Results:      '' + _algorithmHandlers.Results.GetType().FullName)", span="180-180"];
m33_50 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''         Transactions: '' + _algorithmHandlers.Transactions.GetType().FullName)", span="181-181"];
m33_56 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var startTime = DateTime.Now", span="192-192"];
m33_116 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.Exit()", span="363-363"];
m33_107 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="342-342"];
m33_62 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.Running)", span="221-221"];
m33_63 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadFeed = new Thread(_algorithmHandlers.DataFeed.Run) { IsBackground = true, Name = ''DataFeed Thread'' }", span="224-224"];
m33_64 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadTransactions = new Thread(_algorithmHandlers.Transactions.Run) { IsBackground = true, Name = ''Transaction Thread'' }", span="225-225"];
m33_66 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadFeed.Start()", span="229-229"];
m33_65 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadRealTime = new Thread(_algorithmHandlers.RealTime.Run) { IsBackground = true, Name = ''RealTime Thread'' }", span="226-226"];
m33_67 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadTransactions.Start()", span="230-230"];
m33_68 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="threadRealTime.Start()", span="231-231"];
m33_70 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var isolator = new Isolator()", span="239-239"];
m33_72 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="!complete", span="264-264"];
m33_73 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Error(''Engine.Main(): Failed to complete in time: '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F''))", span="266-266"];
m33_74 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="throw new Exception(''Failed to complete algorithm within '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F'')\r\n                                + '' seconds. Please make it run faster.'');", span="267-268"];
m33_77 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label=Exception, span="277-277"];
m33_80 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var charts = new Dictionary<string, Chart>(_algorithmHandlers.Results.Charts)", span="286-286"];
m33_81 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var orders = new Dictionary<int, Order>(_algorithmHandlers.Transactions.Orders)", span="287-287"];
m33_92 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="charts.ContainsKey(strategyEquityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey) &&\r\n                                charts.ContainsKey(benchmarkKey) &&\r\n                                charts[benchmarkKey].Series.ContainsKey(benchmarkKey)", span="307-311"];
m33_93 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="314-314"];
m33_94 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="315-315"];
m33_97 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var benchmark = charts[benchmarkKey].Series[benchmarkKey].Values", span="318-318"];
m33_82 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var holdings = new Dictionary<string, Holding>()", span="288-288"];
m33_83 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var banner = new Dictionary<string, string>()", span="289-289"];
m33_84 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var statisticsResults = new StatisticsResults()", span="290-290"];
m33_103 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="banner.Add(''Return'', netReturn.ToString(''P''))", span="332-332"];
m33_85 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var csvTransactionsFileName = Config.Get(''transaction-log'')", span="292-292"];
m33_86 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="!string.IsNullOrEmpty(csvTransactionsFileName)", span="293-293"];
m33_87 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="SaveListOfTrades(_algorithmHandlers.Transactions, csvTransactionsFileName)", span="295-295"];
m33_88 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="string strategyEquityKey = ''Strategy Equity''", span="301-301"];
m33_89 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="string equityKey = ''Equity''", span="302-302"];
m33_90 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="303-303"];
m33_91 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="string benchmarkKey = ''Benchmark''", span="304-304"];
m33_105 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label=Exception, span="336-336"];
m33_106 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Error(err, ''Error generating statistics packet'')", span="338-338"];
m33_111 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label=Exception, span="351-351"];
m33_113 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Transactions.Exit()", span="357-357"];
m33_112 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Error(err, ''Error sending analysis results'')", span="353-353"];
m33_114 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.DataFeed.Exit()", span="358-358"];
m33_115 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.RealTime.Exit()", span="359-359"];
m33_117 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="var ts = Stopwatch.StartNew()", span="366-366"];
m33_118 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="(_algorithmHandlers.Results.IsActive \r\n                    || (_algorithmHandlers.Transactions != null && _algorithmHandlers.Transactions.IsActive) \r\n                    || (_algorithmHandlers.DataFeed != null && _algorithmHandlers.DataFeed.IsActive)\r\n                    || (_algorithmHandlers.RealTime != null && _algorithmHandlers.RealTime.IsActive))\r\n                    && ts.ElapsedMilliseconds < 30*1000", span="367-371"];
m33_119 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Thread.Sleep(100)", span="373-373"];
m33_120 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="374-374"];
m33_128 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''Engine.Run(): Disconnecting from brokerage...'')", span="384-384"];
m33_131 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Setup != null", span="388-388"];
m33_132 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''Engine.Run(): Disposing of setup handler...'')", span="390-390"];
m33_134 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="393-393"];
m33_133 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Setup.Dispose()", span="391-391"];
m33_135 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label=Exception, span="395-395"];
m33_136 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Log.Error(err, ''Error running algorithm'')", span="397-397"];
m33_137 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", file="ToolMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.AlgorithmManager, string)", span="83-83"];
m33_186 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ToolMenuCommand.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m33_172 [cluster="System.Exception.Exception(string)", file="ToolMenuCommand.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m33_144 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89"];
m33_199 [cluster="System.IDisposable.Dispose()", file="ToolMenuCommand.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m33_151 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", span="60-60"];
m33_170 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="69-69"];
m33_173 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="417-417"];
m33_234 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="Log.Error(err, ''Breaking out of parent try catch:'')", span="419-419"];
m33_238 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="var message = ''Runtime Error: '' + err", span="423-423"];
m33_241 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.RuntimeError(message, err.StackTrace)", span="426-426"];
m33_242 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err)", span="427-427"];
m33_235 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="_algorithmHandlers.DataFeed != null", span="420-420"];
m33_236 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="_algorithmHandlers.DataFeed.Exit()", span="420-420"];
m33_237 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results != null", span="421-421"];
m33_239 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="424-424"];
m33_240 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="_algorithmHandlers.Results.LogMessage(message)", span="425-425"];
m33_243 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="ToolMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="417-417"];
m33_228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, System.Threading.CancellationToken)", span="135-135"];
m33_260 [cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="65-65"];
m33_265 [cluster="System.DateTime.ToString(string)", file="ToolMenuCommand.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m33_163 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="60-60"];
m33_263 [cluster="System.IO.Directory.CreateDirectory(string)", file="ToolMenuCommand.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m33_150 [cluster="QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="45-45"];
m33_141 [cluster="System.Threading.Thread.Start()", file="ToolMenuCommand.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m33_166 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="ToolMenuCommand.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m33_157 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265"];
m33_165 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219"];
m33_264 [cluster="System.IO.StreamWriter.StreamWriter(string)", file="ToolMenuCommand.cs", label="Entry System.IO.StreamWriter.StreamWriter(string)", span="0-0"];
m33_198 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="108-108"];
m33_192 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="77-77"];
m33_146 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374"];
m33_197 [cluster="System.Threading.Thread.Abort()", file="ToolMenuCommand.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m33_205 [cluster="string.Format(string, object)", file="ToolMenuCommand.cs", label="Entry string.Format(string, object)", span="0-0"];
m33_187 [cluster="double.ToString(string)", file="ToolMenuCommand.cs", label="Entry double.ToString(string)", span="0-0"];
m33_262 [cluster="System.IO.Directory.Exists(string)", file="ToolMenuCommand.cs", label="Entry System.IO.Directory.Exists(string)", span="0-0"];
m33_261 [cluster="System.IO.Path.GetDirectoryName(string)", file="ToolMenuCommand.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m33_196 [cluster="System.Threading.Thread.Sleep(int)", file="ToolMenuCommand.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m33_182 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292"];
m33_266 [cluster="System.IO.TextWriter.WriteLine(string)", file="ToolMenuCommand.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m33_195 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="ToolMenuCommand.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m33_193 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="64-64"];
m33_147 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="434-434"];
m33_245 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="ToolMenuCommand.cs", label="historyProvider.IsNullOrEmpty()", span="436-436"];
m33_247 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="ToolMenuCommand.cs", label="return Composer.Instance.GetExportedValueByTypeName<IHistoryProvider>(historyProvider);", span="440-440"];
m33_246 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="ToolMenuCommand.cs", label="historyProvider = Config.Get(''history-provider'', ''SubscriptionDataReaderHistoryProvider'')", span="438-438"];
m33_248 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="ToolMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="434-434"];
m33_249 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="ToolMenuCommand.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m33_140 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="ToolMenuCommand.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0"];
m33_233 [cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50"];
m33_175 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ToolMenuCommand.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m33_215 [cluster="QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", span="27-27"];
m33_161 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="446-446"];
m33_184 [cluster="QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", span="40-40"];
m33_0 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70"];
m33_1 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="ToolMenuCommand.cs", label="_liveMode = liveMode", span="72-72"];
m33_2 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="ToolMenuCommand.cs", label="_systemHandlers = systemHandlers", span="73-73"];
m33_3 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="ToolMenuCommand.cs", label="_algorithmHandlers = algorithmHandlers", span="74-74"];
m33_4 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="ToolMenuCommand.cs", label="Exit QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70"];
m33_142 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="80-80"];
m33_189 [cluster="string.Format(string, params object[])", file="ToolMenuCommand.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m33_218 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="434-434"];
m33_229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="665-665"];
m33_204 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="456-456"];
m33_167 [cluster="string.Format(string, object, object)", file="ToolMenuCommand.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m33_176 [cluster="QuantConnect.Statistics.StatisticsResults.StatisticsResults()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Statistics.StatisticsResults.StatisticsResults()", span="55-55"];
m33_174 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="ToolMenuCommand.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m33_152 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101"];
m33_178 [cluster="string.IsNullOrEmpty(string)", file="ToolMenuCommand.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m33_188 [cluster="long.ToString(string)", file="ToolMenuCommand.cs", label="Entry long.ToString(string)", span="0-0"];
m33_159 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m33_244 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="120-120"];
m33_183 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ToolMenuCommand.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m33_171 [cluster="System.TimeSpan.ToString(string)", file="ToolMenuCommand.cs", label="Entry System.TimeSpan.ToString(string)", span="0-0"];
m33_177 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m33_185 [cluster="decimal.ToString(string)", file="ToolMenuCommand.cs", label="Entry decimal.ToString(string)", span="0-0"];
m33_194 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="243-243"];
m33_156 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134"];
m33_190 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="ToolMenuCommand.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="212-212"];
m33_270 [file="ToolMenuCommand.cs", label="QuantConnect.Lean.Engine.Engine", span=""];
m33_271 [file="ToolMenuCommand.cs", label=algorithm, span=""];
m33_272 [file="ToolMenuCommand.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m33_273 [file="ToolMenuCommand.cs", label=algorithmManager, span=""];
m33_274 [file="ToolMenuCommand.cs", label=isolator, span=""];
m37_43 [cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202"];
m37_23 [cluster="System.Math.Abs(decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m37_19 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", span="62-62"];
m37_20 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m37_50 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", span="207-207"];
m37_69 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.IntradayVwap(string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.IntradayVwap(string)", span="204-204"];
m37_74 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.IntradayVwap(string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.IntradayVwap(string)", span="204-204"];
m37_39 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m37_89 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", span="256-256"];
m37_96 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var tick = input as Tick", span="258-258"];
m37_101 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var tradeBar = input as TradeBar", span="267-267"];
m37_97 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="tick?.TickType == TickType.Trade", span="260-260"];
m37_98 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="volume = tick.Quantity", span="262-262"];
m37_99 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="averagePrice = tick.LastPrice", span="263-263"];
m37_100 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return true;", span="264-264"];
m37_102 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="tradeBar?.IsFillForward == false", span="268-268"];
m37_103 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="volume = tradeBar.Volume", span="270-270"];
m37_104 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="averagePrice = (tradeBar.High + tradeBar.Low + tradeBar.Close) / 3m", span="271-271"];
m37_106 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="volume = 0", span="275-275"];
m37_105 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return true;", span="272-272"];
m37_107 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="averagePrice = 0", span="276-276"];
m37_108 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return false;", span="277-277"];
m37_109 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", span="256-256"];
m37_21 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", span="140-140"];
m37_52 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="unorderedQuantity > 0", span="143-143"];
m37_55 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", color=green, community=0, file="VolumeWeightedAveragePriceExecutionModel.cs", label="return true;", prediction=23, span="151-151"];
m37_59 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return false;", span="166-166"];
m37_58 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return true;", span="162-162"];
m37_60 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData, decimal)", span="140-140"];
m37_42 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m37_95 [cluster="Unk.nameof", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.nameof", span=""];
m37_27 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", span="169-169"];
m37_0 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", span="49-49"];
m37_1 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_targetsCollection.AddRange(targets)", span="52-52"];
m37_4 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="59-59"];
m37_13 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="algorithm.MarketOrder(data.Security.Symbol, Math.Sign(unorderedQuantity) * orderSize)", span="85-85"];
m37_14 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="90-90"];
m37_2 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label=_targetsCollection, span="54-54"];
m37_3 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var symbol = target.Symbol", span="56-56"];
m37_16 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_targetsCollection.Remove(target.Symbol)", span="93-93"];
m37_6 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="!_symbolData.TryGetValue(symbol, out data)", span="63-63"];
m37_5 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="SymbolData data", span="62-62"];
m37_8 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="PriceIsFavorable(data, unorderedQuantity)", span="75-75"];
m37_10 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var orderSize = Math.Min(maxOrderSize, Math.Abs(unorderedQuantity))", span="79-79"];
m37_7 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="data.Security.Price == 0m", span="69-69"];
m37_9 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var maxOrderSize = OrderSizing.PercentVolume(data.Security, MaximumOrderQuantityPercentVolume)", span="78-78"];
m37_11 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="orderSize -= orderSize % data.Security.SymbolProperties.LotSize", span="82-82"];
m37_12 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="orderSize != 0", span="83-83"];
m37_15 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="unorderedQuantity == 0m", span="91-91"];
m37_17 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", span="49-49"];
m37_71 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry lambda expression", span="182-182"];
m37_48 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="kvp.Value.ContainsMember(symbol)", span="134-134"];
m37_47 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry lambda expression", span="134-134"];
m37_49 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit lambda expression", span="134-134"];
m37_72 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="(BaseData) bd", span="182-182"];
m37_73 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit lambda expression", span="182-182"];
m37_25 [cluster="System.Math.Sign(decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Math.Sign(decimal)", span="0-0"];
m37_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m37_40 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", span="175-175"];
m37_61 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Security = security", span="177-177"];
m37_62 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, security.Resolution)", span="178-178"];
m37_63 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var name = algorithm.CreateIndicatorName(security.Symbol, ''VWAP'', security.Resolution)", span="179-179"];
m37_65 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="algorithm.RegisterIndicator(security.Symbol, VWAP, Consolidator, bd => (BaseData) bd)", span="182-182"];
m37_64 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="VWAP = new IntradayVwap(name)", span="180-180"];
m37_66 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", span="175-175"];
m37_91 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", span="248-248"];
m37_92 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="throw new NotImplementedException($''{nameof(IntradayVwap)}.{nameof(ComputeNextValue)} should never be invoked.'');", span="250-250"];
m37_93 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ComputeNextValue(QuantConnect.Data.BaseData)", span="248-248"];
m37_75 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", span="212-212"];
m37_76 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="decimal volume, averagePrice", span="214-214"];
m37_77 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="!TryGetVolumeAndAveragePrice(input, out volume, out averagePrice)", span="215-215"];
m37_79 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_lastDate != input.EndTime.Date", span="221-221"];
m37_82 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_lastDate = input.EndTime.Date", span="225-225"];
m37_86 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return input.Value;", span="235-235"];
m37_78 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return new IndicatorResult(0, IndicatorStatus.InvalidInput);", span="217-217"];
m37_83 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfVolume += volume", span="229-229"];
m37_84 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfPriceTimesVolume += averagePrice * volume", span="230-230"];
m37_80 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfVolume = 0m", span="223-223"];
m37_81 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfPriceTimesVolume = 0m", span="224-224"];
m37_85 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfVolume == 0m", span="232-232"];
m37_87 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return _sumOfPriceTimesVolume / _sumOfVolume;", span="238-238"];
m37_88 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", span="212-212"];
m37_28 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="103-103"];
m37_29 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="changes.AddedSecurities", span="105-105"];
m37_31 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_symbolData[added.Symbol] = new SymbolData(algorithm, added)", span="109-109"];
m37_32 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="changes.RemovedSecurities", span="113-113"];
m37_35 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="IsSafeToRemove(algorithm, removed.Symbol)", span="119-119"];
m37_37 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="algorithm.SubscriptionManager.RemoveConsolidator(removed.Symbol, data.Consolidator)", span="122-122"];
m37_30 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="!_symbolData.ContainsKey(added.Symbol)", span="107-107"];
m37_33 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="SymbolData data", span="116-116"];
m37_34 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_symbolData.TryGetValue(removed.Symbol, out data)", span="117-117"];
m37_36 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_symbolData.Remove(removed.Symbol)", span="121-121"];
m37_38 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="103-103"];
m37_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1270-1270"];
m37_46 [cluster="Unk.Any", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.Any", span=""];
m37_41 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="131-131"];
m37_44 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return !algorithm.UniverseManager.Any(kvp => kvp.Value.ContainsMember(symbol));", span="134-134"];
m37_45 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="131-131"];
m37_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1431-1431"];
m37_18 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="91-91"];
m37_90 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45"];
m37_24 [cluster="System.Math.Min(decimal, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m37_22 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.PercentVolume(QuantConnect.Securities.Security, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.PercentVolume(QuantConnect.Securities.Security, decimal)", span="33-33"];
m37_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464"];
m37_110 [file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", span=""];
m37_111 [file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Symbol", span=""];
m37_112 [file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", span=""];
m37_113 [file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", span=""];
m38_8 [cluster="Unk.IsFrozen", file="VsUtils.cs", label="Entry Unk.IsFrozen", span=""];
m38_7 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", file="VsUtils.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", span="43-43"];
m38_10 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", file="VsUtils.cs", label="return serviceProvider.GetService(typeof(SVsStatusbar)) as IVsStatusbar;", span="45-45"];
m38_11 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", file="VsUtils.cs", label="Exit QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", span="43-43"];
m38_13 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayDialogWindow(DialogWindow)", file="VsUtils.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.DisplayDialogWindow(DialogWindow)", span="48-48"];
m38_14 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayDialogWindow(DialogWindow)", file="VsUtils.cs", label="dialogWindow.HasMinimizeButton = false", span="50-50"];
m38_15 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayDialogWindow(DialogWindow)", file="VsUtils.cs", label="dialogWindow.HasMaximizeButton = false", span="51-51"];
m38_16 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayDialogWindow(DialogWindow)", file="VsUtils.cs", label="dialogWindow.ShowModal()", span="52-52"];
m38_17 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayDialogWindow(DialogWindow)", file="VsUtils.cs", label="Exit QuantConnect.VisualStudioPlugin.VsUtils.DisplayDialogWindow(DialogWindow)", span="48-48"];
m38_22 [cluster="Unk.ShowMessageBox", file="VsUtils.cs", label="Entry Unk.ShowMessageBox", span=""];
m38_9 [cluster="Unk.SetText", file="VsUtils.cs", label="Entry Unk.SetText", span=""];
m38_23 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.ShowErrorMessageBox(System.IServiceProvider, string, string)", file="VsUtils.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.ShowErrorMessageBox(System.IServiceProvider, string, string)", span="79-79"];
m38_24 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.ShowErrorMessageBox(System.IServiceProvider, string, string)", file="VsUtils.cs", label="VsShellUtilities.ShowMessageBox(\r\n                serviceProvider,\r\n                message,\r\n                title,\r\n                OLEMSGICON.OLEMSGICON_CRITICAL,\r\n                OLEMSGBUTTON.OLEMSGBUTTON_OK,\r\n                OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST\r\n            )", span="81-88"];
m38_25 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.ShowErrorMessageBox(System.IServiceProvider, string, string)", file="VsUtils.cs", label="Exit QuantConnect.VisualStudioPlugin.VsUtils.ShowErrorMessageBox(System.IServiceProvider, string, string)", span="79-79"];
m38_18 [cluster="Unk.ShowModal", file="VsUtils.cs", label="Entry Unk.ShowModal", span=""];
m38_19 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.ShowMessageBox(System.IServiceProvider, string, string)", file="VsUtils.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.ShowMessageBox(System.IServiceProvider, string, string)", span="61-61"];
m38_20 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.ShowMessageBox(System.IServiceProvider, string, string)", file="VsUtils.cs", label="VsShellUtilities.ShowMessageBox(\r\n                serviceProvider,\r\n                message,\r\n                title,\r\n                OLEMSGICON.OLEMSGICON_INFO,\r\n                OLEMSGBUTTON.OLEMSGBUTTON_OK,\r\n                OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST\r\n            )", span="63-70"];
m38_21 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.ShowMessageBox(System.IServiceProvider, string, string)", file="VsUtils.cs", label="Exit QuantConnect.VisualStudioPlugin.VsUtils.ShowMessageBox(System.IServiceProvider, string, string)", span="61-61"];
m38_0 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="VsUtils.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="32-32"];
m38_1 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="VsUtils.cs", label="var statusBar = GetStatusBar(serviceProvider)", span="34-34"];
m38_5 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", color=green, community=0, file="VsUtils.cs", label="statusBar.SetText(msg)", prediction=24, span="39-39"];
m38_2 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="VsUtils.cs", label="int frozen", span="35-35"];
m38_3 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="VsUtils.cs", label="statusBar.IsFrozen(out frozen)", span="36-36"];
m38_4 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="VsUtils.cs", label="frozen == 0", span="37-37"];
m38_6 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="VsUtils.cs", label="Exit QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="32-32"];
m38_12 [cluster="System.IServiceProvider.GetService(System.Type)", file="VsUtils.cs", label="Entry System.IServiceProvider.GetService(System.Type)", span="0-0"];
n24 -> n21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
n2 -> n4  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
n19 -> n21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
d1 -> d3  [color=green, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_20 -> m0_23  [color=darkseagreen4, key=1, label=credentials, style=dashed];
m0_38 -> m0_40  [color=darkseagreen4, key=1, label="System.IServiceProvider", style=dashed];
m1_14 -> m1_17  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.Credentials", style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_0 -> m1_9  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m1_16 -> m1_18  [color=darkseagreen4, key=1, label=api, style=dashed];
m1_23 -> m1_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_23 -> m1_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_23 -> m1_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m1_32 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.AuthorizationManager", style=dashed];
m1_32 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.AuthorizationManager", style=dashed];
m1_32 -> m1_12  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.AuthorizationManager", style=dashed];
m1_40 -> m1_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_24  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m1_40 -> m1_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m9_127 -> m9_127  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m9_85 -> m9_107  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_85 -> m9_108  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_85 -> m9_113  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_108 -> m9_127  [color=darkseagreen4, key=1, label=item, style=dashed];
m9_88 -> m9_90  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_88 -> m9_100  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_92 -> m9_94  [color=darkseagreen4, key=1, label=item, style=dashed];
m9_92 -> m9_96  [color=darkseagreen4, key=1, label=item, style=dashed];
m9_92 -> m9_98  [color=darkseagreen4, key=1, label=item, style=dashed];
m9_92 -> m9_100  [color=darkseagreen4, key=1, label=item, style=dashed];
m9_93 -> m9_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_95 -> m9_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_97 -> m9_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_99 -> m9_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_110 -> m9_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_0 -> m9_21  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_0 -> m9_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_0 -> m9_23  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_0 -> m9_24  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_0 -> m9_25  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_0 -> m9_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_2 -> m9_11  [color=darkseagreen4, key=1, label=req, style=dashed];
m9_2 -> m9_12  [color=darkseagreen4, key=1, label=req, style=dashed];
m9_3 -> m9_11  [color=darkseagreen4, key=1, label=payload, style=dashed];
m9_13 -> m9_17  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_20 -> m9_22  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m9_20 -> m9_23  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m9_63 -> m9_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_64 -> m9_69  [color=darkseagreen4, key=1, label=success, style=dashed];
m9_64 -> m9_70  [color=darkseagreen4, key=1, label=success, style=dashed];
m9_70 -> m9_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_160 -> m9_162  [color=darkseagreen4, key=1, label=copy, style=dashed];
m9_166 -> m9_168  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m9_167 -> m9_176  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m9_175 -> m9_176  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m9_171 -> m9_173  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_135 -> m9_144  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_135 -> m9_147  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_135 -> m9_149  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_135 -> m9_150  [color=darkseagreen4, key=1, label=list, style=dashed];
m9_138 -> m9_140  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_138 -> m9_141  [color=darkseagreen4, key=1, label=response, style=dashed];
m9_141 -> m9_143  [color=darkseagreen4, key=1, label=item, style=dashed];
m9_141 -> m9_144  [color=darkseagreen4, key=1, label=item, style=dashed];
m9_141 -> m9_145  [color=darkseagreen4, key=1, label=item, style=dashed];
m9_141 -> m9_147  [color=darkseagreen4, key=1, label=item, style=dashed];
m9_141 -> m9_149  [color=darkseagreen4, key=1, label=item, style=dashed];
m9_178 -> m9_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_17  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_18  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_25  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_67  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_79  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_80  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_87  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_161  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_178 -> m9_170  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m9_179 -> m9_127  [color=darkseagreen4, key=1, label=item, style=dashed];
m10_40 -> m10_151  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m10_146 -> m10_149  [color=darkseagreen4, key=1, label=seriesDict, style=dashed];
m10_148 -> m10_150  [color=darkseagreen4, key=1, label=pyDict, style=dashed];
m10_148 -> m10_151  [color=darkseagreen4, key=1, label=pyDict, style=dashed];
m10_38 -> m10_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Python.PandasData>", style=dashed];
m10_193 -> m10_193  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.List<double>>", style=dashed];
m10_190 -> m10_190  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.List<double>>", style=dashed];
m10_29 -> m10_82  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m10_29 -> m10_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m10_29 -> m10_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m10_88 -> m10_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_88 -> m10_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_108 -> m10_110  [color=darkseagreen4, key=1, label=bar, style=dashed];
m10_108 -> m10_111  [color=darkseagreen4, key=1, label=bar, style=dashed];
m10_108 -> m10_112  [color=darkseagreen4, key=1, label=bar, style=dashed];
m10_108 -> m10_113  [color=darkseagreen4, key=1, label=bar, style=dashed];
m10_139 -> m10_141  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_139 -> m10_143  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_114 -> m10_116  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m10_117 -> m10_119  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_120  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_121  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_122  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_123  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_124  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_125  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_130  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_131  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_132  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_133  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_117 -> m10_134  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_142 -> m10_142  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m10_52 -> m10_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>", style=dashed];
m10_52 -> m10_62  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>", style=dashed];
m10_55 -> m10_58  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m10_62 -> m10_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_62 -> m10_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_54 -> m10_61  [color=darkseagreen4, key=1, label=pyDict, style=dashed];
m10_54 -> m10_62  [color=darkseagreen4, key=1, label=pyDict, style=dashed];
m10_61 -> m10_61  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m10_56 -> m10_59  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_56 -> m10_61  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_58 -> m10_58  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m10_58 -> m10_60  [color=darkseagreen4, key=1, label=item, style=dashed];
m10_57 -> m10_60  [color=darkseagreen4, key=1, label=values, style=dashed];
m10_57 -> m10_61  [color=darkseagreen4, key=1, label=values, style=dashed];
m10_41 -> m10_43  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m10_42 -> m10_44  [color=darkseagreen4, key=1, label=sliceData, style=dashed];
m10_42 -> m10_46  [color=darkseagreen4, key=1, label=sliceData, style=dashed];
m10_42 -> m10_47  [color=darkseagreen4, key=1, label=sliceData, style=dashed];
m10_42 -> m10_50  [color=darkseagreen4, key=1, label=sliceData, style=dashed];
m10_43 -> m10_46  [color=darkseagreen4, key=1, label=datum, style=dashed];
m10_45 -> m10_47  [color=darkseagreen4, key=1, label=sliceData, style=dashed];
m10_45 -> m10_50  [color=darkseagreen4, key=1, label=sliceData, style=dashed];
m10_153 -> m10_165  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_153 -> m10_170  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_153 -> m10_172  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_153 -> m10_177  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m10_153 -> m10_193  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m10_154 -> m10_166  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_154 -> m10_186  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_175 -> m10_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_176 -> m10_193  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_177 -> m10_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_177 -> m10_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_164 -> m10_166  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_164 -> m10_168  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_168 -> m10_168  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_11 -> m10_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>", style=dashed];
m10_12 -> m10_38  [color=darkseagreen4, key=1, label=maxLevels, style=dashed];
m10_13 -> m10_17  [color=darkseagreen4, key=1, label=sliceDataDict, style=dashed];
m10_13 -> m10_22  [color=darkseagreen4, key=1, label=sliceDataDict, style=dashed];
m10_19 -> m10_38  [color=darkseagreen4, key=1, label=maxLevels, style=dashed];
m10_24 -> m10_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_18 -> m10_20  [color=darkseagreen4, key=1, label=value, style=dashed];
m10_15 -> m10_17  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m10_15 -> m10_20  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m10_195 -> m10_23  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_195 -> m10_38  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_195 -> m10_25  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_195 -> m10_49  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_195 -> m10_50  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_195 -> m10_61  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_195 -> m10_62  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_195 -> m10_78  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_196 -> m10_38  [color=darkseagreen4, key=1, label=maxLevels, style=dashed];
m10_197 -> m10_92  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_94  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_107  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_110  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_111  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_112  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_113  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_116  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_119  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_120  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_122  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_123  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_124  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_125  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_126  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_127  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_128  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_129  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_131  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_132  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_133  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_134  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_135  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_136  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_137  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_138  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_142  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_143  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_156  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_159  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_197 -> m10_177  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_199 -> m10_186  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_200 -> m10_193  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m10_201 -> m10_193  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_75 -> m11_83  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_75 -> m11_89  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_75 -> m11_92  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_75 -> m11_93  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_75 -> m11_95  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_79 -> m11_81  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_79 -> m11_82  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_85 -> m11_87  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_85 -> m11_88  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_91 -> m11_93  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_91 -> m11_94  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_77 -> m11_84  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_77 -> m11_90  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_101 -> m11_109  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_101 -> m11_115  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_101 -> m11_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_101 -> m11_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_101 -> m11_121  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_105 -> m11_107  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_105 -> m11_108  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_111 -> m11_113  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_111 -> m11_114  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_117 -> m11_119  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_117 -> m11_120  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_103 -> m11_110  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_103 -> m11_116  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_189 -> m11_203  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_202 -> m11_204  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_191 -> m11_193  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_191 -> m11_197  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_191 -> m11_201  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_191 -> m11_204  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_125 -> m11_133  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_125 -> m11_136  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_125 -> m11_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_125 -> m11_139  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_129 -> m11_131  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_129 -> m11_132  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_135 -> m11_137  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_135 -> m11_138  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_127 -> m11_134  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_127 -> m11_137  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_164 -> m11_178  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_177 -> m11_179  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_166 -> m11_168  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_166 -> m11_172  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_166 -> m11_176  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_166 -> m11_179  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_2 -> m11_7  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_2 -> m11_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_6 -> m11_8  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_6 -> m11_9  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_4 -> m11_8  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_22 -> m11_30  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_24 -> m11_28  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_145 -> m11_153  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_145 -> m11_156  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_145 -> m11_157  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_145 -> m11_159  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_149 -> m11_151  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_149 -> m11_152  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_155 -> m11_157  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_155 -> m11_158  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_147 -> m11_154  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_147 -> m11_157  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_34 -> m11_42  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_34 -> m11_45  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_34 -> m11_46  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_34 -> m11_48  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_38 -> m11_40  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_38 -> m11_41  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_44 -> m11_46  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_44 -> m11_47  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_36 -> m11_43  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_36 -> m11_46  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_56 -> m11_64  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_56 -> m11_67  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_56 -> m11_68  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_56 -> m11_70  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_60 -> m11_63  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_66 -> m11_68  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_66 -> m11_69  [color=darkseagreen4, key=1, label=fill, style=dashed];
m11_58 -> m11_65  [color=darkseagreen4, key=1, label=security, style=dashed];
m11_58 -> m11_68  [color=darkseagreen4, key=1, label=security, style=dashed];
m12_26 -> m12_28  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_29  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_30  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_31  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_32  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_33  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_34  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_35  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_36  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_37  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_38  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_41  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_26 -> m12_42  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_27 -> m12_29  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_30  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_31  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_32  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_33  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_34  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_35  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_36  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_37  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_38  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_39  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_40  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_41  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_27 -> m12_42  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_1 -> m12_3  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_1 -> m12_4  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_1 -> m12_5  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_1 -> m12_6  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_1 -> m12_7  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_1 -> m12_8  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_1 -> m12_9  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_1 -> m12_10  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_1 -> m12_11  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_1 -> m12_12  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_1 -> m12_13  [color=darkseagreen4, key=1, label=jObject, style=dashed];
m12_2 -> m12_4  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_5  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_6  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_7  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_8  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_9  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_10  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_11  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_12  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_13  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_14  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_15  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_16  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_2 -> m12_17  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_4 -> d3  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m13_12 -> m13_17  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_18  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_19  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_20  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_21  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_22  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_23  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_24  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_25  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_26  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_27  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_28  [color=green, key=1, label=insight, style=dashed];
m13_12 -> m13_29  [color=green, key=1, label=insight, style=dashed];
m13_15 -> m13_20  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m13_16 -> m13_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_14 -> m13_21  [color=green, key=1, label=deserialized, style=dashed];
m13_14 -> m13_17  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_18  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_19  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_20  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_22  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_23  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_24  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_25  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_26  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_27  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_28  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_14 -> m13_29  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m13_8 -> m13_10  [color=darkseagreen4, key=1, label="out QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m13_37 -> m13_39  [color=green, key=1, label=original, style=dashed];
m13_37 -> m13_40  [color=green, key=1, label=original, style=dashed];
m13_37 -> m13_48  [color=green, key=1, label=original, style=dashed];
m13_37 -> m13_41  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_42  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_43  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_44  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_45  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_46  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_47  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_49  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_50  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_51  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_52  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_37 -> m13_53  [color=darkseagreen4, key=1, label=original, style=dashed];
m13_38 -> m13_40  [color=green, key=1, label=copy, style=dashed];
m13_38 -> m13_48  [color=green, key=1, label=copy, style=dashed];
m13_38 -> m13_41  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_42  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_43  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_44  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_45  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_46  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_47  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_49  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_50  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_51  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_52  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_38 -> m13_53  [color=darkseagreen4, key=1, label=copy, style=dashed];
m13_73 -> m13_75  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m13_1 -> m13_4  [color=darkseagreen4, key=1, label=one, style=dashed];
m13_1 -> m13_3  [color=darkseagreen4, key=1, label=one, style=dashed];
m13_2 -> m13_5  [color=darkseagreen4, key=1, label=two, style=dashed];
m13_85 -> m13_20  [color=darkseagreen4, key=1, label=splitFactor, style=dashed];
m14_113 -> m14_123  [color=darkseagreen4, key=1, label=types, style=dashed];
m14_6 -> m14_8  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, string>", style=dashed];
m14_16 -> m14_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_16 -> m14_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_16 -> m14_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_24 -> m14_26  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_135 -> m14_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_135 -> m14_138  [color=darkseagreen4, key=1, label=complete, style=dashed];
m14_135 -> m14_140  [color=darkseagreen4, key=1, label=success, style=dashed];
m14_136 -> m14_141  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_136 -> m14_140  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_137 -> m14_141  [color=darkseagreen4, key=1, label="out string", style=dashed];
m14_139 -> m14_141  [color=darkseagreen4, key=1, label="out string", style=dashed];
m14_53 -> m14_63  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m14_51 -> m14_98  [color=darkseagreen4, key=1, label="out string", style=dashed];
m14_56 -> m14_60  [color=darkseagreen4, key=1, label=mdbFilename, style=dashed];
m14_59 -> m14_63  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m14_61 -> m14_63  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m14_73 -> m14_75  [color=darkseagreen4, key=1, label=types, style=dashed];
m14_73 -> m14_79  [color=darkseagreen4, key=1, label=types, style=dashed];
m14_73 -> m14_81  [color=darkseagreen4, key=1, label=types, style=dashed];
m14_85 -> m14_98  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_85 -> m14_87  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_70 -> m14_98  [color=darkseagreen4, key=1, label="out string", style=dashed];
m14_76 -> m14_98  [color=darkseagreen4, key=1, label="out string", style=dashed];
m14_82 -> m14_98  [color=darkseagreen4, key=1, label="out string", style=dashed];
m14_92 -> m14_98  [color=darkseagreen4, key=1, label="out string", style=dashed];
m14_96 -> m14_98  [color=darkseagreen4, key=1, label="out string", style=dashed];
m14_28 -> m14_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_35 -> m14_37  [color=green, key=1, label=pythonFile, style=dashed];
m14_38 -> m14_45  [color=green, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_42 -> m14_45  [color=darkseagreen4, key=1, label="out string", style=dashed];
m14_0 -> m14_3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m14_153 -> m14_23  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m14_153 -> m14_21  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m14_153 -> m14_24  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m14_153 -> m14_148  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m14_153 -> m14_149  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m15_131 -> m15_136  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m15_131 -> m15_140  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m15_131 -> m15_141  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m15_131 -> m15_145  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>", style=dashed];
m15_133 -> m15_137  [color=darkseagreen4, key=1, label=pyRequests, style=dashed];
m15_137 -> m15_139  [color=darkseagreen4, key=1, label=pyRequest, style=dashed];
m15_240 -> m15_245  [color=darkseagreen4, key=1, label="out T", style=dashed];
m15_241 -> m15_244  [color=darkseagreen4, key=1, label=type, style=dashed];
m15_243 -> m15_245  [color=darkseagreen4, key=1, label="out T", style=dashed];
m15_99 -> m15_101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m15_0 -> m15_8  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m15_7 -> m15_10  [color=darkseagreen4, key=1, label=moduleName, style=dashed];
m15_160 -> m15_162  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m15_109 -> m15_112  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m15_109 -> m15_113  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m15_165 -> m15_167  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m15_127 -> m15_129  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_170 -> m15_172  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m15_235 -> m15_237  [color=darkseagreen4, key=1, label=code, style=dashed];
m15_252 -> m15_14  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_34  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_38  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_42  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_46  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_50  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_54  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_58  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_62  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_66  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_70  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_74  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_78  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_83  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_87  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_91  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_96  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_101  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_106  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_111  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_112  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_113  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_119  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_124  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_129  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_139  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_145  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_157  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_162  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_167  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_172  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_176  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_180  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_184  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_188  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_192  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_196  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_200  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_204  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_208  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_212  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_216  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_220  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_224  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_228  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_232  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m15_252 -> m15_249  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", style=dashed];
m16_18 -> m16_28  [color=darkseagreen4, key=1, label=universeSettings, style=dashed];
m16_19 -> m16_28  [color=darkseagreen4, key=1, label=securityInitializer, style=dashed];
m16_22 -> m16_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_22 -> m16_28  [color=darkseagreen4, key=1, label=grp, style=dashed];
m16_4 -> m16_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
m16_39 -> m16_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel", style=dashed];
m16_39 -> m16_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Selection.ManualUniverseSelectionModel", style=dashed];
m18_11 -> m18_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_28 -> m18_31  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_0 -> m18_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_0 -> m18_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_9 -> m18_49  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m18_52 -> m18_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.FxcmVolume", style=dashed];
m18_52 -> m18_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.FxcmVolume", style=dashed];
m18_52 -> m18_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.FxcmVolume", style=dashed];
m18_52 -> m18_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.FxcmVolume", style=dashed];
m19_9 -> m19_114  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m19_9 -> m19_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m19_9 -> m19_40  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m19_9 -> m19_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m19_9 -> m19_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m19_9 -> m19_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m19_9 -> m19_68  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m19_9 -> m19_71  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m19_13 -> m19_16  [color=darkseagreen4, key=1, label=selectSymbolsResult, style=dashed];
m19_40 -> m19_42  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_40 -> m19_43  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_40 -> m19_121  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_40 -> m19_45  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_40 -> m19_46  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_40 -> m19_47  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_51 -> m19_53  [color=darkseagreen4, key=1, label=security, style=dashed];
m19_51 -> m19_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m19_53 -> m19_55  [color=darkseagreen4, key=1, label=request, style=dashed];
m19_53 -> m19_57  [color=darkseagreen4, key=1, label=request, style=dashed];
m19_53 -> m19_58  [color=darkseagreen4, key=1, label=request, style=dashed];
m19_53 -> m19_59  [color=darkseagreen4, key=1, label=request, style=dashed];
m19_14 -> m19_26  [color=darkseagreen4, key=1, label=fineCollection, style=dashed];
m19_24 -> m19_26  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m19_31 -> m19_41  [color=darkseagreen4, key=1, label=selections, style=dashed];
m19_31 -> m19_48  [color=darkseagreen4, key=1, label=selections, style=dashed];
m19_32 -> m19_64  [color=darkseagreen4, key=1, label=additions, style=dashed];
m19_32 -> m19_65  [color=darkseagreen4, key=1, label=additions, style=dashed];
m19_48 -> m19_50  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m19_33 -> m19_38  [color=darkseagreen4, key=1, label=removals, style=dashed];
m19_33 -> m19_43  [color=darkseagreen4, key=1, label=removals, style=dashed];
m19_33 -> m19_46  [color=darkseagreen4, key=1, label=removals, style=dashed];
m19_69 -> m19_71  [color=darkseagreen4, key=1, label=securityChanges, style=dashed];
m19_69 -> m19_72  [color=darkseagreen4, key=1, label=securityChanges, style=dashed];
m19_34 -> m19_38  [color=darkseagreen4, key=1, label=algorithmEndDateUtc, style=dashed];
m19_34 -> m19_46  [color=darkseagreen4, key=1, label=algorithmEndDateUtc, style=dashed];
m19_34 -> m19_53  [color=darkseagreen4, key=1, label=algorithmEndDateUtc, style=dashed];
m19_34 -> m19_68  [color=darkseagreen4, key=1, label=algorithmEndDateUtc, style=dashed];
m19_35 -> m19_117  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_35 -> m19_37  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_35 -> m19_38  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_35 -> m19_39  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_36 -> m19_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_44 -> m19_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_50 -> m19_53  [color=darkseagreen4, key=1, label=security, style=dashed];
m19_50 -> m19_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m19_52 -> m19_61  [color=darkseagreen4, key=1, label=addedSubscription, style=dashed];
m19_55 -> m19_57  [color=darkseagreen4, key=1, label=reason, style=dashed];
m19_60 -> m19_61  [color=darkseagreen4, key=1, label=addedSubscription, style=dashed];
m19_95 -> m19_124  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m19_95 -> m19_125  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m19_95 -> m19_127  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m19_95 -> m19_129  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m19_125 -> m19_128  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m19_0 -> m19_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m19_136 -> m19_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_136 -> m19_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_136 -> m19_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_136 -> m19_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_136 -> m19_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_136 -> m19_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_136 -> m19_55  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_136 -> m19_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_136 -> m19_58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_136 -> m19_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_136 -> m19_128  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", style=dashed];
m19_137 -> m19_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
m19_138 -> m19_114  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m19_139 -> m19_117  [color=darkseagreen4, key=1, label=member, style=dashed];
m19_140 -> m19_121  [color=darkseagreen4, key=1, label=member, style=dashed];
m24_8 -> m24_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m24_21 -> m24_23  [color=darkseagreen4, key=1, label=projectId, style=dashed];
m24_0 -> m24_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<System.Tuple<int, string>>", style=dashed];
m24_0 -> m24_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_50 -> m24_2  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m24_50 -> m24_3  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m24_50 -> m24_23  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m24_50 -> m24_26  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m24_50 -> m24_28  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m24_51 -> m24_48  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem", style=dashed];
m25_8 -> m25_5  [color=green, key=1, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", style=dashed];
m26_17 -> m26_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m26_17 -> m26_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m26_17 -> m26_14  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m27_3 -> m27_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_15 -> m27_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m31_10 -> m31_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m31_21 -> m31_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm", style=dashed];
m31_21 -> m31_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm", style=dashed];
m31_21 -> m31_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm", style=dashed];
m31_21 -> m31_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm", style=dashed];
m31_21 -> m31_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm", style=dashed];
m31_21 -> m31_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.LimitFillRegressionAlgorithm", style=dashed];
m33_251 -> m33_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_251 -> m33_256  [color=darkseagreen4, key=1, label=orders, style=dashed];
m33_252 -> m33_254  [color=darkseagreen4, key=1, label=path, style=dashed];
m33_255 -> m33_258  [color=darkseagreen4, key=1, label=writer, style=dashed];
m33_200 -> m33_202  [color=darkseagreen4, key=1, label=int, style=dashed];
m33_206 -> m33_208  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m33_206 -> m33_209  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m33_5 -> m33_13  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_14  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_22  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_28  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_39  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_44  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_53  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_57  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_60  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_69  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_220  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_76  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_78  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_109  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_5 -> m33_110  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_7 -> m33_220  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m33_7 -> m33_224  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m33_18 -> m33_22  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_23  [color=green, key=1, label=algorithm, style=dashed];
m33_18 -> m33_28  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_201  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_32  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_33  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_51  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_52  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_57  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_58  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_59  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_60  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_207  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_208  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_211  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_213  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_220  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_75  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_76  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_100  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_101  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_102  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_104  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_18 -> m33_110  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_21 -> m33_26  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m33_21 -> m33_54  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m33_21 -> m33_59  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m33_21 -> m33_127  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m33_21 -> m33_129  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m33_21 -> m33_130  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m33_24 -> m33_26  [color=darkseagreen4, key=1, label=historyProvider, style=dashed];
m33_24 -> m33_28  [color=darkseagreen4, key=1, label=historyProvider, style=dashed];
m33_28 -> m33_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_31 -> m33_33  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m33_31 -> m33_55  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m33_71 -> m33_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_9 -> m33_121  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m33_9 -> m33_122  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m33_10 -> m33_123  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m33_10 -> m33_124  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m33_15 -> m33_125  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m33_15 -> m33_126  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m33_61 -> m33_207  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m33_61 -> m33_208  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m33_61 -> m33_209  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m33_96 -> m33_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_98 -> m33_110  [color=darkseagreen4, key=1, label=statisticsResults, style=dashed];
m33_99 -> m33_103  [color=darkseagreen4, key=1, label=netReturn, style=dashed];
m33_34 -> m33_55  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m33_36 -> m33_38  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m33_36 -> m33_39  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m33_42 -> m33_44  [color=darkseagreen4, key=1, label=runtimeMessage, style=dashed];
m33_107 -> m33_109  [color=darkseagreen4, key=1, label=totalSeconds, style=dashed];
m33_63 -> m33_66  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m33_63 -> m33_121  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m33_63 -> m33_122  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m33_64 -> m33_67  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m33_64 -> m33_123  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m33_64 -> m33_124  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m33_65 -> m33_68  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m33_70 -> m33_220  [color=darkseagreen4, key=1, label=isolator, style=dashed];
m33_80 -> m33_92  [color=darkseagreen4, key=1, label=charts, style=dashed];
m33_81 -> m33_110  [color=darkseagreen4, key=1, label=orders, style=dashed];
m33_82 -> m33_110  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m33_83 -> m33_100  [color=darkseagreen4, key=1, label=banner, style=dashed];
m33_83 -> m33_101  [color=darkseagreen4, key=1, label=banner, style=dashed];
m33_83 -> m33_102  [color=darkseagreen4, key=1, label=banner, style=dashed];
m33_83 -> m33_103  [color=darkseagreen4, key=1, label=banner, style=dashed];
m33_83 -> m33_104  [color=darkseagreen4, key=1, label=banner, style=dashed];
m33_83 -> m33_110  [color=darkseagreen4, key=1, label=banner, style=dashed];
m33_84 -> m33_110  [color=darkseagreen4, key=1, label=statisticsResults, style=dashed];
m33_85 -> m33_87  [color=darkseagreen4, key=1, label=csvTransactionsFileName, style=dashed];
m33_88 -> m33_92  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m33_89 -> m33_92  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m33_90 -> m33_92  [color=darkseagreen4, key=1, label=dailyPerformanceKey, style=dashed];
m33_173 -> m33_241  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m33_173 -> m33_242  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_238 -> m33_240  [color=darkseagreen4, key=1, label=message, style=dashed];
m33_238 -> m33_241  [color=darkseagreen4, key=1, label=message, style=dashed];
m33_238 -> m33_242  [color=darkseagreen4, key=1, label=message, style=dashed];
m33_147 -> m33_247  [color=darkseagreen4, key=1, label=string, style=dashed];
m33_270 -> m33_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_23  [color=green, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_202  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_38  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_59  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_220  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_76  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_109  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_110  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_113  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_114  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_116  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_131  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_236  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_237  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_240  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_241  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_270 -> m33_242  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m33_271 -> m33_201  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_271 -> m33_207  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_271 -> m33_208  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_271 -> m33_211  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_271 -> m33_213  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_271 -> m33_220  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m33_272 -> m33_220  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m33_273 -> m33_220  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m33_273 -> m33_224  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m33_274 -> m33_220  [color=darkseagreen4, key=1, label=isolator, style=dashed];
m37_106 -> m37_109  [color=darkseagreen4, key=1, label="out decimal", style=dashed];
m37_107 -> m37_109  [color=darkseagreen4, key=1, label="out decimal", style=dashed];
m37_21 -> m37_52  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m37_0 -> m37_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m37_4 -> m37_8  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m37_4 -> m37_13  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m37_2 -> m37_16  [color=darkseagreen4, key=1, label=target, style=dashed];
m37_3 -> m37_6  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m37_6 -> m37_8  [color=darkseagreen4, key=1, label=data, style=dashed];
m37_6 -> m37_13  [color=darkseagreen4, key=1, label=data, style=dashed];
m37_11 -> m37_13  [color=darkseagreen4, key=1, label=orderSize, style=dashed];
m37_48 -> m37_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m37_40 -> m37_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m37_65 -> m37_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_75 -> m37_77  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m37_75 -> m37_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m37_75 -> m37_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m37_28 -> m37_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m37_28 -> m37_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m37_28 -> m37_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m37_32 -> m37_34  [color=darkseagreen4, key=1, label=removed, style=dashed];
m37_32 -> m37_35  [color=darkseagreen4, key=1, label=removed, style=dashed];
m37_32 -> m37_36  [color=darkseagreen4, key=1, label=removed, style=dashed];
m37_32 -> m37_37  [color=darkseagreen4, key=1, label=removed, style=dashed];
m37_34 -> m37_37  [color=darkseagreen4, key=1, label=data, style=dashed];
m37_41 -> m37_48  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_44 -> m37_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_110 -> m37_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m37_110 -> m37_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m37_110 -> m37_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m37_110 -> m37_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m37_110 -> m37_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m37_110 -> m37_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m37_110 -> m37_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m37_110 -> m37_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m37_110 -> m37_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m37_111 -> m37_48  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_112 -> m37_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m37_113 -> m37_77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m37_113 -> m37_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m37_113 -> m37_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m37_113 -> m37_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m38_0 -> m38_5  [color=green, key=1, label=string, style=dashed];
m38_1 -> m38_3  [color=darkseagreen4, key=1, label=statusBar, style=dashed];
m38_1 -> m38_5  [color=green, key=1, label=statusBar, style=dashed];
}
