digraph  {
d44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, label="1: Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="204-204"];
d10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="137-137"];
d34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.SubscriptionManager.Subscriptions", span="178-178"];
d45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, label="1: Stream(algorithm, feed, results, token)", span="205-205"];
d262 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
d613 [label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
d216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnEndOfTimeStep()", span="621-621"];
d46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, label="0: _currentTimeStepTime = DateTime.UtcNow", span="208-208"];
d217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.MinValue", span="626-626"];
d263 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="712-712"];
d48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, label="0: Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="213-213"];
d50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="220-220"];
d53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var time = timeSlice.Time", span="227-227"];
d54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_dataPointCount += timeSlice.DataPointCount", span="228-228"];
d71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Count != 0", span="282-282"];
d73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="286-286"];
d74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Keys", span="288-288"];
d77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="298-298"];
d78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges.AddedSecurities", span="300-300"];
d81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecuritiesUpdateData", span="311-311"];
d92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="realtime.SetTime(timeSlice.Time)", span="338-338"];
d100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="358-358"];
d128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="422-422"];
d129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="426-426"];
d130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnFrameworkSecuritiesChanged(timeSlice.SecurityChanges)", span="427-427"];
d136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Dividends.Values", span="439-439"];
d139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Splits.Values", span="446-446"];
d151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.ConsolidatorUpdateData", span="478-478"];
d164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.CustomData", span="507-507"];
d175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="537-537"];
d176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Dividends)](algorithm, timeSlice.Slice.Dividends)", span="539-539"];
d177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="541-541"];
d178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="543-543"];
d179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="545-545"];
d180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="547-547"];
d186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistings)", span="559-559"];
d187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="HandleSplitSymbols(timeSlice.Slice.Splits, splitWarnings)", span="562-562"];
d188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.QuoteBars.Count > 0", span="570-570"];
d189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.QuoteBars.Where(x => x.Key.ID.SecurityType == SecurityType.Forex)", span="572-572"];
d190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Bars.Add(tradeBar.Value.Collapse())", span="574-574"];
d191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="577-577"];
d192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="577-577"];
d193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataQuoteBars && timeSlice.Slice.QuoteBars.Count > 0", span="578-578"];
d194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(QuoteBars)](algorithm, timeSlice.Slice.QuoteBars)", span="578-578"];
d195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataOptionChains && timeSlice.Slice.OptionChains.Count > 0", span="579-579"];
d196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(OptionChains)](algorithm, timeSlice.Slice.OptionChains)", span="579-579"];
d197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="hasOnDataTicks && timeSlice.Slice.Ticks.Count > 0", span="580-580"];
d198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Ticks)](algorithm, timeSlice.Slice.Ticks)", span="580-580"];
d204 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.HasData", span="592-592"];
d205 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnData(timeSlice.Slice)", span="595-595"];
d206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnFrameworkData(timeSlice.Slice)", span="596-596"];
d47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", color=green, community=0, label="0: _algorithm.Status != AlgorithmStatus.Running", span="211-211"];
d264 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d265 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
d49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="token.IsCancellationRequested", span="218-218"];
d252 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="943-943"];
d267 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="1120-1120"];
d286 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="986-986"];
d287 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1060-1060"];
d310 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="958-958"];
d248 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", span="137-137"];
d11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_dataPointCount = 0", span="140-140"];
d12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm = algorithm", span="141-141"];
d13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="142-142"];
d14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="143-143"];
d22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithmId = job.AlgorithmId", span="154-154"];
d24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_previousTime = algorithm.StartDate.Date", span="156-156"];
d25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="161-161"];
d26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataQuoteBars = AddMethodInvoker<QuoteBars>(algorithm, methodInvokers)", span="162-162"];
d27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataOptionChains = AddMethodInvoker<OptionChains>(algorithm, methodInvokers)", span="163-163"];
d28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="164-164"];
d29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="167-167"];
d30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="168-168"];
d31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="169-169"];
d32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="170-170"];
d33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="173-175"];
d331 [cluster="lambda expression", label="x.DeclaringType == algorithm.GetType()", span="175-175"];
d36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="184-184"];
d39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="192-192"];
d52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="leanManager.Update()", span="225-225"];
d57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, _previousTime.Date)", span="238-238"];
d58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="241-241"];
d60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, 0)", span="246-246"];
d61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="250-250"];
d62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="252-252"];
d66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SystemDebugMessage(logMessage)", span="259-259"];
d67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, time)", span="266-266"];
d69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="realtime.ScanPastEvents(time)", span="276-276"];
d70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.SetDateTime(time)", span="280-280"];
d75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="291-291"];
d79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="!algorithm.Securities.ContainsKey(security.Symbol)", span="302-302"];
d80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Securities.Add(security)", span="305-305"];
d85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.TradeBuilder.SetMarketPrice(security.Symbol, security.Price)", span="320-320"];
d86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.CashBook", span="324-324"];
d91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="alphas.ProcessSynchronousEvents()", span="335-335"];
d93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="341-341"];
d94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="ProcessDelistedSymbols(algorithm, delistings)", span="344-344"];
d95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="ProcessSplitSymbols(algorithm, splitWarnings)", span="347-347"];
d96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Status == AlgorithmStatus.Stopped", span="350-350"];
d98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError != null", span="355-355"];
d103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var marginCallOrders = algorithm.Portfolio.MarginCallModel.GetMarginCallOrders(out issueMarginCallWarning)", span="367-367"];
d106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCall(marginCallOrders)", span="374-374"];
d108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="379-379"];
d110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="382-382"];
d112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="387-387"];
d118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCallWarning()", span="399-399"];
d120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="403-403"];
d126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="416-416"];
d132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="431-431"];
d137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Debug($''AlgorithmManager.Run(): {algorithm.Time}: Applying Dividend for {dividend.Symbol}'')", span="441-441"];
d138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplyDividend(dividend)", span="442-442"];
d141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Debug($''AlgorithmManager.Run(): {algorithm.Time}: Applying Split for {split.Symbol}'')", span="456-456"];
d142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplySplit(split)", span="457-457"];
d143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_liveMode || algorithm.Securities[split.Symbol].DataNormalizationMode == DataNormalizationMode.Raw", span="459-459"];
d144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="462-462"];
d145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="463-463"];
d147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="468-468"];
d160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="500-500"];
d169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvoker(algorithm, dataPoint)", span="521-521"];
d171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="527-527"];
d182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="552-552"];
d200 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="584-584"];
d208 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="601-601"];
d212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="609-609"];
d214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SetAlphaRuntimeStatistics(alphas.RuntimeStatistics)", span="615-615"];
d215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents()", span="618-618"];
d219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.OnEndOfAlgorithm()", span="632-632"];
d222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="637-637"];
d225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="alphas.ProcessSynchronousEvents()", span="643-643"];
d226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SetAlphaRuntimeStatistics(alphas.RuntimeStatistics)", span="646-646"];
d227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents(forceProcess: true)", span="649-649"];
d230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="algorithm.Liquidate()", span="655-655"];
d231 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Liquidated'')", span="656-656"];
d232 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Liquidated)", span="657-657"];
d235 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Stopped'')", span="664-664"];
d236 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Stopped)", span="665-665"];
d239 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="672-672"];
d240 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Deleted)", span="673-673"];
d241 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.Completed)", span="677-677"];
d242 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SampleRange(algorithm.GetChartUpdates())", span="680-680"];
d243 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="681-681"];
d244 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, backtestMode ? _previousTime.Date : _previousTime)", span="682-682"];
d246 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime, 0m)", span="687-687"];
d247 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(backtestMode ? _previousTime.Date : _previousTime,\r\n                    Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="691-692"];
d37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers.ContainsKey(config.Type)", span="187-187"];
d43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="198-198"];
d35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="config.IsCustomData", span="181-181"];
d42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="genericMethod != null", span="196-196"];
d65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(logMessage)", span="258-258"];
d97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="352-352"];
d218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="629-629"];
d229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="654-654"];
d234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="663-663"];
d238 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="671-671"];
d374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="769-769"];
d415 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="849-849"];
d431 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="892-892"];
d494 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Log.Trace(''AlgorithmManager.ProcessVolatilityHistoryRequirements(): Updating volatility models with historical data...'')", span="909-909"];
d519 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.Value)", span="968-968"];
d520 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.Value)", span="973-973"];
d523 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Log.Trace(''AlgorithmManager.Run(): '' + cancelledOrder)", span="977-977"];
d557 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Log.Trace($''AlgorithmManager.Run() Security split occurred: {split}'')", span="1044-1044"];
d558 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Log.Trace($''AlgorithmManager.Run() Security split warning: {split}'')", span="1048-1048"];
d1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return (''Algorithm took longer than '' +\r\n                            _timeLoopMaximum.TotalMinutes.ToString() +\r\n                            '' minutes on a single time loop.'');\r\n                }\r\n\r\n                return null;\r\n            }", span="110-120"];
d5 [cluster="lambda expression", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="112-112"];
d6 [cluster="lambda expression", label="return (''Algorithm took longer than '' +\r\n                            _timeLoopMaximum.TotalMinutes.ToString() +\r\n                            '' minutes on a single time loop.'');", span="114-116"];
d2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="_liveMode = liveMode", span="121-121"];
d23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.Running", span="155-155"];
d40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="193-193"];
d56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_previousTime.Date != time.Date", span="236-236"];
d99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="357-357"];
d101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="363-363"];
d113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="388-388"];
d121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="404-404"];
d125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="414-414"];
d133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="432-432"];
d148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="469-469"];
d161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="501-501"];
d172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="528-528"];
d183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="553-553"];
d201 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="585-585"];
d209 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="602-602"];
d213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_previousTime = time", span="612-612"];
d221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="636-636"];
d228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="652-652"];
d233 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Stopped", span="661-661"];
d237 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Deleted", span="669-669"];
d344 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label=_lock, span="701-701"];
d346 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="_algorithm.Status = state", span="707-707"];
d352 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ProcessVolatilityHistoryRequirements(algorithm)", span="721-721"];
d403 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="825-825"];
d419 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="858-858"];
d602 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="1130-1130"];
d317 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfTimeStep()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfTimeStep()", span="414-414"];
d438 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="907-907"];
d437 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="712-712"];
d348 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="bool setStartTime = false", span="714-714"];
d399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield break;", span="817-817"];
d409 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="836-836"];
d436 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="903-903"];
d349 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var timeZone = algorithm.TimeZone", span="715-715"];
d350 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var history = algorithm.HistoryProvider", span="716-716"];
d351 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode", span="719-719"];
d354 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="726-726"];
d357 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="731-734"];
d360 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="741-741"];
d364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.IsInternalFeed()", span="746-746"];
d379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var security = algorithm.Securities[symbol]", span="782-782"];
d388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="config = algorithm.SubscriptionManager.Subscriptions.FirstOrDefault(\r\n                                    subscription => subscription.Symbol == symbol && dataType.IsAssignableFrom(subscription.Type))", span="793-794"];
d395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="811-811"];
d398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="816-816"];
d404 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm warming up...'')", span="826-826"];
d408 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="834-834"];
d411 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!algorithm.LiveMode || historyRequests.Count == 0", span="843-843"];
d412 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="845-845"];
d414 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="848-848"];
d416 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=feed, span="853-853"];
d420 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="860-860"];
d424 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="871-871"];
d429 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="890-890"];
d430 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="891-891"];
d435 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="900-900"];
d51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="221-221"];
d124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="nextMarginCallTime = time + marginCallFrequency", span="410-410"];
d127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="nextSettlementScanTime = time + settlementScanFrequency", span="418-418"];
d157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var localTime = time.ConvertFromUtc(update.Target.ExchangeTimeZone)", span="493-493"];
d55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=backtestMode, span="233-233"];
d72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=hasOnDataSymbolChangedEvents, span="284-284"];
d15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="144-144"];
d274 [cluster="Unk.]", label="Entry Unk.]", span=""];
d334 [cluster="lambda expression", label="x.Status.IsOpen() && x.Symbol == symbol", span="291-291"];
d82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var security = update.Target", span="313-313"];
d83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.Data", span="314-314"];
d284 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53"];
d296 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="402-402"];
d131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="429-429"];
d297 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="408-408"];
d140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="split.Type != SplitType.SplitOccurred", span="451-451"];
d338 [cluster="lambda expression", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="462-462"];
d153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=consolidators, span="481-481"];
d152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var consolidators = update.Target.Consolidators", span="480-480"];
d159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="498-498"];
d154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.Data", span="483-483"];
d155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="EndTimeIsInNativeResolution(update.Target, dataPoint.EndTime)", span="486-486"];
d166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="!methodInvokers.TryGetValue(update.DataType, out methodInvoker)", span="510-510"];
d167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.Data", span="517-517"];
d165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="MethodInvoker methodInvoker", span="509-509"];
d168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="update.DataType.IsInstanceOfType(dataPoint)", span="519-519"];
d181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="550-550"];
d20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var delistings = new List<Delisting>()", span="150-150"];
d21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var splitWarnings = new List<Split>()", span="151-151"];
d311 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1038-1038"];
d255 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d340 [cluster="lambda expression", label="Entry lambda expression", span="572-572"];
d312 [cluster="Unk.Collapse", label="Entry Unk.Collapse", span=""];
d261 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
d199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="582-582"];
d207 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="599-599"];
d313 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="390-390"];
d314 [cluster="QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnFrameworkData(QuantConnect.Data.Slice)", span="396-396"];
d115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="390-390"];
d122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="405-405"];
d134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="433-433"];
d149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="470-470"];
d162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="502-502"];
d173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="529-529"];
d184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="554-554"];
d202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="586-586"];
d210 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="603-603"];
d223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="638-638"];
d514 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="943-943"];
d509 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="945-945"];
d511 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="948-948"];
d105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var executingMarginCall = false", span="370-370"];
d604 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="1120-1120"];
d599 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="1125-1125"];
d601 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="algorithm.RunTimeError = err", span="1129-1129"];
d548 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="986-986"];
d529 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var i = delistings.Count - 1", span="988-988"];
d531 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var security = algorithm.Securities[delistings[i].Symbol]", span="991-991"];
d533 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var delistingTime = delistings[i].Time", span="995-995"];
d541 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Automatic option exercise on expiration'')", span="1010-1011"];
d543 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.OptionExercise, security.Type, security.Symbol,\r\n                            security.Holdings.Quantity, 0, 0, algorithm.UtcTime, message)", span="1019-1020"];
d544 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="1025-1026"];
d545 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="algorithm.Transactions.ProcessRequest(request)", span="1029-1029"];
d546 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delistings.RemoveAt(i)", span="1031-1031"];
d584 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1060-1060"];
d565 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="int i = splitWarnings.Count - 1", span="1066-1066"];
d567 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var split = splitWarnings[i]", span="1068-1068"];
d568 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var security = algorithm.Securities[split.Symbol]", span="1069-1069"];
d573 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var derivatives = algorithm.Securities.Where(kvp => kvp.Key.HasUnderlying &&\r\n                    kvp.Key.SecurityType == SecurityType.Option &&\r\n                    kvp.Key.Underlying == security.Symbol &&\r\n                    !kvp.Key.Underlying.IsCanonical() &&\r\n                    kvp.Value.HoldStock\r\n                )", span="1082-1087"];
d577 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="algorithm.Transactions.CancelOpenOrders(optionContractSymbol, ''Canceled due to impending split. Separate MarketOnClose order submitted to liquidate position.'')", span="1095-1095"];
d578 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var request = new SubmitOrderRequest(OrderType.MarketOnClose, optionContractSecurity.Type, optionContractSymbol,\r\n                        -optionContractSecurity.Holdings.Quantity, 0, 0, algorithm.UtcTime,\r\n                        ''Liquidated due to impending split. Option splits are not currently supported.''\r\n                    )", span="1097-1100"];
d579 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="algorithm.Transactions.AddOrder(request)", span="1103-1103"];
d581 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="algorithm.Debug($''MarktetOnClose order submitted for option contract '{optionContractSymbol}' due to impending {split.Symbol.Value} split event. ''\r\n                        + ''Option splits are not currently supported.'')", span="1108-1109"];
d582 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="splitWarnings.RemoveAt(i)", span="1113-1113"];
d524 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", span="958-958"];
d515 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="newDelistings.Values", span="960-960"];
d517 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="!delistings.Any(x => x.Symbol == delisting.Symbol && x.Type == delisting.Type)", span="965-965"];
d518 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delistings.Add(delisting)", span="967-967"];
d521 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var cancelledOrders = algorithm.Transactions.CancelOpenOrders(delisting.Symbol)", span="974-974"];
d41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="194-194"];
d116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="391-391"];
d123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="406-406"];
d135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="434-434"];
d150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="471-471"];
d163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="503-503"];
d174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="530-530"];
d185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="555-555"];
d203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="587-587"];
d211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="604-604"];
d224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="return;", span="639-639"];
d59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="244-244"];
d63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue <= 0", span="255-255"];
d245 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="685-685"];
d68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=backtestMode, span="274-274"];
d253 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
d254 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
d256 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
d326 [cluster="lambda expression", label="Entry lambda expression", span="174-174"];
d330 [cluster="lambda expression", label="Entry lambda expression", span="175-175"];
d38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="genericMethod == null && !hasOnDataSlice", span="190-190"];
d614 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
d332 [cluster="lambda expression", label="Exit lambda expression", span="175-175"];
d257 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
d259 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
d266 [cluster="QuantConnect.Lean.Engine.Server.ILeanManager.Update()", label="Entry QuantConnect.Lean.Engine.Server.ILeanManager.Update()", span="46-46"];
d268 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
d269 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="156-156"];
d270 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="164-164"];
d64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="string logMessage = ''AlgorithmManager.Run(): Portfolio value is less than or equal to zero''", span="257-257"];
d271 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SystemDebugMessage(string)", span="109-109"];
d272 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.ScanPastEvents(System.DateTime)", span="59-59"];
d273 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="493-493"];
d76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="293-293"];
d275 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
d333 [cluster="lambda expression", label="Entry lambda expression", span="291-291"];
d277 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
d278 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
d280 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="49-49"];
d90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="cash.Update(updateData)", span="330-330"];
d89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="updateData != null", span="328-328"];
d87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var cash = kvp.Value", span="326-326"];
d283 [cluster="QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.Alpha.IAlphaHandler.ProcessSynchronousEvents()", span="57-57"];
d285 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="75-75"];
d102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="bool issueMarginCallWarning", span="366-366"];
d104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="marginCallOrders.Count != 0", span="368-368"];
d288 [cluster="QuantConnect.Securities.IMarginCallModel.GetMarginCallOrders(out bool)", label="Entry QuantConnect.Securities.IMarginCallModel.GetMarginCallOrders(out bool)", span="32-32"];
d117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=issueMarginCallWarning, span="395-395"];
d107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="executingMarginCall = true", span="376-376"];
d289 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="438-438"];
d109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=executedTickets, span="380-380"];
d290 [cluster="QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Securities.IMarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="51-51"];
d291 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
d292 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="432-432"];
d111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="385-385"];
d119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="401-401"];
d294 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="443-443"];
d295 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="672-672"];
d298 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
d299 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="541-541"];
d300 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="561-561"];
d146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="466-466"];
d337 [cluster="lambda expression", label="Entry lambda expression", span="462-462"];
d301 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
d302 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="85-85"];
d309 [cluster="Unk.methodInvoker", label="Entry Unk.methodInvoker", span=""];
d170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="525-525"];
d315 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlphaRuntimeStatistics(QuantConnect.AlphaRuntimeStatistics)", span="200-200"];
d316 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="260-260"];
d220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label=Exception, span="634-634"];
d318 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="458-458"];
d319 [cluster="System.Exception.Exception(string, System.Exception)", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
d303 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1138-1138"];
d320 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="583-583"];
d321 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="121-121"];
d322 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="226-226"];
d323 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="103-103"];
d324 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="522-522"];
d325 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="188-188"];
d258 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
d260 [cluster="Unk.DelegateForCallMethod", label="Entry Unk.DelegateForCallMethod", span=""];
d372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="766-766"];
d373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="768-768"];
d495 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="algorithm.Securities", span="911-911"];
d516 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="delisting.Type == DelistingType.Warning", span="963-963"];
d522 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label=cancelledOrders, span="975-975"];
d555 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="newSplits.Values", span="1040-1040"];
d556 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="split.Type != SplitType.Warning", span="1042-1042"];
d559 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="!splitWarnings.Any(x => x.Symbol == split.Symbol && x.Type == SplitType.Warning)", span="1050-1050"];
d0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="108-108"];
d353 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime? lastHistoryTimeUtc = null", span="725-725"];
d4 [cluster="lambda expression", label="Entry lambda expression", span="110-120"];
d7 [cluster="lambda expression", label="return null;", span="119-119"];
d8 [cluster="lambda expression", label="Exit lambda expression", span="110-120"];
d9 [cluster="double.ToString()", label="Entry double.ToString()", span="0-0"];
d3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="108-108"];
d17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var nextMarginCallTime = DateTime.MinValue", span="146-146"];
d114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="389-389"];
d19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var nextSettlementScanTime = DateTime.MinValue", span="148-148"];
d343 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="699-699"];
d345 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="state != AlgorithmStatus.Running", span="705-705"];
d347 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="699-699"];
d402 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="824-824"];
d418 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="857-857"];
d603 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Log.Error(err)", span="1131-1131"];
d505 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", span="907-907"];
d498 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var historyReq = security.VolatilityModel.GetHistoryRequirements(security, algorithm.UtcTime)", span="917-917"];
d499 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="historyReq != null && algorithm.HistoryProvider != null", span="919-919"];
d500 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var history = algorithm.HistoryProvider.GetHistory(historyReq, algorithm.TimeZone)", span="921-921"];
d401 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="822-822"];
d417 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="855-855"];
d400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice != null", span="820-820"];
d405 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="828-828"];
d410 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = timeSlice.Time", span="837-837"];
d432 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="894-894"];
d375 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="history.GetHistory(historyRequests, timeZone)", span="773-773"];
d355 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var start = DateTime.UtcNow.Ticks", span="729-729"];
d439 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="600-600"];
d359 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="738-738"];
d362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="743-743"];
d368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="757-757"];
d369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="759-759"];
d370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="760-760"];
d413 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="846-846"];
d356 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="730-730"];
d358 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="736-736"];
d441 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
d442 [cluster="Unk.DefaultIfEmpty", label="Entry Unk.DefaultIfEmpty", span=""];
d443 [cluster="Unk.Min", label="Entry Unk.Min", span=""];
d462 [cluster="lambda expression", label="Entry lambda expression", span="732-732"];
d361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", span="742-742"];
d444 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
d466 [cluster="lambda expression", label="Entry lambda expression", span="741-741"];
d363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Security security", span="745-745"];
d365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution < minResolution", span="748-748"];
d445 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
d446 [cluster="QuantConnect.Securities.Security.IsInternalFeed()", label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30"];
d378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="slice.Keys", span="780-780"];
d380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var data = slice[symbol]", span="783-783"];
d391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="config = security.Subscriptions.FirstOrDefault(subscription => dataType.IsAssignableFrom(subscription.Type))", span="800-800"];
d394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="paired.Add(new DataFeedPacket(security, config, list))", span="808-808"];
d387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="dataType = typeof(Tick)", span="792-792"];
d392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="config == null", span="803-803"];
d484 [cluster="lambda expression", label="Entry lambda expression", span="794-794"];
d377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var paired = new List<DataFeedPacket>()", span="779-779"];
d396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=Exception, span="813-813"];
d454 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="618-618"];
d455 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="103-103"];
d407 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="833-833"];
d397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Error(err)", span="815-815"];
d457 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="420-420"];
d293 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d458 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="594-594"];
d426 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=hasHistoricalData, span="877-877"];
d423 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="868-868"];
d428 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="888-888"];
d434 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="899-899"];
d421 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc.HasValue", span="864-864"];
d425 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="hasHistoricalData = true", span="873-873"];
d16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="145-145"];
d18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="147-147"];
d158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="consolidator.Scan(localTime)", span="494-494"];
d305 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="606-606"];
d249 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d615 [label=symbol, span=""];
d335 [cluster="lambda expression", label="Exit lambda expression", span="291-291"];
d336 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
d84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="security.SetMarketPrice(data)", span="316-316"];
d616 [label=split, span=""];
d339 [cluster="lambda expression", label="Exit lambda expression", span="462-462"];
d156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="consolidator.Update(dataPoint)", span="488-488"];
d307 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
d308 [cluster="System.Type.IsInstanceOfType(object)", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
d251 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d561 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", span="1038-1038"];
d560 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleSplitSymbols(QuantConnect.Data.Market.Splits, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="splitWarnings.Add(split)", span="1052-1052"];
d342 [cluster="lambda expression", label="Exit lambda expression", span="572-572"];
d341 [cluster="lambda expression", label="x.Key.ID.SecurityType == SecurityType.Forex", span="572-572"];
d513 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return false;", span="951-951"];
d512 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return true;", span="949-949"];
d510 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="newSplitMethodInfo != null", span="946-946"];
d422 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var hasHistoricalData = false", span="867-867"];
d600 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label=Exception, span="1127-1127"];
d605 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
d606 [cluster="decimal.SmartRounding()", label="Entry decimal.SmartRounding()", span="208-208"];
d607 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="172-172"];
d530 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="i >= 0", span="988-988"];
d547 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="i--", span="988-988"];
d532 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Holdings.Quantity == 0", span="992-992"];
d534 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var nextMarketOpen = security.Exchange.Hours.GetNextMarketOpen(delistingTime, false)", span="996-996"];
d535 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(nextMarketOpen, false)", span="997-997"];
d536 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.LocalTime < nextMarketClose", span="999-999"];
d538 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Type == SecurityType.Option", span="1004-1004"];
d539 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var option = (Option)security", span="1006-1006"];
d540 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="security.Holdings.Quantity > 0", span="1008-1008"];
d551 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
d542 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="var message = option.GetPayOff(option.Underlying.Price) > 0\r\n                            ? ''Automatic option assignment on expiration''\r\n                            : ''Option expiration''", span="1015-1017"];
d553 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133"];
d554 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
d566 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="i >= 0", span="1066-1066"];
d583 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="i--", span="1066-1066"];
d569 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="1071-1071"];
d570 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var highestResolutionSubscription = security.Subscriptions.OrderBy(sub => sub.Resolution).First()", span="1074-1074"];
d571 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var latestMarketOnCloseTimeRoundedDownByResolution = nextMarketClose.Subtract(MarketOnCloseOrder.DefaultSubmissionTimeBuffer)\r\n                    .RoundDownInTimeZone(security.Resolution.ToTimeSpan(), security.Exchange.TimeZone, highestResolutionSubscription.DataTimeZone)", span="1075-1076"];
d572 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="security.LocalTime < latestMarketOnCloseTimeRoundedDownByResolution", span="1079-1079"];
d596 [cluster="lambda expression", label="kvp.Key.HasUnderlying &&\r\n                    kvp.Key.SecurityType == SecurityType.Option &&\r\n                    kvp.Key.Underlying == security.Symbol &&\r\n                    !kvp.Key.Underlying.IsCanonical() &&\r\n                    kvp.Value.HoldStock", span="1082-1086"];
d574 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label=derivatives, span="1089-1089"];
d595 [cluster="lambda expression", label="Entry lambda expression", span="1082-1086"];
d575 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var optionContractSymbol = kvp.Key", span="1091-1091"];
d576 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="var optionContractSecurity = (Option) kvp.Value", span="1092-1092"];
d589 [cluster="Unk.CancelOpenOrders", label="Entry Unk.CancelOpenOrders", span=""];
d590 [cluster="SubmitOrderRequest.cstr", label="Entry SubmitOrderRequest.cstr", span=""];
d580 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessSplitSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Split>)", label="optionContractSecurity.IsTradable = false", span="1106-1106"];
d591 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="153-153"];
d527 [cluster="lambda expression", label="x.Symbol == delisting.Symbol && x.Type == delisting.Type", span="965-965"];
d447 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
d526 [cluster="lambda expression", label="Entry lambda expression", span="965-965"];
d451 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d525 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol, string)", span="184-184"];
d328 [cluster="lambda expression", label="Exit lambda expression", span="174-174"];
d327 [cluster="lambda expression", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="174-174"];
d393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="throw new Exception($''A data subscription for type '{dataType.Name}' was not found.'');", span="805-805"];
d276 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="264-264"];
d88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Lean.Engine.Server.ILeanManager, QuantConnect.Lean.Engine.Alpha.IAlphaHandler, System.Threading.CancellationToken)", label="var updateData = cash.ConversionRateSecurity?.GetLastData()", span="327-327"];
d282 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="97-97"];
d612 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", span="1138-1138"];
d608 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="config.Increment == TimeSpan.Zero", span="1140-1140"];
d610 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="var roundedDataPointEndTime = dataPointEndTime.RoundDownInTimeZone(config.Increment, config.ExchangeTimeZone, config.DataTimeZone)", span="1145-1145"];
d611 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="return dataPointEndTime == roundedDataPointEndTime;", span="1146-1146"];
d448 [cluster="System.Math.Min(long, long)", label="Entry System.Math.Min(long, long)", span="0-0"];
d497 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="security.VolatilityModel != VolatilityModel.Null", span="915-915"];
d501 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="history != null", span="922-922"];
d502 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label=history, span="924-924"];
d496 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="var security = kvp.Value", span="913-913"];
d563 [cluster="lambda expression", label="x.Symbol == split.Symbol && x.Type == SplitType.Warning", span="1050-1050"];
d562 [cluster="lambda expression", label="Entry lambda expression", span="1050-1050"];
d456 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
d506 [cluster="QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", label="Entry QuantConnect.Securities.IVolatilityModel.GetHistoryRequirements(QuantConnect.Securities.Security, System.DateTime)", span="46-46"];
d449 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
d406 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="832-832"];
d433 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="898-898"];
d376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="TimeSlice timeSlice", span="775-775"];
d367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="751-751"];
d366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution = minResolution", span="750-750"];
d472 [cluster="lambda expression", label="Entry lambda expression", span="757-757"];
d475 [cluster="lambda expression", label="Entry lambda expression", span="759-759"];
d478 [cluster="lambda expression", label="Entry lambda expression", span="759-759"];
d371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = minResolution", span="762-762"];
d481 [cluster="lambda expression", label="Entry lambda expression", span="760-760"];
d440 [cluster="System.DateTime.AddSeconds(double)", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
d464 [cluster="lambda expression", label="Exit lambda expression", span="732-732"];
d463 [cluster="lambda expression", label="x.Value.Configuration.Resolution.ToTimeSpan()", span="732-732"];
d469 [cluster="lambda expression", label="Entry lambda expression", span="742-742"];
d468 [cluster="lambda expression", label="Exit lambda expression", span="741-741"];
d467 [cluster="lambda expression", label="!x.IsInternalFeed", span="741-741"];
d485 [cluster="lambda expression", label="subscription.Symbol == symbol && dataType.IsAssignableFrom(subscription.Type)", span="794-794"];
d381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var list = new List<BaseData>()", span="784-784"];
d384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var ticks = data as List<Tick>", span="788-788"];
d389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.Add(data)", span="798-798"];
d390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="dataType = data.GetType()", span="799-799"];
d488 [cluster="lambda expression", label="Entry lambda expression", span="800-800"];
d453 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80"];
d386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.AddRange(ticks)", span="791-791"];
d486 [cluster="lambda expression", label="Exit lambda expression", span="794-794"];
d427 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = null", span="883-883"];
d459 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
d460 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
d491 [cluster="lambda expression", label="Entry lambda expression", span="868-868"];
d461 [cluster="Unk.Subtract", label="Entry Unk.Subtract", span=""];
d250 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
d306 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Scan(System.DateTime)", span="65-65"];
d279 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="540-540"];
d304 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.IBaseData)", span="59-59"];
d549 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketOpen(System.DateTime, bool)", span="205-205"];
d550 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
d537 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>)", label="SubmitOrderRequest request", span="1002-1002"];
d552 [cluster="QuantConnect.Securities.Option.Option.GetPayOff(decimal)", label="Entry QuantConnect.Securities.Option.Option.GetPayOff(decimal)", span="214-214"];
d585 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
d586 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
d592 [cluster="lambda expression", label="Entry lambda expression", span="1074-1074"];
d587 [cluster="System.DateTime.Subtract(System.TimeSpan)", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
d465 [cluster="QuantConnect.Resolution.ToTimeSpan()", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="724-724"];
d588 [cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="496-496"];
d621 [label=security, span=""];
d597 [cluster="lambda expression", label="Exit lambda expression", span="1082-1086"];
d598 [cluster="QuantConnect.Symbol.IsCanonical()", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
d619 [label=delisting, span=""];
d528 [cluster="lambda expression", label="Exit lambda expression", span="965-965"];
d329 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
d281 [cluster="QuantConnect.Securities.Security.GetLastData()", label="Entry QuantConnect.Securities.Security.GetLastData()", span="513-513"];
d609 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.EndTimeIsInNativeResolution(QuantConnect.Data.SubscriptionDataConfig, System.DateTime)", label="return true;", span="1142-1142"];
d503 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="slice.Bars.ContainsKey(security.Symbol)", span="926-926"];
d504 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ProcessVolatilityHistoryRequirements(QuantConnect.Interfaces.IAlgorithm)", label="security.VolatilityModel.Update(security, slice.Bars[security.Symbol])", span="927-927"];
d620 [label=split, span=""];
d564 [cluster="lambda expression", label="Exit lambda expression", span="1050-1050"];
d474 [cluster="lambda expression", label="Exit lambda expression", span="757-757"];
d473 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="757-757"];
d477 [cluster="lambda expression", label="Exit lambda expression", span="759-759"];
d476 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="759-759"];
d480 [cluster="lambda expression", label="Exit lambda expression", span="759-759"];
d479 [cluster="lambda expression", label="x.FillForwardResolution.Value", span="759-759"];
d483 [cluster="lambda expression", label="Exit lambda expression", span="760-760"];
d482 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="760-760"];
d471 [cluster="lambda expression", label="Exit lambda expression", span="742-742"];
d470 [cluster="lambda expression", label="x.Resolution", span="742-742"];
d617 [label=symbol, span=""];
d618 [label=dataType, span=""];
d487 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
d382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Type dataType", span="785-785"];
d383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="SubscriptionDataConfig config", span="786-786"];
d385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ticks != null", span="789-789"];
d452 [cluster="Unk.GetType", label="Entry Unk.GetType", span=""];
d489 [cluster="lambda expression", label="dataType.IsAssignableFrom(subscription.Type)", span="800-800"];
d490 [cluster="lambda expression", label="Exit lambda expression", span="800-800"];
d450 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
d493 [cluster="lambda expression", label="Exit lambda expression", span="868-868"];
d492 [cluster="lambda expression", label=x, span="868-868"];
d594 [cluster="lambda expression", label="Exit lambda expression", span="1074-1074"];
d593 [cluster="lambda expression", label="sub.Resolution", span="1074-1074"];
d507 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
d508 [cluster="QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.IVolatilityModel.Update(QuantConnect.Securities.Security, QuantConnect.Data.BaseData)", span="38-38"];
m0_9 [cluster="Unk.IsFalse", file="BacktestingBrokerage.cs", label="Entry Unk.IsFalse", span=""];
m0_29 [cluster="System.TimeSpan.FromHours(double)", file="BacktestingBrokerage.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m0_0 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", span="24-24"];
m0_1 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", file="BacktestingBrokerage.cs", label="Assert.IsTrue(typeof(Derived2).IsSubclassOfGeneric(typeof(Derived1)))", span="26-26"];
m0_2 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksWorksForNonGenericType()", span="24-24"];
m0_20 [cluster="System.TimeSpan.FromDays(double)", file="BacktestingBrokerage.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m0_22 [cluster="Unk.AreEqual", file="BacktestingBrokerage.cs", label="Entry Unk.AreEqual", span=""];
m0_5 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", span="30-30"];
m0_6 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="BacktestingBrokerage.cs", label="Assert.IsTrue(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<int>)))", span="32-32"];
m0_7 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="BacktestingBrokerage.cs", label="Assert.IsFalse(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<bool>)))", span="33-33"];
m0_8 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", span="30-30"];
m0_10 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", span="37-37"];
m0_11 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="BacktestingBrokerage.cs", label="Assert.IsTrue(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<>)))", span="39-39"];
m0_12 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="BacktestingBrokerage.cs", label="Assert.IsTrue(typeof(Derived2).IsSubclassOfGeneric(typeof(Super<>)))", span="40-40"];
m0_13 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", span="37-37"];
m0_19 [cluster="System.DateTime.DateTime(int, int, int)", file="BacktestingBrokerage.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m0_3 [cluster="System.Type.IsSubclassOfGeneric(System.Type)", file="BacktestingBrokerage.cs", label="Entry System.Type.IsSubclassOfGeneric(System.Type)", span="357-357"];
m0_4 [cluster="Unk.IsTrue", file="BacktestingBrokerage.cs", label="Entry Unk.IsTrue", span=""];
m0_23 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", span="52-52"];
m0_24 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="BacktestingBrokerage.cs", label="string input = ''16:00''", span="54-54"];
m0_25 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="BacktestingBrokerage.cs", label="var timespan = input.ConvertTo<TimeSpan>()", span="55-55"];
m0_26 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="BacktestingBrokerage.cs", label="Assert.AreEqual(TimeSpan.FromHours(16), timespan)", span="56-56"];
m0_27 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", span="52-52"];
m0_28 [cluster="string.ConvertTo<T>()", file="BacktestingBrokerage.cs", label="Entry string.ConvertTo<T>()", span="410-410"];
m0_21 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="BacktestingBrokerage.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="279-279"];
m0_14 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", span="44-44"];
m0_15 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="BacktestingBrokerage.cs", label="var date = new DateTime(2000, 01, 01)", span="46-46"];
m0_16 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="BacktestingBrokerage.cs", label="var rounded = date.RoundDown(TimeSpan.FromDays(1))", span="47-47"];
m0_17 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="BacktestingBrokerage.cs", label="Assert.AreEqual(date, rounded)", span="48-48"];
m0_18 [cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", span="44-44"];
m2_18 [cluster="object.ReferenceEquals(object, object)", file="ConstantAlphaModel.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m2_28 [cluster="QuantConnect.Indicators.IndicatorBase<T>.ToString()", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.ToString()", span="126-126"];
m2_29 [cluster="QuantConnect.Indicators.IndicatorBase<T>.ToString()", file="ConstantAlphaModel.cs", label="return Current.Value.ToString(''#######0.0####'');", span="128-128"];
m2_31 [cluster="decimal.ToString(string)", file="ConstantAlphaModel.cs", label="Entry decimal.ToString(string)", span="0-0"];
m2_27 [cluster="QuantConnect.Indicators.IndicatorBase<T>.implicit operator decimal(QuantConnect.Indicators.IndicatorBase<T>)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Indicators.IndicatorBase<T>.implicit operator decimal(QuantConnect.Indicators.IndicatorBase<T>)", span="117-117"];
m2_30 [cluster="QuantConnect.Indicators.IndicatorBase<T>.ToString()", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Indicators.IndicatorBase<T>.ToString()", span="126-126"];
m2_32 [cluster="QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", span="135-135"];
m2_33 [cluster="QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", file="ConstantAlphaModel.cs", label="return string.Format(''{0} - {1}'', Name, this);", span="137-137"];
m2_34 [cluster="QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", span="135-135"];
m2_26 [cluster="QuantConnect.Indicators.IndicatorBase<T>.implicit operator decimal(QuantConnect.Indicators.IndicatorBase<T>)", file="ConstantAlphaModel.cs", label="return instance.Current;", span="119-119"];
m2_0 [cluster="QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", span="49-49"];
m2_1 [cluster="QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", file="ConstantAlphaModel.cs", label="Name = name", span="51-51"];
m2_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55"];
m2_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_type = type", span="57-57"];
m2_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="118-118"];
m2_36 [cluster="QuantConnect.Indicators.IndicatorBase<T>.ComputeNextValue(T)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Indicators.IndicatorBase<T>.ComputeNextValue(T)", span="145-145"];
m2_25 [cluster="QuantConnect.Indicators.IndicatorBase<T>.implicit operator decimal(QuantConnect.Indicators.IndicatorBase<T>)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.implicit operator decimal(QuantConnect.Indicators.IndicatorBase<T>)", span="117-117"];
m2_11 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="ConstantAlphaModel.cs", label="var nextValue = ComputeNextValue(input)", span="94-94"];
m2_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_direction = direction", span="58-58"];
m2_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75"];
m2_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="NotifiedSecurityChanges.UpdateCollection(_securities, changes)", span="93-93"];
m2_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="changes.RemovedSecurities", span="96-96"];
m2_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol.Remove(removed.Symbol)", span="98-98"];
m2_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91"];
m2_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", color=green, community=0, file="ConstantAlphaModel.cs", label="0: yield return new Insight(security.Symbol, _type, _direction, _period, _magnitude, _confidence);", span="81-81"];
m2_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="91-91"];
m2_37 [cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="ConstantAlphaModel.cs", label="var handler = Updated", span="153-153"];
m2_39 [cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="ConstantAlphaModel.cs", label="handler(this, consolidated)", span="154-154"];
m2_38 [cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="ConstantAlphaModel.cs", label="handler != null", span="154-154"];
m2_40 [cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", span="151-151"];
m2_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_period = period", span="59-59"];
m2_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_magnitude = magnitude", span="62-62"];
m2_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_confidence = confidence", span="63-63"];
m2_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_securities = new HashSet<Security>()", span="65-65"];
m2_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="55-55"];
m2_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ConstantAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.ConstantAlphaModel(QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="ConstantAlphaModel.cs", label="_insightsTimeBySymbol = new Dictionary<Symbol, DateTime>()", span="66-66"];
m2_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label=_securities, span="77-77"];
m2_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", span="75-75"];
m2_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel.Update(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.Slice)", file="ConstantAlphaModel.cs", label="ShouldEmitInsight(algorithm.UtcTime, security.Symbol)", span="79-79"];
m2_35 [cluster="string.Format(string, object, object)", file="ConstantAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", span=""];
m2_41 [cluster="QuantConnect.Indicators.IndicatorUpdatedHandler.Invoke(object, QuantConnect.Indicators.IndicatorDataPoint)", file="ConstantAlphaModel.cs", label="Entry QuantConnect.Indicators.IndicatorUpdatedHandler.Invoke(object, QuantConnect.Indicators.IndicatorDataPoint)", span="27-27"];
m2_42 [file="ConstantAlphaModel.cs", label="QuantConnect.Indicators.IndicatorBase<T>", span=""];
m3_248 [cluster="System.Diagnostics.Process.Kill()", file="EmaCrossAlphaModel.cs", label="Entry System.Diagnostics.Process.Kill()", span="0-0"];
m3_69 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsReader.AlgoSeekOptionsReader(string, System.DateTime, System.Collections.Generic.HashSet<string>)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsReader.AlgoSeekOptionsReader(string, System.DateTime, System.Collections.Generic.HashSet<string>)", span="57-57"];
m3_73 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", span="184-184"];
m3_88 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", file="EmaCrossAlphaModel.cs", label="Flush(processors, peekTickTime, final)", span="188-188"];
m3_89 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", file="EmaCrossAlphaModel.cs", label="Task.Run(() =>\r\n            {\r\n                try\r\n                {\r\n                    foreach (var type in Enum.GetValues(typeof(TickType)))\r\n                    {\r\n                        var tickType = type;\r\n                        var groups = processors.Values.Select(x => x[(int)tickType]).Where(x => x.Queue.Count > 0).GroupBy(process => process.Symbol.Underlying.Value);\r\n\r\n                        Parallel.ForEach(groups, group =>\r\n                        {\r\n                            string zip = string.Empty;\r\n\r\n                            try\r\n                            {\r\n                                var symbol = group.Key;\r\n                                zip = group.First().ZipPath.Replace(''.zip'', string.Empty);\r\n\r\n                                foreach (var processor in group)\r\n                                {\r\n                                    var tempFileName = Path.Combine(zip, processor.EntryPath);\r\n\r\n                                    Directory.CreateDirectory(zip);\r\n                                    File.AppendAllText(tempFileName, FileBuilder(processor));\r\n                                }\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                Log.Error(''AlgoSeekOptionsConverter.WriteToDisk() returned error: '' + err.Message + '' zip name: '' + zip);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Log.Error(''AlgoSeekOptionsConverter.WriteToDisk() returned error: '' + err.Message);\r\n                }\r\n                waitForFlush.Set();\r\n            })", span="190-228"];
m3_87 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", file="EmaCrossAlphaModel.cs", label="waitForFlush.Reset()", span="187-187"];
m3_90 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", file="EmaCrossAlphaModel.cs", label=final, span="231-231"];
m3_86 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", file="EmaCrossAlphaModel.cs", label="waitForFlush.WaitOne()", span="186-186"];
m3_91 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", file="EmaCrossAlphaModel.cs", label="waitForFlush.WaitOne()", span="231-231"];
m3_92 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", file="EmaCrossAlphaModel.cs", label="return peekTickTime.RoundDown(step);", span="233-233"];
m3_93 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.WriteToDisk(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.Threading.ManualResetEvent, System.DateTime, System.TimeSpan, bool)", span="184-184"];
m3_81 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="EmaCrossAlphaModel.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m3_108 [cluster="Unk.Where", file="EmaCrossAlphaModel.cs", label="Entry Unk.Where", span=""];
m3_85 [cluster="QuantConnect.Logging.Log.Error(string, params object[])", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Logging.Log.Error(string, params object[])", span="131-131"];
m3_204 [cluster="Unk.Trace", file="EmaCrossAlphaModel.cs", label="Entry Unk.Trace", span=""];
m3_257 [cluster="System.Diagnostics.Process.WaitForExit(int)", file="EmaCrossAlphaModel.cs", label="Entry System.Diagnostics.Process.WaitForExit(int)", span="0-0"];
m3_23 [cluster="System.Threading.Tasks.Parallel.ForEach<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Threading.Tasks.ParallelOptions, System.Action<TSource>)", file="EmaCrossAlphaModel.cs", label="Entry System.Threading.Tasks.Parallel.ForEach<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Threading.Tasks.ParallelOptions, System.Action<TSource>)", span="0-0"];
m3_253 [cluster="System.IO.StreamReader.ReadToEnd()", file="EmaCrossAlphaModel.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m3_75 [cluster="System.Collections.Generic.List<T>.List(int)", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m3_135 [cluster="Unk.Combine", file="EmaCrossAlphaModel.cs", label="Entry Unk.Combine", span=""];
m3_138 [cluster="System.IO.File.AppendAllText(string, string)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.File.AppendAllText(string, string)", span="0-0"];
m3_254 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="364-364"];
m3_26 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var csvFile = Path.Combine(_source, Path.GetFileName(file).Replace(''.bz2'', ''''))", span="91-91"];
m3_30 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var cmdArgs = '' e '' + file + '' -o'' + _source", span="99-99"];
m3_34 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var reader = new ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsReader(csvFile, _referenceDate)", span="112-112"];
m3_42 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="previousFlush = WriteToDisk(processors, waitForFlush, tick.Time, flushStep)", span="131-131"];
m3_46 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="symbolProcessors = new List<AlgoSeekOptionsProcessor>(3)\r\n                                            {\r\n                                                new AlgoSeekOptionsProcessor(tick.Symbol, _referenceDate, TickType.Trade, _resolution, _destination),\r\n                                                new AlgoSeekOptionsProcessor(tick.Symbol, _referenceDate, TickType.Quote, _resolution, _destination),\r\n                                                new AlgoSeekOptionsProcessor(tick.Symbol, _referenceDate, TickType.OpenInterest, _resolution, _destination)\r\n                                            }", span="139-144"];
m3_53 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Flush(processors, DateTime.MaxValue, true)", span="161-161"];
m3_54 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="WriteToDisk(processors, waitForFlush, DateTime.MaxValue, flushStep, true)", span="162-162"];
m3_101 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Parallel.ForEach(groups, group =>\r\n                        {\r\n                            string zip = string.Empty;\r\n\r\n                            try\r\n                            {\r\n                                var symbol = group.Key;\r\n                                zip = group.First().ZipPath.Replace(''.zip'', string.Empty);\r\n\r\n                                foreach (var processor in group)\r\n                                {\r\n                                    var tempFileName = Path.Combine(zip, processor.EntryPath);\r\n\r\n                                    Directory.CreateDirectory(zip);\r\n                                    File.AppendAllText(tempFileName, FileBuilder(processor));\r\n                                }\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                Log.Error(''AlgoSeekOptionsConverter.WriteToDisk() returned error: '' + err.Message + '' zip name: '' + zip);\r\n                            }\r\n                        })", span="199-220"];
m3_129 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="File.AppendAllText(tempFileName, FileBuilder(processor))", span="213-213"];
m3_50 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Trace(''AlgoSeekOptionsConverter.Convert(): Processed {0,3}M ticks( {1}k / sec); Memory in use: {2} MB; Total progress: {3}%'', Math.Round(totalLinesProcessed / 1000000m, 2), Math.Round(totalLinesProcessed / 1000L / (DateTime.Now - start).TotalSeconds), Process.GetCurrentProcess().WorkingSet64 / (1024 * 1024), 100 * totalFilesProcessed / totalFiles)", span="154-154"];
m3_24 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="85-174"];
m3_35 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="start == DateTime.MinValue", span="113-113"];
m3_49 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Interlocked.Increment(ref totalLinesProcessed) % 1000000m == 0", span="152-152"];
m3_57 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Interlocked.Increment(ref totalFilesProcessed)", span="168-168"];
m3_25 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Trace(''Remote File :'' + file)", span="89-89"];
m3_27 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Trace(''Source File :'' + csvFile)", span="93-93"];
m3_28 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="!File.Exists(csvFile)", span="95-95"];
m3_29 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Trace(''AlgoSeekOptionsConverter.Convert(): Extracting '' + file)", span="97-97"];
m3_31 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="RunZipper(zipper, cmdArgs)", span="100-100"];
m3_33 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var waitForFlush = new ManualResetEvent(true)", span="105-105"];
m3_38 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="reader.Current != null", span="120-120"];
m3_39 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var previousFlush = reader.Current.Time.RoundDown(flushStep)", span="122-122"];
m3_40 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var tick = reader.Current as Tick", span="126-126"];
m3_51 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="reader.MoveNext()", span="158-158"];
m3_37 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var flushStep = TimeSpan.FromMinutes(15 + random.NextDouble() * 5)", span="118-118"];
m3_32 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var processors = new Processors()", span="104-104"];
m3_41 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="tick.Time.RoundDown(flushStep) > previousFlush", span="129-129"];
m3_43 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="processors = new Processors()", span="132-132"];
m3_45 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="!processors.TryGetValue(tick.Symbol, out symbolProcessors)", span="137-137"];
m3_47 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="processors[tick.Symbol] = symbolProcessors", span="146-146"];
m3_48 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="symbolProcessors[(int)tick.TickType].Process(tick)", span="150-150"];
m3_52 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Trace(''AlgoSeekOptionsConverter.Convert(): Performing final flush to disk... '')", span="160-160"];
m3_55 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="processors = null", span="165-165"];
m3_97 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="190-228"];
m3_100 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var groups = processors.Values.Select(x => x[(int)tickType]).Where(x => x.Queue.Count > 0).GroupBy(process => process.Symbol.Underlying.Value)", span="197-197"];
m3_98 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Enum.GetValues(typeof(TickType))", span="194-194"];
m3_122 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="199-220"];
m3_126 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label=group, span="208-208"];
m3_127 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var tempFileName = Path.Combine(zip, processor.EntryPath)", span="210-210"];
m3_128 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Directory.CreateDirectory(zip)", span="212-212"];
m3_172 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="277-310"];
m3_210 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="333-343"];
m3_36 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="start = DateTime.Now", span="115-115"];
m3_60 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="85-174"];
m3_56 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Trace(''AlgoSeekOptionsConverter.Convert(): Finished processing file: '' + file)", span="167-167"];
m3_59 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Error(''Exception caught! File: {0} Err: {1} Source {2} Stack {3}'', file, err.Message, err.Source, err.StackTrace)", span="172-172"];
m3_58 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label=Exception, span="170-170"];
m3_178 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="zip.CreateEntryFromFile(fileToCompress, Path.GetFileName(fileToCompress), CompressionLevel.Optimal)", span="291-291"];
m3_44 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="List<AlgoSeekOptionsProcessor> symbolProcessors", span="136-136"];
m3_104 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="waitForFlush.Set()", span="227-227"];
m3_154 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="x.FlushBuffer(time, final)", span="256-256"];
m3_105 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="190-228"];
m3_99 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var tickType = type", span="196-196"];
m3_113 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="197-197"];
m3_116 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="197-197"];
m3_119 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="197-197"];
m3_102 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label=Exception, span="223-223"];
m3_132 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="199-220"];
m3_123 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="string zip = string.Empty", span="201-201"];
m3_124 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var symbol = group.Key", span="205-205"];
m3_125 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="zip = group.First().ZipPath.Replace(''.zip'', string.Empty)", span="206-206"];
m3_130 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label=Exception, span="216-216"];
m3_168 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="274-274"];
m3_185 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="277-310"];
m3_173 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var outputFileName = file.Key + ''.zip''", span="281-281"];
m3_174 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var filesToCompress = Directory.GetFiles(file.Key, ''*.csv'', SearchOption.AllDirectories)", span="283-283"];
m3_180 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Directory.Delete(file.Key, true)", span="299-299"];
m3_184 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Error(''File: {0} Err: {1} Source {2} Stack {3}'', file, err.Message, err.Source, err.StackTrace)", span="308-308"];
m3_206 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="extensions.Contains(Path.GetExtension(x))", span="327-327"];
m3_205 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="327-327"];
m3_214 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="333-343"];
m3_211 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="File.Delete(file)", span="337-337"];
m3_176 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Trace(''AlgoSeekOptionsConverter.Package(): Zipping '' + outputFileName)", span="286-286"];
m3_175 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="var zip = ZipFile.Open(outputFileName, ZipArchiveMode.Create)", span="284-284"];
m3_177 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label=filesToCompress, span="288-288"];
m3_103 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Error(''AlgoSeekOptionsConverter.WriteToDisk() returned error: '' + err.Message)", span="225-225"];
m3_153 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="256-256"];
m3_155 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="256-256"];
m3_114 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="x[(int)tickType]", span="197-197"];
m3_115 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="197-197"];
m3_118 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="197-197"];
m3_117 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="x.Queue.Count > 0", span="197-197"];
m3_121 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="197-197"];
m3_120 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="process.Symbol.Underlying.Value", span="197-197"];
m3_131 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Error(''AlgoSeekOptionsConverter.WriteToDisk() returned error: '' + err.Message + '' zip name: '' + zip)", span="218-218"];
m3_170 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="274-274"];
m3_169 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Directory.GetParent(x).FullName", span="274-274"];
m3_182 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Error(''AlgoSeekOptionsConverter.Package(): Directory.Delete returned error: '' + err.Message)", span="303-303"];
m3_179 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="zip.Dispose()", span="295-295"];
m3_181 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label=Exception, span="301-301"];
m3_183 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label=Exception, span="306-306"];
m3_207 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="327-327"];
m3_213 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Log.Error(''AlgoSeekOptionsConverter.Clean(): File.Delete returned error: '' + err.Message)", span="341-341"];
m3_212 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label=Exception, span="339-339"];
m3_251 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="((StreamReader)streamReader).ReadToEnd()", span="351-351"];
m3_255 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="process.WaitForExit(execTimeout * 1000)", span="364-364"];
m3_250 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Entry lambda expression", span="351-351"];
m3_252 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="351-351"];
m3_256 [cluster="lambda expression", file="EmaCrossAlphaModel.cs", label="Exit lambda expression", span="364-364"];
m3_0 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m3_1 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="EmaCrossAlphaModel.cs", label="_brokerage = brokerage", span="36-36"];
m3_2 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m3_3 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", span="42-42"];
m3_4 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="EmaCrossAlphaModel.cs", label="base.ProcessSynchronousEvents()", span="44-44"];
m3_5 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="EmaCrossAlphaModel.cs", label="_brokerage.Scan()", span="46-46"];
m3_6 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessSynchronousEvents()", span="42-42"];
m3_7 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="194-194"];
m3_95 [cluster="System.Threading.EventWaitHandle.Reset()", file="EmaCrossAlphaModel.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m3_110 [cluster="Unk.ForEach", file="EmaCrossAlphaModel.cs", label="Entry Unk.ForEach", span=""];
m3_202 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m3_186 [cluster="System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", span="0-0"];
m3_71 [cluster="System.TimeSpan.FromMinutes(double)", file="EmaCrossAlphaModel.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m3_111 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m3_70 [cluster="System.Random.NextDouble()", file="EmaCrossAlphaModel.cs", label="Entry System.Random.NextDouble()", span="0-0"];
m3_68 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="EmaCrossAlphaModel.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m3_8 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="181-181"];
m3_10 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", color=green, community=0, file="EmaCrossAlphaModel.cs", label="0: base.ProcessAsynchronousEvents()", span="54-54"];
m3_9 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", span="52-52"];
m3_11 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="EmaCrossAlphaModel.cs", label="_brokerage.Scan()", span="56-56"];
m3_17 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Convert()", file="EmaCrossAlphaModel.cs", label="Parallel.ForEach(files, parallelOptionsProcessing, file =>\r\n            {\r\n                try\r\n                {\r\n                    Log.Trace(''Remote File :'' + file);\r\n\r\n                    var csvFile = Path.Combine(_source, Path.GetFileName(file).Replace(''.bz2'', ''''));\r\n\r\n                    Log.Trace(''Source File :'' + csvFile);\r\n\r\n                    if (!File.Exists(csvFile))\r\n                    {\r\n                        Log.Trace(''AlgoSeekOptionsConverter.Convert(): Extracting '' + file);\r\n\r\n                        var cmdArgs = '' e '' + file + '' -o'' + _source;\r\n                        RunZipper(zipper, cmdArgs);\r\n                    }\r\n\r\n                    // setting up local processors and the flush event\r\n                    var processors = new Processors();\r\n                    var waitForFlush = new ManualResetEvent(true);\r\n\r\n                    // symbol filters \r\n                    // var symbolFilterNames = new string[] { ''AAPL'', ''TWX'', ''NWSA'', ''FOXA'', ''AIG'', ''EGLE'', ''EGEC'' };\r\n                    // var symbolFilter = symbolFilterNames.SelectMany(name => new[] { name, name + ''1'', name + ''.1'' }).ToHashSet();\r\n                    // var reader = new AlgoSeekOptionsReader(csvFile, _referenceDate, symbolFilter);\r\n\r\n                    var reader = new ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsReader(csvFile, _referenceDate);\r\n                    if (start == DateTime.MinValue)\r\n                    {\r\n                        start = DateTime.Now;\r\n                    }\r\n\r\n                    var flushStep = TimeSpan.FromMinutes(15 + random.NextDouble() * 5);\r\n\r\n                    if (reader.Current != null) // reader contains the data\r\n                    {\r\n                        var previousFlush = reader.Current.Time.RoundDown(flushStep);\r\n\r\n                        do\r\n                        {\r\n                            var tick = reader.Current as Tick;\r\n\r\n                            //If the next minute has clocked over; flush the consolidators; serialize and store data to disk.\r\n                            if (tick.Time.RoundDown(flushStep) > previousFlush)\r\n                            {\r\n                                previousFlush = WriteToDisk(processors, waitForFlush, tick.Time, flushStep);\r\n                                processors = new Processors();\r\n                            }\r\n\r\n                            //Add or create the consolidator-flush mechanism for symbol:\r\n                            List<AlgoSeekOptionsProcessor> symbolProcessors;\r\n                            if (!processors.TryGetValue(tick.Symbol, out symbolProcessors))\r\n                            {\r\n                                symbolProcessors = new List<AlgoSeekOptionsProcessor>(3)\r\n                                            {\r\n                                                new AlgoSeekOptionsProcessor(tick.Symbol, _referenceDate, TickType.Trade, _resolution, _destination),\r\n                                                new AlgoSeekOptionsProcessor(tick.Symbol, _referenceDate, TickType.Quote, _resolution, _destination),\r\n                                                new AlgoSeekOptionsProcessor(tick.Symbol, _referenceDate, TickType.OpenInterest, _resolution, _destination)\r\n                                            };\r\n\r\n                                processors[tick.Symbol] = symbolProcessors;\r\n                            }\r\n\r\n                            // Pass current tick into processor: enum 0 = trade; 1 = quote, , 2 = oi\r\n                            symbolProcessors[(int)tick.TickType].Process(tick);\r\n\r\n                            if (Interlocked.Increment(ref totalLinesProcessed) % 1000000m == 0)\r\n                            {\r\n                                Log.Trace(''AlgoSeekOptionsConverter.Convert(): Processed {0,3}M ticks( {1}k / sec); Memory in use: {2} MB; Total progress: {3}%'', Math.Round(totalLinesProcessed / 1000000m, 2), Math.Round(totalLinesProcessed / 1000L / (DateTime.Now - start).TotalSeconds), Process.GetCurrentProcess().WorkingSet64 / (1024 * 1024), 100 * totalFilesProcessed / totalFiles);\r\n                            }\r\n\r\n                        }\r\n                        while (reader.MoveNext());\r\n\r\n                        Log.Trace(''AlgoSeekOptionsConverter.Convert(): Performing final flush to disk... '');\r\n                        Flush(processors, DateTime.MaxValue, true);\r\n                        WriteToDisk(processors, waitForFlush, DateTime.MaxValue, flushStep, true);\r\n                    }\r\n\r\n                    processors = null;\r\n\r\n                    Log.Trace(''AlgoSeekOptionsConverter.Convert(): Finished processing file: '' + file);\r\n                    Interlocked.Increment(ref totalFilesProcessed);\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Log.Error(''Exception caught! File: {0} Err: {1} Source {2} Stack {3}'', file, err.Message, err.Source, err.StackTrace);\r\n                }\r\n            })", span="85-174"];
m3_12 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.ProcessAsynchronousEvents()", span="52-52"];
m3_13 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessAsynchronousEvents()", span="186-186"];
m3_14 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Convert()", file="EmaCrossAlphaModel.cs", label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", span=""];
m3_15 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Convert()", file="EmaCrossAlphaModel.cs", label="var zipper = OS.IsWindows ? ''C:/Program Files/7-Zip/7z.exe'' : ''7z''", span="81-81"];
m3_16 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Convert()", file="EmaCrossAlphaModel.cs", label="var random = new Random((int)DateTime.Now.Ticks)", span="82-82"];
m3_18 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Convert()", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Convert()", span="69-69"];
m3_22 [cluster="System.Random.Random(int)", file="EmaCrossAlphaModel.cs", label="Entry System.Random.Random(int)", span="0-0"];
m3_83 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Flush(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.DateTime, bool)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Flush(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.DateTime, bool)", span="252-252"];
m3_149 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Flush(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.DateTime, bool)", file="EmaCrossAlphaModel.cs", label="processors.Keys", span="254-254"];
m3_150 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Flush(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.DateTime, bool)", file="EmaCrossAlphaModel.cs", label="processors[symbol].ForEach(x => x.FlushBuffer(time, final))", span="256-256"];
m3_151 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Flush(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.DateTime, bool)", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Flush(System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>, System.DateTime, bool)", span="252-252"];
m3_165 [cluster="System.DateTime.ToString(string)", file="EmaCrossAlphaModel.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m3_191 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", span="316-316"];
m3_194 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", file="EmaCrossAlphaModel.cs", label="var destination = Path.Combine(_destination, ''option'')", span="321-321"];
m3_199 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", file="EmaCrossAlphaModel.cs", label="Parallel.ForEach(files, parallelOptionsZipping, file =>\r\n            {\r\n                try\r\n                {\r\n                    File.Delete(file);\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Log.Error(''AlgoSeekOptionsConverter.Clean(): File.Delete returned error: '' + err.Message);\r\n                }\r\n            })", span="333-343"];
m3_192 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", file="EmaCrossAlphaModel.cs", label="Log.Trace(''AlgoSeekOptionsConverter.Clean(): cleaning all zip and csv files for {0} before start...'', date.ToShortDateString())", span="318-318"];
m3_193 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", file="EmaCrossAlphaModel.cs", label="var extensions = new HashSet<string> { ''.zip'', ''.csv'' }", span="320-320"];
m3_195 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", file="EmaCrossAlphaModel.cs", label="Directory.CreateDirectory(destination)", span="322-322"];
m3_197 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", file="EmaCrossAlphaModel.cs", label="var files =\r\n                Directory.EnumerateFiles(destination, dateMask + ''_'' + ''*.*'', SearchOption.AllDirectories)\r\n                .Where(x => extensions.Contains(Path.GetExtension(x)))\r\n                .ToList()", span="325-328"];
m3_198 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", file="EmaCrossAlphaModel.cs", label="Log.Trace(''AlgoSeekOptionsConverter.Clean(): found {0} files..'', files.Count)", span="330-330"];
m3_196 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", file="EmaCrossAlphaModel.cs", label="var dateMask = date.ToString(DateFormat.EightCharacter)", span="323-323"];
m3_200 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Clean(System.DateTime)", span="316-316"];
m3_76 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.AlgoSeekOptionsProcessor(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution, string)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.AlgoSeekOptionsProcessor(QuantConnect.Symbol, System.DateTime, QuantConnect.TickType, QuantConnect.Resolution, string)", span="120-120"];
m3_72 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="EmaCrossAlphaModel.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="470-470"];
m3_77 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.Process(QuantConnect.Data.Market.Tick)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.Process(QuantConnect.Data.Market.Tick)", span="156-156"];
m3_136 [cluster="System.IO.Directory.CreateDirectory(string)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m3_19 [cluster="System.IO.Directory.EnumerateFiles(string, string)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.Directory.EnumerateFiles(string, string)", span="0-0"];
m3_78 [cluster="System.Threading.Interlocked.Increment(ref long)", file="EmaCrossAlphaModel.cs", label="Entry System.Threading.Interlocked.Increment(ref long)", span="0-0"];
m3_166 [cluster="System.IO.Directory.EnumerateFiles(string, string, System.IO.SearchOption)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.Directory.EnumerateFiles(string, string, System.IO.SearchOption)", span="0-0"];
m3_203 [cluster="Unk.ToList", file="EmaCrossAlphaModel.cs", label="Entry Unk.ToList", span=""];
m3_188 [cluster="Unk.CreateEntryFromFile", file="EmaCrossAlphaModel.cs", label="Entry Unk.CreateEntryFromFile", span=""];
m3_190 [cluster="System.IO.Directory.Delete(string, bool)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.Directory.Delete(string, bool)", span="0-0"];
m3_209 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m3_208 [cluster="System.IO.Path.GetExtension(string)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.Path.GetExtension(string)", span="0-0"];
m3_137 [cluster="Unk.FileBuilder", file="EmaCrossAlphaModel.cs", label="Entry Unk.FileBuilder", span=""];
m3_82 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsReader.MoveNext()", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsReader.MoveNext()", span="95-95"];
m3_21 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
m3_63 [cluster="string.Replace(string, string)", file="EmaCrossAlphaModel.cs", label="Entry string.Replace(string, string)", span="0-0"];
m3_189 [cluster="Unk.Dispose", file="EmaCrossAlphaModel.cs", label="Entry Unk.Dispose", span=""];
m3_65 [cluster="System.IO.File.Exists(string)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m3_156 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.FlushBuffer(System.DateTime, bool)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor.FlushBuffer(System.DateTime, bool)", span="171-171"];
m3_244 [cluster="System.Diagnostics.Process.Process()", file="EmaCrossAlphaModel.cs", label="Entry System.Diagnostics.Process.Process()", span="0-0"];
m3_245 [cluster="System.Diagnostics.Process.Start()", file="EmaCrossAlphaModel.cs", label="Entry System.Diagnostics.Process.Start()", span="0-0"];
m3_112 [cluster="System.Threading.EventWaitHandle.Set()", file="EmaCrossAlphaModel.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m3_247 [cluster="System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<object, TResult>, object)", file="EmaCrossAlphaModel.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<object, TResult>, object)", span="0-0"];
m3_79 [cluster="System.Math.Round(decimal, int)", file="EmaCrossAlphaModel.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m3_64 [cluster="System.IO.Path.Combine(string, string)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m3_249 [cluster="System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[], int)", file="EmaCrossAlphaModel.cs", label="Entry System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[], int)", span="0-0"];
m3_215 [cluster="Unk.Delete", file="EmaCrossAlphaModel.cs", label="Entry Unk.Delete", span=""];
m3_152 [cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0"];
m3_94 [cluster="System.Threading.WaitHandle.WaitOne()", file="EmaCrossAlphaModel.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m3_67 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_96 [cluster="Unk.Run", file="EmaCrossAlphaModel.cs", label="Entry Unk.Run", span=""];
m3_84 [cluster="System.Threading.Interlocked.Increment(ref int)", file="EmaCrossAlphaModel.cs", label="Entry System.Threading.Interlocked.Increment(ref int)", span="0-0"];
m3_167 [cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m3_80 [cluster="System.Math.Round(double)", file="EmaCrossAlphaModel.cs", label="Entry System.Math.Round(double)", span="0-0"];
m3_109 [cluster="Unk.GroupBy", file="EmaCrossAlphaModel.cs", label="Entry Unk.GroupBy", span=""];
m3_106 [cluster="System.Enum.GetValues(System.Type)", file="EmaCrossAlphaModel.cs", label="Entry System.Enum.GetValues(System.Type)", span="0-0"];
m3_201 [cluster="System.DateTime.ToShortDateString()", file="EmaCrossAlphaModel.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m3_66 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", span="346-346"];
m3_232 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="Log.Trace(''7Zip Process Killed: '' + cmdArgs)", span="373-373"];
m3_239 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="Log.Trace(''7Zip Exited Successfully: '' + cmdArgs)", span="391-391"];
m3_243 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", span="346-346"];
m3_216 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="bool timedOut = false", span="348-348"];
m3_223 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="process.StartInfo.FileName = zipper", span="359-359"];
m3_224 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="process.StartInfo.Arguments = cmdArgs", span="360-360"];
m3_235 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="Log.Error(''7Zip timed out: '' + cmdArgs)", span="380-380"];
m3_238 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="Log.Error(''7Zip Exited Unsuccessfully: '' + cmdArgs)", span="387-387"];
m3_231 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="process.Kill()", span="372-372"];
m3_233 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="Task.WaitAll(new Task[] { outputReader, errorReader }, execTimeout * 1000)", span="376-376"];
m3_237 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="process.ExitCode > 0", span="385-385"];
m3_240 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label=Exception, span="397-397"];
m3_241 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="!timedOut", span="399-399"];
m3_236 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="timedOut = true", span="381-381"];
m3_242 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="Log.Error(''RunZipper() failed: '' + e.Message)", span="401-401"];
m3_217 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="Func<object, string> readStream = streamReader => ((StreamReader)streamReader).ReadToEnd()", span="351-351"];
m3_218 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="var process = new Process()", span="353-353"];
m3_222 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="process.StartInfo.RedirectStandardOutput = true", span="358-358"];
m3_225 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="process.Start()", span="362-362"];
m3_234 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="!waitResult", span="378-378"];
m3_230 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="!waitResult", span="370-370"];
m3_227 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="var outputReader = Task.Factory.StartNew(readStream, process.StandardOutput)", span="365-365"];
m3_228 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="var errorReader = Task.Factory.StartNew(readStream, process.StandardError)", span="366-366"];
m3_219 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="process.StartInfo.UseShellExecute = false", span="355-355"];
m3_220 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="process.StartInfo.CreateNoWindow = true", span="356-356"];
m3_221 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="process.StartInfo.RedirectStandardError = true", span="357-357"];
m3_229 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="bool waitResult = processWaiter.Result", span="368-368"];
m3_226 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.RunZipper(string, string)", file="EmaCrossAlphaModel.cs", label="var processWaiter = Task.Factory.StartNew(() => process.WaitForExit(execTimeout * 1000))", span="364-364"];
m3_187 [cluster="Unk.Open", file="EmaCrossAlphaModel.cs", label="Entry Unk.Open", span=""];
m3_61 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m3_133 [cluster="Unk.First", file="EmaCrossAlphaModel.cs", label="Entry Unk.First", span=""];
m3_171 [cluster="System.IO.Directory.GetParent(string)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.Directory.GetParent(string)", span="0-0"];
m3_157 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Package(System.DateTime)", file="EmaCrossAlphaModel.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Package(System.DateTime)", span="263-263"];
m3_160 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Package(System.DateTime)", file="EmaCrossAlphaModel.cs", label="var destination = Path.Combine(_destination, ''option'')", span="269-269"];
m3_163 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Package(System.DateTime)", file="EmaCrossAlphaModel.cs", label="Parallel.ForEach(files, parallelOptionsZipping, file =>\r\n            {\r\n                try\r\n                {\r\n                    var outputFileName = file.Key + ''.zip'';\r\n                    // Create and open a new ZIP file\r\n                    var filesToCompress = Directory.GetFiles(file.Key, ''*.csv'', SearchOption.AllDirectories);\r\n                    var zip = ZipFile.Open(outputFileName, ZipArchiveMode.Create);\r\n\r\n                    Log.Trace(''AlgoSeekOptionsConverter.Package(): Zipping '' + outputFileName);\r\n\r\n                    foreach (var fileToCompress in filesToCompress)\r\n                    {\r\n                        // Add the entry for each file\r\n                        zip.CreateEntryFromFile(fileToCompress, Path.GetFileName(fileToCompress), CompressionLevel.Optimal);\r\n                    }\r\n\r\n                    // Dispose of the object when we are done\r\n                    zip.Dispose();\r\n\r\n                    try\r\n                    {\r\n                        Directory.Delete(file.Key, true);\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        Log.Error(''AlgoSeekOptionsConverter.Package(): Directory.Delete returned error: '' + err.Message);\r\n                    }\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Log.Error(''File: {0} Err: {1} Source {2} Stack {3}'', file, err.Message, err.Source, err.StackTrace);\r\n                }\r\n            })", span="277-310"];
m3_159 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Package(System.DateTime)", file="EmaCrossAlphaModel.cs", label="Log.Trace(''AlgoSeekOptionsConverter.Package(): Zipping all files ...'')", span="267-267"];
m3_161 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Package(System.DateTime)", file="EmaCrossAlphaModel.cs", label="var dateMask = date.ToString(DateFormat.EightCharacter)", span="270-270"];
m3_162 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Package(System.DateTime)", file="EmaCrossAlphaModel.cs", label="var files =\r\n                Directory.EnumerateFiles(destination, dateMask + ''*.csv'', SearchOption.AllDirectories)\r\n                .GroupBy(x => Directory.GetParent(x).FullName)", span="272-274"];
m3_158 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Package(System.DateTime)", file="EmaCrossAlphaModel.cs", label="var zipper = OS.IsWindows ? ''C:/Program Files/7-Zip/7z.exe'' : ''7z''", span="265-265"];
m3_164 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Package(System.DateTime)", file="EmaCrossAlphaModel.cs", label="Exit QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter.Package(System.DateTime)", span="263-263"];
m3_107 [cluster="Unk.Select", file="EmaCrossAlphaModel.cs", label="Entry Unk.Select", span=""];
m3_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="EmaCrossAlphaModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m3_134 [cluster="Unk.Replace", file="EmaCrossAlphaModel.cs", label="Entry Unk.Replace", span=""];
m3_246 [cluster="System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", file="EmaCrossAlphaModel.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew<TResult>(System.Func<TResult>)", span="0-0"];
m3_62 [cluster="System.IO.Path.GetFileName(string)", file="EmaCrossAlphaModel.cs", label="Entry System.IO.Path.GetFileName(string)", span="0-0"];
m3_258 [file="EmaCrossAlphaModel.cs", label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", span=""];
m3_260 [file="EmaCrossAlphaModel.cs", label=start, span=""];
m3_263 [file="EmaCrossAlphaModel.cs", label=totalFiles, span=""];
m3_264 [file="EmaCrossAlphaModel.cs", label=totalFilesProcessed, span=""];
m3_262 [file="EmaCrossAlphaModel.cs", label=totalLinesProcessed, span=""];
m3_259 [file="EmaCrossAlphaModel.cs", label=zipper, span=""];
m3_261 [file="EmaCrossAlphaModel.cs", label=random, span=""];
m3_265 [file="EmaCrossAlphaModel.cs", label="System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>", span=""];
m3_266 [file="EmaCrossAlphaModel.cs", label="System.Threading.ManualResetEvent", span=""];
m3_268 [file="EmaCrossAlphaModel.cs", label="System.DateTime", span=""];
m3_269 [file="EmaCrossAlphaModel.cs", label=bool, span=""];
m3_270 [file="EmaCrossAlphaModel.cs", label=extensions, span=""];
m3_267 [file="EmaCrossAlphaModel.cs", label=tickType, span=""];
m3_271 [file="EmaCrossAlphaModel.cs", label=process, span=""];
m4_138 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="69-69"];
m4_143 [cluster="QuantConnect.Interfaces.IMessagingHandler.Initialize()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Initialize()", span="32-32"];
m4_263 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", span="168-168"];
m4_180 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m4_158 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="91-91"];
m4_141 [cluster="Unk.Error", file="FractalAdaptiveMovingAverage.cs", label="Entry Unk.Error", span=""];
m4_225 [cluster="QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed.LiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IDataQueueHandler)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed.LiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IDataQueueHandler)", span="157-157"];
m4_164 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="168-168"];
m4_181 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, decimal, double)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, decimal, double)", span="118-118"];
m4_186 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="59-59"];
m4_153 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="74-74"];
m4_140 [cluster="System.DateTime.ToShortTimeString()", file="FractalAdaptiveMovingAverage.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m4_159 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="FractalAdaptiveMovingAverage.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m4_162 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="416-416"];
m4_142 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="31-31"];
m4_168 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="100-100"];
m4_203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="142-142"];
m4_196 [cluster="System.Environment.Exit(int)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m4_197 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="Entry lambda expression", span="318-336"];
m4_198 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler)", span="326-326"];
m4_199 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label=Exception, span="328-328"];
m4_201 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="334-334"];
m4_200 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="Log.Error(''Engine.Run'', err)", span="331-331"];
m4_202 [cluster="lambda expression", file="FractalAdaptiveMovingAverage.cs", label="Exit lambda expression", span="318-336"];
m4_195 [cluster="System.Console.Read()", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Console.Read()", span="0-0"];
m4_149 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m4_155 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="574-574"];
m4_249 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="var rh = default(IResultHandler)", span="576-576"];
m4_250 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="job.ResultEndpoint", span="578-578"];
m4_253 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="rh = new ConsoleResultHandler(job)", span="583-583"];
m4_256 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="rh = new BacktestingResultHandler((BacktestNodePacket)job)", span="589-589"];
m4_259 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="rh = new LiveTradingResultHandler((LiveNodePacket)job)", span="595-595"];
m4_251 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="ResultHandlerEndpoint.Console", span="581-581"];
m4_254 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="ResultHandlerEndpoint.Backtesting", span="587-587"];
m4_257 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="ResultHandlerEndpoint.LiveTrading", span="593-593"];
m4_252 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Console Output.'')", span="582-582"];
m4_255 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Backtesting API Result Endpoint.'')", span="588-588"];
m4_258 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Live Trading API Result Endpoint.'')", span="594-594"];
m4_260 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="return rh;", span="598-598"];
m4_261 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="574-574"];
m4_171 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="91-91"];
m4_185 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="181-181"];
m4_247 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="61-61"];
m4_163 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="327-327"];
m4_167 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="521-521"];
m4_226 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="var rth = default(IRealTimeHandler)", span="523-523"];
m4_227 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="job.RealTimeEndpoint", span="524-524"];
m4_230 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="rth = new BacktestingRealTimeHandler(algorithm, job)", span="529-529"];
m4_233 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="rth = new LiveTradingRealTimeHandler(algorithm, feed, results)", span="535-535"];
m4_228 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="RealTimeEndpoint.Backtesting", span="527-527"];
m4_231 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="RealTimeEndpoint.LiveTrading", span="533-533"];
m4_229 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected Backtesting RealTimeEvent Handler'')", span="528-528"];
m4_232 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected LiveTrading RealTimeEvent Handler'')", span="534-534"];
m4_234 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="return rth;", span="538-538"];
m4_235 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="521-521"];
m4_165 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="485-485"];
m4_205 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="var df = default(IDataFeed)", span="487-487"];
m4_206 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="job.DataEndpoint", span="488-488"];
m4_208 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="df = new BacktestingDataFeed(algorithm, (BacktestNodePacket)job)", span="493-493"];
m4_211 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="df = new DatabaseDataFeed(algorithm, (BacktestNodePacket)job)", span="498-498"];
m4_214 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="df = new FileSystemDataFeed(algorithm, (BacktestNodePacket)job)", span="504-504"];
m4_218 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="df = new LiveTradingDataFeed(algorithm, (LiveNodePacket)job, ds)", span="511-511"];
m4_207 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="DataFeedEndpoint.Backtesting", span="492-492"];
m4_210 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="DataFeedEndpoint.Database", span="497-497"];
m4_213 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="DataFeedEndpoint.FileSystem", span="503-503"];
m4_216 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="DataFeedEndpoint.LiveTrading", span="509-509"];
m4_209 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Backtesting Datafeed'')", span="494-494"];
m4_212 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Database Datafeed'')", span="499-499"];
m4_215 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected FileSystem Datafeed'')", span="505-505"];
m4_217 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="var ds = Composer.Instance.GetExportedValueByTypeName<IDataQueueHandler>(Config.Get(''data-queue-handler'', ''LiveDataQueue''))", span="510-510"];
m4_219 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected LiveTrading Datafeed'')", span="512-512"];
m4_220 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="return df;", span="515-515"];
m4_221 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="485-485"];
m4_248 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m4_264 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", span="155-155"];
m4_174 [cluster="System.Exception.Exception(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m4_157 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", span="82-82"];
m4_194 [cluster="System.IDisposable.Dispose()", file="FractalAdaptiveMovingAverage.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m4_172 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="82-82"];
m4_222 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="46-46"];
m4_152 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", span="38-38"];
m4_145 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m4_146 [cluster="System.Threading.Thread.Start()", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m4_166 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="550-550"];
m4_238 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="ITransactionHandler th", span="552-552"];
m4_239 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="job.TransactionEndpoint", span="553-553"];
m4_241 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="th = new BrokerageTransactionHandler(algorithm, brokerage)", span="556-556"];
m4_243 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="th = new BacktestingTransactionHandler(algorithm, brokerage as BacktestingBrokerage)", span="562-562"];
m4_240 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="TransactionHandlerEndpoint.Brokerage", span="555-555"];
m4_242 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetTransactionHandler(): Selected Brokerage Transaction Models.'')", span="557-557"];
m4_244 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetTransactionHandler(): Selected Backtesting Transaction Models.'')", span="563-563"];
m4_245 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="return th;", span="566-566"];
m4_246 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="550-550"];
m4_151 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="56-56"];
m4_280 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="68-68"];
m4_262 [cluster="QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="128-128"];
m4_193 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="113-113"];
m4_223 [cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.DatabaseDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.DatabaseDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="152-152"];
m4_236 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="100-100"];
m4_175 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="119-119"];
m4_279 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="111-111"];
m4_192 [cluster="System.Threading.Thread.Abort()", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m4_154 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="607-607"];
m4_265 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="var sh = default(ISetupHandler)", span="609-609"];
m4_266 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label=setupMethod, span="611-611"];
m4_267 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="SetupHandlerEndpoint.Console", span="614-614"];
m4_270 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="SetupHandlerEndpoint.Backtesting", span="619-619"];
m4_273 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="SetupHandlerEndpoint.Brokerage", span="623-623"];
m4_268 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="sh = new ConsoleSetupHandler()", span="615-615"];
m4_269 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Console Algorithm Setup Handler.'')", span="616-616"];
m4_271 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="sh = new BacktestingSetupHandler()", span="620-620"];
m4_272 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Backtesting Algorithm Setup Handler.'')", span="621-621"];
m4_274 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="sh = new BrokerageSetupHandler()", span="624-624"];
m4_275 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Brokerage Algorithm Setup Handler.'')", span="625-625"];
m4_276 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="return sh;", span="628-628"];
m4_277 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="607-607"];
m4_182 [cluster="double.ToString(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry double.ToString(string)", span="0-0"];
m4_191 [cluster="System.Threading.Thread.Sleep(int)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m4_144 [cluster="QuantConnect.Interfaces.IJobQueueHandler.Initialize()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.Initialize()", span="32-32"];
m4_147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="583-583"];
m4_190 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m4_148 [cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="38-38"];
m4_187 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="106-106"];
m4_0 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Engine.Main(string[])", span="168-168"];
m4_1 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var algorithmPath = ''''", span="171-171"];
m4_2 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="string mode = ''RELEASE''", span="172-172"];
m4_3 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="AlgorithmNodePacket job = null", span="173-173"];
m4_8 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + Constants.Version + '' Mode: '' + mode)", span="184-184"];
m4_4 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var algorithm = default(IAlgorithm)", span="174-174"];
m4_5 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var startTime = DateTime.Now", span="175-175"];
m4_6 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.LogHandler = Composer.Instance.GetExportedValueByTypeName<ILogHandler>(Config.Get(''log-handler'', ''CompositeLogHandler''))", span="176-176"];
m4_7 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="183-183"];
m4_9 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="185-185"];
m4_10 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="186-186"];
m4_11 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Api = Composer.Instance.GetExportedValueByTypeName<IApi>(Config.Get(''api-handler''))", span="192-192"];
m4_12 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Notify = Composer.Instance.GetExportedValueByTypeName<IMessagingHandler>(Config.Get(''messaging-handler''))", span="193-193"];
m4_13 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="JobQueue = Composer.Instance.GetExportedValueByTypeName<IJobQueueHandler>(Config.Get(''job-queue-handler''))", span="194-194"];
m4_14 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label=CompositionException, span="196-196"];
m4_16 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Api.Initialize()", span="201-201"];
m4_15 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="197-197"];
m4_17 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Notify.Initialize()", span="202-202"];
m4_18 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="JobQueue.Initialize()", span="203-203"];
m4_19 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var statusPingThread = new Thread(StateCheck.Ping.Run)", span="206-206"];
m4_20 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="statusPingThread.Start()", span="207-207"];
m4_131 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="statusPingThread != null && statusPingThread.IsAlive", span="467-467"];
m4_132 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="statusPingThread.Abort()", span="467-467"];
m4_21 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="AlgorithmManager.ResetManager()", span="212-212"];
m4_22 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var initializeComplete = false", span="215-215"];
m4_23 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Thread threadFeed = null", span="216-216"];
m4_24 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Thread threadTransactions = null", span="217-217"];
m4_116 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadFeed != null && threadFeed.IsAlive", span="432-432"];
m4_117 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadFeed.Abort()", span="432-432"];
m4_25 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Thread threadResults = null", span="218-218"];
m4_118 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadTransactions != null && threadTransactions.IsAlive", span="433-433"];
m4_119 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadTransactions.Abort()", span="433-433"];
m4_26 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Thread threadRealTime = null", span="219-219"];
m4_27 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="job = JobQueue.NextJob(out algorithmPath)", span="224-224"];
m4_28 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="job.Version != Constants.Version || (LiveMode && job.Redelivered)", span="228-228"];
m4_29 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Error(''Engine.Run(): Job Version: '' + job.Version + ''  Deployed Version: '' + Constants.Version)", span="230-230"];
m4_30 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="JobQueue.AcknowledgeJob(job)", span="234-234"];
m4_31 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="235-235"];
m4_32 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Notify.SetChannel(job.Channel)", span="236-236"];
m4_33 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Notify.RuntimeError(job.AlgorithmId, _collapseMessage)", span="237-237"];
m4_35 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="job == null", span="240-240"];
m4_36 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Notify.SetChannel(job.Channel)", span="244-244"];
m4_37 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="SetupHandler = GetSetupHandler(job.SetupEndpoint)", span="247-247"];
m4_38 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler = GetResultHandler(job)", span="250-250"];
m4_41 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="algorithm = SetupHandler.CreateAlgorithmInstance(algorithmPath)", span="257-257"];
m4_42 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="initializeComplete = SetupHandler.Setup(algorithm, out _brokerage, job)", span="260-260"];
m4_48 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError)", span="270-270"];
m4_52 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="277-277"];
m4_55 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="287-287"];
m4_59 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="DataFeed            = GetDataFeedHandler(algorithm, job)", span="293-293"];
m4_60 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="TransactionHandler  = GetTransactionHandler(algorithm, _brokerage, ResultHandler, job)", span="294-294"];
m4_61 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="RealTimeHandler     = GetRealTimeHandler(algorithm, _brokerage, DataFeed, ResultHandler, job)", span="295-295"];
m4_63 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Running)", span="301-301"];
m4_70 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Constants.Version))", span="313-313"];
m4_71 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var complete = Isolator.ExecuteWithTimeLimit(SetupHandler.MaximumRuntime, AlgorithmManager.TimeLoopWithinLimits, () =>\r\n                        {\r\n                            try\r\n                            {\r\n                                //Run Algorithm Job:\r\n                                // -> Using this Data Feed, \r\n                                // -> Send Orders to this TransactionHandler, \r\n                                // -> Send Results to ResultHandler.\r\n                                AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler);\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                //Debugging at this level is difficult, stack trace needed.\r\n                                Log.Error(''Engine.Run'', err);\r\n                            }\r\n\r\n                            Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n\r\n                        }, job.UserPlan == UserPlan.Free ? 1024 : MaximumRamAllocation)", span="318-336"];
m4_86 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err.StackTrace)", span="361-361"];
m4_103 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler.DebugMessage(string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                            job.AlgorithmId, totalSeconds.ToString(''F2''), ((AlgorithmManager.DataPoints / (double)1000) / totalSeconds).ToString(''F0''), AlgorithmManager.DataPoints.ToString(''N0'')))", span="406-407"];
m4_104 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statistics, banner)", span="409-409"];
m4_34 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="job = null", span="238-238"];
m4_39 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadResults = new Thread(ResultHandler.Run, 0) {Name = ''Result Thread''}", span="251-251"];
m4_40 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadResults.Start()", span="252-252"];
m4_120 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadResults != null && threadResults.IsAlive", span="434-434"];
m4_121 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadResults.Abort()", span="434-434"];
m4_43 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || SetupHandler.Errors.Count > 0", span="263-263"];
m4_45 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="267-267"];
m4_56 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="algorithm.SetLiveMode(LiveMode)", span="288-288"];
m4_57 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="algorithm.SetLocked()", span="289-289"];
m4_58 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler.SetAlgorithm(algorithm)", span="292-292"];
m4_75 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="algorithm.RunTimeError != null", span="345-345"];
m4_76 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="throw algorithm.RunTimeError;", span="347-347"];
m4_88 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var orders = new Dictionary<int, Order>(algorithm.Transactions.Orders)", span="374-374"];
m4_98 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var profitLoss =\r\n                                    new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="393-394"];
m4_99 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="statistics = Statistics.Statistics.Generate(equity, profitLoss, performance,\r\n                                    SetupHandler.StartingPortfolioValue, algorithm.Portfolio.TotalFees, 252)", span="395-396"];
m4_53 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label=initializeComplete, span="281-281"];
m4_44 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="initializeComplete = false", span="265-265"];
m4_49 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label=Exception, span="273-273"];
m4_46 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="errorMessage += String.Join('','', SetupHandler.Errors)", span="268-268"];
m4_47 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler.RuntimeError(errorMessage)", span="269-269"];
m4_50 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="275-275"];
m4_51 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler.RuntimeError(runtimeMessage, err.StackTrace)", span="276-276"];
m4_54 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="startTime = DateTime.Now", span="284-284"];
m4_110 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler.Exit()", span="423-423"];
m4_102 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="405-405"];
m4_62 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="SetupHandler.SetupErrorHandler(ResultHandler, _brokerage)", span="298-298"];
m4_64 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadFeed = new Thread(DataFeed.Run) {Name = ''DataFeed Thread''}", span="304-304"];
m4_65 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadTransactions = new Thread(TransactionHandler.Run) {Name = ''Transaction Thread''}", span="305-305"];
m4_67 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadFeed.Start()", span="309-309"];
m4_66 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadRealTime = new Thread(RealTimeHandler.Run) {Name = ''RealTime Thread''}", span="306-306"];
m4_68 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadTransactions.Start()", span="310-310"];
m4_69 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="threadRealTime.Start()", span="311-311"];
m4_72 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="!complete", span="338-338"];
m4_73 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Error(''Engine.Main(): Failed to complete in time: '' + SetupHandler.MaximumRuntime.ToString(''F''))", span="340-340"];
m4_74 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="throw new Exception(''Failed to complete algorithm within '' + SetupHandler.MaximumRuntime.ToString(''F'') + '' seconds. Please make it run faster.'');", span="341-341"];
m4_77 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label=Exception, span="350-350"];
m4_87 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var charts = new Dictionary<string, Chart>(ResultHandler.Charts)", span="373-373"];
m4_78 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Error(''Engine.Run(): Breaking out of parent try-catch: '' + err.Message + '' '' + err.StackTrace)", span="353-353"];
m4_79 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="DataFeed != null", span="354-354"];
m4_80 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="DataFeed.Exit()", span="354-354"];
m4_81 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler != null", span="355-355"];
m4_82 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var message = ''Runtime Error: '' + err.Message", span="357-357"];
m4_83 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="358-358"];
m4_84 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler.LogMessage(message)", span="359-359"];
m4_85 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="ResultHandler.RuntimeError(message, err.StackTrace)", span="360-360"];
m4_95 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="charts.ContainsKey(strategyEquityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey)", span="387-389"];
m4_96 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="391-391"];
m4_97 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="392-392"];
m4_89 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var holdings = new Dictionary<string, Holding>()", span="375-375"];
m4_90 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var statistics = new Dictionary<string, string>()", span="376-376"];
m4_91 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var banner = new Dictionary<string, string>()", span="377-377"];
m4_92 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="string strategyEquityKey = ''Strategy Equity''", span="382-382"];
m4_93 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="string equityKey = ''Equity''", span="383-383"];
m4_94 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="384-384"];
m4_100 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label=Exception, span="399-399"];
m4_101 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Error(''Algorithm.Node.Engine(): Error generating statistics packet: '' + err.Message)", span="401-401"];
m4_105 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label=Exception, span="411-411"];
m4_107 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="TransactionHandler.Exit()", span="417-417"];
m4_106 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Error(''Engine.Main(): Error sending analysis result: '' + err.Message + ''  ST >> '' + err.StackTrace)", span="413-413"];
m4_108 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="DataFeed.Exit()", span="418-418"];
m4_109 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="RealTimeHandler.Exit()", span="419-419"];
m4_111 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="StateCheck.Ping.Exit()", span="424-424"];
m4_112 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="var ts = Stopwatch.StartNew()", span="427-427"];
m4_113 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="(ResultHandler.IsActive || (TransactionHandler != null && TransactionHandler.IsActive) || (DataFeed != null && DataFeed.IsActive)) && ts.ElapsedMilliseconds < 30 * 1000", span="428-428"];
m4_114 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Thread.Sleep(100)", span="430-430"];
m4_115 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="430-430"];
m4_122 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="_brokerage != null", span="435-435"];
m4_123 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="_brokerage.Disconnect()", span="437-437"];
m4_124 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="SetupHandler != null", span="439-439"];
m4_125 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="SetupHandler.Dispose()", span="441-441"];
m4_126 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="443-443"];
m4_127 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label=Exception, span="445-445"];
m4_129 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label=IsLocal, span="464-464"];
m4_128 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.Error(''Engine.Main(): Error running algorithm: '' + err.Message + '' >> '' + err.StackTrace)", span="447-447"];
m4_130 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Console.Read()", span="464-464"];
m4_133 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.LogHandler != null", span="469-469"];
m4_134 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Log.LogHandler.Dispose()", span="471-471"];
m4_135 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Environment.Exit(0)", span="474-474"];
m4_136 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="FractalAdaptiveMovingAverage.cs", label="Exit QuantConnect.Lean.Engine.Engine.Main(string[])", span="168-168"];
m4_237 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="102-102"];
m4_156 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0"];
m4_178 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_161 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="322-322"];
m4_169 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="189-189"];
m4_184 [cluster="string.Format(string, params object[])", file="FractalAdaptiveMovingAverage.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m4_278 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="69-69"];
m4_204 [cluster="QuantConnect.Logging.Log.Error(string, System.Exception, string, bool)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Logging.Log.Error(string, System.Exception, string, bool)", span="104-104"];
m4_224 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="129-129"];
m4_170 [cluster="string.Format(string, object, object)", file="FractalAdaptiveMovingAverage.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m4_177 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m4_183 [cluster="long.ToString(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry long.ToString(string)", span="0-0"];
m4_139 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129"];
m4_176 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="103-103"];
m4_189 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="83-83"];
m4_173 [cluster="System.TimeSpan.ToString(string)", file="FractalAdaptiveMovingAverage.cs", label="Entry System.TimeSpan.ToString(string)", span="0-0"];
m4_137 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="83-83"];
m4_188 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="214-214"];
m4_160 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="117-117"];
m4_150 [cluster="QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="FractalAdaptiveMovingAverage.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44"];
m4_281 [file="FractalAdaptiveMovingAverage.cs", label=job, span=""];
m4_282 [file="FractalAdaptiveMovingAverage.cs", label=algorithm, span=""];
m5_14 [cluster="System.Console.ResetColor()", file="FractalAdaptiveMovingAverageTests.cs", label="Entry System.Console.ResetColor()", span="0-0"];
m5_2 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", span="42-42"];
m5_3 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="FractalAdaptiveMovingAverageTests.cs", label="_trace = Console.Out", span="46-46"];
m5_5 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", color=red, community=0, file="FractalAdaptiveMovingAverageTests.cs", label="3: _dateFormat = dateFormat", span="48-48"];
m5_4 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="FractalAdaptiveMovingAverageTests.cs", label="_error = Console.Error", span="47-47"];
m5_6 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", span="42-42"];
m5_12 [cluster="System.DateTime.ToString(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m5_18 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Trace(string)", span="75-75"];
m5_19 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="FractalAdaptiveMovingAverageTests.cs", label="_trace.WriteLine(DateTime.Now.ToString(_dateFormat) + '' Trace:: '' + text)", span="77-77"];
m5_20 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Trace(string)", span="75-75"];
m5_13 [cluster="System.IO.TextWriter.WriteLine(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m5_7 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Error(string)", span="55-55"];
m5_8 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Console.ForegroundColor = ConsoleColor.Red", span="57-57"];
m5_9 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="FractalAdaptiveMovingAverageTests.cs", label="_error.WriteLine(DateTime.Now.ToString(_dateFormat) + '' ERROR:: '' + text)", span="58-58"];
m5_10 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Console.ResetColor()", span="59-59"];
m5_11 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Error(string)", span="55-55"];
m5_21 [cluster="QuantConnect.Logging.ConsoleLogHandler.Dispose()", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Dispose()", span="84-84"];
m5_22 [cluster="QuantConnect.Logging.ConsoleLogHandler.Dispose()", file="FractalAdaptiveMovingAverageTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Dispose()", span="84-84"];
m5_0 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33"];
m5_1 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="FractalAdaptiveMovingAverageTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33"];
m5_15 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Debug(string)", span="66-66"];
m5_16 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="FractalAdaptiveMovingAverageTests.cs", label="_trace.WriteLine(DateTime.Now.ToString(_dateFormat) + '' DEBUG:: '' + text)", span="68-68"];
m5_17 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="FractalAdaptiveMovingAverageTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Debug(string)", span="66-66"];
m5_23 [file="FractalAdaptiveMovingAverageTests.cs", label="QuantConnect.Logging.ConsoleLogHandler", span=""];
m6_334 [cluster="QuantConnect.Holding.Holding()", file="Insight.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m6_122 [cluster="Oanda.RestV20.Session.TransactionStreamSession.TransactionStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20)", file="Insight.cs", label="Entry Oanda.RestV20.Session.TransactionStreamSession.TransactionStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20)", span="30-30"];
m6_116 [cluster="Oanda.RestV20.Api.DefaultApi.CancelOrder(string, string, string, string)", file="Insight.cs", label="Entry Oanda.RestV20.Api.DefaultApi.CancelOrder(string, string, string, string)", span="1979-1979"];
m6_136 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", span="301-301"];
m6_137 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="Insight.cs", label="_ratesSession != null", span="303-303"];
m6_138 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="Insight.cs", label="_ratesSession.DataReceived -= OnPricingDataReceived", span="305-305"];
m6_139 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="Insight.cs", label="_ratesSession.StopSession()", span="306-306"];
m6_140 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", span="301-301"];
m6_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="Insight.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="56-56"];
m6_7 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="46-46"];
m6_215 [cluster="Oanda.RestV20.Api.DefaultApi.GetBasePath()", file="Insight.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetBasePath()", span="1911-1911"];
m6_44 [cluster="Oanda.RestV20.Api.DefaultApi.GetPrices(string, string, System.Collections.Generic.List<string>, string, string, bool?)", file="Insight.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetPrices(string, string, System.Collections.Generic.List<string>, string, string, bool?)", span="4286-4286"];
m6_195 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="Insight.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_161 [cluster="Unk.ToString", file="Insight.cs", label="Entry Unk.ToString", span=""];
m6_274 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="Insight.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m6_257 [cluster="System.DateTime.ToString(string)", file="Insight.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m6_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="Insight.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", span="88-88"];
m6_31 [cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Insight.cs", label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="160-160"];
m6_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="Insight.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="37-37"];
m6_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", file="Insight.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ISubscriptionDataSourceReader.Read(QuantConnect.Data.SubscriptionDataSource)", span="23-23"];
m6_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="Insight.cs", label="var config = request.Configuration", span="90-90"];
m6_191 [cluster="Unk.GetTickDateTimeFromString", file="Insight.cs", label="Entry Unk.GetTickDateTimeFromString", span=""];
m6_103 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Insight.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m6_189 [cluster="Unk.GetBrokerageSecurityType", file="Insight.cs", label="Entry Unk.GetBrokerageSecurityType", span=""];
m6_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="Insight.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", span="88-88"];
m6_220 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="Insight.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m6_28 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="Insight.cs", label="return response.Positions.Select(ConvertHolding).ToList();", span="112-112"];
m6_78 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Insight.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_372 [cluster="Oanda.RestV20.Model.MarketIfTouchedOrderRequest.MarketIfTouchedOrderRequest(Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="Insight.cs", label="Entry Oanda.RestV20.Model.MarketIfTouchedOrderRequest.MarketIfTouchedOrderRequest(Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="246-246"];
m6_315 [cluster="NotSupportedException.cstr", file="Insight.cs", label="Entry NotSupportedException.cstr", span=""];
m6_77 [cluster="Oanda.RestV20.Api.DefaultApi.CreateOrder(string, string, string, string)", file="Insight.cs", label="Entry Oanda.RestV20.Api.DefaultApi.CreateOrder(string, string, string, string)", span="96-96"];
m6_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="Insight.cs", label=entriesForDate, span="82-82"];
m6_79 [cluster="System.Convert.ToDecimal(string)", file="Insight.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m6_104 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Insight.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m6_106 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", span="247-247"];
m6_112 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="_apiRest.CancelOrder(Authorization, AccountId, orderId)", span="259-259"];
m6_113 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''Oanda Cancel Order Event'') { Status = OrderStatus.Canceled })", span="260-260"];
m6_111 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="order.BrokerId", span="257-257"];
m6_108 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="!order.BrokerId.Any()", span="251-251"];
m6_114 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="return true;", span="263-263"];
m6_107 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="Log.Trace(''OandaBrokerage.CancelOrder(): '' + order)", span="249-249"];
m6_109 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="Log.Trace(''OandaBrokerage.CancelOrder(): Unable to cancel order without BrokerId.'')", span="253-253"];
m6_110 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="return false;", span="254-254"];
m6_115 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", span="247-247"];
m6_374 [cluster="System.NotSupportedException.NotSupportedException(string)", file="Insight.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m6_135 [cluster="Oanda.RestV20.Session.PricingStreamSession.PricingStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20, System.Collections.Generic.List<string>)", file="Insight.cs", label="Entry Oanda.RestV20.Session.PricingStreamSession.PricingStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20, System.Collections.Generic.List<string>)", span="34-34"];
m6_141 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", span="314-314"];
m6_142 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="Insight.cs", label="return OandaBrokerage.GetDateTimeFromString(time.Remove(25, 3));", span="317-317"];
m6_143 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", span="314-314"];
m6_223 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", span="444-444"];
m6_224 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="var requestString = _apiStreaming.GetBasePath() + ''/accounts/'' + AccountId + ''/transactions/stream''", span="446-446"];
m6_227 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="request.Headers[HttpRequestHeader.Authorization] = Authorization", span="450-450"];
m6_228 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="request.Headers[OandaAgentKey] = Agent", span="451-451"];
m6_225 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="var request = WebRequest.CreateHttp(requestString)", span="448-448"];
m6_226 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="request.Method = ''GET''", span="449-449"];
m6_229 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="return request.GetResponse();", span="455-455"];
m6_232 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="throw;", span="461-461"];
m6_235 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="throw new Exception(reader.ReadToEnd());", span="467-467"];
m6_231 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="ex.Response == null", span="459-459"];
m6_234 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="var reader = new StreamReader(stream)", span="465-465"];
m6_230 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label=WebException, span="457-457"];
m6_233 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="var stream = GetResponseStream(ex.Response)", span="464-464"];
m6_236 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", span="444-444"];
m6_84 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m6_222 [cluster="System.IO.StreamReader.ReadToEnd()", file="Insight.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m6_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="Insight.cs", label="var mapFile = config.Symbol.HasUnderlying ?\r\n                        _mapFileResolver.ResolveMapFile(config.Symbol.Underlying.ID.Symbol, config.Symbol.Underlying.ID.Date) :\r\n                        _mapFileResolver.ResolveMapFile(config.Symbol.ID.Symbol, config.Symbol.ID.Date)", span="94-96"];
m6_312 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="Insight.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42"];
m6_80 [cluster="System.Convert.ToInt32(string)", file="Insight.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m6_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="Insight.cs", label="_dataCacheProvider = new SingleEntryDataCacheProvider(dataProvider)", span="72-72"];
m6_6 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", span="63-63"];
m6_5 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="Insight.cs", label="_apiStreaming = new DefaultApi(basePathStreaming)", span="77-77"];
m6_12 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", span="83-83"];
m6_11 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="Insight.cs", label="return response.Instruments.Select(x => x.Name).ToList();", span="87-87"];
m6_13 [cluster="Oanda.RestV20.Api.DefaultApi.GetAccountInstruments(string, string, System.Collections.Generic.List<string>)", file="Insight.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetAccountInstruments(string, string, System.Collections.Generic.List<string>)", span="3245-3245"];
m6_46 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="142-142"];
m6_49 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="143-143"];
m6_85 [cluster="lambda expression", file="Insight.cs", label="Entry lambda expression", span="180-180"];
m6_86 [cluster="lambda expression", color=green, community=0, file="Insight.cs", label="0: Convert.ToInt32(trade.Units)", span="180-180"];
m6_87 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="180-180"];
m6_48 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="142-142"];
m6_47 [cluster="lambda expression", file="Insight.cs", label="x.Instrument", span="142-142"];
m6_51 [cluster="lambda expression", file="Insight.cs", label="Exit lambda expression", span="143-143"];
m6_50 [cluster="lambda expression", file="Insight.cs", label="new Tick { BidPrice = x.Bids.Last().Price.ToDecimal(), AskPrice = x.Asks.Last().Price.ToDecimal() }", span="143-143"];
m6_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="Insight.cs", label="_tradableDaysProvider(request)", span="74-74"];
m6_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="Insight.cs", label="var currentSymbol = request.Configuration.MappedSymbol", span="76-76"];
m6_260 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", span="682-682"];
m6_335 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="CandlestickGranularity interval", span="684-684"];
m6_336 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label=resolution, span="686-686"];
m6_345 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="throw new ArgumentException(''Unsupported resolution: '' + resolution);", span="705-705"];
m6_346 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="return interval;", span="708-708"];
m6_337 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="Resolution.Second", span="688-688"];
m6_339 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="Resolution.Minute", span="692-692"];
m6_341 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="Resolution.Hour", span="696-696"];
m6_343 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="Resolution.Daily", span="700-700"];
m6_338 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="interval = CandlestickGranularity.S5", span="689-689"];
m6_340 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="interval = CandlestickGranularity.M1", span="693-693"];
m6_342 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="interval = CandlestickGranularity.H1", span="697-697"];
m6_344 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="interval = CandlestickGranularity.D", span="701-701"];
m6_347 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", span="682-682"];
m6_275 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="Insight.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m6_40 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", span="136-136"];
m6_146 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", span="324-324"];
m6_151 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label=LockerConnectionMonitor, span="332-332"];
m6_152 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="334-334"];
m6_155 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="var order = OrderProvider.GetOrderByBrokerageId(transaction.OrderID)", span="341-341"];
m6_157 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="order.PriceCurrency = SecurityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="344-344"];
m6_159 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee, ''Oanda Fill Event'')\r\n                        {\r\n                            Status = OrderStatus.Filled,\r\n                            FillPrice = transaction.Price.ToDecimal(),\r\n                            FillQuantity = Convert.ToInt32(transaction.Units)\r\n                        })", span="347-352"];
m6_150 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="''HEARTBEAT''", span="331-331"];
m6_154 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="var transaction = obj.ToObject<OrderFillTransaction>()", span="339-339"];
m6_156 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="order != null", span="342-342"];
m6_158 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="int orderFee = 0", span="346-346"];
m6_147 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(json)", span="326-326"];
m6_149 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label=type, span="329-329"];
m6_153 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="''ORDER_FILL''", span="338-338"];
m6_148 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="var type = obj[''type''].ToString()", span="327-327"];
m6_160 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", span="324-324"];
m6_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="Insight.cs", label="request.Configuration.MappedSymbol = GetMappedSymbol(request, date)", span="77-77"];
m6_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", color=green, community=0, file="Insight.cs", label="0: var factory = SubscriptionDataSourceReader.ForSource(source, _dataCacheProvider, request.Configuration, date, false)", span="80-80"];
m6_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="Insight.cs", label="request.Configuration.MappedSymbol = currentSymbol", span="79-79"];
m6_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="Insight.cs", label="var source = sourceFactory.GetSource(request.Configuration, date, false)", span="78-78"];
m6_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="Insight.cs", label="var entriesForDate = factory.Read(source)", span="81-81"];
m6_129 [cluster="Oanda.RestV20.Session.StreamSession.StopSession()", file="Insight.cs", label="Entry Oanda.RestV20.Session.StreamSession.StopSession()", span="73-73"];
m6_41 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="Insight.cs", label="var response = _apiRest.GetPrices(Authorization, AccountId, instruments)", span="138-138"];
m6_9 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", span="83-83"];
m6_10 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="Insight.cs", label="var response = _apiRest.GetAccountInstruments(Authorization, AccountId)", span="85-85"];
m6_54 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", span="152-152"];
m6_73 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="Insight.cs", label="0: OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Filled,\r\n                    FillPrice = marketOrderFillPrice,\r\n                    FillQuantity = marketOrderFillQuantity\r\n                })", span="192-197"];
m6_72 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="order.Type == OrderType.Market", span="189-189"];
m6_59 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="var marketOrderFillPrice = 0m", span="161-161"];
m6_62 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="marketOrderFillPrice = Convert.ToDecimal(fill.Price)", span="166-166"];
m6_64 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="marketOrderFillQuantity = Convert.ToInt32(fill.TradeOpened.Units)", span="170-170"];
m6_66 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="marketOrderFillQuantity = Convert.ToInt32(fill.TradeReduced.Units)", span="175-175"];
m6_68 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="Insight.cs", label="0: marketOrderFillQuantity += fill.TradesClosed.Sum(trade => Convert.ToInt32(trade.Units))", span="180-180"];
m6_60 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="var marketOrderFillQuantity = 0", span="162-162"];
m6_69 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="int orderFee = 0", span="185-185"];
m6_74 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="return true;", span="200-200"];
m6_67 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="Insight.cs", label="0: fill.TradesClosed != null && fill.TradesClosed.Count > 0", span="178-178"];
m6_58 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="var fill = response.Data.OrderFillTransaction", span="160-160"];
m6_65 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="fill.TradeReduced != null && fill.TradeReduced.TradeID.Length > 0", span="173-173"];
m6_55 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="var request = GenerateOrderRequest(order)", span="154-154"];
m6_56 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="var response = _apiRest.CreateOrder(Authorization, AccountId, request)", span="155-155"];
m6_70 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="order.PriceCurrency = SecurityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="186-186"];
m6_71 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee) { Status = OrderStatus.Submitted })", span="187-187"];
m6_57 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="order.BrokerId.Add(response.Data.OrderCreateTransaction.Id)", span="157-157"];
m6_61 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="order.Type == OrderType.Market", span="164-164"];
m6_63 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="fill.TradeOpened != null && fill.TradeOpened.TradeID.Length > 0", span="168-168"];
m6_75 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", span="152-152"];
m6_314 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="Insight.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29"];
m6_316 [cluster="Unk.Add", file="Insight.cs", label="Entry Unk.Add", span=""];
m6_42 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", color=green, community=0, file="Insight.cs", label="1: QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", span=""];
m6_43 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", span="136-136"];
m6_219 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", span="472-472"];
m6_237 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="Insight.cs", label="var stream = response.GetResponseStream()", span="474-474"];
m6_238 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="Insight.cs", label="response.Headers[''Content-Encoding''] == ''gzip''", span="475-475"];
m6_241 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="Insight.cs", label="return stream;", span="480-480"];
m6_239 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="Insight.cs", label="stream != null", span="478-478"];
m6_240 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="Insight.cs", label="stream = new GZipStream(stream, CompressionMode.Decompress)", span="478-478"];
m6_242 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", span="472-472"];
m6_261 [cluster="System.Enum.ToString()", file="Insight.cs", label="Entry System.Enum.ToString()", span="0-0"];
m6_197 [cluster="Unk.Last", file="Insight.cs", label="Entry Unk.Last", span=""];
m6_165 [cluster="Unk.ToInt32", file="Insight.cs", label="Entry Unk.ToInt32", span=""];
m6_198 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="Insight.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m6_373 [cluster="Oanda.RestV20.Model.StopOrderRequest.StopOrderRequest(Oanda.RestV20.Model.StopOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.StopOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.StopOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.StopOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="Insight.cs", label="Entry Oanda.RestV20.Model.StopOrderRequest.StopOrderRequest(Oanda.RestV20.Model.StopOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.StopOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.StopOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.StopOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="246-246"];
m6_144 [cluster="string.Remove(int, int)", file="Insight.cs", label="Entry string.Remove(int, int)", span="0-0"];
m6_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.GetMappedSymbol(QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.DateTime)", file="Insight.cs", label="return mapFile.GetMappedSymbol(date);", span="98-98"];
m6_124 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", span="279-279"];
m6_125 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="Insight.cs", label="_eventsSession != null", span="281-281"];
m6_126 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="Insight.cs", label="_eventsSession.DataReceived -= OnTransactionDataReceived", span="283-283"];
m6_127 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="Insight.cs", label="_eventsSession.StopSession()", span="284-284"];
m6_128 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", span="279-279"];
m6_102 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Insight.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m6_332 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSecurityType(string)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSecurityType(string)", span="936-936"];
m6_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="Insight.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="67-67"];
m6_45 [cluster="Unk.ToDictionary", file="Insight.cs", label="Entry Unk.ToDictionary", span=""];
m6_263 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="Insight.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m6_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="Insight.cs", label="var sourceFactory = (BaseData)ObjectActivator.GetActivator(request.Configuration.Type).Invoke(new object[] { request.Configuration.Type })", span="70-70"];
m6_25 [cluster="Unk.DeserializeObject", file="Insight.cs", label="Entry Unk.DeserializeObject", span=""];
m6_26 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", span="108-108"];
m6_262 [cluster="Oanda.RestV20.Api.DefaultApi.GetInstrumentCandles(string, string, string, string, string, int?, string, string, bool?, bool?, int?, string, string)", file="Insight.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetInstrumentCandles(string, string, string, string, string, int?, string, string, bool?, bool?, int?, string, string)", span="3732-3732"];
m6_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="Insight.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="44-44"];
m6_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="Insight.cs", label="_factorFileProvider = factorFileProvider", span="48-48"];
m6_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="Insight.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="44-44"];
m6_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="Insight.cs", label="_tradableDaysProvider = tradableDaysProvider ?? (request => request.TradableDays)", span="46-46"];
m6_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory.BaseDataSubscriptionEnumeratorFactory(QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="Insight.cs", label="_mapFileResolver = mapFileResolver", span="47-47"];
m6_196 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="Insight.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m6_192 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Insight.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m6_145 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerage.GetDateTimeFromString(string)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaBrokerage.GetDateTimeFromString(string)", span="256-256"];
m6_35 [cluster="Oanda.RestV20.Api.DefaultApi.GetAccountSummary(string, string, string)", file="Insight.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetAccountSummary(string, string, string)", span="3406-3406"];
m6_38 [cluster="string.ToDecimal()", file="Insight.cs", label="Entry string.ToDecimal()", span="248-248"];
m6_193 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="Insight.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m6_163 [cluster="Unk.GetOrderByBrokerageId", file="Insight.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m6_105 [cluster="Oanda.RestV20.Api.DefaultApi.ReplaceOrder(string, string, string, string, string)", file="Insight.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ReplaceOrder(string, string, string, string, string)", span="167-167"];
m6_221 [cluster="System.Exception.Exception(string)", file="Insight.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m6_264 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="529-529"];
m6_265 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var oandaSymbol = SymbolMapper.GetBrokerageSymbol(symbol)", span="531-531"];
m6_268 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var response = _apiRest.GetInstrumentCandles(Authorization, oandaSymbol, null, ''BA'', ToGranularity(resolution).ToString(), OandaBrokerage.MaxBarsPerRequest, startUtc)", span="537-537"];
m6_266 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var startUtc = startTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="532-532"];
m6_267 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var period = resolution == Resolution.Second ? TimeSpan.FromSeconds(5) : resolution.ToTimeSpan()", span="535-535"];
m6_269 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="response.Candles", span="538-538"];
m6_272 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="yield return new QuoteBar(\r\n                    time.ConvertFromUtc(requestedTimeZone),\r\n                    symbol,\r\n                    new Bar(\r\n                        candle.Bid.O.ToDecimal(),\r\n                        candle.Bid.H.ToDecimal(),\r\n                        candle.Bid.L.ToDecimal(),\r\n                        candle.Bid.C.ToDecimal()\r\n                    ),\r\n                    0,\r\n                    new Bar(\r\n                        candle.Ask.O.ToDecimal(),\r\n                        candle.Ask.H.ToDecimal(),\r\n                        candle.Ask.L.ToDecimal(),\r\n                        candle.Ask.C.ToDecimal()\r\n                    ),\r\n                    0,\r\n                    period);", span="544-561"];
m6_271 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="time > endTimeUtc", span="541-541"];
m6_270 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var time = GetTickDateTimeFromString(candle.Time)", span="540-540"];
m6_273 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="529-529"];
m6_333 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="914-914"];
m6_348 [cluster="System.ArgumentException.ArgumentException(string)", file="Insight.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m6_367 [cluster="Oanda.RestV20.Model.MarketOrderRequest.MarketOrderRequest(Oanda.RestV20.Model.MarketOrderRequest.TypeEnum?, string, string, Oanda.RestV20.Model.MarketOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="Insight.cs", label="Entry Oanda.RestV20.Model.MarketOrderRequest.MarketOrderRequest(Oanda.RestV20.Model.MarketOrderRequest.TypeEnum?, string, string, Oanda.RestV20.Model.MarketOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="192-192"];
m6_371 [cluster="decimal.ToString(System.IFormatProvider)", file="Insight.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m6_245 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="492-492"];
m6_246 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var oandaSymbol = SymbolMapper.GetBrokerageSymbol(symbol)", span="494-494"];
m6_250 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var response = _apiRest.GetInstrumentCandles(Authorization, oandaSymbol, null, ''M'', ToGranularity(resolution).ToString(), null, startUtc, endUtc)", span="501-501"];
m6_247 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var startUtc = startTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="495-495"];
m6_248 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var endUtc = endTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="496-496"];
m6_249 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var period = resolution == Resolution.Second ? TimeSpan.FromSeconds(5) : resolution.ToTimeSpan()", span="499-499"];
m6_251 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="response.Candles", span="502-502"];
m6_254 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="yield return new TradeBar(\r\n                    time.ConvertFromUtc(requestedTimeZone),\r\n                    symbol,\r\n                    candle.Bid.O.ToDecimal(),\r\n                    candle.Bid.H.ToDecimal(),\r\n                    candle.Bid.L.ToDecimal(),\r\n                    candle.Bid.C.ToDecimal(),\r\n                    0,\r\n                    period);", span="508-516"];
m6_253 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="time > endTimeUtc", span="505-505"];
m6_252 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="var time = GetTickDateTimeFromString(candle.Time)", span="504-504"];
m6_255 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="492-492"];
m6_194 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="Insight.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m6_76 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", span="716-716"];
m6_349 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="var instrument = SymbolMapper.GetBrokerageSymbol(order.Symbol)", span="718-718"];
m6_350 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="string request", span="720-720"];
m6_353 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="var marketOrderRequest = new MarketOrderRequest\r\n                    {\r\n                        Type = MarketOrderRequest.TypeEnum.MARKET,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString()\r\n                    }", span="724-729"];
m6_356 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="var limitOrderRequest = new LimitOrderRequest\r\n                    {\r\n                        Type = LimitOrderRequest.TypeEnum.LIMIT,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((LimitOrder)order).LimitPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="734-740"];
m6_359 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="var marketIfTouchedOrderRequest = new MarketIfTouchedOrderRequest\r\n                    {\r\n                        Type = MarketIfTouchedOrderRequest.TypeEnum.MARKETIFTOUCHED,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((StopMarketOrder)order).StopPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="745-751"];
m6_362 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="var stopOrderRequest = new StopOrderRequest\r\n                    {\r\n                        Type = StopOrderRequest.TypeEnum.STOP,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((StopLimitOrder)order).StopPrice.ToString(CultureInfo.InvariantCulture),\r\n                        PriceBound = ((StopLimitOrder)order).LimitPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="756-763"];
m6_351 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="order.Type", span="721-721"];
m6_364 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="throw new NotSupportedException(''The order type '' + order.Type + '' is not supported.'');", span="768-768"];
m6_352 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="OrderType.Market", span="723-723"];
m6_354 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="request = JsonConvert.SerializeObject(new { order = marketOrderRequest })", span="730-730"];
m6_355 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="OrderType.Limit", span="733-733"];
m6_357 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="request = JsonConvert.SerializeObject(new { order = limitOrderRequest })", span="741-741"];
m6_358 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="OrderType.StopMarket", span="744-744"];
m6_360 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="request = JsonConvert.SerializeObject(new { order = marketIfTouchedOrderRequest })", span="752-752"];
m6_361 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="OrderType.StopLimit", span="755-755"];
m6_363 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="request = JsonConvert.SerializeObject(new { order = stopOrderRequest })", span="764-764"];
m6_365 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="return request;", span="771-771"];
m6_366 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", span="716-716"];
m6_29 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", span="108-108"];
m6_244 [cluster="System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)", file="Insight.cs", label="Entry System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)", span="0-0"];
m6_27 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="Insight.cs", label="var response = _apiRest.ListOpenPositions(Authorization, AccountId)", span="110-110"];
m6_317 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", span="645-645"];
m6_318 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(position.Instrument)", span="647-647"];
m6_319 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="var symbol = SymbolMapper.GetLeanSymbol(position.Instrument, securityType, Market.Oanda)", span="648-648"];
m6_320 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="var longUnits = Convert.ToInt32(position._Long.Units)", span="650-650"];
m6_321 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="var shortUnits = Convert.ToInt32(position._Short.Units)", span="651-651"];
m6_330 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="return new Holding\r\n            {\r\n                Symbol = symbol,\r\n                Type = securityType,\r\n                AveragePrice = averagePrice,\r\n                ConversionRate = 1.0m,\r\n                CurrencySymbol = ''$'',\r\n                Quantity = quantity\r\n            };", span="666-674"];
m6_324 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="longUnits > 0", span="655-655"];
m6_326 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="quantity = longUnits", span="658-658"];
m6_322 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="decimal averagePrice = 0", span="653-653"];
m6_327 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="shortUnits < 0", span="660-660"];
m6_329 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="quantity = shortUnits", span="663-663"];
m6_325 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="averagePrice = position._Long.AveragePrice.ToDecimal()", span="657-657"];
m6_328 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="averagePrice = position._Short.AveragePrice.ToDecimal()", span="662-662"];
m6_323 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="var quantity = 0", span="654-654"];
m6_331 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", span="645-645"];
m6_52 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Insight.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m6_259 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="Insight.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m6_166 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", span="362-362"];
m6_171 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label=LockerConnectionMonitor, span="370-370"];
m6_172 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="372-372"];
m6_175 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(data.Instrument)", span="379-379"];
m6_176 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="var symbol = SymbolMapper.GetLeanSymbol(data.Instrument, securityType, Market.Oanda)", span="380-380"];
m6_177 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="var time = GetTickDateTimeFromString(data.Time)", span="381-381"];
m6_179 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="!_symbolExchangeTimeZones.TryGetValue(symbol, out exchangeTimeZone)", span="385-385"];
m6_181 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="_symbolExchangeTimeZones.Add(symbol, exchangeTimeZone)", span="388-388"];
m6_186 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label=Ticks, span="396-396"];
m6_187 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="Ticks.Add(tick)", span="398-398"];
m6_170 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="''HEARTBEAT''", span="369-369"];
m6_174 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="var data = obj.ToObject<Price>()", span="377-377"];
m6_180 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(Market.Oanda, symbol, securityType).TimeZone", span="387-387"];
m6_185 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="var tick = new Tick(time, symbol, bidPrice, askPrice)", span="394-394"];
m6_178 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="DateTimeZone exchangeTimeZone", span="384-384"];
m6_182 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="time = time.ConvertFromUtc(exchangeTimeZone)", span="390-390"];
m6_167 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(json)", span="364-364"];
m6_183 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="var bidPrice = Convert.ToDecimal(data.Bids.Last().Price)", span="392-392"];
m6_184 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="var askPrice = Convert.ToDecimal(data.Asks.Last().Price)", span="393-393"];
m6_169 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label=type, span="367-367"];
m6_173 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="''PRICE''", span="376-376"];
m6_168 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="var type = obj[''type''].ToString()", span="365-365"];
m6_188 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", span="362-362"];
m6_88 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", span="208-208"];
m6_93 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="var request = GenerateOrderRequest(order)", span="219-219"];
m6_95 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="var response = _apiRest.ReplaceOrder(Authorization, AccountId, orderId, request)", span="222-222"];
m6_99 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Filled,\r\n                    FillPrice = response.Data.OrderFillTransaction.Price.ToDecimal(),\r\n                    FillQuantity = Convert.ToInt32(response.Data.OrderFillTransaction.Units)\r\n                })", span="231-236"];
m6_90 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="!order.BrokerId.Any()", span="212-212"];
m6_94 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="var orderId = order.BrokerId.First()", span="221-221"];
m6_96 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="order.BrokerId[0] = response.Data.OrderCreateTransaction.Id", span="225-225"];
m6_97 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="response.Data.OrderFillTransaction != null", span="228-228"];
m6_98 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="int orderFee = 0", span="230-230"];
m6_100 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="return true;", span="239-239"];
m6_89 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="Log.Trace(''OandaBrokerage.UpdateOrder(): '' + order)", span="210-210"];
m6_91 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="Log.Trace(''OandaBrokerage.UpdateOrder(): Unable to update order without BrokerId.'')", span="215-215"];
m6_92 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="return false;", span="216-216"];
m6_101 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", span="208-208"];
m6_258 [cluster="System.TimeSpan.FromSeconds(double)", file="Insight.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m6_83 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="Insight.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m6_217 [cluster="System.Net.WebRequest.CreateHttp(string)", file="Insight.cs", label="Entry System.Net.WebRequest.CreateHttp(string)", span="0-0"];
m6_82 [cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="Insight.cs", label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27"];
m6_214 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Insight.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m6_369 [cluster="Unk.SerializeObject", file="Insight.cs", label="Entry Unk.SerializeObject", span=""];
m6_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="Insight.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m6_243 [cluster="System.Net.WebResponse.GetResponseStream()", file="Insight.cs", label="Entry System.Net.WebResponse.GetResponseStream()", span="0-0"];
m6_276 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", span="573-573"];
m6_296 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(instrument)", span="619-619"];
m6_297 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder.Symbol = SymbolMapper.GetLeanSymbol(instrument, securityType, Market.Oanda)", span="620-620"];
m6_298 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder.Time = GetTickDateTimeFromString(createTime)", span="621-621"];
m6_302 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var orderByBrokerageId = OrderProvider.GetOrderByBrokerageId(id)", span="626-626"];
m6_308 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder.DurationValue = GetTickDateTimeFromString(gtdTime.ToString())", span="636-636"];
m6_292 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var instrument = order[''instrument''].ToString()", span="614-614"];
m6_295 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var createTime = order[''createTime''].ToString()", span="617-617"];
m6_290 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder = new MarketOrder()", span="606-606"];
m6_299 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder.Quantity = units", span="622-622"];
m6_293 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var id = order[''id''].ToString()", span="615-615"];
m6_301 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder.BrokerId.Add(id)", span="624-624"];
m6_303 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="orderByBrokerageId != null", span="627-627"];
m6_304 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder.Id = orderByBrokerageId.Id", span="629-629"];
m6_305 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var gtdTime = order[''gtdTime'']", span="632-632"];
m6_307 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder.Duration = OrderDuration.Custom", span="635-635"];
m6_309 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="return qcOrder;", span="639-639"];
m6_282 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder = new StopMarketOrder\r\n                    {\r\n                        StopPrice = stopOrder.Price.ToDecimal()\r\n                    }", span="582-585"];
m6_285 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder = new LimitOrder\r\n                    {\r\n                        LimitPrice = limitOrder.Price.ToDecimal()\r\n                    }", span="590-593"];
m6_288 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder = new StopLimitOrder\r\n                    {\r\n                        Price = Convert.ToDecimal(stopLimitOrder.Price),\r\n                        LimitPrice = Convert.ToDecimal(stopLimitOrder.PriceBound)\r\n                    }", span="598-602"];
m6_294 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var units = Convert.ToInt32(order[''units''])", span="616-616"];
m6_289 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="''MARKET''", span="605-605"];
m6_300 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="qcOrder.Status = OrderStatus.None", span="623-623"];
m6_306 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="gtdTime != null", span="633-633"];
m6_277 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var type = order[''type''].ToString()", span="575-575"];
m6_281 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var stopOrder = order.ToObject<MarketIfTouchedOrder>()", span="581-581"];
m6_284 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var limitOrder = order.ToObject<OandaLimitOrder>()", span="589-589"];
m6_287 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="var stopLimitOrder = order.ToObject<StopOrder>()", span="597-597"];
m6_279 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label=type, span="578-578"];
m6_291 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="throw new NotSupportedException(\r\n                        ''An existing '' + type + '' working order was found and is currently unsupported. Please manually cancel the order before restarting the algorithm.'');", span="610-611"];
m6_278 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="Order qcOrder", span="577-577"];
m6_280 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="''MARKET_IF_TOUCHED''", span="580-580"];
m6_283 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="''LIMIT''", span="588-588"];
m6_286 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="''STOP''", span="596-596"];
m6_310 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", span="573-573"];
m6_117 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", span="269-269"];
m6_118 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="Insight.cs", label="_eventsSession = new TransactionStreamSession(this)", span="271-271"];
m6_119 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="Insight.cs", label="_eventsSession.DataReceived += OnTransactionDataReceived", span="272-272"];
m6_120 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="Insight.cs", label="_eventsSession.StartSession()", span="273-273"];
m6_121 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", span="269-269"];
m6_164 [cluster="Unk.ToDecimal", file="Insight.cs", label="Entry Unk.ToDecimal", span=""];
m6_218 [cluster="System.Net.HttpWebRequest.GetResponse()", file="Insight.cs", label="Entry System.Net.HttpWebRequest.GetResponse()", span="0-0"];
m6_370 [cluster="Oanda.RestV20.Model.LimitOrderRequest.LimitOrderRequest(Oanda.RestV20.Model.LimitOrderRequest.TypeEnum?, string, string, string, Oanda.RestV20.Model.LimitOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.LimitOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.LimitOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="Insight.cs", label="Entry Oanda.RestV20.Model.LimitOrderRequest.LimitOrderRequest(Oanda.RestV20.Model.LimitOrderRequest.TypeEnum?, string, string, string, Oanda.RestV20.Model.LimitOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.LimitOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.LimitOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="245-245"];
m6_162 [cluster="Unk.>", file="Insight.cs", label="Entry Unk.>", span=""];
m6_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", file="Insight.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
m6_123 [cluster="Oanda.RestV20.Session.StreamSession.StartSession()", file="Insight.cs", label="Entry Oanda.RestV20.Session.StreamSession.StartSession()", span="49-49"];
m6_313 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="Insight.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="52-52"];
m6_199 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", span="409-409"];
m6_201 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="var requestString = _apiStreaming.GetBasePath() + ''/accounts/'' + AccountId + ''/pricing/stream'' +\r\n                ''?instruments='' + Uri.EscapeDataString(instrumentList)", span="413-414"];
m6_204 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="request.Headers[HttpRequestHeader.Authorization] = Authorization", span="418-418"];
m6_205 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="request.Headers[OandaAgentKey] = Agent", span="419-419"];
m6_200 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="var instrumentList = string.Join('','', instruments)", span="411-411"];
m6_202 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="var request = WebRequest.CreateHttp(requestString)", span="416-416"];
m6_203 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="request.Method = ''GET''", span="417-417"];
m6_206 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="return request.GetResponse();", span="423-423"];
m6_209 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="throw;", span="429-429"];
m6_212 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="throw new Exception(reader.ReadToEnd());", span="435-435"];
m6_208 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="ex.Response == null", span="427-427"];
m6_211 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="var reader = new StreamReader(stream)", span="433-433"];
m6_207 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label=WebException, span="425-425"];
m6_210 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="var stream = GetResponseStream(ex.Response)", span="432-432"];
m6_213 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", span="409-409"];
m6_216 [cluster="System.Uri.EscapeDataString(string)", file="Insight.cs", label="Entry System.Uri.EscapeDataString(string)", span="0-0"];
m6_190 [cluster="Unk.GetLeanSymbol", file="Insight.cs", label="Entry Unk.GetLeanSymbol", span=""];
m6_311 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="Insight.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42"];
m6_130 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", span="291-291"];
m6_131 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="Insight.cs", label="_ratesSession = new PricingStreamSession(this, instruments)", span="293-293"];
m6_132 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="Insight.cs", label="_ratesSession.DataReceived += OnPricingDataReceived", span="294-294"];
m6_133 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="Insight.cs", label="_ratesSession.StartSession()", span="295-295"];
m6_134 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="Insight.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", span="291-291"];
m6_368 [cluster="decimal.ToString()", file="Insight.cs", label="Entry decimal.ToString()", span="0-0"];
m6_256 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="Insight.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="888-888"];
m6_375 [file="Insight.cs", label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", span=""];
m7_14 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="var deserialized = JsonConvert.DeserializeObject<Insight>(serialized)", span="42-42"];
m7_33 [cluster="Unk.>", file="InsightTests.cs", label="Entry Unk.>", span=""];
m7_9 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="InsightTests.cs", label="_error.WriteLine(DateTime.Now.ToString(_dateFormat) + '' ERROR:: '' + text)", span="58-58"];
m7_30 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="InsightTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m7_10 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="InsightTests.cs", label="Console.ResetColor()", span="59-59"];
m7_12 [cluster="System.DateTime.ToString(string)", color=green, community=0, file="InsightTests.cs", label="0: Entry System.DateTime.ToString(string)", span="0-0"];
m7_11 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="InsightTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Error(string)", span="55-55"];
m7_13 [cluster="System.IO.TextWriter.WriteLine(string)", file="InsightTests.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m7_15 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="InsightTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Debug(string)", span="66-66"];
m7_16 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="InsightTests.cs", label="_trace.WriteLine(DateTime.Now.ToString(_dateFormat) + '' DEBUG:: '' + text)", span="68-68"];
m7_17 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="InsightTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Debug(string)", span="66-66"];
m7_18 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="InsightTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Trace(string)", span="75-75"];
m7_19 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="InsightTests.cs", label="_trace.WriteLine(DateTime.Now.ToString(_dateFormat) + '' Trace:: '' + text)", span="77-77"];
m7_20 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="InsightTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Trace(string)", span="75-75"];
m7_21 [cluster="QuantConnect.Logging.ConsoleLogHandler.Dispose()", file="InsightTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Dispose()", span="84-84"];
m7_22 [cluster="QuantConnect.Logging.ConsoleLogHandler.Dispose()", file="InsightTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Dispose()", span="84-84"];
m7_23 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="QuantConnect.Logging.ConsoleLogHandler", span=""];
m7_24 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Assert.AreEqual(insight.Score.Magnitude, deserialized.Score.Magnitude)", span="53-53"];
m7_25 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Assert.AreEqual(insight.Score.UpdatedTimeUtc, deserialized.Score.UpdatedTimeUtc)", span="54-54"];
m7_26 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Assert.AreEqual(insight.Score.IsFinalScore, deserialized.Score.IsFinalScore)", span="55-55"];
m7_27 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Assert.AreEqual(insight.Symbol, deserialized.Symbol)", span="56-56"];
m7_28 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Assert.AreEqual(insight.Type, deserialized.Type)", span="57-57"];
m7_29 [cluster="QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", file="InsightTests.cs", label="Exit QuantConnect.Tests.Algorithm.Framework.InsightTests.SurvivesRoundTripSerializationUsingJsonConvert()", span="37-37"];
m7_7 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="InsightTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Error(string)", span="55-55"];
m7_0 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="InsightTests.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33"];
m7_1 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", color=green, community=0, file="InsightTests.cs", label="1: Exit QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33"];
m7_2 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", color=green, community=0, file="InsightTests.cs", label="1: Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", span="42-42"];
m7_3 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="InsightTests.cs", label="_trace = Console.Out", span="46-46"];
m7_4 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="InsightTests.cs", label="_error = Console.Error", span="47-47"];
m7_5 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="InsightTests.cs", label="_dateFormat = dateFormat", span="48-48"];
m7_6 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", file="InsightTests.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler(string)", span="42-42"];
m7_8 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="InsightTests.cs", label="Console.ForegroundColor = ConsoleColor.Red", span="57-57"];
m7_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", file="InsightTests.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, System.TimeSpan, double?, double?)", span="145-145"];
m7_32 [cluster="Unk.SerializeObject", file="InsightTests.cs", label="Entry Unk.SerializeObject", span=""];
m8_334 [cluster="QuantConnect.Holding.Holding()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Holding.Holding()", span="83-83"];
m8_122 [cluster="Oanda.RestV20.Session.TransactionStreamSession.TransactionStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Session.TransactionStreamSession.TransactionStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20)", span="30-30"];
m8_116 [cluster="Oanda.RestV20.Api.DefaultApi.CancelOrder(string, string, string, string)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.CancelOrder(string, string, string, string)", span="1979-1979"];
m8_8 [cluster="Oanda.RestV20.Client.Configuration.AddDefaultHeader(string, string)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Client.Configuration.AddDefaultHeader(string, string)", span="167-167"];
m8_136 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", span="301-301"];
m8_137 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="MacdAlphaModel.cs", label="_ratesSession != null", span="303-303"];
m8_138 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="MacdAlphaModel.cs", label="_ratesSession.DataReceived -= OnPricingDataReceived", span="305-305"];
m8_139 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="MacdAlphaModel.cs", label="_ratesSession.StopSession()", span="306-306"];
m8_140 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopPricingStream()", span="301-301"];
m8_7 [cluster="Oanda.RestV20.Api.DefaultApi.DefaultApi(string)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.DefaultApi(string)", span="1872-1872"];
m8_215 [cluster="Oanda.RestV20.Api.DefaultApi.GetBasePath()", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetBasePath()", span="1911-1911"];
m8_44 [cluster="Oanda.RestV20.Api.DefaultApi.GetPrices(string, string, System.Collections.Generic.List<string>, string, string, bool?)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetPrices(string, string, System.Collections.Generic.List<string>, string, string, bool?)", span="4286-4286"];
m8_195 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m8_161 [cluster="Unk.ToString", file="MacdAlphaModel.cs", label="Entry Unk.ToString", span=""];
m8_274 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m8_257 [cluster="System.DateTime.ToString(string)", file="MacdAlphaModel.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m8_30 [cluster="Oanda.RestV20.Api.DefaultApi.ListOpenPositions(string, string)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ListOpenPositions(string, string)", span="5475-5475"];
m8_31 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", span="119-119"];
m8_32 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="MacdAlphaModel.cs", label="var response = _apiRest.GetAccountSummary(Authorization, AccountId)", span="121-121"];
m8_33 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="MacdAlphaModel.cs", label="return new List<Cash>\r\n            {\r\n                new Cash(response.Account.Currency, \r\n                    response.Account.Balance.ToDecimal(),\r\n                    GetUsdConversion(response.Account.Currency))\r\n            };", span="123-128"];
m8_34 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetCashBalance()", span="119-119"];
m8_191 [cluster="Unk.GetTickDateTimeFromString", file="MacdAlphaModel.cs", label="Entry Unk.GetTickDateTimeFromString", span=""];
m8_103 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m8_189 [cluster="Unk.GetBrokerageSecurityType", file="MacdAlphaModel.cs", label="Entry Unk.GetBrokerageSecurityType", span=""];
m8_39 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiBase.GetUsdConversion(string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiBase.GetUsdConversion(string)", span="466-466"];
m8_220 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="MacdAlphaModel.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m8_78 [cluster="System.Collections.Generic.List<T>.Add(T)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m8_372 [cluster="Oanda.RestV20.Model.MarketIfTouchedOrderRequest.MarketIfTouchedOrderRequest(Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Model.MarketIfTouchedOrderRequest.MarketIfTouchedOrderRequest(Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.MarketIfTouchedOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="246-246"];
m8_315 [cluster="NotSupportedException.cstr", file="MacdAlphaModel.cs", label="Entry NotSupportedException.cstr", span=""];
m8_77 [cluster="Oanda.RestV20.Api.DefaultApi.CreateOrder(string, string, string, string)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.CreateOrder(string, string, string, string)", span="96-96"];
m8_24 [cluster="Oanda.RestV20.Api.DefaultApi.ListPendingOrdersAsJson(string, string, string)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ListPendingOrdersAsJson(string, string, string)", span="34-34"];
m8_79 [cluster="System.Convert.ToDecimal(string)", file="MacdAlphaModel.cs", label="Entry System.Convert.ToDecimal(string)", span="0-0"];
m8_104 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m8_106 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", span="247-247"];
m8_107 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Log.Trace(''OandaBrokerage.CancelOrder(): '' + order)", span="249-249"];
m8_108 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="!order.BrokerId.Any()", span="251-251"];
m8_111 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="order.BrokerId", span="257-257"];
m8_113 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''Oanda Cancel Order Event'') { Status = OrderStatus.Canceled })", span="260-260"];
m8_109 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Log.Trace(''OandaBrokerage.CancelOrder(): Unable to cancel order without BrokerId.'')", span="253-253"];
m8_110 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="return false;", span="254-254"];
m8_112 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="_apiRest.CancelOrder(Authorization, AccountId, orderId)", span="259-259"];
m8_114 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="return true;", span="263-263"];
m8_115 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.CancelOrder(QuantConnect.Orders.Order)", span="247-247"];
m8_141 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", span="314-314"];
m8_142 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="MacdAlphaModel.cs", label="return OandaBrokerage.GetDateTimeFromString(time.Remove(25, 3));", span="317-317"];
m8_143 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetTickDateTimeFromString(string)", span="314-314"];
m8_135 [cluster="Oanda.RestV20.Session.PricingStreamSession.PricingStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20, System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Session.PricingStreamSession.PricingStreamSession(QuantConnect.Brokerages.Oanda.OandaRestApiV20, System.Collections.Generic.List<string>)", span="34-34"];
m8_374 [cluster="System.NotSupportedException.NotSupportedException(string)", file="MacdAlphaModel.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m8_223 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", span="444-444"];
m8_224 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="var requestString = _apiStreaming.GetBasePath() + ''/accounts/'' + AccountId + ''/transactions/stream''", span="446-446"];
m8_225 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="var request = WebRequest.CreateHttp(requestString)", span="448-448"];
m8_226 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="request.Method = ''GET''", span="449-449"];
m8_227 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="request.Headers[HttpRequestHeader.Authorization] = Authorization", span="450-450"];
m8_228 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="request.Headers[OandaAgentKey] = Agent", span="451-451"];
m8_229 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="return request.GetResponse();", span="455-455"];
m8_230 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label=WebException, span="457-457"];
m8_231 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="ex.Response == null", span="459-459"];
m8_232 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="throw;", span="461-461"];
m8_233 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="var stream = GetResponseStream(ex.Response)", span="464-464"];
m8_234 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="var reader = new StreamReader(stream)", span="465-465"];
m8_235 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="throw new Exception(reader.ReadToEnd());", span="467-467"];
m8_236 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartEventsSession()", span="444-444"];
m8_84 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m8_222 [cluster="System.IO.StreamReader.ReadToEnd()", file="MacdAlphaModel.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m8_36 [cluster="System.Collections.Generic.List<T>.List()", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_312 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42"];
m8_80 [cluster="System.Convert.ToInt32(string)", file="MacdAlphaModel.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m8_85 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Entry lambda expression", span="180-180"];
m8_16 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Entry lambda expression", span="87-87"];
m8_17 [cluster="lambda expression", file="MacdAlphaModel.cs", label="x.Name", span="87-87"];
m8_18 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Exit lambda expression", span="87-87"];
m8_46 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Entry lambda expression", span="142-142"];
m8_49 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Entry lambda expression", span="143-143"];
m8_47 [cluster="lambda expression", file="MacdAlphaModel.cs", label="x.Instrument", span="142-142"];
m8_48 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Exit lambda expression", span="142-142"];
m8_50 [cluster="lambda expression", file="MacdAlphaModel.cs", label="new Tick { BidPrice = x.Bids.Last().Price.ToDecimal(), AskPrice = x.Asks.Last().Price.ToDecimal() }", span="143-143"];
m8_51 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Exit lambda expression", span="143-143"];
m8_86 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Convert.ToInt32(trade.Units)", span="180-180"];
m8_87 [cluster="lambda expression", file="MacdAlphaModel.cs", label="Exit lambda expression", span="180-180"];
m8_260 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", span="682-682"];
m8_335 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="CandlestickGranularity interval", span="684-684"];
m8_336 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label=resolution, span="686-686"];
m8_345 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="throw new ArgumentException(''Unsupported resolution: '' + resolution);", span="705-705"];
m8_337 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Resolution.Second", span="688-688"];
m8_339 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Resolution.Minute", span="692-692"];
m8_341 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Resolution.Hour", span="696-696"];
m8_343 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Resolution.Daily", span="700-700"];
m8_338 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="interval = CandlestickGranularity.S5", span="689-689"];
m8_340 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="interval = CandlestickGranularity.M1", span="693-693"];
m8_342 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="interval = CandlestickGranularity.H1", span="697-697"];
m8_344 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="interval = CandlestickGranularity.D", span="701-701"];
m8_346 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="return interval;", span="708-708"];
m8_347 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ToGranularity(QuantConnect.Resolution)", span="682-682"];
m8_275 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m8_146 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", span="324-324"];
m8_147 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(json)", span="326-326"];
m8_148 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="var type = obj[''type''].ToString()", span="327-327"];
m8_154 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="var transaction = obj.ToObject<OrderFillTransaction>()", span="339-339"];
m8_149 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label=type, span="329-329"];
m8_150 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="''HEARTBEAT''", span="331-331"];
m8_153 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="''ORDER_FILL''", span="338-338"];
m8_151 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label=LockerConnectionMonitor, span="332-332"];
m8_152 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="334-334"];
m8_155 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="var order = OrderProvider.GetOrderByBrokerageId(transaction.OrderID)", span="341-341"];
m8_159 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee, ''Oanda Fill Event'')\r\n                        {\r\n                            Status = OrderStatus.Filled,\r\n                            FillPrice = transaction.Price.ToDecimal(),\r\n                            FillQuantity = Convert.ToInt32(transaction.Units)\r\n                        })", span="347-352"];
m8_156 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="order != null", span="342-342"];
m8_157 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="order.PriceCurrency = SecurityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="344-344"];
m8_158 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="int orderFee = 0", span="346-346"];
m8_160 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnTransactionDataReceived(string)", span="324-324"];
m8_19 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", span="95-95"];
m8_20 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", color=red, community=0, file="MacdAlphaModel.cs", label="0: var json = _apiRest.ListPendingOrdersAsJson(Authorization, AccountId)", span="97-97"];
m8_21 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="MacdAlphaModel.cs", label="var response = (JObject)JsonConvert.DeserializeObject(json)", span="99-99"];
m8_22 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="MacdAlphaModel.cs", label="return response[''orders''].Select(ConvertOrder).ToList();", span="101-101"];
m8_23 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetOpenOrders()", span="95-95"];
m8_129 [cluster="Oanda.RestV20.Session.StreamSession.StopSession()", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Session.StreamSession.StopSession()", span="73-73"];
m8_13 [cluster="Oanda.RestV20.Api.DefaultApi.GetAccountInstruments(string, string, System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetAccountInstruments(string, string, System.Collections.Generic.List<string>)", span="3245-3245"];
m8_54 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", span="152-152"];
m8_55 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var request = GenerateOrderRequest(order)", span="154-154"];
m8_57 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="order.BrokerId.Add(response.Data.OrderCreateTransaction.Id)", span="157-157"];
m8_61 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="order.Type == OrderType.Market", span="164-164"];
m8_70 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="order.PriceCurrency = SecurityProvider.GetSecurity(order.Symbol).SymbolProperties.QuoteCurrency", span="186-186"];
m8_71 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee) { Status = OrderStatus.Submitted })", span="187-187"];
m8_72 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="order.Type == OrderType.Market", span="189-189"];
m8_73 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Filled,\r\n                    FillPrice = marketOrderFillPrice,\r\n                    FillQuantity = marketOrderFillQuantity\r\n                })", span="192-197"];
m8_56 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var response = _apiRest.CreateOrder(Authorization, AccountId, request)", span="155-155"];
m8_58 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var fill = response.Data.OrderFillTransaction", span="160-160"];
m8_59 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var marketOrderFillPrice = 0m", span="161-161"];
m8_62 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="marketOrderFillPrice = Convert.ToDecimal(fill.Price)", span="166-166"];
m8_63 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="fill.TradeOpened != null && fill.TradeOpened.TradeID.Length > 0", span="168-168"];
m8_64 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="marketOrderFillQuantity = Convert.ToInt32(fill.TradeOpened.Units)", span="170-170"];
m8_65 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="fill.TradeReduced != null && fill.TradeReduced.TradeID.Length > 0", span="173-173"];
m8_66 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="marketOrderFillQuantity = Convert.ToInt32(fill.TradeReduced.Units)", span="175-175"];
m8_67 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="fill.TradesClosed != null && fill.TradesClosed.Count > 0", span="178-178"];
m8_68 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="marketOrderFillQuantity += fill.TradesClosed.Sum(trade => Convert.ToInt32(trade.Units))", span="180-180"];
m8_60 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var marketOrderFillQuantity = 0", span="162-162"];
m8_69 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="int orderFee = 0", span="185-185"];
m8_74 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="return true;", span="200-200"];
m8_75 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.PlaceOrder(QuantConnect.Orders.Order)", span="152-152"];
m8_314 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29"];
m8_316 [cluster="Unk.Add", file="MacdAlphaModel.cs", label="Entry Unk.Add", span=""];
m8_40 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", span="136-136"];
m8_41 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="var response = _apiRest.GetPrices(Authorization, AccountId, instruments)", span="138-138"];
m8_42 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="return response.Prices\r\n                .ToDictionary(\r\n                    x => x.Instrument,\r\n                    x => new Tick { BidPrice = x.Bids.Last().Price.ToDecimal(), AskPrice = x.Asks.Last().Price.ToDecimal() }\r\n                );", span="140-144"];
m8_43 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetRates(System.Collections.Generic.List<string>)", span="136-136"];
m8_219 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", span="472-472"];
m8_237 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="MacdAlphaModel.cs", label="var stream = response.GetResponseStream()", span="474-474"];
m8_238 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="MacdAlphaModel.cs", label="response.Headers[''Content-Encoding''] == ''gzip''", span="475-475"];
m8_239 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="MacdAlphaModel.cs", label="stream != null", span="478-478"];
m8_240 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="MacdAlphaModel.cs", label="stream = new GZipStream(stream, CompressionMode.Decompress)", span="478-478"];
m8_241 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="MacdAlphaModel.cs", label="return stream;", span="480-480"];
m8_242 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetResponseStream(System.Net.WebResponse)", span="472-472"];
m8_261 [cluster="System.Enum.ToString()", file="MacdAlphaModel.cs", label="Entry System.Enum.ToString()", span="0-0"];
m8_197 [cluster="Unk.Last", file="MacdAlphaModel.cs", label="Entry Unk.Last", span=""];
m8_9 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", span="83-83"];
m8_10 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="MacdAlphaModel.cs", label="var response = _apiRest.GetAccountInstruments(Authorization, AccountId)", span="85-85"];
m8_11 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="MacdAlphaModel.cs", label="return response.Instruments.Select(x => x.Name).ToList();", span="87-87"];
m8_12 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetInstrumentList()", span="83-83"];
m8_165 [cluster="Unk.ToInt32", file="MacdAlphaModel.cs", label="Entry Unk.ToInt32", span=""];
m8_198 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m8_373 [cluster="Oanda.RestV20.Model.StopOrderRequest.StopOrderRequest(Oanda.RestV20.Model.StopOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.StopOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.StopOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.StopOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Model.StopOrderRequest.StopOrderRequest(Oanda.RestV20.Model.StopOrderRequest.TypeEnum?, string, string, string, string, Oanda.RestV20.Model.StopOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.StopOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.StopOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="246-246"];
m8_144 [cluster="string.Remove(int, int)", file="MacdAlphaModel.cs", label="Entry string.Remove(int, int)", span="0-0"];
m8_37 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m8_124 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", span="279-279"];
m8_125 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="MacdAlphaModel.cs", label="_eventsSession != null", span="281-281"];
m8_126 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="MacdAlphaModel.cs", label="_eventsSession.DataReceived -= OnTransactionDataReceived", span="283-283"];
m8_127 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="MacdAlphaModel.cs", label="_eventsSession.StopSession()", span="284-284"];
m8_128 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StopTransactionStream()", span="279-279"];
m8_102 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m8_332 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSecurityType(string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSecurityType(string)", span="936-936"];
m8_14 [cluster="Unk.Select", file="MacdAlphaModel.cs", label="Entry Unk.Select", span=""];
m8_45 [cluster="Unk.ToDictionary", file="MacdAlphaModel.cs", label="Entry Unk.ToDictionary", span=""];
m8_263 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m8_196 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="MacdAlphaModel.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m8_0 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", span="63-63"];
m8_1 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="MacdAlphaModel.cs", label="var basePathRest = environment == Environment.Trade ? \r\n                ''https://api-fxtrade.oanda.com/v3'' : \r\n                ''https://api-fxpractice.oanda.com/v3''", span="66-68"];
m8_2 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="MacdAlphaModel.cs", label="var basePathStreaming = environment == Environment.Trade ? \r\n                ''https://stream-fxtrade.oanda.com/v3'' : \r\n                ''https://stream-fxpractice.oanda.com/v3''", span="70-72"];
m8_3 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="MacdAlphaModel.cs", label="_apiRest = new DefaultApi(basePathRest)", span="74-74"];
m8_5 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="MacdAlphaModel.cs", label="_apiStreaming = new DefaultApi(basePathStreaming)", span="77-77"];
m8_4 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="MacdAlphaModel.cs", label="_apiRest.Configuration.AddDefaultHeader(OandaAgentKey, Agent)", span="75-75"];
m8_6 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OandaRestApiV20(QuantConnect.Brokerages.Oanda.OandaSymbolMapper, QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, QuantConnect.Brokerages.Oanda.Environment, string, string, string)", span="63-63"];
m8_262 [cluster="Oanda.RestV20.Api.DefaultApi.GetInstrumentCandles(string, string, string, string, string, int?, string, string, bool?, bool?, int?, string, string)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetInstrumentCandles(string, string, string, string, string, int?, string, string, bool?, bool?, int?, string, string)", span="3732-3732"];
m8_192 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m8_145 [cluster="QuantConnect.Brokerages.Oanda.OandaBrokerage.GetDateTimeFromString(string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaBrokerage.GetDateTimeFromString(string)", span="256-256"];
m8_193 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m8_163 [cluster="Unk.GetOrderByBrokerageId", file="MacdAlphaModel.cs", label="Entry Unk.GetOrderByBrokerageId", span=""];
m8_105 [cluster="Oanda.RestV20.Api.DefaultApi.ReplaceOrder(string, string, string, string, string)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.ReplaceOrder(string, string, string, string, string)", span="167-167"];
m8_221 [cluster="System.Exception.Exception(string)", file="MacdAlphaModel.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m8_264 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="529-529"];
m8_265 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var oandaSymbol = SymbolMapper.GetBrokerageSymbol(symbol)", span="531-531"];
m8_272 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="yield return new QuoteBar(\r\n                    time.ConvertFromUtc(requestedTimeZone),\r\n                    symbol,\r\n                    new Bar(\r\n                        candle.Bid.O.ToDecimal(),\r\n                        candle.Bid.H.ToDecimal(),\r\n                        candle.Bid.L.ToDecimal(),\r\n                        candle.Bid.C.ToDecimal()\r\n                    ),\r\n                    0,\r\n                    new Bar(\r\n                        candle.Ask.O.ToDecimal(),\r\n                        candle.Ask.H.ToDecimal(),\r\n                        candle.Ask.L.ToDecimal(),\r\n                        candle.Ask.C.ToDecimal()\r\n                    ),\r\n                    0,\r\n                    period);", span="544-561"];
m8_266 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var startUtc = startTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="532-532"];
m8_267 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var period = resolution == Resolution.Second ? TimeSpan.FromSeconds(5) : resolution.ToTimeSpan()", span="535-535"];
m8_268 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var response = _apiRest.GetInstrumentCandles(Authorization, oandaSymbol, null, ''BA'', ToGranularity(resolution).ToString(), OandaBrokerage.MaxBarsPerRequest, startUtc)", span="537-537"];
m8_271 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="time > endTimeUtc", span="541-541"];
m8_269 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="response.Candles", span="538-538"];
m8_270 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var time = GetTickDateTimeFromString(candle.Time)", span="540-540"];
m8_273 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadQuoteBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="529-529"];
m8_333 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetLeanSymbol(string, QuantConnect.SecurityType, string, System.DateTime, decimal, QuantConnect.OptionRight)", span="914-914"];
m8_348 [cluster="System.ArgumentException.ArgumentException(string)", file="MacdAlphaModel.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m8_367 [cluster="Oanda.RestV20.Model.MarketOrderRequest.MarketOrderRequest(Oanda.RestV20.Model.MarketOrderRequest.TypeEnum?, string, string, Oanda.RestV20.Model.MarketOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Model.MarketOrderRequest.MarketOrderRequest(Oanda.RestV20.Model.MarketOrderRequest.TypeEnum?, string, string, Oanda.RestV20.Model.MarketOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.MarketOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="192-192"];
m8_371 [cluster="decimal.ToString(System.IFormatProvider)", file="MacdAlphaModel.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m8_245 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="492-492"];
m8_246 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var oandaSymbol = SymbolMapper.GetBrokerageSymbol(symbol)", span="494-494"];
m8_254 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="yield return new TradeBar(\r\n                    time.ConvertFromUtc(requestedTimeZone),\r\n                    symbol,\r\n                    candle.Bid.O.ToDecimal(),\r\n                    candle.Bid.H.ToDecimal(),\r\n                    candle.Bid.L.ToDecimal(),\r\n                    candle.Bid.C.ToDecimal(),\r\n                    0,\r\n                    period);", span="508-516"];
m8_247 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var startUtc = startTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="495-495"];
m8_248 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var endUtc = endTimeUtc.ToString(''yyyy-MM-ddTHH:mm:ssZ'')", span="496-496"];
m8_249 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var period = resolution == Resolution.Second ? TimeSpan.FromSeconds(5) : resolution.ToTimeSpan()", span="499-499"];
m8_250 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var response = _apiRest.GetInstrumentCandles(Authorization, oandaSymbol, null, ''M'', ToGranularity(resolution).ToString(), null, startUtc, endUtc)", span="501-501"];
m8_253 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="time > endTimeUtc", span="505-505"];
m8_251 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="response.Candles", span="502-502"];
m8_252 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="var time = GetTickDateTimeFromString(candle.Time)", span="504-504"];
m8_255 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.DownloadTradeBars(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution, DateTimeZone)", span="492-492"];
m8_194 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95"];
m8_76 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", span="716-716"];
m8_349 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var instrument = SymbolMapper.GetBrokerageSymbol(order.Symbol)", span="718-718"];
m8_351 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="order.Type", span="721-721"];
m8_353 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var marketOrderRequest = new MarketOrderRequest\r\n                    {\r\n                        Type = MarketOrderRequest.TypeEnum.MARKET,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString()\r\n                    }", span="724-729"];
m8_356 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var limitOrderRequest = new LimitOrderRequest\r\n                    {\r\n                        Type = LimitOrderRequest.TypeEnum.LIMIT,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((LimitOrder)order).LimitPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="734-740"];
m8_359 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var marketIfTouchedOrderRequest = new MarketIfTouchedOrderRequest\r\n                    {\r\n                        Type = MarketIfTouchedOrderRequest.TypeEnum.MARKETIFTOUCHED,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((StopMarketOrder)order).StopPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="745-751"];
m8_362 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var stopOrderRequest = new StopOrderRequest\r\n                    {\r\n                        Type = StopOrderRequest.TypeEnum.STOP,\r\n                        Instrument = instrument,\r\n                        Units = order.Quantity.ToString(),\r\n                        Price = ((StopLimitOrder)order).StopPrice.ToString(CultureInfo.InvariantCulture),\r\n                        PriceBound = ((StopLimitOrder)order).LimitPrice.ToString(CultureInfo.InvariantCulture)\r\n                    }", span="756-763"];
m8_364 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="throw new NotSupportedException(''The order type '' + order.Type + '' is not supported.'');", span="768-768"];
m8_350 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="string request", span="720-720"];
m8_352 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="OrderType.Market", span="723-723"];
m8_355 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="OrderType.Limit", span="733-733"];
m8_358 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="OrderType.StopMarket", span="744-744"];
m8_361 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="OrderType.StopLimit", span="755-755"];
m8_354 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="request = JsonConvert.SerializeObject(new { order = marketOrderRequest })", span="730-730"];
m8_357 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="request = JsonConvert.SerializeObject(new { order = limitOrderRequest })", span="741-741"];
m8_360 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="request = JsonConvert.SerializeObject(new { order = marketIfTouchedOrderRequest })", span="752-752"];
m8_363 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="request = JsonConvert.SerializeObject(new { order = stopOrderRequest })", span="764-764"];
m8_365 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="return request;", span="771-771"];
m8_366 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GenerateOrderRequest(QuantConnect.Orders.Order)", span="716-716"];
m8_244 [cluster="System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)", file="MacdAlphaModel.cs", label="Entry System.IO.Compression.GZipStream.GZipStream(System.IO.Stream, System.IO.Compression.CompressionMode)", span="0-0"];
m8_317 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", span="645-645"];
m8_318 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(position.Instrument)", span="647-647"];
m8_319 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="var symbol = SymbolMapper.GetLeanSymbol(position.Instrument, securityType, Market.Oanda)", span="648-648"];
m8_320 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="var longUnits = Convert.ToInt32(position._Long.Units)", span="650-650"];
m8_321 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="var shortUnits = Convert.ToInt32(position._Short.Units)", span="651-651"];
m8_325 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="averagePrice = position._Long.AveragePrice.ToDecimal()", span="657-657"];
m8_328 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="averagePrice = position._Short.AveragePrice.ToDecimal()", span="662-662"];
m8_330 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="return new Holding\r\n            {\r\n                Symbol = symbol,\r\n                Type = securityType,\r\n                AveragePrice = averagePrice,\r\n                ConversionRate = 1.0m,\r\n                CurrencySymbol = ''$'',\r\n                Quantity = quantity\r\n            };", span="666-674"];
m8_324 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="longUnits > 0", span="655-655"];
m8_326 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="quantity = longUnits", span="658-658"];
m8_322 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="decimal averagePrice = 0", span="653-653"];
m8_327 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="shortUnits < 0", span="660-660"];
m8_329 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="quantity = shortUnits", span="663-663"];
m8_323 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="var quantity = 0", span="654-654"];
m8_331 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertHolding(Oanda.RestV20.Model.Position)", span="645-645"];
m8_25 [cluster="Unk.DeserializeObject", file="MacdAlphaModel.cs", label="Entry Unk.DeserializeObject", span=""];
m8_52 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m8_259 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m8_166 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", span="362-362"];
m8_167 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="var obj = (JObject)JsonConvert.DeserializeObject(json)", span="364-364"];
m8_168 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="var type = obj[''type''].ToString()", span="365-365"];
m8_174 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="var data = obj.ToObject<Price>()", span="377-377"];
m8_169 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label=type, span="367-367"];
m8_170 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="''HEARTBEAT''", span="369-369"];
m8_173 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="''PRICE''", span="376-376"];
m8_171 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label=LockerConnectionMonitor, span="370-370"];
m8_172 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="372-372"];
m8_175 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(data.Instrument)", span="379-379"];
m8_176 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="var symbol = SymbolMapper.GetLeanSymbol(data.Instrument, securityType, Market.Oanda)", span="380-380"];
m8_177 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="var time = GetTickDateTimeFromString(data.Time)", span="381-381"];
m8_183 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="var bidPrice = Convert.ToDecimal(data.Bids.Last().Price)", span="392-392"];
m8_184 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="var askPrice = Convert.ToDecimal(data.Asks.Last().Price)", span="393-393"];
m8_180 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="exchangeTimeZone = MarketHoursDatabase.FromDataFolder().GetExchangeHours(Market.Oanda, symbol, securityType).TimeZone", span="387-387"];
m8_179 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="!_symbolExchangeTimeZones.TryGetValue(symbol, out exchangeTimeZone)", span="385-385"];
m8_181 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="_symbolExchangeTimeZones.Add(symbol, exchangeTimeZone)", span="388-388"];
m8_185 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="var tick = new Tick(time, symbol, bidPrice, askPrice)", span="394-394"];
m8_178 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="DateTimeZone exchangeTimeZone", span="384-384"];
m8_182 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="time = time.ConvertFromUtc(exchangeTimeZone)", span="390-390"];
m8_186 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label=Ticks, span="396-396"];
m8_187 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="Ticks.Add(tick)", span="398-398"];
m8_188 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.OnPricingDataReceived(string)", span="362-362"];
m8_88 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", span="208-208"];
m8_89 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Log.Trace(''OandaBrokerage.UpdateOrder(): '' + order)", span="210-210"];
m8_90 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="!order.BrokerId.Any()", span="212-212"];
m8_93 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var request = GenerateOrderRequest(order)", span="219-219"];
m8_94 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var orderId = order.BrokerId.First()", span="221-221"];
m8_96 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="order.BrokerId[0] = response.Data.OrderCreateTransaction.Id", span="225-225"];
m8_99 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee)\r\n                {\r\n                    Status = OrderStatus.Filled,\r\n                    FillPrice = response.Data.OrderFillTransaction.Price.ToDecimal(),\r\n                    FillQuantity = Convert.ToInt32(response.Data.OrderFillTransaction.Units)\r\n                })", span="231-236"];
m8_91 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Log.Trace(''OandaBrokerage.UpdateOrder(): Unable to update order without BrokerId.'')", span="215-215"];
m8_92 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="return false;", span="216-216"];
m8_95 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="var response = _apiRest.ReplaceOrder(Authorization, AccountId, orderId, request)", span="222-222"];
m8_97 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="response.Data.OrderFillTransaction != null", span="228-228"];
m8_98 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="int orderFee = 0", span="230-230"];
m8_100 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="return true;", span="239-239"];
m8_101 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.UpdateOrder(QuantConnect.Orders.Order)", span="208-208"];
m8_258 [cluster="System.TimeSpan.FromSeconds(double)", file="MacdAlphaModel.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m8_83 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m8_217 [cluster="System.Net.WebRequest.CreateHttp(string)", file="MacdAlphaModel.cs", label="Entry System.Net.WebRequest.CreateHttp(string)", span="0-0"];
m8_82 [cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27"];
m8_35 [cluster="Oanda.RestV20.Api.DefaultApi.GetAccountSummary(string, string, string)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Api.DefaultApi.GetAccountSummary(string, string, string)", span="3406-3406"];
m8_214 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="MacdAlphaModel.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m8_369 [cluster="Unk.SerializeObject", file="MacdAlphaModel.cs", label="Entry Unk.SerializeObject", span=""];
m8_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0"];
m8_26 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", span="108-108"];
m8_27 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="MacdAlphaModel.cs", label="var response = _apiRest.ListOpenPositions(Authorization, AccountId)", span="110-110"];
m8_28 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="MacdAlphaModel.cs", label="return response.Positions.Select(ConvertHolding).ToList();", span="112-112"];
m8_29 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.GetAccountHoldings()", span="108-108"];
m8_243 [cluster="System.Net.WebResponse.GetResponseStream()", file="MacdAlphaModel.cs", label="Entry System.Net.WebResponse.GetResponseStream()", span="0-0"];
m8_276 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", span="573-573"];
m8_277 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var type = order[''type''].ToString()", span="575-575"];
m8_281 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var stopOrder = order.ToObject<MarketIfTouchedOrder>()", span="581-581"];
m8_284 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var limitOrder = order.ToObject<OandaLimitOrder>()", span="589-589"];
m8_287 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var stopLimitOrder = order.ToObject<StopOrder>()", span="597-597"];
m8_292 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var instrument = order[''instrument''].ToString()", span="614-614"];
m8_293 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var id = order[''id''].ToString()", span="615-615"];
m8_294 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var units = Convert.ToInt32(order[''units''])", span="616-616"];
m8_295 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var createTime = order[''createTime''].ToString()", span="617-617"];
m8_305 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var gtdTime = order[''gtdTime'']", span="632-632"];
m8_278 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="Order qcOrder", span="577-577"];
m8_279 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label=type, span="578-578"];
m8_291 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="throw new NotSupportedException(\r\n                        ''An existing '' + type + '' working order was found and is currently unsupported. Please manually cancel the order before restarting the algorithm.'');", span="610-611"];
m8_280 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="''MARKET_IF_TOUCHED''", span="580-580"];
m8_283 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="''LIMIT''", span="588-588"];
m8_286 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="''STOP''", span="596-596"];
m8_289 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="''MARKET''", span="605-605"];
m8_282 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder = new StopMarketOrder\r\n                    {\r\n                        StopPrice = stopOrder.Price.ToDecimal()\r\n                    }", span="582-585"];
m8_285 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder = new LimitOrder\r\n                    {\r\n                        LimitPrice = limitOrder.Price.ToDecimal()\r\n                    }", span="590-593"];
m8_288 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder = new StopLimitOrder\r\n                    {\r\n                        Price = Convert.ToDecimal(stopLimitOrder.Price),\r\n                        LimitPrice = Convert.ToDecimal(stopLimitOrder.PriceBound)\r\n                    }", span="598-602"];
m8_290 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder = new MarketOrder()", span="606-606"];
m8_297 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder.Symbol = SymbolMapper.GetLeanSymbol(instrument, securityType, Market.Oanda)", span="620-620"];
m8_298 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder.Time = GetTickDateTimeFromString(createTime)", span="621-621"];
m8_299 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder.Quantity = units", span="622-622"];
m8_300 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder.Status = OrderStatus.None", span="623-623"];
m8_301 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder.BrokerId.Add(id)", span="624-624"];
m8_304 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder.Id = orderByBrokerageId.Id", span="629-629"];
m8_307 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder.Duration = OrderDuration.Custom", span="635-635"];
m8_308 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="qcOrder.DurationValue = GetTickDateTimeFromString(gtdTime.ToString())", span="636-636"];
m8_309 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="return qcOrder;", span="639-639"];
m8_296 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var securityType = SymbolMapper.GetBrokerageSecurityType(instrument)", span="619-619"];
m8_302 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="var orderByBrokerageId = OrderProvider.GetOrderByBrokerageId(id)", span="626-626"];
m8_303 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="orderByBrokerageId != null", span="627-627"];
m8_306 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="gtdTime != null", span="633-633"];
m8_310 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.ConvertOrder(JToken)", span="573-573"];
m8_117 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", span="269-269"];
m8_118 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="MacdAlphaModel.cs", label="_eventsSession = new TransactionStreamSession(this)", span="271-271"];
m8_119 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="MacdAlphaModel.cs", label="_eventsSession.DataReceived += OnTransactionDataReceived", span="272-272"];
m8_120 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="MacdAlphaModel.cs", label="_eventsSession.StartSession()", span="273-273"];
m8_121 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartTransactionStream()", span="269-269"];
m8_164 [cluster="Unk.ToDecimal", file="MacdAlphaModel.cs", label="Entry Unk.ToDecimal", span=""];
m8_218 [cluster="System.Net.HttpWebRequest.GetResponse()", file="MacdAlphaModel.cs", label="Entry System.Net.HttpWebRequest.GetResponse()", span="0-0"];
m8_370 [cluster="Oanda.RestV20.Model.LimitOrderRequest.LimitOrderRequest(Oanda.RestV20.Model.LimitOrderRequest.TypeEnum?, string, string, string, Oanda.RestV20.Model.LimitOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.LimitOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.LimitOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Model.LimitOrderRequest.LimitOrderRequest(Oanda.RestV20.Model.LimitOrderRequest.TypeEnum?, string, string, string, Oanda.RestV20.Model.LimitOrderRequest.TimeInForceEnum?, string, Oanda.RestV20.Model.LimitOrderRequest.PositionFillEnum?, Oanda.RestV20.Model.LimitOrderRequest.TriggerConditionEnum?, Oanda.RestV20.Model.ClientExtensions, Oanda.RestV20.Model.TakeProfitDetails, Oanda.RestV20.Model.StopLossDetails, Oanda.RestV20.Model.TrailingStopLossDetails, Oanda.RestV20.Model.ClientExtensions)", span="245-245"];
m8_162 [cluster="Unk.>", file="MacdAlphaModel.cs", label="Entry Unk.>", span=""];
m8_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", file="MacdAlphaModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, int>)", span="0-0"];
m8_123 [cluster="Oanda.RestV20.Session.StreamSession.StartSession()", file="MacdAlphaModel.cs", label="Entry Oanda.RestV20.Session.StreamSession.StartSession()", span="49-49"];
m8_313 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="52-52"];
m8_199 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", span="409-409"];
m8_200 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="var instrumentList = string.Join('','', instruments)", span="411-411"];
m8_201 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="var requestString = _apiStreaming.GetBasePath() + ''/accounts/'' + AccountId + ''/pricing/stream'' +\r\n                ''?instruments='' + Uri.EscapeDataString(instrumentList)", span="413-414"];
m8_202 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="var request = WebRequest.CreateHttp(requestString)", span="416-416"];
m8_203 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="request.Method = ''GET''", span="417-417"];
m8_204 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="request.Headers[HttpRequestHeader.Authorization] = Authorization", span="418-418"];
m8_205 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="request.Headers[OandaAgentKey] = Agent", span="419-419"];
m8_206 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="return request.GetResponse();", span="423-423"];
m8_207 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label=WebException, span="425-425"];
m8_208 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="ex.Response == null", span="427-427"];
m8_209 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="throw;", span="429-429"];
m8_210 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="var stream = GetResponseStream(ex.Response)", span="432-432"];
m8_211 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="var reader = new StreamReader(stream)", span="433-433"];
m8_212 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="throw new Exception(reader.ReadToEnd());", span="435-435"];
m8_213 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartRatesSession(System.Collections.Generic.List<string>)", span="409-409"];
m8_216 [cluster="System.Uri.EscapeDataString(string)", file="MacdAlphaModel.cs", label="Entry System.Uri.EscapeDataString(string)", span="0-0"];
m8_190 [cluster="Unk.GetLeanSymbol", file="MacdAlphaModel.cs", label="Entry Unk.GetLeanSymbol", span=""];
m8_311 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="MacdAlphaModel.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42"];
m8_130 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", span="291-291"];
m8_131 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="_ratesSession = new PricingStreamSession(this, instruments)", span="293-293"];
m8_132 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="_ratesSession.DataReceived += OnPricingDataReceived", span="294-294"];
m8_133 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="_ratesSession.StartSession()", span="295-295"];
m8_134 [cluster="QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", file="MacdAlphaModel.cs", label="Exit QuantConnect.Brokerages.Oanda.OandaRestApiV20.StartPricingStream(System.Collections.Generic.List<string>)", span="291-291"];
m8_38 [cluster="string.ToDecimal()", file="MacdAlphaModel.cs", label="Entry string.ToDecimal()", span="248-248"];
m8_368 [cluster="decimal.ToString()", file="MacdAlphaModel.cs", label="Entry decimal.ToString()", span="0-0"];
m8_256 [cluster="QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", file="MacdAlphaModel.cs", label="Entry QuantConnect.Brokerages.Oanda.OandaSymbolMapper.GetBrokerageSymbol(QuantConnect.Symbol)", span="888-888"];
m8_375 [file="MacdAlphaModel.cs", label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", span=""];
m10_139 [cluster="System.Convert.ToDouble(object)", file="PythonUtil.cs", label="Entry System.Convert.ToDouble(object)", span="0-0"];
m10_174 [cluster="Unk.ToPython", file="PythonUtil.cs", label="Entry Unk.ToPython", span=""];
m10_19 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="Py.GIL()", span="79-79"];
m10_38 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", color=green, community=0, file="PythonUtil.cs", label="0: Entry QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", span="262-262"];
m10_39 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PythonUtil.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="91-91"];
m10_29 [cluster="Unk.Select", file="PythonUtil.cs", label="Entry Unk.Select", span=""];
m10_30 [cluster="Unk.ToArray", file="PythonUtil.cs", label="Entry Unk.ToArray", span=""];
m10_31 [cluster="Unk.concat", file="PythonUtil.cs", label="Entry Unk.concat", span=""];
m10_32 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="77-77"];
m10_24 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnError(QuantConnect.Brokerages.WebSocketError)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.OnError(QuantConnect.Brokerages.WebSocketError)", span="112-112"];
m10_140 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="PythonUtil.cs", label="var seriesDict = GetPandasSeries(pandas, levels)", span="264-264"];
m10_145 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="PythonUtil.cs", label="return pandas.DataFrame(pyDict);", span="272-272"];
m10_141 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="PythonUtil.cs", label="Py.GIL()", span="265-265"];
m10_143 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="PythonUtil.cs", label=seriesDict, span="268-268"];
m10_142 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="PythonUtil.cs", label="var pyDict = new PyDict()", span="267-267"];
m10_144 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="PythonUtil.cs", label="pyDict.SetItem(series.Key, series.Value)", span="270-270"];
m10_146 [cluster="QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", file="PythonUtil.cs", label="Exit QuantConnect.Python.PandasData.ToPandasDataFrame(dynamic, int)", span="262-262"];
m10_33 [cluster="lambda expression", file="PythonUtil.cs", label="x.Value.Levels", span="77-77"];
m10_25 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="Entry QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", span="163-163"];
m10_26 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="PythonUtil.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m10_27 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="Entry QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", span="189-189"];
m10_93 [cluster="System.Collections.Generic.List<T>.List()", file="PythonUtil.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m10_91 [cluster="string.Split(params char[])", file="PythonUtil.cs", label="Entry string.Split(params char[])", span="0-0"];
m10_90 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="PythonUtil.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m10_18 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="var maxLevels = sliceDataDict.Max(x => x.Value.Levels)", span="77-77"];
m10_28 [cluster="Unk.Send", file="PythonUtil.cs", label="Entry Unk.Send", span=""];
m10_20 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="var dataFrames = sliceDataDict.Select(x => x.Value.ToPandasDataFrame(_pandas, maxLevels))", span="81-81"];
m10_36 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Close()", span="71-71"];
m10_35 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="PythonUtil.cs", label="wrapped.Close()", span="73-73"];
m10_34 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Close()", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Close()", span="71-71"];
m10_37 [cluster="Unk.Close", file="PythonUtil.cs", label="Entry Unk.Close", span=""];
m10_62 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="115-115"];
m10_65 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="116-116"];
m10_68 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="120-120"];
m10_71 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="120-120"];
m10_63 [cluster="lambda expression", file="PythonUtil.cs", label="x.EndTime", span="115-115"];
m10_64 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="115-115"];
m10_66 [cluster="lambda expression", file="PythonUtil.cs", label="(double)x.Value", span="116-116"];
m10_67 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="116-116"];
m10_69 [cluster="lambda expression", file="PythonUtil.cs", label="x.ToLower()", span="120-120"];
m10_70 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="120-120"];
m10_72 [cluster="lambda expression", file="PythonUtil.cs", label=x, span="120-120"];
m10_73 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="120-120"];
m10_94 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="180-180"];
m10_97 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="180-180"];
m10_95 [cluster="lambda expression", file="PythonUtil.cs", label=k, span="180-180"];
m10_96 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="180-180"];
m10_98 [cluster="lambda expression", file="PythonUtil.cs", label="new List<double>()", span="180-180"];
m10_99 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="180-180"];
m10_179 [cluster="lambda expression", file="PythonUtil.cs", label="pyObjectArray[levels - 1] = x.ToPython()", span="319-319"];
m10_187 [cluster="lambda expression", file="PythonUtil.cs", label="pandas.Series(v.Value, index)", span="326-326"];
m10_180 [cluster="lambda expression", file="PythonUtil.cs", label="return new PyTuple(pyObjectArray);", span="320-320"];
m10_178 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="317-321"];
m10_183 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="326-326"];
m10_186 [cluster="lambda expression", file="PythonUtil.cs", label="Entry lambda expression", span="326-326"];
m10_181 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="317-321"];
m10_184 [cluster="lambda expression", file="PythonUtil.cs", label="k.Key", span="326-326"];
m10_185 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="326-326"];
m10_188 [cluster="lambda expression", file="PythonUtil.cs", label="Exit lambda expression", span="326-326"];
m10_12 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="var sliceDataDict = new Dictionary<Symbol, PandasData>()", span="63-63"];
m10_16 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="sliceDataDict.Add(baseData.Symbol, new PandasData(baseData))", span="71-71"];
m10_21 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="return _pandas.concat(dataFrames.ToArray());", span="82-82"];
m10_11 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m10_13 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label=data, span="65-65"];
m10_15 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="!sliceDataDict.ContainsKey(baseData.Symbol)", span="69-69"];
m10_17 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="sliceDataDict[baseData.Symbol].Add(baseData)", span="73-73"];
m10_22 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="Exit QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m10_61 [cluster="Unk.DataFrame", file="PythonUtil.cs", label="Entry Unk.DataFrame", span=""];
m10_10 [cluster="WebSocket.cstr", file="PythonUtil.cs", label="Entry WebSocket.cstr", span=""];
m10_58 [cluster="Unk.Series", file="PythonUtil.cs", label="Entry Unk.Series", span=""];
m10_173 [cluster="QuantConnect.Symbol.ToString()", file="PythonUtil.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m10_177 [cluster="Unk.from_tuples", file="PythonUtil.cs", label="Entry Unk.from_tuples", span=""];
m10_77 [cluster="Unk.Repr", file="PythonUtil.cs", label="Entry Unk.Repr", span=""];
m10_74 [cluster="QuantConnect.Python.PandasConverter.ToString()", file="PythonUtil.cs", label="Entry QuantConnect.Python.PandasConverter.ToString()", span="128-128"];
m10_75 [cluster="QuantConnect.Python.PandasConverter.ToString()", file="PythonUtil.cs", label="return _pandas == null\r\n                ? ''pandas module was not imported.''\r\n                : _pandas.Repr();", span="130-132"];
m10_76 [cluster="QuantConnect.Python.PandasConverter.ToString()", file="PythonUtil.cs", label="Exit QuantConnect.Python.PandasConverter.ToString()", span="128-128"];
m10_49 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="PythonUtil.cs", label=data, span="113-113"];
m10_0 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="PythonUtil.cs", label="Entry QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", span="33-33"];
m10_1 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="PythonUtil.cs", label="wrapped != null", span="35-35"];
m10_4 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="PythonUtil.cs", label="wrapped = new WebSocket(url)", span="41-41"];
m10_2 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="PythonUtil.cs", label="throw new InvalidOperationException(''WebSocketWrapper has already been initialized for: '' + _url);", span="37-37"];
m10_3 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="PythonUtil.cs", label="_url = url", span="40-40"];
m10_5 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="PythonUtil.cs", label="wrapped.OnOpen += (sender, args) => OnOpen()", span="43-43"];
m10_6 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="PythonUtil.cs", label="wrapped.OnMessage += (sender, args) => OnMessage(new WebSocketMessage(args.Data))", span="44-44"];
m10_7 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="PythonUtil.cs", label="wrapped.OnError += (sender, args) => OnError(new WebSocketError(args.Message, args.Exception))", span="45-45"];
m10_78 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="var columns = ''open,high,low,close''", span="165-165"];
m10_79 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="baseData is TradeBar", span="167-167"];
m10_81 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="baseData is QuoteBar", span="171-171"];
m10_83 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="baseData is DynamicData", span="175-175"];
m10_84 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="columns = ''value,'' + string.Join('','', ((DynamicData)baseData).GetStorageDictionary().Keys)", span="177-177"];
m10_86 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_symbol = baseData.Symbol", span="181-181"];
m10_80 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="columns += '',volume''", span="169-169"];
m10_82 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="columns += '',askopen,askhigh,asklow,askclose,asksize,bidopen,bidhigh,bidlow,bidclose,bidsize''", span="173-173"];
m10_85 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series = columns.Split(',').ToDictionary(k => k, v => new List<double>())", span="180-180"];
m10_87 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_timeIndex = new List<DateTime>()", span="182-182"];
m10_88 [cluster="QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="Exit QuantConnect.Python.PandasData.PandasData(QuantConnect.Data.IBaseData)", span="163-163"];
m10_100 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_timeIndex.Add(baseData.Time)", span="191-191"];
m10_101 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="var bar = baseData as IBaseDataBar", span="193-193"];
m10_132 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="var data = baseData as DynamicData", span="245-245"];
m10_102 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="bar != null", span="194-194"];
m10_103 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''open''].Add((double)bar.Open)", span="196-196"];
m10_104 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''high''].Add((double)bar.High)", span="197-197"];
m10_105 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''low''].Add((double)bar.Low)", span="198-198"];
m10_106 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''close''].Add((double)bar.Close)", span="199-199"];
m10_107 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="var tradeBar = bar as TradeBar", span="201-201"];
m10_110 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="var quoteBar = bar as QuoteBar", span="207-207"];
m10_108 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="tradeBar != null", span="202-202"];
m10_109 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''volume''].Add((double)tradeBar.Volume)", span="204-204"];
m10_111 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="quoteBar != null", span="208-208"];
m10_112 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''asksize''].Add((double)quoteBar.LastAskSize)", span="210-210"];
m10_113 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''bidsize''].Add((double)quoteBar.LastBidSize)", span="211-211"];
m10_114 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="quoteBar.Ask != null", span="213-213"];
m10_115 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''askopen''].Add((double)quoteBar.Ask.Open)", span="215-215"];
m10_116 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''askhigh''].Add((double)quoteBar.Ask.High)", span="216-216"];
m10_117 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''asklow''].Add((double)quoteBar.Ask.Low)", span="217-217"];
m10_118 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''askclose''].Add((double)quoteBar.Ask.Close)", span="218-218"];
m10_123 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="quoteBar.Bid != null", span="228-228"];
m10_124 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''bidopen''].Add((double)quoteBar.Bid.Open)", span="230-230"];
m10_125 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''bidhigh''].Add((double)quoteBar.Bid.High)", span="231-231"];
m10_126 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''bidlow''].Add((double)quoteBar.Bid.Low)", span="232-232"];
m10_127 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''bidclose''].Add((double)quoteBar.Bid.Close)", span="233-233"];
m10_119 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''askopen''].Add(double.NaN)", span="222-222"];
m10_120 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''askhigh''].Add(double.NaN)", span="223-223"];
m10_121 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''asklow''].Add(double.NaN)", span="224-224"];
m10_122 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''askclose''].Add(double.NaN)", span="225-225"];
m10_128 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''bidopen''].Add(double.NaN)", span="237-237"];
m10_129 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''bidhigh''].Add(double.NaN)", span="238-238"];
m10_130 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''bidlow''].Add(double.NaN)", span="239-239"];
m10_131 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''bidclose''].Add(double.NaN)", span="240-240"];
m10_133 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="data != null", span="246-246"];
m10_134 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="data.GetStorageDictionary()", span="248-248"];
m10_136 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[''value''].Add((double)data.Value)", span="252-252"];
m10_135 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="_series[kvp.Key].Add(Convert.ToDouble(kvp.Value))", span="250-250"];
m10_137 [cluster="QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", file="PythonUtil.cs", label="Exit QuantConnect.Python.PandasData.Add(QuantConnect.Data.IBaseData)", span="189-189"];
m10_60 [cluster="Unk.OrderBy", file="PythonUtil.cs", label="Entry Unk.OrderBy", span=""];
m10_46 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", color=green, community=0, file="PythonUtil.cs", label="0: Open?.Invoke(this, EventArgs.Empty)", span="124-124"];
m10_47 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", span="121-121"];
m10_53 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="PythonUtil.cs", label="return _pandas.DataFrame(pyDict, columns: data.Keys.Select(x => x.ToLower()).OrderBy(x => x));", span="120-120"];
m10_48 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="PythonUtil.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m10_52 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="PythonUtil.cs", label="pyDict.SetItem(kvp.Key.ToLower(), _pandas.Series(values, index))", span="117-117"];
m10_50 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="PythonUtil.cs", label="QuantConnect.Brokerages.WebSocketWrapper", span=""];
m10_51 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="PythonUtil.cs", label="var values = kvp.Value.Select(x => (double)x.Value).ToList()", span="116-116"];
m10_54 [cluster="QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", file="PythonUtil.cs", label="Exit QuantConnect.Python.PandasConverter.GetIndicatorDataFrame(System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>)", span="107-107"];
m10_56 [cluster="Unk.ToList", file="PythonUtil.cs", label="Entry Unk.ToList", span=""];
m10_182 [cluster="PyTuple.cstr", file="PythonUtil.cs", label="Entry PyTuple.cstr", span=""];
m10_41 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PythonUtil.cs", label="0: data", span="95-95"];
m10_42 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, file="PythonUtil.cs", label="0: sliceData.Add(baseData)", span="97-97"];
m10_43 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PythonUtil.cs", label="return sliceData.ToPandasDataFrame(_pandas);", span="99-99"];
m10_45 [cluster="QuantConnect.Brokerages.WebSocketWrapper.OnOpen()", color=green, community=0, file="PythonUtil.cs", label="1: Logging.Log.Trace($''WebSocketWrapper.OnOpen(): Connection opened({IsOpen}: {_url}'')", span="123-123"];
m10_57 [cluster="string.ToLower()", file="PythonUtil.cs", label="Entry string.ToLower()", span="0-0"];
m10_40 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="PythonUtil.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m10_44 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="PythonUtil.cs", label="Exit QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="91-91"];
m10_59 [cluster="Unk.SetItem", file="PythonUtil.cs", label="Entry Unk.SetItem", span=""];
m10_9 [cluster="Unk.Import", file="PythonUtil.cs", label="Entry Unk.Import", span=""];
m10_175 [cluster="System.Enum.ToString()", file="PythonUtil.cs", label="Entry System.Enum.ToString()", span="0-0"];
m10_176 [cluster="PyString.cstr", file="PythonUtil.cs", label="Entry PyString.cstr", span=""];
m10_147 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="Entry QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", span="282-282"];
m10_148 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="var pyObjectArray = new PyObject[levels]", span="284-284"];
m10_149 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="pyObjectArray[levels - 2] = _symbol.ToString().ToPython()", span="285-285"];
m10_159 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="i < levels - 1", span="301-301"];
m10_164 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="levels == 3", span="311-311"];
m10_166 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="levels == 5", span="312-312"];
m10_169 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="var tuples = _timeIndex.Select(x =>\r\n                {\r\n                    pyObjectArray[levels - 1] = x.ToPython();\r\n                    return new PyTuple(pyObjectArray);\r\n                }).ToArray()", span="317-321"];
m10_170 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="var index = pandas.MultiIndex.from_tuples(tuples, names: names.Split(','))", span="323-323"];
m10_171 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="return _series.ToDictionary(k => k.Key, v => pandas.Series(v.Value, index));", span="326-326"];
m10_151 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="pyObjectArray[0] = _symbol.ID.Date.ToPython()", span="289-289"];
m10_152 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="pyObjectArray[1] = _symbol.Value.ToPython()", span="290-290"];
m10_154 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="pyObjectArray[0] = _symbol.ID.Date.ToPython()", span="294-294"];
m10_155 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="pyObjectArray[1] = _symbol.ID.StrikePrice.ToPython()", span="295-295"];
m10_156 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="pyObjectArray[2] = _symbol.ID.OptionRight.ToString().ToPython()", span="296-296"];
m10_157 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="pyObjectArray[3] = _symbol.Value.ToPython()", span="297-297"];
m10_160 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="pyObjectArray[i] == null", span="303-303"];
m10_161 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="pyObjectArray[i] = new PyString(string.Empty)", span="305-305"];
m10_150 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="_symbol.SecurityType == SecurityType.Future", span="287-287"];
m10_153 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="_symbol.SecurityType == SecurityType.Option", span="292-292"];
m10_158 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="var i = 0", span="301-301"];
m10_162 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="i++", span="301-301"];
m10_163 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="var names = ''symbol,time''", span="310-310"];
m10_165 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="names = ''expiry,symbol,time''", span="311-311"];
m10_167 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="names = ''expiry,strike,type,symbol,time''", span="312-312"];
m10_168 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="Py.GIL()", span="314-314"];
m10_172 [cluster="QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", file="PythonUtil.cs", label="Exit QuantConnect.Python.PandasData.GetPandasSeries(dynamic, int)", span="282-282"];
m10_8 [cluster="QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", file="PythonUtil.cs", label="Exit QuantConnect.Brokerages.WebSocketWrapper.Initialize(string)", span="33-33"];
m10_23 [cluster="WebSocketError.cstr", file="PythonUtil.cs", label="Entry WebSocketError.cstr", span=""];
m10_138 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PythonUtil.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m10_14 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="PythonUtil.cs", label="slice.Values", span="67-67"];
m10_89 [cluster="QuantConnect.Data.DynamicData.GetStorageDictionary()", file="PythonUtil.cs", label="Entry QuantConnect.Data.DynamicData.GetStorageDictionary()", span="131-131"];
m10_55 [cluster="PyDict.cstr", file="PythonUtil.cs", label="Entry PyDict.cstr", span=""];
m10_92 [cluster="Unk.ToDictionary", file="PythonUtil.cs", label="Entry Unk.ToDictionary", span=""];
m10_189 [file="PythonUtil.cs", label="QuantConnect.Python.PandasConverter", span=""];
m10_190 [file="PythonUtil.cs", label=maxLevels, span=""];
m10_191 [file="PythonUtil.cs", label="QuantConnect.Python.PandasData", span=""];
m10_192 [file="PythonUtil.cs", label=int, span=""];
m10_193 [file="PythonUtil.cs", label=pyObjectArray, span=""];
m10_194 [file="PythonUtil.cs", label=dynamic, span=""];
m10_195 [file="PythonUtil.cs", label=index, span=""];
m11_6 [cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="48-48"];
m11_7 [cluster="QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Interfaces.IApi.GetAlgorithmStatus(string)", span="48-48"];
m11_14 [cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="84-84"];
m11_15 [cluster="QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Interfaces.IApi.Store(string, string, QuantConnect.StoragePermissions, bool)", span="84-84"];
m11_2 [cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="36-36"];
m11_3 [cluster="QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Interfaces.IApi.ReadLogAllowance(int, string)", span="36-36"];
m11_12 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", span="79-79"];
m11_13 [cluster="QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Interfaces.IApi.MarketToday(System.DateTime, QuantConnect.SecurityType)", span="79-79"];
m11_10 [cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="71-71"];
m11_11 [cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="71-71"];
m11_4 [cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="41-41"];
m11_5 [cluster="QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Interfaces.IApi.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="41-41"];
m11_0 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="31-31"];
m11_1 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Interfaces.IApi.Initialize()", span="31-31"];
m11_8 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="QCAlgorithmFramework.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="56-56"];
m11_9 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="QCAlgorithmFramework.cs", label="Exit QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="56-56"];
m12_6 [cluster="PyObject.TryConvert<T>(out T)", file="QCAlgorithmFramework.Python.cs", label="Entry PyObject.TryConvert<T>(out T)", span="1037-1037"];
m12_31 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(QuantConnect.Algorithm.Framework.Selection.IUniverseSelectionModel)", span="198-198"];
m12_39 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(QuantConnect.Algorithm.Framework.Risk.IRiskManagementModel)", span="234-234"];
m12_25 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", span="84-84"];
m12_26 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs", label="IUniverseSelectionModel model", span="86-86"];
m12_27 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs", label="portfolioSelection.TryConvert(out model)", span="87-87"];
m12_29 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs", label="UniverseSelection = new UniverseSelectionModelPythonWrapper(portfolioSelection)", span="93-93"];
m12_28 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", color=green, community=0, file="QCAlgorithmFramework.Python.cs", label="1: SetPortfolioSelection(model)", span="89-89"];
m12_30 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioSelection(PyObject)", span="84-84"];
m12_24 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.PortfolioConstructionModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioConstructionModelPythonWrapper.PortfolioConstructionModelPythonWrapper(PyObject)", span="34-34"];
m12_32 [cluster="QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.Selection.UniverseSelectionModelPythonWrapper.UniverseSelectionModelPythonWrapper(PyObject)", span="33-33"];
m12_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaModelPythonWrapper.AlphaModelPythonWrapper(PyObject)", span="34-34"];
m12_9 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", span="50-50"];
m12_10 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="IExecutionModel model", span="52-52"];
m12_11 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="execution.TryConvert(out model)", span="53-53"];
m12_13 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Execution = new ExecutionModelPythonWrapper(execution)", span="59-59"];
m12_12 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="SetExecution(model)", span="55-55"];
m12_14 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(PyObject)", span="50-50"];
m12_7 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(QuantConnect.Algorithm.Framework.Alphas.IAlphaModel)", span="207-207"];
m12_15 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetExecution(QuantConnect.Algorithm.Framework.Execution.IExecutionModel)", span="225-225"];
m12_0 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", span="33-33"];
m12_1 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="IAlphaModel model", span="35-35"];
m12_2 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="alpha.TryConvert(out model)", span="36-36"];
m12_4 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Alpha = new AlphaModelPythonWrapper(alpha)", span="42-42"];
m12_3 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="SetAlpha(model)", span="38-38"];
m12_5 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetAlpha(PyObject)", span="33-33"];
m12_23 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(QuantConnect.Algorithm.Framework.Portfolio.IPortfolioConstructionModel)", span="216-216"];
m12_16 [cluster="QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ExecutionModelPythonWrapper.ExecutionModelPythonWrapper(PyObject)", span="34-34"];
m12_17 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", span="67-67"];
m12_18 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="IPortfolioConstructionModel model", span="69-69"];
m12_19 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="portfolioConstruction.TryConvert(out model)", span="70-70"];
m12_21 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="PortfolioConstruction = new PortfolioConstructionModelPythonWrapper(portfolioConstruction)", span="76-76"];
m12_20 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="SetPortfolioConstruction(model)", span="72-72"];
m12_22 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetPortfolioConstruction(PyObject)", span="67-67"];
m12_33 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", span="101-101"];
m12_34 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="IRiskManagementModel model", span="103-103"];
m12_35 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="riskManagement.TryConvert(out model)", span="104-104"];
m12_37 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="RiskManagement = new RiskManagementModelPythonWrapper(riskManagement)", span="110-110"];
m12_36 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="SetRiskManagement(model)", span="106-106"];
m12_38 [cluster="QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Exit QuantConnect.Algorithm.Framework.QCAlgorithmFramework.SetRiskManagement(PyObject)", span="101-101"];
m12_40 [cluster="QuantConnect.Algorithm.Framework.Risk.RiskManagementModelPythonWrapper.RiskManagementModelPythonWrapper(PyObject)", file="QCAlgorithmFramework.Python.cs", label="Entry QuantConnect.Algorithm.Framework.Risk.RiskManagementModelPythonWrapper.RiskManagementModelPythonWrapper(PyObject)", span="34-34"];
m12_41 [file="QCAlgorithmFramework.Python.cs", label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", span=""];
m13_57 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="929-929"];
m13_58 [cluster="lambda expression", file="RegressionTests.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="929-929"];
m13_59 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="929-929"];
m13_56 [cluster="Unk.ToArray", file="RegressionTests.cs", label="Entry Unk.ToArray", span=""];
m13_0 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="26-26"];
m13_1 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''quandl-auth-token'', ''WyAazVXnq7ATy_fefTqm'')", span="28-28"];
m13_3 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="parameters.Algorithm == ''OptionChainConsistencyRegressionAlgorithm''", span="31-31"];
m13_7 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="parameters.Algorithm == ''BasicTemplateIntrinioEconomicData''", span="39-39"];
m13_10 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="AlgorithmRunner.RunLocalBacktest(parameters.Algorithm, parameters.Statistics, parameters.AlphaStatistics, parameters.Language)", span="49-49"];
m13_2 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''forward-console-messages'', ''false'')", span="29-29"];
m13_4 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-minute-limit'', ''100'')", span="34-34"];
m13_5 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-second-limit'', ''100'')", span="35-35"];
m13_6 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''symbol-tick-limit'', ''100'')", span="36-36"];
m13_8 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="var intrinioCredentials = new Dictionary<string, string>\r\n                {\r\n                    {''intrinio-username'', ''121078c02c20a09aa5d9c541087e7fa4''},\r\n                    {''intrinio-password'', ''65be35238b14de4cd0afc0edf364efc3'' }\r\n                }", span="41-45"];
m13_9 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="QuantConnect.Configuration.Config.Set(''parameters'', JsonConvert.SerializeObject(intrinioCredentials))", span="46-46"];
m13_11 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsRegression(QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters)", span="26-26"];
m13_54 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="939-939"];
m13_62 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="941-941"];
m13_63 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="942-942"];
m13_64 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="943-943"];
m13_65 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="939-939"];
m13_61 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m13_15 [cluster="Unk.Set", file="RegressionTests.cs", label="Entry Unk.Set", span=""];
m13_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m13_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var emptyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''0''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0%''},\r\n                {''Drawdown'', ''0%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="54-75"];
m13_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="77-98"];
m13_51 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataSameResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ForexInternalFeedOnDataHigherResolutionRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateIntrinioEconomicData'', basicTemplateIntrinioEconomicData, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DuplicateSecurityWithBenchmarkRegressionAlgorithm'', emptyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''VolumeWeightedAveragePriceExecutionModelRegressionAlgorithm'', volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''StandardDeviationExecutionModelRegressionAlgorithm'', standardDeviationExecutionModelRegressionAlgorithmStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFrameworkAlgorithm'', basicTemplateFrameworkStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomIndicatorAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateCryptoAlgorithm'', basicTemplateCryptoAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''IndicatorSuiteAlgorithm'', indicatorSuiteAlgorithmStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="852-929"];
m13_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFrameworkStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.007''},\r\n                {''Beta'', ''76.375''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.355''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n                {''Total Insights Generated'', ''100''},\r\n                {''Total Insights Closed'', ''99''},\r\n                {''Total Insights Analysis Completed'', ''86''},\r\n                {''Long Insight Count'', ''100''},\r\n                {''Short Insight Count'', ''0''},\r\n                {''Long/Short Ratio'', ''100%''},\r\n                {''Estimated Monthly Alpha Value'', ''$151474.9016''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$24404.2897''},\r\n                {''Mean Population Estimated Insight Value'', ''$246.508''},\r\n                {''Mean Population Direction'', ''48.8372%''},\r\n                {''Mean Population Magnitude'', ''48.8372%''},\r\n                {''Rolling Averaged Population Direction'', ''68.2411%''},\r\n                {''Rolling Averaged Population Magnitude'', ''68.2411%''}\r\n            }", span="100-134"];
m13_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="136-157"];
m13_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''9.733%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.513''},\r\n                {''Net Profit'', ''0.119%''},\r\n                {''Sharpe Ratio'', ''1.954''},\r\n                {''Loss Rate'', ''25%''},\r\n                {''Win Rate'', ''75%''},\r\n                {''Profit-Loss Ratio'', ''1.02''},\r\n                {''Alpha'', ''-0.107''},\r\n                {''Beta'', ''15.186''},\r\n                {''Annual Standard Deviation'', ''0.031''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''1.6''},\r\n                {''Tracking Error'', ''0.031''},\r\n                {''Treynor Ratio'', ''0.004''},\r\n                {''Total Fees'', ''$34.00''},\r\n            }", span="159-180"];
m13_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.358''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.065''},\r\n                {''Beta'', ''-0.998''},\r\n                {''Annual Standard Deviation'', ''0.062''},\r\n                {''Annual Variance'', ''0.004''},\r\n                {''Information Ratio'', ''-1.679''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''0.085''},\r\n                {''Total Fees'', ''$21.00''},\r\n            }", span="182-203"];
m13_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.019''},\r\n                {''Beta'', ''-0.339''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-38.93''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.067''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="205-226"];
m13_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.973''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.68''},\r\n                {''Beta'', ''-29.799''},\r\n                {''Annual Standard Deviation'', ''0.318''},\r\n                {''Annual Variance'', ''0.101''},\r\n                {''Information Ratio'', ''-4.034''},\r\n                {''Tracking Error'', ''0.318''},\r\n                {''Treynor Ratio'', ''0.042''},\r\n                {''Total Fees'', ''$5.00''},\r\n            }", span="228-249"];
m13_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.365%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.2''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''73.725''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.183''},\r\n                {''Tracking Error'', ''0.84''},\r\n                {''Treynor Ratio'', ''0.014''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="251-272"];
m13_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.004''},\r\n                {''Beta'', ''82.594''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''6.4''},\r\n                {''Tracking Error'', ''0.141''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="274-295"];
m13_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''90''},\r\n                {''Average Win'', ''0.78%''},\r\n                {''Average Loss'', ''-0.40%''},\r\n                {''Compounding Annual Return'', ''18.626%''},\r\n                {''Drawdown'', ''4.700%''},\r\n                {''Expectancy'', ''1.071''},\r\n                {''Net Profit'', ''18.626%''},\r\n                {''Sharpe Ratio'', ''1.997''},\r\n                {''Loss Rate'', ''30%''},\r\n                {''Win Rate'', ''70%''},\r\n                {''Profit-Loss Ratio'', ''1.97''},\r\n                {''Alpha'', ''0.112''},\r\n                {''Beta'', ''2.998''},\r\n                {''Annual Standard Deviation'', ''0.086''},\r\n                {''Annual Variance'', ''0.007''},\r\n                {''Information Ratio'', ''1.768''},\r\n                {''Tracking Error'', ''0.086''},\r\n                {''Treynor Ratio'', ''0.057''},\r\n                {''Total Fees'', ''$240.17''},\r\n            }", span="297-318"];
m13_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''66''},\r\n                {''Average Win'', ''1.06%''},\r\n                {''Average Loss'', ''-0.50%''},\r\n                {''Compounding Annual Return'', ''18.581%''},\r\n                {''Drawdown'', ''7.100%''},\r\n                {''Expectancy'', ''0.815''},\r\n                {''Net Profit'', ''18.581%''},\r\n                {''Sharpe Ratio'', ''1.44''},\r\n                {''Loss Rate'', ''42%''},\r\n                {''Win Rate'', ''58%''},\r\n                {''Profit-Loss Ratio'', ''2.13''},\r\n                {''Alpha'', ''0.309''},\r\n                {''Beta'', ''-10.101''},\r\n                {''Annual Standard Deviation'', ''0.1''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''1.277''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.014''},\r\n                {''Total Fees'', ''$185.37''},\r\n            }", span="320-341"];
m13_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''78.067''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''10.897''},\r\n                {''Tracking Error'', ''0.078''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="343-364"];
m13_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''79.192''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''4.466''},\r\n                {''Tracking Error'', ''0.193''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="366-387"];
m13_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.267''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.008''},\r\n                {''Beta'', ''0.032''},\r\n                {''Annual Standard Deviation'', ''0.027''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-1.014''},\r\n                {''Tracking Error'', ''0.027''},\r\n                {''Treynor Ratio'', ''-0.222''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="389-410"];
m13_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.288''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.105''},\r\n                {''Beta'', ''-46.73''},\r\n                {''Annual Standard Deviation'', ''0.235''},\r\n                {''Annual Variance'', ''0.055''},\r\n                {''Information Ratio'', ''-3.366''},\r\n                {''Tracking Error'', ''0.236''},\r\n                {''Treynor Ratio'', ''0.017''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="412-433"];
m13_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.299''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''0.111''},\r\n                {''Beta'', ''-3.721''},\r\n                {''Annual Standard Deviation'', ''0.124''},\r\n                {''Annual Variance'', ''0.015''},\r\n                {''Information Ratio'', ''0.137''},\r\n                {''Tracking Error'', ''0.124''},\r\n                {''Treynor Ratio'', ''-0.01''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="435-456"];
m13_35 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'',''2''},\r\n                {''Average Win'',''0%''},\r\n                {''Average Loss'',''-0.02%''},\r\n                {''Compounding Annual Return'',''-1.242%''},\r\n                {''Drawdown'',''0.000%''},\r\n                {''Expectancy'',''-1''},\r\n                {''Net Profit'',''-0.017%''},\r\n                {''Sharpe Ratio'',''-7.099''},\r\n                {''Loss Rate'',''100%''},\r\n                {''Win Rate'',''0%''},\r\n                {''Profit-Loss Ratio'',''0''},\r\n                {''Alpha'',''-0.01''},\r\n                {''Beta'',''0''},\r\n                {''Annual Standard Deviation'',''0.001''},\r\n                {''Annual Variance'',''0''},\r\n                {''Information Ratio'',''7.126''},\r\n                {''Tracking Error'',''6.064''},\r\n                {''Treynor Ratio'',''174.306''},\r\n                {''Total Fees'',''$0.50''},\r\n            }", span="458-479"];
m13_36 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="481-502"];
m13_37 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="504-525"];
m13_38 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="527-548"];
m13_39 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0.28%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-1.247%''},\r\n                {''Drawdown'', ''1.300%''},\r\n                {''Expectancy'', ''-0.078''},\r\n                {''Net Profit'', ''-0.105%''},\r\n                {''Sharpe Ratio'', ''-0.27''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''0.84''},\r\n                {''Alpha'', ''-0.239''},\r\n                {''Beta'', ''12.675''},\r\n                {''Annual Standard Deviation'', ''0.04''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''-0.723''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''-0.001''},\r\n                {''Total Fees'', ''$23.23''},\r\n            }", span="550-571"];
m13_40 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.33%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.358''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.93''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="573-594"];
m13_41 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.461''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.706''},\r\n                {''Beta'', ''15.77''},\r\n                {''Annual Standard Deviation'', ''0.146''},\r\n                {''Annual Variance'', ''0.021''},\r\n                {''Information Ratio'', ''6.359''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''0.06''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="596-617"];
m13_42 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="619-640"];
m13_43 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="642-663"];
m13_44 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0.95%''},\r\n                {''Average Loss'', ''-2.02%''},\r\n                {''Compounding Annual Return'', ''254.082%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''-0.018''},\r\n                {''Net Profit'', ''1.395%''},\r\n                {''Sharpe Ratio'', ''1.176''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''0.47''},\r\n                {''Alpha'', ''-1.18''},\r\n                {''Beta'', ''1.249''},\r\n                {''Annual Standard Deviation'', ''0.813''},\r\n                {''Annual Variance'', ''0.66''},\r\n                {''Information Ratio'', ''-4.244''},\r\n                {''Tracking Error'', ''0.178''},\r\n                {''Treynor Ratio'', ''0.765''},\r\n                {''Total Fees'', ''$2045.20''}\r\n            }", span="665-686"];
m13_45 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="688-709"];
m13_46 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateCryptoAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''25''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.46%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''5.400%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-5.603%''},\r\n                {''Sharpe Ratio'', ''-19.82''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-11.165''},\r\n                {''Beta'', ''585.081''},\r\n                {''Annual Standard Deviation'', ''0.36''},\r\n                {''Annual Variance'', ''0.129''},\r\n                {''Information Ratio'', ''-19.873''},\r\n                {''Tracking Error'', ''0.359''},\r\n                {''Treynor Ratio'', ''-0.012''},\r\n                {''Total Fees'', ''$6076.49''}\r\n            }", span="711-732"];
m13_47 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var indicatorSuiteAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''19.097%''},\r\n                {''Drawdown'', ''7.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''41.840%''},\r\n                {''Sharpe Ratio'', ''1.639''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.29''},\r\n                {''Beta'', ''-5.494''},\r\n                {''Annual Standard Deviation'', ''0.11''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''1.457''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''-0.033''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="734-755"];
m13_48 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateIntrinioEconomicData = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''89''},\r\n                {''Average Win'', ''0.09%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''5.704%''},\r\n                {''Drawdown'', ''4.800%''},\r\n                {''Expectancy'', ''1.469''},\r\n                {''Net Profit'', ''24.865%''},\r\n                {''Sharpe Ratio'', ''1.143''},\r\n                {''Loss Rate'', ''70%''},\r\n                {''Win Rate'', ''30%''},\r\n                {''Profit-Loss Ratio'', ''7.23''},\r\n                {''Alpha'', ''0.065''},\r\n                {''Beta'', ''-0.522''},\r\n                {''Annual Standard Deviation'', ''0.048''},\r\n                {''Annual Variance'', ''0.002''},\r\n                {''Information Ratio'', ''0.74''},\r\n                {''Tracking Error'', ''0.048''},\r\n                {''Treynor Ratio'', ''-0.105''},\r\n                {''Total Fees'', ''$100.58''}\r\n            }", span="757-778"];
m13_49 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''61''},\r\n                {''Average Win'', ''0.10%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''585.503%''},\r\n                {''Drawdown'', ''0.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.492%''},\r\n                {''Sharpe Ratio'', ''9.136''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''113.313''},\r\n                {''Annual Standard Deviation'', ''0.137''},\r\n                {''Annual Variance'', ''0.019''},\r\n                {''Information Ratio'', ''9.063''},\r\n                {''Tracking Error'', ''0.137''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$96.79''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$54250.3481''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$8740.3339''},\r\n                {''Mean Population Estimated Insight Value'', ''$2913.4446''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="780-814"];
m13_50 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var standardDeviationExecutionModelRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''63''},\r\n                {''Average Win'', ''0.06%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''793.499%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''2.840%''},\r\n                {''Sharpe Ratio'', ''10.781''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''128.815''},\r\n                {''Annual Standard Deviation'', ''0.132''},\r\n                {''Annual Variance'', ''0.017''},\r\n                {''Information Ratio'', ''10.71''},\r\n                {''Tracking Error'', ''0.132''},\r\n                {''Treynor Ratio'', ''0.011''},\r\n                {''Total Fees'', ''$76.61''},\r\n                {''Total Insights Generated'', ''5''},\r\n                {''Total Insights Closed'', ''3''},\r\n                {''Total Insights Analysis Completed'', ''0''},\r\n                {''Long Insight Count'', ''3''},\r\n                {''Short Insight Count'', ''2''},\r\n                {''Long/Short Ratio'', ''150.0%''},\r\n                {''Estimated Monthly Alpha Value'', ''$54250.3481''},\r\n                {''Total Accumulated Estimated Alpha Value'', ''$8740.3339''},\r\n                {''Mean Population Estimated Insight Value'', ''$2913.4446''},\r\n                {''Mean Population Direction'', ''0%''},\r\n                {''Mean Population Magnitude'', ''0%''},\r\n                {''Rolling Averaged Population Direction'', ''0%''},\r\n                {''Rolling Averaged Population Magnitude'', ''0%''},\r\n            }", span="816-850"];
m13_52 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="52-52"];
m13_16 [cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.AlphaRuntimeStatistics, QuantConnect.Language)", span="44-44"];
m13_60 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m13_55 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m13_14 [cluster="Unk.SerializeObject", file="RegressionTests.cs", label="Entry Unk.SerializeObject", span=""];
m13_12 [cluster="QuantConnect.Configuration.Config.Set(string, string)", file="RegressionTests.cs", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m13_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m13_66 [file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m14_11 [cluster="QuantConnect.Api.Api.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Api.Api.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="87-87"];
m14_12 [cluster="QuantConnect.Api.Api.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Api.Api.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="87-87"];
m14_32 [cluster="QuantConnect.Api.Api.Store(string, string, QuantConnect.StoragePermissions, bool)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Api.Api.Store(string, string, QuantConnect.StoragePermissions, bool)", span="138-138"];
m14_33 [cluster="QuantConnect.Api.Api.Store(string, string, QuantConnect.StoragePermissions, bool)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Api.Api.Store(string, string, QuantConnect.StoragePermissions, bool)", span="138-138"];
m14_5 [cluster="QuantConnect.Api.Api.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Api.Api.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="65-65"];
m14_6 [cluster="QuantConnect.Api.Api.UpdateDailyLogUsed(int, string, string, int, string, bool)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Api.Api.UpdateDailyLogUsed(int, string, string, int, string, bool)", span="65-65"];
m14_2 [cluster="QuantConnect.Api.Api.ReadLogAllowance(int, string)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Api.Api.ReadLogAllowance(int, string)", span="50-50"];
m14_3 [cluster="QuantConnect.Api.Api.ReadLogAllowance(int, string)", file="RsiAlphaModel.cs", label="return new[] { Int32.MaxValue, Int32.MaxValue, Int32.MaxValue };", span="52-52"];
m14_4 [cluster="QuantConnect.Api.Api.ReadLogAllowance(int, string)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Api.Api.ReadLogAllowance(int, string)", span="50-50"];
m14_13 [cluster="QuantConnect.Api.Api.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Api.Api.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="105-105"];
m14_14 [cluster="QuantConnect.Api.Api.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Api.Api.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="105-105"];
m14_7 [cluster="QuantConnect.Api.Api.GetAlgorithmStatus(string)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Api.Api.GetAlgorithmStatus(string)", span="75-75"];
m14_8 [cluster="QuantConnect.Api.Api.GetAlgorithmStatus(string)", file="RsiAlphaModel.cs", label="return new AlgorithmControl();", span="77-77"];
m14_9 [cluster="QuantConnect.Api.Api.GetAlgorithmStatus(string)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Api.Api.GetAlgorithmStatus(string)", span="75-75"];
m14_29 [cluster="QuantConnect.Packets.MarketToday.Equity(System.DateTime)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Packets.MarketToday.Equity(System.DateTime)", span="128-128"];
m14_31 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="RsiAlphaModel.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m14_30 [cluster="QuantConnect.Packets.MarketToday.Forex(System.DateTime)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Packets.MarketToday.Forex(System.DateTime)", span="98-98"];
m14_10 [cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="RsiAlphaModel.cs", label="Entry QuantConnect.AlgorithmControl.AlgorithmControl()", span="389-389"];
m14_0 [cluster="QuantConnect.Api.Api.Initialize()", file="RsiAlphaModel.cs", label="Entry QuantConnect.Api.Api.Initialize()", span="39-39"];
m14_1 [cluster="QuantConnect.Api.Api.Initialize()", file="RsiAlphaModel.cs", label="Exit QuantConnect.Api.Api.Initialize()", span="39-39"];
m14_15 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", span="113-113"];
m14_16 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=green, community=0, file="RsiAlphaModel.cs", label="1: type", span="115-115"];
m14_21 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=green, community=0, file="RsiAlphaModel.cs", label="0: return Packets.MarketToday.OpenAllDay(time);", span="122-122"];
m14_23 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=green, community=0, file="RsiAlphaModel.cs", label="0: return Packets.MarketToday.Equity(time);", span="125-125"];
m14_25 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=green, community=0, file="RsiAlphaModel.cs", label="0: return Packets.MarketToday.Forex(time);", span="128-128"];
m14_17 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=green, community=0, file="RsiAlphaModel.cs", label="1: SecurityType.Base", span="118-118"];
m14_22 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=green, community=0, file="RsiAlphaModel.cs", label="0: SecurityType.Equity", span="124-124"];
m14_24 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=green, community=0, file="RsiAlphaModel.cs", label="0: SecurityType.Forex", span="127-127"];
m14_26 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=green, community=0, file="RsiAlphaModel.cs", label="1: throw new ArgumentOutOfRangeException(''type'');", span="131-131"];
m14_18 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=green, community=0, file="RsiAlphaModel.cs", label="1: SecurityType.Future", span="119-119"];
m14_19 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=green, community=0, file="RsiAlphaModel.cs", label="1: SecurityType.Option", span="120-120"];
m14_20 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", color=red, community=0, file="RsiAlphaModel.cs", label="0: SecurityType.Commodity", span="121-121"];
m14_27 [cluster="QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", file="RsiAlphaModel.cs", label="Exit QuantConnect.Api.Api.MarketToday(System.DateTime, QuantConnect.SecurityType)", span="113-113"];
m14_28 [cluster="QuantConnect.Packets.MarketToday.OpenAllDay(System.DateTime)", file="RsiAlphaModel.cs", label="Entry QuantConnect.Packets.MarketToday.OpenAllDay(System.DateTime)", span="66-66"];
m15_3 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SliceExtensions.cs", label="Subscriptions = new HashSet<SubscriptionDataConfig>()", span="62-62"];
m15_67 [cluster="string.Format(string, object, object, object)", file="SliceExtensions.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m15_68 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="SliceExtensions.cs", label="return slices.Select(x => x.Get<T>()).Where(x => x.Count > 0);", span="124-124"];
m15_69 [cluster="lambda expression", color=green, community=0, file="SliceExtensions.cs", label="0: x.Symbol == symbol", span="172-172"];
m15_43 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SliceExtensions.cs", label="selector = data =>\r\n                {\r\n                    var dyn = (DynamicData) (object) data;\r\n                    return (decimal) dyn.GetProperty(field);\r\n                }", span="87-91"];
m15_11 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SliceExtensions.cs", label="dataType = typeof(Tick)", span="97-97"];
m15_12 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SliceExtensions.cs", label="var tickType = LeanData.GetCommonTickTypeForCommonDataTypes(dataType, symbol.SecurityType)", span="99-99"];
m15_13 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="SliceExtensions.cs", label="return Add(dataType, tickType, symbol, resolution, timeZone, exchangeTimeZone, isCustomData, fillDataForward, extendedMarketHours);", span="100-100"];
m15_63 [cluster="lambda expression", file="SliceExtensions.cs", label="Entry lambda expression", span="98-98"];
m15_100 [cluster="QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable<decimal>)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable<decimal>)", span="166-166"];
m15_101 [cluster="QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable<decimal>)", file="SliceExtensions.cs", label="return decimals.Select(x => (double) x).ToArray();", span="168-168"];
m15_102 [cluster="QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable<decimal>)", file="SliceExtensions.cs", label="Exit QuantConnect.Data.SliceExtensions.ToDoubleArray(System.Collections.Generic.IEnumerable<decimal>)", span="166-166"];
m15_8 [cluster="lambda expression", file="SliceExtensions.cs", label="Entry lambda expression", span="35-35"];
m15_9 [cluster="lambda expression", file="SliceExtensions.cs", label="x.Bars", span="35-35"];
m15_10 [cluster="lambda expression", file="SliceExtensions.cs", label="Exit lambda expression", span="35-35"];
m15_14 [cluster="lambda expression", file="SliceExtensions.cs", label="Entry lambda expression", span="45-45"];
m15_77 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", span="134-134"];
m15_90 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", span="148-148"];
m15_15 [cluster="lambda expression", file="SliceExtensions.cs", label="x.Ticks.Count > 0", span="45-45"];
m15_103 [cluster="Unk.ToArray", file="SliceExtensions.cs", label="Entry Unk.ToArray", span=""];
m15_66 [cluster="Unk.Join", file="SliceExtensions.cs", label="Entry Unk.Join", span=""];
m15_47 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SliceExtensions.cs", label="selector = (Func<T, decimal>) ExpressionBuilder.MakePropertyOrFieldSelector(typeof (T), field).Compile()", span="102-102"];
m15_37 [cluster="lambda expression", file="SliceExtensions.cs", label="Entry lambda expression", span="71-71"];
m15_87 [cluster="lambda expression", file="SliceExtensions.cs", label="Entry lambda expression", span="137-137"];
m15_5 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SliceExtensions.cs", label="Exit QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m15_6 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SliceExtensions.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m15_7 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="SliceExtensions.cs", label="Entry QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m15_17 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="dataTimeZone == null", span="121-121"];
m15_16 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m15_18 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="throw new ArgumentNullException(''dataTimeZone'', ''DataTimeZone is a required parameter for new subscriptions.  Set to the time zone the raw data is time stamped in.'');", span="123-123"];
m15_19 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="exchangeTimeZone == null", span="125-125"];
m15_25 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="Subscriptions.Add(newConfig)", span="140-140"];
m15_29 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="_timeKeeper.AddTimeZone(exchangeTimeZone)", span="156-156"];
m15_24 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="return newConfig;", span="137-137"];
m15_28 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="throw new Exception(\r\n                    string.Format(\r\n                        ''The maximum number of concurrent market data subscriptions was exceeded ({0}). Please reduce the number of symbols requested or increase the limit using Settings.DataSubscriptionLimit.'',\r\n                        _algorithmSettings.DataSubscriptionLimit));", span="149-152"];
m15_26 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="var uniqueCount = Subscriptions\r\n                .Where(x => !x.Symbol.IsCanonical())\r\n                .DistinctBy(x => x.Symbol.Value)\r\n                .Count()", span="143-146"];
m15_30 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="HasCustomData = HasCustomData || isCustomData", span="159-159"];
m15_35 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="SliceExtensions.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m15_38 [cluster="lambda expression", file="SliceExtensions.cs", label="x[symbol]", span="71-71"];
m15_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m15_36 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="SliceExtensions.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m15_39 [cluster="Unk.DistinctBy", file="SliceExtensions.cs", label="Entry Unk.DistinctBy", span=""];
m15_60 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SliceExtensions.cs", label="Exit QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m15_64 [cluster="Unk.Add", file="SliceExtensions.cs", label="Entry Unk.Add", span=""];
m15_59 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", color=green, community=0, file="SliceExtensions.cs", label="1: throw new ArgumentException(string.Format(''Type mismatch found between consolidator and symbol. '' +\r\n                ''Symbol: {0} does not support input type: {1}. Supported types: {2}.'',\r\n                symbol.Value, \r\n                consolidator.InputType.Name,\r\n                string.Join('','', subscriptions.Select(x => x.Type.Name))));", span="190-194"];
m15_58 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", color=green, community=0, file="SliceExtensions.cs", label="0: return;", span="186-186"];
m15_61 [cluster="Unk.ToList", file="SliceExtensions.cs", label="Entry Unk.ToList", span=""];
m15_65 [cluster="Unk.Select", file="SliceExtensions.cs", label="Entry Unk.Select", span=""];
m15_70 [cluster="lambda expression", file="SliceExtensions.cs", label="Exit lambda expression", span="172-172"];
m15_74 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", color=green, community=0, file="SliceExtensions.cs", label="2: return new Dictionary<SecurityType, List<TickType>>()\r\n            {\r\n                {SecurityType.Base, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Forex, new List<TickType>() { TickType.Quote } },\r\n                {SecurityType.Equity, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Option, new List<TickType>() { TickType.Quote, TickType.Trade, TickType.OpenInterest } },\r\n                {SecurityType.Cfd, new List<TickType>() { TickType.Quote } },\r\n                {SecurityType.Future, new List<TickType>() { TickType.Quote, TickType.Trade, TickType.OpenInterest } },\r\n                {SecurityType.Commodity, new List<TickType>() { TickType.Trade } },\r\n                {SecurityType.Crypto, new List<TickType>() { TickType.Quote, TickType.Trade } },\r\n            };", span="202-212"];
m15_71 [cluster="lambda expression", file="SliceExtensions.cs", label="Entry lambda expression", span="194-194"];
m15_72 [cluster="lambda expression", color=green, community=0, file="SliceExtensions.cs", label="0: x.Type.Name", span="194-194"];
m15_75 [cluster="QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", file="SliceExtensions.cs", label="Exit QuantConnect.Data.SubscriptionManager.DefaultDataTypes()", span="200-200"];
m15_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SliceExtensions.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m15_84 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SliceExtensions.cs", label="return AvailableDataTypes[symbolSecurityType].Select(tickType => new Tuple<Type, TickType>(LeanData.GetDataType(resolution, tickType), tickType)).ToList();", span="237-237"];
m15_88 [cluster="lambda expression", file="SliceExtensions.cs", label="new Tuple<Type, TickType>(LeanData.GetDataType(resolution, tickType), tickType)", span="237-237"];
m15_80 [cluster="QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", file="SliceExtensions.cs", label="Exit QuantConnect.Data.SubscriptionManager.GetDataTypesForSecurity(QuantConnect.SecurityType)", span="218-218"];
m15_83 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SliceExtensions.cs", label="return new List<Tuple<Type, TickType>> { new Tuple<Type, TickType>(typeof(ZipEntryName), TickType.Quote) };", span="234-234"];
m15_81 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m15_82 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SliceExtensions.cs", label=isCanonical, span="232-232"];
m15_85 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="SliceExtensions.cs", label="Exit QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="230-230"];
m15_89 [cluster="lambda expression", file="SliceExtensions.cs", label="Exit lambda expression", span="237-237"];
m15_104 [cluster="lambda expression", file="SliceExtensions.cs", label="Entry lambda expression", span="168-168"];
m15_105 [cluster="lambda expression", file="SliceExtensions.cs", label="(double) x", span="168-168"];
m15_106 [cluster="lambda expression", file="SliceExtensions.cs", label="Exit lambda expression", span="168-168"];
m15_73 [cluster="QuantConnect.Data.Slice.Get<T>()", file="SliceExtensions.cs", label="Entry QuantConnect.Data.Slice.Get<T>()", span="244-244"];
m15_44 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SliceExtensions.cs", label="typeof (T) == typeof (List<Tick>)", span="93-93"];
m15_48 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SliceExtensions.cs", label=dataDictionaries, span="105-105"];
m15_46 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SliceExtensions.cs", label="selector = ticks => dataSelector(((List<Tick>) (object) ticks).Last())", span="98-98"];
m15_45 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SliceExtensions.cs", label="var dataSelector = (Func<Tick, decimal>) ExpressionBuilder.MakePropertyOrFieldSelector(typeof (Tick), field).Compile()", span="97-97"];
m15_50 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SliceExtensions.cs", label="dataDictionary.TryGetValue(symbol, out item)", span="108-108"];
m15_49 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SliceExtensions.cs", label="T item", span="107-107"];
m15_0 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m15_1 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SliceExtensions.cs", label="_algorithmSettings = algorithmSettings", span="59-59"];
m15_2 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SliceExtensions.cs", label="_timeKeeper = timeKeeper", span="60-60"];
m15_31 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="return newConfig;", span="161-161"];
m15_32 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SliceExtensions.cs", label="Exit QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.TickType, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="119-119"];
m15_33 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="SliceExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m15_22 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SliceExtensions.cs", label="Exit QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", span="55-55"];
m15_27 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
m15_21 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SliceExtensions.cs", label="return slices.TradeBars().Where(x => x.ContainsKey(symbol)).Select(x => x[symbol]);", span="57-57"];
m15_23 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.TradeBars()", file="SliceExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.TradeBars()", span="33-33"];
m15_20 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", span="55-55"];
m15_86 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="SliceExtensions.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m15_98 [cluster="QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol, out dynamic)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.Slice.TryGetValue(QuantConnect.Symbol, out dynamic)", span="292-292"];
m15_41 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>, QuantConnect.Symbol, string)", file="SliceExtensions.cs", label="Func<T, decimal> selector", span="84-84"];
m15_78 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", file="SliceExtensions.cs", label="return slices.Select(x => x.Get<T>()).Where(x => x.ContainsKey(symbol)).Select(x => x[symbol]);", span="137-137"];
m15_79 [cluster="QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", color=green, community=0, file="SliceExtensions.cs", label="1: Exit QuantConnect.Data.SliceExtensions.Get<T>(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol)", span="134-134"];
m15_62 [cluster="QuantConnect.Data.DynamicData.GetProperty(string)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.DynamicData.GetProperty(string)", span="83-83"];
m15_53 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", color=green, community=0, file="SliceExtensions.cs", label="0: subscriptions.Count == 0", span="174-174"];
m15_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SliceExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m15_51 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SliceExtensions.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m15_42 [cluster="string.Format(string, object)", file="SliceExtensions.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_52 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", color=green, community=0, file="SliceExtensions.cs", label="1: var subscriptions = Subscriptions.Where(x => x.Symbol == symbol).ToList()", span="172-172"];
m15_4 [cluster="Unk.Select", file="SliceExtensions.cs", label="Entry Unk.Select", span=""];
m15_91 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SliceExtensions.cs", label="QuantConnect.Data.SubscriptionManager", span=""];
m15_95 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SliceExtensions.cs", label="yield return field(item.Last());", span="155-155"];
m15_96 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SliceExtensions.cs", label="yield return field(item);", span="156-156"];
m15_93 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SliceExtensions.cs", label="QuantConnect.Resolution", span=""];
m15_92 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SliceExtensions.cs", label="dynamic item", span="152-152"];
m15_94 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SliceExtensions.cs", label="item is List<Tick>", span="155-155"];
m15_97 [cluster="QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SliceExtensions.cs", label="Exit QuantConnect.Data.SliceExtensions.Get(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>, QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", span="148-148"];
m15_55 [cluster="System.Linq.Expressions.LambdaExpression.Compile()", color=green, community=0, file="SliceExtensions.cs", label="0: Entry System.Linq.Expressions.LambdaExpression.Compile()", span="0-0"];
m15_54 [cluster="QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", color=green, community=0, file="SliceExtensions.cs", label="1: Entry QuantConnect.Util.ExpressionBuilder.MakePropertyOrFieldSelector(System.Type, string)", span="33-33"];
m15_56 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", color=green, community=0, file="SliceExtensions.cs", label="0: Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m15_57 [cluster="System.Func<T, TResult>.Invoke(T)", color=green, community=0, file="SliceExtensions.cs", label="1: Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m15_99 [cluster="Unk.Last", file="SliceExtensions.cs", label="Entry Unk.Last", span=""];
m15_107 [file="SliceExtensions.cs", label="QuantConnect.Symbol", span=""];
m15_108 [file="SliceExtensions.cs", label="QuantConnect.Symbol", span=""];
m15_109 [file="SliceExtensions.cs", label=string, span=""];
m15_110 [file="SliceExtensions.cs", label=dataSelector, span=""];
m15_111 [file="SliceExtensions.cs", label="QuantConnect.Symbol", span=""];
m16_18 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", span="235-235"];
m16_151 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="StandardDeviationExecutionModel.cs", label="var subscriptionDataConfig = GetSubscriptionDataConfig<T>(symbol, resolution)", span="238-238"];
m16_152 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="StandardDeviationExecutionModel.cs", label="var security = GetSecurity(subscriptionDataConfig)", span="239-239"];
m16_153 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="StandardDeviationExecutionModel.cs", label="return data.Select(t => TimeSlice.Create(\r\n               t.Time,\r\n               TimeZones.Utc,\r\n               new CashBook(),\r\n               new List<DataFeedPacket> { new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() { t as BaseData }) },\r\n               new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())).Slice);", span="241-246"];
m16_154 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetHistory<T>(QuantConnect.Symbol, QuantConnect.Resolution, System.Collections.Generic.IEnumerable<T>)", span="235-235"];
m16_160 [cluster="System.Collections.Generic.List<T>.List()", file="StandardDeviationExecutionModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_162 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58"];
m16_54 [cluster="Unk.ToArray", file="StandardDeviationExecutionModel.cs", label="Entry Unk.ToArray", span=""];
m16_102 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", span="169-169"];
m16_125 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="dataFrame = converter.GetDataFrame(history)", span="212-212"];
m16_105 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var config = GetSubscriptionDataConfig<Quandl>(symbol, Resolution.Daily)", span="174-174"];
m16_124 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var history = GetHistory(symbol, Resolution.Daily, rawBars)", span="211-211"];
m16_120 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(rawBars[i].Value, value)", span="204-204"];
m16_122 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(((DynamicData)rawBars[i]).GetProperty(''settle''), settle)", span="206-206"];
m16_136 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(rawBars[i].Value, value)", span="228-228"];
m16_138 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(((DynamicData)rawBars[i]).GetProperty(''settle''), settle)", span="230-230"];
m16_115 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(count, 10)", span="198-198"];
m16_131 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(count, 10)", span="222-222"];
m16_114 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="197-197"];
m16_130 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="221-221"];
m16_111 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="192-192"];
m16_113 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="195-195"];
m16_119 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var value = subDataFrame.loc[index].value.AsManagedObject(typeof(decimal))", span="203-203"];
m16_121 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var settle = subDataFrame.loc[index].settle.AsManagedObject(typeof(decimal))", span="205-205"];
m16_127 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="216-216"];
m16_129 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="219-219"];
m16_135 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var value = subDataFrame.loc[index].value.AsManagedObject(typeof(decimal))", span="227-227"];
m16_137 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var settle = subDataFrame.loc[index].settle.AsManagedObject(typeof(decimal))", span="229-229"];
m16_110 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Py.GIL()", span="190-190"];
m16_126 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Py.GIL()", span="214-214"];
m16_103 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var converter = new PandasConverter()", span="171-171"];
m16_128 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="218-218"];
m16_104 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var symbol = Symbols.LTCUSD", span="172-172"];
m16_106 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var quandl = new Quandl()", span="175-175"];
m16_107 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="quandl.Reader(config, ''date,open,high,low,close,settle'', DateTime.UtcNow, false)", span="176-176"];
m16_108 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i =>\r\n                {\r\n                    var line = $''{DateTime.UtcNow.AddDays(i).ToString(''yyyy-MM-dd'')},{i + 101},{i + 102},{i + 100},{i + 101},{i + 101}'';\r\n                    return quandl.Reader(config, line, DateTime.UtcNow.AddDays(i), false);\r\n                })\r\n                .ToArray()", span="178-185"];
m16_117 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="i < count", span="200-200"];
m16_133 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="i < count", span="224-224"];
m16_116 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var i = 0", span="200-200"];
m16_123 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="i++", span="200-200"];
m16_132 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var i = 0", span="224-224"];
m16_139 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="i++", span="224-224"];
m16_112 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="194-194"];
m16_109 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="188-188"];
m16_118 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var index = subDataFrame.index[i]", span="202-202"];
m16_134 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="var index = subDataFrame.index[i]", span="226-226"];
m16_140 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesCustomDataBars()", span="169-169"];
m16_156 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Entry lambda expression", span="241-246"];
m16_98 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="new QuoteBar(DateTime.UtcNow.AddMinutes(i), symbol, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m)", span="121-121"];
m16_97 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Entry lambda expression", span="121-121"];
m16_147 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="return quandl.Reader(config, line, DateTime.UtcNow.AddDays(i), false);", span="183-183"];
m16_157 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="TimeSlice.Create(\r\n               t.Time,\r\n               TimeZones.Utc,\r\n               new CashBook(),\r\n               new List<DataFeedPacket> { new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() { t as BaseData }) },\r\n               new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())).Slice", span="241-246"];
m16_99 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Exit lambda expression", span="121-121"];
m16_61 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="new TradeBar(DateTime.UtcNow.AddMinutes(i), symbol, i + 101m, i + 102m, i + 100m, i + 101m, 0m)", span="66-66"];
m16_60 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Entry lambda expression", span="66-66"];
m16_145 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Entry lambda expression", span="180-184"];
m16_146 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="var line = $''{DateTime.UtcNow.AddDays(i).ToString(''yyyy-MM-dd'')},{i + 101},{i + 102},{i + 100},{i + 101},{i + 101}''", span="182-182"];
m16_148 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Exit lambda expression", span="180-184"];
m16_158 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Exit lambda expression", span="241-246"];
m16_62 [cluster="lambda expression", file="StandardDeviationExecutionModel.cs", label="Exit lambda expression", span="66-66"];
m16_56 [cluster="Unk.IsFalse", file="StandardDeviationExecutionModel.cs", label="Entry Unk.IsFalse", span=""];
m16_101 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m16_166 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m16_159 [cluster="QuantConnect.Securities.CashBook.CashBook()", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Securities.CashBook.CashBook()", span="50-50"];
m16_11 [cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36"];
m16_100 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m16_17 [cluster="Unk.IsTrue", file="StandardDeviationExecutionModel.cs", label="Entry Unk.IsTrue", span=""];
m16_163 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
m16_150 [cluster="System.DateTime.ToString(string)", file="StandardDeviationExecutionModel.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m16_142 [cluster="QuantConnect.Data.Custom.Quandl.Quandl()", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.Custom.Quandl.Quandl()", span="62-62"];
m16_14 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="91-91"];
m16_149 [cluster="System.DateTime.AddDays(double)", file="StandardDeviationExecutionModel.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m16_170 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m16_58 [cluster="Unk.AreEqual", file="StandardDeviationExecutionModel.cs", label="Entry Unk.AreEqual", span=""];
m16_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="StandardDeviationExecutionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m16_59 [cluster="Unk.GetHistory", file="StandardDeviationExecutionModel.cs", label="Entry Unk.GetHistory", span=""];
m16_65 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", span="114-114"];
m16_83 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="1: dataFrame = converter.GetDataFrame(history)", span="147-147"];
m16_66 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var converter = new PandasConverter()", span="116-116"];
m16_82 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="0: var history = GetHistory(symbol, Resolution.Minute, rawBars)", span="146-146"];
m16_84 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="0: Py.GIL()", span="149-149"];
m16_85 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="151-151"];
m16_86 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="153-153"];
m16_67 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var symbol = Symbols.EURUSD", span="117-117"];
m16_68 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new QuoteBar(DateTime.UtcNow.AddMinutes(i), symbol, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m, new Bar(i + 1.01m, i + 1.02m, i + 1.00m, i + 1.01m), 0m))\r\n                .ToArray()", span="119-122"];
m16_77 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="i < count", span="137-137"];
m16_80 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="0: Assert.AreEqual(rawBars[i].Close, close)", span="141-141"];
m16_79 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="0: var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="140-140"];
m16_76 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var i = 0", span="137-137"];
m16_81 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="i++", span="137-137"];
m16_74 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="1: var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="134-134"];
m16_72 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="131-131"];
m16_73 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="132-132"];
m16_75 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", color=green, community=0, file="StandardDeviationExecutionModel.cs", label="0: Assert.AreEqual(count, 10)", span="135-135"];
m16_78 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var index = subDataFrame.index[i]", span="139-139"];
m16_69 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="125-125"];
m16_87 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="154-154"];
m16_88 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="156-156"];
m16_92 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var index = subDataFrame.index[i]", span="161-161"];
m16_93 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var close = subDataFrame.loc[index].askclose.AsManagedObject(typeof(decimal))", span="162-162"];
m16_94 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(rawBars[i].Ask.Close, close)", span="163-163"];
m16_89 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(count, 10)", span="157-157"];
m16_71 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="129-129"];
m16_70 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="Py.GIL()", span="127-127"];
m16_91 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="i < count", span="159-159"];
m16_90 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="var i = 0", span="159-159"];
m16_95 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="i++", span="159-159"];
m16_96 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesQuoteBars()", span="114-114"];
m16_12 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="StandardDeviationExecutionModel.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m16_52 [cluster="System.Linq.Enumerable.Range(int, int)", file="StandardDeviationExecutionModel.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m16_0 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", span="35-35"];
m16_7 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="dataFrame = converter.GetDataFrame(history)", span="50-50"];
m16_6 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="var history = GetHistory(Symbols.SPY, Resolution.Minute, rawBars)", span="49-49"];
m16_5 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="Assert.IsTrue(dataFrame.empty.AsManagedObject(typeof(bool)))", span="45-45"];
m16_9 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="Assert.IsTrue(dataFrame.empty.AsManagedObject(typeof(bool)))", span="54-54"];
m16_4 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="Py.GIL()", span="43-43"];
m16_8 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="Py.GIL()", span="52-52"];
m16_1 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="var converter = new PandasConverter()", span="37-37"];
m16_2 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="var rawBars = Enumerable.Empty<TradeBar>().ToArray()", span="38-38"];
m16_3 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="41-41"];
m16_10 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesEmptyEnumerable()", span="35-35"];
m16_169 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317"];
m16_15 [cluster="Unk.GIL", file="StandardDeviationExecutionModel.cs", label="Entry Unk.GIL", span=""];
m16_57 [cluster="Unk.__len__", file="StandardDeviationExecutionModel.cs", label="Entry Unk.__len__", span=""];
m16_144 [cluster="QuantConnect.Data.DynamicData.GetProperty(string)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.DynamicData.GetProperty(string)", span="83-83"];
m16_172 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m16_55 [cluster="Unk.GetDataFrame", file="StandardDeviationExecutionModel.cs", label="Entry Unk.GetDataFrame", span=""];
m16_155 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", span="262-262"];
m16_167 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="StandardDeviationExecutionModel.cs", label="return new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc),\r\n                subscriptionDataConfig,\r\n                new Cash(CashBook.AccountCurrency, 0, 1m),\r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="264-268"];
m16_168 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSecurity(QuantConnect.Data.SubscriptionDataConfig)", span="262-262"];
m16_143 [cluster="QuantConnect.Data.Custom.Quandl.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.Custom.Quandl.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="83-83"];
m16_141 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", span="249-249"];
m16_164 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="return new SubscriptionDataConfig(\r\n                typeof(T),\r\n                symbol,\r\n                resolution,\r\n                TimeZones.Utc,\r\n                TimeZones.Utc,\r\n                true,\r\n                true,\r\n                false);", span="251-259"];
m16_165 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.GetSubscriptionDataConfig<T>(QuantConnect.Symbol, QuantConnect.Resolution)", span="249-249"];
m16_19 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61"];
m16_64 [cluster="System.DateTime.AddMinutes(double)", file="StandardDeviationExecutionModel.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m16_171 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m16_16 [cluster="Unk.AsManagedObject", file="StandardDeviationExecutionModel.cs", label="Entry Unk.AsManagedObject", span=""];
m16_53 [cluster="Unk.Select", file="StandardDeviationExecutionModel.cs", label="Entry Unk.Select", span=""];
m16_63 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158"];
m16_20 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Entry QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", span="59-59"];
m16_38 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="dataFrame = converter.GetDataFrame(history)", span="92-92"];
m16_37 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var history = GetHistory(symbol, Resolution.Minute, rawBars)", span="91-91"];
m16_32 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="i < count", span="82-82"];
m16_35 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(rawBars[i].Close, close)", span="86-86"];
m16_49 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(rawBars[i].Close, close)", span="108-108"];
m16_30 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(count, 10)", span="80-80"];
m16_44 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Assert.AreEqual(count, 10)", span="102-102"];
m16_29 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="79-79"];
m16_43 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var count = subDataFrame.__len__().AsManagedObject(typeof(int))", span="101-101"];
m16_26 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="74-74"];
m16_28 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="77-77"];
m16_34 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="85-85"];
m16_40 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(dataFrame.empty.AsManagedObject(typeof(bool)))", span="96-96"];
m16_42 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Assert.IsFalse(subDataFrame.empty.AsManagedObject(typeof(bool)))", span="99-99"];
m16_48 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var close = subDataFrame.loc[index].close.AsManagedObject(typeof(decimal))", span="107-107"];
m16_25 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Py.GIL()", span="72-72"];
m16_39 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Py.GIL()", span="94-94"];
m16_21 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var converter = new PandasConverter()", span="61-61"];
m16_41 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="98-98"];
m16_22 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var symbol = Symbols.SPY", span="62-62"];
m16_23 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var rawBars = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new TradeBar(DateTime.UtcNow.AddMinutes(i), symbol, i + 101m, i + 102m, i + 100m, i + 101m, 0m))\r\n                .ToArray()", span="64-67"];
m16_31 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var i = 0", span="82-82"];
m16_36 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="i++", span="82-82"];
m16_46 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="i < count", span="104-104"];
m16_33 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var index = subDataFrame.index[i]", span="84-84"];
m16_45 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var i = 0", span="104-104"];
m16_50 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="i++", span="104-104"];
m16_27 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var subDataFrame = dataFrame.loc[symbol]", span="76-76"];
m16_24 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="dynamic dataFrame = converter.GetDataFrame(rawBars)", span="70-70"];
m16_47 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="var index = subDataFrame.index[i]", span="106-106"];
m16_51 [cluster="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", file="StandardDeviationExecutionModel.cs", label="Exit QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests.HandlesTradeBars()", span="59-59"];
m16_173 [file="StandardDeviationExecutionModel.cs", label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", span=""];
m16_175 [file="StandardDeviationExecutionModel.cs", label=symbol, span=""];
m16_176 [file="StandardDeviationExecutionModel.cs", label=config, span=""];
m16_177 [file="StandardDeviationExecutionModel.cs", label=quandl, span=""];
m16_178 [file="StandardDeviationExecutionModel.cs", label=subscriptionDataConfig, span=""];
m16_179 [file="StandardDeviationExecutionModel.cs", label=security, span=""];
m16_174 [file="StandardDeviationExecutionModel.cs", label=symbol, span=""];
d44 -> d45  [color=green, key=0, style=solid];
d44 -> d262  [color=green, key=2, style=dotted];
d10 -> d44  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d45  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d11  [key=0, style=solid];
d10 -> d12  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d14  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d10 -> d22  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d10 -> d24  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d25  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d26  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d27  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d28  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d29  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d30  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d31  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d32  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d33  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d331  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d34  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d36  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d39  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d49  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d10 -> d52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Server.ILeanManager", style=dashed];
d10 -> d57  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d58  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d61  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d67  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
d10 -> d70  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d73  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d75  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
d10 -> d79  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d80  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d85  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d86  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d91  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Alpha.IAlphaHandler", style=dashed];
d10 -> d92  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
d10 -> d93  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
d10 -> d94  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d95  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d96  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d98  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d100  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d103  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d106  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d108  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d110  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d112  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d118  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d120  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d126  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d129  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d130  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d132  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d137  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d138  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d141  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d142  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d143  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d144  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
d10 -> d145  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d147  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d160  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d169  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d171  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d176  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d178  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d180  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d182  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d186  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d192  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d194  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d196  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d198  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d200  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d205  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d206  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d208  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d212  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
d10 -> d214  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d215  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d216  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d219  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d222  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d225  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Alpha.IAlphaHandler", style=dashed];
d10 -> d226  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d227  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d230  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d231  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d232  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d235  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d236  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d239  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d10 -> d240  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d241  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d242  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d243  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d244  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d10 -> d246  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d10 -> d247  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d34 -> d44  [color=green, key=0, style=solid];
d34 -> d35  [key=0, style=solid];
d34 -> d36  [color=darkseagreen4, key=1, label=config, style=dashed];
d34 -> d37  [color=darkseagreen4, key=1, label=config, style=dashed];
d34 -> d39  [color=darkseagreen4, key=1, label=config, style=dashed];
d34 -> d43  [color=darkseagreen4, key=1, label=config, style=dashed];
d45 -> d46  [color=green, key=0, style=solid];
d45 -> d217  [color=green, key=0, style=solid];
d45 -> d263  [color=green, key=2, style=dotted];
d45 -> d48  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d50  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d53  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d54  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d71  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d73  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d74  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d77  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d78  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d81  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d92  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d100  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d128  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d129  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d130  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d136  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d139  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d151  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d164  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d175  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d176  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d177  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d178  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d179  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d180  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d186  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d187  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d188  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d189  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d190  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d191  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d192  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d193  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d194  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d195  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d196  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d197  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d198  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d204  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d205  [color=green, key=1, label=timeSlice, style=dashed];
d45 -> d206  [color=green, key=1, label=timeSlice, style=dashed];
d613 -> d45  [color=green, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d46  [color=green, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d48  [color=green, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d47  [color=green, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d29  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d32  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d40  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d58  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d99  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d101  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d113  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d125  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d143  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d148  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d161  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d172  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d183  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d201  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d209  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d213  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d228  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d233  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d237  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d243  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d244  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d246  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d247  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d344  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d346  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d352  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d403  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d419  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d613 -> d602  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d216 -> d45  [color=green, key=0, style=solid];
d216 -> d317  [key=2, style=dotted];
d46 -> d47  [color=green, key=0, style=solid];
d217 -> d218  [key=0, style=solid];
d263 -> d10  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
d263 -> d348  [key=0, style=solid];
d263 -> d399  [color=crimson, key=0, style=bold];
d263 -> d409  [color=crimson, key=0, style=bold];
d263 -> d436  [color=crimson, key=0, style=bold];
d263 -> d349  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d350  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d351  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d352  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d354  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d357  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d360  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d364  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d379  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d388  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d395  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d398  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d404  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d408  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d263 -> d411  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d412  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d414  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d416  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
d263 -> d420  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d424  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d429  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d430  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d263 -> d435  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d48 -> d217  [color=green, key=0, style=solid];
d48 -> d264  [color=green, key=2, style=dotted];
d48 -> d265  [color=green, key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d50 -> d265  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d53 -> d56  [color=darkseagreen4, key=1, label=time, style=dashed];
d53 -> d67  [color=darkseagreen4, key=1, label=time, style=dashed];
d53 -> d69  [color=darkseagreen4, key=1, label=time, style=dashed];
d53 -> d70  [color=darkseagreen4, key=1, label=time, style=dashed];
d53 -> d101  [color=darkseagreen4, key=1, label=time, style=dashed];
d53 -> d124  [color=darkseagreen4, key=1, label=time, style=dashed];
d53 -> d125  [color=darkseagreen4, key=1, label=time, style=dashed];
d53 -> d127  [color=darkseagreen4, key=1, label=time, style=dashed];
d53 -> d157  [color=darkseagreen4, key=1, label=time, style=dashed];
d53 -> d213  [color=darkseagreen4, key=1, label=time, style=dashed];
d54 -> d55  [key=0, style=solid];
d71 -> d72  [key=0, style=solid];
d71 -> d77  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d73 -> d274  [key=2, style=dotted];
d74 -> d75  [key=0, style=solid];
d74 -> d77  [key=0, style=solid];
d74 -> d334  [color=darkseagreen4, key=1, label=symbol, style=dashed];
d77 -> d78  [key=0, style=solid];
d77 -> d81  [key=0, style=solid];
d78 -> d79  [key=0, style=solid];
d78 -> d81  [key=0, style=solid];
d78 -> d80  [color=darkseagreen4, key=1, label=security, style=dashed];
d81 -> d82  [key=0, style=solid];
d81 -> d86  [key=0, style=solid];
d81 -> d83  [color=darkseagreen4, key=1, label=update, style=dashed];
d92 -> d93  [key=0, style=solid];
d92 -> d284  [key=2, style=dotted];
d100 -> d262  [key=2, style=dotted];
d100 -> d217  [key=0, style=solid];
d100 -> d264  [key=2, style=dotted];
d128 -> d129  [key=0, style=solid];
d128 -> d136  [key=0, style=solid];
d129 -> d130  [key=0, style=solid];
d129 -> d296  [key=2, style=dotted];
d130 -> d131  [key=0, style=solid];
d130 -> d136  [key=0, style=solid];
d130 -> d297  [key=2, style=dotted];
d136 -> d137  [key=0, style=solid];
d136 -> d139  [key=0, style=solid];
d136 -> d138  [color=darkseagreen4, key=1, label=dividend, style=dashed];
d139 -> d140  [key=0, style=solid];
d139 -> d151  [key=0, style=solid];
d139 -> d141  [color=darkseagreen4, key=1, label=split, style=dashed];
d139 -> d142  [color=darkseagreen4, key=1, label=split, style=dashed];
d139 -> d143  [color=darkseagreen4, key=1, label=split, style=dashed];
d139 -> d144  [color=darkseagreen4, key=1, label=split, style=dashed];
d139 -> d338  [color=darkseagreen4, key=1, label=split, style=dashed];
d139 -> d145  [color=darkseagreen4, key=1, label=split, style=dashed];
d151 -> d152  [key=0, style=solid];
d151 -> d159  [key=0, style=solid];
d151 -> d164  [key=0, style=solid];
d151 -> d154  [color=darkseagreen4, key=1, label=update, style=dashed];
d151 -> d155  [color=darkseagreen4, key=1, label=update, style=dashed];
d151 -> d157  [color=darkseagreen4, key=1, label=update, style=dashed];
d164 -> d165  [key=0, style=solid];
d164 -> d175  [key=0, style=solid];
d164 -> d166  [color=darkseagreen4, key=1, label=update, style=dashed];
d164 -> d167  [color=darkseagreen4, key=1, label=update, style=dashed];
d164 -> d168  [color=darkseagreen4, key=1, label=update, style=dashed];
d175 -> d176  [key=0, style=solid];
d175 -> d177  [key=0, style=solid];
d176 -> d177  [key=0, style=solid];
d176 -> d274  [key=2, style=dotted];
d177 -> d178  [key=0, style=solid];
d177 -> d179  [key=0, style=solid];
d178 -> d179  [key=0, style=solid];
d178 -> d274  [key=2, style=dotted];
d179 -> d180  [key=0, style=solid];
d179 -> d181  [key=0, style=solid];
d179 -> d186  [key=0, style=solid];
d180 -> d181  [key=0, style=solid];
d180 -> d186  [key=0, style=solid];
d180 -> d274  [key=2, style=dotted];
d186 -> d187  [key=0, style=solid];
d186 -> d310  [key=2, style=dotted];
d187 -> d188  [key=0, style=solid];
d187 -> d311  [key=2, style=dotted];
d188 -> d189  [key=0, style=solid];
d188 -> d191  [key=0, style=solid];
d189 -> d190  [key=0, style=solid];
d189 -> d191  [key=0, style=solid];
d189 -> d255  [key=2, style=dotted];
d189 -> d340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d190 -> d189  [key=0, style=solid];
d190 -> d312  [key=2, style=dotted];
d190 -> d261  [key=2, style=dotted];
d191 -> d192  [key=0, style=solid];
d191 -> d193  [key=0, style=solid];
d192 -> d193  [key=0, style=solid];
d192 -> d274  [key=2, style=dotted];
d193 -> d194  [key=0, style=solid];
d193 -> d195  [key=0, style=solid];
d194 -> d195  [key=0, style=solid];
d194 -> d274  [key=2, style=dotted];
d195 -> d196  [key=0, style=solid];
d195 -> d197  [key=0, style=solid];
d196 -> d197  [key=0, style=solid];
d196 -> d274  [key=2, style=dotted];
d197 -> d198  [key=0, style=solid];
d197 -> d199  [key=0, style=solid];
d197 -> d204  [key=0, style=solid];
d198 -> d199  [key=0, style=solid];
d198 -> d204  [key=0, style=solid];
d198 -> d274  [key=2, style=dotted];
d204 -> d205  [key=0, style=solid];
d204 -> d207  [key=0, style=solid];
d204 -> d212  [key=0, style=solid];
d205 -> d206  [key=0, style=solid];
d205 -> d313  [key=2, style=dotted];
d206 -> d207  [key=0, style=solid];
d206 -> d212  [key=0, style=solid];
d206 -> d314  [key=2, style=dotted];
d47 -> d48  [color=green, key=0, style=solid];
d47 -> d49  [color=green, key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d49 -> d49  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d49 -> d52  [key=0, style=solid];
d252 -> d10  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
d252 -> d509  [key=0, style=solid];
d252 -> d511  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
d252 -> d15  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<System.Type, MethodInvoker> methodInvokers", style=bold];
d252 -> d227  [color=darkorchid, key=3, label="method methodReturn bool AddMethodInvoker", style=bold];
d252 -> d105  [color=darkorchid, key=3, label="method methodReturn bool AddMethodInvoker", style=bold];
d267 -> d10  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Lean.Engine.Results.IResultHandler results", style=bold];
d267 -> d53  [color=darkorchid, key=3, label="Parameter variable System.DateTime time", style=bold];
d267 -> d599  [key=0, style=solid];
d267 -> d601  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d286 -> d10  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
d286 -> d529  [key=0, style=solid];
d286 -> d531  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d286 -> d533  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
d286 -> d541  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d286 -> d543  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d286 -> d544  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d286 -> d545  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d286 -> d546  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
d286 -> d20  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Delisting> delistings", style=bold];
d287 -> d10  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
d287 -> d565  [key=0, style=solid];
d287 -> d567  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
d287 -> d568  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d287 -> d573  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d287 -> d577  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d287 -> d578  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d287 -> d579  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d287 -> d581  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d287 -> d582  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
d287 -> d21  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Split> splitWarnings", style=bold];
d310 -> d10  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
d310 -> d515  [key=0, style=solid];
d310 -> d517  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
d310 -> d518  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Delisting>", style=dashed];
d310 -> d521  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d310 -> d20  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Delisting> delistings", style=bold];
d248 -> d10  [color=blue, key=0, style=bold];
d11 -> d12  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d13 -> d59  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d13 -> d61  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d13 -> d63  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d13 -> d245  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d13 -> d247  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d14 -> d15  [key=0, style=solid];
d14 -> d55  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
d14 -> d68  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
d14 -> d244  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
d14 -> d246  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
d14 -> d247  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
d22 -> d23  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d25 -> d191  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
d25 -> d252  [key=2, style=dotted];
d25 -> d26  [key=0, style=solid];
d26 -> d193  [color=darkseagreen4, key=1, label=hasOnDataQuoteBars, style=dashed];
d26 -> d252  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d27 -> d195  [color=darkseagreen4, key=1, label=hasOnDataOptionChains, style=dashed];
d27 -> d252  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d28 -> d197  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
d28 -> d252  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d29 -> d175  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
d29 -> d252  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d30 -> d177  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
d30 -> d252  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d31 -> d179  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
d31 -> d252  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d32 -> d252  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d72  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
d33 -> d34  [key=0, style=solid];
d33 -> d253  [key=2, style=dotted];
d33 -> d254  [key=2, style=dotted];
d33 -> d255  [key=2, style=dotted];
d33 -> d256  [key=2, style=dotted];
d33 -> d326  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d33 -> d330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d33 -> d38  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
d331 -> d332  [key=0, style=solid];
d331 -> d253  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d253  [key=2, style=dotted];
d36 -> d257  [key=2, style=dotted];
d36 -> d38  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
d36 -> d42  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
d36 -> d43  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
d39 -> d40  [key=0, style=solid];
d39 -> d259  [key=2, style=dotted];
d52 -> d53  [key=0, style=solid];
d52 -> d266  [key=2, style=dotted];
d57 -> d267  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d58 -> d59  [key=0, style=solid];
d58 -> d268  [key=2, style=dotted];
d58 -> d269  [key=2, style=dotted];
d60 -> d62  [key=0, style=solid];
d60 -> d270  [key=2, style=dotted];
d61 -> d62  [key=0, style=solid];
d61 -> d268  [key=2, style=dotted];
d61 -> d270  [key=2, style=dotted];
d62 -> d63  [key=0, style=solid];
d62 -> d245  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d62 -> d247  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d66 -> d217  [key=0, style=solid];
d66 -> d271  [key=2, style=dotted];
d67 -> d267  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d69 -> d70  [key=0, style=solid];
d69 -> d272  [key=2, style=dotted];
d70 -> d71  [key=0, style=solid];
d70 -> d273  [key=2, style=dotted];
d75 -> d74  [key=0, style=solid];
d75 -> d76  [key=0, style=solid];
d75 -> d275  [key=2, style=dotted];
d75 -> d333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d79 -> d78  [key=0, style=solid];
d79 -> d80  [key=0, style=solid];
d79 -> d277  [key=2, style=dotted];
d80 -> d78  [key=0, style=solid];
d80 -> d278  [key=2, style=dotted];
d85 -> d81  [key=0, style=solid];
d85 -> d280  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d86 -> d91  [key=0, style=solid];
d91 -> d92  [key=0, style=solid];
d91 -> d283  [key=2, style=dotted];
d93 -> d94  [key=0, style=solid];
d93 -> d285  [key=2, style=dotted];
d94 -> d286  [key=2, style=dotted];
d94 -> d95  [key=0, style=solid];
d95 -> d287  [key=2, style=dotted];
d95 -> d96  [key=0, style=solid];
d96 -> d97  [key=0, style=solid];
d96 -> d98  [key=0, style=solid];
d98 -> d99  [key=0, style=solid];
d98 -> d101  [key=0, style=solid];
d103 -> d104  [key=0, style=solid];
d103 -> d288  [key=2, style=dotted];
d103 -> d106  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
d103 -> d108  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
d103 -> d117  [color=darkseagreen4, key=1, label=issueMarginCallWarning, style=dashed];
d106 -> d107  [key=0, style=solid];
d106 -> d289  [key=2, style=dotted];
d108 -> d109  [key=0, style=solid];
d108 -> d290  [key=2, style=dotted];
d110 -> d109  [key=0, style=solid];
d110 -> d291  [key=2, style=dotted];
d110 -> d292  [key=2, style=dotted];
d112 -> d113  [key=0, style=solid];
d118 -> d119  [key=0, style=solid];
d118 -> d124  [key=0, style=solid];
d118 -> d294  [key=2, style=dotted];
d120 -> d121  [key=0, style=solid];
d126 -> d127  [key=0, style=solid];
d126 -> d295  [key=2, style=dotted];
d132 -> d133  [key=0, style=solid];
d137 -> d138  [key=0, style=solid];
d137 -> d298  [key=2, style=dotted];
d138 -> d136  [key=0, style=solid];
d138 -> d299  [key=2, style=dotted];
d141 -> d142  [key=0, style=solid];
d141 -> d298  [key=2, style=dotted];
d142 -> d143  [key=0, style=solid];
d142 -> d300  [key=2, style=dotted];
d143 -> d139  [key=0, style=solid];
d143 -> d144  [key=0, style=solid];
d143 -> d146  [key=0, style=solid];
d144 -> d145  [key=0, style=solid];
d144 -> d275  [key=2, style=dotted];
d144 -> d337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d145 -> d139  [key=0, style=solid];
d145 -> d146  [key=0, style=solid];
d145 -> d301  [key=2, style=dotted];
d145 -> d302  [key=2, style=dotted];
d147 -> d148  [key=0, style=solid];
d160 -> d161  [key=0, style=solid];
d169 -> d167  [key=0, style=solid];
d169 -> d309  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d182 -> d183  [key=0, style=solid];
d200 -> d201  [key=0, style=solid];
d208 -> d209  [key=0, style=solid];
d212 -> d213  [key=0, style=solid];
d212 -> d285  [key=2, style=dotted];
d214 -> d215  [key=0, style=solid];
d214 -> d315  [key=2, style=dotted];
d215 -> d216  [key=0, style=solid];
d215 -> d316  [key=2, style=dotted];
d219 -> d220  [key=0, style=solid];
d219 -> d225  [key=0, style=solid];
d219 -> d318  [key=2, style=dotted];
d222 -> d223  [key=0, style=solid];
d222 -> d319  [key=2, style=dotted];
d225 -> d226  [key=0, style=solid];
d225 -> d283  [key=2, style=dotted];
d226 -> d227  [key=0, style=solid];
d226 -> d315  [key=2, style=dotted];
d227 -> d228  [key=0, style=solid];
d227 -> d316  [key=2, style=dotted];
d230 -> d231  [key=0, style=solid];
d230 -> d320  [key=2, style=dotted];
d231 -> d232  [key=0, style=solid];
d231 -> d321  [key=2, style=dotted];
d232 -> d233  [key=0, style=solid];
d232 -> d322  [key=2, style=dotted];
d235 -> d236  [key=0, style=solid];
d235 -> d321  [key=2, style=dotted];
d236 -> d237  [key=0, style=solid];
d236 -> d322  [key=2, style=dotted];
d239 -> d240  [key=0, style=solid];
d239 -> d323  [key=2, style=dotted];
d240 -> d241  [key=0, style=solid];
d240 -> d322  [key=2, style=dotted];
d241 -> d242  [key=0, style=solid];
d241 -> d322  [key=2, style=dotted];
d242 -> d243  [key=0, style=solid];
d242 -> d324  [key=2, style=dotted];
d242 -> d325  [key=2, style=dotted];
d243 -> d244  [key=0, style=solid];
d243 -> d268  [key=2, style=dotted];
d243 -> d269  [key=2, style=dotted];
d244 -> d267  [key=2, style=dotted];
d244 -> d245  [key=0, style=solid];
d246 -> d248  [key=0, style=solid];
d246 -> d270  [key=2, style=dotted];
d247 -> d248  [key=0, style=solid];
d247 -> d268  [key=2, style=dotted];
d247 -> d270  [key=2, style=dotted];
d37 -> d34  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d37 -> d258  [key=2, style=dotted];
d43 -> d34  [key=0, style=solid];
d43 -> d260  [key=2, style=dotted];
d43 -> d261  [key=2, style=dotted];
d35 -> d34  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d42 -> d34  [key=0, style=solid];
d42 -> d43  [key=0, style=solid];
d65 -> d262  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d97 -> d262  [key=2, style=dotted];
d97 -> d217  [key=0, style=solid];
d218 -> d262  [key=2, style=dotted];
d218 -> d219  [key=0, style=solid];
d229 -> d262  [key=2, style=dotted];
d229 -> d230  [key=0, style=solid];
d234 -> d262  [key=2, style=dotted];
d234 -> d235  [key=0, style=solid];
d238 -> d262  [key=2, style=dotted];
d238 -> d239  [key=0, style=solid];
d374 -> d262  [key=2, style=dotted];
d374 -> d372  [key=0, style=solid];
d374 -> d291  [key=2, style=dotted];
d415 -> d262  [key=2, style=dotted];
d415 -> d416  [key=0, style=solid];
d431 -> d262  [key=2, style=dotted];
d431 -> d436  [key=0, style=solid];
d494 -> d262  [key=2, style=dotted];
d494 -> d495  [key=0, style=solid];
d519 -> d262  [key=2, style=dotted];
d519 -> d515  [key=0, style=solid];
d520 -> d262  [key=2, style=dotted];
d520 -> d521  [key=0, style=solid];
d523 -> d262  [key=2, style=dotted];
d523 -> d522  [key=0, style=solid];
d557 -> d262  [key=2, style=dotted];
d557 -> d555  [key=0, style=solid];
d558 -> d262  [key=2, style=dotted];
d558 -> d559  [key=0, style=solid];
d1 -> d1  [color=darkorchid, key=3, label="method methodReturn string ", style=bold];
d1 -> d2  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d5 -> d7  [key=0, style=solid];
d6 -> d8  [key=0, style=solid];
d6 -> d9  [key=2, style=dotted];
d2 -> d3  [key=0, style=solid];
d23 -> d24  [key=0, style=solid];
d40 -> d41  [key=0, style=solid];
d56 -> d57  [key=0, style=solid];
d56 -> d63  [key=0, style=solid];
d99 -> d100  [key=0, style=solid];
d101 -> d102  [key=0, style=solid];
d101 -> d125  [key=0, style=solid];
d113 -> d114  [key=0, style=solid];
d121 -> d122  [key=0, style=solid];
d125 -> d128  [key=0, style=solid];
d125 -> d126  [key=0, style=solid];
d133 -> d134  [key=0, style=solid];
d148 -> d149  [key=0, style=solid];
d161 -> d162  [key=0, style=solid];
d172 -> d173  [key=0, style=solid];
d183 -> d184  [key=0, style=solid];
d201 -> d202  [key=0, style=solid];
d209 -> d210  [key=0, style=solid];
d213 -> d214  [key=0, style=solid];
d221 -> d222  [key=0, style=solid];
d228 -> d229  [key=0, style=solid];
d228 -> d233  [key=0, style=solid];
d233 -> d234  [key=0, style=solid];
d233 -> d237  [key=0, style=solid];
d237 -> d241  [key=0, style=solid];
d237 -> d238  [key=0, style=solid];
d344 -> d345  [key=0, style=solid];
d346 -> d347  [key=0, style=solid];
d352 -> d353  [key=0, style=solid];
d352 -> d438  [key=2, style=dotted];
d403 -> d404  [key=0, style=solid];
d419 -> d420  [key=0, style=solid];
d602 -> d603  [key=0, style=solid];
d438 -> d263  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
d438 -> d494  [key=0, style=solid];
d438 -> d495  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d438 -> d498  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d438 -> d499  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d438 -> d500  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d437 -> d263  [color=blue, key=0, style=bold];
d348 -> d349  [key=0, style=solid];
d348 -> d401  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
d348 -> d417  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
d348 -> d105  [color=darkorchid, key=3, label="Local variable bool setStartTime", style=bold];
d399 -> d400  [key=0, style=solid];
d409 -> d410  [key=0, style=solid];
d436 -> d416  [key=0, style=solid];
d349 -> d350  [key=0, style=solid];
d349 -> d375  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
d349 -> d395  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
d350 -> d351  [key=0, style=solid];
d350 -> d375  [color=darkseagreen4, key=1, label=history, style=dashed];
d351 -> d352  [key=0, style=solid];
d351 -> d353  [key=0, style=solid];
d354 -> d355  [key=0, style=solid];
d354 -> d439  [key=2, style=dotted];
d354 -> d301  [key=2, style=dotted];
d354 -> d359  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d354 -> d362  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d354 -> d368  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d354 -> d369  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d354 -> d370  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d354 -> d372  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d354 -> d375  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d354 -> d411  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d354 -> d413  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d357 -> d358  [key=0, style=solid];
d357 -> d441  [key=2, style=dotted];
d357 -> d442  [key=2, style=dotted];
d357 -> d443  [key=2, style=dotted];
d357 -> d462  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d360 -> d361  [key=0, style=solid];
d360 -> d255  [key=2, style=dotted];
d360 -> d444  [key=2, style=dotted];
d360 -> d466  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d364 -> d364  [color=darkseagreen4, key=1, label=security, style=dashed];
d364 -> d365  [key=0, style=solid];
d364 -> d362  [key=0, style=solid];
d364 -> d445  [key=2, style=dotted];
d364 -> d446  [key=2, style=dotted];
d379 -> d380  [key=0, style=solid];
d379 -> d391  [color=darkseagreen4, key=1, label=security, style=dashed];
d379 -> d394  [color=darkseagreen4, key=1, label=security, style=dashed];
d388 -> d392  [key=0, style=solid];
d388 -> d256  [key=2, style=dotted];
d388 -> d484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d388 -> d394  [color=darkseagreen4, key=1, label=config, style=dashed];
d395 -> d403  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d395 -> d409  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d395 -> d396  [key=0, style=solid];
d395 -> d400  [key=0, style=solid];
d395 -> d454  [key=2, style=dotted];
d395 -> d455  [key=2, style=dotted];
d395 -> d407  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d395 -> d410  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d398 -> d399  [key=0, style=solid];
d404 -> d405  [key=0, style=solid];
d404 -> d457  [key=2, style=dotted];
d408 -> d409  [key=0, style=solid];
d408 -> d293  [key=2, style=dotted];
d408 -> d322  [key=2, style=dotted];
d411 -> d412  [key=0, style=solid];
d411 -> d416  [key=0, style=solid];
d412 -> d413  [key=0, style=solid];
d412 -> d458  [key=2, style=dotted];
d414 -> d415  [key=0, style=solid];
d414 -> d457  [key=2, style=dotted];
d416 -> d419  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d416 -> d437  [key=0, style=solid];
d416 -> d436  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d416 -> d417  [key=0, style=solid];
d416 -> d423  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d416 -> d428  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d416 -> d434  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d420 -> d436  [key=0, style=solid];
d420 -> d421  [key=0, style=solid];
d424 -> d425  [key=0, style=solid];
d424 -> d423  [key=0, style=solid];
d424 -> d454  [key=2, style=dotted];
d429 -> d430  [key=0, style=solid];
d429 -> d458  [key=2, style=dotted];
d430 -> d431  [key=0, style=solid];
d430 -> d457  [key=2, style=dotted];
d435 -> d436  [key=0, style=solid];
d435 -> d293  [key=2, style=dotted];
d435 -> d322  [key=2, style=dotted];
d51 -> d248  [key=0, style=solid];
d124 -> d125  [key=0, style=solid];
d127 -> d128  [key=0, style=solid];
d157 -> d158  [key=0, style=solid];
d157 -> d305  [key=2, style=dotted];
d55 -> d67  [key=0, style=solid];
d55 -> d56  [key=0, style=solid];
d72 -> d73  [key=0, style=solid];
d72 -> d74  [key=0, style=solid];
d15 -> d73  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d176  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d178  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d180  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d192  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d194  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d196  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d198  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d25  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d26  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d27  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d28  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d29  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d30  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d31  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d32  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d37  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d43  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d15 -> d16  [key=0, style=solid];
d15 -> d249  [key=2, style=dotted];
d15 -> d166  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d334 -> d335  [key=0, style=solid];
d334 -> d336  [key=2, style=dotted];
d82 -> d85  [color=darkseagreen4, key=1, label=security, style=dashed];
d82 -> d83  [key=0, style=solid];
d82 -> d84  [color=darkseagreen4, key=1, label=security, style=dashed];
d83 -> d85  [key=0, style=solid];
d83 -> d84  [key=0, style=solid];
d131 -> d132  [key=0, style=solid];
d140 -> d139  [key=0, style=solid];
d140 -> d141  [key=0, style=solid];
d338 -> d339  [key=0, style=solid];
d338 -> d336  [key=2, style=dotted];
d153 -> d151  [key=0, style=solid];
d153 -> d154  [key=0, style=solid];
d153 -> d156  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
d153 -> d158  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
d152 -> d153  [key=0, style=solid];
d159 -> d160  [key=0, style=solid];
d154 -> d157  [key=0, style=solid];
d154 -> d155  [key=0, style=solid];
d154 -> d156  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
d155 -> d154  [key=0, style=solid];
d155 -> d156  [key=0, style=solid];
d155 -> d303  [key=2, style=dotted];
d166 -> d164  [key=0, style=solid];
d166 -> d169  [color=darkseagreen4, key=1, label=methodInvoker, style=dashed];
d166 -> d167  [key=0, style=solid];
d166 -> d307  [key=2, style=dotted];
d167 -> d164  [key=0, style=solid];
d167 -> d169  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
d167 -> d168  [key=0, style=solid];
d167 -> d170  [key=0, style=solid];
d165 -> d166  [key=0, style=solid];
d168 -> d169  [key=0, style=solid];
d168 -> d167  [key=0, style=solid];
d168 -> d308  [key=2, style=dotted];
d181 -> d182  [key=0, style=solid];
d20 -> d186  [color=darkseagreen4, key=1, label=delistings, style=dashed];
d20 -> d94  [color=darkseagreen4, key=1, label=delistings, style=dashed];
d20 -> d21  [key=0, style=solid];
d20 -> d251  [key=2, style=dotted];
d21 -> d187  [color=darkseagreen4, key=1, label=splitWarnings, style=dashed];
d21 -> d22  [key=0, style=solid];
d21 -> d95  [color=darkseagreen4, key=1, label=splitWarnings, style=dashed];
d21 -> d251  [key=2, style=dotted];
d311 -> d21  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<QuantConnect.Data.Market.Split> splitWarnings", style=bold];
d311 -> d555  [key=0, style=solid];
d311 -> d559  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
d311 -> d560  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.Market.Split>", style=dashed];
d340 -> d341  [key=0, style=solid];
d199 -> d200  [key=0, style=solid];
d207 -> d208  [key=0, style=solid];
d115 -> d265  [key=2, style=dotted];
d115 -> d116  [key=0, style=solid];
d115 -> d293  [key=2, style=dotted];
d122 -> d265  [key=2, style=dotted];
d122 -> d123  [key=0, style=solid];
d134 -> d265  [key=2, style=dotted];
d134 -> d135  [key=0, style=solid];
d149 -> d265  [key=2, style=dotted];
d149 -> d150  [key=0, style=solid];
d162 -> d265  [key=2, style=dotted];
d162 -> d163  [key=0, style=solid];
d173 -> d265  [key=2, style=dotted];
d173 -> d174  [key=0, style=solid];
d184 -> d265  [key=2, style=dotted];
d184 -> d185  [key=0, style=solid];
d202 -> d265  [key=2, style=dotted];
d202 -> d203  [key=0, style=solid];
d210 -> d265  [key=2, style=dotted];
d210 -> d211  [key=0, style=solid];
d223 -> d265  [key=2, style=dotted];
d223 -> d224  [key=0, style=solid];
d514 -> d252  [color=blue, key=0, style=bold];
d509 -> d510  [key=0, style=solid];
d509 -> d253  [key=2, style=dotted];
d509 -> d257  [key=2, style=dotted];
d509 -> d511  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
d511 -> d261  [key=2, style=dotted];
d511 -> d512  [key=0, style=solid];
d511 -> d260  [key=2, style=dotted];
d105 -> d106  [key=0, style=solid];
d105 -> d105  [color=darkorchid, key=3, label="Local variable bool executingMarginCall", style=bold];
d604 -> d267  [color=blue, key=0, style=bold];
d599 -> d604  [key=0, style=solid];
d599 -> d600  [key=0, style=solid];
d599 -> d605  [key=2, style=dotted];
d599 -> d606  [key=2, style=dotted];
d599 -> d607  [key=2, style=dotted];
d601 -> d602  [key=0, style=solid];
d548 -> d286  [color=blue, key=0, style=bold];
d529 -> d530  [key=0, style=solid];
d529 -> d531  [color=darkseagreen4, key=1, label=i, style=dashed];
d529 -> d533  [color=darkseagreen4, key=1, label=i, style=dashed];
d529 -> d546  [color=darkseagreen4, key=1, label=i, style=dashed];
d529 -> d547  [color=darkseagreen4, key=1, label=i, style=dashed];
d531 -> d532  [key=0, style=solid];
d531 -> d534  [color=darkseagreen4, key=1, label=security, style=dashed];
d531 -> d535  [color=darkseagreen4, key=1, label=security, style=dashed];
d531 -> d536  [color=darkseagreen4, key=1, label=security, style=dashed];
d531 -> d538  [color=darkseagreen4, key=1, label=security, style=dashed];
d531 -> d539  [color=darkseagreen4, key=1, label=security, style=dashed];
d531 -> d540  [color=darkseagreen4, key=1, label=security, style=dashed];
d531 -> d541  [color=darkseagreen4, key=1, label=security, style=dashed];
d531 -> d543  [color=darkseagreen4, key=1, label=security, style=dashed];
d531 -> d544  [color=darkseagreen4, key=1, label=security, style=dashed];
d533 -> d534  [key=0, style=solid];
d541 -> d545  [key=0, style=solid];
d541 -> d551  [key=2, style=dotted];
d543 -> d545  [key=0, style=solid];
d543 -> d551  [key=2, style=dotted];
d544 -> d545  [key=0, style=solid];
d544 -> d551  [key=2, style=dotted];
d545 -> d546  [key=0, style=solid];
d545 -> d553  [key=2, style=dotted];
d546 -> d547  [key=0, style=solid];
d546 -> d554  [key=2, style=dotted];
d584 -> d287  [color=blue, key=0, style=bold];
d565 -> d566  [key=0, style=solid];
d565 -> d567  [color=darkseagreen4, key=1, label=i, style=dashed];
d565 -> d582  [color=darkseagreen4, key=1, label=i, style=dashed];
d565 -> d583  [color=darkseagreen4, key=1, label=i, style=dashed];
d567 -> d568  [key=0, style=solid];
d567 -> d581  [color=darkseagreen4, key=1, label=split, style=dashed];
d568 -> d569  [key=0, style=solid];
d568 -> d570  [color=darkseagreen4, key=1, label=security, style=dashed];
d568 -> d571  [color=darkseagreen4, key=1, label=security, style=dashed];
d568 -> d572  [color=darkseagreen4, key=1, label=security, style=dashed];
d568 -> d573  [color=darkseagreen4, key=1, label=security, style=dashed];
d568 -> d596  [color=darkseagreen4, key=1, label=security, style=dashed];
d573 -> d255  [key=2, style=dotted];
d573 -> d574  [key=0, style=solid];
d573 -> d595  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d577 -> d578  [key=0, style=solid];
d577 -> d589  [key=2, style=dotted];
d578 -> d579  [key=0, style=solid];
d578 -> d590  [key=2, style=dotted];
d579 -> d580  [key=0, style=solid];
d579 -> d591  [key=2, style=dotted];
d581 -> d574  [key=0, style=solid];
d581 -> d457  [key=2, style=dotted];
d582 -> d583  [key=0, style=solid];
d582 -> d554  [key=2, style=dotted];
d524 -> d310  [color=blue, key=0, style=bold];
d515 -> d519  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d515 -> d520  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d515 -> d524  [key=0, style=solid];
d515 -> d516  [key=0, style=solid];
d515 -> d517  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d515 -> d527  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d515 -> d518  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d515 -> d521  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d517 -> d515  [key=0, style=solid];
d517 -> d518  [key=0, style=solid];
d517 -> d447  [key=2, style=dotted];
d517 -> d526  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d518 -> d519  [key=0, style=solid];
d518 -> d451  [key=2, style=dotted];
d521 -> d522  [key=0, style=solid];
d521 -> d525  [key=2, style=dotted];
d41 -> d248  [key=0, style=solid];
d116 -> d248  [key=0, style=solid];
d123 -> d248  [key=0, style=solid];
d135 -> d248  [key=0, style=solid];
d150 -> d248  [key=0, style=solid];
d163 -> d248  [key=0, style=solid];
d174 -> d248  [key=0, style=solid];
d185 -> d248  [key=0, style=solid];
d203 -> d248  [key=0, style=solid];
d211 -> d248  [key=0, style=solid];
d224 -> d248  [key=0, style=solid];
d59 -> d60  [key=0, style=solid];
d59 -> d61  [key=0, style=solid];
d63 -> d64  [key=0, style=solid];
d63 -> d68  [key=0, style=solid];
d245 -> d246  [key=0, style=solid];
d245 -> d247  [key=0, style=solid];
d68 -> d69  [key=0, style=solid];
d68 -> d70  [key=0, style=solid];
d326 -> d327  [key=0, style=solid];
d330 -> d331  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d38 -> d42  [key=0, style=solid];
d614 -> d331  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d332 -> d330  [color=blue, key=0, style=bold];
d64 -> d66  [color=darkseagreen4, key=1, label=logMessage, style=dashed];
d64 -> d65  [key=0, style=solid];
d64 -> d64  [color=darkorchid, key=3, label="Local variable string logMessage", style=bold];
d76 -> d75  [key=0, style=solid];
d76 -> d276  [key=2, style=dotted];
d275 -> d275  [color=darkorchid, key=3, label="Field variable string _algorithmId", style=bold];
d333 -> d334  [key=0, style=solid];
d90 -> d86  [key=0, style=solid];
d90 -> d282  [key=2, style=dotted];
d89 -> d86  [key=0, style=solid];
d89 -> d90  [key=0, style=solid];
d87 -> d90  [color=darkseagreen4, key=1, label=cash, style=dashed];
d87 -> d87  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d87 -> d88  [key=0, style=solid];
d102 -> d103  [key=0, style=solid];
d104 -> d105  [key=0, style=solid];
d104 -> d117  [key=0, style=solid];
d117 -> d118  [key=0, style=solid];
d117 -> d124  [key=0, style=solid];
d107 -> d108  [key=0, style=solid];
d107 -> d114  [color=darkseagreen4, key=1, label=executingMarginCall, style=dashed];
d109 -> d110  [key=0, style=solid];
d109 -> d124  [key=0, style=solid];
d109 -> d111  [key=0, style=solid];
d111 -> d112  [key=0, style=solid];
d119 -> d120  [key=0, style=solid];
d146 -> d147  [key=0, style=solid];
d337 -> d338  [key=0, style=solid];
d302 -> d0  [color=darkorchid, key=3, label="Field variable bool _liveMode", style=bold];
d170 -> d171  [key=0, style=solid];
d220 -> d221  [key=0, style=solid];
d303 -> d227  [color=darkorchid, key=3, label="method methodReturn bool EndTimeIsInNativeResolution", style=bold];
d303 -> d608  [key=0, style=solid];
d303 -> d610  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
d303 -> d611  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
d372 -> d374  [color=darkseagreen4, key=1, label=request, style=dashed];
d372 -> d373  [key=0, style=solid];
d372 -> d375  [key=0, style=solid];
d373 -> d374  [key=0, style=solid];
d373 -> d373  [color=darkseagreen4, key=1, label=start, style=dashed];
d373 -> d448  [key=2, style=dotted];
d373 -> d407  [color=darkseagreen4, key=1, label=start, style=dashed];
d373 -> d434  [color=darkseagreen4, key=1, label=start, style=dashed];
d495 -> d496  [key=0, style=solid];
d495 -> d505  [key=0, style=solid];
d516 -> d520  [key=0, style=solid];
d516 -> d517  [key=0, style=solid];
d522 -> d523  [key=0, style=solid];
d522 -> d515  [key=0, style=solid];
d555 -> d557  [color=darkseagreen4, key=1, label=split, style=dashed];
d555 -> d558  [color=darkseagreen4, key=1, label=split, style=dashed];
d555 -> d556  [key=0, style=solid];
d555 -> d561  [key=0, style=solid];
d555 -> d559  [color=darkseagreen4, key=1, label=split, style=dashed];
d555 -> d563  [color=darkseagreen4, key=1, label=split, style=dashed];
d555 -> d560  [color=darkseagreen4, key=1, label=split, style=dashed];
d556 -> d557  [key=0, style=solid];
d556 -> d558  [key=0, style=solid];
d559 -> d555  [key=0, style=solid];
d559 -> d560  [key=0, style=solid];
d559 -> d447  [key=2, style=dotted];
d559 -> d562  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d0 -> d1  [key=0, style=solid];
d0 -> d2  [color=darkseagreen4, key=1, label=bool, style=dashed];
d353 -> d1  [color=darkorchid, key=3, label="Local variable System.DateTime? lastHistoryTimeUtc", style=bold];
d353 -> d354  [key=0, style=solid];
d353 -> d424  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
d353 -> d421  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
d4 -> d5  [key=0, style=solid];
d7 -> d8  [key=0, style=solid];
d8 -> d4  [color=blue, key=0, style=bold];
d3 -> d0  [color=blue, key=0, style=bold];
d17 -> d101  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
d17 -> d18  [key=0, style=solid];
d114 -> d115  [key=0, style=solid];
d19 -> d125  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
d19 -> d20  [key=0, style=solid];
d343 -> d344  [key=0, style=solid];
d343 -> d346  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
d343 -> d345  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
d345 -> d346  [key=0, style=solid];
d345 -> d347  [key=0, style=solid];
d347 -> d343  [color=blue, key=0, style=bold];
d402 -> d403  [key=0, style=solid];
d402 -> d417  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
d418 -> d419  [key=0, style=solid];
d603 -> d604  [key=0, style=solid];
d603 -> d456  [key=2, style=dotted];
d505 -> d438  [color=blue, key=0, style=bold];
d498 -> d499  [key=0, style=solid];
d498 -> d506  [key=2, style=dotted];
d498 -> d500  [color=darkseagreen4, key=1, label=historyReq, style=dashed];
d499 -> d495  [key=0, style=solid];
d499 -> d500  [key=0, style=solid];
d500 -> d501  [key=0, style=solid];
d500 -> d449  [key=2, style=dotted];
d500 -> d502  [color=darkseagreen4, key=1, label=history, style=dashed];
d401 -> d402  [key=0, style=solid];
d401 -> d405  [key=0, style=solid];
d417 -> d420  [key=0, style=solid];
d417 -> d418  [key=0, style=solid];
d400 -> d401  [key=0, style=solid];
d400 -> d375  [key=0, style=solid];
d405 -> d409  [key=0, style=solid];
d405 -> d406  [key=0, style=solid];
d410 -> d424  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
d410 -> d375  [key=0, style=solid];
d410 -> d421  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
d432 -> d436  [key=0, style=solid];
d432 -> d433  [key=0, style=solid];
d375 -> d395  [color=darkseagreen4, key=1, label=slice, style=dashed];
d375 -> d411  [key=0, style=solid];
d375 -> d376  [key=0, style=solid];
d375 -> d449  [key=2, style=dotted];
d375 -> d378  [color=darkseagreen4, key=1, label=slice, style=dashed];
d375 -> d380  [color=darkseagreen4, key=1, label=slice, style=dashed];
d355 -> d373  [color=darkseagreen4, key=1, label=start, style=dashed];
d355 -> d356  [key=0, style=solid];
d355 -> d407  [color=darkseagreen4, key=1, label=start, style=dashed];
d355 -> d434  [color=darkseagreen4, key=1, label=start, style=dashed];
d359 -> d360  [key=0, style=solid];
d359 -> d411  [key=0, style=solid];
d362 -> d364  [color=darkseagreen4, key=1, label=request, style=dashed];
d362 -> d363  [key=0, style=solid];
d362 -> d368  [key=0, style=solid];
d362 -> d365  [color=darkseagreen4, key=1, label=request, style=dashed];
d362 -> d366  [color=darkseagreen4, key=1, label=request, style=dashed];
d362 -> d367  [color=darkseagreen4, key=1, label=request, style=dashed];
d368 -> d372  [key=0, style=solid];
d368 -> d369  [key=0, style=solid];
d368 -> d447  [key=2, style=dotted];
d368 -> d472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d369 -> d255  [key=2, style=dotted];
d369 -> d370  [key=0, style=solid];
d369 -> d443  [key=2, style=dotted];
d369 -> d475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d369 -> d478  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d369 -> d371  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
d370 -> d255  [key=2, style=dotted];
d370 -> d372  [key=0, style=solid];
d370 -> d371  [key=0, style=solid];
d370 -> d481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d413 -> d414  [key=0, style=solid];
d413 -> d416  [key=0, style=solid];
d356 -> d357  [key=0, style=solid];
d356 -> d405  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
d356 -> d432  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
d356 -> d440  [key=2, style=dotted];
d358 -> d359  [key=0, style=solid];
d358 -> d358  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
d358 -> d428  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
d462 -> d463  [key=0, style=solid];
d361 -> d362  [key=0, style=solid];
d361 -> d443  [key=2, style=dotted];
d361 -> d469  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d361 -> d365  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
d361 -> d366  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
d361 -> d367  [color=darkseagreen4, key=1, label=minResolution, style=dashed];
d466 -> d467  [key=0, style=solid];
d363 -> d364  [key=0, style=solid];
d365 -> d362  [key=0, style=solid];
d365 -> d366  [key=0, style=solid];
d378 -> d379  [key=0, style=solid];
d378 -> d388  [color=darkseagreen4, key=1, label=symbol, style=dashed];
d378 -> d395  [key=0, style=solid];
d378 -> d380  [color=darkseagreen4, key=1, label=symbol, style=dashed];
d378 -> d485  [color=darkseagreen4, key=1, label=symbol, style=dashed];
d380 -> d381  [key=0, style=solid];
d380 -> d384  [color=darkseagreen4, key=1, label=data, style=dashed];
d380 -> d389  [color=darkseagreen4, key=1, label=data, style=dashed];
d380 -> d390  [color=darkseagreen4, key=1, label=data, style=dashed];
d391 -> d256  [key=2, style=dotted];
d391 -> d392  [key=0, style=solid];
d391 -> d488  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d391 -> d394  [color=darkseagreen4, key=1, label=config, style=dashed];
d394 -> d378  [key=0, style=solid];
d394 -> d453  [key=2, style=dotted];
d394 -> d451  [key=2, style=dotted];
d387 -> d388  [key=0, style=solid];
d387 -> d485  [color=darkseagreen4, key=1, label=dataType, style=dashed];
d387 -> d393  [color=darkseagreen4, key=1, label=dataType, style=dashed];
d392 -> d394  [key=0, style=solid];
d392 -> d393  [key=0, style=solid];
d484 -> d485  [key=0, style=solid];
d377 -> d395  [color=darkseagreen4, key=1, label=paired, style=dashed];
d377 -> d378  [key=0, style=solid];
d377 -> d394  [color=darkseagreen4, key=1, label=paired, style=dashed];
d377 -> d251  [key=2, style=dotted];
d396 -> d397  [key=0, style=solid];
d407 -> d408  [key=0, style=solid];
d397 -> d398  [key=0, style=solid];
d397 -> d456  [key=2, style=dotted];
d426 -> d416  [key=0, style=solid];
d426 -> d427  [key=0, style=solid];
d423 -> d424  [key=0, style=solid];
d423 -> d426  [key=0, style=solid];
d423 -> d459  [key=2, style=dotted];
d423 -> d460  [key=2, style=dotted];
d423 -> d491  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d428 -> d429  [key=0, style=solid];
d428 -> d432  [key=0, style=solid];
d428 -> d461  [key=2, style=dotted];
d434 -> d435  [key=0, style=solid];
d421 -> d428  [key=0, style=solid];
d421 -> d422  [key=0, style=solid];
d425 -> d426  [key=0, style=solid];
d16 -> d124  [color=darkseagreen4, key=1, label=marginCallFrequency, style=dashed];
d16 -> d17  [key=0, style=solid];
d16 -> d250  [key=2, style=dotted];
d18 -> d127  [color=darkseagreen4, key=1, label=settlementScanFrequency, style=dashed];
d18 -> d19  [key=0, style=solid];
d18 -> d250  [key=2, style=dotted];
d158 -> d153  [key=0, style=solid];
d158 -> d306  [key=2, style=dotted];
d615 -> d334  [color=darkseagreen4, key=1, label=symbol, style=dashed];
d335 -> d333  [color=blue, key=0, style=bold];
d84 -> d83  [key=0, style=solid];
d84 -> d279  [key=2, style=dotted];
d616 -> d338  [color=darkseagreen4, key=1, label=split, style=dashed];
d339 -> d337  [color=blue, key=0, style=bold];
d156 -> d154  [key=0, style=solid];
d156 -> d304  [key=2, style=dotted];
d561 -> d311  [color=blue, key=0, style=bold];
d560 -> d555  [key=0, style=solid];
d560 -> d451  [key=2, style=dotted];
d342 -> d340  [color=blue, key=0, style=bold];
d341 -> d342  [key=0, style=solid];
d341 -> d341  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.QuoteBar>", style=dashed];
d513 -> d514  [key=0, style=solid];
d512 -> d514  [key=0, style=solid];
d510 -> d511  [key=0, style=solid];
d510 -> d513  [key=0, style=solid];
d422 -> d105  [color=darkorchid, key=3, label="Local variable bool hasHistoricalData", style=bold];
d422 -> d426  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
d422 -> d423  [key=0, style=solid];
d600 -> d601  [key=0, style=solid];
d530 -> d548  [key=0, style=solid];
d530 -> d531  [key=0, style=solid];
d547 -> d530  [key=0, style=solid];
d547 -> d547  [color=darkseagreen4, key=1, label=i, style=dashed];
d532 -> d533  [key=0, style=solid];
d532 -> d530  [key=0, style=solid];
d534 -> d535  [key=0, style=solid];
d534 -> d549  [key=2, style=dotted];
d535 -> d536  [key=0, style=solid];
d535 -> d550  [key=2, style=dotted];
d536 -> d530  [key=0, style=solid];
d536 -> d537  [key=0, style=solid];
d538 -> d544  [key=0, style=solid];
d538 -> d539  [key=0, style=solid];
d539 -> d540  [key=0, style=solid];
d539 -> d542  [color=darkseagreen4, key=1, label=option, style=dashed];
d540 -> d541  [key=0, style=solid];
d540 -> d542  [key=0, style=solid];
d542 -> d543  [key=0, style=solid];
d542 -> d552  [key=2, style=dotted];
d566 -> d584  [key=0, style=solid];
d566 -> d567  [key=0, style=solid];
d583 -> d566  [key=0, style=solid];
d583 -> d583  [color=darkseagreen4, key=1, label=i, style=dashed];
d569 -> d570  [key=0, style=solid];
d569 -> d550  [key=2, style=dotted];
d569 -> d571  [color=darkseagreen4, key=1, label=nextMarketClose, style=dashed];
d570 -> d571  [key=0, style=solid];
d570 -> d585  [key=2, style=dotted];
d570 -> d586  [key=2, style=dotted];
d570 -> d592  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d571 -> d572  [key=0, style=solid];
d571 -> d587  [key=2, style=dotted];
d571 -> d465  [key=2, style=dotted];
d571 -> d588  [key=2, style=dotted];
d572 -> d573  [key=0, style=solid];
d572 -> d566  [key=0, style=solid];
d596 -> d596  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
d596 -> d597  [key=0, style=solid];
d596 -> d598  [key=2, style=dotted];
d574 -> d582  [key=0, style=solid];
d574 -> d575  [key=0, style=solid];
d574 -> d576  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d595 -> d596  [key=0, style=solid];
d575 -> d577  [color=darkseagreen4, key=1, label=optionContractSymbol, style=dashed];
d575 -> d578  [color=darkseagreen4, key=1, label=optionContractSymbol, style=dashed];
d575 -> d581  [color=darkseagreen4, key=1, label=optionContractSymbol, style=dashed];
d575 -> d576  [key=0, style=solid];
d576 -> d577  [key=0, style=solid];
d576 -> d578  [color=darkseagreen4, key=1, label=optionContractSecurity, style=dashed];
d576 -> d580  [color=darkseagreen4, key=1, label=optionContractSecurity, style=dashed];
d580 -> d581  [key=0, style=solid];
d527 -> d528  [key=0, style=solid];
d526 -> d527  [key=0, style=solid];
d328 -> d326  [color=blue, key=0, style=bold];
d327 -> d328  [key=0, style=solid];
d327 -> d329  [key=2, style=dotted];
d393 -> d259  [key=2, style=dotted];
d393 -> d400  [key=0, style=solid];
d88 -> d90  [color=darkseagreen4, key=1, label=updateData, style=dashed];
d88 -> d89  [key=0, style=solid];
d88 -> d281  [key=2, style=dotted];
d612 -> d303  [color=blue, key=0, style=bold];
d608 -> d609  [key=0, style=solid];
d608 -> d610  [key=0, style=solid];
d610 -> d611  [key=0, style=solid];
d610 -> d588  [key=2, style=dotted];
d611 -> d612  [key=0, style=solid];
d497 -> d495  [key=0, style=solid];
d497 -> d498  [key=0, style=solid];
d501 -> d495  [key=0, style=solid];
d501 -> d502  [key=0, style=solid];
d502 -> d495  [key=0, style=solid];
d502 -> d503  [key=0, style=solid];
d502 -> d504  [color=darkseagreen4, key=1, label=slice, style=dashed];
d496 -> d498  [color=darkseagreen4, key=1, label=security, style=dashed];
d496 -> d497  [key=0, style=solid];
d496 -> d496  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d496 -> d503  [color=darkseagreen4, key=1, label=security, style=dashed];
d496 -> d504  [color=darkseagreen4, key=1, label=security, style=dashed];
d563 -> d564  [key=0, style=solid];
d562 -> d563  [key=0, style=solid];
d406 -> d432  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
d406 -> d407  [key=0, style=solid];
d406 -> d440  [key=2, style=dotted];
d433 -> d434  [key=0, style=solid];
d433 -> d440  [key=2, style=dotted];
d376 -> d377  [key=0, style=solid];
d367 -> d362  [key=0, style=solid];
d366 -> d367  [key=0, style=solid];
d472 -> d473  [key=0, style=solid];
d475 -> d476  [key=0, style=solid];
d478 -> d479  [key=0, style=solid];
d371 -> d370  [key=0, style=solid];
d371 -> d371  [color=darkseagreen4, key=1, label=request, style=dashed];
d481 -> d482  [key=0, style=solid];
d464 -> d462  [color=blue, key=0, style=bold];
d463 -> d464  [key=0, style=solid];
d463 -> d463  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
d463 -> d465  [key=2, style=dotted];
d469 -> d470  [key=0, style=solid];
d468 -> d466  [color=blue, key=0, style=bold];
d467 -> d468  [key=0, style=solid];
d485 -> d486  [key=0, style=solid];
d485 -> d487  [key=2, style=dotted];
d381 -> d394  [color=darkseagreen4, key=1, label=list, style=dashed];
d381 -> d251  [key=2, style=dotted];
d381 -> d382  [key=0, style=solid];
d381 -> d386  [color=darkseagreen4, key=1, label=list, style=dashed];
d381 -> d389  [color=darkseagreen4, key=1, label=list, style=dashed];
d384 -> d385  [key=0, style=solid];
d384 -> d386  [color=darkseagreen4, key=1, label=ticks, style=dashed];
d389 -> d451  [key=2, style=dotted];
d389 -> d390  [key=0, style=solid];
d390 -> d391  [key=0, style=solid];
d390 -> d393  [color=darkseagreen4, key=1, label=dataType, style=dashed];
d390 -> d452  [key=2, style=dotted];
d390 -> d489  [color=darkseagreen4, key=1, label=dataType, style=dashed];
d488 -> d489  [key=0, style=solid];
d386 -> d387  [key=0, style=solid];
d386 -> d450  [key=2, style=dotted];
d486 -> d484  [color=blue, key=0, style=bold];
d427 -> d428  [key=0, style=solid];
d491 -> d492  [key=0, style=solid];
d537 -> d538  [key=0, style=solid];
d592 -> d593  [key=0, style=solid];
d621 -> d596  [color=darkseagreen4, key=1, label=security, style=dashed];
d597 -> d595  [color=blue, key=0, style=bold];
d619 -> d527  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d528 -> d526  [color=blue, key=0, style=bold];
d609 -> d612  [key=0, style=solid];
d503 -> d502  [key=0, style=solid];
d503 -> d504  [key=0, style=solid];
d503 -> d507  [key=2, style=dotted];
d504 -> d502  [key=0, style=solid];
d504 -> d508  [key=2, style=dotted];
d620 -> d563  [color=darkseagreen4, key=1, label=split, style=dashed];
d564 -> d562  [color=blue, key=0, style=bold];
d474 -> d472  [color=blue, key=0, style=bold];
d473 -> d474  [key=0, style=solid];
d477 -> d475  [color=blue, key=0, style=bold];
d476 -> d477  [key=0, style=solid];
d480 -> d478  [color=blue, key=0, style=bold];
d479 -> d480  [key=0, style=solid];
d483 -> d481  [color=blue, key=0, style=bold];
d482 -> d483  [key=0, style=solid];
d471 -> d469  [color=blue, key=0, style=bold];
d470 -> d471  [key=0, style=solid];
d617 -> d485  [color=darkseagreen4, key=1, label=symbol, style=dashed];
d618 -> d485  [color=darkseagreen4, key=1, label=dataType, style=dashed];
d618 -> d489  [color=darkseagreen4, key=1, label=dataType, style=dashed];
d382 -> d383  [key=0, style=solid];
d383 -> d384  [key=0, style=solid];
d385 -> d389  [key=0, style=solid];
d385 -> d386  [key=0, style=solid];
d489 -> d487  [key=2, style=dotted];
d489 -> d490  [key=0, style=solid];
d490 -> d488  [color=blue, key=0, style=bold];
d493 -> d491  [color=blue, key=0, style=bold];
d492 -> d493  [key=0, style=solid];
d594 -> d592  [color=blue, key=0, style=bold];
d593 -> d594  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_3  [key=2, style=dotted];
m0_6 -> m0_4  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_3  [key=2, style=dotted];
m0_7 -> m0_9  [key=2, style=dotted];
m0_8 -> m0_5  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_3  [key=2, style=dotted];
m0_11 -> m0_4  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_3  [key=2, style=dotted];
m0_12 -> m0_4  [key=2, style=dotted];
m0_13 -> m0_10  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_24  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_28  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_22  [key=2, style=dotted];
m0_27 -> m0_23  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=2, style=dotted];
m0_15 -> m0_17  [color=darkseagreen4, key=1, label=date, style=dashed];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_20  [key=2, style=dotted];
m0_16 -> m0_21  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_22  [key=2, style=dotted];
m0_18 -> m0_14  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [color=darkorchid, key=3, label="method methodReturn bool ShouldEmitInsight", style=bold];
m2_18 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_18 -> m2_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_18 -> m2_31  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_18 -> m2_27  [key=0, style=solid];
m2_18 -> m2_30  [color=darkorchid, key=3, label="method methodReturn bool ShouldEmitInsight", style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_31  [key=0, style=solid];
m2_28 -> d307  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_25  [color=blue, key=0, style=bold];
m2_30 -> m2_33  [key=0, style=solid];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_18  [color=blue, key=0, style=bold];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=2, style=dotted];
m2_34 -> m2_32  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_5  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_2 -> m2_6  [color=darkseagreen4, key=1, label="double?", style=dashed];
m2_2 -> m2_7  [color=darkseagreen4, key=1, label="double?", style=dashed];
m2_3 -> m2_0  [color=blue, key=0, style=bold];
m2_3 -> m2_4  [key=0, style=solid];
m2_19 -> m2_36  [key=0, style=solid];
m2_19 -> m2_5  [color=darkorchid, key=3, label="Parameter variable T input", style=bold];
m2_36 -> m2_19  [color=blue, key=0, style=bold];
m2_25 -> m2_2  [color=darkorchid, key=3, label="Field variable double? _confidence", style=bold];
m2_25 -> m2_26  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_19  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_17 -> m2_13  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_25  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_4  [key=2, style=dotted];
m2_23 -> m2_22  [key=0, style=solid];
m2_23 -> m2_26  [key=2, style=dotted];
m2_24 -> m2_21  [color=blue, key=0, style=bold];
m2_24 -> m2_20  [color=blue, key=0, style=bold];
m2_16 -> m2_14  [color=green, key=0, style=solid];
m2_16 -> m2_19  [color=green, key=2, style=dotted];
m2_20 -> m2_37  [key=0, style=solid];
m2_20 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorDataPoint", style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [color=darkseagreen4, key=1, label=handler, style=dashed];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=0, style=solid];
m2_40 -> m2_20  [color=blue, key=0, style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_5 -> m2_8  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_5 -> m2_10  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_5 -> m2_11  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_5 -> m2_12  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=0, style=solid];
m2_7 -> m2_15  [key=0, style=solid];
m2_7 -> m2_16  [key=2, style=dotted];
m2_7 -> m2_17  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_14  [key=0, style=solid];
m2_8 -> m2_18  [key=2, style=dotted];
m2_8 -> m2_11  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_2  [color=blue, key=0, style=bold];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_4  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_12  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [color=green, key=1, label=security, style=dashed];
m2_14 -> m2_17  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_20  [key=2, style=dotted];
m2_13 -> m2_16  [color=green, key=0, style=bold];
m2_13 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m2_15 -> m2_5  [color=blue, key=0, style=bold];
m2_15 -> m2_16  [color=green, key=0, style=solid];
m2_15 -> m2_14  [key=0, style=solid];
m2_15 -> m2_18  [key=2, style=dotted];
m2_35 -> m2_16  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_35 -> m2_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.ConstantAlphaModel", style=dashed];
m2_42 -> m2_1  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_2  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_7  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_9  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_12  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_14  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_23  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_33  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_37  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m2_42 -> m2_39  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m3_73 -> m3_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>", style=dashed];
m3_73 -> m3_89  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>", style=dashed];
m3_73 -> m3_86  [key=0, style=solid];
m3_73 -> m3_87  [color=darkseagreen4, key=1, label="System.Threading.ManualResetEvent", style=dashed];
m3_73 -> m3_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>", style=dashed];
m3_73 -> m3_104  [color=darkseagreen4, key=1, label="System.Threading.ManualResetEvent", style=dashed];
m3_73 -> m3_90  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_73 -> m3_91  [color=darkseagreen4, key=1, label="System.Threading.ManualResetEvent", style=dashed];
m3_73 -> m3_92  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_83  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_96  [key=2, style=dotted];
m3_89 -> m3_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_95  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_92  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_94  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_94  [key=2, style=dotted];
m3_92 -> m3_72  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_93 -> m3_73  [color=blue, key=0, style=bold];
m3_254 -> m3_255  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_62  [key=2, style=dotted];
m3_26 -> m3_63  [key=2, style=dotted];
m3_26 -> m3_64  [key=2, style=dotted];
m3_26 -> m3_28  [color=darkseagreen4, key=1, label=csvFile, style=dashed];
m3_26 -> m3_34  [color=darkseagreen4, key=1, label=csvFile, style=dashed];
m3_30 -> m3_31  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_69  [key=2, style=dotted];
m3_34 -> m3_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_34 -> m3_39  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_34 -> m3_40  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_34 -> m3_51  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_73  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_75  [key=2, style=dotted];
m3_46 -> m3_76  [key=2, style=dotted];
m3_46 -> m3_48  [color=darkseagreen4, key=1, label=symbolProcessors, style=dashed];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_83  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_73  [key=2, style=dotted];
m3_101 -> m3_98  [key=0, style=solid];
m3_101 -> m3_110  [key=2, style=dotted];
m3_101 -> m3_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_129 -> m3_126  [key=0, style=solid];
m3_129 -> m3_137  [key=2, style=dotted];
m3_129 -> m3_138  [key=2, style=dotted];
m3_50 -> m3_21  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_79  [key=2, style=dotted];
m3_50 -> m3_80  [key=2, style=dotted];
m3_50 -> m3_81  [key=2, style=dotted];
m3_24 -> m3_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_24 -> m3_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_24 -> m3_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_24 -> m3_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_37  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_49  [color=darkseagreen4, key=1, label=totalLinesProcessed, style=dashed];
m3_49 -> m3_51  [key=0, style=solid];
m3_49 -> m3_78  [key=2, style=dotted];
m3_57 -> m3_57  [color=darkseagreen4, key=1, label=totalFilesProcessed, style=dashed];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_60  [key=0, style=solid];
m3_57 -> m3_84  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_61  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_61  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_32  [key=0, style=solid];
m3_28 -> m3_65  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_61  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_66  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_42  [color=darkseagreen4, key=1, label=waitForFlush, style=dashed];
m3_33 -> m3_54  [color=darkseagreen4, key=1, label=waitForFlush, style=dashed];
m3_33 -> m3_68  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_55  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_72  [key=2, style=dotted];
m3_39 -> m3_41  [color=darkseagreen4, key=1, label=previousFlush, style=dashed];
m3_40 -> m3_42  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_40 -> m3_46  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_45  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_40 -> m3_47  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_40 -> m3_48  [color=darkseagreen4, key=1, label=tick, style=dashed];
m3_51 -> m3_39  [key=0, style=solid];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_82  [key=2, style=dotted];
m3_37 -> m3_42  [color=darkseagreen4, key=1, label=flushStep, style=dashed];
m3_37 -> m3_54  [color=darkseagreen4, key=1, label=flushStep, style=dashed];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_39  [color=darkseagreen4, key=1, label=flushStep, style=dashed];
m3_37 -> m3_70  [key=2, style=dotted];
m3_37 -> m3_71  [key=2, style=dotted];
m3_37 -> m3_41  [color=darkseagreen4, key=1, label=flushStep, style=dashed];
m3_32 -> m3_42  [color=darkseagreen4, key=1, label=processors, style=dashed];
m3_32 -> m3_53  [color=darkseagreen4, key=1, label=processors, style=dashed];
m3_32 -> m3_54  [color=darkseagreen4, key=1, label=processors, style=dashed];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_67  [key=2, style=dotted];
m3_32 -> m3_45  [color=darkseagreen4, key=1, label=processors, style=dashed];
m3_32 -> m3_47  [color=darkseagreen4, key=1, label=processors, style=dashed];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_44  [key=0, style=solid];
m3_41 -> m3_72  [key=2, style=dotted];
m3_43 -> m3_53  [color=darkseagreen4, key=1, label=processors, style=dashed];
m3_43 -> m3_54  [color=darkseagreen4, key=1, label=processors, style=dashed];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_67  [key=2, style=dotted];
m3_43 -> m3_45  [color=darkseagreen4, key=1, label=processors, style=dashed];
m3_43 -> m3_47  [color=darkseagreen4, key=1, label=processors, style=dashed];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_48  [key=0, style=solid];
m3_45 -> d307  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_77  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_61  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_97 -> m3_98  [key=0, style=solid];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_107  [key=2, style=dotted];
m3_100 -> m3_108  [key=2, style=dotted];
m3_100 -> m3_109  [key=2, style=dotted];
m3_100 -> m3_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_100 -> m3_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_100 -> m3_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_102  [key=0, style=solid];
m3_98 -> m3_104  [key=0, style=solid];
m3_98 -> m3_106  [key=2, style=dotted];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_124  [color=darkseagreen4, key=1, label="?", style=dashed];
m3_122 -> m3_125  [color=darkseagreen4, key=1, label="?", style=dashed];
m3_122 -> m3_126  [color=darkseagreen4, key=1, label="?", style=dashed];
m3_126 -> m3_129  [color=darkseagreen4, key=1, label=processor, style=dashed];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_130  [key=0, style=solid];
m3_126 -> m3_132  [key=0, style=solid];
m3_127 -> m3_129  [color=darkseagreen4, key=1, label=tempFileName, style=dashed];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_135  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_136  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_174  [color=darkseagreen4, key=1, label="System.Linq.IGrouping<string, string>", style=dashed];
m3_172 -> m3_180  [color=darkseagreen4, key=1, label="System.Linq.IGrouping<string, string>", style=dashed];
m3_172 -> m3_184  [color=darkseagreen4, key=1, label="System.Linq.IGrouping<string, string>", style=dashed];
m3_210 -> m3_211  [key=0, style=solid];
m3_36 -> m3_50  [color=darkseagreen4, key=1, label=start, style=dashed];
m3_36 -> m3_37  [key=0, style=solid];
m3_60 -> m3_24  [color=blue, key=0, style=bold];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_61  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_85  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_178 -> m3_62  [key=2, style=dotted];
m3_178 -> m3_177  [key=0, style=solid];
m3_178 -> m3_188  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_112  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_156  [key=2, style=dotted];
m3_105 -> m3_97  [color=blue, key=0, style=bold];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_114  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m3_113 -> m3_114  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_102 -> m3_103  [key=0, style=solid];
m3_132 -> m3_122  [color=blue, key=0, style=bold];
m3_123 -> m3_124  [key=0, style=solid];
m3_124 -> m3_125  [key=0, style=solid];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_127  [color=darkseagreen4, key=1, label=zip, style=dashed];
m3_125 -> m3_128  [color=darkseagreen4, key=1, label=zip, style=dashed];
m3_125 -> m3_133  [key=2, style=dotted];
m3_125 -> m3_134  [key=2, style=dotted];
m3_125 -> m3_131  [color=darkseagreen4, key=1, label=zip, style=dashed];
m3_130 -> m3_131  [key=0, style=solid];
m3_168 -> m3_169  [key=0, style=solid];
m3_185 -> m3_172  [color=blue, key=0, style=bold];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_175  [color=darkseagreen4, key=1, label=outputFileName, style=dashed];
m3_173 -> m3_176  [color=darkseagreen4, key=1, label=outputFileName, style=dashed];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_186  [key=2, style=dotted];
m3_174 -> m3_177  [color=darkseagreen4, key=1, label=filesToCompress, style=dashed];
m3_180 -> m3_185  [key=0, style=solid];
m3_180 -> m3_181  [key=0, style=solid];
m3_180 -> m3_183  [key=0, style=solid];
m3_180 -> m3_190  [key=2, style=dotted];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_85  [key=2, style=dotted];
m3_206 -> m3_207  [key=0, style=solid];
m3_206 -> m3_208  [key=2, style=dotted];
m3_206 -> m3_209  [key=2, style=dotted];
m3_205 -> m3_206  [key=0, style=solid];
m3_214 -> m3_210  [color=blue, key=0, style=bold];
m3_211 -> m3_214  [key=0, style=solid];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_215  [key=2, style=dotted];
m3_176 -> m3_61  [key=2, style=dotted];
m3_176 -> m3_177  [key=0, style=solid];
m3_175 -> m3_178  [color=darkseagreen4, key=1, label=zip, style=dashed];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_187  [key=2, style=dotted];
m3_175 -> m3_179  [color=darkseagreen4, key=1, label=zip, style=dashed];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_179  [key=0, style=solid];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_111  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_155 -> m3_153  [color=blue, key=0, style=bold];
m3_114 -> m3_115  [key=0, style=solid];
m3_115 -> m3_113  [color=blue, key=0, style=bold];
m3_118 -> m3_116  [color=blue, key=0, style=bold];
m3_117 -> m3_118  [key=0, style=solid];
m3_121 -> m3_119  [color=blue, key=0, style=bold];
m3_120 -> m3_121  [key=0, style=solid];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_111  [key=2, style=dotted];
m3_170 -> m3_168  [color=blue, key=0, style=bold];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_171  [key=2, style=dotted];
m3_182 -> m3_185  [key=0, style=solid];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_111  [key=2, style=dotted];
m3_179 -> m3_180  [key=0, style=solid];
m3_179 -> m3_189  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_183 -> m3_184  [key=0, style=solid];
m3_207 -> m3_205  [color=blue, key=0, style=bold];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_111  [key=2, style=dotted];
m3_212 -> m3_213  [key=0, style=solid];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_253  [key=2, style=dotted];
m3_255 -> m3_256  [key=0, style=solid];
m3_255 -> m3_257  [key=2, style=dotted];
m3_250 -> m3_251  [key=0, style=solid];
m3_252 -> m3_250  [color=blue, key=0, style=bold];
m3_256 -> m3_254  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_7  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_8  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_3  [color=blue, key=0, style=bold];
m3_7 -> m3_0  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_10 -> m3_11  [color=green, key=0, style=solid];
m3_10 -> m3_20  [color=green, key=2, style=dotted];
m3_10 -> m3_21  [color=green, key=2, style=dotted];
m3_10 -> m3_13  [key=2, style=dotted];
m3_9 -> m3_10  [color=green, key=0, style=solid];
m3_9 -> m3_19  [key=2, style=dotted];
m3_9 -> m3_12  [color=darkseagreen4, key=1, label=files, style=dashed];
m3_9 -> m3_17  [color=darkseagreen4, key=1, label=files, style=dashed];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_17  [color=darkseagreen4, key=1, label=totalLinesProcessed, style=dashed];
m3_11 -> m3_8  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_23  [key=2, style=dotted];
m3_17 -> m3_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_17 -> m3_35  [color=darkseagreen4, key=1, label=start, style=dashed];
m3_17 -> m3_49  [color=darkseagreen4, key=1, label=totalLinesProcessed, style=dashed];
m3_17 -> m3_50  [color=darkseagreen4, key=1, label=totalFilesProcessed, style=dashed];
m3_17 -> m3_57  [color=darkseagreen4, key=1, label=totalFilesProcessed, style=dashed];
m3_12 -> m3_20  [key=2, style=dotted];
m3_12 -> m3_17  [color=darkseagreen4, key=1, label=totalFiles, style=dashed];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_50  [color=darkseagreen4, key=1, label=totalFiles, style=dashed];
m3_12 -> m3_9  [color=blue, key=0, style=bold];
m3_13 -> m3_17  [color=darkseagreen4, key=1, label=totalFilesProcessed, style=dashed];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_17  [color=darkseagreen4, key=1, label=start, style=dashed];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m3_14 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m3_14 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m3_14 -> m3_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m3_14 -> m3_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler", style=dashed];
m3_15 -> m3_17  [color=darkseagreen4, key=1, label=zipper, style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_31  [color=darkseagreen4, key=1, label=zipper, style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_22  [key=2, style=dotted];
m3_16 -> m3_37  [color=darkseagreen4, key=1, label=random, style=dashed];
m3_18 -> m3_8  [color=blue, key=0, style=bold];
m3_83 -> m3_149  [key=0, style=solid];
m3_83 -> m3_150  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>", style=dashed];
m3_83 -> m3_154  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_149 -> m3_151  [key=0, style=solid];
m3_149 -> m3_150  [key=0, style=solid];
m3_150 -> m3_149  [key=0, style=solid];
m3_150 -> m3_152  [key=2, style=dotted];
m3_150 -> m3_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_151 -> m3_83  [color=blue, key=0, style=bold];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_196  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_194 -> m3_195  [key=0, style=solid];
m3_194 -> m3_64  [key=2, style=dotted];
m3_194 -> m3_197  [color=darkseagreen4, key=1, label=destination, style=dashed];
m3_199 -> m3_200  [key=0, style=solid];
m3_199 -> m3_110  [key=2, style=dotted];
m3_199 -> m3_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_192 -> m3_21  [key=2, style=dotted];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_201  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_193 -> m3_202  [key=2, style=dotted];
m3_193 -> m3_197  [color=darkseagreen4, key=1, label=extensions, style=dashed];
m3_193 -> m3_206  [color=darkseagreen4, key=1, label=extensions, style=dashed];
m3_195 -> m3_196  [key=0, style=solid];
m3_195 -> m3_136  [key=2, style=dotted];
m3_197 -> m3_199  [color=darkseagreen4, key=1, label=files, style=dashed];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_166  [key=2, style=dotted];
m3_197 -> m3_108  [key=2, style=dotted];
m3_197 -> m3_203  [key=2, style=dotted];
m3_197 -> m3_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_198 -> m3_199  [key=0, style=solid];
m3_198 -> m3_204  [key=2, style=dotted];
m3_196 -> m3_197  [key=0, style=solid];
m3_196 -> m3_165  [key=2, style=dotted];
m3_200 -> m3_191  [color=blue, key=0, style=bold];
m3_66 -> m3_216  [key=0, style=solid];
m3_66 -> m3_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_66 -> m3_224  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_66 -> m3_232  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_66 -> m3_235  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_66 -> m3_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_66 -> m3_239  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_232 -> m3_61  [key=2, style=dotted];
m3_232 -> m3_233  [key=0, style=solid];
m3_239 -> m3_61  [key=2, style=dotted];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_243  [key=0, style=solid];
m3_243 -> m3_66  [color=blue, key=0, style=bold];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_241  [color=darkseagreen4, key=1, label=timedOut, style=dashed];
m3_223 -> m3_224  [key=0, style=solid];
m3_224 -> m3_225  [key=0, style=solid];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_111  [key=2, style=dotted];
m3_238 -> m3_243  [key=0, style=solid];
m3_238 -> m3_240  [key=0, style=solid];
m3_238 -> m3_111  [key=2, style=dotted];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_248  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_233 -> m3_249  [key=2, style=dotted];
m3_237 -> m3_239  [key=0, style=solid];
m3_237 -> m3_238  [key=0, style=solid];
m3_240 -> m3_241  [key=0, style=solid];
m3_241 -> m3_243  [key=0, style=solid];
m3_241 -> m3_242  [key=0, style=solid];
m3_236 -> m3_243  [key=0, style=solid];
m3_236 -> m3_240  [key=0, style=solid];
m3_236 -> m3_241  [color=darkseagreen4, key=1, label=timedOut, style=dashed];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_111  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_251  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_217 -> m3_227  [color=darkseagreen4, key=1, label=readStream, style=dashed];
m3_217 -> m3_228  [color=darkseagreen4, key=1, label=readStream, style=dashed];
m3_218 -> m3_223  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_224  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_231  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_237  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_219  [key=0, style=solid];
m3_218 -> m3_244  [key=2, style=dotted];
m3_218 -> m3_220  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_221  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_222  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_225  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_226  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_255  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_227  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_218 -> m3_228  [color=darkseagreen4, key=1, label=process, style=dashed];
m3_222 -> m3_223  [key=0, style=solid];
m3_225 -> m3_226  [key=0, style=solid];
m3_225 -> m3_245  [key=2, style=dotted];
m3_234 -> m3_235  [key=0, style=solid];
m3_234 -> m3_237  [key=0, style=solid];
m3_230 -> m3_231  [key=0, style=solid];
m3_230 -> m3_233  [key=0, style=solid];
m3_227 -> m3_233  [color=darkseagreen4, key=1, label=outputReader, style=dashed];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_247  [key=2, style=dotted];
m3_228 -> m3_233  [color=darkseagreen4, key=1, label=errorReader, style=dashed];
m3_228 -> m3_229  [key=0, style=solid];
m3_228 -> m3_247  [key=2, style=dotted];
m3_219 -> m3_220  [key=0, style=solid];
m3_220 -> m3_221  [key=0, style=solid];
m3_221 -> m3_222  [key=0, style=solid];
m3_229 -> m3_234  [color=darkseagreen4, key=1, label=waitResult, style=dashed];
m3_229 -> m3_230  [key=0, style=solid];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_246  [key=2, style=dotted];
m3_226 -> m3_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_226 -> m3_229  [color=darkseagreen4, key=1, label=processWaiter, style=dashed];
m3_157 -> m3_161  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_157 -> m3_158  [key=0, style=solid];
m3_160 -> m3_161  [key=0, style=solid];
m3_160 -> m3_64  [key=2, style=dotted];
m3_160 -> m3_162  [color=darkseagreen4, key=1, label=destination, style=dashed];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_110  [key=2, style=dotted];
m3_163 -> m3_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_61  [key=2, style=dotted];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_165  [key=2, style=dotted];
m3_162 -> m3_163  [key=0, style=solid];
m3_162 -> m3_166  [key=2, style=dotted];
m3_162 -> m3_167  [key=2, style=dotted];
m3_162 -> m3_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_158 -> m3_159  [key=0, style=solid];
m3_164 -> m3_157  [color=blue, key=0, style=bold];
m3_258 -> m3_10  [color=green, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_1  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_2  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_4  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_5  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_6  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_9  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_17  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_26  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_30  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_34  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_42  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_46  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_53  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_54  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_88  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_89  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_101  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_129  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_160  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_163  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_194  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_258 -> m3_199  [color=darkseagreen4, key=1, label="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverter", style=dashed];
m3_260 -> m3_50  [color=darkseagreen4, key=1, label=start, style=dashed];
m3_260 -> m3_35  [color=darkseagreen4, key=1, label=start, style=dashed];
m3_263 -> m3_50  [color=darkseagreen4, key=1, label=totalFiles, style=dashed];
m3_264 -> m3_50  [color=darkseagreen4, key=1, label=totalFilesProcessed, style=dashed];
m3_264 -> m3_57  [color=darkseagreen4, key=1, label=totalFilesProcessed, style=dashed];
m3_262 -> m3_49  [color=darkseagreen4, key=1, label=totalLinesProcessed, style=dashed];
m3_259 -> m3_31  [color=darkseagreen4, key=1, label=zipper, style=dashed];
m3_261 -> m3_37  [color=darkseagreen4, key=1, label=random, style=dashed];
m3_265 -> m3_100  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<QuantConnect.Symbol, System.Collections.Generic.List<QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsProcessor>>", style=dashed];
m3_266 -> m3_104  [color=darkseagreen4, key=1, label="System.Threading.ManualResetEvent", style=dashed];
m3_268 -> m3_154  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m3_269 -> m3_154  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_270 -> m3_206  [color=darkseagreen4, key=1, label=extensions, style=dashed];
m3_267 -> m3_114  [color=darkseagreen4, key=1, label=tickType, style=dashed];
m3_271 -> m3_255  [color=darkseagreen4, key=1, label=process, style=dashed];
m4_197 -> m4_198  [key=0, style=solid];
m4_198 -> m4_199  [key=0, style=solid];
m4_198 -> m4_201  [key=0, style=solid];
m4_198 -> m4_203  [key=2, style=dotted];
m4_199 -> m4_200  [key=0, style=solid];
m4_201 -> m4_202  [key=0, style=solid];
m4_201 -> m4_139  [key=2, style=dotted];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_204  [key=2, style=dotted];
m4_202 -> m4_197  [color=blue, key=0, style=bold];
m4_155 -> m4_249  [key=0, style=solid];
m4_155 -> m4_250  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_155 -> m4_253  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_155 -> m4_256  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_155 -> m4_259  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_249 -> m4_250  [key=0, style=solid];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_254  [key=0, style=solid];
m4_250 -> m4_257  [key=0, style=solid];
m4_253 -> m4_260  [key=0, style=solid];
m4_253 -> m4_262  [key=2, style=dotted];
m4_256 -> m4_260  [key=0, style=solid];
m4_256 -> m4_263  [key=2, style=dotted];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_264  [key=2, style=dotted];
m4_251 -> m4_252  [key=0, style=solid];
m4_254 -> m4_255  [key=0, style=solid];
m4_257 -> m4_258  [key=0, style=solid];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_139  [key=2, style=dotted];
m4_255 -> m4_256  [key=0, style=solid];
m4_255 -> m4_139  [key=2, style=dotted];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_139  [key=2, style=dotted];
m4_260 -> m4_261  [key=0, style=solid];
m4_261 -> m4_155  [color=blue, key=0, style=bold];
m4_167 -> m4_226  [key=0, style=solid];
m4_167 -> m4_227  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_167 -> m4_230  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_167 -> m4_233  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_226 -> m4_227  [key=0, style=solid];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_231  [key=0, style=solid];
m4_230 -> m4_234  [key=0, style=solid];
m4_230 -> m4_236  [key=2, style=dotted];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_237  [key=2, style=dotted];
m4_228 -> m4_229  [key=0, style=solid];
m4_231 -> m4_232  [key=0, style=solid];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_139  [key=2, style=dotted];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_139  [key=2, style=dotted];
m4_234 -> m4_235  [key=0, style=solid];
m4_235 -> m4_167  [color=blue, key=0, style=bold];
m4_165 -> m4_205  [key=0, style=solid];
m4_165 -> m4_206  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_165 -> m4_208  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_165 -> m4_211  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_165 -> m4_214  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_165 -> m4_218  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_205 -> m4_206  [key=0, style=solid];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_210  [key=0, style=solid];
m4_206 -> m4_213  [key=0, style=solid];
m4_206 -> m4_216  [key=0, style=solid];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_222  [key=2, style=dotted];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_223  [key=2, style=dotted];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_224  [key=2, style=dotted];
m4_218 -> m4_219  [key=0, style=solid];
m4_218 -> m4_225  [key=2, style=dotted];
m4_218 -> m4_220  [color=darkseagreen4, key=1, label=df, style=dashed];
m4_207 -> m4_208  [key=0, style=solid];
m4_210 -> m4_211  [key=0, style=solid];
m4_213 -> m4_214  [key=0, style=solid];
m4_216 -> m4_217  [key=0, style=solid];
m4_209 -> m4_220  [key=0, style=solid];
m4_209 -> m4_139  [key=2, style=dotted];
m4_212 -> m4_220  [key=0, style=solid];
m4_212 -> m4_139  [key=2, style=dotted];
m4_215 -> m4_220  [key=0, style=solid];
m4_215 -> m4_139  [key=2, style=dotted];
m4_217 -> m4_218  [key=0, style=solid];
m4_217 -> m4_137  [key=2, style=dotted];
m4_217 -> m4_138  [key=2, style=dotted];
m4_219 -> m4_220  [key=0, style=solid];
m4_219 -> m4_139  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_221 -> m4_165  [color=blue, key=0, style=bold];
m4_166 -> m4_238  [key=0, style=solid];
m4_166 -> m4_239  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m4_166 -> m4_241  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_166 -> m4_243  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m4_238 -> m4_239  [key=0, style=solid];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_243  [key=0, style=solid];
m4_241 -> m4_242  [key=0, style=solid];
m4_241 -> m4_247  [key=2, style=dotted];
m4_243 -> m4_244  [key=0, style=solid];
m4_243 -> m4_248  [key=2, style=dotted];
m4_243 -> m4_245  [color=darkseagreen4, key=1, label=th, style=dashed];
m4_240 -> m4_241  [key=0, style=solid];
m4_242 -> m4_245  [key=0, style=solid];
m4_242 -> m4_139  [key=2, style=dotted];
m4_244 -> m4_245  [key=0, style=solid];
m4_244 -> m4_139  [key=2, style=dotted];
m4_245 -> m4_246  [key=0, style=solid];
m4_246 -> m4_166  [color=blue, key=0, style=bold];
m4_154 -> m4_265  [key=0, style=solid];
m4_154 -> m4_266  [color=darkseagreen4, key=1, label="QuantConnect.SetupHandlerEndpoint", style=dashed];
m4_265 -> m4_266  [key=0, style=solid];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_270  [key=0, style=solid];
m4_266 -> m4_273  [key=0, style=solid];
m4_267 -> m4_268  [key=0, style=solid];
m4_270 -> m4_271  [key=0, style=solid];
m4_273 -> m4_274  [key=0, style=solid];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_278  [key=2, style=dotted];
m4_269 -> m4_276  [key=0, style=solid];
m4_269 -> m4_139  [key=2, style=dotted];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_279  [key=2, style=dotted];
m4_272 -> m4_276  [key=0, style=solid];
m4_272 -> m4_139  [key=2, style=dotted];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_280  [key=2, style=dotted];
m4_274 -> m4_276  [color=darkseagreen4, key=1, label=sh, style=dashed];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_139  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_277 -> m4_154  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_8  [color=darkseagreen4, key=1, label=mode, style=dashed];
m4_3 -> m4_4  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_139  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_137  [key=2, style=dotted];
m4_6 -> m4_138  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_140  [key=2, style=dotted];
m4_9 -> m4_139  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_139  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_137  [key=2, style=dotted];
m4_11 -> m4_138  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_137  [key=2, style=dotted];
m4_12 -> m4_138  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_16  [key=0, style=solid];
m4_13 -> m4_137  [key=2, style=dotted];
m4_13 -> m4_138  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_142  [key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_141  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_143  [key=2, style=dotted];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_144  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_145  [key=2, style=dotted];
m4_19 -> m4_131  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m4_19 -> m4_132  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_146  [key=2, style=dotted];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_133  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_132 -> m4_192  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_147  [key=2, style=dotted];
m4_22 -> m4_23  [key=0, style=solid];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m4_23 -> m4_117  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m4_24 -> m4_119  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_118  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_192  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_120  [key=0, style=solid];
m4_119 -> m4_120  [key=0, style=solid];
m4_119 -> m4_192  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_148  [key=2, style=dotted];
m4_27 -> m4_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_31  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_41  [color=darkseagreen4, key=1, label=algorithmPath, style=dashed];
m4_27 -> m4_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_59  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_71  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_198  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_27 -> m4_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_35  [key=0, style=solid];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_149  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_150  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_151  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_152  [key=2, style=dotted];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_153  [key=2, style=dotted];
m4_35 -> m4_26  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_152  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_154  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_155  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_157  [key=2, style=dotted];
m4_41 -> m4_43  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_45  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_55  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_56  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_57  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_58  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_59  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_60  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_61  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_71  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_198  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_75  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_76  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_88  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_98  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_99  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_41 -> m4_104  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_158  [key=2, style=dotted];
m4_42 -> m4_53  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_53  [key=0, style=solid];
m4_48 -> m4_151  [key=2, style=dotted];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_151  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_161  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_165  [key=2, style=dotted];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_166  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_167  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_169  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_170  [key=2, style=dotted];
m4_70 -> m4_171  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_172  [key=2, style=dotted];
m4_71 -> m4_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_151  [key=2, style=dotted];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_182  [key=2, style=dotted];
m4_103 -> m4_183  [key=2, style=dotted];
m4_103 -> m4_184  [key=2, style=dotted];
m4_103 -> m4_171  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_107  [key=0, style=solid];
m4_104 -> m4_185  [key=2, style=dotted];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_48  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_59  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_63  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_71  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_198  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_34 -> m4_104  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_156  [key=2, style=dotted];
m4_39 -> m4_120  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m4_39 -> m4_121  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_146  [key=2, style=dotted];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_122  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_192  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_49  [key=0, style=solid];
m4_43 -> m4_53  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_159  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_162  [key=2, style=dotted];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_163  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_164  [key=2, style=dotted];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_77  [key=0, style=solid];
m4_75 -> m4_87  [key=0, style=solid];
m4_76 -> m4_87  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_177  [key=2, style=dotted];
m4_88 -> m4_104  [color=darkseagreen4, key=1, label=orders, style=dashed];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_180  [key=2, style=dotted];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_102  [key=0, style=solid];
m4_99 -> m4_181  [key=2, style=dotted];
m4_99 -> m4_104  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_110  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_53  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m4_49 -> m4_50  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_159  [key=2, style=dotted];
m4_46 -> m4_46  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_160  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid];
m4_50 -> m4_52  [color=darkseagreen4, key=1, label=runtimeMessage, style=dashed];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_160  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_102  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m4_110 -> m4_111  [key=0, style=solid];
m4_110 -> m4_188  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_168  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_145  [key=2, style=dotted];
m4_64 -> m4_67  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m4_64 -> m4_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m4_64 -> m4_117  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_145  [key=2, style=dotted];
m4_65 -> m4_68  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m4_65 -> m4_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m4_65 -> m4_119  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_146  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_145  [key=2, style=dotted];
m4_66 -> m4_69  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_146  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_146  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_75  [key=0, style=solid];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_173  [key=2, style=dotted];
m4_73 -> m4_149  [key=2, style=dotted];
m4_74 -> m4_87  [key=0, style=solid];
m4_74 -> m4_174  [key=2, style=dotted];
m4_74 -> m4_173  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_177  [key=2, style=dotted];
m4_87 -> m4_95  [color=darkseagreen4, key=1, label=charts, style=dashed];
m4_87 -> m4_96  [color=darkseagreen4, key=1, label=charts, style=dashed];
m4_87 -> m4_97  [color=darkseagreen4, key=1, label=charts, style=dashed];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_149  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_81  [key=0, style=solid];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_175  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_87  [key=0, style=solid];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_84  [color=darkseagreen4, key=1, label=message, style=dashed];
m4_82 -> m4_85  [color=darkseagreen4, key=1, label=message, style=dashed];
m4_82 -> m4_86  [color=darkseagreen4, key=1, label=message, style=dashed];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_139  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_176  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_160  [key=2, style=dotted];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_100  [key=0, style=solid];
m4_95 -> m4_102  [key=0, style=solid];
m4_95 -> d258  [key=2, style=dotted];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_99  [color=darkseagreen4, key=1, label=equity, style=dashed];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_99  [color=darkseagreen4, key=1, label=performance, style=dashed];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_178  [key=2, style=dotted];
m4_89 -> m4_104  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_178  [key=2, style=dotted];
m4_90 -> m4_104  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_178  [key=2, style=dotted];
m4_91 -> m4_104  [color=darkseagreen4, key=1, label=banner, style=dashed];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_95  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m4_92 -> m4_96  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m4_92 -> m4_97  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_95  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m4_93 -> m4_96  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_97  [color=darkseagreen4, key=1, label=dailyPerformanceKey, style=dashed];
m4_100 -> m4_101  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_149  [key=2, style=dotted];
m4_105 -> m4_106  [key=0, style=solid];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_186  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_149  [key=2, style=dotted];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_175  [key=2, style=dotted];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_187  [key=2, style=dotted];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_189  [key=2, style=dotted];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_190  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_116  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_191  [key=2, style=dotted];
m4_115 -> m4_113  [key=0, style=solid];
m4_115 -> m4_139  [key=2, style=dotted];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_124  [key=0, style=solid];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_193  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_126  [key=0, style=solid];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_194  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_129  [key=0, style=solid];
m4_126 -> m4_139  [key=2, style=dotted];
m4_127 -> m4_128  [key=0, style=solid];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_131  [key=0, style=solid];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_149  [key=2, style=dotted];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_195  [key=2, style=dotted];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_135  [key=0, style=solid];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_194  [key=2, style=dotted];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_196  [key=2, style=dotted];
m4_136 -> m4_0  [color=blue, key=0, style=bold];
m4_281 -> m4_198  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_282 -> m4_198  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_5  [color=red, key=1, label=string, style=dashed];
m5_3 -> m5_4  [key=0, style=solid];
m5_5 -> m5_6  [color=red, key=0, style=solid];
m5_4 -> m5_5  [color=red, key=0, style=solid];
m5_6 -> m5_2  [color=blue, key=0, style=bold];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_12  [key=2, style=dotted];
m5_19 -> m5_13  [key=2, style=dotted];
m5_20 -> m5_18  [color=blue, key=0, style=bold];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_8 -> m5_9  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_12  [key=2, style=dotted];
m5_9 -> m5_13  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_14  [key=2, style=dotted];
m5_11 -> m5_7  [color=blue, key=0, style=bold];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_21  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m5_22 -> m5_21  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [color=blue, key=0, style=bold];
m5_15 -> m5_16  [key=0, style=solid];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_12  [key=2, style=dotted];
m5_16 -> m5_13  [key=2, style=dotted];
m5_17 -> m5_15  [color=blue, key=0, style=bold];
m5_23 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m5_23 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m5_23 -> m5_5  [color=red, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m5_23 -> m5_9  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m5_23 -> m5_16  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m5_23 -> m5_19  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m6_136 -> m6_137  [key=0, style=solid];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_140  [key=0, style=solid];
m6_138 -> m6_139  [key=0, style=solid];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_129  [key=2, style=dotted];
m6_140 -> m6_136  [color=blue, key=0, style=bold];
m6_8 -> m6_9  [key=0, style=solid];
m6_7 -> m6_5  [color=blue, key=0, style=bold];
m6_30 -> m6_34  [key=0, style=solid];
m6_30 -> m6_37  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_31 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_35  [key=2, style=dotted];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_36  [key=2, style=dotted];
m6_33 -> m6_37  [key=2, style=dotted];
m6_33 -> m6_38  [key=2, style=dotted];
m6_33 -> m6_39  [key=2, style=dotted];
m6_34 -> m6_31  [color=blue, key=0, style=bold];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_36  [color=darkseagreen4, key=1, label=config, style=dashed];
m6_34 -> m6_38  [color=darkseagreen4, key=1, label=config, style=dashed];
m6_39 -> m6_30  [color=blue, key=0, style=bold];
m6_28 -> m6_14  [key=2, style=dotted];
m6_28 -> d444  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_17  [key=0, style=solid];
m6_106 -> m6_113  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_106 -> m6_111  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_108  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_112 -> m6_113  [key=0, style=solid];
m6_112 -> m6_116  [key=2, style=dotted];
m6_113 -> m6_83  [key=2, style=dotted];
m6_113 -> m6_84  [key=2, style=dotted];
m6_113 -> m6_111  [key=0, style=solid];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_114  [key=0, style=solid];
m6_108 -> m6_111  [key=0, style=solid];
m6_108 -> m6_103  [key=2, style=dotted];
m6_108 -> m6_109  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_102  [key=2, style=dotted];
m6_109 -> m6_102  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_110 -> m6_115  [key=0, style=solid];
m6_115 -> m6_106  [color=blue, key=0, style=bold];
m6_141 -> m6_142  [key=0, style=solid];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_144  [key=2, style=dotted];
m6_142 -> m6_145  [key=2, style=dotted];
m6_143 -> m6_141  [color=blue, key=0, style=bold];
m6_223 -> m6_224  [key=0, style=solid];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_215  [key=2, style=dotted];
m6_227 -> m6_228  [key=0, style=solid];
m6_228 -> m6_229  [key=0, style=solid];
m6_225 -> m6_227  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_225 -> m6_228  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_225 -> m6_226  [key=0, style=solid];
m6_225 -> m6_217  [key=2, style=dotted];
m6_225 -> m6_229  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_226 -> m6_227  [key=0, style=solid];
m6_229 -> m6_236  [key=0, style=solid];
m6_229 -> m6_218  [key=2, style=dotted];
m6_232 -> m6_236  [key=0, style=solid];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_221  [key=2, style=dotted];
m6_235 -> m6_222  [key=2, style=dotted];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_233  [key=0, style=solid];
m6_234 -> m6_235  [key=0, style=solid];
m6_234 -> m6_220  [key=2, style=dotted];
m6_230 -> m6_231  [key=0, style=solid];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_219  [key=2, style=dotted];
m6_236 -> m6_223  [color=blue, key=0, style=bold];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_40  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_29  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_0  [color=blue, key=0, style=bold];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_9  [color=blue, key=0, style=bold];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_14  [key=2, style=dotted];
m6_11 -> d444  [key=2, style=dotted];
m6_11 -> m6_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_13 -> m6_11  [color=blue, key=0, style=bold];
m6_46 -> m6_47  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_85 -> m6_86  [color=green, key=0, style=solid];
m6_86 -> m6_87  [color=green, key=0, style=solid];
m6_86 -> m6_80  [color=green, key=2, style=dotted];
m6_87 -> m6_85  [color=blue, key=0, style=bold];
m6_48 -> m6_46  [color=blue, key=0, style=bold];
m6_47 -> m6_48  [key=0, style=solid];
m6_51 -> m6_49  [color=blue, key=0, style=bold];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_52  [key=2, style=dotted];
m6_50 -> m6_53  [key=2, style=dotted];
m6_50 -> m6_38  [key=2, style=dotted];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_26  [key=0, style=solid];
m6_17 -> m6_28  [key=2, style=dotted];
m6_17 -> m6_19  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_17 -> m6_20  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_17 -> m6_22  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_18 -> m6_16  [color=blue, key=0, style=bold];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_21  [color=darkseagreen4, key=1, label=currentSymbol, style=dashed];
m6_260 -> m6_335  [key=0, style=solid];
m6_260 -> m6_336  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_260 -> m6_345  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_335 -> m6_336  [key=0, style=solid];
m6_336 -> m6_337  [key=0, style=solid];
m6_336 -> m6_339  [key=0, style=solid];
m6_336 -> m6_341  [key=0, style=solid];
m6_336 -> m6_343  [key=0, style=solid];
m6_336 -> m6_345  [key=0, style=solid];
m6_345 -> m6_347  [key=0, style=solid];
m6_345 -> m6_348  [key=2, style=dotted];
m6_346 -> m6_347  [key=0, style=solid];
m6_337 -> m6_338  [key=0, style=solid];
m6_339 -> m6_340  [key=0, style=solid];
m6_341 -> m6_342  [key=0, style=solid];
m6_343 -> m6_344  [key=0, style=solid];
m6_338 -> m6_346  [key=0, style=solid];
m6_340 -> m6_346  [key=0, style=solid];
m6_342 -> m6_346  [key=0, style=solid];
m6_344 -> m6_346  [key=0, style=solid];
m6_347 -> m6_260  [color=blue, key=0, style=bold];
m6_40 -> m6_41  [key=0, style=solid];
m6_146 -> m6_147  [key=0, style=solid];
m6_151 -> m6_152  [key=0, style=solid];
m6_152 -> m6_160  [key=0, style=solid];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_163  [key=2, style=dotted];
m6_155 -> m6_157  [color=darkseagreen4, key=1, label=order, style=dashed];
m6_155 -> m6_159  [color=darkseagreen4, key=1, label=order, style=dashed];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_82  [key=2, style=dotted];
m6_159 -> m6_83  [key=2, style=dotted];
m6_159 -> m6_84  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_164  [key=2, style=dotted];
m6_159 -> m6_165  [key=2, style=dotted];
m6_150 -> m6_151  [key=0, style=solid];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_159  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m6_154 -> m6_162  [key=2, style=dotted];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_160  [key=0, style=solid];
m6_158 -> m6_159  [key=0, style=solid];
m6_147 -> m6_25  [key=2, style=dotted];
m6_147 -> m6_154  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_147 -> m6_148  [key=0, style=solid];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_153  [key=0, style=solid];
m6_153 -> m6_154  [key=0, style=solid];
m6_148 -> m6_161  [key=2, style=dotted];
m6_148 -> m6_149  [key=0, style=solid];
m6_160 -> m6_146  [color=blue, key=0, style=bold];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_19  [color=darkorchid, key=3, label="Property variable decimal EstimatedValue", style=bold];
m6_19 -> m6_30  [key=2, style=dotted];
m6_22 -> m6_23  [color=green, key=0, style=solid];
m6_22 -> m6_14  [color=green, key=2, style=dotted];
m6_22 -> d444  [color=green, key=2, style=dotted];
m6_22 -> m6_32  [key=2, style=dotted];
m6_21 -> m6_22  [color=green, key=0, style=solid];
m6_21 -> m6_25  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_24  [key=2, style=dotted];
m6_20 -> m6_31  [key=2, style=dotted];
m6_20 -> m6_22  [color=darkseagreen4, key=1, label=source, style=dashed];
m6_20 -> m6_23  [color=darkseagreen4, key=1, label=source, style=dashed];
m6_23 -> m6_19  [color=blue, key=0, style=bold];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_33  [key=2, style=dotted];
m6_41 -> m6_42  [color=green, key=0, style=solid];
m6_41 -> m6_44  [key=2, style=dotted];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m6_10 -> m6_8  [color=blue, key=0, style=bold];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_13  [key=2, style=dotted];
m6_54 -> m6_73  [color=green, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_54 -> m6_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_54 -> m6_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_54 -> m6_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_54 -> m6_72  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_73 -> m6_74  [color=green, key=0, style=solid];
m6_73 -> m6_83  [color=green, key=2, style=dotted];
m6_73 -> m6_84  [color=green, key=2, style=dotted];
m6_72 -> m6_73  [color=green, key=0, style=solid];
m6_72 -> m6_74  [key=0, style=solid];
m6_59 -> m6_73  [color=green, key=1, label=marketOrderFillPrice, style=dashed];
m6_59 -> m6_60  [key=0, style=solid];
m6_62 -> m6_73  [color=green, key=1, label=marketOrderFillPrice, style=dashed];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_79  [key=2, style=dotted];
m6_64 -> m6_73  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m6_64 -> m6_68  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_80  [key=2, style=dotted];
m6_66 -> m6_73  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m6_66 -> m6_67  [color=green, key=0, style=solid];
m6_66 -> m6_68  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m6_66 -> m6_80  [key=2, style=dotted];
m6_68 -> m6_73  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m6_68 -> m6_68  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m6_68 -> m6_69  [color=green, key=0, style=solid];
m6_68 -> m6_81  [color=green, key=2, style=dotted];
m6_68 -> m6_85  [color=green, key=1, label="lambda expression", style=dashed];
m6_60 -> m6_73  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m6_60 -> m6_68  [color=green, key=1, label=marketOrderFillQuantity, style=dashed];
m6_60 -> m6_61  [key=0, style=solid];
m6_69 -> m6_73  [color=green, key=1, label=orderFee, style=dashed];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_71  [color=darkseagreen4, key=1, label=orderFee, style=dashed];
m6_74 -> m6_75  [key=0, style=solid];
m6_67 -> m6_68  [color=green, key=0, style=solid];
m6_67 -> m6_69  [color=green, key=0, style=solid];
m6_58 -> m6_67  [color=green, key=1, label=fill, style=dashed];
m6_58 -> m6_68  [color=green, key=1, label=fill, style=dashed];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_62  [color=darkseagreen4, key=1, label=fill, style=dashed];
m6_58 -> m6_64  [color=darkseagreen4, key=1, label=fill, style=dashed];
m6_58 -> m6_66  [color=darkseagreen4, key=1, label=fill, style=dashed];
m6_58 -> m6_63  [color=darkseagreen4, key=1, label=fill, style=dashed];
m6_58 -> m6_65  [color=darkseagreen4, key=1, label=fill, style=dashed];
m6_65 -> m6_67  [color=green, key=0, style=solid];
m6_65 -> m6_66  [key=0, style=solid];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_76  [key=2, style=dotted];
m6_56 -> m6_58  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_77  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_82  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_83  [key=2, style=dotted];
m6_71 -> m6_84  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_78  [key=2, style=dotted];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_69  [key=0, style=solid];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_65  [key=0, style=solid];
m6_75 -> m6_54  [color=blue, key=0, style=bold];
m6_42 -> m6_43  [color=green, key=0, style=solid];
m6_42 -> m6_45  [color=green, key=2, style=dotted];
m6_42 -> m6_46  [color=green, key=1, label="lambda expression", style=dashed];
m6_42 -> m6_49  [color=green, key=1, label="lambda expression", style=dashed];
m6_42 -> m6_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", style=dashed];
m6_42 -> m6_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", style=dashed];
m6_42 -> m6_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", style=dashed];
m6_42 -> m6_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", style=dashed];
m6_42 -> m6_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", style=dashed];
m6_42 -> m6_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", style=dashed];
m6_42 -> m6_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", style=dashed];
m6_42 -> m6_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", style=dashed];
m6_42 -> m6_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.BaseDataSubscriptionEnumeratorFactory", style=dashed];
m6_43 -> m6_40  [color=blue, key=0, style=bold];
m6_219 -> m6_237  [key=0, style=solid];
m6_219 -> m6_238  [color=darkseagreen4, key=1, label="System.Net.WebResponse", style=dashed];
m6_237 -> m6_238  [key=0, style=solid];
m6_237 -> m6_243  [key=2, style=dotted];
m6_237 -> m6_239  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_237 -> m6_240  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_237 -> m6_241  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_238 -> m6_239  [key=0, style=solid];
m6_238 -> m6_241  [key=0, style=solid];
m6_241 -> m6_242  [key=0, style=solid];
m6_239 -> m6_241  [key=0, style=solid];
m6_239 -> m6_240  [key=0, style=solid];
m6_240 -> m6_241  [key=0, style=solid];
m6_240 -> m6_240  [color=darkseagreen4, key=1, label=stream, style=dashed];
m6_240 -> m6_244  [key=2, style=dotted];
m6_242 -> m6_219  [color=blue, key=0, style=bold];
m6_37 -> m6_39  [key=0, style=solid];
m6_37 -> m6_41  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_128  [key=0, style=solid];
m6_126 -> m6_127  [key=0, style=solid];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_129  [key=2, style=dotted];
m6_128 -> m6_124  [color=blue, key=0, style=bold];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_25  [color=crimson, key=0, style=bold];
m6_14 -> m6_16  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IDataProvider", style=dashed];
m6_14 -> m6_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m6_14 -> m6_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m6_14 -> m6_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m6_14 -> m6_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m6_14 -> m6_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m6_14 -> m6_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_27  [key=2, style=dotted];
m6_15 -> m6_28  [key=2, style=dotted];
m6_15 -> m6_20  [color=darkseagreen4, key=1, label=sourceFactory, style=dashed];
m6_25 -> m6_24  [key=0, style=solid];
m6_26 -> m6_14  [color=blue, key=0, style=bold];
m6_26 -> m6_27  [key=0, style=solid];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Auxiliary.MapFileResolver", style=dashed];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IFactorFileProvider", style=dashed];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_8  [key=2, style=dotted];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_1 -> m6_3  [color=darkseagreen4, key=1, label=basePathRest, style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SubscriptionRequest", style=dashed];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [color=darkseagreen4, key=1, label=basePathStreaming, style=dashed];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_38  [key=0, style=solid];
m6_38 -> m6_39  [key=0, style=solid];
m6_264 -> m6_265  [key=0, style=solid];
m6_264 -> m6_268  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_264 -> m6_272  [color=crimson, key=0, style=bold];
m6_264 -> m6_266  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_264 -> m6_267  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_264 -> m6_271  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_265 -> m6_266  [key=0, style=solid];
m6_265 -> m6_256  [key=2, style=dotted];
m6_265 -> m6_268  [color=darkseagreen4, key=1, label=oandaSymbol, style=dashed];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_260  [key=2, style=dotted];
m6_268 -> m6_261  [key=2, style=dotted];
m6_268 -> m6_262  [key=2, style=dotted];
m6_266 -> m6_268  [color=darkseagreen4, key=1, label=startUtc, style=dashed];
m6_266 -> m6_267  [key=0, style=solid];
m6_266 -> m6_257  [key=2, style=dotted];
m6_267 -> m6_268  [key=0, style=solid];
m6_267 -> m6_258  [key=2, style=dotted];
m6_267 -> m6_259  [key=2, style=dotted];
m6_267 -> m6_272  [color=darkseagreen4, key=1, label=period, style=dashed];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_273  [key=0, style=solid];
m6_269 -> m6_272  [color=darkseagreen4, key=1, label=candle, style=dashed];
m6_272 -> m6_38  [key=2, style=dotted];
m6_272 -> m6_269  [key=0, style=solid];
m6_272 -> m6_274  [key=2, style=dotted];
m6_272 -> m6_196  [key=2, style=dotted];
m6_272 -> m6_275  [key=2, style=dotted];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_273  [key=0, style=solid];
m6_270 -> m6_272  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_141  [key=2, style=dotted];
m6_273 -> m6_264  [color=blue, key=0, style=bold];
m6_245 -> m6_246  [key=0, style=solid];
m6_245 -> m6_250  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_245 -> m6_254  [color=crimson, key=0, style=bold];
m6_245 -> m6_247  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_245 -> m6_248  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_245 -> m6_249  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m6_245 -> m6_253  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_246 -> m6_247  [key=0, style=solid];
m6_246 -> m6_256  [key=2, style=dotted];
m6_246 -> m6_250  [color=darkseagreen4, key=1, label=oandaSymbol, style=dashed];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_260  [key=2, style=dotted];
m6_250 -> m6_261  [key=2, style=dotted];
m6_250 -> m6_262  [key=2, style=dotted];
m6_247 -> m6_250  [color=darkseagreen4, key=1, label=startUtc, style=dashed];
m6_247 -> m6_248  [key=0, style=solid];
m6_247 -> m6_257  [key=2, style=dotted];
m6_248 -> m6_250  [color=darkseagreen4, key=1, label=endUtc, style=dashed];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_257  [key=2, style=dotted];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_258  [key=2, style=dotted];
m6_249 -> m6_259  [key=2, style=dotted];
m6_249 -> m6_254  [color=darkseagreen4, key=1, label=period, style=dashed];
m6_251 -> m6_252  [key=0, style=solid];
m6_251 -> m6_255  [key=0, style=solid];
m6_251 -> m6_254  [color=darkseagreen4, key=1, label=candle, style=dashed];
m6_254 -> m6_38  [key=2, style=dotted];
m6_254 -> m6_251  [key=0, style=solid];
m6_254 -> m6_263  [key=2, style=dotted];
m6_254 -> m6_196  [key=2, style=dotted];
m6_253 -> m6_254  [key=0, style=solid];
m6_253 -> m6_255  [key=0, style=solid];
m6_252 -> m6_254  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_252 -> m6_253  [key=0, style=solid];
m6_252 -> m6_141  [key=2, style=dotted];
m6_255 -> m6_245  [color=blue, key=0, style=bold];
m6_76 -> m6_349  [key=0, style=solid];
m6_76 -> m6_351  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_76 -> m6_353  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_76 -> m6_356  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_76 -> m6_359  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_76 -> m6_362  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_76 -> m6_364  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_349 -> m6_350  [key=0, style=solid];
m6_349 -> m6_256  [key=2, style=dotted];
m6_349 -> m6_353  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m6_349 -> m6_356  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m6_349 -> m6_359  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m6_349 -> m6_362  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m6_350 -> m6_351  [key=0, style=solid];
m6_353 -> m6_354  [key=0, style=solid];
m6_353 -> m6_367  [key=2, style=dotted];
m6_353 -> m6_368  [key=2, style=dotted];
m6_356 -> m6_357  [key=0, style=solid];
m6_356 -> m6_370  [key=2, style=dotted];
m6_356 -> m6_368  [key=2, style=dotted];
m6_356 -> m6_371  [key=2, style=dotted];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_372  [key=2, style=dotted];
m6_359 -> m6_368  [key=2, style=dotted];
m6_359 -> m6_371  [key=2, style=dotted];
m6_362 -> m6_363  [key=0, style=solid];
m6_362 -> m6_373  [key=2, style=dotted];
m6_362 -> m6_368  [key=2, style=dotted];
m6_362 -> m6_371  [key=2, style=dotted];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_355  [key=0, style=solid];
m6_351 -> m6_358  [key=0, style=solid];
m6_351 -> m6_361  [key=0, style=solid];
m6_351 -> m6_364  [key=0, style=solid];
m6_364 -> m6_366  [key=0, style=solid];
m6_364 -> m6_374  [key=2, style=dotted];
m6_352 -> m6_353  [key=0, style=solid];
m6_354 -> m6_365  [key=0, style=solid];
m6_354 -> m6_369  [key=2, style=dotted];
m6_355 -> m6_356  [key=0, style=solid];
m6_357 -> m6_365  [key=0, style=solid];
m6_357 -> m6_369  [key=2, style=dotted];
m6_358 -> m6_359  [key=0, style=solid];
m6_360 -> m6_365  [key=0, style=solid];
m6_360 -> m6_369  [key=2, style=dotted];
m6_361 -> m6_362  [key=0, style=solid];
m6_363 -> m6_365  [key=0, style=solid];
m6_363 -> m6_369  [key=2, style=dotted];
m6_365 -> m6_366  [key=0, style=solid];
m6_366 -> m6_76  [color=blue, key=0, style=bold];
m6_29 -> m6_26  [color=blue, key=0, style=bold];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [key=2, style=dotted];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_319  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m6_317 -> m6_320  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m6_317 -> m6_321  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m6_317 -> m6_325  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m6_317 -> m6_328  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_332  [key=2, style=dotted];
m6_318 -> m6_330  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_333  [key=2, style=dotted];
m6_319 -> m6_330  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_320 -> m6_80  [key=2, style=dotted];
m6_320 -> m6_321  [key=0, style=solid];
m6_320 -> m6_324  [color=darkseagreen4, key=1, label=longUnits, style=dashed];
m6_320 -> m6_326  [color=darkseagreen4, key=1, label=longUnits, style=dashed];
m6_321 -> m6_80  [key=2, style=dotted];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_327  [color=darkseagreen4, key=1, label=shortUnits, style=dashed];
m6_321 -> m6_329  [color=darkseagreen4, key=1, label=shortUnits, style=dashed];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_334  [key=2, style=dotted];
m6_324 -> m6_325  [key=0, style=solid];
m6_324 -> m6_327  [key=0, style=solid];
m6_326 -> m6_330  [key=0, style=solid];
m6_322 -> m6_330  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m6_322 -> m6_323  [key=0, style=solid];
m6_327 -> m6_330  [key=0, style=solid];
m6_327 -> m6_328  [key=0, style=solid];
m6_329 -> m6_330  [key=0, style=solid];
m6_325 -> m6_38  [key=2, style=dotted];
m6_325 -> m6_330  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m6_325 -> m6_326  [key=0, style=solid];
m6_328 -> m6_38  [key=2, style=dotted];
m6_328 -> m6_330  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m6_328 -> m6_329  [key=0, style=solid];
m6_323 -> m6_330  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m6_323 -> m6_324  [key=0, style=solid];
m6_331 -> m6_317  [color=blue, key=0, style=bold];
m6_166 -> m6_167  [key=0, style=solid];
m6_171 -> m6_172  [key=0, style=solid];
m6_172 -> m6_188  [key=0, style=solid];
m6_175 -> m6_176  [key=0, style=solid];
m6_175 -> m6_189  [key=2, style=dotted];
m6_175 -> m6_180  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m6_176 -> m6_177  [key=0, style=solid];
m6_176 -> m6_190  [key=2, style=dotted];
m6_176 -> m6_179  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_176 -> m6_180  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_176 -> m6_181  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_176 -> m6_185  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_191  [key=2, style=dotted];
m6_177 -> m6_182  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_179 -> m6_180  [key=0, style=solid];
m6_179 -> m6_182  [key=0, style=solid];
m6_179 -> m6_192  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_181 -> m6_195  [key=2, style=dotted];
m6_186 -> m6_187  [key=0, style=solid];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_78  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_176  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_174 -> m6_177  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_174 -> m6_162  [key=2, style=dotted];
m6_174 -> m6_183  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_174 -> m6_184  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_193  [key=2, style=dotted];
m6_180 -> m6_194  [key=2, style=dotted];
m6_180 -> m6_182  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_187  [color=darkseagreen4, key=1, label=tick, style=dashed];
m6_185 -> m6_198  [key=2, style=dotted];
m6_178 -> m6_179  [key=0, style=solid];
m6_182 -> m6_185  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_182 -> m6_182  [color=darkseagreen4, key=1, label=time, style=dashed];
m6_182 -> m6_183  [key=0, style=solid];
m6_182 -> m6_196  [key=2, style=dotted];
m6_167 -> m6_25  [key=2, style=dotted];
m6_167 -> m6_174  [color=darkseagreen4, key=1, label=obj, style=dashed];
m6_167 -> m6_168  [key=0, style=solid];
m6_183 -> m6_164  [key=2, style=dotted];
m6_183 -> m6_185  [color=darkseagreen4, key=1, label=bidPrice, style=dashed];
m6_183 -> m6_184  [key=0, style=solid];
m6_183 -> m6_197  [key=2, style=dotted];
m6_184 -> m6_164  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_184 -> m6_197  [key=2, style=dotted];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_173  [key=0, style=solid];
m6_173 -> m6_174  [key=0, style=solid];
m6_168 -> m6_161  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_188 -> m6_166  [color=blue, key=0, style=bold];
m6_88 -> m6_93  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_88 -> m6_99  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_90  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_88 -> m6_94  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_88 -> m6_96  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_76  [key=2, style=dotted];
m6_93 -> m6_95  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_105  [key=2, style=dotted];
m6_95 -> m6_97  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_95 -> m6_99  [color=darkseagreen4, key=1, label=response, style=dashed];
m6_99 -> m6_83  [key=2, style=dotted];
m6_99 -> m6_84  [key=2, style=dotted];
m6_99 -> m6_80  [key=2, style=dotted];
m6_99 -> m6_99  [color=darkorchid, key=3, label="method methodReturn string ToString", style=bold];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_38  [key=2, style=dotted];
m6_90 -> m6_93  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_103  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_104  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_100  [key=0, style=solid];
m6_98 -> m6_99  [key=0, style=solid];
m6_100 -> m6_101  [key=0, style=solid];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_102  [key=2, style=dotted];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_102  [key=2, style=dotted];
m6_92 -> m6_101  [key=0, style=solid];
m6_101 -> m6_88  [color=blue, key=0, style=bold];
m6_276 -> m6_292  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m6_276 -> m6_295  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m6_276 -> m6_293  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m6_276 -> m6_305  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m6_276 -> m6_294  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_281  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m6_276 -> m6_284  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m6_276 -> m6_287  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m6_296 -> m6_297  [key=0, style=solid];
m6_296 -> m6_189  [key=2, style=dotted];
m6_297 -> m6_298  [key=0, style=solid];
m6_297 -> m6_190  [key=2, style=dotted];
m6_298 -> m6_299  [key=0, style=solid];
m6_298 -> m6_191  [key=2, style=dotted];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_163  [key=2, style=dotted];
m6_302 -> m6_304  [color=darkseagreen4, key=1, label=orderByBrokerageId, style=dashed];
m6_308 -> m6_309  [key=0, style=solid];
m6_308 -> m6_161  [key=2, style=dotted];
m6_308 -> m6_191  [key=2, style=dotted];
m6_292 -> m6_296  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m6_292 -> m6_297  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m6_292 -> m6_293  [key=0, style=solid];
m6_292 -> m6_161  [key=2, style=dotted];
m6_295 -> m6_296  [key=0, style=solid];
m6_295 -> m6_298  [color=darkseagreen4, key=1, label=createTime, style=dashed];
m6_295 -> m6_161  [key=2, style=dotted];
m6_290 -> m6_297  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m6_290 -> m6_298  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m6_290 -> m6_308  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m6_290 -> m6_292  [key=0, style=solid];
m6_290 -> m6_314  [key=2, style=dotted];
m6_290 -> m6_299  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m6_290 -> m6_300  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m6_290 -> m6_301  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m6_290 -> m6_304  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m6_290 -> m6_307  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m6_290 -> m6_309  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m6_299 -> m6_300  [key=0, style=solid];
m6_293 -> m6_302  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_293 -> m6_294  [key=0, style=solid];
m6_293 -> m6_161  [key=2, style=dotted];
m6_293 -> m6_301  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_301 -> m6_302  [key=0, style=solid];
m6_301 -> m6_316  [key=2, style=dotted];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_305  [key=0, style=solid];
m6_304 -> m6_305  [key=0, style=solid];
m6_305 -> m6_308  [color=darkseagreen4, key=1, label=gtdTime, style=dashed];
m6_305 -> m6_306  [key=0, style=solid];
m6_307 -> m6_308  [key=0, style=solid];
m6_309 -> m6_310  [key=0, style=solid];
m6_282 -> m6_164  [key=2, style=dotted];
m6_282 -> m6_292  [key=0, style=solid];
m6_282 -> m6_311  [key=2, style=dotted];
m6_285 -> m6_164  [key=2, style=dotted];
m6_285 -> m6_292  [key=0, style=solid];
m6_285 -> m6_312  [key=2, style=dotted];
m6_288 -> m6_164  [key=2, style=dotted];
m6_288 -> m6_292  [key=0, style=solid];
m6_288 -> m6_313  [key=2, style=dotted];
m6_294 -> m6_165  [key=2, style=dotted];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_299  [color=darkseagreen4, key=1, label=units, style=dashed];
m6_289 -> m6_290  [key=0, style=solid];
m6_300 -> m6_301  [key=0, style=solid];
m6_306 -> m6_307  [key=0, style=solid];
m6_306 -> m6_309  [key=0, style=solid];
m6_277 -> m6_161  [key=2, style=dotted];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_279  [color=darkseagreen4, key=1, label=type, style=dashed];
m6_277 -> m6_291  [color=darkseagreen4, key=1, label=type, style=dashed];
m6_281 -> m6_162  [key=2, style=dotted];
m6_281 -> m6_282  [key=0, style=solid];
m6_284 -> m6_162  [key=2, style=dotted];
m6_284 -> m6_285  [key=0, style=solid];
m6_287 -> m6_162  [key=2, style=dotted];
m6_287 -> m6_288  [key=0, style=solid];
m6_279 -> m6_289  [key=0, style=solid];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_283  [key=0, style=solid];
m6_279 -> m6_286  [key=0, style=solid];
m6_279 -> m6_291  [key=0, style=solid];
m6_291 -> m6_310  [key=0, style=solid];
m6_291 -> m6_315  [key=2, style=dotted];
m6_278 -> m6_279  [key=0, style=solid];
m6_280 -> m6_281  [key=0, style=solid];
m6_283 -> m6_284  [key=0, style=solid];
m6_286 -> m6_287  [key=0, style=solid];
m6_310 -> m6_276  [color=blue, key=0, style=bold];
m6_117 -> m6_118  [key=0, style=solid];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_122  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_123  [key=2, style=dotted];
m6_121 -> m6_117  [color=blue, key=0, style=bold];
m6_199 -> m6_200  [key=0, style=solid];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_215  [key=2, style=dotted];
m6_201 -> m6_216  [key=2, style=dotted];
m6_204 -> m6_205  [key=0, style=solid];
m6_205 -> m6_206  [key=0, style=solid];
m6_200 -> m6_201  [key=0, style=solid];
m6_200 -> m6_214  [key=2, style=dotted];
m6_202 -> m6_204  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_202 -> m6_205  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_202 -> m6_203  [key=0, style=solid];
m6_202 -> m6_217  [key=2, style=dotted];
m6_202 -> m6_206  [color=darkseagreen4, key=1, label=request, style=dashed];
m6_203 -> m6_204  [key=0, style=solid];
m6_206 -> m6_213  [key=0, style=solid];
m6_206 -> m6_218  [key=2, style=dotted];
m6_209 -> m6_213  [key=0, style=solid];
m6_212 -> m6_213  [key=0, style=solid];
m6_212 -> m6_221  [key=2, style=dotted];
m6_212 -> m6_222  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_208 -> m6_210  [key=0, style=solid];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_220  [key=2, style=dotted];
m6_207 -> m6_208  [key=0, style=solid];
m6_210 -> m6_211  [key=0, style=solid];
m6_210 -> m6_219  [key=2, style=dotted];
m6_213 -> m6_199  [color=blue, key=0, style=bold];
m6_130 -> m6_131  [key=0, style=solid];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_135  [key=2, style=dotted];
m6_132 -> m6_133  [key=0, style=solid];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_123  [key=2, style=dotted];
m6_134 -> m6_130  [color=blue, key=0, style=bold];
m6_375 -> m6_22  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_73  [color=green, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_20  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_41  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_56  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_71  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_93  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_95  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_99  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_112  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_113  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_118  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_119  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_120  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_125  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_126  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_127  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_131  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_132  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_133  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_138  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_139  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_152  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_155  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_171  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_172  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_175  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_177  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_179  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_181  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_187  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_204  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_205  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_224  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_227  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_228  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_246  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_250  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_265  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_268  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_296  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_297  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_298  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_302  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_308  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_318  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_319  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m6_375 -> m6_349  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_16  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_17  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_18  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_19  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_20  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_21  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_22  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_23  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_24  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_25  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_26  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_27  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_28  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_14 -> m7_33  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_12  [key=2, style=dotted];
m7_9 -> m7_13  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_14  [key=2, style=dotted];
m7_12 -> m7_13  [color=green, key=0, style=solid];
m7_12 -> m7_31  [color=green, key=2, style=dotted];
m7_12 -> m7_15  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_16  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_17  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_18  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_19  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_20  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_21  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_22  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_23  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_24  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_25  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_26  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_27  [color=green, key=1, label=insight, style=dashed];
m7_12 -> m7_28  [color=green, key=1, label=insight, style=dashed];
m7_11 -> m7_12  [color=green, key=0, style=solid];
m7_11 -> m7_30  [key=2, style=dotted];
m7_11 -> m7_7  [color=blue, key=0, style=bold];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_32  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_9  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_9  [key=2, style=dotted];
m7_16 -> m7_12  [key=2, style=dotted];
m7_16 -> m7_13  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_9  [key=2, style=dotted];
m7_17 -> m7_15  [color=blue, key=0, style=bold];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_9  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_9  [key=2, style=dotted];
m7_19 -> m7_12  [key=2, style=dotted];
m7_19 -> m7_13  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_9  [key=2, style=dotted];
m7_20 -> m7_18  [color=blue, key=0, style=bold];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_9  [key=2, style=dotted];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_9  [key=2, style=dotted];
m7_22 -> m7_21  [color=blue, key=0, style=bold];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_9  [key=2, style=dotted];
m7_23 -> m7_3  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m7_23 -> m7_4  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m7_23 -> m7_5  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m7_23 -> m7_16  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m7_23 -> m7_19  [color=darkseagreen4, key=1, label="QuantConnect.Logging.ConsoleLogHandler", style=dashed];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_9  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_9  [key=2, style=dotted];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_9  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_9  [key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_9  [key=2, style=dotted];
m7_29 -> m7_10  [color=blue, key=0, style=bold];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_7  [color=green, key=2, style=dotted];
m7_1 -> m7_3  [color=green, key=1, label=one, style=dashed];
m7_1 -> m7_4  [color=green, key=1, label=one, style=dashed];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_7  [color=green, key=2, style=dotted];
m7_2 -> m7_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_8  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_9  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_9  [key=2, style=dotted];
m7_6 -> m7_0  [color=blue, key=0, style=bold];
m7_6 -> m7_2  [color=blue, key=0, style=bold];
m7_8 -> m7_9  [key=0, style=solid];
m8_136 -> m8_137  [key=0, style=solid];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_140  [key=0, style=solid];
m8_138 -> m8_139  [key=0, style=solid];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_129  [key=2, style=dotted];
m8_140 -> m8_136  [color=blue, key=0, style=bold];
m8_31 -> m8_32  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_35  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_36  [key=2, style=dotted];
m8_33 -> m8_37  [key=2, style=dotted];
m8_33 -> m8_38  [key=2, style=dotted];
m8_33 -> m8_39  [key=2, style=dotted];
m8_34 -> m8_31  [color=blue, key=0, style=bold];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_108  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_106 -> m8_111  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_106 -> m8_113  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_102  [key=2, style=dotted];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_111  [key=0, style=solid];
m8_108 -> m8_103  [key=2, style=dotted];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_114  [key=0, style=solid];
m8_113 -> m8_111  [key=0, style=solid];
m8_113 -> m8_83  [key=2, style=dotted];
m8_113 -> m8_84  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_102  [key=2, style=dotted];
m8_110 -> m8_115  [key=0, style=solid];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_116  [key=2, style=dotted];
m8_114 -> m8_115  [key=0, style=solid];
m8_115 -> m8_106  [color=blue, key=0, style=bold];
m8_141 -> m8_142  [key=0, style=solid];
m8_142 -> m8_143  [key=0, style=solid];
m8_142 -> m8_144  [key=2, style=dotted];
m8_142 -> m8_145  [key=2, style=dotted];
m8_143 -> m8_141  [color=blue, key=0, style=bold];
m8_223 -> m8_224  [key=0, style=solid];
m8_224 -> m8_225  [key=0, style=solid];
m8_224 -> m8_215  [key=2, style=dotted];
m8_225 -> m8_226  [key=0, style=solid];
m8_225 -> m8_217  [key=2, style=dotted];
m8_225 -> m8_227  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_225 -> m8_228  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_225 -> m8_229  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_226 -> m8_227  [key=0, style=solid];
m8_227 -> m8_228  [key=0, style=solid];
m8_228 -> m8_229  [key=0, style=solid];
m8_229 -> m8_236  [key=0, style=solid];
m8_229 -> m8_218  [key=2, style=dotted];
m8_230 -> m8_231  [key=0, style=solid];
m8_231 -> m8_232  [key=0, style=solid];
m8_231 -> m8_233  [key=0, style=solid];
m8_232 -> m8_236  [key=0, style=solid];
m8_233 -> m8_234  [key=0, style=solid];
m8_233 -> m8_219  [key=2, style=dotted];
m8_234 -> m8_235  [key=0, style=solid];
m8_234 -> m8_220  [key=2, style=dotted];
m8_235 -> m8_236  [key=0, style=solid];
m8_235 -> m8_221  [key=2, style=dotted];
m8_235 -> m8_222  [key=2, style=dotted];
m8_236 -> m8_223  [color=blue, key=0, style=bold];
m8_85 -> m8_86  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_16  [color=blue, key=0, style=bold];
m8_46 -> m8_47  [key=0, style=solid];
m8_49 -> m8_50  [key=0, style=solid];
m8_47 -> m8_48  [key=0, style=solid];
m8_48 -> m8_46  [color=blue, key=0, style=bold];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_52  [key=2, style=dotted];
m8_50 -> m8_53  [key=2, style=dotted];
m8_50 -> m8_38  [key=2, style=dotted];
m8_51 -> m8_49  [color=blue, key=0, style=bold];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_80  [key=2, style=dotted];
m8_87 -> m8_85  [color=blue, key=0, style=bold];
m8_260 -> m8_335  [key=0, style=solid];
m8_260 -> m8_336  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m8_260 -> m8_345  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m8_335 -> m8_336  [key=0, style=solid];
m8_336 -> m8_337  [key=0, style=solid];
m8_336 -> m8_339  [key=0, style=solid];
m8_336 -> m8_341  [key=0, style=solid];
m8_336 -> m8_343  [key=0, style=solid];
m8_336 -> m8_345  [key=0, style=solid];
m8_345 -> m8_347  [key=0, style=solid];
m8_345 -> m8_348  [key=2, style=dotted];
m8_337 -> m8_338  [key=0, style=solid];
m8_339 -> m8_340  [key=0, style=solid];
m8_341 -> m8_342  [key=0, style=solid];
m8_343 -> m8_344  [key=0, style=solid];
m8_338 -> m8_346  [key=0, style=solid];
m8_340 -> m8_346  [key=0, style=solid];
m8_342 -> m8_346  [key=0, style=solid];
m8_344 -> m8_346  [key=0, style=solid];
m8_346 -> m8_347  [key=0, style=solid];
m8_347 -> m8_260  [color=blue, key=0, style=bold];
m8_146 -> m8_147  [key=0, style=solid];
m8_147 -> m8_148  [key=0, style=solid];
m8_147 -> m8_25  [key=2, style=dotted];
m8_147 -> m8_154  [color=darkseagreen4, key=1, label=obj, style=dashed];
m8_148 -> m8_149  [key=0, style=solid];
m8_148 -> m8_161  [key=2, style=dotted];
m8_154 -> m8_155  [key=0, style=solid];
m8_154 -> m8_162  [key=2, style=dotted];
m8_154 -> m8_159  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m8_149 -> m8_150  [key=0, style=solid];
m8_149 -> m8_153  [key=0, style=solid];
m8_150 -> m8_151  [key=0, style=solid];
m8_153 -> m8_154  [key=0, style=solid];
m8_151 -> m8_152  [key=0, style=solid];
m8_152 -> m8_160  [key=0, style=solid];
m8_155 -> m8_156  [key=0, style=solid];
m8_155 -> m8_163  [key=2, style=dotted];
m8_155 -> m8_157  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_155 -> m8_159  [color=darkseagreen4, key=1, label=order, style=dashed];
m8_159 -> m8_160  [key=0, style=solid];
m8_159 -> m8_83  [key=2, style=dotted];
m8_159 -> m8_164  [key=2, style=dotted];
m8_159 -> m8_165  [key=2, style=dotted];
m8_159 -> m8_84  [key=2, style=dotted];
m8_156 -> m8_157  [key=0, style=solid];
m8_156 -> m8_160  [key=0, style=solid];
m8_157 -> m8_158  [key=0, style=solid];
m8_157 -> m8_82  [key=2, style=dotted];
m8_158 -> m8_159  [key=0, style=solid];
m8_160 -> m8_146  [color=blue, key=0, style=bold];
m8_19 -> m8_20  [color=red, key=0, style=solid];
m8_20 -> m8_21  [color=red, key=0, style=solid];
m8_20 -> m8_24  [color=red, key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_25  [key=2, style=dotted];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_14  [key=2, style=dotted];
m8_22 -> d444  [key=2, style=dotted];
m8_23 -> m8_19  [color=blue, key=0, style=bold];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_57  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_54 -> m8_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_54 -> m8_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_54 -> m8_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_54 -> m8_72  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_54 -> m8_73  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_76  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_78  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_69  [key=0, style=solid];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_82  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_83  [key=2, style=dotted];
m8_71 -> m8_84  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_74  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_83  [key=2, style=dotted];
m8_73 -> m8_84  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_77  [key=2, style=dotted];
m8_56 -> m8_58  [color=darkseagreen4, key=1, label=response, style=dashed];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_62  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_58 -> m8_63  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_58 -> m8_64  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_58 -> m8_65  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_58 -> m8_66  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_58 -> m8_67  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_58 -> m8_68  [color=darkseagreen4, key=1, label=fill, style=dashed];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_73  [color=darkseagreen4, key=1, label=marketOrderFillPrice, style=dashed];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_79  [key=2, style=dotted];
m8_62 -> m8_73  [color=darkseagreen4, key=1, label=marketOrderFillPrice, style=dashed];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_65  [key=0, style=solid];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_80  [key=2, style=dotted];
m8_64 -> m8_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m8_64 -> m8_73  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_67  [key=0, style=solid];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_80  [key=2, style=dotted];
m8_66 -> m8_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m8_66 -> m8_73  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_69  [key=0, style=solid];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_81  [key=2, style=dotted];
m8_68 -> m8_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m8_68 -> m8_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_68 -> m8_73  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_68  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m8_60 -> m8_73  [color=darkseagreen4, key=1, label=marketOrderFillQuantity, style=dashed];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_71  [color=darkseagreen4, key=1, label=orderFee, style=dashed];
m8_69 -> m8_73  [color=darkseagreen4, key=1, label=orderFee, style=dashed];
m8_74 -> m8_75  [key=0, style=solid];
m8_75 -> m8_54  [color=blue, key=0, style=bold];
m8_40 -> m8_41  [key=0, style=solid];
m8_41 -> m8_42  [key=0, style=solid];
m8_41 -> m8_44  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_45  [key=2, style=dotted];
m8_42 -> m8_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_42 -> m8_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_43 -> m8_40  [color=blue, key=0, style=bold];
m8_219 -> m8_237  [key=0, style=solid];
m8_219 -> m8_238  [color=darkseagreen4, key=1, label="System.Net.WebResponse", style=dashed];
m8_237 -> m8_238  [key=0, style=solid];
m8_237 -> m8_243  [key=2, style=dotted];
m8_237 -> m8_239  [color=darkseagreen4, key=1, label=stream, style=dashed];
m8_237 -> m8_240  [color=darkseagreen4, key=1, label=stream, style=dashed];
m8_237 -> m8_241  [color=darkseagreen4, key=1, label=stream, style=dashed];
m8_238 -> m8_239  [key=0, style=solid];
m8_238 -> m8_241  [key=0, style=solid];
m8_239 -> m8_240  [key=0, style=solid];
m8_239 -> m8_241  [key=0, style=solid];
m8_240 -> m8_241  [key=0, style=solid];
m8_240 -> m8_244  [key=2, style=dotted];
m8_240 -> m8_240  [color=darkseagreen4, key=1, label=stream, style=dashed];
m8_241 -> m8_242  [key=0, style=solid];
m8_242 -> m8_219  [color=blue, key=0, style=bold];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_14  [key=2, style=dotted];
m8_11 -> d444  [key=2, style=dotted];
m8_11 -> m8_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_12 -> m8_9  [color=blue, key=0, style=bold];
m8_124 -> m8_125  [key=0, style=solid];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_128  [key=0, style=solid];
m8_126 -> m8_127  [key=0, style=solid];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_129  [key=2, style=dotted];
m8_128 -> m8_124  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.Environment", style=dashed];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [color=darkseagreen4, key=1, label=basePathRest, style=dashed];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_5  [color=darkseagreen4, key=1, label=basePathStreaming, style=dashed];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_7  [key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_8  [key=2, style=dotted];
m8_6 -> m8_0  [color=blue, key=0, style=bold];
m8_264 -> m8_265  [key=0, style=solid];
m8_264 -> m8_272  [color=crimson, key=0, style=bold];
m8_264 -> m8_266  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m8_264 -> m8_267  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m8_264 -> m8_268  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m8_264 -> m8_271  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m8_265 -> m8_266  [key=0, style=solid];
m8_265 -> m8_256  [key=2, style=dotted];
m8_265 -> m8_268  [color=darkseagreen4, key=1, label=oandaSymbol, style=dashed];
m8_272 -> m8_269  [key=0, style=solid];
m8_272 -> m8_274  [key=2, style=dotted];
m8_272 -> m8_196  [key=2, style=dotted];
m8_272 -> m8_275  [key=2, style=dotted];
m8_272 -> m8_38  [key=2, style=dotted];
m8_266 -> m8_267  [key=0, style=solid];
m8_266 -> m8_257  [key=2, style=dotted];
m8_266 -> m8_268  [color=darkseagreen4, key=1, label=startUtc, style=dashed];
m8_267 -> m8_268  [key=0, style=solid];
m8_267 -> m8_258  [key=2, style=dotted];
m8_267 -> m8_259  [key=2, style=dotted];
m8_267 -> m8_272  [color=darkseagreen4, key=1, label=period, style=dashed];
m8_268 -> m8_269  [key=0, style=solid];
m8_268 -> m8_260  [key=2, style=dotted];
m8_268 -> m8_261  [key=2, style=dotted];
m8_268 -> m8_262  [key=2, style=dotted];
m8_271 -> m8_272  [key=0, style=solid];
m8_271 -> m8_273  [key=0, style=solid];
m8_269 -> m8_270  [key=0, style=solid];
m8_269 -> m8_273  [key=0, style=solid];
m8_269 -> m8_272  [color=darkseagreen4, key=1, label=candle, style=dashed];
m8_270 -> m8_271  [key=0, style=solid];
m8_270 -> m8_141  [key=2, style=dotted];
m8_270 -> m8_272  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_273 -> m8_264  [color=blue, key=0, style=bold];
m8_245 -> m8_246  [key=0, style=solid];
m8_245 -> m8_254  [color=crimson, key=0, style=bold];
m8_245 -> m8_247  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m8_245 -> m8_248  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m8_245 -> m8_249  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m8_245 -> m8_250  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m8_245 -> m8_253  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m8_246 -> m8_247  [key=0, style=solid];
m8_246 -> m8_256  [key=2, style=dotted];
m8_246 -> m8_250  [color=darkseagreen4, key=1, label=oandaSymbol, style=dashed];
m8_254 -> m8_251  [key=0, style=solid];
m8_254 -> m8_263  [key=2, style=dotted];
m8_254 -> m8_196  [key=2, style=dotted];
m8_254 -> m8_38  [key=2, style=dotted];
m8_247 -> m8_248  [key=0, style=solid];
m8_247 -> m8_257  [key=2, style=dotted];
m8_247 -> m8_250  [color=darkseagreen4, key=1, label=startUtc, style=dashed];
m8_248 -> m8_249  [key=0, style=solid];
m8_248 -> m8_257  [key=2, style=dotted];
m8_248 -> m8_250  [color=darkseagreen4, key=1, label=endUtc, style=dashed];
m8_249 -> m8_250  [key=0, style=solid];
m8_249 -> m8_258  [key=2, style=dotted];
m8_249 -> m8_259  [key=2, style=dotted];
m8_249 -> m8_254  [color=darkseagreen4, key=1, label=period, style=dashed];
m8_250 -> m8_251  [key=0, style=solid];
m8_250 -> m8_260  [key=2, style=dotted];
m8_250 -> m8_261  [key=2, style=dotted];
m8_250 -> m8_262  [key=2, style=dotted];
m8_253 -> m8_254  [key=0, style=solid];
m8_253 -> m8_255  [key=0, style=solid];
m8_251 -> m8_252  [key=0, style=solid];
m8_251 -> m8_255  [key=0, style=solid];
m8_251 -> m8_254  [color=darkseagreen4, key=1, label=candle, style=dashed];
m8_252 -> m8_253  [key=0, style=solid];
m8_252 -> m8_141  [key=2, style=dotted];
m8_252 -> m8_254  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_255 -> m8_245  [color=blue, key=0, style=bold];
m8_76 -> m8_349  [key=0, style=solid];
m8_76 -> m8_351  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_76 -> m8_353  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_76 -> m8_356  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_76 -> m8_359  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_76 -> m8_362  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_76 -> m8_364  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_349 -> m8_350  [key=0, style=solid];
m8_349 -> m8_256  [key=2, style=dotted];
m8_349 -> m8_353  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m8_349 -> m8_356  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m8_349 -> m8_359  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m8_349 -> m8_362  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m8_351 -> m8_352  [key=0, style=solid];
m8_351 -> m8_355  [key=0, style=solid];
m8_351 -> m8_358  [key=0, style=solid];
m8_351 -> m8_361  [key=0, style=solid];
m8_351 -> m8_364  [key=0, style=solid];
m8_353 -> m8_354  [key=0, style=solid];
m8_353 -> m8_367  [key=2, style=dotted];
m8_353 -> m8_368  [key=2, style=dotted];
m8_356 -> m8_357  [key=0, style=solid];
m8_356 -> m8_370  [key=2, style=dotted];
m8_356 -> m8_368  [key=2, style=dotted];
m8_356 -> m8_371  [key=2, style=dotted];
m8_359 -> m8_360  [key=0, style=solid];
m8_359 -> m8_372  [key=2, style=dotted];
m8_359 -> m8_368  [key=2, style=dotted];
m8_359 -> m8_371  [key=2, style=dotted];
m8_362 -> m8_363  [key=0, style=solid];
m8_362 -> m8_373  [key=2, style=dotted];
m8_362 -> m8_368  [key=2, style=dotted];
m8_362 -> m8_371  [key=2, style=dotted];
m8_364 -> m8_366  [key=0, style=solid];
m8_364 -> m8_374  [key=2, style=dotted];
m8_350 -> m8_351  [key=0, style=solid];
m8_352 -> m8_353  [key=0, style=solid];
m8_355 -> m8_356  [key=0, style=solid];
m8_358 -> m8_359  [key=0, style=solid];
m8_361 -> m8_362  [key=0, style=solid];
m8_354 -> m8_365  [key=0, style=solid];
m8_354 -> m8_369  [key=2, style=dotted];
m8_357 -> m8_365  [key=0, style=solid];
m8_357 -> m8_369  [key=2, style=dotted];
m8_360 -> m8_365  [key=0, style=solid];
m8_360 -> m8_369  [key=2, style=dotted];
m8_363 -> m8_365  [key=0, style=solid];
m8_363 -> m8_369  [key=2, style=dotted];
m8_365 -> m8_366  [key=0, style=solid];
m8_366 -> m8_76  [color=blue, key=0, style=bold];
m8_317 -> m8_318  [key=0, style=solid];
m8_317 -> m8_319  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m8_317 -> m8_320  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m8_317 -> m8_321  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m8_317 -> m8_325  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m8_317 -> m8_328  [color=darkseagreen4, key=1, label="Oanda.RestV20.Model.Position", style=dashed];
m8_318 -> m8_319  [key=0, style=solid];
m8_318 -> m8_332  [key=2, style=dotted];
m8_318 -> m8_330  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m8_319 -> m8_320  [key=0, style=solid];
m8_319 -> m8_333  [key=2, style=dotted];
m8_319 -> m8_330  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_320 -> m8_321  [key=0, style=solid];
m8_320 -> m8_80  [key=2, style=dotted];
m8_320 -> m8_324  [color=darkseagreen4, key=1, label=longUnits, style=dashed];
m8_320 -> m8_326  [color=darkseagreen4, key=1, label=longUnits, style=dashed];
m8_321 -> m8_322  [key=0, style=solid];
m8_321 -> m8_80  [key=2, style=dotted];
m8_321 -> m8_327  [color=darkseagreen4, key=1, label=shortUnits, style=dashed];
m8_321 -> m8_329  [color=darkseagreen4, key=1, label=shortUnits, style=dashed];
m8_325 -> m8_326  [key=0, style=solid];
m8_325 -> m8_38  [key=2, style=dotted];
m8_325 -> m8_330  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m8_328 -> m8_329  [key=0, style=solid];
m8_328 -> m8_38  [key=2, style=dotted];
m8_328 -> m8_330  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m8_330 -> m8_331  [key=0, style=solid];
m8_330 -> m8_334  [key=2, style=dotted];
m8_324 -> m8_325  [key=0, style=solid];
m8_324 -> m8_327  [key=0, style=solid];
m8_326 -> m8_330  [key=0, style=solid];
m8_322 -> m8_323  [key=0, style=solid];
m8_322 -> m8_330  [color=darkseagreen4, key=1, label=averagePrice, style=dashed];
m8_327 -> m8_328  [key=0, style=solid];
m8_327 -> m8_330  [key=0, style=solid];
m8_329 -> m8_330  [key=0, style=solid];
m8_323 -> m8_324  [key=0, style=solid];
m8_323 -> m8_330  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m8_331 -> m8_317  [color=blue, key=0, style=bold];
m8_166 -> m8_167  [key=0, style=solid];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_25  [key=2, style=dotted];
m8_167 -> m8_174  [color=darkseagreen4, key=1, label=obj, style=dashed];
m8_168 -> m8_169  [key=0, style=solid];
m8_168 -> m8_161  [key=2, style=dotted];
m8_174 -> m8_175  [key=0, style=solid];
m8_174 -> m8_162  [key=2, style=dotted];
m8_174 -> m8_176  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_174 -> m8_177  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_174 -> m8_183  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_174 -> m8_184  [color=darkseagreen4, key=1, label=data, style=dashed];
m8_169 -> m8_170  [key=0, style=solid];
m8_169 -> m8_173  [key=0, style=solid];
m8_170 -> m8_171  [key=0, style=solid];
m8_173 -> m8_174  [key=0, style=solid];
m8_171 -> m8_172  [key=0, style=solid];
m8_172 -> m8_188  [key=0, style=solid];
m8_175 -> m8_176  [key=0, style=solid];
m8_175 -> m8_189  [key=2, style=dotted];
m8_175 -> m8_180  [color=darkseagreen4, key=1, label=securityType, style=dashed];
m8_176 -> m8_177  [key=0, style=solid];
m8_176 -> m8_190  [key=2, style=dotted];
m8_176 -> m8_179  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_176 -> m8_180  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_176 -> m8_181  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_176 -> m8_185  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m8_177 -> m8_178  [key=0, style=solid];
m8_177 -> m8_191  [key=2, style=dotted];
m8_177 -> m8_182  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_197  [key=2, style=dotted];
m8_183 -> m8_164  [key=2, style=dotted];
m8_183 -> m8_185  [color=darkseagreen4, key=1, label=bidPrice, style=dashed];
m8_184 -> m8_185  [key=0, style=solid];
m8_184 -> m8_197  [key=2, style=dotted];
m8_184 -> m8_164  [key=2, style=dotted];
m8_180 -> m8_181  [key=0, style=solid];
m8_180 -> m8_193  [key=2, style=dotted];
m8_180 -> m8_194  [key=2, style=dotted];
m8_180 -> m8_182  [color=darkseagreen4, key=1, label=exchangeTimeZone, style=dashed];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_182  [key=0, style=solid];
m8_179 -> m8_192  [key=2, style=dotted];
m8_181 -> m8_182  [key=0, style=solid];
m8_181 -> m8_195  [key=2, style=dotted];
m8_185 -> m8_186  [key=0, style=solid];
m8_185 -> m8_198  [key=2, style=dotted];
m8_185 -> m8_187  [color=darkseagreen4, key=1, label=tick, style=dashed];
m8_178 -> m8_179  [key=0, style=solid];
m8_182 -> m8_183  [key=0, style=solid];
m8_182 -> m8_196  [key=2, style=dotted];
m8_182 -> m8_182  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_182 -> m8_185  [color=darkseagreen4, key=1, label=time, style=dashed];
m8_186 -> m8_187  [key=0, style=solid];
m8_187 -> m8_188  [key=0, style=solid];
m8_187 -> m8_78  [key=2, style=dotted];
m8_188 -> m8_166  [color=blue, key=0, style=bold];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_90  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_88 -> m8_93  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_88 -> m8_94  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_88 -> m8_96  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_88 -> m8_99  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m8_89 -> m8_90  [key=0, style=solid];
m8_89 -> m8_102  [key=2, style=dotted];
m8_90 -> m8_91  [key=0, style=solid];
m8_90 -> m8_93  [key=0, style=solid];
m8_90 -> m8_103  [key=2, style=dotted];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_76  [key=2, style=dotted];
m8_93 -> m8_95  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_104  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_83  [key=2, style=dotted];
m8_99 -> m8_38  [key=2, style=dotted];
m8_99 -> m8_80  [key=2, style=dotted];
m8_99 -> m8_84  [key=2, style=dotted];
m8_91 -> m8_92  [key=0, style=solid];
m8_91 -> m8_102  [key=2, style=dotted];
m8_92 -> m8_101  [key=0, style=solid];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_105  [key=2, style=dotted];
m8_95 -> m8_97  [color=darkseagreen4, key=1, label=response, style=dashed];
m8_95 -> m8_99  [color=darkseagreen4, key=1, label=response, style=dashed];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_100  [key=0, style=solid];
m8_98 -> m8_99  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_101 -> m8_88  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_30  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_14  [key=2, style=dotted];
m8_28 -> d444  [key=2, style=dotted];
m8_29 -> m8_26  [color=blue, key=0, style=bold];
m8_276 -> m8_277  [key=0, style=solid];
m8_276 -> m8_281  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m8_276 -> m8_284  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m8_276 -> m8_287  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m8_276 -> m8_292  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m8_276 -> m8_293  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m8_276 -> m8_294  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m8_276 -> m8_295  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m8_276 -> m8_305  [color=darkseagreen4, key=1, label=JToken, style=dashed];
m8_277 -> m8_278  [key=0, style=solid];
m8_277 -> m8_161  [key=2, style=dotted];
m8_277 -> m8_279  [color=darkseagreen4, key=1, label=type, style=dashed];
m8_277 -> m8_291  [color=darkseagreen4, key=1, label=type, style=dashed];
m8_281 -> m8_282  [key=0, style=solid];
m8_281 -> m8_162  [key=2, style=dotted];
m8_284 -> m8_285  [key=0, style=solid];
m8_284 -> m8_162  [key=2, style=dotted];
m8_287 -> m8_288  [key=0, style=solid];
m8_287 -> m8_162  [key=2, style=dotted];
m8_292 -> m8_293  [key=0, style=solid];
m8_292 -> m8_161  [key=2, style=dotted];
m8_292 -> m8_296  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m8_292 -> m8_297  [color=darkseagreen4, key=1, label=instrument, style=dashed];
m8_293 -> m8_294  [key=0, style=solid];
m8_293 -> m8_161  [key=2, style=dotted];
m8_293 -> m8_301  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_293 -> m8_302  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_294 -> m8_295  [key=0, style=solid];
m8_294 -> m8_165  [key=2, style=dotted];
m8_294 -> m8_299  [color=darkseagreen4, key=1, label=units, style=dashed];
m8_295 -> m8_296  [key=0, style=solid];
m8_295 -> m8_161  [key=2, style=dotted];
m8_295 -> m8_298  [color=darkseagreen4, key=1, label=createTime, style=dashed];
m8_305 -> m8_306  [key=0, style=solid];
m8_305 -> m8_308  [color=darkseagreen4, key=1, label=gtdTime, style=dashed];
m8_278 -> m8_279  [key=0, style=solid];
m8_279 -> m8_280  [key=0, style=solid];
m8_279 -> m8_283  [key=0, style=solid];
m8_279 -> m8_286  [key=0, style=solid];
m8_279 -> m8_289  [key=0, style=solid];
m8_279 -> m8_291  [key=0, style=solid];
m8_291 -> m8_310  [key=0, style=solid];
m8_291 -> m8_315  [key=2, style=dotted];
m8_280 -> m8_281  [key=0, style=solid];
m8_283 -> m8_284  [key=0, style=solid];
m8_286 -> m8_287  [key=0, style=solid];
m8_289 -> m8_290  [key=0, style=solid];
m8_282 -> m8_292  [key=0, style=solid];
m8_282 -> m8_311  [key=2, style=dotted];
m8_282 -> m8_164  [key=2, style=dotted];
m8_285 -> m8_292  [key=0, style=solid];
m8_285 -> m8_312  [key=2, style=dotted];
m8_285 -> m8_164  [key=2, style=dotted];
m8_288 -> m8_292  [key=0, style=solid];
m8_288 -> m8_313  [key=2, style=dotted];
m8_288 -> m8_164  [key=2, style=dotted];
m8_290 -> m8_292  [key=0, style=solid];
m8_290 -> m8_314  [key=2, style=dotted];
m8_290 -> m8_297  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m8_290 -> m8_298  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m8_290 -> m8_299  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m8_290 -> m8_300  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m8_290 -> m8_301  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m8_290 -> m8_304  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m8_290 -> m8_307  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m8_290 -> m8_308  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m8_290 -> m8_309  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m8_297 -> m8_298  [key=0, style=solid];
m8_297 -> m8_190  [key=2, style=dotted];
m8_298 -> m8_299  [key=0, style=solid];
m8_298 -> m8_191  [key=2, style=dotted];
m8_299 -> m8_300  [key=0, style=solid];
m8_300 -> m8_301  [key=0, style=solid];
m8_301 -> m8_302  [key=0, style=solid];
m8_301 -> m8_316  [key=2, style=dotted];
m8_304 -> m8_305  [key=0, style=solid];
m8_307 -> m8_308  [key=0, style=solid];
m8_308 -> m8_309  [key=0, style=solid];
m8_308 -> m8_161  [key=2, style=dotted];
m8_308 -> m8_191  [key=2, style=dotted];
m8_309 -> m8_310  [key=0, style=solid];
m8_296 -> m8_297  [key=0, style=solid];
m8_296 -> m8_189  [key=2, style=dotted];
m8_302 -> m8_303  [key=0, style=solid];
m8_302 -> m8_163  [key=2, style=dotted];
m8_302 -> m8_304  [color=darkseagreen4, key=1, label=orderByBrokerageId, style=dashed];
m8_303 -> m8_304  [key=0, style=solid];
m8_303 -> m8_305  [key=0, style=solid];
m8_306 -> m8_307  [key=0, style=solid];
m8_306 -> m8_309  [key=0, style=solid];
m8_310 -> m8_276  [color=blue, key=0, style=bold];
m8_117 -> m8_118  [key=0, style=solid];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_122  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_120 -> m8_121  [key=0, style=solid];
m8_120 -> m8_123  [key=2, style=dotted];
m8_121 -> m8_117  [color=blue, key=0, style=bold];
m8_199 -> m8_200  [key=0, style=solid];
m8_200 -> m8_201  [key=0, style=solid];
m8_200 -> m8_214  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_201 -> m8_215  [key=2, style=dotted];
m8_201 -> m8_216  [key=2, style=dotted];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_217  [key=2, style=dotted];
m8_202 -> m8_204  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_202 -> m8_205  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_202 -> m8_206  [color=darkseagreen4, key=1, label=request, style=dashed];
m8_203 -> m8_204  [key=0, style=solid];
m8_204 -> m8_205  [key=0, style=solid];
m8_205 -> m8_206  [key=0, style=solid];
m8_206 -> m8_213  [key=0, style=solid];
m8_206 -> m8_218  [key=2, style=dotted];
m8_207 -> m8_208  [key=0, style=solid];
m8_208 -> m8_209  [key=0, style=solid];
m8_208 -> m8_210  [key=0, style=solid];
m8_209 -> m8_213  [key=0, style=solid];
m8_210 -> m8_211  [key=0, style=solid];
m8_210 -> m8_219  [key=2, style=dotted];
m8_211 -> m8_212  [key=0, style=solid];
m8_211 -> m8_220  [key=2, style=dotted];
m8_212 -> m8_213  [key=0, style=solid];
m8_212 -> m8_221  [key=2, style=dotted];
m8_212 -> m8_222  [key=2, style=dotted];
m8_213 -> m8_199  [color=blue, key=0, style=bold];
m8_130 -> m8_131  [key=0, style=solid];
m8_131 -> m8_132  [key=0, style=solid];
m8_131 -> m8_135  [key=2, style=dotted];
m8_132 -> m8_133  [key=0, style=solid];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_123  [key=2, style=dotted];
m8_134 -> m8_130  [color=blue, key=0, style=bold];
m8_375 -> m8_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_20  [color=red, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_41  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_56  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_71  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_73  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_93  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_95  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_99  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_112  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_113  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_118  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_119  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_120  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_125  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_126  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_127  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_131  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_132  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_133  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_138  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_139  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_152  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_155  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_157  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_159  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_171  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_172  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_175  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_176  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_177  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_179  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_181  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_187  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_204  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_205  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_224  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_227  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_228  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_246  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_250  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_265  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_268  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_296  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_297  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_298  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_302  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_308  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_318  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_319  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m8_375 -> m8_349  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Oanda.OandaRestApiV20", style=dashed];
m10_19 -> m10_38  [color=green, key=0, style=solid];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_8  [key=2, style=dotted];
m10_38 -> m10_39  [color=green, key=0, style=solid];
m10_38 -> m10_40  [color=green, key=2, style=dotted];
m10_38 -> m10_140  [key=0, style=solid];
m10_38 -> m10_145  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m10_39 -> m10_19  [color=blue, key=0, style=bold];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m10_29 -> m10_30  [key=0, style=solid];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_32  [key=0, style=solid];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_33  [key=2, style=dotted];
m10_32 -> m10_29  [color=blue, key=0, style=bold];
m10_32 -> m10_33  [key=0, style=solid];
m10_24 -> m10_41  [color=green, key=0, style=solid];
m10_24 -> m10_42  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketError", style=dashed];
m10_140 -> m10_141  [key=0, style=solid];
m10_140 -> m10_147  [key=2, style=dotted];
m10_140 -> m10_143  [color=darkseagreen4, key=1, label=seriesDict, style=dashed];
m10_145 -> m10_146  [key=0, style=solid];
m10_145 -> m10_61  [key=2, style=dotted];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_8  [key=2, style=dotted];
m10_143 -> m10_144  [key=0, style=solid];
m10_143 -> m10_145  [key=0, style=solid];
m10_142 -> m10_143  [key=0, style=solid];
m10_142 -> m10_55  [key=2, style=dotted];
m10_142 -> m10_144  [color=darkseagreen4, key=1, label=pyDict, style=dashed];
m10_142 -> m10_145  [color=darkseagreen4, key=1, label=pyDict, style=dashed];
m10_144 -> m10_143  [key=0, style=solid];
m10_144 -> m10_59  [key=2, style=dotted];
m10_146 -> m10_38  [color=blue, key=0, style=bold];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Python.PandasData>", style=dashed];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_78  [key=0, style=solid];
m10_25 -> m10_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m10_25 -> m10_81  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m10_25 -> m10_83  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m10_25 -> m10_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m10_25 -> m10_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_28  [key=2, style=dotted];
m10_27 -> m10_25  [color=blue, key=0, style=bold];
m10_27 -> m10_100  [key=0, style=solid];
m10_27 -> m10_101  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m10_27 -> m10_132  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_28  [key=2, style=dotted];
m10_18 -> m10_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_18 -> m10_20  [color=darkseagreen4, key=1, label=maxLevels, style=dashed];
m10_18 -> m10_36  [color=darkseagreen4, key=1, label=maxLevels, style=dashed];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_29  [key=2, style=dotted];
m10_20 -> m10_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_38  [key=2, style=dotted];
m10_36 -> m10_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Python.PandasData>", style=dashed];
m10_36 -> m10_34  [color=blue, key=0, style=bold];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_37  [key=2, style=dotted];
m10_34 -> m10_32  [color=blue, key=0, style=bold];
m10_34 -> m10_35  [key=0, style=solid];
m10_37 -> m10_35  [color=blue, key=0, style=bold];
m10_62 -> m10_63  [key=0, style=solid];
m10_65 -> m10_66  [key=0, style=solid];
m10_68 -> m10_69  [key=0, style=solid];
m10_71 -> m10_72  [key=0, style=solid];
m10_63 -> m10_64  [key=0, style=solid];
m10_64 -> m10_62  [color=blue, key=0, style=bold];
m10_66 -> m10_67  [key=0, style=solid];
m10_67 -> m10_65  [color=blue, key=0, style=bold];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_57  [key=2, style=dotted];
m10_70 -> m10_68  [color=blue, key=0, style=bold];
m10_72 -> m10_73  [key=0, style=solid];
m10_73 -> m10_71  [color=blue, key=0, style=bold];
m10_94 -> m10_95  [key=0, style=solid];
m10_97 -> m10_98  [key=0, style=solid];
m10_95 -> m10_96  [key=0, style=solid];
m10_96 -> m10_94  [color=blue, key=0, style=bold];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_93  [key=2, style=dotted];
m10_99 -> m10_97  [color=blue, key=0, style=bold];
m10_179 -> m10_180  [key=0, style=solid];
m10_179 -> m10_174  [key=2, style=dotted];
m10_187 -> m10_188  [key=0, style=solid];
m10_187 -> m10_58  [key=2, style=dotted];
m10_187 -> m10_187  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.List<double>>", style=dashed];
m10_180 -> m10_181  [key=0, style=solid];
m10_180 -> m10_182  [key=2, style=dotted];
m10_178 -> m10_179  [key=0, style=solid];
m10_183 -> m10_184  [key=0, style=solid];
m10_186 -> m10_187  [key=0, style=solid];
m10_181 -> m10_178  [color=blue, key=0, style=bold];
m10_184 -> m10_185  [key=0, style=solid];
m10_184 -> m10_184  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.List<double>>", style=dashed];
m10_185 -> m10_183  [color=blue, key=0, style=bold];
m10_188 -> m10_186  [color=blue, key=0, style=bold];
m10_12 -> m10_14  [key=2, style=dotted];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_23  [key=2, style=dotted];
m10_12 -> m10_15  [color=darkseagreen4, key=1, label=sliceDataDict, style=dashed];
m10_12 -> m10_16  [color=darkseagreen4, key=1, label=sliceDataDict, style=dashed];
m10_12 -> m10_17  [color=darkseagreen4, key=1, label=sliceDataDict, style=dashed];
m10_12 -> m10_18  [color=darkseagreen4, key=1, label=sliceDataDict, style=dashed];
m10_12 -> m10_20  [color=darkseagreen4, key=1, label=sliceDataDict, style=dashed];
m10_16 -> m10_19  [key=2, style=dotted];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_18  [key=2, style=dotted];
m10_16 -> m10_25  [key=2, style=dotted];
m10_16 -> m10_26  [key=2, style=dotted];
m10_21 -> m10_24  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_23  [key=2, style=dotted];
m10_21 -> m10_30  [key=2, style=dotted];
m10_21 -> m10_31  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_13  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>", style=dashed];
m10_13 -> m10_11  [color=blue, key=0, style=bold];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_18  [key=0, style=solid];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [key=0, style=solid];
m10_15 -> m10_24  [key=2, style=dotted];
m10_17 -> m10_15  [color=blue, key=0, style=bold];
m10_17 -> m10_14  [key=0, style=solid];
m10_17 -> m10_27  [key=2, style=dotted];
m10_22 -> m10_20  [color=blue, key=0, style=bold];
m10_22 -> m10_11  [color=blue, key=0, style=bold];
m10_74 -> m10_75  [key=0, style=solid];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_77  [key=2, style=dotted];
m10_76 -> m10_74  [color=blue, key=0, style=bold];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_53  [key=0, style=solid];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_4  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_7  [key=0, style=solid];
m10_4 -> m10_10  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_8  [key=2, style=dotted];
m10_2 -> m10_9  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_9  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_10  [key=2, style=dotted];
m10_6 -> m10_16  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_7 -> m10_0  [color=blue, key=0, style=bold];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_21  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_80  [color=darkseagreen4, key=1, label=columns, style=dashed];
m10_78 -> m10_82  [color=darkseagreen4, key=1, label=columns, style=dashed];
m10_78 -> m10_85  [color=darkseagreen4, key=1, label=columns, style=dashed];
m10_79 -> m10_80  [key=0, style=solid];
m10_79 -> m10_81  [key=0, style=solid];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_83  [key=0, style=solid];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_85  [key=0, style=solid];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_89  [key=2, style=dotted];
m10_84 -> m10_90  [key=2, style=dotted];
m10_86 -> m10_87  [key=0, style=solid];
m10_80 -> m10_85  [key=0, style=solid];
m10_80 -> m10_80  [color=darkseagreen4, key=1, label=columns, style=dashed];
m10_82 -> m10_85  [key=0, style=solid];
m10_82 -> m10_82  [color=darkseagreen4, key=1, label=columns, style=dashed];
m10_85 -> m10_86  [key=0, style=solid];
m10_85 -> m10_91  [key=2, style=dotted];
m10_85 -> m10_92  [key=2, style=dotted];
m10_85 -> m10_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_85 -> m10_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_93  [key=2, style=dotted];
m10_88 -> m10_25  [color=blue, key=0, style=bold];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_138  [key=2, style=dotted];
m10_101 -> m10_102  [key=0, style=solid];
m10_101 -> m10_103  [color=darkseagreen4, key=1, label=bar, style=dashed];
m10_101 -> m10_104  [color=darkseagreen4, key=1, label=bar, style=dashed];
m10_101 -> m10_105  [color=darkseagreen4, key=1, label=bar, style=dashed];
m10_101 -> m10_106  [color=darkseagreen4, key=1, label=bar, style=dashed];
m10_101 -> m10_107  [color=darkseagreen4, key=1, label=bar, style=dashed];
m10_101 -> m10_110  [color=darkseagreen4, key=1, label=bar, style=dashed];
m10_132 -> m10_133  [key=0, style=solid];
m10_132 -> m10_134  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_132 -> m10_136  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_132  [key=0, style=solid];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_138  [key=2, style=dotted];
m10_104 -> m10_105  [key=0, style=solid];
m10_104 -> m10_138  [key=2, style=dotted];
m10_105 -> m10_106  [key=0, style=solid];
m10_105 -> m10_138  [key=2, style=dotted];
m10_106 -> m10_107  [key=0, style=solid];
m10_106 -> m10_138  [key=2, style=dotted];
m10_107 -> m10_108  [key=0, style=solid];
m10_107 -> m10_109  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m10_110 -> m10_111  [key=0, style=solid];
m10_110 -> m10_112  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_113  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_114  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_115  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_116  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_117  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_118  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_123  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_124  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_125  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_126  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_110 -> m10_127  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m10_108 -> m10_109  [key=0, style=solid];
m10_108 -> m10_110  [key=0, style=solid];
m10_109 -> m10_110  [key=0, style=solid];
m10_109 -> m10_138  [key=2, style=dotted];
m10_111 -> m10_112  [key=0, style=solid];
m10_111 -> m10_132  [key=0, style=solid];
m10_112 -> m10_113  [key=0, style=solid];
m10_112 -> m10_138  [key=2, style=dotted];
m10_113 -> m10_114  [key=0, style=solid];
m10_113 -> m10_138  [key=2, style=dotted];
m10_114 -> m10_115  [key=0, style=solid];
m10_114 -> m10_119  [key=0, style=solid];
m10_115 -> m10_116  [key=0, style=solid];
m10_115 -> m10_138  [key=2, style=dotted];
m10_116 -> m10_117  [key=0, style=solid];
m10_116 -> m10_138  [key=2, style=dotted];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_138  [key=2, style=dotted];
m10_118 -> m10_123  [key=0, style=solid];
m10_118 -> m10_138  [key=2, style=dotted];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_128  [key=0, style=solid];
m10_124 -> m10_125  [key=0, style=solid];
m10_124 -> m10_138  [key=2, style=dotted];
m10_125 -> m10_126  [key=0, style=solid];
m10_125 -> m10_138  [key=2, style=dotted];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_138  [key=2, style=dotted];
m10_127 -> m10_132  [key=0, style=solid];
m10_127 -> m10_138  [key=2, style=dotted];
m10_119 -> m10_120  [key=0, style=solid];
m10_119 -> m10_138  [key=2, style=dotted];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_138  [key=2, style=dotted];
m10_121 -> m10_122  [key=0, style=solid];
m10_121 -> m10_138  [key=2, style=dotted];
m10_122 -> m10_123  [key=0, style=solid];
m10_122 -> m10_138  [key=2, style=dotted];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_138  [key=2, style=dotted];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_138  [key=2, style=dotted];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_138  [key=2, style=dotted];
m10_131 -> m10_132  [key=0, style=solid];
m10_131 -> m10_138  [key=2, style=dotted];
m10_133 -> m10_134  [key=0, style=solid];
m10_133 -> m10_137  [key=0, style=solid];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_136  [key=0, style=solid];
m10_134 -> m10_89  [key=2, style=dotted];
m10_136 -> m10_137  [key=0, style=solid];
m10_136 -> m10_138  [key=2, style=dotted];
m10_135 -> m10_134  [key=0, style=solid];
m10_135 -> m10_139  [key=2, style=dotted];
m10_135 -> m10_138  [key=2, style=dotted];
m10_135 -> m10_135  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m10_137 -> m10_27  [color=blue, key=0, style=bold];
m10_46 -> m10_47  [color=green, key=0, style=solid];
m10_46 -> m10_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>", style=dashed];
m10_46 -> m10_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.Collections.Generic.List<QuantConnect.Indicators.IndicatorDataPoint>>", style=dashed];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_8  [key=2, style=dotted];
m10_47 -> m10_14  [color=blue, key=0, style=bold];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_29  [key=2, style=dotted];
m10_53 -> m10_60  [key=2, style=dotted];
m10_53 -> m10_61  [key=2, style=dotted];
m10_53 -> m10_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_53 -> m10_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_55  [key=2, style=dotted];
m10_48 -> m10_52  [color=darkseagreen4, key=1, label=pyDict, style=dashed];
m10_48 -> m10_53  [color=darkseagreen4, key=1, label=pyDict, style=dashed];
m10_52 -> m10_49  [key=0, style=solid];
m10_52 -> m10_57  [key=2, style=dotted];
m10_52 -> m10_58  [key=2, style=dotted];
m10_52 -> m10_59  [key=2, style=dotted];
m10_52 -> m10_52  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_29  [key=2, style=dotted];
m10_50 -> m10_56  [key=2, style=dotted];
m10_50 -> m10_50  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m10_50 -> m10_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_50 -> m10_52  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_50 -> m10_38  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_42  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_45  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_46  [color=green, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_16  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_7  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_31  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_50 -> m10_35  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketWrapper", style=dashed];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_29  [key=2, style=dotted];
m10_51 -> m10_56  [key=2, style=dotted];
m10_51 -> m10_51  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m10_51 -> m10_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_54 -> m10_46  [color=blue, key=0, style=bold];
m10_41 -> m10_42  [color=green, key=0, style=solid];
m10_41 -> d456  [color=green, key=2, style=dotted];
m10_41 -> m10_43  [key=0, style=solid];
m10_42 -> m10_43  [color=green, key=0, style=solid];
m10_42 -> m10_40  [color=green, key=2, style=dotted];
m10_42 -> m10_41  [key=0, style=solid];
m10_42 -> m10_27  [key=2, style=dotted];
m10_43 -> m10_24  [color=blue, key=0, style=bold];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_38  [key=2, style=dotted];
m10_45 -> m10_46  [color=green, key=0, style=solid];
m10_45 -> m10_48  [color=green, key=2, style=dotted];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_25  [key=2, style=dotted];
m10_40 -> m10_45  [key=2, style=dotted];
m10_40 -> m10_42  [color=darkseagreen4, key=1, label=sliceData, style=dashed];
m10_40 -> m10_43  [color=darkseagreen4, key=1, label=sliceData, style=dashed];
m10_44 -> m10_39  [color=blue, key=0, style=bold];
m10_147 -> m10_148  [key=0, style=solid];
m10_147 -> m10_149  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_147 -> m10_159  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_147 -> m10_164  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_147 -> m10_166  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_147 -> m10_169  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_147 -> m10_179  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_147 -> m10_170  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m10_147 -> m10_171  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m10_147 -> m10_187  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m10_148 -> m10_149  [key=0, style=solid];
m10_148 -> m10_151  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_148 -> m10_152  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_148 -> m10_154  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_148 -> m10_155  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_148 -> m10_156  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_148 -> m10_157  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_148 -> m10_160  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_148 -> m10_161  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_148 -> m10_169  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_148 -> m10_179  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_148 -> m10_180  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_173  [key=2, style=dotted];
m10_149 -> m10_174  [key=2, style=dotted];
m10_159 -> m10_160  [key=0, style=solid];
m10_159 -> m10_163  [key=0, style=solid];
m10_164 -> m10_165  [key=0, style=solid];
m10_164 -> m10_166  [key=0, style=solid];
m10_166 -> m10_167  [key=0, style=solid];
m10_166 -> m10_168  [key=0, style=solid];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_29  [key=2, style=dotted];
m10_169 -> m10_30  [key=2, style=dotted];
m10_169 -> m10_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_91  [key=2, style=dotted];
m10_170 -> m10_177  [key=2, style=dotted];
m10_170 -> m10_187  [color=darkseagreen4, key=1, label=index, style=dashed];
m10_171 -> m10_172  [key=0, style=solid];
m10_171 -> m10_92  [key=2, style=dotted];
m10_171 -> m10_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_171 -> m10_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_151 -> m10_152  [key=0, style=solid];
m10_151 -> m10_174  [key=2, style=dotted];
m10_152 -> m10_153  [key=0, style=solid];
m10_152 -> m10_174  [key=2, style=dotted];
m10_154 -> m10_155  [key=0, style=solid];
m10_154 -> m10_174  [key=2, style=dotted];
m10_155 -> m10_156  [key=0, style=solid];
m10_155 -> m10_174  [key=2, style=dotted];
m10_156 -> m10_157  [key=0, style=solid];
m10_156 -> m10_175  [key=2, style=dotted];
m10_156 -> m10_174  [key=2, style=dotted];
m10_157 -> m10_158  [key=0, style=solid];
m10_157 -> m10_174  [key=2, style=dotted];
m10_160 -> m10_161  [key=0, style=solid];
m10_160 -> m10_162  [key=0, style=solid];
m10_161 -> m10_162  [key=0, style=solid];
m10_161 -> m10_176  [key=2, style=dotted];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_153  [key=0, style=solid];
m10_153 -> m10_154  [key=0, style=solid];
m10_153 -> m10_158  [key=0, style=solid];
m10_158 -> m10_159  [key=0, style=solid];
m10_158 -> m10_160  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_158 -> m10_161  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_158 -> m10_162  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_162 -> m10_159  [key=0, style=solid];
m10_162 -> m10_162  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_163 -> m10_164  [key=0, style=solid];
m10_163 -> m10_170  [color=darkseagreen4, key=1, label=names, style=dashed];
m10_165 -> m10_166  [key=0, style=solid];
m10_165 -> m10_170  [color=darkseagreen4, key=1, label=names, style=dashed];
m10_167 -> m10_168  [key=0, style=solid];
m10_167 -> m10_170  [color=darkseagreen4, key=1, label=names, style=dashed];
m10_168 -> m10_169  [key=0, style=solid];
m10_168 -> m10_8  [key=2, style=dotted];
m10_172 -> m10_147  [color=blue, key=0, style=bold];
m10_8 -> m10_0  [color=blue, key=0, style=bold];
m10_14 -> m10_45  [color=green, key=0, style=solid];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_13  [key=0, style=solid];
m10_14 -> m10_16  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m10_14 -> m10_17  [color=darkseagreen4, key=1, label=baseData, style=dashed];
m10_189 -> m10_4  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_189 -> m10_20  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_189 -> m10_36  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_189 -> m10_21  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_189 -> m10_43  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_189 -> m10_52  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_189 -> m10_53  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_189 -> m10_75  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasConverter", style=dashed];
m10_190 -> m10_36  [color=darkseagreen4, key=1, label=maxLevels, style=dashed];
m10_191 -> m10_85  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_86  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_87  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_100  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_103  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_104  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_105  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_106  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_109  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_112  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_113  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_115  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_116  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_117  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_118  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_119  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_120  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_121  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_122  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_124  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_125  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_126  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_127  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_128  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_129  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_130  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_131  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_135  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_136  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_140  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_149  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_150  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_151  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_152  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_153  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_154  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_155  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_156  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_157  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_169  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_191 -> m10_171  [color=darkseagreen4, key=1, label="QuantConnect.Python.PandasData", style=dashed];
m10_192 -> m10_179  [color=darkseagreen4, key=1, label=int, style=dashed];
m10_193 -> m10_179  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_193 -> m10_180  [color=darkseagreen4, key=1, label=pyObjectArray, style=dashed];
m10_194 -> m10_187  [color=darkseagreen4, key=1, label=dynamic, style=dashed];
m10_195 -> m10_187  [color=darkseagreen4, key=1, label=index, style=dashed];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_6  [color=blue, key=0, style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_15 -> m11_14  [color=blue, key=0, style=bold];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_2  [color=blue, key=0, style=bold];
m11_12 -> m11_13  [key=0, style=solid];
m11_13 -> m11_12  [color=blue, key=0, style=bold];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_10  [color=blue, key=0, style=bold];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_4  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m11_8 -> m11_9  [key=0, style=solid];
m11_9 -> m11_8  [color=blue, key=0, style=bold];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_27  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_25 -> m12_29  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_26 -> m12_27  [key=0, style=solid];
m12_27 -> m12_28  [color=green, key=0, style=solid];
m12_27 -> m12_29  [key=0, style=solid];
m12_27 -> m12_6  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_32  [key=2, style=dotted];
m12_28 -> m12_30  [color=green, key=0, style=solid];
m12_28 -> m12_31  [color=green, key=2, style=dotted];
m12_30 -> m12_25  [color=blue, key=0, style=bold];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_11  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_9 -> m12_13  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_10 -> m12_11  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_13  [key=0, style=solid];
m12_11 -> m12_6  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_16  [key=2, style=dotted];
m12_12 -> m12_14  [key=0, style=solid];
m12_12 -> m12_15  [key=2, style=dotted];
m12_14 -> m12_9  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_0 -> m12_4  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_4  [key=0, style=solid];
m12_2 -> m12_6  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_8  [key=2, style=dotted];
m12_3 -> m12_5  [key=0, style=solid];
m12_3 -> m12_7  [key=2, style=dotted];
m12_5 -> m12_0  [color=blue, key=0, style=bold];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_19  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_17 -> m12_21  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_18 -> m12_19  [key=0, style=solid];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_21  [key=0, style=solid];
m12_19 -> m12_6  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_24  [key=2, style=dotted];
m12_20 -> m12_22  [key=0, style=solid];
m12_20 -> m12_23  [key=2, style=dotted];
m12_22 -> m12_17  [color=blue, key=0, style=bold];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_35  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_33 -> m12_37  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m12_34 -> m12_35  [key=0, style=solid];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_37  [key=0, style=solid];
m12_35 -> m12_6  [key=2, style=dotted];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_40  [key=2, style=dotted];
m12_36 -> m12_38  [key=0, style=solid];
m12_36 -> m12_39  [key=2, style=dotted];
m12_38 -> m12_33  [color=blue, key=0, style=bold];
m12_41 -> m12_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m12_41 -> m12_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m12_41 -> m12_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m12_41 -> m12_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m12_41 -> m12_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m12_41 -> m12_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m12_41 -> m12_28  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m12_41 -> m12_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m12_41 -> m12_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m12_41 -> m12_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m13_57 -> m13_58  [key=0, style=solid];
m13_58 -> m13_59  [key=0, style=solid];
m13_58 -> m13_60  [key=2, style=dotted];
m13_58 -> m13_61  [key=2, style=dotted];
m13_59 -> m13_57  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m13_0 -> m13_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m13_0 -> m13_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_12  [key=2, style=dotted];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_7  [key=0, style=solid];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_10  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_16  [key=2, style=dotted];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_12  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_12  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_12  [key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_12  [key=2, style=dotted];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_13  [key=2, style=dotted];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_14  [key=2, style=dotted];
m13_9 -> m13_15  [key=2, style=dotted];
m13_11 -> m13_0  [color=blue, key=0, style=bold];
m13_54 -> m13_62  [key=0, style=solid];
m13_54 -> m13_63  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m13_54 -> m13_64  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m13_62 -> m13_63  [key=0, style=solid];
m13_63 -> m13_64  [key=0, style=solid];
m13_64 -> m13_65  [key=0, style=solid];
m13_65 -> m13_54  [color=blue, key=0, style=bold];
m13_17 -> m13_18  [key=0, style=solid];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_13  [key=2, style=dotted];
m13_18 -> m13_51  [color=darkseagreen4, key=1, label=emptyStatistics, style=dashed];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_13  [key=2, style=dotted];
m13_19 -> m13_51  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> d251  [key=2, style=dotted];
m13_51 -> m13_54  [key=2, style=dotted];
m13_51 -> m13_55  [key=2, style=dotted];
m13_51 -> m13_56  [key=2, style=dotted];
m13_51 -> m13_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_13  [key=2, style=dotted];
m13_20 -> m13_51  [color=darkseagreen4, key=1, label=basicTemplateFrameworkStatistics, style=dashed];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_13  [key=2, style=dotted];
m13_21 -> m13_51  [color=darkseagreen4, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_13  [key=2, style=dotted];
m13_22 -> m13_51  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_13  [key=2, style=dotted];
m13_23 -> m13_51  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_13  [key=2, style=dotted];
m13_24 -> m13_51  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_13  [key=2, style=dotted];
m13_25 -> m13_51  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_13  [key=2, style=dotted];
m13_26 -> m13_51  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_13  [key=2, style=dotted];
m13_27 -> m13_51  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_13  [key=2, style=dotted];
m13_28 -> m13_51  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_13  [key=2, style=dotted];
m13_29 -> m13_51  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_13  [key=2, style=dotted];
m13_30 -> m13_51  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_13  [key=2, style=dotted];
m13_31 -> m13_51  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_13  [key=2, style=dotted];
m13_32 -> m13_51  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_13  [key=2, style=dotted];
m13_33 -> m13_51  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_13  [key=2, style=dotted];
m13_34 -> m13_51  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_13  [key=2, style=dotted];
m13_35 -> m13_51  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_13  [key=2, style=dotted];
m13_36 -> m13_51  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_13  [key=2, style=dotted];
m13_37 -> m13_51  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_13  [key=2, style=dotted];
m13_38 -> m13_51  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_13  [key=2, style=dotted];
m13_39 -> m13_51  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_13  [key=2, style=dotted];
m13_40 -> m13_51  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_13  [key=2, style=dotted];
m13_41 -> m13_51  [color=darkseagreen4, key=1, label=basicTemplateDailyStatistics, style=dashed];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_13  [key=2, style=dotted];
m13_42 -> m13_51  [color=darkseagreen4, key=1, label=hourSplitStatistics, style=dashed];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_13  [key=2, style=dotted];
m13_43 -> m13_51  [color=darkseagreen4, key=1, label=hourReverseSplitStatistics, style=dashed];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_13  [key=2, style=dotted];
m13_44 -> m13_51  [color=darkseagreen4, key=1, label=fractionalQuantityRegressionStatistics, style=dashed];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_13  [key=2, style=dotted];
m13_45 -> m13_51  [color=darkseagreen4, key=1, label=basicTemplateFuturesAlgorithmDailyStatistics, style=dashed];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_13  [key=2, style=dotted];
m13_46 -> m13_51  [color=darkseagreen4, key=1, label=basicTemplateCryptoAlgorithmStatistics, style=dashed];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_13  [key=2, style=dotted];
m13_47 -> m13_51  [color=darkseagreen4, key=1, label=indicatorSuiteAlgorithmStatistics, style=dashed];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_13  [key=2, style=dotted];
m13_48 -> m13_51  [color=darkseagreen4, key=1, label=basicTemplateIntrinioEconomicData, style=dashed];
m13_49 -> m13_50  [key=0, style=solid];
m13_49 -> m13_13  [key=2, style=dotted];
m13_49 -> m13_51  [color=darkseagreen4, key=1, label=volumeWeightedAveragePriceExecutionModelRegressionAlgorithmStatistics, style=dashed];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_13  [key=2, style=dotted];
m13_52 -> m13_17  [color=blue, key=0, style=bold];
m13_66 -> m13_62  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m13_66 -> m13_63  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m13_66 -> m13_64  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m14_11 -> m14_12  [key=0, style=solid];
m14_12 -> m14_11  [color=blue, key=0, style=bold];
m14_32 -> m14_33  [key=0, style=solid];
m14_33 -> m14_32  [color=blue, key=0, style=bold];
m14_5 -> m14_6  [key=0, style=solid];
m14_6 -> m14_5  [color=blue, key=0, style=bold];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_4 -> m14_2  [color=blue, key=0, style=bold];
m14_13 -> m14_14  [key=0, style=solid];
m14_14 -> m14_13  [color=blue, key=0, style=bold];
m14_7 -> m14_8  [key=0, style=solid];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_10  [key=2, style=dotted];
m14_9 -> m14_7  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m14_15 -> m14_16  [color=green, key=0, style=solid];
m14_15 -> m14_21  [color=green, key=1, label="System.DateTime", style=dashed];
m14_15 -> m14_23  [color=green, key=1, label="System.DateTime", style=dashed];
m14_15 -> m14_25  [color=green, key=1, label="System.DateTime", style=dashed];
m14_16 -> m14_17  [color=green, key=0, style=solid];
m14_16 -> m14_22  [color=green, key=0, style=solid];
m14_16 -> m14_24  [color=green, key=0, style=solid];
m14_16 -> m14_26  [color=green, key=0, style=solid];
m14_21 -> m14_27  [color=green, key=0, style=solid];
m14_21 -> m14_28  [color=green, key=2, style=dotted];
m14_23 -> m14_27  [color=green, key=0, style=solid];
m14_23 -> m14_29  [color=green, key=2, style=dotted];
m14_25 -> m14_27  [color=green, key=0, style=solid];
m14_25 -> m14_30  [color=green, key=2, style=dotted];
m14_17 -> m14_18  [color=green, key=0, style=solid];
m14_22 -> m14_23  [color=green, key=0, style=solid];
m14_24 -> m14_25  [color=green, key=0, style=solid];
m14_26 -> m14_27  [color=green, key=0, style=solid];
m14_26 -> m14_31  [color=green, key=2, style=dotted];
m14_18 -> m14_19  [color=green, key=0, style=solid];
m14_19 -> m14_20  [color=green, key=0, style=solid];
m14_20 -> m14_21  [color=green, key=0, style=solid];
m14_27 -> m14_15  [color=blue, key=0, style=bold];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_6  [key=2, style=dotted];
m15_67 -> m15_68  [key=0, style=solid];
m15_68 -> m15_69  [key=0, style=solid];
m15_68 -> m15_4  [key=2, style=dotted];
m15_68 -> m15_3  [key=2, style=dotted];
m15_68 -> m15_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_68 -> m15_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_69 -> m15_67  [color=blue, key=0, style=bold];
m15_69 -> m15_70  [color=green, key=0, style=solid];
m15_43 -> m15_48  [key=0, style=solid];
m15_43 -> m15_59  [color=darkseagreen4, key=1, label=T, style=dashed];
m15_43 -> m15_51  [color=darkseagreen4, key=1, label=selector, style=dashed];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_3  [key=2, style=dotted];
m15_12 -> m15_4  [key=2, style=dotted];
m15_12 -> m15_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_12 -> m15_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_12 -> m15_15  [key=2, style=dotted];
m15_13 -> m15_11  [color=blue, key=0, style=bold];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_16  [key=2, style=dotted];
m15_63 -> m15_64  [key=0, style=solid];
m15_100 -> m15_101  [key=0, style=solid];
m15_101 -> m15_102  [key=0, style=solid];
m15_101 -> m15_4  [key=2, style=dotted];
m15_101 -> m15_103  [key=2, style=dotted];
m15_101 -> m15_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_102 -> m15_100  [color=blue, key=0, style=bold];
m15_8 -> m15_13  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_10  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m15_8 -> m15_12  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_8 -> m15_16  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.SubscriptionDataConfig Add", style=bold];
m15_9 -> m15_13  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_12  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m15_10 -> m15_12  [key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_8  [color=blue, key=0, style=bold];
m15_14 -> m15_8  [color=blue, key=0, style=bold];
m15_14 -> m15_15  [key=0, style=solid];
m15_77 -> m15_78  [key=0, style=solid];
m15_77 -> m15_84  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_77 -> m15_88  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_90 -> m15_91  [key=0, style=solid];
m15_90 -> m15_95  [color=crimson, key=0, style=bold];
m15_90 -> m15_96  [color=crimson, key=0, style=bold];
m15_90 -> m15_93  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_15 -> m15_16  [key=0, style=solid];
m15_47 -> m15_48  [key=0, style=solid];
m15_47 -> m15_54  [key=2, style=dotted];
m15_47 -> m15_55  [key=2, style=dotted];
m15_47 -> m15_51  [color=darkseagreen4, key=1, label=selector, style=dashed];
m15_37 -> m15_38  [key=0, style=solid];
m15_87 -> m15_88  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_0  [color=blue, key=0, style=bold];
m15_6 -> m15_7  [key=0, style=solid];
m15_7 -> m15_5  [color=blue, key=0, style=bold];
m15_7 -> m15_74  [color=green, key=0, style=solid];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_19  [key=0, style=solid];
m15_16 -> m15_14  [color=blue, key=0, style=bold];
m15_16 -> m15_29  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m15_16 -> m15_30  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_16 -> m15_8  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m15_16 -> m15_9  [color=darkorchid, key=3, label="Parameter variable System.Type dataType", style=bold];
m15_16 -> m15_12  [color=darkorchid, key=3, label="Parameter variable QuantConnect.TickType tickType", style=bold];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_19  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m15_16 -> m15_21  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_32  [key=0, style=solid];
m15_18 -> m15_33  [key=2, style=dotted];
m15_19 -> m15_17  [color=blue, key=0, style=bold];
m15_19 -> m15_21  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_27  [key=2, style=dotted];
m15_25 -> m15_37  [key=2, style=dotted];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_43  [key=2, style=dotted];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> m15_32  [key=0, style=solid];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_32  [key=0, style=solid];
m15_28 -> m15_41  [key=2, style=dotted];
m15_28 -> m15_42  [key=2, style=dotted];
m15_26 -> m15_24  [color=blue, key=0, style=bold];
m15_26 -> d255  [key=2, style=dotted];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_39  [key=2, style=dotted];
m15_26 -> m15_40  [key=2, style=dotted];
m15_26 -> m15_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_26 -> m15_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_30 -> m15_28  [color=blue, key=0, style=bold];
m15_30 -> m15_31  [key=0, style=solid];
m15_35 -> m15_36  [key=0, style=solid];
m15_35 -> m15_27  [key=2, style=dotted];
m15_38 -> m15_39  [key=0, style=solid];
m15_34 -> m15_35  [key=0, style=solid];
m15_36 -> m15_34  [color=blue, key=0, style=bold];
m15_39 -> m15_37  [color=blue, key=0, style=bold];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_62  [key=2, style=dotted];
m15_60 -> m15_51  [color=blue, key=0, style=bold];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_66  [key=2, style=dotted];
m15_64 -> m15_57  [key=2, style=dotted];
m15_59 -> m15_60  [color=green, key=0, style=solid];
m15_59 -> m15_62  [color=green, key=2, style=dotted];
m15_59 -> m15_65  [color=green, key=2, style=dotted];
m15_59 -> m15_66  [color=green, key=2, style=dotted];
m15_59 -> m15_67  [color=green, key=2, style=dotted];
m15_59 -> m15_71  [color=green, key=1, label="lambda expression", style=dashed];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_60  [color=green, key=0, style=solid];
m15_61 -> m15_58  [color=blue, key=0, style=bold];
m15_65 -> m15_63  [color=blue, key=0, style=bold];
m15_70 -> m15_71  [key=0, style=solid];
m15_70 -> m15_69  [color=green, key=0, style=solid];
m15_70 -> m15_70  [color=blue, key=0, style=bold];
m15_74 -> m15_75  [color=green, key=0, style=solid];
m15_74 -> m15_76  [color=green, key=2, style=dotted];
m15_74 -> m15_77  [color=green, key=2, style=dotted];
m15_71 -> m15_72  [color=green, key=0, style=solid];
m15_71 -> m15_73  [key=2, style=dotted];
m15_72 -> m15_70  [color=blue, key=0, style=bold];
m15_72 -> m15_73  [color=green, key=0, style=solid];
m15_75 -> m15_76  [key=0, style=solid];
m15_75 -> m15_7  [color=blue, key=0, style=bold];
m15_76 -> m15_74  [color=blue, key=0, style=bold];
m15_84 -> m15_85  [key=0, style=solid];
m15_84 -> m15_86  [key=2, style=dotted];
m15_84 -> m15_61  [key=2, style=dotted];
m15_84 -> m15_65  [key=2, style=dotted];
m15_84 -> m15_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_88 -> m15_89  [key=0, style=solid];
m15_88 -> m15_86  [key=2, style=dotted];
m15_88 -> m15_90  [key=2, style=dotted];
m15_80 -> m15_81  [key=0, style=solid];
m15_80 -> m15_78  [color=blue, key=0, style=bold];
m15_83 -> m15_84  [key=0, style=solid];
m15_83 -> m15_77  [key=2, style=dotted];
m15_83 -> m15_85  [key=0, style=solid];
m15_83 -> m15_86  [key=2, style=dotted];
m15_81 -> m15_82  [key=0, style=solid];
m15_81 -> m15_73  [key=2, style=dotted];
m15_81 -> m15_84  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m15_81 -> m15_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m15_82 -> m15_80  [color=blue, key=0, style=bold];
m15_82 -> m15_84  [key=0, style=solid];
m15_82 -> m15_83  [key=0, style=solid];
m15_85 -> m15_83  [color=blue, key=0, style=bold];
m15_85 -> m15_81  [color=blue, key=0, style=bold];
m15_89 -> m15_87  [color=blue, key=0, style=bold];
m15_104 -> m15_105  [key=0, style=solid];
m15_105 -> m15_106  [key=0, style=solid];
m15_106 -> m15_104  [color=blue, key=0, style=bold];
m15_73 -> m15_71  [color=blue, key=0, style=bold];
m15_44 -> m15_45  [key=0, style=solid];
m15_44 -> m15_47  [key=0, style=solid];
m15_48 -> m15_49  [key=0, style=solid];
m15_48 -> m15_52  [key=0, style=solid];
m15_48 -> m15_50  [color=darkseagreen4, key=1, label=dataDictionary, style=dashed];
m15_46 -> m15_44  [color=blue, key=0, style=bold];
m15_46 -> m15_48  [key=0, style=solid];
m15_46 -> m15_64  [color=darkseagreen4, key=1, label=T, style=dashed];
m15_46 -> m15_51  [color=darkseagreen4, key=1, label=selector, style=dashed];
m15_45 -> m15_46  [key=0, style=solid];
m15_45 -> m15_47  [key=2, style=dotted];
m15_45 -> m15_54  [key=2, style=dotted];
m15_45 -> m15_55  [key=2, style=dotted];
m15_45 -> m15_64  [color=darkseagreen4, key=1, label=dataSelector, style=dashed];
m15_50 -> m15_48  [color=blue, key=0, style=solid];
m15_50 -> m15_51  [key=0, style=solid];
m15_50 -> m15_56  [key=2, style=dotted];
m15_49 -> m15_50  [key=0, style=solid];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_2  [color=darkseagreen4, key=1, label="QuantConnect.TimeKeeper", style=dashed];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=2, style=dotted];
m15_1 -> m15_4  [key=2, style=dotted];
m15_1 -> m15_5  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_1 -> m15_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_2 -> m15_3  [key=0, style=solid];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_35  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_31 -> m15_38  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_32 -> m15_33  [key=0, style=solid];
m15_32 -> m15_3  [key=2, style=dotted];
m15_32 -> m15_4  [key=2, style=dotted];
m15_32 -> m15_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_32 -> m15_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_32 -> m15_16  [color=blue, key=0, style=bold];
m15_33 -> m15_31  [color=blue, key=0, style=bold];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_25  [key=0, style=solid];
m15_22 -> m15_35  [key=2, style=dotted];
m15_22 -> m15_20  [color=blue, key=0, style=bold];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_25  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m15_21 -> m15_34  [key=2, style=dotted];
m15_21 -> m15_23  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m15_21 -> m15_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_21 -> m15_31  [color=darkseagreen4, key=1, label=newConfig, style=dashed];
m15_21 -> m15_3  [key=2, style=dotted];
m15_21 -> m15_4  [key=2, style=dotted];
m15_21 -> m15_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_36  [key=2, style=dotted];
m15_20 -> m15_32  [key=0, style=solid];
m15_20 -> m15_33  [key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_25  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_20 -> m15_29  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_43  [color=darkorchid, key=3, label="Local variable System.Func<T, decimal> selector", style=bold];
m15_41 -> m15_46  [color=darkorchid, key=3, label="Local variable System.Func<T, decimal> selector", style=bold];
m15_78 -> m15_79  [color=green, key=0, style=solid];
m15_78 -> m15_4  [key=2, style=dotted];
m15_78 -> m15_3  [key=2, style=dotted];
m15_78 -> m15_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_78 -> m15_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_78 -> m15_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_79 -> m15_80  [color=green, key=0, style=solid];
m15_79 -> m15_77  [color=blue, key=0, style=bold];
m15_53 -> m15_54  [color=green, key=0, style=solid];
m15_53 -> m15_55  [color=green, key=0, style=solid];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_51  [color=crimson, key=0, style=bold];
m15_40 -> m15_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_40 -> m15_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_40 -> m15_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_40 -> m15_47  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_40 -> m15_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>", style=dashed];
m15_40 -> m15_50  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_51 -> m15_48  [key=0, style=solid];
m15_51 -> m15_57  [key=2, style=dotted];
m15_51 -> m15_52  [color=green, key=0, style=solid];
m15_51 -> m15_69  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m15_51 -> m15_54  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m15_51 -> m15_56  [color=green, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m15_51 -> m15_59  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m15_42 -> m15_43  [key=0, style=solid];
m15_42 -> m15_44  [key=0, style=solid];
m15_42 -> m15_53  [key=2, style=dotted];
m15_52 -> m15_40  [color=blue, key=0, style=bold];
m15_52 -> m15_53  [color=green, key=0, style=solid];
m15_52 -> d255  [color=green, key=2, style=dotted];
m15_52 -> m15_61  [color=green, key=2, style=dotted];
m15_52 -> m15_70  [color=green, key=1, label="lambda expression", style=dashed];
m15_52 -> m15_55  [color=green, key=1, label=subscriptions, style=dashed];
m15_52 -> m15_59  [color=green, key=1, label=subscriptions, style=dashed];
m15_4 -> m15_7  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_97  [key=0, style=solid];
m15_91 -> m15_93  [color=darkseagreen4, key=1, label=slice, style=dashed];
m15_91 -> m15_52  [color=green, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_79  [color=green, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_91 -> m15_84  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m15_95 -> m15_91  [key=0, style=solid];
m15_95 -> m15_99  [key=2, style=dotted];
m15_95 -> m15_57  [key=2, style=dotted];
m15_96 -> m15_91  [key=0, style=solid];
m15_96 -> m15_57  [key=2, style=dotted];
m15_93 -> m15_94  [key=0, style=solid];
m15_93 -> m15_91  [key=0, style=solid];
m15_93 -> m15_98  [key=2, style=dotted];
m15_93 -> m15_95  [color=darkseagreen4, key=1, label=item, style=dashed];
m15_93 -> m15_96  [color=darkseagreen4, key=1, label=item, style=dashed];
m15_93 -> m15_88  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m15_92 -> m15_93  [key=0, style=solid];
m15_94 -> m15_95  [key=0, style=solid];
m15_94 -> m15_96  [key=0, style=solid];
m15_97 -> m15_90  [color=blue, key=0, style=bold];
m15_55 -> m15_56  [color=green, key=0, style=solid];
m15_55 -> m15_57  [color=green, key=1, label=subscription, style=dashed];
m15_55 -> m15_59  [color=green, key=0, style=solid];
m15_54 -> m15_60  [color=green, key=0, style=solid];
m15_54 -> m15_62  [color=green, key=2, style=dotted];
m15_56 -> m15_57  [color=green, key=0, style=solid];
m15_56 -> m15_55  [color=green, key=0, style=solid];
m15_56 -> m15_63  [color=green, key=2, style=dotted];
m15_57 -> m15_58  [color=green, key=0, style=solid];
m15_57 -> m15_64  [color=green, key=2, style=dotted];
m15_107 -> m15_25  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_107 -> m15_29  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_107 -> m15_69  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m15_108 -> m15_35  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_108 -> m15_38  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_109 -> m15_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_110 -> m15_64  [color=darkseagreen4, key=1, label=dataSelector, style=dashed];
m15_111 -> m15_84  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m15_111 -> m15_88  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_18 -> m16_6  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m16_18 -> m16_151  [key=0, style=solid];
m16_18 -> m16_2  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> data", style=bold];
m16_18 -> m16_153  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m16_151 -> m16_152  [key=0, style=solid];
m16_151 -> m16_141  [key=2, style=dotted];
m16_151 -> m16_153  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m16_151 -> m16_157  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m16_152 -> m16_153  [key=0, style=solid];
m16_152 -> m16_155  [key=2, style=dotted];
m16_152 -> m16_157  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_153 -> m16_53  [key=2, style=dotted];
m16_153 -> m16_154  [key=0, style=solid];
m16_153 -> m16_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_154 -> m16_18  [color=blue, key=0, style=bold];
m16_102 -> m16_103  [key=0, style=solid];
m16_125 -> m16_19  [key=2, style=dotted];
m16_125 -> m16_126  [key=0, style=solid];
m16_125 -> m16_127  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_125 -> m16_128  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_141  [key=2, style=dotted];
m16_105 -> m16_107  [color=darkseagreen4, key=1, label=config, style=dashed];
m16_105 -> m16_108  [color=darkseagreen4, key=1, label=config, style=dashed];
m16_105 -> m16_147  [color=darkseagreen4, key=1, label=config, style=dashed];
m16_124 -> m16_59  [key=2, style=dotted];
m16_124 -> m16_125  [key=0, style=solid];
m16_120 -> m16_58  [key=2, style=dotted];
m16_120 -> m16_121  [key=0, style=solid];
m16_122 -> m16_58  [key=2, style=dotted];
m16_122 -> m16_123  [key=0, style=solid];
m16_122 -> m16_144  [key=2, style=dotted];
m16_136 -> m16_58  [key=2, style=dotted];
m16_136 -> m16_137  [key=0, style=solid];
m16_138 -> m16_58  [key=2, style=dotted];
m16_138 -> m16_139  [key=0, style=solid];
m16_138 -> m16_144  [key=2, style=dotted];
m16_115 -> m16_58  [key=2, style=dotted];
m16_115 -> m16_116  [key=0, style=solid];
m16_131 -> m16_58  [key=2, style=dotted];
m16_131 -> m16_132  [key=0, style=solid];
m16_114 -> m16_57  [key=2, style=dotted];
m16_114 -> m16_16  [key=2, style=dotted];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_117  [color=darkseagreen4, key=1, label=count, style=dashed];
m16_130 -> m16_57  [key=2, style=dotted];
m16_130 -> m16_16  [key=2, style=dotted];
m16_130 -> m16_131  [key=0, style=solid];
m16_130 -> m16_133  [color=darkseagreen4, key=1, label=count, style=dashed];
m16_111 -> m16_16  [key=2, style=dotted];
m16_111 -> m16_56  [key=2, style=dotted];
m16_111 -> m16_112  [key=0, style=solid];
m16_113 -> m16_16  [key=2, style=dotted];
m16_113 -> m16_56  [key=2, style=dotted];
m16_113 -> m16_114  [key=0, style=solid];
m16_119 -> m16_16  [key=2, style=dotted];
m16_119 -> m16_120  [key=0, style=solid];
m16_121 -> m16_16  [key=2, style=dotted];
m16_121 -> m16_122  [key=0, style=solid];
m16_127 -> m16_16  [key=2, style=dotted];
m16_127 -> m16_56  [key=2, style=dotted];
m16_127 -> m16_128  [key=0, style=solid];
m16_129 -> m16_16  [key=2, style=dotted];
m16_129 -> m16_56  [key=2, style=dotted];
m16_129 -> m16_130  [key=0, style=solid];
m16_135 -> m16_16  [key=2, style=dotted];
m16_135 -> m16_136  [key=0, style=solid];
m16_137 -> m16_16  [key=2, style=dotted];
m16_137 -> m16_138  [key=0, style=solid];
m16_110 -> m16_15  [key=2, style=dotted];
m16_110 -> m16_111  [key=0, style=solid];
m16_126 -> m16_15  [key=2, style=dotted];
m16_126 -> m16_127  [key=0, style=solid];
m16_103 -> m16_11  [key=2, style=dotted];
m16_103 -> m16_125  [color=darkseagreen4, key=1, label=converter, style=dashed];
m16_103 -> m16_104  [key=0, style=solid];
m16_103 -> m16_109  [color=darkseagreen4, key=1, label=converter, style=dashed];
m16_128 -> m16_130  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_135  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_128 -> m16_137  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_128 -> m16_134  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_104 -> m16_105  [key=0, style=solid];
m16_104 -> m16_124  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_104 -> m16_128  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_104 -> m16_112  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_106 -> m16_107  [key=0, style=solid];
m16_106 -> m16_142  [key=2, style=dotted];
m16_106 -> m16_108  [color=darkseagreen4, key=1, label=quandl, style=dashed];
m16_106 -> m16_147  [color=darkseagreen4, key=1, label=quandl, style=dashed];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_143  [key=2, style=dotted];
m16_108 -> m16_124  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m16_108 -> m16_52  [key=2, style=dotted];
m16_108 -> m16_53  [key=2, style=dotted];
m16_108 -> m16_54  [key=2, style=dotted];
m16_108 -> m16_120  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m16_108 -> m16_122  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m16_108 -> m16_136  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m16_108 -> m16_138  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m16_108 -> m16_109  [key=0, style=solid];
m16_108 -> m16_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_117 -> m16_124  [key=0, style=solid];
m16_117 -> m16_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m16_117 -> m16_118  [key=0, style=solid];
m16_133 -> m16_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m16_133 -> m16_134  [key=0, style=solid];
m16_133 -> m16_140  [key=0, style=solid];
m16_116 -> m16_120  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_116 -> m16_122  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_118  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_116 -> m16_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_123 -> m16_117  [key=0, style=solid];
m16_123 -> m16_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_132 -> m16_136  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_132 -> m16_138  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_132 -> m16_133  [key=0, style=solid];
m16_132 -> m16_134  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_132 -> m16_139  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_139 -> m16_133  [key=0, style=solid];
m16_139 -> m16_139  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_112 -> m16_114  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_112 -> m16_113  [key=0, style=solid];
m16_112 -> m16_119  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_112 -> m16_121  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_112 -> m16_118  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_109 -> m16_111  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_109 -> m16_110  [key=0, style=solid];
m16_109 -> m16_55  [key=2, style=dotted];
m16_109 -> m16_112  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_118 -> m16_119  [key=0, style=solid];
m16_118 -> m16_121  [color=darkseagreen4, key=1, label=index, style=dashed];
m16_134 -> m16_135  [key=0, style=solid];
m16_134 -> m16_137  [color=darkseagreen4, key=1, label=index, style=dashed];
m16_140 -> m16_102  [color=blue, key=0, style=bold];
m16_156 -> m16_157  [key=0, style=solid];
m16_98 -> m16_99  [key=0, style=solid];
m16_98 -> m16_100  [key=2, style=dotted];
m16_98 -> m16_64  [key=2, style=dotted];
m16_98 -> m16_101  [key=2, style=dotted];
m16_97 -> m16_98  [key=0, style=solid];
m16_147 -> m16_148  [key=0, style=solid];
m16_147 -> m16_149  [key=2, style=dotted];
m16_147 -> m16_143  [key=2, style=dotted];
m16_157 -> m16_158  [key=0, style=solid];
m16_157 -> m16_159  [key=2, style=dotted];
m16_157 -> m16_160  [key=2, style=dotted];
m16_157 -> d453  [key=2, style=dotted];
m16_157 -> m16_162  [key=2, style=dotted];
m16_157 -> m16_12  [key=2, style=dotted];
m16_157 -> m16_163  [key=2, style=dotted];
m16_99 -> m16_97  [color=blue, key=0, style=bold];
m16_61 -> m16_64  [key=2, style=dotted];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_63  [key=2, style=dotted];
m16_60 -> m16_61  [key=0, style=solid];
m16_145 -> m16_147  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_145 -> m16_146  [key=0, style=solid];
m16_146 -> m16_147  [key=0, style=solid];
m16_146 -> m16_149  [key=2, style=dotted];
m16_146 -> m16_150  [key=2, style=dotted];
m16_148 -> m16_145  [color=blue, key=0, style=bold];
m16_158 -> m16_156  [color=blue, key=0, style=bold];
m16_62 -> m16_60  [color=blue, key=0, style=bold];
m16_65 -> m16_66  [key=0, style=solid];
m16_83 -> m16_84  [color=green, key=0, style=solid];
m16_83 -> m16_19  [color=green, key=2, style=dotted];
m16_83 -> m16_85  [color=green, key=1, label=dataFrame, style=dashed];
m16_83 -> m16_86  [color=green, key=1, label=dataFrame, style=dashed];
m16_66 -> m16_83  [color=green, key=1, label=converter, style=dashed];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_11  [key=2, style=dotted];
m16_66 -> m16_69  [color=darkseagreen4, key=1, label=converter, style=dashed];
m16_82 -> m16_83  [color=green, key=0, style=solid];
m16_82 -> m16_59  [color=green, key=2, style=dotted];
m16_84 -> m16_85  [color=green, key=0, style=solid];
m16_84 -> m16_15  [color=green, key=2, style=dotted];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_16  [key=2, style=dotted];
m16_85 -> m16_56  [key=2, style=dotted];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_88  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_86 -> m16_92  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_86 -> m16_93  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_67 -> m16_82  [color=green, key=1, label=symbol, style=dashed];
m16_67 -> m16_86  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_98  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_67 -> m16_72  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_68 -> m16_82  [color=green, key=1, label=rawBars, style=dashed];
m16_68 -> m16_80  [color=green, key=1, label=rawBars, style=dashed];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_52  [key=2, style=dotted];
m16_68 -> m16_53  [key=2, style=dotted];
m16_68 -> m16_54  [key=2, style=dotted];
m16_68 -> m16_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_68 -> m16_94  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m16_77 -> m16_82  [color=green, key=0, style=solid];
m16_77 -> m16_78  [key=0, style=solid];
m16_77 -> m16_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m16_80 -> m16_81  [color=green, key=0, style=solid];
m16_80 -> m16_58  [color=green, key=2, style=dotted];
m16_79 -> m16_80  [color=green, key=0, style=solid];
m16_79 -> m16_16  [color=green, key=2, style=dotted];
m16_76 -> m16_80  [color=green, key=1, label=i, style=dashed];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_78  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_76 -> m16_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_81 -> m16_77  [key=0, style=solid];
m16_81 -> m16_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_74 -> m16_75  [color=green, key=0, style=solid];
m16_74 -> m16_57  [color=green, key=2, style=dotted];
m16_74 -> m16_16  [color=green, key=2, style=dotted];
m16_74 -> m16_77  [color=green, key=1, label=count, style=dashed];
m16_72 -> m16_74  [color=green, key=1, label=subDataFrame, style=dashed];
m16_72 -> m16_79  [color=green, key=1, label=subDataFrame, style=dashed];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_78  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_73 -> m16_74  [color=green, key=0, style=solid];
m16_73 -> m16_16  [key=2, style=dotted];
m16_73 -> m16_56  [key=2, style=dotted];
m16_75 -> m16_76  [color=green, key=0, style=solid];
m16_75 -> m16_58  [color=green, key=2, style=dotted];
m16_78 -> m16_79  [color=green, key=0, style=solid];
m16_69 -> m16_72  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_55  [key=2, style=dotted];
m16_69 -> m16_71  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_87 -> m16_16  [key=2, style=dotted];
m16_87 -> m16_56  [key=2, style=dotted];
m16_87 -> m16_88  [key=0, style=solid];
m16_88 -> m16_57  [key=2, style=dotted];
m16_88 -> m16_16  [key=2, style=dotted];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_91  [color=darkseagreen4, key=1, label=count, style=dashed];
m16_92 -> m16_93  [key=0, style=solid];
m16_93 -> m16_16  [key=2, style=dotted];
m16_93 -> m16_94  [key=0, style=solid];
m16_94 -> m16_58  [key=2, style=dotted];
m16_94 -> m16_95  [key=0, style=solid];
m16_89 -> m16_58  [key=2, style=dotted];
m16_89 -> m16_90  [key=0, style=solid];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_16  [key=2, style=dotted];
m16_71 -> m16_56  [key=2, style=dotted];
m16_70 -> m16_15  [key=2, style=dotted];
m16_70 -> m16_71  [key=0, style=solid];
m16_91 -> m16_92  [key=0, style=solid];
m16_91 -> m16_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m16_91 -> m16_96  [key=0, style=solid];
m16_90 -> m16_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_90 -> m16_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_90 -> m16_91  [key=0, style=solid];
m16_90 -> m16_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_95 -> m16_91  [key=0, style=solid];
m16_95 -> m16_95  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_96 -> m16_65  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_7 -> m16_19  [key=2, style=dotted];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_9  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_18  [key=2, style=dotted];
m16_5 -> m16_16  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_17  [key=2, style=dotted];
m16_9 -> m16_16  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_17  [key=2, style=dotted];
m16_4 -> m16_15  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_8 -> m16_15  [key=2, style=dotted];
m16_8 -> m16_9  [key=0, style=solid];
m16_1 -> m16_11  [key=2, style=dotted];
m16_1 -> m16_7  [color=darkseagreen4, key=1, label=converter, style=dashed];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [color=darkseagreen4, key=1, label=converter, style=dashed];
m16_2 -> m16_6  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m16_2 -> m16_3  [key=0, style=solid];
m16_2 -> m16_12  [key=2, style=dotted];
m16_2 -> m16_13  [key=2, style=dotted];
m16_3 -> m16_5  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_14  [key=2, style=dotted];
m16_10 -> m16_0  [color=blue, key=0, style=bold];
m16_155 -> m16_151  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscriptionDataConfig", style=bold];
m16_155 -> m16_167  [key=0, style=solid];
m16_167 -> m16_168  [key=0, style=solid];
m16_167 -> m16_169  [key=2, style=dotted];
m16_167 -> m16_170  [key=2, style=dotted];
m16_167 -> m16_171  [key=2, style=dotted];
m16_167 -> m16_172  [key=2, style=dotted];
m16_168 -> m16_155  [color=blue, key=0, style=bold];
m16_141 -> m16_105  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m16_141 -> m16_18  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m16_141 -> m16_104  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m16_141 -> m16_164  [key=0, style=solid];
m16_164 -> m16_165  [key=0, style=solid];
m16_164 -> m16_166  [key=2, style=dotted];
m16_165 -> m16_141  [color=blue, key=0, style=bold];
m16_20 -> m16_21  [key=0, style=solid];
m16_38 -> m16_19  [key=2, style=dotted];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_40  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_38 -> m16_41  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_37 -> m16_59  [key=2, style=dotted];
m16_37 -> m16_38  [key=0, style=solid];
m16_32 -> m16_37  [key=0, style=solid];
m16_32 -> m16_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m16_32 -> m16_33  [key=0, style=solid];
m16_35 -> m16_58  [key=2, style=dotted];
m16_35 -> m16_36  [key=0, style=solid];
m16_49 -> m16_58  [key=2, style=dotted];
m16_49 -> m16_50  [key=0, style=solid];
m16_30 -> m16_58  [key=2, style=dotted];
m16_30 -> m16_31  [key=0, style=solid];
m16_44 -> m16_58  [key=2, style=dotted];
m16_44 -> m16_45  [key=0, style=solid];
m16_29 -> m16_57  [key=2, style=dotted];
m16_29 -> m16_16  [key=2, style=dotted];
m16_29 -> m16_32  [color=darkseagreen4, key=1, label=count, style=dashed];
m16_29 -> m16_30  [key=0, style=solid];
m16_43 -> m16_57  [key=2, style=dotted];
m16_43 -> m16_16  [key=2, style=dotted];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_46  [color=darkseagreen4, key=1, label=count, style=dashed];
m16_26 -> m16_16  [key=2, style=dotted];
m16_26 -> m16_56  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_28 -> m16_16  [key=2, style=dotted];
m16_28 -> m16_56  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid];
m16_34 -> m16_16  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_40 -> m16_16  [key=2, style=dotted];
m16_40 -> m16_56  [key=2, style=dotted];
m16_40 -> m16_41  [key=0, style=solid];
m16_42 -> m16_16  [key=2, style=dotted];
m16_42 -> m16_56  [key=2, style=dotted];
m16_42 -> m16_43  [key=0, style=solid];
m16_48 -> m16_16  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_25 -> m16_15  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_39 -> m16_15  [key=2, style=dotted];
m16_39 -> m16_40  [key=0, style=solid];
m16_21 -> m16_11  [key=2, style=dotted];
m16_21 -> m16_38  [color=darkseagreen4, key=1, label=converter, style=dashed];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_24  [color=darkseagreen4, key=1, label=converter, style=dashed];
m16_41 -> m16_43  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_48  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_41 -> m16_47  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_22 -> m16_37  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_22 -> m16_41  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_61  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_22 -> m16_27  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_23 -> m16_37  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m16_23 -> m16_52  [key=2, style=dotted];
m16_23 -> m16_53  [key=2, style=dotted];
m16_23 -> m16_54  [key=2, style=dotted];
m16_23 -> m16_35  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m16_23 -> m16_49  [color=darkseagreen4, key=1, label=rawBars, style=dashed];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_31 -> m16_33  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_31 -> m16_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_36 -> m16_32  [key=0, style=solid];
m16_36 -> m16_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_46 -> m16_32  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_51  [key=0, style=solid];
m16_33 -> m16_34  [key=0, style=solid];
m16_45 -> m16_49  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_47  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_45 -> m16_50  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_50 -> m16_46  [key=0, style=solid];
m16_50 -> m16_50  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_27 -> m16_29  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_34  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_27 -> m16_33  [color=darkseagreen4, key=1, label=subDataFrame, style=dashed];
m16_24 -> m16_26  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_55  [key=2, style=dotted];
m16_24 -> m16_27  [color=darkseagreen4, key=1, label=dataFrame, style=dashed];
m16_47 -> m16_48  [key=0, style=solid];
m16_51 -> m16_20  [color=blue, key=0, style=bold];
m16_173 -> m16_82  [color=green, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m16_173 -> m16_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m16_173 -> m16_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m16_173 -> m16_105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m16_173 -> m16_124  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m16_173 -> m16_151  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m16_173 -> m16_152  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.DataFeeds.PandasConverterTests", style=dashed];
m16_175 -> m16_98  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m16_176 -> m16_147  [color=darkseagreen4, key=1, label=config, style=dashed];
m16_177 -> m16_147  [color=darkseagreen4, key=1, label=quandl, style=dashed];
m16_178 -> m16_157  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m16_179 -> m16_157  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_174 -> m16_61  [color=darkseagreen4, key=1, label=symbol, style=dashed];
}
