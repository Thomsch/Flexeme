digraph  {
n508 [label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler", span=""];
n509 [label=unixDateStart, span=""];
n510 [label=unixDateStop, span=""];
n511 [label="System.DateTime", span=""];
n512 [label="System.DateTime", span=""];
n0 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", span="157-157", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()"];
n1 [label="_charts = new ConcurrentDictionary<string, Chart>()", span="159-159", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()"];
n2 [label="_orderEvents = new ConcurrentQueue<OrderEvent>()", span="160-160", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()"];
n11 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()"];
n3 [label="_messages = new ConcurrentQueue<Packet>()", span="161-161", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()"];
n12 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()"];
n4 [label="_isActive = true", span="162-162", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()"];
n5 [label="_runtimeStatistics = new Dictionary<string, string>()", span="163-163", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()"];
n6 [label="_resamplePeriod = TimeSpan.FromSeconds(1)", span="165-165", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()"];
n13 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
n7 [label="_notificationPeriod = TimeSpan.FromSeconds(1)", span="166-166", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()"];
n14 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n8 [label="_startTime = DateTime.Now", span="167-167", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()"];
n9 [label="_logStore = new List<LogEntry>()", span="170-170", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", color=red, community=0];
n10 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()", span="157-157", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler()"];
n15 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n16 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="182-182", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n17 [label="_api = api", span="184-184", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n18 [label="_dataFeed = dataFeed", span="185-185", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n19 [label="_messagingHandler = messagingHandler", span="186-186", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n20 [label="_setupHandler = setupHandler", span="187-187", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n21 [label="_transactionHandler = transactionHandler", span="188-188", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n22 [label="_job = (LiveNodePacket)job", span="189-189", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n23 [label="_job == null", span="190-190", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n24 [label="throw new Exception(''LiveResultHandler.Constructor(): Submitted Job type invalid.'');", span="190-190", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n25 [label="_deployId = _job.DeployId", span="191-191", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n26 [label="_compileId = _job.CompileId", span="192-192", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n27 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="182-182", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)"];
n28 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
n29 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", span="198-198", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n30 [label="!(_exitTriggered && Messages.Count == 0)", span="201-201", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n31 [label="Packet packet", span="206-206", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n39 [label="Log.Trace(''LiveTradingResultHandler.Run(): Ending Thread...'')", span="227-227", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n32 [label="Messages.TryDequeue(out packet)", span="207-207", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n33 [label="_messagingHandler.Send(packet)", span="209-209", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n34 [label="Update()", span="213-213", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n42 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)"];
n43 [label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50", cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)"];
n35 [label="Messages.Count == 0", span="215-215", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n44 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", span="235-235", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n36 [label="Thread.Sleep(10)", span="218-218", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n37 [label=Exception, span="221-221", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n45 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)"];
n38 [label="Log.Error(err)", span="223-223", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n46 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)"];
n40 [label="_isActive = false", span="228-228", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n47 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
n41 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()", span="198-198", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Run()"];
n48 [label="Dictionary<int, Order> deltaOrders", span="238-238", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n49 [label="_algorithm == null || _algorithm.Transactions == null || _transactionHandler.Orders == null || !_algorithm.GetLocked()", span="241-241", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n50 [label="Log.Error(''LiveTradingResultHandler.Update(): Algorithm not yet initialized.'')", span="243-243", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n52 [label="DateTime.Now > _nextUpdate || _exitTriggered", span="249-249", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n132 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="456-456", cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()"];
n51 [label="return;", span="244-244", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n133 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)"];
n53 [label="OrderEvent orderEvent", span="252-252", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n129 [label=Exception, span="427-427", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n131 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()", span="235-235", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n54 [label="deltaOrders = new Dictionary<int, Order>()", span="253-253", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n55 [label="var stopwatch = Stopwatch.StartNew()", span="255-255", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n58 [label="deltaOrders[orderEvent.OrderId] = order.Clone()", span="259-259", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n59 [label=deltaOrders, span="263-263", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n62 [label="_lastOrderId = (from order in deltaOrders.Values select order.Id).DefaultIfEmpty(_lastOrderId).Max()", span="270-270", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n92 [label="var splitPackets = SplitPackets(deltaCharts, deltaOrders, holdings, deltaStatistics, runtimeStatistics, serverStatistics)", span="332-332", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n56 [label="_orderEvents.TryDequeue(out orderEvent) && stopwatch.ElapsedMilliseconds < 15", span="256-256", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n134 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()"];
n57 [label="var order = _algorithm.Transactions.GetOrderById(orderEvent.OrderId)", span="258-258", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n135 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)"];
n136 [label="Entry QuantConnect.Orders.Order.Clone()", span="241-241", cluster="QuantConnect.Orders.Order.Clone()"];
n60 [label="order.Value.Price = order.Value.Price.SmartRounding()", span="265-265", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n61 [label="order.Value.Time = order.Value.Time.ToUniversalTime()", span="266-266", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n137 [label="Entry decimal.SmartRounding()", span="206-206", cluster="decimal.SmartRounding()"];
n138 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()"];
n63 [label="var deltaCharts = new Dictionary<string, Chart>()", span="276-276", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n139 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty"];
n140 [label="Entry Unk.Max", span="", cluster="Unk.Max"];
n64 [label="Log.Debug(''LiveTradingResultHandler.Update(): Build delta charts'')", span="277-277", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n68 [label="deltaCharts.Add(safeName, chart.Value.GetUpdates())", span="285-285", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n65 [label=_chartLock, span="278-278", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n141 [label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142", cluster="QuantConnect.Logging.Log.Debug(string, int, int)"];
n66 [label=_charts, span="281-281", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n67 [label="var safeName = chart.Value.Name.Replace('/', '-')", span="284-284", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n69 [label="Log.Debug(''LiveTradingResultHandler.Update(): End build delta charts'')", span="288-288", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n142 [label="Entry string.Replace(char, char)", span="0-0", cluster="string.Replace(char, char)"];
n143 [label="Entry QuantConnect.Chart.GetUpdates()", span="91-91", cluster="QuantConnect.Chart.GetUpdates()"];
n144 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
n70 [label="var holdings = new Dictionary<string, Holding>()", span="291-291", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n71 [label="var deltaStatistics = new Dictionary<string, string>()", span="292-292", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n78 [label="holdings.Add(asset.Symbol.Value, new Holding(asset))", span="302-302", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n104 [label="var complete = new LiveResultPacket(_job, new LiveResult(chartComplete, orders, _algorithm.Transactions.TransactionRecord, holdings, deltaStatistics, runtimeStatistics, serverStatistics))", span="355-355", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n72 [label="var runtimeStatistics = new Dictionary<string, string>()", span="293-293", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n73 [label="var serverStatistics = OS.GetServerStatistics()", span="294-294", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n82 [label="runtimeStatistics.Add(pair.Key, pair.Value)", span="311-311", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n85 [label="runtimeStatistics.Add(''Unrealized:'', ''$'' + _algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="322-322", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n86 [label="runtimeStatistics.Add(''Fees:'', ''-$'' + _algorithm.Portfolio.TotalFees.ToString(''N2''))", span="323-323", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n87 [label="runtimeStatistics.Add(''Net Profit:'', ''$'' + (_algorithm.Portfolio.TotalProfit - _algorithm.Portfolio.TotalFees).ToString(''N2''))", span="324-324", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n88 [label="runtimeStatistics.Add(''Return:'', netReturn.ToString(''P''))", span="325-325", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n89 [label="runtimeStatistics.Add(''Equity:'', ''$'' + _algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="326-326", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n90 [label="runtimeStatistics.Add(''Holdings:'', ''$'' + _algorithm.Portfolio.TotalHoldingsValue.ToString(''N2''))", span="327-327", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n91 [label="runtimeStatistics.Add(''Volume:'', ''$'' + _algorithm.Portfolio.TotalSaleVolume.ToString(''N2''))", span="328-328", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n74 [label="var upTime = DateTime.UtcNow - _launchTimeUtc", span="295-295", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n145 [label="Entry QuantConnect.OS.GetServerStatistics()", span="217-217", cluster="QuantConnect.OS.GetServerStatistics()"];
n75 [label="serverStatistics[''Up Time''] = string.Format(''{0}d {1:hh\\:mm\\:ss}'', upTime.Days, upTime)", span="296-296", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n76 [label="serverStatistics[''Total RAM (MB)''] = _job.Controls.RamAllocation.ToString()", span="297-297", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n146 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
n77 [label="_algorithm.Securities.Values.Where(x => !x.IsInternalFeed() && !x.Symbol.IsCanonical()).OrderBy(x => x.Symbol.Value)", span="300-300", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n147 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()"];
n79 [label="Log.Debug(''LiveTradingResultHandler.Update(): Build run time stats'')", span="306-306", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n148 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n149 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy"];
n167 [label="Entry lambda expression", span="300-300", cluster="lambda expression"];
n172 [label="Entry lambda expression", span="300-300", cluster="lambda expression"];
n150 [label="Entry Holding.cstr", span="", cluster="Holding.cstr"];
n151 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
n80 [label=_runtimeLock, span="307-307", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n81 [label=_runtimeStatistics, span="309-309", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n83 [label="Log.Debug(''LiveTradingResultHandler.Update(): End build run time stats'')", span="314-314", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n84 [label="var netReturn = _setupHandler.StartingPortfolioValue > 0 ?\r\n                                    (_algorithm.Portfolio.TotalPortfolioValue - _setupHandler.StartingPortfolioValue) / _setupHandler.StartingPortfolioValue\r\n                                    : 0", span="317-319", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n118 [label="_api.SendStatistics(\r\n                                _job.AlgorithmId,\r\n                                _algorithm.Portfolio.TotalUnrealizedProfit,\r\n                                _algorithm.Portfolio.TotalFees,\r\n                                _algorithm.Portfolio.TotalProfit,\r\n                                _algorithm.Portfolio.TotalHoldingsValue,\r\n                                _algorithm.Portfolio.TotalPortfolioValue,\r\n                                netReturn,\r\n                                _algorithm.Portfolio.TotalSaleVolume,\r\n                                _lastOrderId, 0)", span="384-393", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n152 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)"];
n93 [label=splitPackets, span="334-334", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n153 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="438-438", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n94 [label="_messagingHandler.Send(liveResultPacket)", span="336-336", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n95 [label="DateTime.Now > _nextChartsUpdate || _exitTriggered", span="340-340", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n96 [label="Log.Debug(''LiveTradingResultHandler.Update(): Pre-store result'')", span="342-342", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n107 [label="DateTime.Now > _nextLogStoreUpdate || _exitTriggered", span="361-361", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n97 [label="_nextChartsUpdate = DateTime.Now.AddMinutes(1)", span="343-343", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n98 [label="var chartComplete = new Dictionary<string, Chart>()", span="344-344", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n154 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)"];
n99 [label=_chartLock, span="345-345", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n102 [label="chartComplete.Add(safeName, chart.Value)", span="351-351", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n100 [label=Charts, span="347-347", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n101 [label="var safeName = chart.Value.Name.Replace('/', '-')", span="350-350", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n103 [label="var orders = new Dictionary<int, Order>(_transactionHandler.Orders)", span="354-354", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n155 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)"];
n105 [label="StoreResult(complete)", span="356-356", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n156 [label="Entry QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)", span="108-108", cluster="QuantConnect.Packets.LiveResultPacket.LiveResultPacket(QuantConnect.Packets.LiveNodePacket, QuantConnect.Packets.LiveResult)"];
n157 [label="Entry QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, QuantConnect.Holding>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="153-153", cluster="QuantConnect.Packets.LiveResult.LiveResult(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.Collections.Generic.IDictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.IDictionary<System.DateTime, decimal>, System.Collections.Generic.IDictionary<string, QuantConnect.Holding>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)"];
n106 [label="Log.Debug(''LiveTradingResultHandler.Update(): End-store result'')", span="357-357", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n158 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="830-830", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n108 [label="List<LogEntry> logs", span="363-363", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n117 [label="DateTime.Now > _nextStatisticsUpdate || _exitTriggered", span="380-380", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n109 [label="Log.Debug(''LiveTradingResultHandler.Update(): Storing log...'')", span="364-364", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n110 [label=_logStoreLock, span="365-365", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n111 [label="var utc = DateTime.UtcNow", span="367-367", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n112 [label="logs = (from log in _logStore\r\n                                    where log.Time >= utc.RoundDown(TimeSpan.FromHours(1))\r\n                                    select log).ToList()", span="368-370", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n113 [label="_logStore = logs", span="372-372", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n159 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)"];
n160 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476", cluster="System.DateTime.RoundDown(System.TimeSpan)"];
n161 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
n114 [label="StoreLog(logs)", span="374-374", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n115 [label="_nextLogStoreUpdate = DateTime.Now.AddMinutes(2)", span="375-375", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n162 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", span="809-809", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)"];
n116 [label="Log.Debug(''LiveTradingResultHandler.Update(): Finished storing log'')", span="376-376", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n122 [label="Log.Debug(''LiveTradingResultHandler.Update(): Trimming charts'')", span="403-403", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n119 [label=Exception, span="395-395", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n121 [label="_nextStatisticsUpdate = DateTime.Now.AddMinutes(1)", span="399-399", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n163 [label="Entry QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)", span="280-280", cluster="QuantConnect.Interfaces.IApi.SendStatistics(string, decimal, decimal, decimal, decimal, decimal, decimal, decimal, int, double)"];
n120 [label="Log.Error(err, ''Error sending statistics:'')", span="397-397", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n123 [label=_chartLock, span="404-404", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n124 [label=Charts, span="406-406", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n125 [label="chart.Value.Series", span="408-408", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n127 [label="Log.Debug(''LiveTradingResultHandler.Update(): Finished trimming charts'')", span="418-418", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n126 [label="series.Value.Values =\r\n                                    (from v in series.Value.Values\r\n                                     where v.x > Time.DateTimeToUnixTimeStamp(DateTime.UtcNow.AddDays(-2))\r\n                                     select v).ToList()", span="411-414", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n164 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)"];
n165 [label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="169-169", cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)"];
n128 [label="_nextUpdate = DateTime.Now.AddSeconds(2)", span="423-423", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n166 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)"];
n130 [label="Log.Error(err, ''LiveTradingResultHandler().Update(): '', true)", span="429-429", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Update()"];
n168 [label="!x.IsInternalFeed() && !x.Symbol.IsCanonical()", span="300-300", cluster="lambda expression"];
n169 [label="Exit lambda expression", span="300-300", cluster="lambda expression"];
n170 [label="Entry QuantConnect.Securities.Security.IsInternalFeed()", span="30-30", cluster="QuantConnect.Securities.Security.IsInternalFeed()"];
n171 [label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168", cluster="QuantConnect.Symbol.IsCanonical()"];
n173 [label="x.Symbol.Value", span="300-300", cluster="lambda expression"];
n174 [label="Exit lambda expression", span="300-300", cluster="lambda expression"];
n175 [label="var groupSize = 3", span="447-447", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n178 [label="deltaCharts.Values", span="456-456", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n188 [label="var packets = new[]\r\n            {\r\n                new LiveResultPacket(_job, new LiveResult {Orders = deltaOrders}),\r\n                new LiveResultPacket(_job, new LiveResult {Holdings = holdings}),\r\n                new LiveResultPacket(_job, new LiveResult\r\n                {\r\n                    Statistics = deltaStatistics,\r\n                    RuntimeStatistics = runtimeStatistics,\r\n                    ServerStatistics = serverStatistics\r\n                })\r\n            }", span="482-492", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n176 [label="var current = new Dictionary<string, Chart>()", span="448-448", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n183 [label="current.Count >= groupSize", span="466-466", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n177 [label="var chartPackets = new List<LiveResultPacket>()", span="449-449", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n180 [label="current.Add(deltaChart.Name, chart)", span="459-459", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n184 [label="chartPackets.Add(new LiveResultPacket(_job, new LiveResult { Charts = current }))", span="469-469", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n186 [label="current.Count > 0", span="476-476", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n187 [label="chartPackets.Add(new LiveResultPacket(_job, new LiveResult { Charts = current }))", span="478-478", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n189 [label="return packets.Concat(chartPackets);", span="495-495", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n179 [label="var chart = new Chart(deltaChart.Name)", span="458-458", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n181 [label="deltaChart.Name == _subscription || _subscription == ''*''", span="461-461", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n182 [label="chart.Series = deltaChart.Series", span="463-463", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n191 [label="Entry QuantConnect.Chart.Chart(string)", span="64-64", cluster="QuantConnect.Chart.Chart(string)"];
n185 [label="current = new Dictionary<string, Chart>()", span="471-471", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n192 [label="Entry QuantConnect.Packets.LiveResult.LiveResult()", span="147-147", cluster="QuantConnect.Packets.LiveResult.LiveResult()"];
n193 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n190 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="438-438", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SplitPackets(System.Collections.Generic.Dictionary<string, QuantConnect.Chart>, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)"];
n194 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n195 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", span="504-504", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)"];
n196 [label="Messages.Count > 500", span="506-506", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)"];
n198 [label="Messages.Enqueue(new DebugPacket(_job.ProjectId, _deployId, _compileId, message))", span="507-507", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)"];
n199 [label="AddToLogStore(message)", span="508-508", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)"];
n197 [label="return;", span="506-506", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)"];
n201 [label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)", span="74-74", cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string, bool)"];
n202 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)"];
n200 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)", span="504-504", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.DebugMessage(string)"];
n203 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", span="539-539", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)"];
n204 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", span="515-515", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)"];
n205 [label="Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _deployId, _compileId, message))", span="517-517", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)"];
n206 [label="AddToLogStore(message)", span="518-518", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)"];
n208 [label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17", cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)"];
n207 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)", span="515-515", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SystemDebugMessage(string)"];
n209 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", span="527-527", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)"];
n210 [label="Messages.Count > 500", span="530-530", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)"];
n212 [label="Messages.Enqueue(new LogPacket(_deployId, message))", span="531-531", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)"];
n213 [label="AddToLogStore(message)", span="532-532", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)"];
n211 [label="return;", span="530-530", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)"];
n215 [label="Entry QuantConnect.Packets.LogPacket.LogPacket(string, string)", span="47-47", cluster="QuantConnect.Packets.LogPacket.LogPacket(string, string)"];
n214 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)", span="527-527", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LogMessage(string)"];
n216 [label="Log.Debug(''LiveTradingResultHandler.AddToLogStore(): Adding'')", span="541-541", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)"];
n218 [label="_logStore.Add(new LogEntry(DateTime.Now.ToString(DateFormat.UI) + '' '' + message))", span="544-544", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)"];
n217 [label=_logStoreLock, span="542-542", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)"];
n219 [label="Log.Debug(''LiveTradingResultHandler.AddToLogStore(): Finished adding'')", span="546-546", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)"];
n221 [label="Entry QuantConnect.Logging.LogEntry.LogEntry(string)", span="44-44", cluster="QuantConnect.Logging.LogEntry.LogEntry(string)"];
n222 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)"];
n220 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)", span="539-539", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.AddToLogStore(string)"];
n223 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", span="554-554", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)"];
n224 [label="Messages.Count > 500", span="556-556", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)"];
n226 [label="Messages.Enqueue(new HandledErrorPacket(_deployId, message, stacktrace))", span="557-557", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)"];
n227 [label="AddToLogStore(message + (!string.IsNullOrEmpty(stacktrace) ? '': StackTrace: '' + stacktrace : string.Empty))", span="558-558", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)"];
n225 [label="return;", span="556-556", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)"];
n229 [label="Entry QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)", span="54-54", cluster="QuantConnect.Packets.HandledErrorPacket.HandledErrorPacket(string, string, string)"];
n228 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)", span="554-554", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ErrorMessage(string, string)"];
n230 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n231 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="565-565", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)"];
n232 [label="var packet = new SecurityTypesPacket { Types = types }", span="567-567", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)"];
n233 [label="Messages.Enqueue(packet)", span="568-568", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)"];
n235 [label="Entry QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()", span="52-52", cluster="QuantConnect.Packets.SecurityTypesPacket.SecurityTypesPacket()"];
n234 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)", span="565-565", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SecurityType(System.Collections.Generic.List<QuantConnect.SecurityType>)"];
n236 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", span="576-576", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)"];
n237 [label="Messages.Enqueue(new RuntimeErrorPacket(_job.UserId, _deployId, message, stacktrace))", span="578-578", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)"];
n238 [label="AddToLogStore(message + (!string.IsNullOrEmpty(stacktrace) ? '': StackTrace: '' + stacktrace : string.Empty))", span="579-579", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)"];
n240 [label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60", cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)"];
n239 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)", span="576-576", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeError(string, string)"];
n241 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="593-593", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n242 [label="Log.Debug(''LiveTradingResultHandler.Sample(): Sampling '' + chartName + ''.'' + seriesName)", span="595-595", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n244 [label="!Charts.ContainsKey(chartName)", span="599-599", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n245 [label="Charts.AddOrUpdate(chartName, new Chart(chartName))", span="601-601", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n246 [label="!Charts[chartName].Series.ContainsKey(seriesName)", span="605-605", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n247 [label="Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="607-607", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n248 [label="Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="611-611", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n249 [label="Log.Debug(''LiveTradingResultHandler.Sample(): Done sampling '' + chartName + ''.'' + seriesName)", span="613-613", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n243 [label=_chartLock, span="596-596", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n251 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)"];
n252 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="134-134", cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)"];
n253 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
n254 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)"];
n255 [label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370", cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)"];
n250 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="593-593", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)"];
n256 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", span="622-622", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)"];
n257 [label="value > 0", span="624-624", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)"];
n258 [label="Log.Debug(''LiveTradingResultHandler.SampleEquity(): '' + time.ToShortTimeString() + '' >'' + value)", span="626-626", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)"];
n259 [label="Sample(''Strategy Equity'', ''Equity'', 0, SeriesType.Candle, time, value)", span="627-627", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)"];
n260 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)", span="622-622", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleEquity(System.DateTime, decimal)"];
n261 [label="Entry System.DateTime.ToShortTimeString()", span="0-0", cluster="System.DateTime.ToShortTimeString()"];
n262 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="638-638", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)"];
n263 [label="Security security", span="641-641", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)"];
n264 [label="_algorithm.Securities.TryGetValue(symbol, out security) && !security.IsInternalFeed() && value > 0", span="642-642", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)"];
n267 [label="Sample(''Stockplot: '' + symbol.Value, ''Stockplot: '' + symbol.Value, 0, SeriesType.Line, time, value)", span="647-647", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)"];
n265 [label="var now = DateTime.UtcNow.ConvertFromUtc(security.Exchange.TimeZone)", span="644-644", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)"];
n268 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="638-638", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)"];
n269 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)"];
n266 [label="security.Exchange.Hours.IsOpen(now, security.IsExtendedMarketHours)", span="645-645", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)"];
n270 [label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604", cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)"];
n271 [label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)", span="124-124", cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, bool)"];
n272 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)", span="658-658", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)"];
n273 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)", span="658-658", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SamplePerformance(System.DateTime, decimal)"];
n274 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="671-671", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)"];
n275 [label="Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value)", span="673-673", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)"];
n276 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)", span="671-671", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleBenchmark(System.DateTime, decimal)"];
n277 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="681-681", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n278 [label="Log.Debug(''LiveTradingResultHandler.SampleRange(): Begin sampling'')", span="683-683", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n280 [label=updates, span="686-686", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n279 [label=_chartLock, span="684-684", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n281 [label="!Charts.ContainsKey(update.Name)", span="689-689", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n287 [label="Log.Debug(''LiveTradingResultHandler.SampleRange(): Finished sampling'')", span="708-708", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n282 [label="Charts.AddOrUpdate(update.Name, new Chart(update.Name))", span="691-691", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n283 [label="update.Series.Values", span="695-695", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n284 [label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="698-698", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n285 [label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit))", span="700-700", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n286 [label="Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="704-704", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n289 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)"];
n288 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="681-681", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
n290 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="715-715", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n291 [label="_algorithm = algorithm", span="717-717", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n297 [label="var debug = new FuncTextWriter(algorithm.Debug)", span="727-727", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n298 [label="var error = new FuncTextWriter(algorithm.Error)", span="728-728", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n292 [label="var types = new List<SecurityType>()", span="719-719", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n293 [label="_algorithm.Securities.Values", span="720-720", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n294 [label="!types.Contains(security.Type)", span="722-722", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n295 [label="types.Add(security.Type)", span="722-722", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n296 [label="SecurityType(types)", span="724-724", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n302 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)"];
n303 [label="Entry QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)", span="40-40", cluster="QuantConnect.Util.FuncTextWriter.FuncTextWriter(System.Action<string>)"];
n299 [label="Console.SetOut(debug)", span="729-729", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n300 [label="Console.SetError(error)", span="730-730", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n304 [label="Entry System.Console.SetOut(System.IO.TextWriter)", span="0-0", cluster="System.Console.SetOut(System.IO.TextWriter)"];
n301 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="715-715", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)"];
n305 [label="Entry System.Console.SetError(System.IO.TextWriter)", span="0-0", cluster="System.Console.SetError(System.IO.TextWriter)"];
n306 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="739-739", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)"];
n307 [label="var msg = status + (string.IsNullOrEmpty(message) ? string.Empty : '' '' + message)", span="741-741", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)"];
n309 [label="var packet = new AlgorithmStatusPacket(_job.AlgorithmId, _job.ProjectId, status, message)", span="743-743", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)"];
n308 [label="Log.Trace(''LiveTradingResultHandler.SendStatusUpdate(): '' + msg)", span="742-742", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)"];
n310 [label="Messages.Enqueue(packet)", span="744-744", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)"];
n312 [label="Entry QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, int, QuantConnect.AlgorithmStatus, string)", span="74-74", cluster="QuantConnect.Packets.AlgorithmStatusPacket.AlgorithmStatusPacket(string, int, QuantConnect.AlgorithmStatus, string)"];
n311 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="739-739", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)"];
n313 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", span="753-753", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)"];
n314 [label="Log.Debug(''LiveTradingResultHandler.RuntimeStatistic(): Begin setting statistic'')", span="755-755", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)"];
n316 [label="!_runtimeStatistics.ContainsKey(key)", span="758-758", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)"];
n317 [label="_runtimeStatistics.Add(key, value)", span="760-760", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)"];
n318 [label="_runtimeStatistics[key] = value", span="762-762", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)"];
n315 [label=_runtimeLock, span="756-756", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)"];
n319 [label="Log.Debug(''LiveTradingResultHandler.RuntimeStatistic(): End setting statistic'')", span="764-764", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)"];
n320 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)", span="753-753", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.RuntimeStatistic(string, string)"];
n321 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="776-776", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n322 [label="var charts = new Dictionary<string, Chart>(Charts)", span="781-781", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n323 [label="var result = new LiveResultPacket((LiveNodePacket)job, new LiveResult(charts, orders, profitLoss, holdings, statisticsResults.Summary, runtime))", span="784-784", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n324 [label="result.ProcessingTime = (DateTime.Now - _startTime).TotalSeconds", span="787-787", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n325 [label="StoreResult(result, false)", span="790-790", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n326 [label="result.Results = new LiveResult()", span="793-793", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n327 [label="_messagingHandler.Send(result)", span="796-796", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n328 [label=Exception, span="798-798", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n330 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="776-776", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n329 [label="Log.Error(err)", span="800-800", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)"];
n331 [label="SaveLogs(_job.DeployId, logs.Select(x => x.Message))", span="813-813", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)"];
n332 [label=Exception, span="815-815", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)"];
n334 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)", span="809-809", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)"];
n335 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n336 [label="Entry Unk.SaveLogs", span="", cluster="Unk.SaveLogs"];
n337 [label="Entry lambda expression", span="813-813", cluster="lambda expression"];
n333 [label="Log.Error(err)", span="817-817", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreLog(System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry>)"];
n338 [label="x.Message", span="813-813", cluster="lambda expression"];
n339 [label="Exit lambda expression", span="813-813", cluster="lambda expression"];
n340 [label="Log.Debug(''LiveTradingResultHandler.StoreResult(): Begin store result sampling'')", span="834-834", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n342 [label="packet.Type != PacketType.LiveResult", span="838-838", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n344 [label="var live = packet as LiveResultPacket", span="841-841", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n341 [label=_chartLock, span="835-835", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n343 [label="return;", span="838-838", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n345 [label="live != null", span="843-843", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n348 [label="Truncate(live.Results, start, stop)", span="850-850", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n349 [label="var highResolutionCharts = new Dictionary<string, Chart>(live.Results.Charts)", span="852-852", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n351 [label="var minuteCharts = minuteSampler.SampleCharts(live.Results.Charts, start, stop)", span="856-856", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n352 [label="live.Results.Charts = minuteCharts", span="859-859", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n353 [label="SaveResults(CreateKey(''minute''), live.Results)", span="860-860", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n355 [label="var tenminuteCharts = tenminuteSampler.SampleCharts(live.Results.Charts, start, stop)", span="864-864", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n356 [label="live.Results.Charts = tenminuteCharts", span="866-866", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n357 [label="SaveResults(CreateKey(''10minute''), live.Results)", span="867-867", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n358 [label="live.Results.Charts = highResolutionCharts", span="870-870", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n361 [label="Truncate(live.Results, start, stop)", span="874-874", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n362 [label="live.Results.Charts.Keys", span="876-876", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n364 [label="result.Orders = new Dictionary<int, Order>(live.Results.Orders)", span="879-879", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n365 [label="result.Holdings = new Dictionary<string, Holding>(live.Results.Holdings)", span="880-880", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n367 [label="result.Charts.Add(name, live.Results.Charts[name])", span="882-882", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n346 [label="var start = DateTime.UtcNow.Date", span="846-846", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n369 [label="Log.Error(''LiveResultHandler.StoreResult(): Result Null.'')", span="889-889", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n347 [label="var stop = start.AddDays(1)", span="847-847", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n374 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", span="949-949", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n350 [label="var minuteSampler = new SeriesSampler(TimeSpan.FromMinutes(1))", span="855-855", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n375 [label="Entry QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", span="31-31", cluster="QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)"];
n376 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)"];
n377 [label="Entry QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.DateTime, System.DateTime)", span="129-129", cluster="QuantConnect.SeriesSampler.SampleCharts(System.Collections.Generic.IDictionary<string, QuantConnect.Chart>, System.DateTime, System.DateTime)"];
n354 [label="var tenminuteSampler = new SeriesSampler(TimeSpan.FromMinutes(10))", span="863-863", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n378 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", span="982-982", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)"];
n379 [label="Entry QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)", span="29-29", cluster="QuantConnect.Lean.Engine.Results.BaseResultsHandler.SaveResults(string, QuantConnect.Result)"];
n359 [label="start = DateTime.UtcNow.RoundDown(TimeSpan.FromHours(1))", span="871-871", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n360 [label="stop = DateTime.UtcNow.RoundUp(TimeSpan.FromHours(1))", span="872-872", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n380 [label="Entry System.DateTime.RoundUp(System.TimeSpan)", span="567-567", cluster="System.DateTime.RoundUp(System.TimeSpan)"];
n363 [label="var result = new LiveResult()", span="878-878", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n370 [label="Log.Debug(''LiveTradingResultHandler.StoreResult(): End store result sampling'')", span="892-892", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n368 [label="SaveResults(CreateKey(''second_'' + CreateSafeChartName(name), ''yyyy-MM-dd-HH''), result)", span="884-884", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n366 [label="result.Charts = new Dictionary<string, Chart>()", span="881-881", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n381 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)"];
n382 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", span="992-992", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)"];
n371 [label=Exception, span="894-894", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n373 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)", span="830-830", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n372 [label="Log.Error(err)", span="896-896", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.StoreResult(QuantConnect.Packets.Packet, bool)"];
n383 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="904-904", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
n384 [label="_orderEvents.Enqueue(newEvent)", span="907-907", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
n385 [label="Log.Trace(''LiveTradingResultHandler.OrderEvent(): '' + newEvent, true)", span="910-910", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
n386 [label="Messages.Enqueue(new OrderEventPacket(_deployId, newEvent))", span="911-911", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
n387 [label="var message = ''New Order Event: '' + newEvent", span="913-913", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
n391 [label="Entry QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)", span="49-49", cluster="QuantConnect.Packets.OrderEventPacket.OrderEventPacket(string, QuantConnect.Orders.OrderEvent)"];
n388 [label="DebugMessage(message)", span="914-914", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
n389 [label="LogMessage(message)", span="917-917", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
n390 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="904-904", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)"];
n392 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", span="923-923", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()"];
n393 [label="!_exitTriggered && _algorithm != null && !_algorithm.GetLocked()", span="927-927", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()"];
n394 [label="ProcessSynchronousEvents(true)", span="929-929", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()"];
n396 [label="_exitTriggered = true", span="933-933", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()"];
n395 [label="StoreLog(_logStore)", span="930-930", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()"];
n399 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", span="1011-1011", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n397 [label="Update()", span="935-935", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()"];
n398 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()", span="923-923", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Exit()"];
n400 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", span="941-941", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()"];
n401 [label="Messages.Clear()", span="943-943", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()"];
n402 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()", span="941-941", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.PurgeQueue()"];
n403 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="71-71", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()"];
n404 [label="var unixDateStart = Time.DateTimeToUnixTimeStamp(start)", span="951-951", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n405 [label="var unixDateStop = Time.DateTimeToUnixTimeStamp(stop)", span="952-952", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n407 [label="result.Charts", span="958-958", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n415 [label="result.Charts = charts", span="970-970", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n416 [label="result.Orders = result.Orders.Values.Where(x => x.Time >= start && x.Time <= stop).ToDictionary(x => x.Id)", span="971-971", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n429 [label="x.Time >= start && x.Time <= stop", span="971-971", cluster="lambda expression"];
n417 [label="result.Orders", span="976-976", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n413 [label="newSeries.Values.AddRange(series.Values.Where(chartPoint => chartPoint.x >= unixDateStart && chartPoint.x <= unixDateStop))", span="966-966", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n426 [label="chartPoint.x >= unixDateStart && chartPoint.x <= unixDateStop", span="966-966", cluster="lambda expression"];
n406 [label="var charts = new Dictionary<string, Chart>()", span="957-957", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n410 [label="charts.Add(kvp.Key, newChart)", span="962-962", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n408 [label="var chart = kvp.Value", span="960-960", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n409 [label="var newChart = new Chart(chart.Name, chart.ChartType)", span="961-961", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n411 [label="chart.Series.Values", span="963-963", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n420 [label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53", cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)"];
n414 [label="newChart.AddSeries(newSeries)", span="967-967", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n412 [label="var newSeries = new Series(series.Name, series.SeriesType)", span="965-965", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n421 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType)", span="179-179", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)"];
n422 [label="Entry Unk.AddRange", span="", cluster="Unk.AddRange"];
n425 [label="Entry lambda expression", span="966-966", cluster="lambda expression"];
n423 [label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74", cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)"];
n424 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary"];
n428 [label="Entry lambda expression", span="971-971", cluster="lambda expression"];
n431 [label="Entry lambda expression", span="971-971", cluster="lambda expression"];
n418 [label="order.Value.Time = order.Value.Time.ToUniversalTime()", span="978-978", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n419 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)", span="949-949", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.Truncate(QuantConnect.Packets.LiveResult, System.DateTime, System.DateTime)"];
n427 [label="Exit lambda expression", span="966-966", cluster="lambda expression"];
n430 [label="Exit lambda expression", span="971-971", cluster="lambda expression"];
n432 [label="x.Id", span="971-971", cluster="lambda expression"];
n433 [label="Exit lambda expression", span="971-971", cluster="lambda expression"];
n434 [label="return string.Format(''{0}-{1}_{2}.json'', _job.DeployId, DateTime.UtcNow.ToString(dateFormat), suffix);", span="984-984", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)"];
n435 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)", span="982-982", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateKey(string, string)"];
n436 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)"];
n437 [label="return Uri.EscapeDataString(chartName);", span="994-994", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)"];
n438 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)", span="992-992", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.CreateSafeChartName(string)"];
n439 [label="Entry System.Uri.EscapeDataString(string)", span="0-0", cluster="System.Uri.EscapeDataString(string)"];
n440 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", span="1001-1001", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)"];
n441 [label="_subscription = symbol", span="1003-1003", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)"];
n442 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)", span="1001-1001", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.SetChartSubscription(string)"];
n443 [label="var time = DateTime.UtcNow", span="1013-1013", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n444 [label="time > _nextSample || forceProcess", span="1015-1015", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n486 [label="_algorithm.Notify.Messages.Count > 0 && (DateTime.Now < start.AddSeconds(1) || forceProcess)", span="1123-1123", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n446 [label="_nextSample = time.Add(ResamplePeriod)", span="1020-1020", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n461 [label="security.SetMarketPrice(new Tick(time, subscription.Configuration.Symbol, price, price))", span="1059-1059", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n462 [label="SampleAssetPrices(subscription.Configuration.Symbol, time, price)", span="1063-1063", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n463 [label="SampleEquity(time, Math.Round(_algorithm.Portfolio.TotalPortfolioValue, 4))", span="1069-1069", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n465 [label="!_algorithm.IsWarmingUp && time > _nextRunningStatus", span="1076-1076", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n466 [label="_nextRunningStatus = time.Add(TimeSpan.FromMinutes(1))", span="1078-1078", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n445 [label="Log.Debug(''LiveTradingResultHandler.ProcessSynchronousEvents(): Enter'')", span="1017-1017", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n447 [label="_dataFeed != null", span="1023-1023", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n495 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)"];
n448 [label="_dataFeed.Subscriptions", span="1025-1025", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n449 [label="subscription.Configuration.TickType == TickType.OpenInterest", span="1028-1028", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n451 [label="_algorithm.Securities.TryGetValue(subscription.Configuration.Symbol, out security)", span="1032-1032", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n452 [label="var price = subscription.RealtimePrice", span="1035-1035", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n450 [label="Security security", span="1031-1031", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n453 [label="var last = security.GetLastData()", span="1037-1037", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n457 [label="security.SetRealTimePrice(last)", span="1044-1044", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n454 [label="last != null && price > 0", span="1038-1038", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n456 [label="last.Value = price", span="1043-1043", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n496 [label="Entry QuantConnect.Securities.Security.GetLastData()", span="585-585", cluster="QuantConnect.Securities.Security.GetLastData()"];
n455 [label="last = last.Clone(last.IsFillForward)", span="1041-1041", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n497 [label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="249-249", cluster="QuantConnect.Data.BaseData.Clone(bool)"];
n458 [label="var cash = (from c in _algorithm.Portfolio.CashBook.Values\r\n                                    where c.SecuritySymbol == last.Symbol\r\n                                    select c).SingleOrDefault()", span="1047-1049", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n460 [label="cash.Update(last)", span="1053-1053", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n498 [label="Entry QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)", span="627-627", cluster="QuantConnect.Securities.Security.SetRealTimePrice(QuantConnect.Data.BaseData)"];
n459 [label="cash != null", span="1051-1051", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n499 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault"];
n501 [label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)"];
n502 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="612-612", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)"];
n500 [label="Entry Unk.Update", span="", cluster="Unk.Update"];
n464 [label="SampleRange(_algorithm.GetChartUpdates(true))", span="1072-1072", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n503 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)"];
n504 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="463-463", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)"];
n468 [label="var debugStopWatch = Stopwatch.StartNew()", span="1083-1083", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n467 [label="_api.SetAlgorithmStatus(_job.AlgorithmId, AlgorithmStatus.Running)", span="1079-1079", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n505 [label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265", cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)"];
n469 [label="_algorithm.DebugMessages.Count > 0 && debugStopWatch.ElapsedMilliseconds < 250", span="1084-1084", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n470 [label="string message", span="1086-1086", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n473 [label="var errorStopWatch = Stopwatch.StartNew()", span="1094-1094", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n471 [label="_algorithm.DebugMessages.TryDequeue(out message)", span="1087-1087", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n472 [label="DebugMessage(message)", span="1089-1089", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n474 [label="_algorithm.ErrorMessages.Count > 0 && errorStopWatch.ElapsedMilliseconds < 250", span="1095-1095", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n475 [label="string message", span="1097-1097", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n478 [label="var logStopWatch = Stopwatch.StartNew()", span="1105-1105", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n476 [label="_algorithm.ErrorMessages.TryDequeue(out message)", span="1098-1098", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n477 [label="ErrorMessage(message)", span="1100-1100", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n479 [label="_algorithm.LogMessages.Count > 0 && logStopWatch.ElapsedMilliseconds < 250", span="1106-1106", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n480 [label="string message", span="1108-1108", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n483 [label="_algorithm.RuntimeStatistics", span="1116-1116", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n481 [label="_algorithm.LogMessages.TryDequeue(out message)", span="1109-1109", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n482 [label="LogMessage(message)", span="1111-1111", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n484 [label="RuntimeStatistic(pair.Key, pair.Value)", span="1118-1118", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n485 [label="var start = DateTime.Now", span="1122-1122", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n487 [label="Notification message", span="1125-1125", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n493 [label="Log.Debug(''LiveTradingResultHandler.ProcessSynchronousEvents(): Exit'')", span="1141-1141", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n488 [label="_algorithm.Notify.Messages.TryDequeue(out message)", span="1126-1126", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n489 [label="Log.Trace(''LiveTradingResultHandler.ProcessSynchronousEvents(): Processing Notification...'')", span="1129-1129", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n490 [label="_messagingHandler.SendNotification(message)", span="1132-1132", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n492 [label="Log.Error(err, ''Sending notification: '' + message.GetType().FullName)", span="1136-1136", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n491 [label=Exception, span="1134-1134", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
n506 [label="Entry QuantConnect.Interfaces.IMessagingHandler.SendNotification(QuantConnect.Notifications.Notification)", span="56-56", cluster="QuantConnect.Interfaces.IMessagingHandler.SendNotification(QuantConnect.Notifications.Notification)"];
n507 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n494 [label="Exit QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)", span="1011-1011", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.ProcessSynchronousEvents(bool)"];
m0_50 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="BacktestingSetupHandler.cs"];
m0_69 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="421-421", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="BacktestingSetupHandler.cs"];
m0_20 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="BacktestingSetupHandler.cs"];
m0_21 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="145-145", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_36 [label="_maxRuntime = GetMaximumRuntime(job.PeriodStart, job.PeriodFinish, algorithm.SubscriptionManager.Count)", span="197-197", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="BacktestingSetupHandler.cs"];
m0_22 [label="var job = baseJob as BacktestNodePacket", span="147-147", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_34 [label="!initializeComplete", span="194-194", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_37 [label="_startingCaptial = algorithm.Portfolio.Cash", span="200-200", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_28 [label="Errors.Add(''Could not create instance of algorithm'')", span="160-160", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_31 [label="Errors.Add(''Algorithm start date was never set'')", span="167-167", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_33 [label="var initializeComplete = Isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(10), () =>\r\n            {\r\n                try\r\n                {\r\n                    //Algorithm is backtesting, not live:\r\n                    algorithm.SetLiveMode(false);\r\n                    //Set the backtest level asset ram allocation limits\r\n                    algorithm.SetAssetLimits(500, 100, 30);\r\n                    //Set the algorithm time before we even initialize:\r\n                    algorithm.SetDateTime(job.PeriodStart);\r\n                    //Initialise the algorithm, get the required data:\r\n                    algorithm.Initialize();\r\n                    //Add currency data feeds that weren't explicity added in Initialize\r\n                    algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(algorithm.Securities, algorithm.SubscriptionManager);\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err.Message);\r\n                }\r\n            })", span="172-191", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_39 [label="_maxOrders = 10000", span="205-205", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_40 [label="_maxOrders = int.MaxValue", span="209-209", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_41 [label="algorithm.SetMaximumOrders(_maxOrders)", span="213-213", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_42 [label="_startingDate = job.PeriodStart", span="216-216", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_44 [label="Log.Trace(''Dates: Start: '' + job.PeriodStart.ToShortDateString() + '' End: '' + job.PeriodFinish.ToShortDateString() + '' Cash: '' + _startingCaptial.ToString(''C''))", span="220-220", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_45 [label="Errors.Count > 0", span="222-222", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_24 [label="throw new ArgumentException(''Expected BacktestNodePacket but received '' + baseJob.GetType().Name);", span="150-150", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_26 [label="brokerage = new BacktestingBrokerage(algorithm)", span="156-156", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_27 [label="algorithm == null", span="158-158", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_29 [label="return false;", span="161-161", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_23 [label="job == null", span="148-148", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_25 [label="Log.Trace(string.Format(''BacktestingSetupHandler.Setup(): Setting up job: Plan: {0}, UID: {1}, PID: {2}, Version: {3}, Source: {4}'', job.UserPlan, job.UserId, job.ProjectId, job.Version, job.RequestSource))", span="153-153", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_30 [label="job.PeriodStart == default(DateTime)", span="165-165", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_38 [label="job.UserPlan == UserPlan.Free", span="203-203", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_43 [label="Log.Trace(''SetUp Backtesting: User: '' + job.UserId + '' ProjectId: '' + job.ProjectId + '' AlgoId: '' + job.AlgorithmId)", span="219-219", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_35 [label="return false;", span="194-194", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_32 [label="return false;", span="168-168", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_47 [label="return initializeComplete;", span="226-226", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_46 [label="initializeComplete = false", span="224-224", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_48 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="145-145", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="BacktestingSetupHandler.cs"];
m0_17 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_67 [label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err.Message)", span="189-189", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_61 [label="algorithm.SetLiveMode(false)", span="177-177", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_62 [label="algorithm.SetAssetLimits(500, 100, 30)", span="179-179", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_63 [label="algorithm.SetDateTime(job.PeriodStart)", span="181-181", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_64 [label="algorithm.Initialize()", span="183-183", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_65 [label="algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(algorithm.Securities, algorithm.SubscriptionManager)", span="185-185", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_60 [label="Entry lambda expression", span="172-191", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_66 [label=Exception, span="187-187", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_68 [label="Exit lambda expression", span="172-191", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_18 [label="names.SingleOrDefault()", span="131-131", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_19 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_59 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="BacktestingSetupHandler.cs"];
m0_4 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", span="125-125", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="BacktestingSetupHandler.cs"];
m0_7 [label="var loader = new Loader(TimeSpan.FromSeconds(10), names => names.SingleOrDefault()) {TryLoadDebugInformation = true}", span="131-131", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="BacktestingSetupHandler.cs"];
m0_6 [label="IAlgorithm algorithm", span="128-128", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="BacktestingSetupHandler.cs"];
m0_8 [label="bool complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, out algorithm, out error)", span="132-132", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="BacktestingSetupHandler.cs"];
m0_5 [label="string error", span="127-127", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="BacktestingSetupHandler.cs"];
m0_9 [label="!complete", span="133-133", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="BacktestingSetupHandler.cs"];
m0_10 [label="throw new Exception(error + '' Try re-building algorithm.'');", span="133-133", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="BacktestingSetupHandler.cs"];
m0_11 [label="return algorithm;", span="135-135", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="BacktestingSetupHandler.cs"];
m0_12 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", span="125-125", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(string)", file="BacktestingSetupHandler.cs"];
m0_16 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BacktestingSetupHandler.cs"];
m0_15 [label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="281-281", cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="BacktestingSetupHandler.cs"];
m0_55 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="156-156", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="BacktestingSetupHandler.cs"];
m0_57 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="427-427", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="BacktestingSetupHandler.cs"];
m0_49 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="BacktestingSetupHandler.cs"];
m0_53 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="41-41", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingSetupHandler.cs"];
m0_0 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="111-111", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="BacktestingSetupHandler.cs"];
m0_1 [label="Errors = new List<string>()", span="113-113", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="BacktestingSetupHandler.cs"];
m0_2 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="111-111", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="BacktestingSetupHandler.cs"];
m0_71 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="292-292", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="BacktestingSetupHandler.cs"];
m0_51 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="BacktestingSetupHandler.cs"];
m0_73 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="85-85", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="BacktestingSetupHandler.cs"];
m0_86 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="BacktestingSetupHandler.cs"];
m0_54 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BacktestingSetupHandler.cs"];
m0_70 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="436-436", cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="BacktestingSetupHandler.cs"];
m0_58 [label="Entry System.DateTime.ToShortDateString()", span="0-0", cluster="System.DateTime.ToShortDateString()", file="BacktestingSetupHandler.cs"];
m0_56 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", span="237-237", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_74 [label="double maxRunTime = 0", span="239-239", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_75 [label="var jobDays = (finish - start).TotalDays", span="240-240", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_76 [label="maxRunTime = 10 * subscriptionCount * jobDays", span="242-242", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_84 [label="return TimeSpan.FromSeconds(maxRunTime);", span="264-264", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_81 [label="Log.Trace(''BacktestingSetupHandler.GetMaxRunTime(): Job Days: '' + jobDays + '' Max Runtime: '' + Math.Round(maxRunTime / 60) + '' min'')", span="256-256", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_77 [label="(maxRunTime / 3600) > 12", span="245-245", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_79 [label="maxRunTime < 60", span="250-250", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_78 [label="maxRunTime = 3600 * 12", span="248-248", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_80 [label="maxRunTime = 60", span="253-253", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_82 [label="OS.IsWindows", span="259-259", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_83 [label="maxRunTime = 24 * 60 * 60", span="261-261", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_85 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", span="237-237", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, int)", file="BacktestingSetupHandler.cs"];
m0_52 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BacktestingSetupHandler.cs"];
m0_14 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="BacktestingSetupHandler.cs"];
m0_72 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="217-217", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="BacktestingSetupHandler.cs"];
m0_13 [label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="83-83", cluster="QuantConnect.AlgorithmFactory.Loader.Loader(System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="BacktestingSetupHandler.cs"];
m0_92 [label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", span="", file="BacktestingSetupHandler.cs"];
m0_93 [label="QuantConnect.Interfaces.IAlgorithm", span="", file="BacktestingSetupHandler.cs"];
m0_94 [label=job, span="", file="BacktestingSetupHandler.cs"];
m2_32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BrokerageModelAlgorithm.cs"];
m2_137 [label="Entry QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", span="323-323", cluster="QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", file="BrokerageModelAlgorithm.cs"];
m2_138 [label="universe._allSymbols = universe._allSymbols.Where(predicate).ToList()", span="325-325", cluster="QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", file="BrokerageModelAlgorithm.cs"];
m2_139 [label="universe._isDynamic = true", span="326-326", cluster="QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", file="BrokerageModelAlgorithm.cs"];
m2_140 [label="return universe;", span="327-327", cluster="QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", file="BrokerageModelAlgorithm.cs"];
m2_141 [label="Exit QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", span="323-323", cluster="QuantConnect.Securities.OptionFilterUniverseEx.Where(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, bool>)", file="BrokerageModelAlgorithm.cs"];
m2_10 [label="Entry QuantConnect.Securities.OptionFilterUniverse.WeeklysOnly()", span="108-108", cluster="QuantConnect.Securities.OptionFilterUniverse.WeeklysOnly()", file="BrokerageModelAlgorithm.cs"];
m2_11 [label="_type = Type.Weeklys", span="110-110", cluster="QuantConnect.Securities.OptionFilterUniverse.WeeklysOnly()", color=green, community=0, file="BrokerageModelAlgorithm.cs"];
m2_12 [label="return this;", span="111-111", cluster="QuantConnect.Securities.OptionFilterUniverse.WeeklysOnly()", color=green, community=0, file="BrokerageModelAlgorithm.cs"];
m2_13 [label="Exit QuantConnect.Securities.OptionFilterUniverse.WeeklysOnly()", span="108-108", cluster="QuantConnect.Securities.OptionFilterUniverse.WeeklysOnly()", file="BrokerageModelAlgorithm.cs"];
m2_134 [label="Entry QuantConnect.Securities.OptionFilterUniverse.System.Collections.IEnumerable.GetEnumerator()", span="306-306", cluster="QuantConnect.Securities.OptionFilterUniverse.System.Collections.IEnumerable.GetEnumerator()", file="BrokerageModelAlgorithm.cs"];
m2_135 [label="return _allSymbols.GetEnumerator();", span="308-308", cluster="QuantConnect.Securities.OptionFilterUniverse.System.Collections.IEnumerable.GetEnumerator()", file="BrokerageModelAlgorithm.cs"];
m2_136 [label="Exit QuantConnect.Securities.OptionFilterUniverse.System.Collections.IEnumerable.GetEnumerator()", span="306-306", cluster="QuantConnect.Securities.OptionFilterUniverse.System.Collections.IEnumerable.GetEnumerator()", file="BrokerageModelAlgorithm.cs"];
m2_71 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="BrokerageModelAlgorithm.cs"];
m2_33 [label="Entry QuantConnect.Securities.Option.OptionSymbol.IsStandardContract(QuantConnect.Symbol)", span="18-18", cluster="QuantConnect.Securities.Option.OptionSymbol.IsStandardContract(QuantConnect.Symbol)", file="BrokerageModelAlgorithm.cs"];
m2_24 [label="Entry lambda expression", span="124-134", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_35 [label=_type, span="138-138", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_34 [label="Entry lambda expression", span="136-149", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_36 [label="Type.Weeklys", span="140-140", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_38 [label="Type.Standard", span="142-142", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_40 [label="Type.Standard | Type.Weeklys", span="144-144", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_42 [label="return false;", span="147-147", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_57 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_61 [label="ordered[0].ID.Date == x.ID.Date", span="163-163", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_72 [label="Entry lambda expression", span="177-177", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_76 [label="ordered[0].ID.Date == x.ID.Date", span="178-178", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_110 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_113 [label="Entry lambda expression", span="211-211", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_116 [label="Entry lambda expression", span="212-212", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_25 [label="var dt = symbol.ID.Date", span="126-126", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_28 [label="var res = OptionSymbol.IsStandardContract(symbol)", span="130-130", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_37 [label="return !memoizedIsStandardType(x);", span="141-141", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_39 [label="return memoizedIsStandardType(x);", span="143-143", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_43 [label="Exit lambda expression", span="136-149", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_41 [label="return true;", span="145-145", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_60 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_59 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_58 [label="x.ID.Date", span="162-162", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_62 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_75 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_74 [label="Exit lambda expression", span="177-177", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_73 [label="x.ID.Date", span="177-177", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_77 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_112 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_111 [label="x.ID.StrikePrice", span="210-210", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_115 [label="Exit lambda expression", span="211-211", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_114 [label="x.ID.StrikePrice", span="211-211", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_118 [label="Exit lambda expression", span="212-212", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_117 [label="symbol.ID.StrikePrice", span="212-212", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_26 [label="memoizedMap.ContainsKey(dt)", span="128-128", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_27 [label="return memoizedMap[dt];", span="129-129", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_29 [label="memoizedMap[dt] = res", span="131-131", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_30 [label="return res;", span="133-133", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_31 [label="Exit lambda expression", span="124-134", cluster="lambda expression", file="BrokerageModelAlgorithm.cs"];
m2_14 [label="Entry QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", span="119-119", cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="BrokerageModelAlgorithm.cs"];
m2_17 [label="var filtered = _allSymbols.Where(x =>\r\n            {\r\n                switch (_type)\r\n                {\r\n                    case Type.Weeklys:\r\n                        return !memoizedIsStandardType(x);\r\n                    case Type.Standard:\r\n                        return memoizedIsStandardType(x);\r\n                    case Type.Standard | Type.Weeklys:\r\n                        return true;\r\n                    default:\r\n                        return false;\r\n                }\r\n            })", span="136-149", cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="BrokerageModelAlgorithm.cs"];
m2_18 [label="_allSymbols = filtered.ToList()", span="151-151", cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="BrokerageModelAlgorithm.cs"];
m2_19 [label="return this;", span="152-152", cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="BrokerageModelAlgorithm.cs"];
m2_16 [label="Func<Symbol, bool> memoizedIsStandardType = symbol =>\r\n            {\r\n                var dt = symbol.ID.Date;\r\n\r\n                if (memoizedMap.ContainsKey(dt))\r\n                    return memoizedMap[dt];\r\n                var res = OptionSymbol.IsStandardContract(symbol);\r\n                memoizedMap[dt] = res;\r\n\r\n                return res;\r\n            }", span="124-134", cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="BrokerageModelAlgorithm.cs"];
m2_15 [label="var memoizedMap = new Dictionary<DateTime, bool>()", span="122-122", cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="BrokerageModelAlgorithm.cs"];
m2_20 [label="Exit QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", span="119-119", cluster="QuantConnect.Securities.OptionFilterUniverse.ApplyOptionTypesFilter()", file="BrokerageModelAlgorithm.cs"];
m2_108 [label="Entry System.Collections.Generic.List<T>.BinarySearch(T)", span="0-0", cluster="System.Collections.Generic.List<T>.BinarySearch(T)", file="BrokerageModelAlgorithm.cs"];
m2_0 [label="Entry QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", span="86-86", cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="BrokerageModelAlgorithm.cs"];
m2_1 [label="_allSymbols = allSymbols", span="88-88", cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", color=green, community=0, file="BrokerageModelAlgorithm.cs"];
m2_2 [label="_underlying = underlying", span="89-89", cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", color=green, community=0, file="BrokerageModelAlgorithm.cs"];
m2_3 [label="_type = Type.Standard", span="90-90", cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", color=green, community=0, file="BrokerageModelAlgorithm.cs"];
m2_4 [label="_isDynamic = false", span="91-91", cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", color=green, community=0, file="BrokerageModelAlgorithm.cs"];
m2_5 [label="Exit QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", span="86-86", cluster="QuantConnect.Securities.OptionFilterUniverse.OptionFilterUniverse(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, QuantConnect.Data.BaseData)", file="BrokerageModelAlgorithm.cs"];
m2_23 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="BrokerageModelAlgorithm.cs"];
m2_63 [label="Entry QuantConnect.Securities.OptionFilterUniverse.BackMonths()", span="174-174", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="BrokerageModelAlgorithm.cs"];
m2_64 [label="!_allSymbols.Any()", span="176-176", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="BrokerageModelAlgorithm.cs"];
m2_65 [label="return this;", span="176-176", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="BrokerageModelAlgorithm.cs"];
m2_66 [label="var ordered = this.OrderBy(x => x.ID.Date).ToList()", span="177-177", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="BrokerageModelAlgorithm.cs"];
m2_68 [label="_allSymbols = backMonths.ToList()", span="180-180", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="BrokerageModelAlgorithm.cs"];
m2_69 [label="return this;", span="181-181", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="BrokerageModelAlgorithm.cs"];
m2_67 [label="var backMonths = ordered.SkipWhile(x => ordered[0].ID.Date == x.ID.Date)", span="178-178", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="BrokerageModelAlgorithm.cs"];
m2_70 [label="Exit QuantConnect.Securities.OptionFilterUniverse.BackMonths()", span="174-174", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonths()", file="BrokerageModelAlgorithm.cs"];
m2_78 [label="Entry QuantConnect.Securities.OptionFilterUniverse.BackMonth()", span="188-188", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonth()", file="BrokerageModelAlgorithm.cs"];
m2_79 [label="return BackMonths().FrontMonth();", span="190-190", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonth()", file="BrokerageModelAlgorithm.cs"];
m2_80 [label="Exit QuantConnect.Securities.OptionFilterUniverse.BackMonth()", span="188-188", cluster="QuantConnect.Securities.OptionFilterUniverse.BackMonth()", file="BrokerageModelAlgorithm.cs"];
m2_106 [label="Entry System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", span="264-264", cluster="System.Collections.Generic.IEnumerable<T>.DistinctBy<T, TPropery>(System.Func<T, TPropery>)", file="BrokerageModelAlgorithm.cs"];
m2_119 [label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="271-271", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_120 [label="_underlying == null", span="273-273", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_121 [label="return this;", span="275-275", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_124 [label="var minExpiryToDate = _underlying.Time.Date + minExpiry", span="280-280", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_125 [label="var maxExpiryToDate = _underlying.Time.Date + maxExpiry", span="281-281", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_126 [label="var filtered =\r\n                   from symbol in _allSymbols\r\n                   let contract = symbol.ID\r\n                   where contract.Date >= minExpiryToDate\r\n                      && contract.Date <= maxExpiryToDate\r\n                   select symbol", span="283-288", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_127 [label="_allSymbols = filtered.ToList()", span="290-290", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_128 [label="return this;", span="292-292", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_122 [label="maxExpiry > Time.MaxTimeSpan", span="278-278", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_123 [label="maxExpiry = Time.MaxTimeSpan", span="278-278", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_129 [label="Exit QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="271-271", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BrokerageModelAlgorithm.cs"];
m2_152 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="BrokerageModelAlgorithm.cs"];
m2_81 [label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="199-199", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_82 [label="_underlying == null", span="201-201", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_83 [label="return this;", span="203-203", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_84 [label="_underlying.Time.Date != _uniqueStrikesResolveDate", span="206-206", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_85 [label="_uniqueStrikes = _allSymbols\r\n                    .DistinctBy(x => x.ID.StrikePrice)\r\n                    .OrderBy(x => x.ID.StrikePrice)\r\n                    .Select(symbol => symbol.ID.StrikePrice)\r\n                    .ToList()", span="209-213", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_86 [label="_uniqueStrikesResolveDate = _underlying.Time.Date", span="215-215", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_87 [label="_isDynamic = true", span="219-219", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_88 [label="var index = _uniqueStrikes.BinarySearch(_underlying.Price)", span="222-222", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_91 [label="index >= _uniqueStrikes.Count", span="228-228", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_92 [label="_allSymbols = Enumerable.Empty<Symbol>()", span="231-231", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_93 [label="return this;", span="232-232", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_98 [label="indexMaxPrice >= _uniqueStrikes.Count", span="243-243", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_99 [label="indexMaxPrice = _uniqueStrikes.Count - 1", span="245-245", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_100 [label="var minPrice = _uniqueStrikes[indexMinPrice]", span="248-248", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_101 [label="var maxPrice = _uniqueStrikes[indexMaxPrice]", span="249-249", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_102 [label="var filtered =\r\n                    from symbol in _allSymbols\r\n                    let contract = symbol.ID\r\n                    where contract.StrikePrice >= minPrice\r\n                        && contract.StrikePrice <= maxPrice\r\n                    select symbol", span="251-256", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_103 [label="_allSymbols = filtered.ToList()", span="258-258", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_104 [label="return this;", span="260-260", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_89 [label="index < 0", span="223-223", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_90 [label="index = ~index", span="226-226", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_94 [label="var indexMinPrice = index + minStrike", span="237-237", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_97 [label="var indexMaxPrice = index + maxStrike - 1", span="242-242", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_96 [label="indexMinPrice = 0", span="240-240", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_95 [label="indexMinPrice < 0", span="238-238", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_105 [label="Exit QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="199-199", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BrokerageModelAlgorithm.cs"];
m2_130 [label="Entry QuantConnect.Securities.OptionFilterUniverse.GetEnumerator()", span="298-298", cluster="QuantConnect.Securities.OptionFilterUniverse.GetEnumerator()", file="BrokerageModelAlgorithm.cs"];
m2_131 [label="return _allSymbols.GetEnumerator();", span="300-300", cluster="QuantConnect.Securities.OptionFilterUniverse.GetEnumerator()", file="BrokerageModelAlgorithm.cs"];
m2_132 [label="Exit QuantConnect.Securities.OptionFilterUniverse.GetEnumerator()", span="298-298", cluster="QuantConnect.Securities.OptionFilterUniverse.GetEnumerator()", file="BrokerageModelAlgorithm.cs"];
m2_45 [label="Entry QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", span="159-159", cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="BrokerageModelAlgorithm.cs"];
m2_46 [label="!_allSymbols.Any()", span="161-161", cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="BrokerageModelAlgorithm.cs"];
m2_47 [label="return this;", span="161-161", cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="BrokerageModelAlgorithm.cs"];
m2_48 [label="var ordered = this.OrderBy(x => x.ID.Date).ToList()", span="162-162", cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="BrokerageModelAlgorithm.cs"];
m2_50 [label="_allSymbols = frontMonth.ToList()", span="165-165", cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="BrokerageModelAlgorithm.cs"];
m2_51 [label="return this;", span="166-166", cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="BrokerageModelAlgorithm.cs"];
m2_49 [label="var frontMonth = ordered.TakeWhile(x => ordered[0].ID.Date == x.ID.Date)", span="163-163", cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="BrokerageModelAlgorithm.cs"];
m2_52 [label="Exit QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", span="159-159", cluster="QuantConnect.Securities.OptionFilterUniverse.FrontMonth()", file="BrokerageModelAlgorithm.cs"];
m2_55 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BrokerageModelAlgorithm.cs"];
m2_142 [label="Entry QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", span="333-333", cluster="QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", file="BrokerageModelAlgorithm.cs"];
m2_143 [label="universe._allSymbols = universe._allSymbols.Select(mapFunc).ToList()", span="335-335", cluster="QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", file="BrokerageModelAlgorithm.cs"];
m2_144 [label="universe._isDynamic = true", span="336-336", cluster="QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", file="BrokerageModelAlgorithm.cs"];
m2_145 [label="return universe;", span="337-337", cluster="QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", file="BrokerageModelAlgorithm.cs"];
m2_146 [label="Exit QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", span="333-333", cluster="QuantConnect.Securities.OptionFilterUniverseEx.Select(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, QuantConnect.Symbol>)", file="BrokerageModelAlgorithm.cs"];
m2_133 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="BrokerageModelAlgorithm.cs"];
m2_109 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="BrokerageModelAlgorithm.cs"];
m2_54 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BrokerageModelAlgorithm.cs"];
m2_53 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="BrokerageModelAlgorithm.cs"];
m2_21 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BrokerageModelAlgorithm.cs"];
m2_44 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="BrokerageModelAlgorithm.cs"];
m2_147 [label="Entry QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="343-343", cluster="QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="BrokerageModelAlgorithm.cs"];
m2_148 [label="universe._allSymbols = universe._allSymbols.SelectMany(mapFunc).ToList()", span="345-345", cluster="QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="BrokerageModelAlgorithm.cs"];
m2_149 [label="universe._isDynamic = true", span="346-346", cluster="QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="BrokerageModelAlgorithm.cs"];
m2_150 [label="return universe;", span="347-347", cluster="QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="BrokerageModelAlgorithm.cs"];
m2_151 [label="Exit QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="343-343", cluster="QuantConnect.Securities.OptionFilterUniverseEx.SelectMany(QuantConnect.Securities.OptionFilterUniverse, System.Func<QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="BrokerageModelAlgorithm.cs"];
m2_107 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BrokerageModelAlgorithm.cs"];
m2_6 [label="Entry QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", span="98-98", cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="BrokerageModelAlgorithm.cs"];
m2_7 [label="_type |= Type.Weeklys", span="100-100", cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", color=green, community=0, file="BrokerageModelAlgorithm.cs"];
m2_8 [label="return this;", span="101-101", cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", color=green, community=0, file="BrokerageModelAlgorithm.cs"];
m2_9 [label="Exit QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", span="98-98", cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="BrokerageModelAlgorithm.cs"];
m2_56 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="BrokerageModelAlgorithm.cs"];
m2_153 [label="QuantConnect.Securities.OptionFilterUniverse", span="", file="BrokerageModelAlgorithm.cs"];
m2_156 [label=ordered, span="", file="BrokerageModelAlgorithm.cs"];
m2_157 [label=ordered, span="", file="BrokerageModelAlgorithm.cs"];
m2_155 [label=memoizedIsStandardType, span="", file="BrokerageModelAlgorithm.cs"];
m2_154 [label=memoizedMap, span="", file="BrokerageModelAlgorithm.cs"];
m4_173 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="420-420", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="BrokerageSetupHandler.cs"];
m4_174 [label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="422-422", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="BrokerageSetupHandler.cs"];
m4_175 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="420-420", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="BrokerageSetupHandler.cs"];
m4_147 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1366-1366", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="BrokerageSetupHandler.cs"];
m4_420 [label="Entry Unk.Split", span="", cluster="Unk.Split", file="BrokerageSetupHandler.cs"];
m4_179 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="428-428", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_180 [label="var array = GetIndicatorArray(first, second, third, fourth)", span="430-430", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_181 [label="PlotIndicator(chart, array[0], array[1], array[2], array[3])", span="431-431", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_182 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="428-428", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_184 [label="Entry Unk.PlotIndicator", span="", cluster="Unk.PlotIndicator", file="BrokerageSetupHandler.cs"];
m4_254 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="BrokerageSetupHandler.cs"];
m4_311 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="423-423", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="BrokerageSetupHandler.cs"];
m4_162 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="BrokerageSetupHandler.cs"];
m4_121 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="BrokerageSetupHandler.cs"];
m4_204 [label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="488-488", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_205 [label="var name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="490-490", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_206 [label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="491-491", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_207 [label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="492-492", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_209 [label="RegisterIndicator(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), pyselector)", span="494-494", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_208 [label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="493-493", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_210 [label="return filteredIdentity;", span="495-495", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_211 [label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="488-488", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_130 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="288-288", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_131 [label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution)", span="290-290", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_132 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="288-288", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_419 [label="Entry Unk.Repr", span="", cluster="Unk.Repr", file="BrokerageSetupHandler.cs"];
m4_34 [label="Entry Unk.AddUniverse", span="", cluster="Unk.AddUniverse", file="BrokerageSetupHandler.cs"];
m4_3 [label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="BrokerageSetupHandler.cs"];
m4_24 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325", cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="BrokerageSetupHandler.cs"];
m4_266 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", span="583-583", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_267 [label="var symbols = GetSymbolsFromPyObject(tickers)", span="585-585", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_270 [label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType);\r\n                if (config == null) return null;\r\n                \r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="588-598", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_268 [label="symbols == null", span="586-586", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_269 [label="return null;", span="586-586", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_271 [label="return _converter.GetDataFrame(History(requests.Where(x => x != null)).Memoize());", span="600-600", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_272 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", span="583-583", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_397 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="BrokerageSetupHandler.cs"];
m4_422 [label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0", cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="BrokerageSetupHandler.cs"];
m4_295 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="612-612", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_296 [label="return History(type, tickers, Time - span, Time, resolution);", span="614-614", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_297 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="612-612", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_348 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="900-900", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="BrokerageSetupHandler.cs"];
m4_40 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="BrokerageSetupHandler.cs"];
m4_383 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BrokerageSetupHandler.cs"];
m4_123 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="59-59", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="BrokerageSetupHandler.cs"];
m4_230 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="538-538", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_231 [label="var symbols = GetSymbolsFromPyObject(tickers)", span="540-540", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_234 [label="return _converter.GetDataFrame(History(symbols, start, end, resolution));", span="543-543", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_232 [label="symbols == null", span="541-541", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_233 [label="return null;", span="541-541", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_235 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="538-538", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_421 [label="Entry Unk.Replace", span="", cluster="Unk.Replace", file="BrokerageSetupHandler.cs"];
m4_213 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1444-1444", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BrokerageSetupHandler.cs"];
m4_161 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="BrokerageSetupHandler.cs"];
m4_141 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="326-326", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BrokerageSetupHandler.cs"];
m4_142 [label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="328-328", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BrokerageSetupHandler.cs"];
m4_143 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="326-326", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BrokerageSetupHandler.cs"];
m4_381 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BrokerageSetupHandler.cs"];
m4_79 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="BrokerageSetupHandler.cs"];
m4_364 [label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31", cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="BrokerageSetupHandler.cs"];
m4_382 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="BrokerageSetupHandler.cs"];
m4_408 [label="Entry lambda expression", span="792-792", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_38 [label="coarse(c).Select(x => (Symbol)x)", span="110-110", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_37 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_39 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_42 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_43 [label="(Symbol)x", span="110-110", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_44 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_51 [label="coarse(c).Select(x => (Symbol)x)", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_57 [label="fine(f).Select(x => (Symbol)x)", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_50 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_56 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_52 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_53 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_54 [label="(Symbol)x", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_55 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_58 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_59 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_60 [label="(Symbol)x", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_61 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_67 [label="selector(d).Select(x => (string)x)", span="141-141", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_66 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_68 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_69 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_70 [label="(string)x", span="141-141", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_71 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_77 [label="selector(d).Select(x => (string)x)", span="153-153", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_76 [label="Entry lambda expression", span="153-153", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_78 [label="Exit lambda expression", span="153-153", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_80 [label="Entry lambda expression", span="153-153", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_81 [label="(string)x", span="153-153", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_82 [label="Exit lambda expression", span="153-153", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_88 [label="selector(d).Select(x => (string)x)", span="168-168", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_87 [label="Entry lambda expression", span="168-168", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_89 [label="Exit lambda expression", span="168-168", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_90 [label="Entry lambda expression", span="168-168", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_91 [label="(string)x", span="168-168", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_92 [label="Exit lambda expression", span="168-168", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_125 [label="selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))", span="277-278", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_128 [label="x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market)", span="278-278", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_124 [label="Entry lambda expression", span="277-278", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_126 [label="Exit lambda expression", span="277-278", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_127 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_129 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_164 [label="Entry lambda expression", span="394-394", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_165 [label="x != null", span="394-394", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_166 [label="Exit lambda expression", span="394-394", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_170 [label="Entry lambda expression", span="408-408", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_171 [label="x != null", span="408-408", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_172 [label="Exit lambda expression", span="408-408", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_176 [label="Entry lambda expression", span="422-422", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_177 [label="x != null", span="422-422", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_178 [label="Exit lambda expression", span="422-422", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_249 [label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType)", span="563-564", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_261 [label="s.Type.BaseType == CreateType(type).BaseType", span="564-564", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_252 [label="return CreateHistoryRequest(security, config, start, end, resolution);", span="567-567", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_247 [label="Entry lambda expression", span="560-568", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_263 [label="Entry lambda expression", span="570-570", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_248 [label="var security = Securities[x]", span="562-562", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_250 [label="config == null", span="565-565", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_257 [label="Entry lambda expression", span="563-563", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_260 [label="Entry lambda expression", span="564-564", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_251 [label="return null;", span="565-565", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_253 [label="Exit lambda expression", span="560-568", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_258 [label="s.Resolution", span="563-563", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_259 [label="Exit lambda expression", span="563-563", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_262 [label="Exit lambda expression", span="564-564", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_264 [label="x != null", span="570-570", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_265 [label="Exit lambda expression", span="570-570", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_275 [label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType)", span="591-592", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_290 [label="s.Type.BaseType == CreateType(type).BaseType", span="592-592", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_278 [label="Resolution? res = resolution ?? security.Resolution", span="595-595", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_279 [label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="596-596", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_280 [label="return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="597-597", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_273 [label="Entry lambda expression", span="588-598", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_292 [label="Entry lambda expression", span="600-600", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_274 [label="var security = Securities[x]", span="590-590", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_276 [label="config == null", span="593-593", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_286 [label="Entry lambda expression", span="591-591", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_289 [label="Entry lambda expression", span="592-592", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_277 [label="return null;", span="593-593", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_281 [label="Exit lambda expression", span="588-598", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_287 [label="s.Resolution", span="591-591", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_288 [label="Exit lambda expression", span="591-591", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_291 [label="Exit lambda expression", span="592-592", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_293 [label="x != null", span="600-600", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_294 [label="Exit lambda expression", span="600-600", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_317 [label="s.Type.BaseType == requestedType.BaseType", span="632-632", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_313 [label="Entry lambda expression", span="631-631", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_316 [label="Entry lambda expression", span="632-632", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_319 [label="Entry lambda expression", span="635-635", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_314 [label="s.Resolution", span="631-631", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_315 [label="Exit lambda expression", span="631-631", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_318 [label="Exit lambda expression", span="632-632", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_320 [label="x.Type.Name", span="635-635", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_321 [label="Exit lambda expression", span="635-635", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_399 [label="Entry lambda expression", span="784-790", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_405 [label="Entry lambda expression", span="792-792", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_400 [label="x == null", span="786-786", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_402 [label="var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type))", span="787-787", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_403 [label="return (dynamic)x.AsManagedObject(type);", span="788-788", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_401 [label="return null;", span="786-786", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_404 [label="Exit lambda expression", span="784-790", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_406 [label="x != null", span="792-792", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_407 [label="Exit lambda expression", span="792-792", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_409 [label="GetIndicatorBaseType(x.GetType())", span="792-792", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_410 [label="Exit lambda expression", span="792-792", cluster="lambda expression", file="BrokerageSetupHandler.cs"];
m4_244 [label="Entry Unk.History", span="", cluster="Unk.History", file="BrokerageSetupHandler.cs"];
m4_100 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="208-208", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_101 [label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, universeSettings, selector)", span="210-210", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_102 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="208-208", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_72 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="150-150", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="BrokerageSetupHandler.cs"];
m4_73 [label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="152-152", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="BrokerageSetupHandler.cs"];
m4_74 [label="AddUniverse(name, d => selector(d).Select(x => (string)x))", span="153-153", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="BrokerageSetupHandler.cs"];
m4_75 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="150-150", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="BrokerageSetupHandler.cs"];
m4_344 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="700-700", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="BrokerageSetupHandler.cs"];
m4_345 [label="SetBrokerageModel(new BrokerageModelPythonWrapper(model))", span="702-702", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="BrokerageSetupHandler.cs"];
m4_346 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="700-700", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="BrokerageSetupHandler.cs"];
m4_155 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="378-378", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BrokerageSetupHandler.cs"];
m4_156 [label="RegisterIndicator<TradeBar>(symbol, indicator, consolidator, selector)", span="380-380", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BrokerageSetupHandler.cs"];
m4_157 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="378-378", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BrokerageSetupHandler.cs"];
m4_148 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="352-352", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BrokerageSetupHandler.cs"];
m4_149 [label="RegisterIndicator<TradeBar>(symbol, indicator, resolution, selector)", span="354-354", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BrokerageSetupHandler.cs"];
m4_150 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="352-352", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BrokerageSetupHandler.cs"];
m4_4 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="BrokerageSetupHandler.cs"];
m4_5 [label="return AddData(type, symbol, resolution, TimeZones.NewYork, false, 1m);", span="56-56", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="BrokerageSetupHandler.cs"];
m4_6 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="54-54", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="BrokerageSetupHandler.cs"];
m4_23 [label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442", cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="BrokerageSetupHandler.cs"];
m4_298 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="626-626", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_299 [label="var security = Securities[symbol]", span="628-628", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_300 [label="var requestedType = CreateType(type)", span="630-630", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_304 [label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="636-636", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_305 [label="var request = CreateHistoryRequest(security, config, start, end, resolution)", span="639-639", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_301 [label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                .FirstOrDefault(s => s.Type.BaseType == requestedType.BaseType)", span="631-632", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_303 [label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="635-635", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_302 [label="config == null", span="633-633", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_306 [label="return _converter.GetDataFrame(History(request).Memoize());", span="640-640", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_307 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="626-626", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_309 [label="Entry ArgumentException.cstr", span="", cluster="ArgumentException.cstr", file="BrokerageSetupHandler.cs"];
m4_33 [label="Entry QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", span="74-74", cluster="QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", file="BrokerageSetupHandler.cs"];
m4_246 [label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="96-96", cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="BrokerageSetupHandler.cs"];
m4_424 [label="Entry Unk.HasAttr", span="", cluster="Unk.HasAttr", file="BrokerageSetupHandler.cs"];
m4_137 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="313-313", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BrokerageSetupHandler.cs"];
m4_138 [label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="315-315", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BrokerageSetupHandler.cs"];
m4_139 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="313-313", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BrokerageSetupHandler.cs"];
m4_151 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="365-365", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BrokerageSetupHandler.cs"];
m4_152 [label="RegisterIndicator<IBaseDataBar>(symbol, indicator, consolidator, selector)", span="367-367", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BrokerageSetupHandler.cs"];
m4_153 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="365-365", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BrokerageSetupHandler.cs"];
m4_342 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="992-992", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="BrokerageSetupHandler.cs"];
m4_193 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1265-1265", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="BrokerageSetupHandler.cs"];
m4_283 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="BrokerageSetupHandler.cs"];
m4_221 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_212 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="BrokerageSetupHandler.cs"];
m4_343 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="982-982", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="BrokerageSetupHandler.cs"];
m4_36 [label="Entry Unk.AsManagedObject", span="", cluster="Unk.AsManagedObject", file="BrokerageSetupHandler.cs"];
m4_163 [label="Entry Unk.Plot", span="", cluster="Unk.Plot", file="BrokerageSetupHandler.cs"];
m4_41 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BrokerageSetupHandler.cs"];
m4_363 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="584-584", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="BrokerageSetupHandler.cs"];
m4_220 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="733-733", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_366 [label="Py.GIL()", span="735-735", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_367 [label="!PyList.IsListType(pyObject)", span="738-738", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_369 [label="tmp.Append(pyObject)", span="741-741", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_372 [label=pyObject, span="746-746", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_368 [label="var tmp = new PyList()", span="740-740", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_371 [label="var symbols = new List<Symbol>()", span="745-745", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_370 [label="pyObject = tmp", span="742-742", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_375 [label="symbols.Add(symbol)", span="755-755", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_376 [label="return symbols.Count == 0 ? null : symbols;", span="757-757", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_373 [label="var symbol = (Symbol)item.AsManagedObject(typeof(Symbol))", span="748-748", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_374 [label="string.IsNullOrWhiteSpace(symbol.Value)", span="750-750", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_377 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="733-733", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="BrokerageSetupHandler.cs"];
m4_15 [label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="93-94", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="84-84", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_12 [label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="86-86", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_13 [label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="89-89", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_14 [label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="90-90", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_16 [label="AddToUserDefinedUniverse(security)", span="96-96", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_17 [label="return security;", span="97-97", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_18 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="84-84", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_122 [label="Entry FuncUniverse.cstr", span="", cluster="FuncUniverse.cstr", file="BrokerageSetupHandler.cs"];
m4_214 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="506-506", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_215 [label="var symbols = GetSymbolsFromPyObject(tickers)", span="508-508", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_218 [label="return _converter.GetDataFrame(History(symbols, periods, resolution));", span="511-511", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_216 [label="symbols == null", span="509-509", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_217 [label="return null;", span="509-509", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_219 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="506-506", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_312 [label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218", cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="BrokerageSetupHandler.cs"];
m4_25 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="105-105", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="BrokerageSetupHandler.cs"];
m4_26 [label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="BrokerageSetupHandler.cs"];
m4_30 [label="var type = (Type)pycoarse.GetPythonType().AsManagedObject(typeof(Type))", span="114-114", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="BrokerageSetupHandler.cs"];
m4_31 [label="AddUniverse((dynamic)pycoarse.AsManagedObject(type))", span="115-115", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="BrokerageSetupHandler.cs"];
m4_27 [label="coarse != null", span="108-108", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="BrokerageSetupHandler.cs"];
m4_28 [label="AddUniverse(c => coarse(c).Select(x => (Symbol)x))", span="110-110", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="BrokerageSetupHandler.cs"];
m4_29 [label="return;", span="111-111", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="BrokerageSetupHandler.cs"];
m4_32 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="105-105", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="BrokerageSetupHandler.cs"];
m4_310 [label="Entry QuantConnect.Symbol.ToString()", span="354-354", cluster="QuantConnect.Symbol.ToString()", file="BrokerageSetupHandler.cs"];
m4_384 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="766-766", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="BrokerageSetupHandler.cs"];
m4_385 [label="type.BaseType == typeof(object)", span="768-768", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="BrokerageSetupHandler.cs"];
m4_386 [label="return type;", span="770-770", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="BrokerageSetupHandler.cs"];
m4_387 [label="return GetIndicatorBaseType(type.BaseType);", span="772-772", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="BrokerageSetupHandler.cs"];
m4_388 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="766-766", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="BrokerageSetupHandler.cs"];
m4_398 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BrokerageSetupHandler.cs"];
m4_360 [label="Entry QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", span="32-32", cluster="QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", file="BrokerageSetupHandler.cs"];
m4_379 [label="Entry PyList.cstr", span="", cluster="PyList.cstr", file="BrokerageSetupHandler.cs"];
m4_133 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1338-1338", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_426 [label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0", cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="BrokerageSetupHandler.cs"];
m4_329 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="BrokerageSetupHandler.cs"];
m4_229 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="370-370", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_202 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1219-1219", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_203 [label="Entry QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", span="35-35", cluster="QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", file="BrokerageSetupHandler.cs"];
m4_255 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="BrokerageSetupHandler.cs"];
m4_62 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="138-138", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="BrokerageSetupHandler.cs"];
m4_63 [label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="140-140", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="BrokerageSetupHandler.cs"];
m4_64 [label="AddUniverse(name, resolution, d => selector(d).Select(x => (string)x))", span="141-141", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="BrokerageSetupHandler.cs"];
m4_65 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="138-138", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="BrokerageSetupHandler.cs"];
m4_114 [label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="271-271", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_96 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="267-267", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_112 [label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(market, name, securityType)", span="269-269", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_115 [label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="272-272", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_116 [label="var config = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="273-273", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_117 [label="var selector = PythonUtil.ToFunc<IEnumerable<IBaseData>, object[]>(pySelector)", span="275-275", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_118 [label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))))", span="277-278", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_113 [label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="270-270", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_119 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="267-267", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_97 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="193-193", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="BrokerageSetupHandler.cs"];
m4_98 [label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="195-195", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="BrokerageSetupHandler.cs"];
m4_99 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="193-193", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="BrokerageSetupHandler.cs"];
m4_134 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="300-300", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_135 [label="RegisterIndicator<TradeBar>(symbol, indicator, resolution)", span="302-302", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_136 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", span="300-300", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_380 [label="Entry Unk.Append", span="", cluster="Unk.Append", file="BrokerageSetupHandler.cs"];
m4_236 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="400-400", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="BrokerageSetupHandler.cs"];
m4_378 [label="Entry Unk.IsListType", span="", cluster="Unk.IsListType", file="BrokerageSetupHandler.cs"];
m4_154 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1380-1380", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="BrokerageSetupHandler.cs"];
m4_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="808-808", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="BrokerageSetupHandler.cs"];
m4_412 [label="Py.GIL()", span="810-810", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="BrokerageSetupHandler.cs"];
m4_413 [label="var an = new AssemblyName(type.Repr().Split('.')[1].Replace(''\'>'', ''''))", span="812-812", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="BrokerageSetupHandler.cs"];
m4_416 [label="return moduleBuilder.DefineType(an.Name,\r\n                        TypeAttributes.Public |\r\n                        TypeAttributes.Class |\r\n                        TypeAttributes.AutoClass |\r\n                        TypeAttributes.AnsiClass |\r\n                        TypeAttributes.BeforeFieldInit |\r\n                        TypeAttributes.AutoLayout,\r\n                        // If the type has IsAuthCodeSet member, it is a PythonQuandl\r\n                        type.HasAttr(''IsAuthCodeSet'') ? typeof(PythonQuandl) : typeof(PythonData))\r\n                    .CreateType();", span="815-824", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="BrokerageSetupHandler.cs"];
m4_414 [label="var assemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)", span="813-813", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="BrokerageSetupHandler.cs"];
m4_415 [label="var moduleBuilder = assemblyBuilder.DefineDynamicModule(''MainModule'')", span="814-814", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="BrokerageSetupHandler.cs"];
m4_417 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="808-808", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="BrokerageSetupHandler.cs"];
m4_222 [label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="BrokerageSetupHandler.cs"];
m4_20 [label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221", cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="BrokerageSetupHandler.cs"];
m4_22 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="BrokerageSetupHandler.cs"];
m4_333 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="681-681", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="BrokerageSetupHandler.cs"];
m4_334 [label="Py.GIL()", span="683-683", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="BrokerageSetupHandler.cs"];
m4_335 [label="var pyBenchmark = PythonUtil.ToFunc<DateTime, decimal>(benchmark)", span="685-685", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="BrokerageSetupHandler.cs"];
m4_339 [label="SetBenchmark((Symbol)benchmark.AsManagedObject(typeof(Symbol)))", span="691-691", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="BrokerageSetupHandler.cs"];
m4_336 [label="pyBenchmark != null", span="686-686", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="BrokerageSetupHandler.cs"];
m4_337 [label="SetBenchmark(pyBenchmark)", span="688-688", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="BrokerageSetupHandler.cs"];
m4_338 [label="return;", span="689-689", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="BrokerageSetupHandler.cs"];
m4_340 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="681-681", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="BrokerageSetupHandler.cs"];
m4_365 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="573-573", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="BrokerageSetupHandler.cs"];
m4_223 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="522-522", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_224 [label="var symbols = GetSymbolsFromPyObject(tickers)", span="524-524", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_227 [label="return _converter.GetDataFrame(History(symbols, span, resolution));", span="527-527", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_225 [label="symbols == null", span="525-525", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_226 [label="return null;", span="525-525", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_228 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="522-522", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_21 [label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373", cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="BrokerageSetupHandler.cs"];
m4_284 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722", cluster="QuantConnect.Resolution.ToTimeSpan()", file="BrokerageSetupHandler.cs"];
m4_347 [label="Entry QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", span="38-38", cluster="QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", file="BrokerageSetupHandler.cs"];
m4_349 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="709-709", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_350 [label="var securityInitializer1 = PythonUtil.ToAction<Security>(securityInitializer)", span="711-711", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_354 [label="var securityInitializer2 = PythonUtil.ToAction<Security, bool>(securityInitializer)", span="718-718", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_358 [label="SetSecurityInitializer(new SecurityInitializerPythonWrapper(securityInitializer))", span="725-725", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_351 [label="securityInitializer1 != null", span="712-712", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_352 [label="SetSecurityInitializer(securityInitializer1)", span="714-714", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_353 [label="return;", span="715-715", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_355 [label="securityInitializer2 != null", span="719-719", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_356 [label="SetSecurityInitializer(securityInitializer2)", span="721-721", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_357 [label="return;", span="722-722", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_359 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="709-709", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="BrokerageSetupHandler.cs"];
m4_423 [label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0", cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="BrokerageSetupHandler.cs"];
m4_362 [label="Entry QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", span="53-53", cluster="QuantConnect.Util.PythonUtil.ToAction<T1, T2>(PyObject)", file="BrokerageSetupHandler.cs"];
m4_144 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="339-339", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BrokerageSetupHandler.cs"];
m4_145 [label="RegisterIndicator<IBaseDataBar>(symbol, indicator, resolution, selector)", span="341-341", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BrokerageSetupHandler.cs"];
m4_146 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="339-339", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BrokerageSetupHandler.cs"];
m4_183 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="779-779", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_389 [label="Py.GIL()", span="781-781", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_390 [label="var array = new[] { first, second, third, fourth }\r\n                    .Select(x =>\r\n                    {\r\n                        if (x == null) return null;\r\n                        var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type));\r\n                        return (dynamic)x.AsManagedObject(type);\r\n\r\n                    }).ToArray()", span="783-790", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_391 [label="var types = array.Where(x => x != null).Select(x => GetIndicatorBaseType(x.GetType())).Distinct()", span="792-792", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_394 [label="return array;", span="799-799", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_392 [label="types.Count() > 1", span="794-794", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_393 [label="throw new Exception(''QCAlgorithm.GetIndicatorArray(). All indicators must be of the same type: data point, bar or tradebar.'');", span="796-796", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_395 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="779-779", cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_19 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="BrokerageSetupHandler.cs"];
m4_103 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="222-222", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_104 [label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, universeSettings, selector)", span="224-224", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_105 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="222-222", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_45 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="124-124", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_46 [label="var coarse = PythonUtil.ToFunc<IEnumerable<CoarseFundamental>, object[]>(pycoarse)", span="126-126", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_47 [label="var fine = PythonUtil.ToFunc<IEnumerable<FineFundamental>, object[]>(pyfine)", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_48 [label="AddUniverse(c => coarse(c).Select(x => (Symbol)x), f => fine(f).Select(x => (Symbol)x))", span="128-128", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_49 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="124-124", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_282 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="408-408", cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_140 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1352-1352", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="BrokerageSetupHandler.cs"];
m4_285 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476", cluster="System.DateTime.RoundDown(System.TimeSpan)", file="BrokerageSetupHandler.cs"];
m4_120 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="BrokerageSetupHandler.cs"];
m4_418 [label="Entry AssemblyName.cstr", span="", cluster="AssemblyName.cstr", file="BrokerageSetupHandler.cs"];
m4_396 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="BrokerageSetupHandler.cs"];
m4_194 [label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="468-468", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_195 [label="var name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="470-470", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_196 [label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="471-471", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_197 [label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="472-472", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_199 [label="RegisterIndicator(symbol, filteredIdentity, resolution, pyselector)", span="474-474", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_198 [label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="473-473", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_200 [label="return filteredIdentity;", span="475-475", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_201 [label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="468-468", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_322 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="653-653", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_323 [label="resolution == Resolution.Tick", span="655-655", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_325 [label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="657-657", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_326 [label="var end = Time.RoundDown((resolution ?? Securities[symbol].Resolution).ToTimeSpan())", span="658-658", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_327 [label="return History(type, symbol, start, end, resolution);", span="659-659", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_324 [label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="655-655", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_328 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="653-653", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_167 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="406-406", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="BrokerageSetupHandler.cs"];
m4_168 [label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="408-408", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="BrokerageSetupHandler.cs"];
m4_169 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="406-406", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="BrokerageSetupHandler.cs"];
m4_330 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="671-671", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_331 [label="return History(type, symbol, Time - span, Time, resolution);", span="673-673", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_332 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="671-671", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_361 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="593-593", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="BrokerageSetupHandler.cs"];
m4_83 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="165-165", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_84 [label="var selector = PythonUtil.ToFunc<DateTime, object[]>(pySelector)", span="167-167", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_85 [label="AddUniverse(securityType, name, resolution, market, universeSettings, d => selector(d).Select(x => (string)x))", span="168-168", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_86 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="165-165", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_0 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41", cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="BrokerageSetupHandler.cs"];
m4_1 [label="_converter = new PandasConverter()", span="43-43", cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="BrokerageSetupHandler.cs"];
m4_2 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41", cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="BrokerageSetupHandler.cs"];
m4_425 [label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0", cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="BrokerageSetupHandler.cs"];
m4_35 [label="Entry Unk.GetPythonType", span="", cluster="Unk.GetPythonType", file="BrokerageSetupHandler.cs"];
m4_341 [label="Entry Unk.GIL", span="", cluster="Unk.GIL", file="BrokerageSetupHandler.cs"];
m4_109 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="252-252", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_110 [label="AddUniverse(CreateType(T), securityType, name, resolution, market, universeSettings, selector)", span="254-254", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_111 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="252-252", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="BrokerageSetupHandler.cs"];
m4_185 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="437-437", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_186 [label="var array = GetIndicatorArray(first, second, third, fourth)", span="439-439", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_187 [label="PlotIndicator(chart, waitForReady, array[0], array[1], array[2], array[3])", span="440-440", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_188 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="437-437", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="BrokerageSetupHandler.cs"];
m4_106 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="237-237", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="BrokerageSetupHandler.cs"];
m4_107 [label="AddUniverse(CreateType(T), securityType, name, resolution, market, UniverseSettings, selector)", span="239-239", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="BrokerageSetupHandler.cs"];
m4_108 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="237-237", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="BrokerageSetupHandler.cs"];
m4_93 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="179-179", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="BrokerageSetupHandler.cs"];
m4_94 [label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="181-181", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="BrokerageSetupHandler.cs"];
m4_95 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="179-179", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="BrokerageSetupHandler.cs"];
m4_245 [label="Entry Unk.Memoize", span="", cluster="Unk.Memoize", file="BrokerageSetupHandler.cs"];
m4_256 [label="Entry Unk.CreateHistoryRequest", span="", cluster="Unk.CreateHistoryRequest", file="BrokerageSetupHandler.cs"];
m4_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_8 [label="return AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage);", span="71-71", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_9 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="69-69", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BrokerageSetupHandler.cs"];
m4_189 [label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="452-452", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_190 [label="var resolution = GetSubscription(symbol).Resolution", span="454-454", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_191 [label="return FilteredIdentity(symbol, resolution, selector, filter, fieldName);", span="455-455", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_192 [label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="452-452", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="BrokerageSetupHandler.cs"];
m4_158 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="392-392", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="BrokerageSetupHandler.cs"];
m4_159 [label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="394-394", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="BrokerageSetupHandler.cs"];
m4_160 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="392-392", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="BrokerageSetupHandler.cs"];
m4_308 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty", file="BrokerageSetupHandler.cs"];
m4_237 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="555-555", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_238 [label="var symbols = GetSymbolsFromPyObject(tickers)", span="557-557", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_241 [label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType);\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(security, config, start, end, resolution);\r\n            })", span="560-568", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_239 [label="symbols == null", span="558-558", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_240 [label="return null;", span="558-558", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_242 [label="return _converter.GetDataFrame(History(requests.Where(x => x != null)).Memoize());", span="570-570", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_243 [label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="555-555", cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="BrokerageSetupHandler.cs"];
m4_427 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="BrokerageSetupHandler.cs"];
m4_428 [label=coarse, span="", file="BrokerageSetupHandler.cs"];
m4_429 [label=coarse, span="", file="BrokerageSetupHandler.cs"];
m4_430 [label=fine, span="", file="BrokerageSetupHandler.cs"];
m4_431 [label=selector, span="", file="BrokerageSetupHandler.cs"];
m4_432 [label=selector, span="", file="BrokerageSetupHandler.cs"];
m4_433 [label=selector, span="", file="BrokerageSetupHandler.cs"];
m4_434 [label="QuantConnect.SecurityType", span="", file="BrokerageSetupHandler.cs"];
m4_435 [label=string, span="", file="BrokerageSetupHandler.cs"];
m4_436 [label=selector, span="", file="BrokerageSetupHandler.cs"];
m4_437 [label=PyObject, span="", file="BrokerageSetupHandler.cs"];
m4_438 [label="System.DateTime", span="", file="BrokerageSetupHandler.cs"];
m4_439 [label="System.DateTime", span="", file="BrokerageSetupHandler.cs"];
m4_440 [label="QuantConnect.Resolution?", span="", file="BrokerageSetupHandler.cs"];
m4_441 [label=PyObject, span="", file="BrokerageSetupHandler.cs"];
m4_442 [label="QuantConnect.Resolution?", span="", file="BrokerageSetupHandler.cs"];
m4_443 [label=int, span="", file="BrokerageSetupHandler.cs"];
m4_444 [label=requestedType, span="", file="BrokerageSetupHandler.cs"];
m7_23 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="DefaultBrokerageModel.cs"];
m7_4 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultBrokerageModel.cs"];
m7_5 [label="return true;", span="59-59", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_6 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="57-57", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="DefaultBrokerageModel.cs"];
m7_21 [label="Entry QuantConnect.Securities.Equity.EquityTransactionModel.EquityTransactionModel()", span="26-26", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.EquityTransactionModel()", file="DefaultBrokerageModel.cs"];
m7_7 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", span="67-67", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs"];
m7_8 [label="security.Type", span="69-69", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_9 [label="SecurityType.Forex", span="71-71", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_11 [label="SecurityType.Equity", span="74-74", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_13 [label="SecurityType.Base", span="77-77", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_18 [label="throw new ArgumentOutOfRangeException(''securityType'', security.Type, null);", span="84-84", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_10 [label="return new ForexTransactionModel();", span="72-72", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_12 [label="return new EquityTransactionModel();", span="75-75", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_14 [label="SecurityType.Option", span="78-78", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_15 [label="SecurityType.Commodity", span="79-79", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_16 [label="SecurityType.Future", span="80-80", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_17 [label="return new SecurityTransactionModel();", span="81-81", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_19 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", span="67-67", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", file="DefaultBrokerageModel.cs"];
m7_20 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.ForexTransactionModel(decimal)", span="35-35", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.ForexTransactionModel(decimal)", file="DefaultBrokerageModel.cs"];
m7_0 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="41-41", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageModel.cs"];
m7_1 [label="message = null", span="43-43", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_2 [label="return true;", span="44-44", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="DefaultBrokerageModel.cs"];
m7_3 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="41-41", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageModel.cs"];
m7_22 [label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="42-42", cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="DefaultBrokerageModel.cs"];
m8_140 [label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="69-69", cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="Engine.cs"];
m8_145 [label="Entry QuantConnect.Interfaces.IMessagingHandler.Initialize()", span="32-32", cluster="QuantConnect.Interfaces.IMessagingHandler.Initialize()", file="Engine.cs"];
m8_264 [label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", span="168-168", cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs"];
m8_182 [label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Engine.cs"];
m8_160 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="91-91", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_143 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="Engine.cs"];
m8_226 [label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed.LiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IDataQueueHandler)", span="157-157", cluster="QuantConnect.Lean.Engine.DataFeeds.LiveTradingDataFeed.LiveTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IDataQueueHandler)", file="Engine.cs"];
m8_166 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="168-168", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Engine.cs"];
m8_183 [label="Entry QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, decimal, double)", span="118-118", cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, decimal, double)", file="Engine.cs"];
m8_188 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="59-59", cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="Engine.cs"];
m8_155 [label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="74-74", cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="Engine.cs"];
m8_142 [label="Entry System.DateTime.ToShortTimeString()", span="0-0", cluster="System.DateTime.ToShortTimeString()", file="Engine.cs"];
m8_161 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Engine.cs"];
m8_164 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="416-416", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="Engine.cs"];
m8_144 [label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="31-31", cluster="QuantConnect.Interfaces.IApi.Initialize()", file="Engine.cs"];
m8_170 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="100-100", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="Engine.cs"];
m8_204 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="142-142", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Engine.cs"];
m8_198 [label="Entry lambda expression", span="320-338", cluster="lambda expression", file="Engine.cs"];
m8_199 [label="AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler)", span="328-328", cluster="lambda expression", file="Engine.cs"];
m8_200 [label=Exception, span="330-330", cluster="lambda expression", file="Engine.cs"];
m8_202 [label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="336-336", cluster="lambda expression", file="Engine.cs"];
m8_201 [label="Log.Error(''Engine.Run'', err)", span="333-333", cluster="lambda expression", file="Engine.cs"];
m8_203 [label="Exit lambda expression", span="320-338", cluster="lambda expression", file="Engine.cs"];
m8_197 [label="Entry System.Console.Read()", span="0-0", cluster="System.Console.Read()", file="Engine.cs"];
m8_151 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Engine.cs"];
m8_157 [label="Entry QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="580-580", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_250 [label="var rh = default(IResultHandler)", span="582-582", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_251 [label="job.ResultEndpoint", span="584-584", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_254 [label="rh = new ConsoleResultHandler(job)", span="589-589", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_257 [label="rh = new BacktestingResultHandler((BacktestNodePacket)job)", span="595-595", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_260 [label="rh = new LiveTradingResultHandler((LiveNodePacket)job)", span="601-601", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_252 [label="ResultHandlerEndpoint.Console", span="587-587", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_255 [label="ResultHandlerEndpoint.Backtesting", span="593-593", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_258 [label="ResultHandlerEndpoint.LiveTrading", span="599-599", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_253 [label="Log.Trace(''Engine.GetResultHandler(): Selected Console Output.'')", span="588-588", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_256 [label="Log.Trace(''Engine.GetResultHandler(): Selected Backtesting API Result Endpoint.'')", span="594-594", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_259 [label="Log.Trace(''Engine.GetResultHandler(): Selected Live Trading API Result Endpoint.'')", span="600-600", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_261 [label="return rh;", span="604-604", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_262 [label="Exit QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="580-580", cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_173 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="91-91", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="Engine.cs"];
m8_187 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="181-181", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Engine.cs"];
m8_248 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="68-68", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="Engine.cs"];
m8_165 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="327-327", cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="Engine.cs"];
m8_169 [label="Entry QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="527-527", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_227 [label="var rth = default(IRealTimeHandler)", span="529-529", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_228 [label="job.RealTimeEndpoint", span="530-530", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_231 [label="rth = new BacktestingRealTimeHandler(algorithm, job)", span="535-535", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_234 [label="rth = new LiveTradingRealTimeHandler(algorithm, feed, results)", span="541-541", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_229 [label="RealTimeEndpoint.Backtesting", span="533-533", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_232 [label="RealTimeEndpoint.LiveTrading", span="539-539", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_230 [label="Log.Trace(''Engine.GetRealTimeHandler(): Selected Backtesting RealTimeEvent Handler'')", span="534-534", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_233 [label="Log.Trace(''Engine.GetRealTimeHandler(): Selected LiveTrading RealTimeEvent Handler'')", span="540-540", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_235 [label="return rth;", span="544-544", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_236 [label="Exit QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="527-527", cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_167 [label="Entry QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="491-491", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_206 [label="var df = default(IDataFeed)", span="493-493", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_207 [label="job.DataEndpoint", span="494-494", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_209 [label="df = new BacktestingDataFeed(algorithm, (BacktestNodePacket)job)", span="499-499", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_212 [label="df = new DatabaseDataFeed(algorithm, (BacktestNodePacket)job)", span="504-504", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_215 [label="df = new FileSystemDataFeed(algorithm, (BacktestNodePacket)job)", span="510-510", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_219 [label="df = new LiveTradingDataFeed(algorithm, (LiveNodePacket)job, ds)", span="517-517", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_208 [label="DataFeedEndpoint.Backtesting", span="498-498", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_211 [label="DataFeedEndpoint.Database", span="503-503", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_214 [label="DataFeedEndpoint.FileSystem", span="509-509", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_217 [label="DataFeedEndpoint.LiveTrading", span="515-515", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_210 [label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Backtesting Datafeed'')", span="500-500", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_213 [label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Database Datafeed'')", span="505-505", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_216 [label="Log.Trace(''Engine.GetDataFeedHandler(): Selected FileSystem Datafeed'')", span="511-511", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_218 [label="var ds = Composer.Instance.GetExportedValueByTypeName<IDataQueueHandler>(Config.Get(''data-queue-handler'', ''LiveDataQueue''))", span="516-516", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_220 [label="Log.Trace(''Engine.GetDataFeedHandler(): Selected LiveTrading Datafeed'')", span="518-518", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_221 [label="return df;", span="521-521", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_222 [label="Exit QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="491-491", cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_249 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="Engine.cs"];
m8_265 [label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", span="155-155", cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", file="Engine.cs"];
m8_176 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="Engine.cs"];
m8_159 [label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", span="82-82", cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", file="Engine.cs"];
m8_196 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="Engine.cs"];
m8_174 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="82-82", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="Engine.cs"];
m8_223 [label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="46-46", cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs"];
m8_154 [label="Entry QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", span="38-38", cluster="QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", file="Engine.cs"];
m8_147 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Engine.cs"];
m8_148 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="Engine.cs"];
m8_168 [label="Entry QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="556-556", cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_239 [label="ITransactionHandler th", span="558-558", cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_240 [label="job.TransactionEndpoint", span="559-559", cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_242 [label="th = new BrokerageTransactionHandler(algorithm, brokerage)", span="562-562", cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_244 [label="th = new BacktestingTransactionHandler(algorithm, brokerage as BacktestingBrokerage)", span="568-568", cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_241 [label="TransactionHandlerEndpoint.Brokerage", span="561-561", cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_243 [label="Log.Trace(''Engine.GetTransactionHandler(): Selected Brokerage Transaction Models.'')", span="563-563", cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_245 [label="Log.Trace(''Engine.GetTransactionHandler(): Selected Backtesting Transaction Models.'')", span="569-569", cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_246 [label="return th;", span="572-572", cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_247 [label="Exit QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="556-556", cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_153 [label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="56-56", cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="Engine.cs"];
m8_281 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="68-68", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="Engine.cs"];
m8_263 [label="Entry QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="128-128", cluster="QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_195 [label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="113-113", cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="Engine.cs"];
m8_224 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.DatabaseDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="152-152", cluster="QuantConnect.Lean.Engine.DataFeeds.DatabaseDataFeed.DatabaseDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs"];
m8_237 [label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="100-100", cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_177 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="119-119", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="Engine.cs"];
m8_280 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="111-111", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="Engine.cs"];
m8_194 [label="Entry System.Threading.Thread.Abort()", span="0-0", cluster="System.Threading.Thread.Abort()", file="Engine.cs"];
m8_156 [label="Entry QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="613-613", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_266 [label="var sh = default(ISetupHandler)", span="615-615", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_267 [label=setupMethod, span="617-617", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_268 [label="SetupHandlerEndpoint.Console", span="620-620", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_271 [label="SetupHandlerEndpoint.Backtesting", span="625-625", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_274 [label="SetupHandlerEndpoint.Brokerage", span="629-629", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_269 [label="sh = new ConsoleSetupHandler()", span="621-621", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_270 [label="Log.Trace(''Engine.GetSetupHandler(): Selected Console Algorithm Setup Handler.'')", span="622-622", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_272 [label="sh = new BacktestingSetupHandler()", span="626-626", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_273 [label="Log.Trace(''Engine.GetSetupHandler(): Selected Backtesting Algorithm Setup Handler.'')", span="627-627", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_275 [label="sh = new BrokerageSetupHandler()", span="630-630", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_276 [label="Log.Trace(''Engine.GetSetupHandler(): Selected Brokerage Algorithm Setup Handler.'')", span="631-631", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_277 [label="return sh;", span="634-634", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_278 [label="Exit QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="613-613", cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs"];
m8_184 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="Engine.cs"];
m8_193 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="Engine.cs"];
m8_146 [label="Entry QuantConnect.Interfaces.IJobQueueHandler.Initialize()", span="32-32", cluster="QuantConnect.Interfaces.IJobQueueHandler.Initialize()", file="Engine.cs"];
m8_149 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="583-583", cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="Engine.cs"];
m8_192 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="Engine.cs"];
m8_150 [label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="38-38", cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="Engine.cs"];
m8_189 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="106-106", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="Engine.cs"];
m8_0 [label="Entry QuantConnect.Lean.Engine.Engine.Main(string[])", span="168-168", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_1 [label="var algorithmPath = ''''", span="171-171", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_2 [label="string mode = ''RELEASE''", span="172-172", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_3 [label="AlgorithmNodePacket job = null", span="173-173", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_8 [label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + Constants.Version + '' Mode: '' + mode)", span="184-184", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_4 [label="var algorithm = default(IAlgorithm)", span="174-174", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_5 [label="var startTime = DateTime.Now", span="175-175", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_6 [label="Log.LogHandler = Composer.Instance.GetExportedValueByTypeName<ILogHandler>(Config.Get(''log-handler'', ''CompositeLogHandler''))", span="176-176", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_7 [label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="183-183", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_9 [label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="185-185", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_10 [label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="186-186", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_11 [label="Api = Composer.Instance.GetExportedValueByTypeName<IApi>(Config.Get(''api-handler''))", span="192-192", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_12 [label="Notify = Composer.Instance.GetExportedValueByTypeName<IMessagingHandler>(Config.Get(''messaging-handler''))", span="193-193", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_13 [label="JobQueue = Composer.Instance.GetExportedValueByTypeName<IJobQueueHandler>(Config.Get(''job-queue-handler''))", span="194-194", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_14 [label=CompositionException, span="196-196", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_16 [label="Api.Initialize()", span="201-201", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_15 [label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="197-197", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_17 [label="Notify.Initialize()", span="202-202", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_18 [label="JobQueue.Initialize()", span="203-203", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_19 [label="var statusPingThread = new Thread(StateCheck.Ping.Run)", span="206-206", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_20 [label="statusPingThread.Start()", span="207-207", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_134 [label="statusPingThread != null && statusPingThread.IsAlive", span="475-475", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=red, community=0, file="Engine.cs"];
m8_135 [label="statusPingThread.Abort()", span="475-475", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=red, community=0, file="Engine.cs"];
m8_21 [label="AlgorithmManager.ResetManager()", span="214-214", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_22 [label="var initializeComplete = false", span="217-217", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_23 [label="Thread threadFeed = null", span="218-218", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_24 [label="Thread threadTransactions = null", span="219-219", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_116 [label="threadFeed != null && threadFeed.IsAlive", span="434-434", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_117 [label="threadFeed.Abort()", span="434-434", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_25 [label="Thread threadResults = null", span="220-220", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_118 [label="threadTransactions != null && threadTransactions.IsAlive", span="435-435", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_119 [label="threadTransactions.Abort()", span="435-435", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_26 [label="Thread threadRealTime = null", span="221-221", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_27 [label="job = JobQueue.NextJob(out algorithmPath)", span="226-226", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_28 [label="job.Version != Constants.Version || (LiveMode && job.Redelivered)", span="230-230", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_29 [label="Log.Error(''Engine.Run(): Job Version: '' + job.Version + ''  Deployed Version: '' + Constants.Version)", span="232-232", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_30 [label="JobQueue.AcknowledgeJob(job)", span="236-236", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_31 [label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="237-237", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_32 [label="Notify.SetChannel(job.Channel)", span="238-238", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_33 [label="Notify.RuntimeError(job.AlgorithmId, _collapseMessage)", span="239-239", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_35 [label="job == null", span="242-242", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_36 [label="Notify.SetChannel(job.Channel)", span="246-246", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_37 [label="SetupHandler = GetSetupHandler(job.SetupEndpoint)", span="249-249", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_38 [label="ResultHandler = GetResultHandler(job)", span="252-252", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_41 [label="algorithm = SetupHandler.CreateAlgorithmInstance(algorithmPath)", span="259-259", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_42 [label="initializeComplete = SetupHandler.Setup(algorithm, out _brokerage, job)", span="262-262", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_48 [label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError)", span="272-272", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_52 [label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="279-279", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_55 [label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="289-289", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_59 [label="DataFeed            = GetDataFeedHandler(algorithm, job)", span="295-295", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_60 [label="TransactionHandler  = GetTransactionHandler(algorithm, _brokerage, ResultHandler, job)", span="296-296", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_61 [label="RealTimeHandler     = GetRealTimeHandler(algorithm, _brokerage, DataFeed, ResultHandler, job)", span="297-297", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_63 [label="ResultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Running)", span="303-303", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_70 [label="ResultHandler.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Constants.Version))", span="315-315", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_71 [label="var complete = Isolator.ExecuteWithTimeLimit(SetupHandler.MaximumRuntime, AlgorithmManager.TimeLoopWithinLimits, () =>\r\n                        {\r\n                            try\r\n                            {\r\n                                //Run Algorithm Job:\r\n                                // -> Using this Data Feed, \r\n                                // -> Send Orders to this TransactionHandler, \r\n                                // -> Send Results to ResultHandler.\r\n                                AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler);\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                //Debugging at this level is difficult, stack trace needed.\r\n                                Log.Error(''Engine.Run'', err);\r\n                            }\r\n\r\n                            Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n\r\n                            }, job.UserPlan == UserPlan.Free ? 1024 : MaximumRamAllocation)", span="320-338", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_86 [label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err.StackTrace)", span="363-363", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_103 [label="ResultHandler.DebugMessage(string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                            job.AlgorithmId, totalSeconds.ToString(''F2''), ((AlgorithmManager.DataPoints / (double)1000) / totalSeconds).ToString(''F0''), AlgorithmManager.DataPoints.ToString(''N0'')))", span="408-409", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_104 [label="ResultHandler.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statistics, banner)", span="411-411", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_34 [label="job = null", span="240-240", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_39 [label="threadResults = new Thread(ResultHandler.Run, 0) {Name = ''Result Thread''}", span="253-253", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_40 [label="threadResults.Start()", span="254-254", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_120 [label="threadResults != null && threadResults.IsAlive", span="436-436", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_121 [label="threadResults.Abort()", span="436-436", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_43 [label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || SetupHandler.Errors.Count > 0", span="265-265", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_45 [label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="269-269", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_56 [label="algorithm.SetLiveMode(LiveMode)", span="290-290", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_57 [label="algorithm.SetLocked()", span="291-291", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_58 [label="ResultHandler.SetAlgorithm(algorithm)", span="294-294", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_75 [label="algorithm.RunTimeError != null", span="347-347", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_76 [label="throw algorithm.RunTimeError;", span="349-349", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_88 [label="var orders = new Dictionary<int, Order>(algorithm.Transactions.Orders)", span="376-376", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_98 [label="var profitLoss =\r\n                                    new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="395-396", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_99 [label="statistics = Statistics.Statistics.Generate(equity, profitLoss, performance,\r\n                                    SetupHandler.StartingPortfolioValue, algorithm.Portfolio.TotalFees, 252)", span="397-398", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_53 [label=initializeComplete, span="283-283", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_44 [label="initializeComplete = false", span="267-267", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_49 [label=Exception, span="275-275", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_46 [label="errorMessage += String.Join('','', SetupHandler.Errors)", span="270-270", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_47 [label="ResultHandler.RuntimeError(errorMessage)", span="271-271", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_50 [label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="277-277", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_51 [label="ResultHandler.RuntimeError(runtimeMessage, err.StackTrace)", span="278-278", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_54 [label="startTime = DateTime.Now", span="286-286", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_110 [label="ResultHandler.Exit()", span="425-425", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_102 [label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="407-407", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_62 [label="SetupHandler.SetupErrorHandler(ResultHandler, _brokerage)", span="300-300", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_64 [label="threadFeed = new Thread(DataFeed.Run) {Name = ''DataFeed Thread''}", span="306-306", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_65 [label="threadTransactions = new Thread(TransactionHandler.Run) {Name = ''Transaction Thread''}", span="307-307", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_67 [label="threadFeed.Start()", span="311-311", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_66 [label="threadRealTime = new Thread(RealTimeHandler.Run) {Name = ''RealTime Thread''}", span="308-308", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_68 [label="threadTransactions.Start()", span="312-312", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_69 [label="threadRealTime.Start()", span="313-313", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_72 [label="!complete", span="340-340", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_73 [label="Log.Error(''Engine.Main(): Failed to complete in time: '' + SetupHandler.MaximumRuntime.ToString(''F''))", span="342-342", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_74 [label="throw new Exception(''Failed to complete algorithm within '' + SetupHandler.MaximumRuntime.ToString(''F'') + '' seconds. Please make it run faster.'');", span="343-343", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_77 [label=Exception, span="352-352", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_87 [label="var charts = new Dictionary<string, Chart>(ResultHandler.Charts)", span="375-375", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_78 [label="Log.Error(''Engine.Run(): Breaking out of parent try-catch: '' + err.Message + '' '' + err.StackTrace)", span="355-355", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_79 [label="DataFeed != null", span="356-356", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_80 [label="DataFeed.Exit()", span="356-356", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_81 [label="ResultHandler != null", span="357-357", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_82 [label="var message = ''Runtime Error: '' + err.Message", span="359-359", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_83 [label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="360-360", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_84 [label="ResultHandler.LogMessage(message)", span="361-361", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_85 [label="ResultHandler.RuntimeError(message, err.StackTrace)", span="362-362", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_95 [label="charts.ContainsKey(strategyEquityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey)", span="389-391", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_96 [label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="393-393", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_97 [label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="394-394", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_89 [label="var holdings = new Dictionary<string, Holding>()", span="377-377", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_90 [label="var statistics = new Dictionary<string, string>()", span="378-378", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_91 [label="var banner = new Dictionary<string, string>()", span="379-379", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_92 [label="string strategyEquityKey = ''Strategy Equity''", span="384-384", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_93 [label="string equityKey = ''Equity''", span="385-385", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_94 [label="string dailyPerformanceKey = ''Daily Performance''", span="386-386", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_100 [label=Exception, span="401-401", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_101 [label="Log.Error(''Algorithm.Node.Engine(): Error generating statistics packet: '' + err.Message)", span="403-403", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_105 [label=Exception, span="413-413", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_107 [label="TransactionHandler.Exit()", span="419-419", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_106 [label="Log.Error(''Engine.Main(): Error sending analysis result: '' + err.Message + ''  ST >> '' + err.StackTrace)", span="415-415", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_108 [label="DataFeed.Exit()", span="420-420", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_109 [label="RealTimeHandler.Exit()", span="421-421", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_111 [label="StateCheck.Ping.Exit()", span="426-426", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_112 [label="var ts = Stopwatch.StartNew()", span="429-429", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_113 [label="(ResultHandler.IsActive || (TransactionHandler != null && TransactionHandler.IsActive) || (DataFeed != null && DataFeed.IsActive)) && ts.ElapsedMilliseconds < 30 * 1000", span="430-430", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_114 [label="Thread.Sleep(100)", span="432-432", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_115 [label="Log.Trace(''Waiting for threads to exit...'')", span="432-432", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_122 [label="_brokerage != null", span="437-437", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_123 [label="_brokerage.Disconnect()", span="439-439", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_124 [label="SetupHandler != null", span="441-441", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_125 [label="SetupHandler.Dispose()", span="443-443", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_126 [label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="445-445", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_127 [label=Exception, span="447-447", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_129 [label="!IsLocal", span="464-464", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=red, community=0, file="Engine.cs"];
m8_128 [label="Log.Error(''Engine.Main(): Error running algorithm: '' + err.Message + '' >> '' + err.StackTrace)", span="449-449", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_130 [label="Api != null", span="466-466", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=red, community=0, file="Engine.cs"];
m8_131 [label="Api.Dispose()", span="468-468", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=red, community=0, file="Engine.cs"];
m8_132 [label=IsLocal, span="472-472", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=red, community=0, file="Engine.cs"];
m8_133 [label="Console.Read()", span="472-472", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=red, community=0, file="Engine.cs"];
m8_136 [label="Log.LogHandler != null", span="477-477", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=red, community=0, file="Engine.cs"];
m8_137 [label="Log.LogHandler.Dispose()", span="479-479", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=red, community=0, file="Engine.cs"];
m8_138 [label="Exit QuantConnect.Lean.Engine.Engine.Main(string[])", span="168-168", cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs"];
m8_238 [label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="102-102", cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Engine.cs"];
m8_158 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="Engine.cs"];
m8_180 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Engine.cs"];
m8_163 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="322-322", cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="Engine.cs"];
m8_171 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="189-189", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="Engine.cs"];
m8_186 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="Engine.cs"];
m8_279 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="69-69", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Engine.cs"];
m8_205 [label="Entry QuantConnect.Logging.Log.Error(string, System.Exception, string, bool)", span="104-104", cluster="QuantConnect.Logging.Log.Error(string, System.Exception, string, bool)", file="Engine.cs"];
m8_225 [label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="129-129", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs"];
m8_172 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Engine.cs"];
m8_179 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Engine.cs"];
m8_185 [label="Entry long.ToString(string)", span="0-0", cluster="long.ToString(string)", file="Engine.cs"];
m8_141 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Engine.cs"];
m8_178 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="103-103", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="Engine.cs"];
m8_191 [label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="83-83", cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="Engine.cs"];
m8_175 [label="Entry System.TimeSpan.ToString(string)", span="0-0", cluster="System.TimeSpan.ToString(string)", file="Engine.cs"];
m8_139 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="83-83", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Engine.cs"];
m8_190 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="214-214", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="Engine.cs"];
m8_162 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="117-117", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="Engine.cs"];
m8_152 [label="Entry QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44", cluster="QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs"];
m8_282 [label=job, span="", file="Engine.cs"];
m8_283 [label=algorithm, span="", file="Engine.cs"];
m9_8 [label="Entry Unk.IsFrozen", span="", cluster="Unk.IsFrozen", file="EquityExchange.cs"];
m9_7 [label="Entry QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", span="43-43", cluster="QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", file="EquityExchange.cs"];
m9_10 [label="return serviceProvider.GetService(typeof(SVsStatusbar)) as IVsStatusbar;", span="45-45", cluster="QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", file="EquityExchange.cs"];
m9_11 [label="Exit QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", span="43-43", cluster="QuantConnect.VisualStudioPlugin.VsUtils.GetStatusBar(System.IServiceProvider)", file="EquityExchange.cs"];
m9_9 [label="Entry Unk.SetText", span="", cluster="Unk.SetText", file="EquityExchange.cs"];
m9_0 [label="Entry QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="32-32", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="EquityExchange.cs"];
m9_1 [label="var statusBar = GetStatusBar(serviceProvider)", span="34-34", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", color=green, community=0, file="EquityExchange.cs"];
m9_2 [label="int frozen", span="35-35", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="EquityExchange.cs"];
m9_3 [label="statusBar.IsFrozen(out frozen)", span="36-36", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="EquityExchange.cs"];
m9_5 [label="statusBar.SetText(msg)", span="39-39", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", color=green, community=0, file="EquityExchange.cs"];
m9_4 [label="frozen == 0", span="37-37", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="EquityExchange.cs"];
m9_6 [label="Exit QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="32-32", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="EquityExchange.cs"];
m9_12 [label="Entry System.IServiceProvider.GetService(System.Type)", span="0-0", cluster="System.IServiceProvider.GetService(System.Type)", file="EquityExchange.cs"];
m10_116 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="IAlgorithm.cs"];
m10_22 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="138-138", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="IAlgorithm.cs"];
m10_23 [label="factory = new BacktestingBrokerageFactory()", span="140-140", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="IAlgorithm.cs"];
m10_25 [label="return new BacktestingBrokerage(uninitializedAlgorithm, optionMarketSimulation);", span="142-142", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="IAlgorithm.cs"];
m10_24 [label="var optionMarketSimulation = new BasicOptionAssignmentSimulation()", span="141-141", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="IAlgorithm.cs"];
m10_26 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="138-138", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="IAlgorithm.cs"];
m10_4 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="118-118", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="IAlgorithm.cs"];
m10_5 [label="string error", span="120-120", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="IAlgorithm.cs"];
m10_7 [label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(60), names => names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name'')))", span="124-124", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="IAlgorithm.cs"];
m10_8 [label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="125-125", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="IAlgorithm.cs"];
m10_6 [label="IAlgorithm algorithm", span="121-121", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="IAlgorithm.cs"];
m10_9 [label="!complete", span="126-126", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="IAlgorithm.cs"];
m10_10 [label="throw new Exception(error + '' Try re-building algorithm.'');", span="126-126", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="IAlgorithm.cs"];
m10_11 [label="return algorithm;", span="128-128", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="IAlgorithm.cs"];
m10_12 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="118-118", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="IAlgorithm.cs"];
m10_76 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", span="268-268", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_101 [label="var derivativeSubscriptions = subscriptionManager.Subscriptions\r\n                .Where(x => x.Symbol.IsCanonical())\r\n                .Select(x => controls.GetLimit(x.Resolution))\r\n                .Sum()", span="271-274", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_102 [label="var universeSubscriptions = universeManager.Values\r\n                // use max limit for universes without explicitly added securities\r\n                .Select(u => u.Members.Count == 0 ? controls.GetLimit(u.UniverseSettings.Resolution) : u.Members.Count)\r\n                .Sum()", span="277-280", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_105 [label="var jobDays = (finish - start).TotalDays", span="285-285", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_103 [label="var subscriptionCount = derivativeSubscriptions + universeSubscriptions", span="282-282", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_104 [label="double maxRunTime = 0", span="284-284", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_106 [label="maxRunTime = 10 * subscriptionCount * jobDays", span="287-287", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_111 [label="Log.Trace(''BacktestingSetupHandler.GetMaxRunTime(): Job Days: '' + jobDays + '' Max Runtime: '' + Math.Round(maxRunTime / 60) + '' min'')", span="301-301", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_107 [label="(maxRunTime / 3600) > 12", span="290-290", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_109 [label="maxRunTime < 60", span="295-295", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_114 [label="return TimeSpan.FromSeconds(maxRunTime);", span="309-309", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_108 [label="maxRunTime = 3600 * 12", span="293-293", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_110 [label="maxRunTime = 60", span="298-298", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_112 [label="OS.IsWindows", span="304-304", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_113 [label="maxRunTime = 24 * 60 * 60", span="306-306", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_115 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", span="268-268", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.GetMaximumRuntime(System.DateTime, System.DateTime, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.UniverseManager, QuantConnect.Packets.Controls)", file="IAlgorithm.cs"];
m10_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="IAlgorithm.cs"];
m10_67 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="IAlgorithm.cs"];
m10_94 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="530-530", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="IAlgorithm.cs"];
m10_75 [label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="309-309", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="IAlgorithm.cs"];
m10_123 [label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168", cluster="QuantConnect.Symbol.IsCanonical()", file="IAlgorithm.cs"];
m10_128 [label="Entry lambda expression", span="279-279", cluster="lambda expression", file="IAlgorithm.cs"];
m10_18 [label="names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name''))", span="124-124", cluster="lambda expression", file="IAlgorithm.cs"];
m10_17 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="IAlgorithm.cs"];
m10_19 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="IAlgorithm.cs"];
m10_82 [label="resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'')", span="186-186", cluster="lambda expression", file="IAlgorithm.cs"];
m10_83 [label="algorithm.SetParameters(job.Parameters)", span="189-189", cluster="lambda expression", file="IAlgorithm.cs"];
m10_84 [label="algorithm.SetLiveMode(false)", span="192-192", cluster="lambda expression", file="IAlgorithm.cs"];
m10_85 [label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="195-195", cluster="lambda expression", file="IAlgorithm.cs"];
m10_86 [label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()))", span="198-198", cluster="lambda expression", file="IAlgorithm.cs"];
m10_87 [label="algorithm.Initialize()", span="201-201", cluster="lambda expression", file="IAlgorithm.cs"];
m10_81 [label="Entry lambda expression", span="182-208", cluster="lambda expression", file="IAlgorithm.cs"];
m10_88 [label=Exception, span="203-203", cluster="lambda expression", file="IAlgorithm.cs"];
m10_91 [label="Exit lambda expression", span="182-208", cluster="lambda expression", file="IAlgorithm.cs"];
m10_89 [label="Log.Error(err)", span="205-205", cluster="lambda expression", file="IAlgorithm.cs"];
m10_90 [label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err)", span="206-206", cluster="lambda expression", file="IAlgorithm.cs"];
m10_125 [label="controls.GetLimit(x.Resolution)", span="273-273", cluster="lambda expression", file="IAlgorithm.cs"];
m10_129 [label="u.Members.Count == 0 ? controls.GetLimit(u.UniverseSettings.Resolution) : u.Members.Count", span="279-279", cluster="lambda expression", file="IAlgorithm.cs"];
m10_120 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="IAlgorithm.cs"];
m10_124 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="IAlgorithm.cs"];
m10_121 [label="x.Symbol.IsCanonical()", span="272-272", cluster="lambda expression", file="IAlgorithm.cs"];
m10_122 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="IAlgorithm.cs"];
m10_126 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="IAlgorithm.cs"];
m10_130 [label="Exit lambda expression", span="279-279", cluster="lambda expression", file="IAlgorithm.cs"];
m10_15 [label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349", cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="IAlgorithm.cs"];
m10_73 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="IAlgorithm.cs"];
m10_131 [label="Entry QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", span="85-85", cluster="QuantConnect.Packets.Controls.GetLimit(QuantConnect.Resolution)", file="IAlgorithm.cs"];
m10_72 [label="Entry QuantConnect.Isolator.Isolator()", span="55-55", cluster="QuantConnect.Isolator.Isolator()", file="IAlgorithm.cs"];
m10_16 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="IAlgorithm.cs"];
m10_93 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="323-323", cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="IAlgorithm.cs"];
m10_99 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="303-303", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="IAlgorithm.cs"];
m10_127 [label="Entry Unk.GetLimit", span="", cluster="Unk.GetLimit", file="IAlgorithm.cs"];
m10_74 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="IAlgorithm.cs"];
m10_78 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="547-547", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="IAlgorithm.cs"];
m10_66 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="IAlgorithm.cs"];
m10_92 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="IAlgorithm.cs"];
m10_29 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="73-73", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="IAlgorithm.cs"];
m10_97 [label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", span="27-27", cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", file="IAlgorithm.cs"];
m10_0 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="107-107", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="IAlgorithm.cs"];
m10_1 [label="Errors = new List<string>()", span="109-109", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="IAlgorithm.cs"];
m10_2 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="107-107", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="IAlgorithm.cs"];
m10_132 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", span="316-316", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", file="IAlgorithm.cs"];
m10_133 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", span="316-316", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Dispose()", file="IAlgorithm.cs"];
m10_30 [label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="155-155", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_31 [label="var job = baseJob as BacktestNodePacket", span="157-157", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_33 [label="throw new ArgumentException(''Expected BacktestNodePacket but received '' + baseJob.GetType().Name);", span="160-160", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_35 [label="algorithm == null", span="165-165", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_38 [label="algorithm.Name = job.GetAlgorithmName()", span="171-171", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_44 [label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromMinutes(5), () =>\r\n            {\r\n                try\r\n                {\r\n                    resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'');\r\n\r\n                    //Set our parameters\r\n                    algorithm.SetParameters(job.Parameters);\r\n\r\n                    //Algorithm is backtesting, not live:\r\n                    algorithm.SetLiveMode(false);\r\n\r\n                    //Set the source impl for the event scheduling\r\n                    algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n\r\n                    // set the option chain provider\r\n                    algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()));\r\n\r\n                    //Initialise the algorithm, get the required data:\r\n                    algorithm.Initialize();\r\n                }\r\n                catch (Exception err)\r\n                {\r\n                    Log.Error(err);\r\n                    Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err);\r\n                }\r\n            }, controls.RamAllocation)", span="182-208", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_47 [label="job.PeriodStart = algorithm.StartDate", span="214-214", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_48 [label="job.PeriodFinish = algorithm.EndDate", span="215-215", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_49 [label="algorithm.PostInitialize()", span="217-217", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_50 [label="_maxRuntime = GetMaximumRuntime(job.PeriodStart, job.PeriodFinish, algorithm.SubscriptionManager, algorithm.UniverseManager, baseJob.Controls)", span="220-220", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_53 [label="_startingCaptial = algorithm.Portfolio.Cash", span="229-229", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_58 [label="algorithm.SetMaximumOrders(_maxOrders)", span="243-243", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_32 [label="job == null", span="158-158", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_34 [label="Log.Trace(string.Format(''BacktestingSetupHandler.Setup(): Setting up job: Plan: {0}, UID: {1}, PID: {2}, Version: {3}, Source: {4}'', job.UserPlan, job.UserId, job.ProjectId, job.Version, job.RequestSource))", span="163-163", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_39 [label="job.PeriodStart == default(DateTime)", span="174-174", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_42 [label="var controls = job.Controls", span="180-180", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_51 [label="job.Language == Language.Python", span="223-223", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_54 [label="job.UserPlan == UserPlan.Free", span="232-232", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_59 [label="_startingDate = job.PeriodStart", span="246-246", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_60 [label="Log.Trace(''SetUp Backtesting: User: '' + job.UserId + '' ProjectId: '' + job.ProjectId + '' AlgoId: '' + job.AlgorithmId)", span="249-249", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_61 [label="Log.Trace(''Dates: Start: '' + job.PeriodStart.ToShortDateString() + '' End: '' + job.PeriodFinish.ToShortDateString() + '' Cash: '' + _startingCaptial.ToString(''C''))", span="250-250", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_36 [label="Errors.Add(''Could not create instance of algorithm'')", span="167-167", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_37 [label="return false;", span="168-168", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_40 [label="Errors.Add(''Algorithm start date was never set'')", span="176-176", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_41 [label="return false;", span="177-177", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_43 [label="var isolator = new Isolator()", span="181-181", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_45 [label="!initializeComplete", span="211-211", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_64 [label="return initializeComplete;", span="256-256", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_46 [label="return false;", span="211-211", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_52 [label="_maxRuntime = _maxRuntime.Add(TimeSpan.FromSeconds(_maxRuntime.TotalSeconds * 9))", span="225-225", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_55 [label="_maxOrders = 10000", span="234-234", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_56 [label="_maxOrders = int.MaxValue", span="238-238", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_57 [label="_maxRuntime += _maxRuntime", span="239-239", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_62 [label="Errors.Count > 0", span="252-252", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_63 [label="initializeComplete = false", span="254-254", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_65 [label="Exit QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="155-155", cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="IAlgorithm.cs"];
m10_27 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", span="69-69", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", file="IAlgorithm.cs"];
m10_118 [label="Entry Unk.Sum", span="", cluster="Unk.Sum", file="IAlgorithm.cs"];
m10_96 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="IAlgorithm.cs"];
m10_68 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="IAlgorithm.cs"];
m10_14 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="IAlgorithm.cs"];
m10_119 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="IAlgorithm.cs"];
m10_70 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="IAlgorithm.cs"];
m10_79 [label="Entry System.DateTime.ToShortDateString()", span="0-0", cluster="System.DateTime.ToShortDateString()", file="IAlgorithm.cs"];
m10_98 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="586-586", cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="IAlgorithm.cs"];
m10_13 [label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82", cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="IAlgorithm.cs"];
m10_95 [label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65", cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="IAlgorithm.cs"];
m10_21 [label="Entry System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", span="867-867", cluster="System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", file="IAlgorithm.cs"];
m10_69 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="IAlgorithm.cs"];
m10_77 [label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Add(System.TimeSpan)", file="IAlgorithm.cs"];
m10_28 [label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", span="34-34", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", file="IAlgorithm.cs"];
m10_117 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="IAlgorithm.cs"];
m10_20 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="IAlgorithm.cs"];
m10_80 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="IAlgorithm.cs"];
m10_71 [label="Entry QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", span="150-150", cluster="QuantConnect.Packets.AlgorithmNodePacket.GetAlgorithmName()", file="IAlgorithm.cs"];
m10_134 [label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler", span="", file="IAlgorithm.cs"];
m10_135 [label="QuantConnect.Lean.Engine.Results.IResultHandler", span="", file="IAlgorithm.cs"];
m10_136 [label="QuantConnect.Interfaces.IAlgorithm", span="", file="IAlgorithm.cs"];
m10_137 [label=job, span="", file="IAlgorithm.cs"];
m10_138 [label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span="", file="IAlgorithm.cs"];
m10_139 [label="QuantConnect.Packets.Controls", span="", file="IAlgorithm.cs"];
m11_14 [label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="108-108", cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="IBrokerage.cs"];
m11_15 [label="Exit QuantConnect.Interfaces.IBrokerage.Connect()", span="108-108", cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="IBrokerage.cs"];
m11_16 [label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="113-113", cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="IBrokerage.cs"];
m11_17 [label="Exit QuantConnect.Interfaces.IBrokerage.Disconnect()", span="113-113", cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="IBrokerage.cs"];
m11_0 [label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="63-63", cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="IBrokerage.cs"];
m11_1 [label="Exit QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="63-63", cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="IBrokerage.cs"];
m11_12 [label="Entry QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="103-103", cluster="QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs"];
m11_13 [label="Exit QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="103-103", cluster="QuantConnect.Interfaces.IBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs"];
m11_10 [label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="96-96", cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs"];
m11_11 [label="Exit QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="96-96", cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs"];
m11_4 [label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="75-75", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="IBrokerage.cs"];
m11_5 [label="Exit QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="75-75", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="IBrokerage.cs"];
m11_6 [label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="82-82", cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs"];
m11_7 [label="Exit QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="82-82", cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs"];
m11_8 [label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="89-89", cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs"];
m11_9 [label="Exit QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="89-89", cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs"];
m11_2 [label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="69-69", cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="IBrokerage.cs"];
m11_3 [label="Exit QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="69-69", cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="IBrokerage.cs"];
m13_0 [label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31", cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="InteractiveBrokersBrokerage.cs"];
m13_1 [label="_model = model", span="33-33", cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="InteractiveBrokersBrokerage.cs"];
m13_2 [label="Exit QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31", cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="InteractiveBrokersBrokerage.cs"];
m13_7 [label="Entry Unk.GIL", span="", cluster="Unk.GIL", file="InteractiveBrokersBrokerage.cs"];
m13_3 [label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.Initialize(QuantConnect.Securities.Security, bool)", span="41-41", cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.Initialize(QuantConnect.Securities.Security, bool)", file="InteractiveBrokersBrokerage.cs"];
m13_4 [label="Py.GIL()", span="43-43", cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.Initialize(QuantConnect.Securities.Security, bool)", file="InteractiveBrokersBrokerage.cs"];
m13_5 [label="_model.Initialize(security, seedSecurity)", span="45-45", cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.Initialize(QuantConnect.Securities.Security, bool)", file="InteractiveBrokersBrokerage.cs"];
m13_6 [label="Exit QuantConnect.Python.SecurityInitializerPythonWrapper.Initialize(QuantConnect.Securities.Security, bool)", span="41-41", cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.Initialize(QuantConnect.Securities.Security, bool)", file="InteractiveBrokersBrokerage.cs"];
m13_8 [label="Entry Unk.Initialize", span="", cluster="Unk.Initialize", file="InteractiveBrokersBrokerage.cs"];
m13_9 [label="QuantConnect.Python.SecurityInitializerPythonWrapper", span="", file="InteractiveBrokersBrokerage.cs"];
m16_0 [label="Entry QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="30-30", cluster="QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="PaperBrokerage.cs"];
m16_1 [label="Exit QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="30-30", cluster="QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="PaperBrokerage.cs"];
m17_57 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="542-542", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="QCAlgorithm.cs"];
m17_58 [label="_baseAlgorithm.Debug(message)", span="544-544", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="QCAlgorithm.cs"];
m17_59 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", span="542-542", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Debug(string)", file="QCAlgorithm.cs"];
m17_0 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", span="49-49", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="QCAlgorithm.cs"];
m17_1 [label="_algorithm = null", span="51-51", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="QCAlgorithm.cs"];
m17_2 [label="Py.GIL()", span="55-55", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="QCAlgorithm.cs"];
m17_3 [label="!module.HasAttr(''QCAlgorithm'')", span="57-57", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AlgorithmPythonWrapper(PyObject)", file="QCAlgorithm.cs"];
m17_131 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="720-720", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_132 [label="Py.GIL()", span="724-724", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_133 [label="var pyRequests = _algorithm.OnMarginCall(requests) as PyObject", span="726-726", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_136 [label="requests.Clear()", span="734-734", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_140 [label="requests.Add(request)", span="741-741", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_141 [label="requests.Count == 0", span="746-746", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_145 [label="_baseAlgorithm.OnMarginCall(requests)", span="757-757", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_134 [label="pyRequests == null || !pyRequests.IsIterable()", span="729-729", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_137 [label=pyRequests, span="736-736", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_135 [label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="731-731", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_138 [label="SubmitOrderRequest request", span="738-738", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_139 [label="TryConvert(pyRequest, out request)", span="739-739", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_142 [label="throw new Exception(''OnMarginCall must return a non-empty list of SubmitOrderRequest'');", span="748-748", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_143 [label=PythonException, span="752-752", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_144 [label="pythonException.Message.Contains(''TypeError : No method matches given arguments'')", span="755-755", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_146 [label="throw pythonException;", span="762-762", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_147 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="720-720", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_152 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="1007-1007", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="QCAlgorithm.cs"];
m17_240 [label="result = default(T)", span="1009-1009", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="QCAlgorithm.cs"];
m17_241 [label="var type = (Type)pyObject.GetPythonType().AsManagedObject(typeof(Type))", span="1010-1010", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="QCAlgorithm.cs"];
m17_243 [label="result = (T)pyObject.AsManagedObject(typeof(T))", span="1014-1014", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="QCAlgorithm.cs"];
m17_242 [label="type == typeof(T)", span="1012-1012", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="QCAlgorithm.cs"];
m17_244 [label="return type == typeof(T);", span="1017-1017", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="QCAlgorithm.cs"];
m17_245 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", span="1007-1007", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.TryConvert<T>(PyObject, out T)", file="QCAlgorithm.cs"];
m17_45 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="507-507", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs"];
m17_46 [label="return _baseAlgorithm.AddSecurity(securityType, symbol, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="509-509", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs"];
m17_47 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="507-507", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs"];
m17_24 [label="ConversionRate == 1.0m", span="129-129", cluster="QuantConnect.Holding.ToString()", file="QCAlgorithm.cs", color=green, community=0];
m17_72 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1227-1227", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="QCAlgorithm.cs"];
m17_207 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="900-900", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs"];
m17_208 [label="_baseAlgorithm.SetRunTimeError(exception)", span="902-902", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs"];
m17_209 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", span="900-900", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs"];
m17_187 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="851-851", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs"];
m17_188 [label="_baseAlgorithm.SetBrokerageMessageHandler(handler)", span="853-853", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs"];
m17_189 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="851-851", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs"];
m17_23 [label="Entry QuantConnect.Holding.ToString()", span="127-127", cluster="QuantConnect.Holding.ToString()", file="QCAlgorithm.cs"];
m17_26 [label="return string.Format(''{0}: {1} @ {2}{3} - Market: {2}{4} - Conversion: {5}'', Symbol, Quantity, CurrencySymbol, AveragePrice, MarketPrice, ConversionRate);", span="133-133", cluster="QuantConnect.Holding.ToString()", file="QCAlgorithm.cs", color=green, community=0];
m17_227 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="943-943", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="QCAlgorithm.cs"];
m17_228 [label="_baseAlgorithm.SetMaximumOrders(max)", span="945-945", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="QCAlgorithm.cs"];
m17_229 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", span="943-943", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetMaximumOrders(int)", file="QCAlgorithm.cs"];
m17_40 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="561-561", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs"];
m17_175 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="820-820", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="QCAlgorithm.cs"];
m17_176 [label="_baseAlgorithm.PostInitialize()", span="822-822", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="QCAlgorithm.cs"];
m17_177 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", span="820-820", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.PostInitialize()", file="QCAlgorithm.cs"];
m17_104 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="650-650", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="QCAlgorithm.cs"];
m17_105 [label="Py.GIL()", span="652-652", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="QCAlgorithm.cs"];
m17_106 [label="_algorithm.OnBrokerageReconnect()", span="654-654", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="QCAlgorithm.cs"];
m17_107 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", span="650-650", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageReconnect()", file="QCAlgorithm.cs"];
m17_41 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="413-413", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs"];
m17_42 [label="_baseAlgorithm.SetOptionChainProvider(optionChainProvider)", span="415-415", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs"];
m17_43 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="413-413", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs"];
m17_199 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="882-882", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs"];
m17_200 [label="_baseAlgorithm.SetCash(symbol, startingCash, conversionRate)", span="884-884", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs"];
m17_201 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", span="882-882", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs"];
m17_99 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="639-639", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs"];
m17_100 [label="Py.GIL()", span="641-641", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs"];
m17_101 [label="_algorithm.OnBrokerageMessage(messageEvent)", span="643-643", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs"];
m17_102 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="639-639", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.cs"];
m17_169 [label="Entry Unk.OnAssignmentOrderEvent", span="", cluster="Unk.OnAssignmentOrderEvent", file="QCAlgorithm.cs"];
m17_29 [label="Entry Unk.SetAttr", span="", cluster="Unk.SetAttr", file="QCAlgorithm.cs"];
m17_194 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="900-900", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs"];
m17_68 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", span="315-315", cluster="QuantConnect.Algorithm.QCAlgorithm.GetChartUpdates(bool)", file="QCAlgorithm.cs"];
m17_28 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="QCAlgorithm.cs"];
m17_211 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="908-908", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="QCAlgorithm.cs"];
m17_212 [label="_baseAlgorithm.SetFinishedWarmingUp()", span="910-910", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="QCAlgorithm.cs"];
m17_213 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", span="908-908", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetFinishedWarmingUp()", file="QCAlgorithm.cs"];
m17_25 [label="return string.Format(''{0}: {1} @ {2}{3} - Market: {2}{4}'', Symbol, Quantity, CurrencySymbol, AveragePrice, MarketPrice);", span="131-131", cluster="QuantConnect.Holding.ToString()", file="QCAlgorithm.cs", color=green, community=0];
m17_20 [label="Entry Unk.HasAttr", span="", cluster="Unk.HasAttr", file="QCAlgorithm.cs"];
m17_21 [label="Entry Unk.GetAttr", span="", cluster="Unk.GetAttr", file="QCAlgorithm.cs"];
m17_22 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", span="961-961", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="QCAlgorithm.cs"];
m17_49 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="520-520", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs"];
m17_50 [label="return _baseAlgorithm.AddFutureContract(symbol, resolution, fillDataForward, leverage);", span="522-522", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs"];
m17_51 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="520-520", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs"];
m17_98 [label="Entry Unk.OnBrokerageDisconnect", span="", cluster="Unk.OnBrokerageDisconnect", file="QCAlgorithm.cs"];
m17_182 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1539-1539", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs"];
m17_32 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="QCAlgorithm.cs"];
m17_61 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="551-551", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="QCAlgorithm.cs"];
m17_62 [label="_baseAlgorithm.Error(message)", span="553-553", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="QCAlgorithm.cs"];
m17_63 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", span="551-551", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Error(string)", file="QCAlgorithm.cs"];
m17_90 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="620-620", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="QCAlgorithm.cs"];
m17_91 [label="_baseAlgorithm.Log(message)", span="622-622", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="QCAlgorithm.cs"];
m17_92 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", span="620-620", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Log(string)", file="QCAlgorithm.cs"];
m17_76 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="533-533", cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="QCAlgorithm.cs"];
m17_202 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1053-1053", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="QCAlgorithm.cs"];
m17_81 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="597-597", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="QCAlgorithm.cs"];
m17_82 [label="Py.GIL()", span="599-599", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="QCAlgorithm.cs"];
m17_83 [label="_algorithm.Initialize()", span="601-601", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="QCAlgorithm.cs"];
m17_84 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", span="597-597", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Initialize()", file="QCAlgorithm.cs"];
m17_239 [label="Entry Unk.ModuleFromString", span="", cluster="Unk.ModuleFromString", file="QCAlgorithm.cs"];
m17_44 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="602-602", cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="QCAlgorithm.cs"];
m17_5 [label="Symbol = holding.Symbol", span="88-88", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_7 [label="Quantity = holding.Quantity", span="90-90", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_8 [label="var rounding = 2", span="92-92", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_9 [label="holding.Type == SecurityType.Forex", span="93-93", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_4 [label="Entry QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", span="85-85", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_6 [label="Type = holding.Type", span="89-89", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_10 [label="rounding = 5", span="95-95", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_16 [label="MarketPrice = Math.Round(holding.Price, rounding)", span="103-103", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_11 [label="string basec, quotec", span="96-96", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_12 [label="Forex.DecomposeCurrencyPair(holding.Symbol, out basec, out quotec)", span="97-97", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_13 [label="CurrencySymbol = Forex.CurrencySymbols[quotec]", span="98-98", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_14 [label="ConversionRate = ((ForexHolding) holding).ConversionRate", span="99-99", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_15 [label="AveragePrice = Math.Round(holding.AveragePrice, rounding)", span="102-102", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_17 [label="Exit QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", span="85-85", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding)", file="QCAlgorithm.cs"];
m17_18 [label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="99-99", cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="QCAlgorithm.cs"];
m17_160 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="783-783", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m17_161 [label="Py.GIL()", span="785-785", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m17_162 [label="_algorithm.OnOrderEvent(newEvent)", span="787-787", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m17_163 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="783-783", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m17_117 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="680-680", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="QCAlgorithm.cs"];
m17_118 [label="Py.GIL()", span="682-682", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="QCAlgorithm.cs"];
m17_119 [label="_algorithm.OnEndOfAlgorithm()", span="684-684", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="QCAlgorithm.cs"];
m17_120 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", span="680-680", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfAlgorithm()", file="QCAlgorithm.cs"];
m17_77 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="589-589", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="QCAlgorithm.cs"];
m17_78 [label="return _baseAlgorithm.GetWarmupHistoryRequests();", span="591-591", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="QCAlgorithm.cs"];
m17_79 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", span="589-589", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetWarmupHistoryRequests()", file="QCAlgorithm.cs"];
m17_174 [label="Entry Unk.OnSecuritiesChanged", span="", cluster="Unk.OnSecuritiesChanged", file="QCAlgorithm.cs"];
m17_148 [label="Entry Unk.OnMarginCall", span="", cluster="Unk.OnMarginCall", file="QCAlgorithm.cs"];
m17_251 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="QCAlgorithm.cs"];
m17_218 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1780-1780", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs"];
m17_60 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1642-1642", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.cs"];
m17_206 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="828-828", cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="QCAlgorithm.cs"];
m17_93 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1655-1655", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.cs"];
m17_149 [label="Entry Unk.IsIterable", span="", cluster="Unk.IsIterable", file="QCAlgorithm.cs"];
m17_80 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="110-110", cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="QCAlgorithm.cs"];
m17_219 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="926-926", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="QCAlgorithm.cs"];
m17_220 [label="_baseAlgorithm.SetLiveMode(live)", span="928-928", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="QCAlgorithm.cs"];
m17_221 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", span="926-926", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLiveMode(bool)", file="QCAlgorithm.cs"];
m17_122 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="692-692", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="QCAlgorithm.cs"];
m17_123 [label="Py.GIL()", span="694-694", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="QCAlgorithm.cs"];
m17_124 [label="_algorithm.OnEndOfDay()", span="696-696", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="QCAlgorithm.cs"];
m17_125 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", span="692-692", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay()", file="QCAlgorithm.cs"];
m17_191 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="862-862", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs"];
m17_192 [label="_baseAlgorithm.SetBrokerageModel(brokerageModel)", span="864-864", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs"];
m17_193 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="862-862", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="QCAlgorithm.cs"];
m17_115 [label="Entry Unk.OnPythonData", span="", cluster="Unk.OnPythonData", file="QCAlgorithm.cs"];
m17_94 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="628-628", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="QCAlgorithm.cs"];
m17_95 [label="Py.GIL()", span="630-630", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="QCAlgorithm.cs"];
m17_96 [label="_algorithm.OnBrokerageDisconnect()", span="632-632", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="QCAlgorithm.cs"];
m17_97 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", span="628-628", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnBrokerageDisconnect()", file="QCAlgorithm.cs"];
m17_247 [label="Entry Unk.AsManagedObject", span="", cluster="Unk.AsManagedObject", file="QCAlgorithm.cs"];
m17_126 [label="Entry Unk.OnEndOfDay", span="", cluster="Unk.OnEndOfDay", file="QCAlgorithm.cs"];
m17_231 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="952-952", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs"];
m17_232 [label="_baseAlgorithm.SetParameters(parameters)", span="954-954", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs"];
m17_233 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="952-952", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs"];
m17_154 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="730-730", cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="QCAlgorithm.cs"];
m17_151 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="QCAlgorithm.cs"];
m17_30 [label="Entry Unk.Invoke", span="", cluster="Unk.Invoke", file="QCAlgorithm.cs"];
m17_64 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1667-1667", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="QCAlgorithm.cs"];
m17_36 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1807-1807", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs"];
m17_186 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1123-1123", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="QCAlgorithm.cs"];
m17_150 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="QCAlgorithm.cs"];
m17_27 [label="Entry Unk.IsSubclass", span="", cluster="Unk.IsSubclass", file="QCAlgorithm.cs"];
m17_86 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="611-611", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.cs"];
m17_87 [label="return _baseAlgorithm.Liquidate(symbolToLiquidate, tag);", span="613-613", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.cs"];
m17_88 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", span="611-611", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.cs"];
m17_56 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1473-1473", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs"];
m17_178 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="477-477", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="QCAlgorithm.cs"];
m17_121 [label="Entry Unk.OnEndOfAlgorithm", span="", cluster="Unk.OnEndOfAlgorithm", file="QCAlgorithm.cs"];
m17_159 [label="Entry Unk.OnMarginCallWarning", span="", cluster="Unk.OnMarginCallWarning", file="QCAlgorithm.cs"];
m17_222 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1235-1235", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="QCAlgorithm.cs"];
m17_234 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="543-543", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="QCAlgorithm.cs"];
m17_179 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="830-830", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs"];
m17_180 [label="return _baseAlgorithm.RemoveSecurity(symbol);", span="832-832", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs"];
m17_181 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", span="830-830", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.RemoveSecurity(QuantConnect.Symbol)", file="QCAlgorithm.cs"];
m17_19 [label="Entry Unk.GIL", span="", cluster="Unk.GIL", file="QCAlgorithm.cs"];
m17_53 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="533-533", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs"];
m17_54 [label="return _baseAlgorithm.AddOptionContract(symbol, resolution, fillDataForward, leverage);", span="535-535", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs"];
m17_55 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="533-533", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs"];
m17_109 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="662-662", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs"];
m17_110 [label="Py.GIL()", span="664-664", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs"];
m17_112 [label="_algorithm.OnPythonData(slice)", span="668-668", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs"];
m17_113 [label="_algorithm.OnData(slice)", span="672-672", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs"];
m17_111 [label="SubscriptionManager.HasCustomData", span="666-666", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs"];
m17_114 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", span="662-662", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnData(QuantConnect.Data.Slice)", file="QCAlgorithm.cs"];
m17_248 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="1024-1024", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="QCAlgorithm.cs"];
m17_249 [label="return _algorithm == null ? base.ToString() : _algorithm.Repr();", span="1026-1026", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="QCAlgorithm.cs"];
m17_250 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", span="1024-1024", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ToString()", file="QCAlgorithm.cs"];
m17_116 [label="Entry Unk.OnData", span="", cluster="Unk.OnData", file="QCAlgorithm.cs"];
m17_230 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="820-820", cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="QCAlgorithm.cs"];
m17_73 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="580-580", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="QCAlgorithm.cs"];
m17_74 [label="return _baseAlgorithm.GetParameter(name);", span="582-582", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="QCAlgorithm.cs"];
m17_75 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", span="580-580", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetParameter(string)", file="QCAlgorithm.cs"];
m17_165 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="796-796", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m17_166 [label="Py.GIL()", span="798-798", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m17_167 [label="_algorithm.OnAssignmentOrderEvent(assignmentEvent)", span="800-800", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m17_168 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="796-796", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="QCAlgorithm.cs"];
m17_198 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1035-1035", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="QCAlgorithm.cs"];
m17_127 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="708-708", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs"];
m17_128 [label="Py.GIL()", span="710-710", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs"];
m17_129 [label="_algorithm.OnEndOfDay(symbol)", span="712-712", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs"];
m17_130 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", span="708-708", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnEndOfDay(QuantConnect.Symbol)", file="QCAlgorithm.cs"];
m17_155 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="770-770", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="QCAlgorithm.cs"];
m17_156 [label="Py.GIL()", span="772-772", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="QCAlgorithm.cs"];
m17_157 [label="_algorithm.OnMarginCallWarning()", span="774-774", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="QCAlgorithm.cs"];
m17_158 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", span="770-770", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnMarginCallWarning()", file="QCAlgorithm.cs"];
m17_210 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1793-1793", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="QCAlgorithm.cs"];
m17_85 [label="Entry Unk.Initialize", span="", cluster="Unk.Initialize", file="QCAlgorithm.cs"];
m17_52 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1455-1455", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="QCAlgorithm.cs"];
m17_37 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="404-404", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs"];
m17_38 [label="_baseAlgorithm.SetAvailableDataTypes(availableDataTypes)", span="406-406", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs"];
m17_39 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="404-404", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="QCAlgorithm.cs"];
m17_195 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="871-871", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="QCAlgorithm.cs"];
m17_196 [label="_baseAlgorithm.SetCash(startingCash)", span="873-873", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="QCAlgorithm.cs"];
m17_197 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", span="871-871", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetCash(decimal)", file="QCAlgorithm.cs"];
m17_215 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="917-917", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs"];
m17_216 [label="_baseAlgorithm.SetHistoryProvider(historyProvider)", span="919-919", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs"];
m17_217 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="917-917", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="QCAlgorithm.cs"];
m17_108 [label="Entry Unk.OnBrokerageReconnect", span="", cluster="Unk.OnBrokerageReconnect", file="QCAlgorithm.cs"];
m17_48 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1298-1298", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="QCAlgorithm.cs"];
m17_214 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94", cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.cs"];
m17_223 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="934-934", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="QCAlgorithm.cs"];
m17_224 [label="_baseAlgorithm.SetLocked()", span="936-936", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="QCAlgorithm.cs"];
m17_225 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", span="934-934", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetLocked()", file="QCAlgorithm.cs"];
m17_65 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="561-561", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="QCAlgorithm.cs"];
m17_66 [label="return _baseAlgorithm.GetChartUpdates(clearChartData);", span="563-563", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="QCAlgorithm.cs"];
m17_67 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", span="561-561", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetChartUpdates(bool)", file="QCAlgorithm.cs"];
m17_164 [label="Entry Unk.OnOrderEvent", span="", cluster="Unk.OnOrderEvent", file="QCAlgorithm.cs"];
m17_203 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="891-891", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="QCAlgorithm.cs"];
m17_204 [label="_baseAlgorithm.SetDateTime(time)", span="893-893", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="QCAlgorithm.cs"];
m17_205 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", span="891-891", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetDateTime(System.DateTime)", file="QCAlgorithm.cs"];
m17_31 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandas()", span="41-41", cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandas()", file="QCAlgorithm.cs"];
m17_190 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="932-932", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="QCAlgorithm.cs"];
m17_103 [label="Entry Unk.OnBrokerageMessage", span="", cluster="Unk.OnBrokerageMessage", file="QCAlgorithm.cs"];
m17_246 [label="Entry Unk.GetPythonType", span="", cluster="Unk.GetPythonType", file="QCAlgorithm.cs"];
m17_89 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="QCAlgorithm.cs"];
m17_170 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="808-808", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs"];
m17_171 [label="Py.GIL()", span="810-810", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs"];
m17_172 [label="_algorithm.OnSecuritiesChanged(changes)", span="812-812", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs"];
m17_173 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="808-808", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="QCAlgorithm.cs"];
m17_33 [label="QuantConnect.Holding", span="", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs"];
m17_34 [label="_baseAlgorithm.SetStatus(status)", span="397-397", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs"];
m17_35 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", span="395-395", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetStatus(QuantConnect.AlgorithmStatus)", file="QCAlgorithm.cs"];
m17_235 [label="var code =\r\n                ''from clr import AddReference\n'' +\r\n                ''AddReference(\''System\'')\n'' +\r\n                ''AddReference(\''QuantConnect.Common\'')\n'' +\r\n                ''import decimal\n'' +\r\n\r\n                // OnPythonData call OnData after converting the Slice object\r\n                ''def OnPythonData(self, data):\n'' +\r\n                ''    self.OnData(PythonSlice(data))\n'' +\r\n\r\n                // PythonSlice class\r\n                ''class PythonSlice(dict):\n'' +\r\n                ''    def __init__(self, slice):\n'' +\r\n                ''        for data in slice:\n'' +\r\n                ''            self[data.Key] = Data(data.Value)\n'' +\r\n                ''            self[data.Key.Value] = Data(data.Value)\n'' +\r\n\r\n                // Python Data class: Converts custom data (PythonData) into a python object'''\r\n                ''class Data(object):\n'' +\r\n                ''    def __init__(self, data):\n'' +\r\n                ''        members = [attr for attr in dir(data) if not callable(attr) and not attr.startswith(\''__\'')]\n'' +\r\n                ''        for member in members:\n'' +\r\n                ''            setattr(self, member, getattr(data, member))\n'' +\r\n\r\n                ''        if not hasattr(data, 'GetStorageDictionary'): return\n'' +\r\n\r\n                ''        for kvp in data.GetStorageDictionary():\n'' +\r\n                ''           name = kvp.Key.replace('-',' ').replace('.',' ').title().replace(' ', '')\n'' +\r\n                ''           value = decimal.Decimal(kvp.Value) if isinstance(kvp.Value, float) else kvp.Value\n'' +\r\n                ''           setattr(self, name, value)''", span="963-992", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="QCAlgorithm.cs"];
m17_236 [label="Py.GIL()", span="994-994", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="QCAlgorithm.cs"];
m17_237 [label="return PythonEngine.ModuleFromString(''AlgorithmPythonUtil'', code);", span="996-996", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="QCAlgorithm.cs"];
m17_238 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", span="961-961", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.ImportUtil()", file="QCAlgorithm.cs"];
m17_183 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="839-839", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="QCAlgorithm.cs"];
m17_184 [label="_baseAlgorithm.SetAlgorithmId(algorithmId)", span="841-841", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="QCAlgorithm.cs"];
m17_185 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", span="839-839", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.SetAlgorithmId(string)", file="QCAlgorithm.cs"];
m17_226 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1219-1219", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="QCAlgorithm.cs"];
m17_69 [label="Entry QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="569-569", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="QCAlgorithm.cs"];
m17_70 [label="return _baseAlgorithm.GetLocked();", span="571-571", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="QCAlgorithm.cs"];
m17_71 [label="Exit QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", span="569-569", cluster="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper.GetLocked()", file="QCAlgorithm.cs"];
m17_252 [label="QuantConnect.AlgorithmFactory.Python.Wrappers.AlgorithmPythonWrapper", span="", file="QCAlgorithm.cs"];
m18_0 [label="Entry QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.FirstOrderGreeks)", span="45-45", cluster="QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.FirstOrderGreeks)", file="Realtime.cs"];
m18_1 [label="TheoreticalPrice = theoreticalPrice", span="47-47", cluster="QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.FirstOrderGreeks)", file="Realtime.cs"];
m18_2 [label="Greeks = greeks", span="48-48", cluster="QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.FirstOrderGreeks)", file="Realtime.cs"];
m18_3 [label="Exit QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.FirstOrderGreeks)", span="45-45", cluster="QuantConnect.Securities.Option.OptionPriceModelResult.OptionPriceModelResult(decimal, QuantConnect.Data.Market.FirstOrderGreeks)", file="Realtime.cs"];
m18_4 [label="QuantConnect.Securities.Option.OptionPriceModelResult", span="", file="Realtime.cs"];
m19_17 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="SecurityTransactionModel.cs"];
m19_11 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="SecurityTransactionModel.cs"];
m19_15 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="SecurityTransactionModel.cs"];
m19_13 [label="Entry QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", span="34-34", cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", file="SecurityTransactionModel.cs"];
m19_16 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="SecurityTransactionModel.cs"];
m19_18 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="SecurityTransactionModel.cs"];
m19_0 [label="Entry QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", span="26-26", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_1 [label="string file = ''log.txt''", span="28-28", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_2 [label="File.Delete(file)", span="29-29", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_4 [label="var log = new FileLogHandler(file)", span="32-32", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_6 [label="var contents = File.ReadAllText(file)", span="37-37", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_9 [label="File.Delete(file)", span="41-41", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_3 [label="var debugMessage = ''*debug message*'' + DateTime.UtcNow.ToString(''o'')", span="31-31", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_5 [label="log.Debug(debugMessage)", span="34-34", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_8 [label="Assert.IsTrue(contents.Contains(debugMessage))", span="39-39", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_7 [label="Assert.IsNotNull(contents)", span="38-38", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_10 [label="Exit QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", span="26-26", cluster="QuantConnect.Tests.Logging.FileLogHandlerTests.WritesMessageToFile()", file="SecurityTransactionModel.cs"];
m19_14 [label="Entry QuantConnect.Logging.FileLogHandler.Debug(string)", span="48-48", cluster="QuantConnect.Logging.FileLogHandler.Debug(string)", file="SecurityTransactionModel.cs"];
m20_0 [label="Entry QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", span="30-30", cluster="QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", file="SeriesSampler.cs"];
m20_1 [label="_seconds = resolution.TotalSeconds", span="32-32", cluster="QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", file="SeriesSampler.cs"];
m20_2 [label="Exit QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", span="30-30", cluster="QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", file="SeriesSampler.cs"];
m20_6 [label="double unixStopDate = Time.DateTimeToUnixTimeStamp(stop.ToUniversalTime())", span="48-48", cluster="QuantConnect.SeriesSampler.Sample(QuantConnect.Series, System.DateTime, System.DateTime)", file="SeriesSampler.cs"];
m20_3 [label="Entry QuantConnect.SeriesSampler.Sample(QuantConnect.Series, System.DateTime, System.DateTime)", span="42-42", cluster="QuantConnect.SeriesSampler.Sample(QuantConnect.Series, System.DateTime, System.DateTime)", file="SeriesSampler.cs"];
m20_4 [label="var sampled = new Series(series.Name, series.SeriesType)", span="44-44", cluster="QuantConnect.SeriesSampler.Sample(QuantConnect.Series, System.DateTime, System.DateTime)", file="SeriesSampler.cs"];
m20_5 [label="double nextSample = Time.DateTimeToUnixTimeStamp(start.ToUniversalTime())", span="47-47", cluster="QuantConnect.SeriesSampler.Sample(QuantConnect.Series, System.DateTime, System.DateTime)", file="SeriesSampler.cs"];
m20_7 [label="series.Values.Count < 2 || series.SeriesType == SeriesType.Scatter", span="52-52", cluster="QuantConnect.SeriesSampler.Sample(QuantConnect.Series, System.DateTime, System.DateTime)", file="SeriesSampler.cs", color=green, community=0];
m20_42 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SeriesSampler.cs"];
m20_48 [label="Entry Unk.SetName", span="", cluster="Unk.SetName", file="SeriesSampler.cs"];
m20_47 [label="Entry TestCaseData.cstr", span="", cluster="TestCaseData.cstr", file="SeriesSampler.cs"];
m20_49 [label="Algorithm = algorithm", span="714-714", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SeriesSampler.cs"];
m20_44 [label="Entry lambda expression", span="703-703", cluster="lambda expression", file="SeriesSampler.cs"];
m20_46 [label="Exit lambda expression", span="703-703", cluster="lambda expression", file="SeriesSampler.cs"];
m20_43 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="SeriesSampler.cs"];
m20_45 [label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="703-703", cluster="lambda expression", file="SeriesSampler.cs"];
m20_50 [label="Statistics = statistics", span="715-715", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SeriesSampler.cs"];
m20_51 [label="Language = language", span="716-716", cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="SeriesSampler.cs"];
m20_40 [label="Entry QuantConnect.SeriesSampler.Interpolate(QuantConnect.ChartPoint, QuantConnect.ChartPoint, long)", span="147-147", cluster="QuantConnect.SeriesSampler.Interpolate(QuantConnect.ChartPoint, QuantConnect.ChartPoint, long)", file="SeriesSampler.cs"];
m20_34 [label="var hourReverseSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-1.444%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.007%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="571-592", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_8 [label="series.Values", span="55-55", cluster="QuantConnect.SeriesSampler.Sample(QuantConnect.Series, System.DateTime, System.DateTime)", file="SeriesSampler.cs", color=green, community=0];
m20_54 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SeriesSampler.cs"];
m20_38 [label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_41 [label="Entry QuantConnect.ChartPoint.ChartPoint()", span="206-206", cluster="QuantConnect.ChartPoint.ChartPoint()", file="SeriesSampler.cs"];
m20_52 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SeriesSampler.cs"];
m20_39 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SeriesSampler.cs"];
m20_56 [label="var deltaTicks = current.x - previous.x", span="149-149", cluster="QuantConnect.SeriesSampler.Interpolate(QuantConnect.ChartPoint, QuantConnect.ChartPoint, long)", file="SeriesSampler.cs"];
m20_58 [label="return current.y;", span="154-154", cluster="QuantConnect.SeriesSampler.Interpolate(QuantConnect.ChartPoint, QuantConnect.ChartPoint, long)", file="SeriesSampler.cs"];
m20_59 [label="double percentage = (target - previous.x) / (double)deltaTicks", span="157-157", cluster="QuantConnect.SeriesSampler.Interpolate(QuantConnect.ChartPoint, QuantConnect.ChartPoint, long)", file="SeriesSampler.cs"];
m20_60 [label="return (current.y - previous.y) * (decimal)percentage + previous.y;", span="160-160", cluster="QuantConnect.SeriesSampler.Interpolate(QuantConnect.ChartPoint, QuantConnect.ChartPoint, long)", file="SeriesSampler.cs"];
m20_57 [label="deltaTicks == 0", span="152-152", cluster="QuantConnect.SeriesSampler.Interpolate(QuantConnect.ChartPoint, QuantConnect.ChartPoint, long)", file="SeriesSampler.cs"];
m20_61 [label="Exit QuantConnect.SeriesSampler.Interpolate(QuantConnect.ChartPoint, QuantConnect.ChartPoint, long)", span="147-147", cluster="QuantConnect.SeriesSampler.Interpolate(QuantConnect.ChartPoint, QuantConnect.ChartPoint, long)", file="SeriesSampler.cs"];
m20_37 [label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.CSharp),\r\n\r\n                // Python\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateFuturesAlgorithmDaily'', basicTemplateFuturesAlgorithmDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateOptionsAlgorithm'', basicTemplateOptionsStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HistoryAlgorithm'', historyAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFundamentalTop5Algorithm'', coarseFundamentalTop5AlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''CoarseFineFundamentalRegressionAlgorithm'', coarseFineFundamentalRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''MACDTrendAlgorithm'', macdTrendAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionSplitRegressionAlgorithm'', optionSplitRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionRenameRegressionAlgorithm'', optionRenameRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionOpenInterestRegressionAlgorithm'', optionOpenInterestRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionChainConsistencyRegressionAlgorithm'', optionChainConsistencyRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''WeeklyUniverseSelectionRegressionAlgorithm'', weeklyUniverseSelectionRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''OptionExerciseAssignRegressionAlgorithm'',optionExerciseAssignRegressionAlgorithmStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateDailyAlgorithm'', basicTemplateDailyStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourSplitRegressionAlgorithm'', hourSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''HourReverseSplitRegressionAlgorithm'', hourReverseSplitStatistics, Language.Python),\r\n                new AlgorithmStatisticsTestParameters(''FractionalQuantityRegressionAlgorithm'', fractionalQuantityRegressionStatistics, Language.Python),\r\n\r\n                // FSharp\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                // new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="640-703", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_12 [label="var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_10 [label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="SeriesSampler.cs"];
m20_9 [label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", color=green, community=0, file="SeriesSampler.cs"];
m20_11 [label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.669%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.002''},\r\n                {''Beta'', ''1''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.816''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0.851''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="42-63", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="SeriesSampler.cs"];
m20_26 [label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_30 [label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_13 [label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_28 [label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_32 [label="var basicTemplateDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''244.780%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''4.153%''},\r\n                {''Sharpe Ratio'', ''6.165''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.254''},\r\n                {''Beta'', ''0.898''},\r\n                {''Annual Standard Deviation'', ''0.14''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''4.625''},\r\n                {''Tracking Error'', ''0.04''},\r\n                {''Treynor Ratio'', ''0.963''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="525-546", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_17 [label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''5123.170%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_19 [label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_22 [label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_27 [label="var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.403''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''4.203''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_29 [label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_18 [label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_16 [label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_21 [label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.717%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_25 [label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''84''},\r\n                {''Average Win'', ''4.79%''},\r\n                {''Average Loss'', ''-4.17%''},\r\n                {''Compounding Annual Return'', ''2.967%''},\r\n                {''Drawdown'', ''34.800%''},\r\n                {''Expectancy'', ''0.228''},\r\n                {''Net Profit'', ''37.970%''},\r\n                {''Sharpe Ratio'', ''0.27''},\r\n                {''Loss Rate'', ''43%''},\r\n                {''Win Rate'', ''57%''},\r\n                {''Profit-Loss Ratio'', ''1.15''},\r\n                {''Alpha'', ''-0.002''},\r\n                {''Beta'', ''0.411''},\r\n                {''Annual Standard Deviation'', ''0.112''},\r\n                {''Annual Variance'', ''0.013''},\r\n                {''Information Ratio'', ''-0.352''},\r\n                {''Tracking Error'', ''0.134''},\r\n                {''Treynor Ratio'', ''0.073''},\r\n                {''Total Fees'', ''$420.57''},\r\n            }", span="364-385", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_31 [label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.32%''},\r\n                {''Compounding Annual Return'', ''-85.023%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.359''},\r\n                {''Net Profit'', ''-0.350%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''0.92''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="502-523", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_14 [label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_23 [label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_20 [label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_24 [label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_15 [label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_33 [label="var hourSplitStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-0.096%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-0.001%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$1.00''}\r\n            }", span="548-569", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_36 [label="var basicTemplateFuturesAlgorithmDailyStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-1.655%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.018%''},\r\n                {''Sharpe Ratio'', ''-23.092''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$14.80''}\r\n            }", span="617-638", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_55 [label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="58-58", cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="SeriesSampler.cs"];
m20_35 [label="var fractionalQuantityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''2.45%''},\r\n                {''Average Loss'', ''-2.03%''},\r\n                {''Compounding Annual Return'', ''2313.556%''},\r\n                {''Drawdown'', ''4.500%''},\r\n                {''Expectancy'', ''0.473''},\r\n                {''Net Profit'', ''4.458%''},\r\n                {''Sharpe Ratio'', ''3.408''},\r\n                {''Loss Rate'', ''33%''},\r\n                {''Win Rate'', ''67%''},\r\n                {''Profit-Loss Ratio'', ''1.21''},\r\n                {''Alpha'', ''-0.4''},\r\n                {''Beta'', ''0.831''},\r\n                {''Annual Standard Deviation'', ''0.579''},\r\n                {''Annual Variance'', ''0.336''},\r\n                {''Information Ratio'', ''-5.399''},\r\n                {''Tracking Error'', ''0.163''},\r\n                {''Treynor Ratio'', ''2.375''},\r\n                {''Total Fees'', ''$2092.41''}\r\n            }", span="594-615", cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="SeriesSampler.cs"];
m20_53 [label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span="", cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="SeriesSampler.cs"];
m20_62 [label="QuantConnect.SeriesSampler", span="", file="SeriesSampler.cs"];
m21_211 [label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108", cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_140 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="SeriesSamplerTests.cs"];
m21_200 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="856-856", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_201 [label=_locked, span="858-858", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_203 [label="timeZone == null", span="863-863", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_205 [label="_timeKeeper.AddTimeZone(timeZone)", span="864-864", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_206 [label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(timeZone)", span="865-865", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_207 [label="TimeRules.SetDefaultTimeZone(timeZone)", span="868-868", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_202 [label="throw new Exception(''Algorithm.SetTimeZone(): Cannot change time zone after algorithm running.'');", span="860-860", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_204 [label="throw new ArgumentNullException(''timeZone'');", span="863-863", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_208 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="856-856", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_0 [label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_1 [label="Name = GetType().Name", span="92-92", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_2 [label="Status = AlgorithmStatus.Running", span="93-93", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_3 [label="IsWarmingUp = true", span="96-96", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_4 [label="_startDate = new DateTime(1998, 01, 01)", span="103-103", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_5 [label="_endDate = DateTime.Now.AddDays(-1)", span="104-104", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_6 [label="_timeKeeper = new TimeKeeper(_startDate, new[] { TimeZones.NewYork })", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_7 [label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork)", span="109-109", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_8 [label="Settings = new AlgorithmSettings()", span="111-111", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_9 [label="SubscriptionManager = new SubscriptionManager(Settings, _timeKeeper)", span="114-114", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_10 [label="Securities = new SecurityManager(_timeKeeper)", span="116-116", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_11 [label="Transactions = new SecurityTransactionManager(Securities)", span="117-117", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_12 [label="Portfolio = new SecurityPortfolioManager(Securities, Transactions, DefaultOrderProperties)", span="118-118", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_13 [label="BrokerageModel = new DefaultBrokerageModel()", span="119-119", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_14 [label="Notify = new NotificationManager(false)", span="120-120", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_15 [label="_runMode = RunMode.Series", span="123-123", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_16 [label="_locked = false", span="126-126", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_17 [label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="129-129", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_18 [label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="132-132", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_19 [label="UniverseManager = new UniverseManager()", span="135-135", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_20 [label="Universe = new UniverseDefinitions(this)", span="136-136", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_21 [label="UniverseSettings = new UniverseSettings(Resolution.Minute, 2m, true, false, TimeSpan.FromDays(1))", span="137-137", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_22 [label="Schedule = new ScheduleManager(Securities, TimeZone)", span="140-140", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_23 [label="TradeBuilder = new TradeBuilder(FillGroupingMethod.FillToFill, FillMatchingMethod.FIFO)", span="143-143", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_24 [label="SecurityInitializer = new BrokerageModelSecurityInitializer(new DefaultBrokerageModel(AccountType.Margin),\r\n                                                                        new FuncSecuritySeeder(GetLastKnownPrice))", span="145-146", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_25 [label="CandlestickPatterns = new CandlestickPatterns(this)", span="148-148", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_26 [label="TradingCalendar = new TradingCalendar(Securities, _marketHoursDatabase)", span="151-151", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_27 [label="OptionChainProvider = new EmptyOptionChainProvider()", span="153-153", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_28 [label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="90-90", cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="SeriesSamplerTests.cs"];
m21_427 [label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48", cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="SeriesSamplerTests.cs"];
m21_333 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1227-1227", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="SeriesSamplerTests.cs"];
m21_334 [label="return _locked;", span="1229-1229", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="SeriesSamplerTests.cs"];
m21_335 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1227-1227", cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="SeriesSamplerTests.cs"];
m21_191 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="837-837", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="SeriesSamplerTests.cs"];
m21_192 [label="DateTimeZone tz", span="839-839", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="SeriesSamplerTests.cs"];
m21_193 [label="tz = DateTimeZoneProviders.Tzdb[timeZone]", span="842-842", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="SeriesSamplerTests.cs"];
m21_195 [label="throw new ArgumentException(string.Format(''TimeZone with id '{0}' was not found. For a complete list of time zones please visit: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones'', timeZone));", span="846-846", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="SeriesSamplerTests.cs"];
m21_194 [label=DateTimeZoneNotFoundException, span="844-844", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="SeriesSamplerTests.cs"];
m21_196 [label="SetTimeZone(tz)", span="849-849", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="SeriesSamplerTests.cs"];
m21_197 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="837-837", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="SeriesSamplerTests.cs"];
m21_80 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325", cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="SeriesSamplerTests.cs"];
m21_449 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1529-1529", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_450 [label="return AddSecurity<Crypto>(SecurityType.Crypto, ticker, resolution, market, fillDataForward, leverage, false);", span="1531-1531", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_451 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", span="1529-1529", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCrypto(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_104 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="561-561", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="SeriesSamplerTests.cs"];
m21_105 [label=availableDataTypes, span="563-563", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="SeriesSamplerTests.cs"];
m21_106 [label="SubscriptionManager.AvailableDataTypes[dataFeed.Key] = dataFeed.Value", span="565-565", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="SeriesSamplerTests.cs"];
m21_107 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="561-561", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="SeriesSamplerTests.cs"];
m21_212 [label="Entry QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", span="48-48", cluster="QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_497 [label="var security = SecurityManager.CreateSecurity(typeof(T), Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="1626-1627", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_493 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1616-1616", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_494 [label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="1619-1619", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_495 [label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="1622-1622", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_496 [label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_498 [label="AddToUserDefinedUniverse(security)", span="1629-1629", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_499 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1616-1616", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_533 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1715-1715", cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="SeriesSamplerTests.cs"];
m21_534 [label="return SymbolCache.GetSymbol(ticker);", span="1717-1717", cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="SeriesSamplerTests.cs"];
m21_535 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1715-1715", cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="SeriesSamplerTests.cs"];
m21_261 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1014-1014", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="SeriesSamplerTests.cs"];
m21_262 [label="SetCash((decimal)startingCash)", span="1016-1016", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="SeriesSamplerTests.cs"];
m21_263 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="1014-1014", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="SeriesSamplerTests.cs"];
m21_199 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SeriesSamplerTests.cs"];
m21_536 [label="Entry QuantConnect.SymbolCache.GetSymbol(string)", span="47-47", cluster="QuantConnect.SymbolCache.GetSymbol(string)", file="SeriesSamplerTests.cs"];
m21_287 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1101-1101", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_288 [label="var end = new DateTime(year, month, day)", span="1105-1105", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_289 [label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="1108-1108", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_290 [label="SetEndDate(end)", span="1110-1110", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_291 [label=Exception, span="1112-1112", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_292 [label="throw new Exception(''Date Invalid: '' + err.Message);", span="1114-1114", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_293 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1101-1101", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_165 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="737-737", cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="SeriesSamplerTests.cs"];
m21_166 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="737-737", cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="SeriesSamplerTests.cs"];
m21_476 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="SeriesSamplerTests.cs"];
m21_223 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="900-900", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SeriesSamplerTests.cs"];
m21_224 [label="BrokerageModel = model", span="902-902", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SeriesSamplerTests.cs"];
m21_226 [label="SecurityInitializer = new BrokerageModelSecurityInitializer(model, new FuncSecuritySeeder(GetLastKnownPrice))", span="906-906", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SeriesSamplerTests.cs"];
m21_225 [label="!_userSetSecurityInitializer", span="903-903", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SeriesSamplerTests.cs"];
m21_227 [label="Securities.Values", span="909-909", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SeriesSamplerTests.cs"];
m21_228 [label="var leverage = security.Leverage", span="914-914", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SeriesSamplerTests.cs"];
m21_229 [label="SecurityInitializer.Initialize(security, false)", span="917-917", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SeriesSamplerTests.cs"];
m21_230 [label="security.SetLeverage(leverage)", span="920-920", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SeriesSamplerTests.cs"];
m21_231 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="900-900", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="SeriesSamplerTests.cs"];
m21_265 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1025-1025", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SeriesSamplerTests.cs"];
m21_266 [label="SetCash((decimal)startingCash)", span="1027-1027", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SeriesSamplerTests.cs"];
m21_267 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1025-1025", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SeriesSamplerTests.cs"];
m21_296 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1180-1180", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_317 [label=_liveMode, span="1183-1183", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_319 [label="end > DateTime.Now.Date.AddDays(-1)", span="1187-1187", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_322 [label="end < _startDate", span="1195-1195", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_324 [label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="1202-1202", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_318 [label="return;", span="1183-1183", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_320 [label="end = DateTime.Now.Date.AddDays(-1)", span="1189-1189", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_321 [label="_startDate != new DateTime()", span="1193-1193", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_323 [label="throw new Exception(''Please select end date greater than start date.'');", span="1197-1197", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_325 [label="!_locked", span="1205-1205", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_326 [label="_endDate = end", span="1207-1207", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_327 [label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="1211-1211", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_328 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1180-1180", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_475 [label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172", cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_233 [label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="654-654", cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SeriesSamplerTests.cs"];
m21_272 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="473-473", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SeriesSamplerTests.cs"];
m21_37 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="SeriesSamplerTests.cs"];
m21_346 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1254-1254", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="SeriesSamplerTests.cs"];
m21_347 [label="TradeBuilder = tradeBuilder", span="1256-1256", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="SeriesSamplerTests.cs"];
m21_348 [label="TradeBuilder.SetLiveMode(LiveMode)", span="1257-1257", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="SeriesSamplerTests.cs"];
m21_349 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1254-1254", cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="SeriesSamplerTests.cs"];
m21_554 [label="Entry Unk.CreateSymbol", span="", cluster="Unk.CreateSymbol", file="SeriesSamplerTests.cs"];
m21_179 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="794-794", cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="SeriesSamplerTests.cs"];
m21_180 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="794-794", cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="SeriesSamplerTests.cs"];
m21_525 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1688-1688", cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="SeriesSamplerTests.cs"];
m21_526 [label="Debug(''Quit(): '' + message)", span="1690-1690", cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="SeriesSamplerTests.cs"];
m21_527 [label="Status = AlgorithmStatus.Stopped", span="1691-1691", cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="SeriesSamplerTests.cs"];
m21_528 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1688-1688", cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="SeriesSamplerTests.cs"];
m21_39 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="71-71", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="SeriesSamplerTests.cs"];
m21_452 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1539-1539", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_453 [label="Security security", span="1541-1541", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_454 [label="Securities.TryGetValue(symbol, out security)", span="1542-1542", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_459 [label="var universe = UniverseManager.Values.OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(symbol))", span="1553-1553", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_461 [label="var ret = universe.Remove(symbol)", span="1556-1556", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_462 [label="symbol == _benchmarkSymbol", span="1559-1559", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_463 [label="Securities.Remove(symbol)", span="1561-1561", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_455 [label="Transactions.CancelOpenOrders(security.Symbol)", span="1545-1545", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_468 [label="return false;", span="1572-1572", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_456 [label="security.Cache.Reset()", span="1548-1548", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_457 [label="security.Invested", span="1551-1551", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_458 [label="Liquidate(security.Symbol)", span="1551-1551", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_460 [label="universe != null", span="1554-1554", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_466 [label="SubscriptionManager.HasCustomData = universe.Members.Any(x => x.Value.Subscriptions.Any(y => y.IsCustomData))", span="1567-1567", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_467 [label="return ret;", span="1569-1569", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_464 [label="security = CreateBenchmarkSecurity()", span="1563-1563", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_465 [label="AddToUserDefinedUniverse(security)", span="1564-1564", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_469 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1539-1539", cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_404 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="SeriesSamplerTests.cs"];
m21_85 [label="Entry Unk.AddEquity", span="", cluster="Unk.AddEquity", file="SeriesSamplerTests.cs"];
m21_141 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="SeriesSamplerTests.cs"];
m21_167 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="745-745", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="SeriesSamplerTests.cs"];
m21_168 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="745-745", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="SeriesSamplerTests.cs"];
m21_295 [label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0", cluster="System.DateTime.Subtract(System.TimeSpan)", file="SeriesSamplerTests.cs"];
m21_42 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="SeriesSamplerTests.cs"];
m21_90 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="533-533", cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="SeriesSamplerTests.cs"];
m21_91 [label="string value", span="535-535", cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="SeriesSamplerTests.cs"];
m21_92 [label="return _parameters.TryGetValue(name, out value) ? value : null;", span="536-536", cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="SeriesSamplerTests.cs"];
m21_93 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="533-533", cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="SeriesSamplerTests.cs"];
m21_273 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1053-1053", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="SeriesSamplerTests.cs"];
m21_274 [label="!_locked", span="1055-1055", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="SeriesSamplerTests.cs"];
m21_275 [label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="1057-1057", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="SeriesSamplerTests.cs"];
m21_276 [label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1061-1061", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="SeriesSamplerTests.cs"];
m21_277 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1053-1053", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="SeriesSamplerTests.cs"];
m21_47 [label="Entry QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", span="51-51", cluster="QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_213 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="878-878", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="SeriesSamplerTests.cs"];
m21_214 [label="mode != RunMode.Parallel", span="880-880", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="SeriesSamplerTests.cs"];
m21_215 [label="return;", span="880-880", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="SeriesSamplerTests.cs"];
m21_216 [label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="881-881", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="SeriesSamplerTests.cs"];
m21_217 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="878-878", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="SeriesSamplerTests.cs"];
m21_123 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="602-602", cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="SeriesSamplerTests.cs"];
m21_124 [label="OptionChainProvider = optionChainProvider", span="604-604", cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="SeriesSamplerTests.cs"];
m21_125 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="602-602", cluster="QuantConnect.Algorithm.QCAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="SeriesSamplerTests.cs"];
m21_487 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1582-1582", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="SeriesSamplerTests.cs"];
m21_488 [label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m)", span="1589-1589", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="SeriesSamplerTests.cs"];
m21_489 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1582-1582", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="SeriesSamplerTests.cs"];
m21_345 [label="Entry QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", span="30-30", cluster="QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", file="SeriesSamplerTests.cs"];
m21_484 [label="Entry lambda expression", span="1567-1567", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_87 [label="Entry lambda expression", span="504-504", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_88 [label="x.Value", span="504-504", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_89 [label="Exit lambda expression", span="504-504", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_120 [label="securityInitializer(security)", span="595-595", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_119 [label="Entry lambda expression", span="595-595", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_121 [label="Exit lambda expression", span="595-595", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_148 [label="Entry lambda expression", span="629-629", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_151 [label="Entry lambda expression", span="630-630", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_154 [label="Entry lambda expression", span="631-631", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_158 [label="Entry lambda expression", span="632-632", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_149 [label="x.Name == ''OnData''", span="629-629", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_150 [label="Exit lambda expression", span="629-629", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_152 [label="x.DeclaringType != typeof(QCAlgorithm)", span="630-630", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_153 [label="Exit lambda expression", span="630-630", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_155 [label="x.GetParameters().Length == 1", span="631-631", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_156 [label="Exit lambda expression", span="631-631", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_159 [label="x.GetParameters()[0].ParameterType == typeof (Slice)", span="632-632", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_160 [label="Exit lambda expression", span="632-632", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_252 [label="x.Key.Value == symbol", span="972-972", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_251 [label="Entry lambda expression", span="972-972", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_253 [label="Exit lambda expression", span="972-972", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_478 [label="x.Members.ContainsKey(symbol)", span="1553-1553", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_477 [label="Entry lambda expression", span="1553-1553", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_481 [label="Entry lambda expression", span="1567-1567", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_479 [label="Exit lambda expression", span="1553-1553", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_482 [label="x.Value.Subscriptions.Any(y => y.IsCustomData)", span="1567-1567", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_483 [label="Exit lambda expression", span="1567-1567", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_485 [label="y.IsCustomData", span="1567-1567", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_486 [label="Exit lambda expression", span="1567-1567", cluster="lambda expression", file="SeriesSamplerTests.cs"];
m21_145 [label="Entry Unk.Call", span="", cluster="Unk.Call", file="SeriesSamplerTests.cs"];
m21_190 [label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68", cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_185 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="818-818", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="SeriesSamplerTests.cs"];
m21_186 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="818-818", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="SeriesSamplerTests.cs"];
m21_30 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="SeriesSamplerTests.cs"];
m21_115 [label="Entry QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="31-31", cluster="QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="SeriesSamplerTests.cs"];
m21_403 [label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="442-442", cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="SeriesSamplerTests.cs"];
m21_473 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="SeriesSamplerTests.cs"];
m21_555 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1776-1776", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="SeriesSamplerTests.cs"];
m21_556 [label="historyProvider == null", span="1778-1778", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="SeriesSamplerTests.cs"];
m21_558 [label="HistoryProvider = historyProvider", span="1782-1782", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="SeriesSamplerTests.cs"];
m21_557 [label="throw new ArgumentNullException(''Algorithm.SetHistoryProvider(): Historical data provider cannot be null.'');", span="1780-1780", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="SeriesSamplerTests.cs"];
m21_559 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1776-1776", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="SeriesSamplerTests.cs"];
m21_222 [label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136", cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SeriesSamplerTests.cs"];
m21_239 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="951-951", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="SeriesSamplerTests.cs"];
m21_240 [label="string market = Market.USA", span="953-953", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="SeriesSamplerTests.cs"];
m21_241 [label="this.BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="955-955", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="SeriesSamplerTests.cs"];
m21_242 [label="_benchmarkSymbol = QuantConnect.Symbol.Create(symbol, securityType, market)", span="957-957", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="SeriesSamplerTests.cs"];
m21_243 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="951-951", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="SeriesSamplerTests.cs"];
m21_245 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="968-968", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="SeriesSamplerTests.cs"];
m21_246 [label="symbol = symbol.ToUpper()", span="971-971", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="SeriesSamplerTests.cs"];
m21_247 [label="var security = Securities.FirstOrDefault(x => x.Key.Value == symbol).Value", span="972-972", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="SeriesSamplerTests.cs"];
m21_248 [label="_benchmarkSymbol = security == null\r\n                ? QuantConnect.Symbol.Create(symbol, SecurityType.Equity, Market.USA)\r\n                : security.Symbol", span="973-975", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="SeriesSamplerTests.cs"];
m21_249 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="968-968", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="SeriesSamplerTests.cs"];
m21_218 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1638-1638", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="SeriesSamplerTests.cs"];
m21_502 [label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="1640-1640", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="SeriesSamplerTests.cs"];
m21_504 [label="_debugMessages.Enqueue(message)", span="1641-1641", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="SeriesSamplerTests.cs"];
m21_505 [label="_previousDebugMessage = message", span="1642-1642", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="SeriesSamplerTests.cs"];
m21_503 [label="return;", span="1640-1640", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="SeriesSamplerTests.cs"];
m21_506 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1638-1638", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="SeriesSamplerTests.cs"];
m21_187 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="828-828", cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_188 [label="_timeKeeper.SetUtcDateTime(frontier)", span="830-830", cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_189 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="828-828", cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_377 [label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="488-488", cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SeriesSamplerTests.cs"];
m21_508 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1651-1651", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="SeriesSamplerTests.cs"];
m21_509 [label="!_liveMode && message == ''''", span="1653-1653", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="SeriesSamplerTests.cs"];
m21_511 [label="_logMessages.Enqueue(message)", span="1654-1654", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="SeriesSamplerTests.cs"];
m21_510 [label="return;", span="1653-1653", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="SeriesSamplerTests.cs"];
m21_512 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1651-1651", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="SeriesSamplerTests.cs"];
m21_52 [label="Entry QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18", cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="SeriesSamplerTests.cs"];
m21_175 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="774-774", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="SeriesSamplerTests.cs"];
m21_176 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="774-774", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="SeriesSamplerTests.cs"];
m21_257 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="992-992", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="SeriesSamplerTests.cs"];
m21_258 [label="Benchmark = new FuncBenchmark(benchmark)", span="994-994", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="SeriesSamplerTests.cs"];
m21_259 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="992-992", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="SeriesSamplerTests.cs"];
m21_316 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="SeriesSamplerTests.cs"];
m21_51 [label="Entry QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", span="34-34", cluster="QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", file="SeriesSamplerTests.cs"];
m21_406 [label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", span="49-49", cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", file="SeriesSamplerTests.cs"];
m21_254 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="982-982", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_255 [label="_benchmarkSymbol = symbol", span="984-984", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_256 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="982-982", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_314 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="SeriesSamplerTests.cs"];
m21_82 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SeriesSamplerTests.cs"];
m21_31 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SeriesSamplerTests.cs"];
m21_112 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="584-584", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="SeriesSamplerTests.cs"];
m21_113 [label="SetSecurityInitializer(new FuncSecurityInitializer(securityInitializer))", span="586-586", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="SeriesSamplerTests.cs"];
m21_114 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="584-584", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="SeriesSamplerTests.cs"];
m21_471 [label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182", cluster="QuantConnect.Securities.SecurityCache.Reset()", file="SeriesSamplerTests.cs"];
m21_102 [label="Entry QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="59-59", cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="SeriesSamplerTests.cs"];
m21_94 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SeriesSamplerTests.cs"];
m21_177 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="784-784", cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SeriesSamplerTests.cs"];
m21_178 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="784-784", cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="SeriesSamplerTests.cs"];
m21_163 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="730-730", cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="SeriesSamplerTests.cs"];
m21_164 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="730-730", cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="SeriesSamplerTests.cs"];
m21_161 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="656-656", cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SeriesSamplerTests.cs"];
m21_162 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="656-656", cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SeriesSamplerTests.cs"];
m21_41 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="SeriesSamplerTests.cs"];
m21_57 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="SeriesSamplerTests.cs"];
m21_103 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1663-1663", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="SeriesSamplerTests.cs"];
m21_513 [label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1665-1665", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="SeriesSamplerTests.cs"];
m21_515 [label="_errorMessages.Enqueue(message)", span="1666-1666", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="SeriesSamplerTests.cs"];
m21_516 [label="_previousErrorMessage = message", span="1667-1667", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="SeriesSamplerTests.cs"];
m21_514 [label="return;", span="1665-1665", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="SeriesSamplerTests.cs"];
m21_517 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1663-1663", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="SeriesSamplerTests.cs"];
m21_181 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="802-802", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="SeriesSamplerTests.cs"];
m21_182 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="802-802", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="SeriesSamplerTests.cs"];
m21_84 [label="Entry Unk.TryGetValue", span="", cluster="Unk.TryGetValue", file="SeriesSamplerTests.cs"];
m21_297 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1123-1123", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="SeriesSamplerTests.cs"];
m21_298 [label="_algorithmId = algorithmId", span="1125-1125", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="SeriesSamplerTests.cs"];
m21_299 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1123-1123", cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="SeriesSamplerTests.cs"];
m21_174 [label="Entry QuantConnect.Symbol.ToString()", span="354-354", cluster="QuantConnect.Symbol.ToString()", file="SeriesSamplerTests.cs"];
m21_353 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1283-1283", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_354 [label="return AddSecurity(securityType, symbol, resolution, null, fillDataForward, leverage, extendedMarketHours);", span="1285-1285", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_355 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1283-1283", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_565 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1803-1803", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="SeriesSamplerTests.cs"];
m21_566 [label="Status = status", span="1805-1805", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="SeriesSamplerTests.cs"];
m21_567 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1803-1803", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="SeriesSamplerTests.cs"];
m21_278 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="484-484", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SeriesSamplerTests.cs"];
m21_49 [label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="47-47", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="SeriesSamplerTests.cs"];
m21_209 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="SeriesSamplerTests.cs"];
m21_34 [label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36", cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="SeriesSamplerTests.cs"];
m21_378 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1350-1350", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_379 [label="return AddSecurity<Equity>(SecurityType.Equity, ticker, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="1352-1352", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_380 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1350-1350", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_279 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1076-1076", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_280 [label="var start = new DateTime(year, month, day)", span="1080-1080", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_281 [label="start = start.Date", span="1083-1083", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_282 [label="SetStartDate(start)", span="1085-1085", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_283 [label=Exception, span="1087-1087", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_284 [label="throw new Exception(''Date Invalid: '' + err.Message);", span="1089-1089", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_285 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1076-1076", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SeriesSamplerTests.cs"];
m21_58 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="477-477", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_59 [label="Benchmark == null", span="480-480", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_60 [label="_benchmarkSymbol == null || _benchmarkSymbol == QuantConnect.Symbol.Empty", span="483-483", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_67 [label="Securities.Select(x => x.Value).OfType<Option>()", span="504-504", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_61 [label="_benchmarkSymbol = QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="485-485", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_62 [label="Security security", span="491-491", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_63 [label="!Securities.TryGetValue(_benchmarkSymbol, out security)", span="492-492", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_64 [label="security = CreateBenchmarkSecurity()", span="495-495", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_66 [label="Benchmark = new SecurityBenchmark(security)", span="500-500", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_65 [label="AddToUserDefinedUniverse(security)", span="496-496", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_68 [label="var underlying = option.Symbol.Underlying", span="506-506", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_71 [label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="511-511", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_72 [label="option.Underlying = equity", span="515-515", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_69 [label="Security equity", span="507-507", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_70 [label="!Securities.TryGetValue(underlying, out equity)", span="508-508", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_73 [label="equity.VolatilityModel == VolatilityModel.Null", span="518-518", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_75 [label="equity.VolatilityModel = new StandardDeviationOfReturnsVolatilityModel(periods)", span="521-521", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_74 [label="int periods = 30", span="520-520", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_76 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="477-477", cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="SeriesSamplerTests.cs"];
m21_433 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1473-1473", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_434 [label="var option = (Option)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1475-1476", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_435 [label="var underlying = option.Symbol.Underlying", span="1479-1479", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_438 [label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="1483-1483", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_439 [label="option.Underlying = equity", span="1485-1485", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_440 [label="AddToUserDefinedUniverse(option)", span="1487-1487", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_441 [label="return option;", span="1489-1489", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_436 [label="Security equity", span="1480-1480", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_437 [label="!Securities.TryGetValue(underlying, out equity)", span="1481-1481", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_442 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1473-1473", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_198 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SeriesSamplerTests.cs"];
m21_53 [label="Entry QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", span="25-25", cluster="QuantConnect.Securities.Option.EmptyOptionChainProvider.EmptyOptionChainProvider()", file="SeriesSamplerTests.cs"];
m21_147 [label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0", cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="SeriesSamplerTests.cs"];
m21_157 [label="Entry Unk.GetParameters", span="", cluster="Unk.GetParameters", file="SeriesSamplerTests.cs"];
m21_86 [label="Entry QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", span="68-68", cluster="QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", file="SeriesSamplerTests.cs"];
m21_171 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="766-766", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_172 [label="OnEndOfDay(symbol.ToString())", span="768-768", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_173 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="766-766", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_46 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SeriesSamplerTests.cs"];
m21_142 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="SeriesSamplerTests.cs"];
m21_407 [label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161", cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="SeriesSamplerTests.cs"];
m21_79 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1749-1749", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="SeriesSamplerTests.cs"];
m21_547 [label="Resolution resolution", span="1752-1752", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="SeriesSamplerTests.cs"];
m21_548 [label=_liveMode, span="1753-1753", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="SeriesSamplerTests.cs"];
m21_549 [label="resolution = Resolution.Second", span="1755-1755", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="SeriesSamplerTests.cs"];
m21_550 [label="var hasNonAddSecurityUniverses = (\r\n                    from kvp in UniverseManager\r\n                    let config = kvp.Value.Configuration\r\n                    let symbol = UserDefinedUniverse.CreateSymbol(config.SecurityType, config.Market)\r\n                    where config.Symbol != symbol\r\n                    select kvp).Any()", span="1760-1765", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="SeriesSamplerTests.cs"];
m21_551 [label="resolution = hasNonAddSecurityUniverses ? UniverseSettings.Resolution : Resolution.Daily", span="1767-1767", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="SeriesSamplerTests.cs"];
m21_552 [label="return SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer, _benchmarkSymbol, resolution, true, 1m, false, true, false, LiveMode);", span="1769-1769", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="SeriesSamplerTests.cs"];
m21_553 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1749-1749", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="SeriesSamplerTests.cs"];
m21_81 [label="Entry QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31", cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="SeriesSamplerTests.cs"];
m21_336 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1235-1235", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="SeriesSamplerTests.cs"];
m21_337 [label="!_locked", span="1237-1237", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="SeriesSamplerTests.cs"];
m21_338 [label="_liveMode = live", span="1239-1239", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="SeriesSamplerTests.cs"];
m21_339 [label="Notify = new NotificationManager(live)", span="1240-1240", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="SeriesSamplerTests.cs"];
m21_340 [label="TradeBuilder.SetLiveMode(live)", span="1241-1241", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="SeriesSamplerTests.cs"];
m21_341 [label=live, span="1243-1243", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="SeriesSamplerTests.cs"];
m21_342 [label="_startDate = DateTime.Today", span="1245-1245", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="SeriesSamplerTests.cs"];
m21_343 [label="_endDate = QuantConnect.Time.EndOfTime", span="1246-1246", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="SeriesSamplerTests.cs"];
m21_344 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1235-1235", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="SeriesSamplerTests.cs"];
m21_95 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="543-543", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="SeriesSamplerTests.cs"];
m21_96 [label="_parameters = parameters.ToDictionary()", span="546-546", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="SeriesSamplerTests.cs"];
m21_97 [label="ParameterAttribute.ApplyAttributes(parameters, this)", span="549-549", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="SeriesSamplerTests.cs"];
m21_98 [label=Exception, span="551-551", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="SeriesSamplerTests.cs"];
m21_99 [label="Error(''Error applying parameter values: '' + err.Message)", span="553-553", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="SeriesSamplerTests.cs"];
m21_100 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="543-543", cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="SeriesSamplerTests.cs"];
m21_219 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="890-890", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SeriesSamplerTests.cs"];
m21_220 [label="SetBrokerageModel(Brokerages.BrokerageModel.Create(brokerage, accountType))", span="892-892", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SeriesSamplerTests.cs"];
m21_221 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="890-890", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="SeriesSamplerTests.cs"];
m21_294 [label="Entry System.TimeSpan.FromTicks(long)", span="0-0", cluster="System.TimeSpan.FromTicks(long)", file="SeriesSamplerTests.cs"];
m21_144 [label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0", cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="SeriesSamplerTests.cs"];
m21_54 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="467-467", cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="SeriesSamplerTests.cs"];
m21_55 [label="throw new NotImplementedException(''Please override the Initialize() method'');", span="470-470", cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="SeriesSamplerTests.cs"];
m21_56 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="467-467", cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="SeriesSamplerTests.cs"];
m21_381 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1723-1723", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_537 [label="market == null", span="1726-1726", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_538 [label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1728-1728", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_539 [label="throw new Exception(''No default market set for security type: '' + securityType);", span="1730-1730", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_541 [label="!SymbolCache.TryGetSymbol(ticker, out symbol)", span="1735-1735", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_542 [label="symbol = QuantConnect.Symbol.Create(ticker, securityType, market)", span="1737-1737", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_543 [label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1740-1741", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_540 [label="Symbol symbol", span="1734-1734", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_544 [label="AddToUserDefinedUniverse(security)", span="1742-1742", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_545 [label="return (T)security;", span="1743-1743", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_546 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1723-1723", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_146 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="SeriesSamplerTests.cs"];
m21_500 [label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="221-221", cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="SeriesSamplerTests.cs"];
m21_402 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="SeriesSamplerTests.cs"];
m21_108 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="573-573", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="SeriesSamplerTests.cs"];
m21_109 [label="_userSetSecurityInitializer = true", span="576-576", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="SeriesSamplerTests.cs"];
m21_110 [label="SecurityInitializer = securityInitializer", span="577-577", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="SeriesSamplerTests.cs"];
m21_111 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="573-573", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="SeriesSamplerTests.cs"];
m21_264 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1035-1035", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="SeriesSamplerTests.cs"];
m21_268 [label="!_locked", span="1037-1037", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="SeriesSamplerTests.cs"];
m21_269 [label="Portfolio.SetCash(startingCash)", span="1039-1039", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="SeriesSamplerTests.cs"];
m21_270 [label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1043-1043", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="SeriesSamplerTests.cs"];
m21_271 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1035-1035", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="SeriesSamplerTests.cs"];
m21_350 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1268-1268", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SeriesSamplerTests.cs"];
m21_351 [label="return AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours);", span="1270-1270", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SeriesSamplerTests.cs"];
m21_352 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1268-1268", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SeriesSamplerTests.cs"];
m21_501 [label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373", cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="SeriesSamplerTests.cs"];
m21_183 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="810-810", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="SeriesSamplerTests.cs"];
m21_184 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="810-810", cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="SeriesSamplerTests.cs"];
m21_43 [label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40", cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="SeriesSamplerTests.cs"];
m21_126 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="621-621", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_127 [label="!_checkedForOnDataSlice", span="624-624", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_138 [label="_onDataSlice(slice)", span="648-648", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_128 [label="_checkedForOnDataSlice = true", span="626-626", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_137 [label="_onDataSlice != null", span="646-646", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_129 [label="var method = GetType().GetMethods()\r\n                    .Where(x => x.Name == ''OnData'')\r\n                    .Where(x => x.DeclaringType != typeof(QCAlgorithm))\r\n                    .Where(x => x.GetParameters().Length == 1)\r\n                    .FirstOrDefault(x => x.GetParameters()[0].ParameterType == typeof (Slice))", span="628-632", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_130 [label="method == null", span="634-634", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_134 [label="var call = Expression.Call(self, method, parameter)", span="641-641", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_131 [label="return;", span="636-636", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_132 [label="var self = Expression.Constant(this)", span="639-639", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_133 [label="var parameter = Expression.Parameter(typeof (Slice), ''data'')", span="640-640", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_135 [label="var lambda = Expression.Lambda<Action<Slice>>(call, parameter)", span="642-642", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_136 [label="_onDataSlice = lambda.Compile()", span="643-643", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_139 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="621-621", cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="SeriesSamplerTests.cs"];
m21_391 [label="var canonicalSecurity = (Option) SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1383-1385", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_374 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1364-1364", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_382 [label="market == null", span="1366-1366", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_386 [label="var alias = ''?'' + underlying", span="1375-1375", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_388 [label="canonicalSymbol = QuantConnect.Symbol.Create(underlying, SecurityType.Option, market, alias)", span="1378-1378", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_389 [label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, underlying, SecurityType.Option)", span="1381-1381", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_390 [label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, underlying, SecurityType.Option, CashBook.AccountCurrency)", span="1382-1382", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_396 [label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1393-1393", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_383 [label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Option, out market)", span="1368-1368", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_385 [label="Symbol canonicalSymbol", span="1374-1374", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_384 [label="throw new Exception(''No default market set for security type: '' + SecurityType.Option);", span="1370-1370", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_387 [label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1376-1376", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_395 [label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1391-1391", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_398 [label="UniverseManager.Add(canonicalSymbol, universe)", span="1395-1395", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_392 [label="canonicalSecurity.IsTradable = false", span="1386-1386", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_393 [label="Securities.Add(canonicalSecurity)", span="1387-1387", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_397 [label="universe = new OptionChainUniverse(canonicalSecurity, settings, SecurityInitializer, LiveMode)", span="1394-1394", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_399 [label="return canonicalSecurity;", span="1398-1398", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_394 [label="Universe universe", span="1390-1390", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_400 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1364-1364", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_405 [label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194", cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="SeriesSamplerTests.cs"];
m21_480 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SeriesSamplerTests.cs"];
m21_244 [label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SeriesSamplerTests.cs"];
m21_560 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1789-1789", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="SeriesSamplerTests.cs"];
m21_561 [label="exception == null", span="1791-1791", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="SeriesSamplerTests.cs"];
m21_563 [label="RunTimeError = exception", span="1796-1796", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="SeriesSamplerTests.cs"];
m21_562 [label="throw new ArgumentNullException(''Algorithm.SetRunTimeError(): Algorithm.RunTimeError cannot be set to null.'');", span="1793-1793", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="SeriesSamplerTests.cs"];
m21_564 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1789-1789", cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="SeriesSamplerTests.cs"];
m21_101 [label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46", cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="SeriesSamplerTests.cs"];
m21_376 [label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60", cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_428 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1455-1455", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_429 [label="var future = (Future)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1457-1458", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_430 [label="AddToUserDefinedUniverse(future)", span="1460-1460", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_431 [label="return future;", span="1462-1462", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_432 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1455-1455", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_232 [label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28", cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="SeriesSamplerTests.cs"];
m21_44 [label="Entry QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", span="45-45", cluster="QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", file="SeriesSamplerTests.cs"];
m21_417 [label="var canonicalSecurity = (Future)SecurityManager.CreateSecurity(typeof(ZipEntryName), Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1429-1431", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_375 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1410-1410", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_408 [label="market == null", span="1412-1412", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_412 [label="var alias = ''/'' + symbol", span="1421-1421", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_414 [label="canonicalSymbol = QuantConnect.Symbol.Create(symbol, SecurityType.Future, market, alias)", span="1424-1424", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_415 [label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, symbol, SecurityType.Future)", span="1427-1427", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_416 [label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, symbol, SecurityType.Future, CashBook.AccountCurrency)", span="1428-1428", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_422 [label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1439-1439", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_409 [label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Future, out market)", span="1414-1414", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_411 [label="Symbol canonicalSymbol", span="1420-1420", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_410 [label="throw new Exception(''No default market set for security type: '' + SecurityType.Future);", span="1416-1416", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_413 [label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1422-1422", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_421 [label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1437-1437", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_424 [label="UniverseManager.Add(canonicalSymbol, universe)", span="1441-1441", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_418 [label="canonicalSecurity.IsTradable = false", span="1432-1432", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_419 [label="Securities.Add(canonicalSecurity)", span="1433-1433", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_423 [label="universe = new FuturesChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1440-1440", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_425 [label="return canonicalSecurity;", span="1444-1444", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_420 [label="Universe universe", span="1436-1436", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_426 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1410-1410", cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_48 [label="Entry QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", span="61-61", cluster="QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", file="SeriesSamplerTests.cs"];
m21_50 [label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", span="33-33", cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", file="SeriesSamplerTests.cs"];
m21_45 [label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59", cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="SeriesSamplerTests.cs"];
m21_260 [label="Entry QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", span="30-30", cluster="QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", file="SeriesSamplerTests.cs"];
m21_401 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_329 [label="Entry System.DateTime.AddTicks(long)", span="0-0", cluster="System.DateTime.AddTicks(long)", file="SeriesSamplerTests.cs"];
m21_356 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1298-1298", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_357 [label="securityType == SecurityType.Option", span="1301-1301", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_358 [label="return AddOption(symbol, resolution, market, fillDataForward, leverage);", span="1303-1303", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_359 [label="securityType == SecurityType.Future", span="1306-1306", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_360 [label="return AddFuture(symbol, resolution, market, fillDataForward, leverage);", span="1308-1308", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_361 [label="market == null", span="1313-1313", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_362 [label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1315-1315", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_363 [label="throw new Exception(''No default market set for security type: '' + securityType);", span="1317-1317", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_365 [label="!SymbolCache.TryGetSymbol(symbol, out symbolObject)", span="1322-1322", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_366 [label="symbolObject = QuantConnect.Symbol.Create(symbol, securityType, market)", span="1324-1324", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_367 [label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                    symbolObject, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1327-1328", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_364 [label="Symbol symbolObject", span="1321-1321", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_368 [label="AddToUserDefinedUniverse(security)", span="1330-1330", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_369 [label="return security;", span="1331-1331", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_370 [label=Exception, span="1333-1333", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_371 [label="Error(''Algorithm.AddSecurity(): '' + err)", span="1335-1335", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_372 [label="return null;", span="1336-1336", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_373 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1298-1298", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="SeriesSamplerTests.cs"];
m21_38 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", span="66-66", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Interfaces.IOrderProperties)", file="SeriesSamplerTests.cs"];
m21_169 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="758-758", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="SeriesSamplerTests.cs"];
m21_170 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="758-758", cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="SeriesSamplerTests.cs"];
m21_36 [label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55", cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SeriesSamplerTests.cs"];
m21_490 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1601-1601", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_491 [label="AddData<T>(symbol, resolution, TimeZones.NewYork, fillDataForward, leverage)", span="1604-1604", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_492 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1601-1601", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_210 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SeriesSamplerTests.cs"];
m21_315 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476", cluster="System.DateTime.RoundDown(System.TimeSpan)", file="SeriesSamplerTests.cs"];
m21_443 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1501-1501", cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_444 [label="return AddSecurity<Forex>(SecurityType.Forex, ticker, resolution, market, fillDataForward, leverage, false);", span="1503-1503", cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_445 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1501-1501", cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_77 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="SeriesSamplerTests.cs"];
m21_529 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1700-1700", cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="SeriesSamplerTests.cs"];
m21_530 [label=quit, span="1702-1702", cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="SeriesSamplerTests.cs"];
m21_531 [label="Status = AlgorithmStatus.Stopped", span="1704-1704", cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="SeriesSamplerTests.cs"];
m21_532 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1700-1700", cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="SeriesSamplerTests.cs"];
m21_83 [label="Entry Unk.>", span="", cluster="Unk.>", file="SeriesSamplerTests.cs"];
m21_33 [label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93", cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="SeriesSamplerTests.cs"];
m21_446 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1515-1515", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_447 [label="return AddSecurity<Cfd>(SecurityType.Cfd, ticker, resolution, market, fillDataForward, leverage, false);", span="1517-1517", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_448 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1515-1515", cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="SeriesSamplerTests.cs"];
m21_250 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="SeriesSamplerTests.cs"];
m21_116 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="593-593", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="SeriesSamplerTests.cs"];
m21_117 [label="SetSecurityInitializer(new FuncSecurityInitializer((security, seedSecurity) => securityInitializer(security)))", span="595-595", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="SeriesSamplerTests.cs"];
m21_118 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="593-593", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="SeriesSamplerTests.cs"];
m21_35 [label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57", cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="SeriesSamplerTests.cs"];
m21_32 [label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46", cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="SeriesSamplerTests.cs"];
m21_78 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SeriesSamplerTests.cs"];
m21_234 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="932-932", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="SeriesSamplerTests.cs"];
m21_235 [label="handler == null", span="934-934", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="SeriesSamplerTests.cs"];
m21_237 [label="BrokerageMessageHandler = handler", span="939-939", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="SeriesSamplerTests.cs"];
m21_236 [label="throw new ArgumentNullException(''handler'');", span="936-936", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="SeriesSamplerTests.cs"];
m21_238 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="932-932", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="SeriesSamplerTests.cs"];
m21_286 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1134-1134", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_300 [label=_liveMode, span="1137-1137", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_302 [label="start < (new DateTime(1900, 01, 01))", span="1141-1141", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_305 [label="start > _endDate", span="1149-1149", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_307 [label="start = start.RoundDown(TimeSpan.FromDays(1))", span="1156-1156", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_301 [label="return;", span="1137-1137", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_303 [label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="1143-1143", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_304 [label="_endDate != new DateTime()", span="1147-1147", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_306 [label="throw new Exception(''Please select start date less than end date.'');", span="1151-1151", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_308 [label="!_locked", span="1159-1159", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_310 [label="_startDate = start", span="1164-1164", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_309 [label="!LiveMode", span="1162-1162", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_312 [label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="1170-1170", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_311 [label="SetDateTime(_startDate.ConvertToUtc(TimeZone))", span="1165-1165", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_313 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1134-1134", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="SeriesSamplerTests.cs"];
m21_472 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="SeriesSamplerTests.cs"];
m21_518 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1676-1676", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="SeriesSamplerTests.cs"];
m21_519 [label="var message = error.Message", span="1678-1678", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="SeriesSamplerTests.cs"];
m21_520 [label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1679-1679", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="SeriesSamplerTests.cs"];
m21_522 [label="_errorMessages.Enqueue(message)", span="1680-1680", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="SeriesSamplerTests.cs"];
m21_523 [label="_previousErrorMessage = message", span="1681-1681", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="SeriesSamplerTests.cs"];
m21_521 [label="return;", span="1679-1679", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="SeriesSamplerTests.cs"];
m21_524 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1676-1676", cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="SeriesSamplerTests.cs"];
m21_122 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SeriesSamplerTests.cs"];
m21_507 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="SeriesSamplerTests.cs"];
m21_143 [label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0", cluster="System.Linq.Expressions.Expression.Constant(object)", file="SeriesSamplerTests.cs"];
m21_40 [label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="41-41", cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="SeriesSamplerTests.cs"];
m21_470 [label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174", cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="SeriesSamplerTests.cs"];
m21_330 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1219-1219", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="SeriesSamplerTests.cs"];
m21_331 [label="_locked = true", span="1221-1221", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="SeriesSamplerTests.cs"];
m21_332 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1219-1219", cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="SeriesSamplerTests.cs"];
m21_474 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="SeriesSamplerTests.cs"];
m21_568 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="SeriesSamplerTests.cs"];
m21_569 [label="System.Action<QuantConnect.Securities.Security>", span="", file="SeriesSamplerTests.cs"];
m21_570 [label=string, span="", file="SeriesSamplerTests.cs"];
m21_571 [label="QuantConnect.Symbol", span="", file="SeriesSamplerTests.cs"];
m23_22 [label="var barStartTime = ComputeBarStartTime(tick)", span="138-138", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_60 [label="Entry QuantConnect.Data.BaseData.Clone()", span="206-206", cluster="QuantConnect.Data.BaseData.Clone()", file="StreamStore.cs"];
m23_61 [label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0", cluster="System.DateTime.Subtract(System.TimeSpan)", file="StreamStore.cs"];
m23_6 [label="_queue = new ConcurrentQueue<BaseData>()", span="102-102", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs"];
m23_7 [label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", span="95-95", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", color=red, community=0, file="StreamStore.cs"];
m23_8 [label="cci.Update(new TradeBar\r\n            {\r\n                Symbol = ''SPY'',\r\n                Time = DateTime.Today,\r\n                Open = 3m,\r\n                High = 7m,\r\n                Low = 2m,\r\n                Close = 5m,\r\n                Volume = 10\r\n            })", span="36-45", cluster="QuantConnect.Tests.Indicators.CommodityChannelIndexTests.ResetsProperly()", color=red, community=0, file="StreamStore.cs"];
m23_9 [label="Entry QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", span="109-109", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs"];
m23_10 [label="!ExchangeIsOpen(data.Time)", span="112-112", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", color=green, community=0, file="StreamStore.cs"];
m23_11 [label="return;", span="114-114", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs", color=green, community=0];
m23_12 [label="_data != null && _data.Time < ComputeBarStartTime(data)", span="118-118", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs"];
m23_13 [label="Thread.Sleep(1)", span="119-119", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs"];
m23_14 [label="_data = data", span="121-121", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs"];
m23_15 [label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", span="109-109", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.BaseData)", file="StreamStore.cs"];
m23_16 [label="Entry QuantConnect.Lean.Engine.DataFeeds.StreamStore.ExchangeIsOpen(System.DateTime)", span="231-231", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.ExchangeIsOpen(System.DateTime)", file="StreamStore.cs"];
m23_19 [label="Entry QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", span="129-129", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_17 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="74-74", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="StreamStore.cs"];
m23_65 [label="return DateTime.Now.RoundDown(_increment);", span="225-225", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.ComputeBarStartTime(QuantConnect.Data.BaseData)", file="StreamStore.cs"];
m23_66 [label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.ComputeBarStartTime(QuantConnect.Data.BaseData)", span="222-222", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.ComputeBarStartTime(QuantConnect.Data.BaseData)", file="StreamStore.cs"];
m23_36 [label="Entry QuantConnect.Data.BaseData.Update(decimal, decimal, decimal, decimal)", span="179-179", cluster="QuantConnect.Data.BaseData.Update(decimal, decimal, decimal, decimal)", file="StreamStore.cs"];
m23_64 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="StreamStore.cs"];
m23_70 [label="Entry QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)", span="193-193", cluster="QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)", file="StreamStore.cs"];
m23_63 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="StreamStore.cs"];
m23_21 [label="return;", span="134-134", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", color=green, community=0];
m23_67 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="279-279", cluster="System.DateTime.RoundDown(System.TimeSpan)", file="StreamStore.cs"];
m23_71 [label="Entry QuantConnect.Securities.SecurityExchange.DateTimeIsExtendedOpen(System.DateTime)", span="204-204", cluster="QuantConnect.Securities.SecurityExchange.DateTimeIsExtendedOpen(System.DateTime)", file="StreamStore.cs"];
m23_68 [label="return _security.Exchange.DateTimeIsOpen(time) || (_security.IsExtendedMarketHours && _security.Exchange.DateTimeIsExtendedOpen(time));", span="233-233", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.ExchangeIsOpen(System.DateTime)", color=green, community=0, file="StreamStore.cs"];
m23_69 [label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.ExchangeIsOpen(System.DateTime)", span="231-231", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.ExchangeIsOpen(System.DateTime)", file="StreamStore.cs"];
m23_4 [label="_security = security", span="100-100", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs", color=green, community=0];
m23_18 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="StreamStore.cs"];
m23_59 [label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="149-149", cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="StreamStore.cs"];
m23_5 [label="_increment = config.Increment", span="101-101", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security)", file="StreamStore.cs"];
m23_62 [label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="192-192", cluster="QuantConnect.Data.BaseData.Clone(bool)", file="StreamStore.cs"];
m23_20 [label="!ExchangeIsOpen(tick.Time)", span="132-132", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs", color=green, community=0];
m23_0 [label="Entry QuantConnect.Tests.Indicators.CommodityChannelIndexTests.ComparesAgainstExternalData()", span="26-26", cluster="QuantConnect.Tests.Indicators.CommodityChannelIndexTests.ComparesAgainstExternalData()", file="StreamStore.cs"];
m23_3 [label="Exit QuantConnect.Tests.Indicators.CommodityChannelIndexTests.ComparesAgainstExternalData()", span="26-26", cluster="QuantConnect.Tests.Indicators.CommodityChannelIndexTests.ComparesAgainstExternalData()", file="StreamStore.cs"];
m23_1 [label="var cci = new CommodityChannelIndex(14)", span="28-28", cluster="QuantConnect.Tests.Indicators.CommodityChannelIndexTests.ComparesAgainstExternalData()", file="StreamStore.cs"];
m23_2 [label="TestHelper.TestIndicator(cci, ''spy_with_cci.txt'', ''Commodity Channel Index (CCI) 14'', 1e-2)", span="29-29", cluster="QuantConnect.Tests.Indicators.CommodityChannelIndexTests.ComparesAgainstExternalData()", file="StreamStore.cs"];
m23_23 [label="_data != null && _data.Time < barStartTime", span="139-139", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_38 [label="Entry QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", span="171-171", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_48 [label="!ExchangeIsOpen(triggerTime.Subtract(_increment))", span="195-195", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", color=green, community=0, file="StreamStore.cs"];
m23_47 [label="fillForward && _data == null && _previousData != null", span="191-191", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_49 [label="Log.Debug(''StreamStore.TriggerArchive(): Exchange is closed: '' + Symbol)", span="197-197", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", color=green, community=0, file="StreamStore.cs"];
m23_51 [label="Log.Debug(''StreamStore.TriggerArchive(): Fillforward, Previous Enqueued: S:'' + _previousData.Symbol + '' V:'' + _previousData.Value)", span="202-202", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_50 [label="return;", span="198-198", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", color=green, community=0, file="StreamStore.cs"];
m23_39 [label=_lock, span="173-173", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_40 [label="_data == null && !fillForward", span="178-178", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_41 [label="Log.Debug(''StreamStore.TriggerArchive(): No data to store, and not fill forward: '' + Symbol)", span="180-180", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_42 [label="_data != null", span="183-183", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_43 [label="Log.Debug(''StreamStore.TriggerArchive(): Enqueued new data: S:'' + _data.Symbol + '' V:'' + _data.Value)", span="186-186", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_44 [label="_previousData = _data.Clone()", span="187-187", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_45 [label="_queue.Enqueue(_data.Clone())", span="188-188", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_46 [label="_data = null", span="189-189", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_52 [label="var cloneForward = _previousData.Clone(true)", span="203-203", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_53 [label="cloneForward.Time = _previousData.Time.Add(_increment)", span="204-204", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_54 [label="_queue.Enqueue(cloneForward)", span="205-205", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_55 [label="_previousData = cloneForward.Clone()", span="207-207", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_56 [label=Exception, span="210-210", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_57 [label="Log.Error(''StreamStore.TriggerAchive(fillforward): Failed to archive: '' + err.Message)", span="212-212", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_58 [label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", span="171-171", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.TriggerArchive(System.DateTime, bool)", file="StreamStore.cs"];
m23_37 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="StreamStore.cs"];
m23_25 [label=_lock, span="142-142", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_26 [label="_type.Name", span="144-144", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_28 [label="_data == null", span="147-147", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_29 [label="_data = new TradeBar(barStartTime, _config.Symbol, tick.LastPrice, tick.LastPrice, tick.LastPrice, tick.LastPrice, tick.Quantity, _config.Resolution.ToTimeSpan())", span="149-149", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_30 [label="_data.Update(tick.LastPrice, tick.Quantity, tick.BidPrice, tick.AskPrice)", span="154-154", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_32 [label="_queue.Enqueue(tick)", span="160-160", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_24 [label="Thread.Sleep(1)", span="140-140", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_27 [label="''TradeBar''", span="146-146", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_31 [label="''Tick''", span="159-159", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_33 [label="Exit QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", span="129-129", cluster="QuantConnect.Lean.Engine.DataFeeds.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="StreamStore.cs"];
m23_35 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="405-405", cluster="QuantConnect.Resolution.ToTimeSpan()", file="StreamStore.cs"];
m23_34 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="178-178", cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="StreamStore.cs"];
m23_72 [label="QuantConnect.Lean.Engine.DataFeeds.StreamStore", span="", file="StreamStore.cs"];
m24_8 [label="Entry QuantConnect.Chart.Chart(string)", span="64-64", cluster="QuantConnect.Chart.Chart(string)", file="TradierBrokerage.cs"];
m24_9 [label="Name = name", span="66-66", cluster="QuantConnect.Chart.Chart(string)", file="TradierBrokerage.cs"];
m24_10 [label="Series = new Dictionary<string, Series>()", span="67-67", cluster="QuantConnect.Chart.Chart(string)", file="TradierBrokerage.cs"];
m24_11 [label="Exit QuantConnect.Chart.Chart(string)", span="64-64", cluster="QuantConnect.Chart.Chart(string)", file="TradierBrokerage.cs"];
m24_126 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="TradierBrokerage.cs"];
m24_17 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="TradierBrokerage.cs"];
m24_116 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="TradierBrokerage.cs"];
m24_73 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="TradierBrokerage.cs"];
m24_56 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="TradierBrokerage.cs"];
m24_57 [label="Name = name", span="214-214", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="TradierBrokerage.cs"];
m24_58 [label="SeriesType = type", span="215-215", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="TradierBrokerage.cs"];
m24_59 [label="Index = index", span="216-216", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="TradierBrokerage.cs"];
m24_60 [label="Unit = unit", span="217-217", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="TradierBrokerage.cs"];
m24_61 [label="Color = Color.Empty", span="218-218", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="TradierBrokerage.cs"];
m24_62 [label="ScatterMarkerSymbol = ScatterMarkerSymbol.None", span="219-219", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="TradierBrokerage.cs"];
m24_63 [label="Exit QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", span="212-212", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int, string)", file="TradierBrokerage.cs"];
m24_119 [label="Entry QuantConnect.ChartPoint.ChartPoint(long, decimal)", span="363-363", cluster="QuantConnect.ChartPoint.ChartPoint(long, decimal)", file="TradierBrokerage.cs"];
m24_120 [label="x = xValue", span="365-365", cluster="QuantConnect.ChartPoint.ChartPoint(long, decimal)", file="TradierBrokerage.cs"];
m24_121 [label="y = yValue", span="366-366", cluster="QuantConnect.ChartPoint.ChartPoint(long, decimal)", file="TradierBrokerage.cs"];
m24_122 [label="Exit QuantConnect.ChartPoint.ChartPoint(long, decimal)", span="363-363", cluster="QuantConnect.ChartPoint.ChartPoint(long, decimal)", file="TradierBrokerage.cs"];
m24_64 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", span="228-228", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="TradierBrokerage.cs"];
m24_65 [label="Name = name", span="230-230", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="TradierBrokerage.cs"];
m24_67 [label="SeriesType = type", span="232-232", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="TradierBrokerage.cs"];
m24_68 [label="Unit = unit", span="233-233", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="TradierBrokerage.cs"];
m24_66 [label="Values = new List<ChartPoint>()", span="231-231", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="TradierBrokerage.cs"];
m24_69 [label="Index = 0", span="234-234", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="TradierBrokerage.cs"];
m24_70 [label="Color = Color.Empty", span="235-235", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="TradierBrokerage.cs"];
m24_71 [label="ScatterMarkerSymbol = ScatterMarkerSymbol.None", span="236-236", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="TradierBrokerage.cs"];
m24_72 [label="Exit QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", span="228-228", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="TradierBrokerage.cs"];
m24_92 [label="Entry QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", span="282-282", cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="TradierBrokerage.cs"];
m24_93 [label="Values.Count >= 4000 && !liveMode", span="284-284", cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="TradierBrokerage.cs"];
m24_95 [label="var chartPoint = new ChartPoint(time, value)", span="290-290", cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="TradierBrokerage.cs"];
m24_94 [label="return;", span="287-287", cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="TradierBrokerage.cs"];
m24_96 [label="Values.Count > 0 && Values[Values.Count - 1].x == chartPoint.x", span="291-291", cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="TradierBrokerage.cs"];
m24_97 [label="Values[Values.Count - 1] = chartPoint", span="294-294", cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="TradierBrokerage.cs"];
m24_98 [label="Values.Add(chartPoint)", span="298-298", cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="TradierBrokerage.cs"];
m24_99 [label="Exit QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", span="282-282", cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="TradierBrokerage.cs"];
m24_28 [label="Entry QuantConnect.Series.GetUpdates()", span="306-306", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_102 [label="var copy = new Series(Name, SeriesType, Index, Unit)\r\n            {\r\n                Color = Color,\r\n                ScatterMarkerSymbol = ScatterMarkerSymbol\r\n            }", span="308-312", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_103 [label="var i = _updatePosition", span="317-317", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_105 [label="copy.Values.Add(Values[i])", span="319-319", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_110 [label="return copy;", span="327-327", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_104 [label="i < Values.Count", span="317-317", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_106 [label="i++", span="317-317", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_107 [label="_updatePosition = Values.Count", span="322-322", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_108 [label=Exception, span="324-324", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_109 [label="Log.Error(err)", span="325-325", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_111 [label="Exit QuantConnect.Series.GetUpdates()", span="306-306", cluster="QuantConnect.Series.GetUpdates()", file="TradierBrokerage.cs"];
m24_20 [label="Entry QuantConnect.Chart.GetUpdates()", span="91-91", cluster="QuantConnect.Chart.GetUpdates()", file="TradierBrokerage.cs"];
m24_21 [label="var copy = new Chart(Name)", span="93-93", cluster="QuantConnect.Chart.GetUpdates()", file="TradierBrokerage.cs"];
m24_22 [label="Series.Values", span="96-96", cluster="QuantConnect.Chart.GetUpdates()", file="TradierBrokerage.cs"];
m24_23 [label="copy.AddSeries(series.GetUpdates())", span="98-98", cluster="QuantConnect.Chart.GetUpdates()", file="TradierBrokerage.cs"];
m24_26 [label="return copy;", span="104-104", cluster="QuantConnect.Chart.GetUpdates()", file="TradierBrokerage.cs"];
m24_24 [label=Exception, span="101-101", cluster="QuantConnect.Chart.GetUpdates()", file="TradierBrokerage.cs"];
m24_25 [label="Log.Error(err)", span="102-102", cluster="QuantConnect.Chart.GetUpdates()", file="TradierBrokerage.cs"];
m24_27 [label="Exit QuantConnect.Chart.GetUpdates()", span="91-91", cluster="QuantConnect.Chart.GetUpdates()", file="TradierBrokerage.cs"];
m24_137 [label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="TradierBrokerage.cs"];
m24_18 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="TradierBrokerage.cs"];
m24_19 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="TradierBrokerage.cs"];
m24_138 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="TradierBrokerage.cs"];
m24_74 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", span="246-246", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", file="TradierBrokerage.cs"];
m24_75 [label="Name = name", span="248-248", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", file="TradierBrokerage.cs"];
m24_77 [label="SeriesType = type", span="250-250", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", file="TradierBrokerage.cs"];
m24_78 [label="Unit = unit", span="251-251", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", file="TradierBrokerage.cs"];
m24_80 [label="Color = color", span="253-253", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", file="TradierBrokerage.cs"];
m24_76 [label="Values = new List<ChartPoint>()", span="249-249", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", file="TradierBrokerage.cs"];
m24_79 [label="Index = 0", span="252-252", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", file="TradierBrokerage.cs"];
m24_81 [label="ScatterMarkerSymbol = ScatterMarkerSymbol.None", span="254-254", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", file="TradierBrokerage.cs"];
m24_82 [label="Exit QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", span="246-246", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color)", file="TradierBrokerage.cs"];
m24_30 [label="Entry QuantConnect.Series.Series()", span="158-158", cluster="QuantConnect.Series.Series()", file="TradierBrokerage.cs"];
m24_31 [label="Exit QuantConnect.Series.Series()", span="158-158", cluster="QuantConnect.Series.Series()", file="TradierBrokerage.cs"];
m24_129 [label="Entry decimal.SmartRounding()", span="206-206", cluster="decimal.SmartRounding()", file="TradierBrokerage.cs"];
m24_48 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", span="195-195", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", file="TradierBrokerage.cs"];
m24_49 [label="Name = name", span="197-197", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", file="TradierBrokerage.cs"];
m24_50 [label="SeriesType = type", span="198-198", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", file="TradierBrokerage.cs"];
m24_51 [label="Index = index", span="199-199", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", file="TradierBrokerage.cs"];
m24_52 [label="Unit = ''$''", span="200-200", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", file="TradierBrokerage.cs"];
m24_53 [label="Color = Color.Empty", span="201-201", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", file="TradierBrokerage.cs"];
m24_54 [label="ScatterMarkerSymbol = ScatterMarkerSymbol.None", span="202-202", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", file="TradierBrokerage.cs"];
m24_55 [label="Exit QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", span="195-195", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", file="TradierBrokerage.cs"];
m24_83 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", span="265-265", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", file="TradierBrokerage.cs"];
m24_84 [label="Name = name", span="267-267", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", file="TradierBrokerage.cs"];
m24_86 [label="SeriesType = type", span="269-269", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", file="TradierBrokerage.cs"];
m24_87 [label="Unit = unit", span="270-270", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", file="TradierBrokerage.cs"];
m24_89 [label="Color = color", span="272-272", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", file="TradierBrokerage.cs"];
m24_90 [label="ScatterMarkerSymbol = symbol", span="273-273", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", file="TradierBrokerage.cs"];
m24_85 [label="Values = new List<ChartPoint>()", span="268-268", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", file="TradierBrokerage.cs"];
m24_88 [label="Index = 0", span="271-271", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", file="TradierBrokerage.cs"];
m24_91 [label="Exit QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", span="265-265", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string, Color, QuantConnect.ScatterMarkerSymbol)", file="TradierBrokerage.cs"];
m24_130 [label="Entry QuantConnect.ChartPoint.ChartPoint(QuantConnect.ChartPoint)", span="377-377", cluster="QuantConnect.ChartPoint.ChartPoint(QuantConnect.ChartPoint)", file="TradierBrokerage.cs"];
m24_131 [label="x = point.x", span="379-379", cluster="QuantConnect.ChartPoint.ChartPoint(QuantConnect.ChartPoint)", file="TradierBrokerage.cs"];
m24_132 [label="y = point.y.SmartRounding()", span="380-380", cluster="QuantConnect.ChartPoint.ChartPoint(QuantConnect.ChartPoint)", file="TradierBrokerage.cs"];
m24_133 [label="Exit QuantConnect.ChartPoint.ChartPoint(QuantConnect.ChartPoint)", span="377-377", cluster="QuantConnect.ChartPoint.ChartPoint(QuantConnect.ChartPoint)", file="TradierBrokerage.cs"];
m24_0 [label="Entry QuantConnect.Chart.Chart()", span="45-45", cluster="QuantConnect.Chart.Chart()", file="TradierBrokerage.cs"];
m24_1 [label="Exit QuantConnect.Chart.Chart()", span="45-45", cluster="QuantConnect.Chart.Chart()", file="TradierBrokerage.cs"];
m24_7 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TradierBrokerage.cs"];
m24_40 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType)", span="179-179", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="TradierBrokerage.cs"];
m24_41 [label="Name = name", span="181-181", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="TradierBrokerage.cs"];
m24_42 [label="SeriesType = type", span="182-182", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="TradierBrokerage.cs"];
m24_43 [label="Index = 0", span="183-183", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="TradierBrokerage.cs"];
m24_44 [label="Unit = ''$''", span="184-184", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="TradierBrokerage.cs"];
m24_45 [label="Color = Color.Empty", span="185-185", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="TradierBrokerage.cs"];
m24_46 [label="ScatterMarkerSymbol = ScatterMarkerSymbol.None", span="186-186", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="TradierBrokerage.cs"];
m24_47 [label="Exit QuantConnect.Series.Series(string, QuantConnect.SeriesType)", span="179-179", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType)", file="TradierBrokerage.cs"];
m24_134 [label="Entry QuantConnect.ChartPoint.ToString()", span="386-386", cluster="QuantConnect.ChartPoint.ToString()", file="TradierBrokerage.cs"];
m24_135 [label="return Time.UnixTimeStampToDateTime(x).ToString(''o'') + '' - '' + y;", span="388-388", cluster="QuantConnect.ChartPoint.ToString()", file="TradierBrokerage.cs"];
m24_136 [label="Exit QuantConnect.ChartPoint.ToString()", span="386-386", cluster="QuantConnect.ChartPoint.ToString()", file="TradierBrokerage.cs"];
m24_101 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="TradierBrokerage.cs"];
m24_127 [label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="169-169", cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="TradierBrokerage.cs"];
m24_12 [label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74", cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="TradierBrokerage.cs"];
m24_13 [label="!Series.ContainsKey(series.Name)", span="77-77", cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="TradierBrokerage.cs"];
m24_14 [label="Series.Add(series.Name, series)", span="79-79", cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="TradierBrokerage.cs"];
m24_15 [label="throw new Exception(''Chart.AddSeries(): Chart series name already exists'');", span="83-83", cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="TradierBrokerage.cs"];
m24_16 [label="Exit QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74", cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="TradierBrokerage.cs"];
m24_117 [label="Entry QuantConnect.ChartPoint.ChartPoint()", span="356-356", cluster="QuantConnect.ChartPoint.ChartPoint()", file="TradierBrokerage.cs"];
m24_118 [label="Exit QuantConnect.ChartPoint.ChartPoint()", span="356-356", cluster="QuantConnect.ChartPoint.ChartPoint()", file="TradierBrokerage.cs"];
m24_100 [label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370", cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="TradierBrokerage.cs"];
m24_123 [label="x = Convert.ToInt64(Time.DateTimeToUnixTimeStamp(time.ToUniversalTime()))", span="372-372", cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="TradierBrokerage.cs"];
m24_124 [label="y = value.SmartRounding()", span="373-373", cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="TradierBrokerage.cs"];
m24_125 [label="Exit QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370", cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="TradierBrokerage.cs"];
m24_128 [label="Entry System.Convert.ToInt64(double)", span="0-0", cluster="System.Convert.ToInt64(double)", file="TradierBrokerage.cs"];
m24_2 [label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53", cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="TradierBrokerage.cs"];
m24_3 [label="Name = name", span="55-55", cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="TradierBrokerage.cs"];
m24_5 [label="ChartType = type", span="57-57", cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="TradierBrokerage.cs"];
m24_4 [label="Series = new Dictionary<string, Series>()", span="56-56", cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="TradierBrokerage.cs"];
m24_6 [label="Exit QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53", cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="TradierBrokerage.cs"];
m24_32 [label="Entry QuantConnect.Series.Series(string)", span="164-164", cluster="QuantConnect.Series.Series(string)", file="TradierBrokerage.cs"];
m24_33 [label="Name = name", span="166-166", cluster="QuantConnect.Series.Series(string)", file="TradierBrokerage.cs"];
m24_34 [label="SeriesType = SeriesType.Line", span="167-167", cluster="QuantConnect.Series.Series(string)", file="TradierBrokerage.cs"];
m24_35 [label="Unit = ''$''", span="168-168", cluster="QuantConnect.Series.Series(string)", file="TradierBrokerage.cs"];
m24_36 [label="Index = 0", span="169-169", cluster="QuantConnect.Series.Series(string)", file="TradierBrokerage.cs"];
m24_37 [label="Color = Color.Empty", span="170-170", cluster="QuantConnect.Series.Series(string)", file="TradierBrokerage.cs"];
m24_38 [label="ScatterMarkerSymbol = ScatterMarkerSymbol.None", span="171-171", cluster="QuantConnect.Series.Series(string)", file="TradierBrokerage.cs"];
m24_39 [label="Exit QuantConnect.Series.Series(string)", span="164-164", cluster="QuantConnect.Series.Series(string)", file="TradierBrokerage.cs"];
m24_112 [label="Entry QuantConnect.Series.Purge()", span="333-333", cluster="QuantConnect.Series.Purge()", file="TradierBrokerage.cs"];
m24_113 [label="Values.Clear()", span="335-335", cluster="QuantConnect.Series.Purge()", file="TradierBrokerage.cs"];
m24_114 [label="_updatePosition = 0", span="336-336", cluster="QuantConnect.Series.Purge()", file="TradierBrokerage.cs"];
m24_115 [label="Exit QuantConnect.Series.Purge()", span="333-333", cluster="QuantConnect.Series.Purge()", file="TradierBrokerage.cs"];
m24_139 [label="QuantConnect.Chart", span="", file="TradierBrokerage.cs"];
m24_140 [label="QuantConnect.Series", span="", file="TradierBrokerage.cs"];
m24_141 [label="QuantConnect.ChartPoint", span="", file="TradierBrokerage.cs"];
m25_22 [label="Entry QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", span="30-30", cluster="QuantConnect.Securities.ConstantFeeTransactionModel.ConstantFeeTransactionModel(decimal)", file="TradierBrokerageModel.cs"];
m25_0 [label="Entry QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="39-39", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TradierBrokerageModel.cs"];
m25_1 [label="message = null", span="41-41", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_2 [label="var securityType = order.SecurityType", span="43-43", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_3 [label="securityType != SecurityType.Equity", span="44-44", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_6 [label="!CanExecuteOrder(security, order)", span="53-53", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_7 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ExtendedMarket'',\r\n                    ''Tradier does not support extended market hours trading.  Your order will be processed at market open.''\r\n                    )", span="55-57", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=1, file="TradierBrokerageModel.cs"];
m25_8 [label="return true;", span="61-61", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_4 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model only supports equities.''\r\n                    )", span="46-48", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=1, file="TradierBrokerageModel.cs"];
m25_5 [label="return false;", span="50-50", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_9 [label="Exit QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="39-39", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="TradierBrokerageModel.cs"];
m25_11 [label="Entry QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="74-74", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="TradierBrokerageModel.cs"];
m25_12 [label="var timeOfDay = security.Time.TimeOfDay", span="77-77", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_13 [label="timeOfDay < EquityExchange.EquityMarketOpen || timeOfDay > EquityExchange.EquityMarketClose", span="78-78", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_14 [label="return false;", span="80-80", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_15 [label="return true;", span="82-82", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_16 [label="Exit QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="74-74", cluster="QuantConnect.Brokerages.TradierBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="TradierBrokerageModel.cs"];
m25_17 [label="Entry QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", span="90-90", cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", file="TradierBrokerageModel.cs"];
m25_18 [label="security.Type == SecurityType.Equity", span="92-92", cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_19 [label="return new ConstantFeeTransactionModel(1m);", span="95-95", cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_20 [label="return new ConstantFeeTransactionModel(0m);", span="100-100", cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", color=green, community=0, file="TradierBrokerageModel.cs"];
m25_21 [label="Exit QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", span="90-90", cluster="QuantConnect.Brokerages.TradierBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", file="TradierBrokerageModel.cs"];
m25_10 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="TradierBrokerageModel.cs"];
m25_23 [label="QuantConnect.Brokerages.TradierBrokerageModel", span="", file="TradierBrokerageModel.cs"];
n508 -> n1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n9  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n184  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n196  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n198  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n210  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n212  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n217  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n218  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n224  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n226  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n233  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n237  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n244  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n247  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n259  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n267  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n275  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n279  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n281  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n282  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n284  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n286  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n291  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n293  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n296  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n310  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n315  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n316  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n317  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n318  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n322  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n324  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n325  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n327  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n341  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n353  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n357  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n368  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n384  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n386  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n388  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n389  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n393  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n394  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n395  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n396  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n397  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n401  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n434  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n441  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n444  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n446  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n447  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n448  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n451  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n458  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n462  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n463  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n464  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n465  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n466  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n467  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n469  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n471  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n472  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n474  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n476  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n477  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n479  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n481  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n482  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n483  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n484  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n486  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n488  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n508 -> n490  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler"];
n509 -> n426  [key=1, style=dashed, color=darkseagreen4, label=unixDateStart];
n510 -> n426  [key=1, style=dashed, color=darkseagreen4, label=unixDateStop];
n511 -> n429  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n512 -> n429  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n11  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n12  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n12  [key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n13  [key=2, style=dotted];
n6 -> n7  [key=0, style=solid];
n6 -> n14  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n14  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid, color=red];
n9 -> n10  [key=0, style=solid, color=red];
n9 -> n15  [key=2, style=dotted, color=red];
n10 -> n0  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
n16 -> n19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IMessagingHandler"];
n16 -> n20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ISetupHandler"];
n16 -> n21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
n16 -> n22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=0, style=solid];
n24 -> n27  [key=0, style=solid];
n24 -> n28  [key=2, style=dotted];
n25 -> n26  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n27 -> n16  [key=0, style=bold, color=blue];
n29 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n39  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n47  [key=2, style=dotted];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=0, style=solid];
n32 -> n42  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n43  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n44  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n37  [key=0, style=solid];
n35 -> n30  [key=0, style=solid];
n44 -> n48  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n30  [key=0, style=solid];
n36 -> n45  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n38 -> n30  [key=0, style=solid];
n38 -> n46  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n41 -> n29  [key=0, style=bold, color=blue];
n48 -> n49  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n49 -> n52  [key=0, style=solid];
n49 -> n132  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n133  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n129  [key=0, style=solid];
n52 -> n131  [key=0, style=solid];
n51 -> n131  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n131 -> n44  [key=0, style=bold, color=blue];
n54 -> n55  [key=0, style=solid];
n54 -> n13  [key=2, style=dotted];
n54 -> n58  [key=1, style=dashed, color=darkseagreen4, label=deltaOrders];
n54 -> n59  [key=1, style=dashed, color=darkseagreen4, label=deltaOrders];
n54 -> n62  [key=1, style=dashed, color=darkseagreen4, label=deltaOrders];
n54 -> n92  [key=1, style=dashed, color=darkseagreen4, label=deltaOrders];
n55 -> n56  [key=0, style=solid];
n55 -> n134  [key=2, style=dotted];
n58 -> n56  [key=0, style=solid];
n58 -> n136  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n139  [key=2, style=dotted];
n62 -> n140  [key=2, style=dotted];
n62 -> n62  [key=1, style=dashed, color=darkseagreen4, label=order];
n92 -> n93  [key=0, style=solid];
n92 -> n153  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n59  [key=0, style=solid];
n56 -> n42  [key=2, style=dotted];
n56 -> n58  [key=1, style=dashed, color=darkseagreen4, label=orderEvent];
n57 -> n58  [key=0, style=solid];
n57 -> n135  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n137  [key=2, style=dotted];
n60 -> n60  [key=1, style=dashed, color=darkseagreen4, label=order];
n61 -> n59  [key=0, style=solid];
n61 -> n138  [key=2, style=dotted];
n61 -> n61  [key=1, style=dashed, color=darkseagreen4, label=order];
n63 -> n64  [key=0, style=solid];
n63 -> n13  [key=2, style=dotted];
n63 -> n68  [key=1, style=dashed, color=darkseagreen4, label=deltaCharts];
n63 -> n92  [key=1, style=dashed, color=darkseagreen4, label=deltaCharts];
n64 -> n65  [key=0, style=solid];
n64 -> n141  [key=2, style=dotted];
n68 -> n66  [key=0, style=solid];
n68 -> n143  [key=2, style=dotted];
n68 -> n144  [key=2, style=dotted];
n68 -> n68  [key=1, style=dashed, color=darkseagreen4, label=chart];
n65 -> n66  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n66 -> n69  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n142  [key=2, style=dotted];
n67 -> n67  [key=1, style=dashed, color=darkseagreen4, label=chart];
n69 -> n70  [key=0, style=solid];
n69 -> n141  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n13  [key=2, style=dotted];
n70 -> n78  [key=1, style=dashed, color=darkseagreen4, label=holdings];
n70 -> n92  [key=1, style=dashed, color=darkseagreen4, label=holdings];
n70 -> n104  [key=1, style=dashed, color=darkseagreen4, label=holdings];
n71 -> n72  [key=0, style=solid];
n71 -> n13  [key=2, style=dotted];
n71 -> n92  [key=1, style=dashed, color=darkseagreen4, label=deltaStatistics];
n71 -> n104  [key=1, style=dashed, color=darkseagreen4, label=deltaStatistics];
n78 -> n77  [key=0, style=solid];
n78 -> n150  [key=2, style=dotted];
n78 -> n151  [key=2, style=dotted];
n104 -> n105  [key=0, style=solid];
n104 -> n156  [key=2, style=dotted];
n104 -> n157  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n13  [key=2, style=dotted];
n72 -> n82  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
n72 -> n85  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
n72 -> n86  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
n72 -> n87  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
n72 -> n88  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
n72 -> n89  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
n72 -> n90  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
n72 -> n91  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
n72 -> n92  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
n72 -> n104  [key=1, style=dashed, color=darkseagreen4, label=runtimeStatistics];
n73 -> n74  [key=0, style=solid];
n73 -> n145  [key=2, style=dotted];
n73 -> n75  [key=1, style=dashed, color=darkseagreen4, label=serverStatistics];
n73 -> n76  [key=1, style=dashed, color=darkseagreen4, label=serverStatistics];
n73 -> n92  [key=1, style=dashed, color=darkseagreen4, label=serverStatistics];
n73 -> n104  [key=1, style=dashed, color=darkseagreen4, label=serverStatistics];
n82 -> n81  [key=0, style=solid];
n82 -> n144  [key=2, style=dotted];
n82 -> n82  [key=1, style=dashed, color=darkseagreen4, label=pair];
n85 -> n86  [key=0, style=solid];
n85 -> n152  [key=2, style=dotted];
n85 -> n144  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n152  [key=2, style=dotted];
n86 -> n144  [key=2, style=dotted];
n87 -> n88  [key=0, style=solid];
n87 -> n152  [key=2, style=dotted];
n87 -> n144  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n152  [key=2, style=dotted];
n88 -> n144  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n152  [key=2, style=dotted];
n89 -> n144  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n152  [key=2, style=dotted];
n90 -> n144  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n152  [key=2, style=dotted];
n91 -> n144  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n146  [key=2, style=dotted];
n75 -> n75  [key=1, style=dashed, color=darkseagreen4, label=upTime];
n76 -> n77  [key=0, style=solid];
n76 -> n147  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n79  [key=0, style=solid];
n77 -> n148  [key=2, style=dotted];
n77 -> n149  [key=2, style=dotted];
n77 -> n167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n77 -> n172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n79 -> n80  [key=0, style=solid];
n79 -> n141  [key=2, style=dotted];
n167 -> n168  [key=0, style=solid];
n172 -> n173  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n81 -> n83  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n83 -> n141  [key=2, style=dotted];
n84 -> n85  [key=0, style=solid];
n84 -> n88  [key=1, style=dashed, color=darkseagreen4, label=netReturn];
n84 -> n118  [key=1, style=dashed, color=darkseagreen4, label=netReturn];
n118 -> n119  [key=0, style=solid];
n118 -> n121  [key=0, style=solid];
n118 -> n163  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n93 -> n95  [key=0, style=solid];
n153 -> n175  [key=0, style=solid];
n153 -> n178  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, QuantConnect.Chart>"];
n153 -> n188  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>"];
n153 -> n63  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.Dictionary<string, QuantConnect.Chart> deltaCharts"];
n94 -> n93  [key=0, style=solid];
n94 -> n43  [key=2, style=dotted];
n95 -> n96  [key=0, style=solid];
n95 -> n107  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n141  [key=2, style=dotted];
n107 -> n108  [key=0, style=solid];
n107 -> n117  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n154  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n13  [key=2, style=dotted];
n98 -> n102  [key=1, style=dashed, color=darkseagreen4, label=chartComplete];
n98 -> n104  [key=1, style=dashed, color=darkseagreen4, label=chartComplete];
n99 -> n100  [key=0, style=solid];
n102 -> n100  [key=0, style=solid];
n102 -> n144  [key=2, style=dotted];
n102 -> n102  [key=1, style=dashed, color=darkseagreen4, label=chart];
n100 -> n101  [key=0, style=solid];
n100 -> n103  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n101 -> n142  [key=2, style=dotted];
n101 -> n101  [key=1, style=dashed, color=darkseagreen4, label=chart];
n103 -> n104  [key=0, style=solid];
n103 -> n155  [key=2, style=dotted];
n105 -> n106  [key=0, style=solid];
n105 -> n158  [key=2, style=dotted];
n106 -> n107  [key=0, style=solid];
n106 -> n141  [key=2, style=dotted];
n158 -> n340  [key=0, style=solid];
n158 -> n342  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.Packet"];
n158 -> n344  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.Packet"];
n158 -> n104  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Packets.Packet packet"];
n158 -> n323  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Packets.Packet packet"];
n158 -> n325  [key=3, color=darkorchid, style=bold, label="Parameter variable bool async"];
n108 -> n109  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n117 -> n122  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n141  [key=2, style=dotted];
n110 -> n111  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n112 -> n159  [key=2, style=dotted];
n112 -> n160  [key=2, style=dotted];
n112 -> n161  [key=2, style=dotted];
n112 -> n112  [key=1, style=dashed, color=darkseagreen4, label=log];
n112 -> n114  [key=1, style=dashed, color=darkseagreen4, label=logs];
n113 -> n114  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n114 -> n162  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n115 -> n154  [key=2, style=dotted];
n162 -> n331  [key=0, style=solid];
n162 -> n108  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Logging.LogEntry> logs"];
n116 -> n117  [key=0, style=solid];
n116 -> n141  [key=2, style=dotted];
n122 -> n123  [key=0, style=solid];
n122 -> n141  [key=2, style=dotted];
n119 -> n120  [key=0, style=solid];
n121 -> n122  [key=0, style=solid];
n121 -> n154  [key=2, style=dotted];
n120 -> n121  [key=0, style=solid];
n120 -> n46  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n124 -> n127  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n125 -> n124  [key=0, style=solid];
n125 -> n125  [key=1, style=dashed, color=darkseagreen4, label=chart];
n127 -> n128  [key=0, style=solid];
n127 -> n141  [key=2, style=dotted];
n126 -> n125  [key=0, style=solid];
n126 -> n164  [key=2, style=dotted];
n126 -> n165  [key=2, style=dotted];
n126 -> n161  [key=2, style=dotted];
n126 -> n126  [key=1, style=dashed, color=darkseagreen4, label=series];
n128 -> n129  [key=0, style=solid];
n128 -> n131  [key=0, style=solid];
n128 -> n166  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n46  [key=2, style=dotted];
n168 -> n169  [key=0, style=solid];
n168 -> n170  [key=2, style=dotted];
n168 -> n171  [key=2, style=dotted];
n169 -> n167  [key=0, style=bold, color=blue];
n173 -> n174  [key=0, style=solid];
n174 -> n172  [key=0, style=bold, color=blue];
n175 -> n176  [key=0, style=solid];
n175 -> n183  [key=1, style=dashed, color=darkseagreen4, label=groupSize];
n175 -> n175  [key=3, color=darkorchid, style=bold, label="Local variable int groupSize"];
n178 -> n179  [key=0, style=solid];
n178 -> n186  [key=0, style=solid];
n178 -> n180  [key=1, style=dashed, color=darkseagreen4, label=deltaChart];
n178 -> n181  [key=1, style=dashed, color=darkseagreen4, label=deltaChart];
n178 -> n182  [key=1, style=dashed, color=darkseagreen4, label=deltaChart];
n188 -> n189  [key=0, style=solid];
n188 -> n156  [key=2, style=dotted];
n188 -> n192  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n176 -> n13  [key=2, style=dotted];
n176 -> n180  [key=1, style=dashed, color=darkseagreen4, label=current];
n176 -> n183  [key=1, style=dashed, color=darkseagreen4, label=current];
n176 -> n184  [key=1, style=dashed, color=darkseagreen4, label=current];
n176 -> n186  [key=1, style=dashed, color=darkseagreen4, label=current];
n176 -> n187  [key=1, style=dashed, color=darkseagreen4, label=current];
n183 -> n184  [key=0, style=solid];
n183 -> n178  [key=0, style=solid];
n177 -> n178  [key=0, style=solid];
n177 -> n15  [key=2, style=dotted];
n177 -> n184  [key=1, style=dashed, color=darkseagreen4, label=chartPackets];
n177 -> n187  [key=1, style=dashed, color=darkseagreen4, label=chartPackets];
n177 -> n189  [key=1, style=dashed, color=darkseagreen4, label=chartPackets];
n180 -> n181  [key=0, style=solid];
n180 -> n144  [key=2, style=dotted];
n184 -> n185  [key=0, style=solid];
n184 -> n156  [key=2, style=dotted];
n184 -> n192  [key=2, style=dotted];
n184 -> n193  [key=2, style=dotted];
n186 -> n187  [key=0, style=solid];
n186 -> n188  [key=0, style=solid];
n187 -> n188  [key=0, style=solid];
n187 -> n156  [key=2, style=dotted];
n187 -> n192  [key=2, style=dotted];
n187 -> n193  [key=2, style=dotted];
n189 -> n190  [key=0, style=solid];
n189 -> n194  [key=2, style=dotted];
n179 -> n180  [key=0, style=solid];
n179 -> n191  [key=2, style=dotted];
n179 -> n182  [key=1, style=dashed, color=darkseagreen4, label=chart];
n181 -> n182  [key=0, style=solid];
n181 -> n183  [key=0, style=solid];
n182 -> n183  [key=0, style=solid];
n185 -> n178  [key=0, style=solid];
n185 -> n13  [key=2, style=dotted];
n185 -> n186  [key=1, style=dashed, color=darkseagreen4, label=current];
n185 -> n187  [key=1, style=dashed, color=darkseagreen4, label=current];
n190 -> n153  [key=0, style=bold, color=blue];
n195 -> n196  [key=0, style=solid];
n195 -> n198  [key=1, style=dashed, color=darkseagreen4, label=string];
n195 -> n199  [key=1, style=dashed, color=darkseagreen4, label=string];
n195 -> n387  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n195 -> n470  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n196 -> n197  [key=0, style=solid];
n196 -> n198  [key=0, style=solid];
n198 -> n199  [key=0, style=solid];
n198 -> n201  [key=2, style=dotted];
n198 -> n202  [key=2, style=dotted];
n199 -> n200  [key=0, style=solid];
n199 -> n203  [key=2, style=dotted];
n197 -> n200  [key=0, style=solid];
n200 -> n195  [key=0, style=bold, color=blue];
n203 -> n216  [key=0, style=solid];
n203 -> n218  [key=1, style=dashed, color=darkseagreen4, label=string];
n203 -> n195  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n203 -> n204  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n203 -> n209  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n204 -> n205  [key=0, style=solid];
n204 -> n206  [key=1, style=dashed, color=darkseagreen4, label=string];
n205 -> n206  [key=0, style=solid];
n205 -> n208  [key=2, style=dotted];
n205 -> n202  [key=2, style=dotted];
n206 -> n207  [key=0, style=solid];
n206 -> n203  [key=2, style=dotted];
n207 -> n204  [key=0, style=bold, color=blue];
n209 -> n210  [key=0, style=solid];
n209 -> n212  [key=1, style=dashed, color=darkseagreen4, label=string];
n209 -> n213  [key=1, style=dashed, color=darkseagreen4, label=string];
n209 -> n387  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n209 -> n480  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n210 -> n211  [key=0, style=solid];
n210 -> n212  [key=0, style=solid];
n212 -> n213  [key=0, style=solid];
n212 -> n215  [key=2, style=dotted];
n212 -> n202  [key=2, style=dotted];
n213 -> n214  [key=0, style=solid];
n213 -> n203  [key=2, style=dotted];
n211 -> n214  [key=0, style=solid];
n214 -> n209  [key=0, style=bold, color=blue];
n216 -> n217  [key=0, style=solid];
n216 -> n141  [key=2, style=dotted];
n218 -> n219  [key=0, style=solid];
n218 -> n221  [key=2, style=dotted];
n218 -> n222  [key=2, style=dotted];
n218 -> n193  [key=2, style=dotted];
n217 -> n218  [key=0, style=solid];
n219 -> n220  [key=0, style=solid];
n219 -> n141  [key=2, style=dotted];
n220 -> n203  [key=0, style=bold, color=blue];
n223 -> n224  [key=0, style=solid];
n223 -> n226  [key=1, style=dashed, color=darkseagreen4, label=string];
n223 -> n227  [key=1, style=dashed, color=darkseagreen4, label=string];
n223 -> n475  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
n224 -> n225  [key=0, style=solid];
n224 -> n226  [key=0, style=solid];
n226 -> n227  [key=0, style=solid];
n226 -> n229  [key=2, style=dotted];
n226 -> n202  [key=2, style=dotted];
n227 -> n228  [key=0, style=solid];
n227 -> n230  [key=2, style=dotted];
n227 -> n203  [key=2, style=dotted];
n225 -> n228  [key=0, style=solid];
n228 -> n223  [key=0, style=bold, color=blue];
n231 -> n232  [key=0, style=solid];
n231 -> n292  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<QuantConnect.SecurityType> types"];
n232 -> n233  [key=0, style=solid];
n232 -> n235  [key=2, style=dotted];
n233 -> n234  [key=0, style=solid];
n233 -> n202  [key=2, style=dotted];
n234 -> n231  [key=0, style=bold, color=blue];
n236 -> n237  [key=0, style=solid];
n236 -> n238  [key=1, style=dashed, color=darkseagreen4, label=string];
n237 -> n238  [key=0, style=solid];
n237 -> n240  [key=2, style=dotted];
n237 -> n202  [key=2, style=dotted];
n238 -> n239  [key=0, style=solid];
n238 -> n230  [key=2, style=dotted];
n238 -> n203  [key=2, style=dotted];
n239 -> n236  [key=0, style=bold, color=blue];
n241 -> n242  [key=0, style=solid];
n241 -> n244  [key=1, style=dashed, color=darkseagreen4, label=string];
n241 -> n245  [key=1, style=dashed, color=darkseagreen4, label=string];
n241 -> n246  [key=1, style=dashed, color=darkseagreen4, label=string];
n241 -> n247  [key=1, style=dashed, color=darkseagreen4, label=string];
n241 -> n248  [key=1, style=dashed, color=darkseagreen4, label=string];
n241 -> n249  [key=1, style=dashed, color=darkseagreen4, label=string];
n241 -> n275  [key=3, color=darkorchid, style=bold, label="Parameter variable string seriesName"];
n241 -> n259  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.SeriesType seriesType"];
n241 -> n256  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal value"];
n241 -> n262  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal value"];
n241 -> n274  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal value"];
n242 -> n243  [key=0, style=solid];
n242 -> n141  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n244 -> n246  [key=0, style=solid];
n244 -> n251  [key=2, style=dotted];
n245 -> n246  [key=0, style=solid];
n245 -> n191  [key=2, style=dotted];
n245 -> n252  [key=2, style=dotted];
n246 -> n247  [key=0, style=solid];
n246 -> n248  [key=0, style=solid];
n246 -> n253  [key=2, style=dotted];
n247 -> n248  [key=0, style=solid];
n247 -> n254  [key=2, style=dotted];
n247 -> n144  [key=2, style=dotted];
n248 -> n249  [key=0, style=solid];
n248 -> n255  [key=2, style=dotted];
n248 -> n193  [key=2, style=dotted];
n249 -> n250  [key=0, style=solid];
n249 -> n141  [key=2, style=dotted];
n243 -> n244  [key=0, style=solid];
n250 -> n241  [key=0, style=bold, color=blue];
n256 -> n257  [key=0, style=solid];
n256 -> n258  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n256 -> n259  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n256 -> n443  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime time"];
n257 -> n258  [key=0, style=solid];
n257 -> n260  [key=0, style=solid];
n258 -> n259  [key=0, style=solid];
n258 -> n261  [key=2, style=dotted];
n258 -> n141  [key=2, style=dotted];
n259 -> n260  [key=0, style=solid];
n259 -> n241  [key=2, style=dotted];
n260 -> n256  [key=0, style=bold, color=blue];
n262 -> n263  [key=0, style=solid];
n262 -> n264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n262 -> n267  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
n262 -> n443  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime time"];
n262 -> n452  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal value"];
n263 -> n264  [key=0, style=solid];
n264 -> n265  [key=0, style=solid];
n264 -> n268  [key=0, style=solid];
n264 -> n269  [key=2, style=dotted];
n264 -> n170  [key=2, style=dotted];
n264 -> n264  [key=1, style=dashed, color=darkseagreen4, label=security];
n264 -> n266  [key=1, style=dashed, color=darkseagreen4, label=security];
n267 -> n268  [key=0, style=solid];
n267 -> n241  [key=2, style=dotted];
n265 -> n266  [key=0, style=solid];
n265 -> n270  [key=2, style=dotted];
n268 -> n262  [key=0, style=bold, color=blue];
n266 -> n267  [key=0, style=solid];
n266 -> n268  [key=0, style=solid];
n266 -> n271  [key=2, style=dotted];
n272 -> n273  [key=0, style=solid];
n273 -> n272  [key=0, style=bold, color=blue];
n274 -> n275  [key=0, style=solid];
n275 -> n276  [key=0, style=solid];
n275 -> n241  [key=2, style=dotted];
n276 -> n274  [key=0, style=bold, color=blue];
n277 -> n278  [key=0, style=solid];
n277 -> n280  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Chart>"];
n278 -> n279  [key=0, style=solid];
n278 -> n141  [key=2, style=dotted];
n280 -> n281  [key=0, style=solid];
n280 -> n287  [key=0, style=solid];
n280 -> n282  [key=1, style=dashed, color=darkseagreen4, label=update];
n280 -> n283  [key=1, style=dashed, color=darkseagreen4, label=update];
n280 -> n284  [key=1, style=dashed, color=darkseagreen4, label=update];
n280 -> n285  [key=1, style=dashed, color=darkseagreen4, label=update];
n280 -> n286  [key=1, style=dashed, color=darkseagreen4, label=update];
n279 -> n280  [key=0, style=solid];
n281 -> n282  [key=0, style=solid];
n281 -> n283  [key=0, style=solid];
n281 -> n251  [key=2, style=dotted];
n287 -> n288  [key=0, style=solid];
n287 -> n141  [key=2, style=dotted];
n282 -> n283  [key=0, style=solid];
n282 -> n191  [key=2, style=dotted];
n282 -> n252  [key=2, style=dotted];
n283 -> n284  [key=0, style=solid];
n283 -> n280  [key=0, style=solid];
n283 -> n285  [key=1, style=dashed, color=darkseagreen4, label=series];
n283 -> n286  [key=1, style=dashed, color=darkseagreen4, label=series];
n284 -> n285  [key=0, style=solid];
n284 -> n286  [key=0, style=solid];
n284 -> n253  [key=2, style=dotted];
n285 -> n286  [key=0, style=solid];
n285 -> n254  [key=2, style=dotted];
n285 -> n144  [key=2, style=dotted];
n286 -> n283  [key=0, style=solid];
n286 -> n289  [key=2, style=dotted];
n288 -> n277  [key=0, style=bold, color=blue];
n290 -> n291  [key=0, style=solid];
n290 -> n297  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n290 -> n298  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
n291 -> n292  [key=0, style=solid];
n297 -> n298  [key=0, style=solid];
n297 -> n303  [key=2, style=dotted];
n297 -> n299  [key=1, style=dashed, color=darkseagreen4, label=debug];
n298 -> n299  [key=0, style=solid];
n298 -> n303  [key=2, style=dotted];
n298 -> n300  [key=1, style=dashed, color=darkseagreen4, label=error];
n292 -> n293  [key=0, style=solid];
n292 -> n15  [key=2, style=dotted];
n292 -> n294  [key=1, style=dashed, color=darkseagreen4, label=types];
n292 -> n295  [key=1, style=dashed, color=darkseagreen4, label=types];
n292 -> n296  [key=1, style=dashed, color=darkseagreen4, label=types];
n293 -> n294  [key=0, style=solid];
n293 -> n296  [key=0, style=solid];
n293 -> n295  [key=1, style=dashed, color=darkseagreen4, label=security];
n294 -> n295  [key=0, style=solid];
n294 -> n293  [key=0, style=solid];
n294 -> n302  [key=2, style=dotted];
n295 -> n293  [key=0, style=solid];
n295 -> n193  [key=2, style=dotted];
n296 -> n297  [key=0, style=solid];
n296 -> n231  [key=2, style=dotted];
n299 -> n300  [key=0, style=solid];
n299 -> n304  [key=2, style=dotted];
n300 -> n301  [key=0, style=solid];
n300 -> n305  [key=2, style=dotted];
n301 -> n290  [key=0, style=bold, color=blue];
n306 -> n307  [key=0, style=solid];
n306 -> n309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmStatus"];
n307 -> n308  [key=0, style=solid];
n307 -> n230  [key=2, style=dotted];
n309 -> n310  [key=0, style=solid];
n309 -> n312  [key=2, style=dotted];
n308 -> n309  [key=0, style=solid];
n308 -> n47  [key=2, style=dotted];
n310 -> n311  [key=0, style=solid];
n310 -> n202  [key=2, style=dotted];
n311 -> n306  [key=0, style=bold, color=blue];
n313 -> n314  [key=0, style=solid];
n313 -> n316  [key=1, style=dashed, color=darkseagreen4, label=string];
n313 -> n317  [key=1, style=dashed, color=darkseagreen4, label=string];
n313 -> n318  [key=1, style=dashed, color=darkseagreen4, label=string];
n314 -> n315  [key=0, style=solid];
n314 -> n141  [key=2, style=dotted];
n316 -> n317  [key=0, style=solid];
n316 -> n318  [key=0, style=solid];
n316 -> n253  [key=2, style=dotted];
n317 -> n318  [key=0, style=solid];
n317 -> n144  [key=2, style=dotted];
n318 -> n319  [key=0, style=solid];
n315 -> n316  [key=0, style=solid];
n319 -> n320  [key=0, style=solid];
n319 -> n141  [key=2, style=dotted];
n320 -> n313  [key=0, style=bold, color=blue];
n321 -> n322  [key=0, style=solid];
n321 -> n323  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
n322 -> n323  [key=0, style=solid];
n322 -> n155  [key=2, style=dotted];
n323 -> n324  [key=0, style=solid];
n323 -> n156  [key=2, style=dotted];
n323 -> n157  [key=2, style=dotted];
n323 -> n325  [key=1, style=dashed, color=darkseagreen4, label=result];
n323 -> n326  [key=1, style=dashed, color=darkseagreen4, label=result];
n323 -> n327  [key=1, style=dashed, color=darkseagreen4, label=result];
n324 -> n325  [key=0, style=solid];
n325 -> n326  [key=0, style=solid];
n325 -> n158  [key=2, style=dotted];
n326 -> n327  [key=0, style=solid];
n326 -> n192  [key=2, style=dotted];
n327 -> n328  [key=0, style=solid];
n327 -> n330  [key=0, style=solid];
n327 -> n43  [key=2, style=dotted];
n328 -> n329  [key=0, style=solid];
n330 -> n321  [key=0, style=bold, color=blue];
n329 -> n330  [key=0, style=solid];
n329 -> n46  [key=2, style=dotted];
n331 -> n332  [key=0, style=solid];
n331 -> n334  [key=0, style=solid];
n331 -> n335  [key=2, style=dotted];
n331 -> n336  [key=2, style=dotted];
n331 -> n337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n332 -> n333  [key=0, style=solid];
n334 -> n162  [key=0, style=bold, color=blue];
n337 -> n338  [key=0, style=solid];
n333 -> n334  [key=0, style=solid];
n333 -> n46  [key=2, style=dotted];
n338 -> n339  [key=0, style=solid];
n339 -> n337  [key=0, style=bold, color=blue];
n340 -> n341  [key=0, style=solid];
n340 -> n141  [key=2, style=dotted];
n342 -> n343  [key=0, style=solid];
n342 -> n344  [key=0, style=solid];
n344 -> n345  [key=0, style=solid];
n344 -> n348  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n349  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n351  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n352  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n353  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n355  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n356  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n357  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n358  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n361  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n362  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n364  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n365  [key=1, style=dashed, color=darkseagreen4, label=live];
n344 -> n367  [key=1, style=dashed, color=darkseagreen4, label=live];
n341 -> n342  [key=0, style=solid];
n343 -> n373  [key=0, style=solid];
n345 -> n346  [key=0, style=solid];
n345 -> n369  [key=0, style=solid];
n348 -> n349  [key=0, style=solid];
n348 -> n374  [key=2, style=dotted];
n349 -> n350  [key=0, style=solid];
n349 -> n155  [key=2, style=dotted];
n349 -> n358  [key=1, style=dashed, color=darkseagreen4, label=highResolutionCharts];
n351 -> n352  [key=0, style=solid];
n351 -> n377  [key=2, style=dotted];
n352 -> n353  [key=0, style=solid];
n353 -> n354  [key=0, style=solid];
n353 -> n378  [key=2, style=dotted];
n353 -> n379  [key=2, style=dotted];
n355 -> n356  [key=0, style=solid];
n355 -> n377  [key=2, style=dotted];
n356 -> n357  [key=0, style=solid];
n357 -> n358  [key=0, style=solid];
n357 -> n378  [key=2, style=dotted];
n357 -> n379  [key=2, style=dotted];
n358 -> n359  [key=0, style=solid];
n361 -> n362  [key=0, style=solid];
n361 -> n374  [key=2, style=dotted];
n362 -> n363  [key=0, style=solid];
n362 -> n370  [key=0, style=solid];
n362 -> n367  [key=1, style=dashed, color=darkseagreen4, label=name];
n362 -> n368  [key=1, style=dashed, color=darkseagreen4, label=name];
n364 -> n365  [key=0, style=solid];
n364 -> n155  [key=2, style=dotted];
n365 -> n366  [key=0, style=solid];
n365 -> n155  [key=2, style=dotted];
n367 -> n368  [key=0, style=solid];
n367 -> n381  [key=2, style=dotted];
n346 -> n347  [key=0, style=solid];
n346 -> n348  [key=1, style=dashed, color=darkseagreen4, label=start];
n346 -> n351  [key=1, style=dashed, color=darkseagreen4, label=start];
n346 -> n355  [key=1, style=dashed, color=darkseagreen4, label=start];
n369 -> n370  [key=0, style=solid];
n369 -> n133  [key=2, style=dotted];
n347 -> n348  [key=0, style=solid];
n347 -> n164  [key=2, style=dotted];
n347 -> n351  [key=1, style=dashed, color=darkseagreen4, label=stop];
n347 -> n355  [key=1, style=dashed, color=darkseagreen4, label=stop];
n374 -> n404  [key=0, style=solid];
n374 -> n405  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n374 -> n407  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.LiveResult"];
n374 -> n415  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.LiveResult"];
n374 -> n416  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.LiveResult"];
n374 -> n429  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n374 -> n417  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.LiveResult"];
n374 -> n346  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime start"];
n374 -> n347  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime stop"];
n350 -> n351  [key=0, style=solid];
n350 -> n375  [key=2, style=dotted];
n350 -> n376  [key=2, style=dotted];
n354 -> n355  [key=0, style=solid];
n354 -> n375  [key=2, style=dotted];
n354 -> n376  [key=2, style=dotted];
n378 -> n434  [key=0, style=solid];
n378 -> n353  [key=3, color=darkorchid, style=bold, label="Parameter variable string suffix"];
n378 -> n357  [key=3, color=darkorchid, style=bold, label="Parameter variable string suffix"];
n378 -> n368  [key=3, color=darkorchid, style=bold, label="Parameter variable string dateFormat"];
n359 -> n360  [key=0, style=solid];
n359 -> n159  [key=2, style=dotted];
n359 -> n160  [key=2, style=dotted];
n359 -> n361  [key=1, style=dashed, color=darkseagreen4, label=start];
n360 -> n361  [key=0, style=solid];
n360 -> n159  [key=2, style=dotted];
n360 -> n380  [key=2, style=dotted];
n363 -> n364  [key=0, style=solid];
n363 -> n192  [key=2, style=dotted];
n363 -> n365  [key=1, style=dashed, color=darkseagreen4, label=result];
n363 -> n366  [key=1, style=dashed, color=darkseagreen4, label=result];
n363 -> n367  [key=1, style=dashed, color=darkseagreen4, label=result];
n363 -> n368  [key=1, style=dashed, color=darkseagreen4, label=result];
n370 -> n371  [key=0, style=solid];
n370 -> n373  [key=0, style=solid];
n370 -> n141  [key=2, style=dotted];
n368 -> n362  [key=0, style=solid];
n368 -> n382  [key=2, style=dotted];
n368 -> n378  [key=2, style=dotted];
n368 -> n379  [key=2, style=dotted];
n366 -> n367  [key=0, style=solid];
n366 -> n13  [key=2, style=dotted];
n382 -> n437  [key=0, style=solid];
n382 -> n362  [key=3, color=darkorchid, style=bold, label="Parameter variable string chartName"];
n371 -> n372  [key=0, style=solid];
n373 -> n158  [key=0, style=bold, color=blue];
n372 -> n373  [key=0, style=solid];
n372 -> n46  [key=2, style=dotted];
n383 -> n384  [key=0, style=solid];
n383 -> n385  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n383 -> n386  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n383 -> n387  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
n384 -> n385  [key=0, style=solid];
n384 -> n202  [key=2, style=dotted];
n385 -> n386  [key=0, style=solid];
n385 -> n47  [key=2, style=dotted];
n386 -> n387  [key=0, style=solid];
n386 -> n391  [key=2, style=dotted];
n386 -> n202  [key=2, style=dotted];
n387 -> n388  [key=0, style=solid];
n387 -> n389  [key=1, style=dashed, color=darkseagreen4, label=message];
n388 -> n389  [key=0, style=solid];
n388 -> n195  [key=2, style=dotted];
n389 -> n390  [key=0, style=solid];
n389 -> n209  [key=2, style=dotted];
n390 -> n383  [key=0, style=bold, color=blue];
n392 -> n393  [key=0, style=solid];
n393 -> n394  [key=0, style=solid];
n393 -> n396  [key=0, style=solid];
n393 -> n132  [key=2, style=dotted];
n394 -> n395  [key=0, style=solid];
n394 -> n399  [key=2, style=dotted];
n396 -> n397  [key=0, style=solid];
n395 -> n396  [key=0, style=solid];
n395 -> n162  [key=2, style=dotted];
n399 -> n443  [key=0, style=solid];
n399 -> n444  [key=1, style=dashed, color=darkseagreen4, label=bool];
n399 -> n486  [key=1, style=dashed, color=darkseagreen4, label=bool];
n399 -> n130  [key=3, color=darkorchid, style=bold, label="Parameter variable bool forceProcess"];
n397 -> n398  [key=0, style=solid];
n397 -> n44  [key=2, style=dotted];
n398 -> n392  [key=0, style=bold, color=blue];
n400 -> n401  [key=0, style=solid];
n401 -> n402  [key=0, style=solid];
n401 -> n403  [key=2, style=dotted];
n402 -> n400  [key=0, style=bold, color=blue];
n404 -> n405  [key=0, style=solid];
n404 -> n165  [key=2, style=dotted];
n404 -> n413  [key=1, style=dashed, color=darkseagreen4, label=unixDateStart];
n404 -> n426  [key=1, style=dashed, color=darkseagreen4, label=unixDateStart];
n405 -> n406  [key=0, style=solid];
n405 -> n165  [key=2, style=dotted];
n405 -> n413  [key=1, style=dashed, color=darkseagreen4, label=unixDateStop];
n405 -> n426  [key=1, style=dashed, color=darkseagreen4, label=unixDateStop];
n407 -> n408  [key=0, style=solid];
n407 -> n415  [key=0, style=solid];
n415 -> n416  [key=0, style=solid];
n416 -> n417  [key=0, style=solid];
n416 -> n148  [key=2, style=dotted];
n416 -> n424  [key=2, style=dotted];
n416 -> n428  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n416 -> n431  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n429 -> n430  [key=0, style=solid];
n417 -> n418  [key=0, style=solid];
n417 -> n419  [key=0, style=solid];
n413 -> n414  [key=0, style=solid];
n413 -> n148  [key=2, style=dotted];
n413 -> n422  [key=2, style=dotted];
n413 -> n425  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n426 -> n427  [key=0, style=solid];
n406 -> n407  [key=0, style=solid];
n406 -> n13  [key=2, style=dotted];
n406 -> n410  [key=1, style=dashed, color=darkseagreen4, label=charts];
n406 -> n415  [key=1, style=dashed, color=darkseagreen4, label=charts];
n410 -> n411  [key=0, style=solid];
n410 -> n144  [key=2, style=dotted];
n410 -> n410  [key=1, style=dashed, color=darkseagreen4, label=kvp];
n408 -> n409  [key=0, style=solid];
n408 -> n408  [key=1, style=dashed, color=darkseagreen4, label=kvp];
n408 -> n410  [key=1, style=dashed, color=darkseagreen4, label=kvp];
n408 -> n411  [key=1, style=dashed, color=darkseagreen4, label=chart];
n409 -> n410  [key=0, style=solid];
n409 -> n420  [key=2, style=dotted];
n409 -> n414  [key=1, style=dashed, color=darkseagreen4, label=newChart];
n411 -> n412  [key=0, style=solid];
n411 -> n407  [key=0, style=solid];
n411 -> n413  [key=1, style=dashed, color=darkseagreen4, label=series];
n414 -> n411  [key=0, style=solid];
n414 -> n423  [key=2, style=dotted];
n412 -> n413  [key=0, style=solid];
n412 -> n421  [key=2, style=dotted];
n412 -> n414  [key=1, style=dashed, color=darkseagreen4, label=newSeries];
n425 -> n426  [key=0, style=solid];
n428 -> n429  [key=0, style=solid];
n431 -> n432  [key=0, style=solid];
n418 -> n417  [key=0, style=solid];
n418 -> n138  [key=2, style=dotted];
n418 -> n418  [key=1, style=dashed, color=darkseagreen4, label=order];
n419 -> n374  [key=0, style=bold, color=blue];
n427 -> n425  [key=0, style=bold, color=blue];
n430 -> n428  [key=0, style=bold, color=blue];
n432 -> n433  [key=0, style=solid];
n433 -> n431  [key=0, style=bold, color=blue];
n434 -> n435  [key=0, style=solid];
n434 -> n222  [key=2, style=dotted];
n434 -> n436  [key=2, style=dotted];
n435 -> n378  [key=0, style=bold, color=blue];
n437 -> n438  [key=0, style=solid];
n437 -> n439  [key=2, style=dotted];
n438 -> n382  [key=0, style=bold, color=blue];
n440 -> n441  [key=0, style=solid];
n441 -> n442  [key=0, style=solid];
n442 -> n440  [key=0, style=bold, color=blue];
n443 -> n444  [key=0, style=solid];
n443 -> n446  [key=1, style=dashed, color=darkseagreen4, label=time];
n443 -> n461  [key=1, style=dashed, color=darkseagreen4, label=time];
n443 -> n462  [key=1, style=dashed, color=darkseagreen4, label=time];
n443 -> n463  [key=1, style=dashed, color=darkseagreen4, label=time];
n443 -> n465  [key=1, style=dashed, color=darkseagreen4, label=time];
n443 -> n466  [key=1, style=dashed, color=darkseagreen4, label=time];
n444 -> n445  [key=0, style=solid];
n444 -> n465  [key=0, style=solid];
n486 -> n487  [key=0, style=solid];
n486 -> n493  [key=0, style=solid];
n486 -> n166  [key=2, style=dotted];
n446 -> n447  [key=0, style=solid];
n446 -> n495  [key=2, style=dotted];
n461 -> n462  [key=0, style=solid];
n461 -> n501  [key=2, style=dotted];
n461 -> n502  [key=2, style=dotted];
n462 -> n448  [key=0, style=solid];
n462 -> n262  [key=2, style=dotted];
n463 -> n464  [key=0, style=solid];
n463 -> n503  [key=2, style=dotted];
n463 -> n256  [key=2, style=dotted];
n465 -> n466  [key=0, style=solid];
n465 -> n468  [key=0, style=solid];
n466 -> n467  [key=0, style=solid];
n466 -> n376  [key=2, style=dotted];
n466 -> n495  [key=2, style=dotted];
n445 -> n446  [key=0, style=solid];
n445 -> n141  [key=2, style=dotted];
n447 -> n448  [key=0, style=solid];
n447 -> n463  [key=0, style=solid];
n448 -> n449  [key=0, style=solid];
n448 -> n463  [key=0, style=solid];
n448 -> n451  [key=1, style=dashed, color=darkseagreen4, label=subscription];
n448 -> n452  [key=1, style=dashed, color=darkseagreen4, label=subscription];
n448 -> n461  [key=1, style=dashed, color=darkseagreen4, label=subscription];
n448 -> n462  [key=1, style=dashed, color=darkseagreen4, label=subscription];
n449 -> n450  [key=0, style=solid];
n449 -> n448  [key=0, style=solid];
n451 -> n452  [key=0, style=solid];
n451 -> n448  [key=0, style=solid];
n451 -> n269  [key=2, style=dotted];
n451 -> n453  [key=1, style=dashed, color=darkseagreen4, label=security];
n451 -> n457  [key=1, style=dashed, color=darkseagreen4, label=security];
n451 -> n461  [key=1, style=dashed, color=darkseagreen4, label=security];
n452 -> n453  [key=0, style=solid];
n452 -> n454  [key=1, style=dashed, color=darkseagreen4, label=price];
n452 -> n456  [key=1, style=dashed, color=darkseagreen4, label=price];
n452 -> n461  [key=1, style=dashed, color=darkseagreen4, label=price];
n452 -> n462  [key=1, style=dashed, color=darkseagreen4, label=price];
n450 -> n451  [key=0, style=solid];
n453 -> n454  [key=0, style=solid];
n453 -> n496  [key=2, style=dotted];
n453 -> n455  [key=1, style=dashed, color=darkseagreen4, label=last];
n457 -> n458  [key=0, style=solid];
n457 -> n498  [key=2, style=dotted];
n454 -> n455  [key=0, style=solid];
n454 -> n461  [key=0, style=solid];
n456 -> n457  [key=0, style=solid];
n455 -> n456  [key=0, style=solid];
n455 -> n497  [key=2, style=dotted];
n455 -> n455  [key=1, style=dashed, color=darkseagreen4, label=last];
n455 -> n457  [key=1, style=dashed, color=darkseagreen4, label=last];
n455 -> n458  [key=1, style=dashed, color=darkseagreen4, label=last];
n455 -> n460  [key=1, style=dashed, color=darkseagreen4, label=last];
n458 -> n459  [key=0, style=solid];
n458 -> n499  [key=2, style=dotted];
n458 -> n458  [key=1, style=dashed, color=darkseagreen4, label=c];
n458 -> n460  [key=1, style=dashed, color=darkseagreen4, label=cash];
n460 -> n462  [key=0, style=solid];
n460 -> n500  [key=2, style=dotted];
n459 -> n460  [key=0, style=solid];
n459 -> n462  [key=0, style=solid];
n464 -> n465  [key=0, style=solid];
n464 -> n504  [key=2, style=dotted];
n464 -> n277  [key=2, style=dotted];
n468 -> n469  [key=0, style=solid];
n468 -> n134  [key=2, style=dotted];
n467 -> n468  [key=0, style=solid];
n467 -> n505  [key=2, style=dotted];
n469 -> n470  [key=0, style=solid];
n469 -> n473  [key=0, style=solid];
n470 -> n471  [key=0, style=solid];
n473 -> n474  [key=0, style=solid];
n473 -> n134  [key=2, style=dotted];
n471 -> n472  [key=0, style=solid];
n471 -> n469  [key=0, style=solid];
n471 -> n42  [key=2, style=dotted];
n472 -> n469  [key=0, style=solid];
n472 -> n195  [key=2, style=dotted];
n474 -> n475  [key=0, style=solid];
n474 -> n478  [key=0, style=solid];
n475 -> n476  [key=0, style=solid];
n478 -> n479  [key=0, style=solid];
n478 -> n134  [key=2, style=dotted];
n476 -> n477  [key=0, style=solid];
n476 -> n474  [key=0, style=solid];
n476 -> n42  [key=2, style=dotted];
n477 -> n474  [key=0, style=solid];
n477 -> n223  [key=2, style=dotted];
n479 -> n480  [key=0, style=solid];
n479 -> n483  [key=0, style=solid];
n480 -> n481  [key=0, style=solid];
n483 -> n484  [key=0, style=solid];
n483 -> n485  [key=0, style=solid];
n481 -> n482  [key=0, style=solid];
n481 -> n479  [key=0, style=solid];
n481 -> n42  [key=2, style=dotted];
n482 -> n479  [key=0, style=solid];
n482 -> n209  [key=2, style=dotted];
n484 -> n483  [key=0, style=solid];
n484 -> n313  [key=2, style=dotted];
n484 -> n484  [key=1, style=dashed, color=darkseagreen4, label=pair];
n485 -> n486  [key=0, style=solid];
n487 -> n488  [key=0, style=solid];
n493 -> n494  [key=0, style=solid];
n493 -> n141  [key=2, style=dotted];
n488 -> n489  [key=0, style=solid];
n488 -> n486  [key=0, style=solid];
n488 -> n42  [key=2, style=dotted];
n488 -> n490  [key=1, style=dashed, color=darkseagreen4, label=message];
n488 -> n492  [key=1, style=dashed, color=darkseagreen4, label=message];
n489 -> n490  [key=0, style=solid];
n489 -> n47  [key=2, style=dotted];
n490 -> n491  [key=0, style=solid];
n490 -> n486  [key=0, style=solid];
n490 -> n506  [key=2, style=dotted];
n492 -> n486  [key=0, style=solid];
n492 -> n507  [key=2, style=dotted];
n492 -> n46  [key=2, style=dotted];
n491 -> n492  [key=0, style=solid];
n494 -> n399  [key=0, style=bold, color=blue];
m0_21 -> m0_36  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m0_21 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_21 -> m0_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Setup"];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_36 -> m0_56  [key=2, style=dotted, color=green];
m0_22 -> m0_36  [key=1, style=dashed, color=green, label=job];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m0_22 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m0_22 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m0_22 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=job];
m0_22 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=job];
m0_22 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=job];
m0_22 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m0_22 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m0_34 -> m0_36  [key=0, style=solid, color=green];
m0_34 -> m0_35  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_54  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_54  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_14  [key=2, style=dotted];
m0_33 -> m0_55  [key=2, style=dotted];
m0_33 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_33 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m0_39 -> m0_41  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_57  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_58  [key=2, style=dotted];
m0_44 -> m0_59  [key=2, style=dotted];
m0_44 -> m0_52  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=0, style=solid];
m0_24 -> m0_48  [key=0, style=solid];
m0_24 -> m0_49  [key=2, style=dotted];
m0_24 -> m0_50  [key=2, style=dotted];
m0_26 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerage"];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_53  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_30  [key=0, style=solid];
m0_29 -> m0_48  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_51  [key=2, style=dotted];
m0_25 -> m0_52  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_33  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_52  [key=2, style=dotted];
m0_35 -> m0_48  [key=0, style=solid];
m0_32 -> m0_48  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_48 -> m0_21  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_54  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_69  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_70  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_71  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_72  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_68  [key=0, style=solid];
m0_65 -> m0_73  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_68 -> m0_60  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=2, style=dotted];
m0_19 -> m0_17  [key=0, style=bold, color=blue];
m0_4 -> m0_6  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance"];
m0_4 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_4 -> m0_5  [key=0, style=solid];
m0_7 -> m0_14  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_13  [key=2, style=dotted];
m0_7 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m0_6 -> m0_7  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=error];
m0_8 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m0_5 -> m0_6  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=0, style=solid];
m0_10 -> m0_16  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_4  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> n15  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_73 -> m0_53  [key=3, color=darkorchid, style=bold, label="Property variable System.DateTime StartingDate"];
m0_56 -> m0_74  [key=0, style=solid];
m0_56 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_56 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_74 -> m0_75  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=jobDays];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
m0_76 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
m0_76 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_14  [key=2, style=dotted];
m0_81 -> m0_52  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_86  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_79  [key=0, style=solid];
m0_79 -> m0_81  [key=0, style=solid];
m0_79 -> m0_80  [key=0, style=solid];
m0_78 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
m0_78 -> m0_81  [key=0, style=solid];
m0_80 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=maxRunTime];
m0_80 -> m0_81  [key=0, style=solid];
m0_82 -> m0_84  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_83 -> m0_84  [key=0, style=solid];
m0_85 -> m0_56  [key=0, style=bold, color=blue];
m0_92 -> m0_36  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_92 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler"];
m0_93 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_93 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_93 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_93 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_93 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m0_94 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=job];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_137 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_138 -> n148  [key=2, style=dotted];
m2_138 -> m2_23  [key=2, style=dotted];
m2_138 -> m2_139  [key=0, style=solid];
m2_139 -> m2_140  [key=0, style=solid];
m2_140 -> m2_141  [key=0, style=solid];
m2_141 -> m2_137  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid, color=green];
m2_11 -> m2_12  [key=0, style=solid, color=green];
m2_12 -> m2_13  [key=0, style=solid, color=green];
m2_13 -> m2_10  [key=0, style=bold, color=blue];
m2_134 -> m2_135  [key=0, style=solid];
m2_135 -> m2_136  [key=0, style=solid];
m2_135 -> m2_133  [key=2, style=dotted];
m2_136 -> m2_134  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_38  [key=0, style=solid];
m2_35 -> m2_40  [key=0, style=solid];
m2_35 -> m2_42  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_34 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_36 -> m2_37  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_72 -> m2_73  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_110 -> m2_111  [key=0, style=solid];
m2_113 -> m2_114  [key=0, style=solid];
m2_116 -> m2_117  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_25 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=dt];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_33  [key=2, style=dotted];
m2_28 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=res];
m2_37 -> m2_43  [key=0, style=solid];
m2_37 -> m2_44  [key=2, style=dotted];
m2_39 -> m2_43  [key=0, style=solid];
m2_39 -> m2_44  [key=2, style=dotted];
m2_43 -> m2_34  [key=0, style=bold, color=blue];
m2_41 -> m2_43  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_59 -> m2_57  [key=0, style=bold, color=blue];
m2_58 -> m2_59  [key=0, style=solid];
m2_62 -> m2_60  [key=0, style=bold, color=blue];
m2_75 -> m2_76  [key=0, style=solid];
m2_74 -> m2_72  [key=0, style=bold, color=blue];
m2_73 -> m2_74  [key=0, style=solid];
m2_77 -> m2_75  [key=0, style=bold, color=blue];
m2_112 -> m2_110  [key=0, style=bold, color=blue];
m2_111 -> m2_112  [key=0, style=solid];
m2_115 -> m2_113  [key=0, style=bold, color=blue];
m2_114 -> m2_115  [key=0, style=solid];
m2_118 -> m2_116  [key=0, style=bold, color=blue];
m2_117 -> m2_118  [key=0, style=solid];
m2_26 -> m2_28  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_32  [key=2, style=dotted];
m2_27 -> m2_31  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_31 -> m2_24  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> n148  [key=2, style=dotted];
m2_17 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_23  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_16 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m2_16 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label=memoizedIsStandardType];
m2_16 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=memoizedIsStandardType];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_21  [key=2, style=dotted];
m2_15 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=memoizedMap];
m2_15 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=memoizedMap];
m2_15 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=memoizedMap];
m2_20 -> m2_14  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_0 -> m2_2  [key=1, style=dashed, color=green, label="QuantConnect.Data.BaseData"];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_63 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [key=0, style=solid];
m2_64 -> m2_53  [key=2, style=dotted];
m2_65 -> m2_70  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_54  [key=2, style=dotted];
m2_66 -> m2_55  [key=2, style=dotted];
m2_66 -> m2_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_66 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=ordered];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_55  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_71  [key=2, style=dotted];
m2_67 -> m2_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_70 -> m2_63  [key=0, style=bold, color=blue];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_63  [key=2, style=dotted];
m2_79 -> m2_45  [key=2, style=dotted];
m2_80 -> m2_78  [key=0, style=bold, color=blue];
m2_119 -> m2_120  [key=0, style=solid];
m2_119 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_119 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_119 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_122  [key=0, style=solid];
m2_121 -> m2_129  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=minExpiryToDate];
m2_125 -> m2_126  [key=0, style=solid];
m2_126 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_126 -> m2_127  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_23  [key=2, style=dotted];
m2_128 -> m2_129  [key=0, style=solid];
m2_122 -> m2_124  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_129 -> m2_119  [key=0, style=bold, color=blue];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_81 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_84  [key=0, style=solid];
m2_83 -> m2_105  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_87  [key=0, style=solid];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_106  [key=2, style=dotted];
m2_85 -> m2_54  [key=2, style=dotted];
m2_85 -> m2_107  [key=2, style=dotted];
m2_85 -> m2_23  [key=2, style=dotted];
m2_85 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_85 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_85 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_86 -> m2_87  [key=0, style=solid];
m2_87 -> m2_88  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_108  [key=2, style=dotted];
m2_88 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_88 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_88 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_94  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_109  [key=2, style=dotted];
m2_93 -> m2_105  [key=0, style=solid];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_100  [key=0, style=solid];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=indexMaxPrice];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=minPrice];
m2_101 -> m2_102  [key=0, style=solid];
m2_102 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m2_102 -> m2_103  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_23  [key=2, style=dotted];
m2_104 -> m2_105  [key=0, style=solid];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_94  [key=0, style=solid];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_90  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_90 -> m2_94  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_90 -> m2_97  [key=1, style=dashed, color=darkseagreen4, label=index];
m2_94 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=indexMinPrice];
m2_94 -> m2_95  [key=0, style=solid];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label=indexMaxPrice];
m2_96 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label=indexMinPrice];
m2_96 -> m2_97  [key=0, style=solid];
m2_95 -> m2_97  [key=0, style=solid];
m2_95 -> m2_96  [key=0, style=solid];
m2_105 -> m2_81  [key=0, style=bold, color=blue];
m2_130 -> m2_131  [key=0, style=solid];
m2_131 -> m2_132  [key=0, style=solid];
m2_131 -> m2_133  [key=2, style=dotted];
m2_132 -> m2_130  [key=0, style=bold, color=blue];
m2_45 -> m2_46  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_48  [key=0, style=solid];
m2_46 -> m2_53  [key=2, style=dotted];
m2_47 -> m2_52  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_54  [key=2, style=dotted];
m2_48 -> m2_55  [key=2, style=dotted];
m2_48 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_48 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=ordered];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_55  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_56  [key=2, style=dotted];
m2_49 -> m2_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_52 -> m2_45  [key=0, style=bold, color=blue];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_142 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_143 -> m2_23  [key=2, style=dotted];
m2_143 -> m2_107  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_144 -> m2_145  [key=0, style=solid];
m2_145 -> m2_146  [key=0, style=solid];
m2_146 -> m2_142  [key=0, style=bold, color=blue];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_147 -> m2_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_148 -> m2_55  [key=2, style=dotted];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_152  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_150 -> m2_151  [key=0, style=solid];
m2_151 -> m2_147  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid, color=green];
m2_7 -> m2_8  [key=0, style=solid, color=green];
m2_8 -> m2_9  [key=0, style=solid, color=green];
m2_9 -> m2_6  [key=0, style=bold, color=blue];
m2_153 -> m2_1  [key=1, style=dashed, color=green, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_2  [key=1, style=dashed, color=green, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_3  [key=1, style=dashed, color=green, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_4  [key=1, style=dashed, color=green, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_7  [key=1, style=dashed, color=green, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_8  [key=1, style=dashed, color=green, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_11  [key=1, style=dashed, color=green, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_12  [key=1, style=dashed, color=green, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_153 -> m2_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.OptionFilterUniverse"];
m2_156 -> m2_61  [key=1, style=dashed, color=darkseagreen4, label=ordered];
m2_157 -> m2_76  [key=1, style=dashed, color=darkseagreen4, label=ordered];
m2_155 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label=memoizedIsStandardType];
m2_155 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=memoizedIsStandardType];
m2_154 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=memoizedMap];
m2_154 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label=memoizedMap];
m2_154 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=memoizedMap];
m4_173 -> m4_174  [key=0, style=solid];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_161  [key=2, style=dotted];
m4_174 -> m4_162  [key=2, style=dotted];
m4_174 -> m4_163  [key=2, style=dotted];
m4_174 -> m4_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_175 -> m4_173  [key=0, style=bold, color=blue];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_183  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_184  [key=2, style=dotted];
m4_182 -> m4_179  [key=0, style=bold, color=blue];
m4_204 -> m4_205  [key=0, style=solid];
m4_204 -> m4_206  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m4_204 -> m4_207  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m4_204 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_205 -> m4_206  [key=0, style=solid];
m4_205 -> m4_212  [key=2, style=dotted];
m4_205 -> m4_208  [key=1, style=dashed, color=darkseagreen4, label=name];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_33  [key=2, style=dotted];
m4_206 -> m4_209  [key=1, style=dashed, color=darkseagreen4, label=pyselector];
m4_207 -> m4_208  [key=0, style=solid];
m4_207 -> m4_33  [key=2, style=dotted];
m4_209 -> m4_210  [key=0, style=solid];
m4_209 -> m4_213  [key=2, style=dotted];
m4_209 -> m4_154  [key=2, style=dotted];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_203  [key=2, style=dotted];
m4_208 -> m4_210  [key=1, style=dashed, color=darkseagreen4, label=filteredIdentity];
m4_210 -> m4_211  [key=0, style=solid];
m4_211 -> m4_204  [key=0, style=bold, color=blue];
m4_130 -> m4_131  [key=0, style=solid];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_133  [key=2, style=dotted];
m4_132 -> m4_130  [key=0, style=bold, color=blue];
m4_266 -> m4_267  [key=0, style=solid];
m4_266 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m4_266 -> m4_275  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m4_266 -> m4_290  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m4_266 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_266 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label=int];
m4_266 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m4_267 -> m4_268  [key=0, style=solid];
m4_267 -> m4_220  [key=2, style=dotted];
m4_267 -> m4_270  [key=1, style=dashed, color=darkseagreen4, label=symbols];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_41  [key=2, style=dotted];
m4_270 -> m4_273  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_268 -> m4_269  [key=0, style=solid];
m4_268 -> m4_270  [key=0, style=solid];
m4_269 -> m4_272  [key=0, style=solid];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_161  [key=2, style=dotted];
m4_271 -> m4_244  [key=2, style=dotted];
m4_271 -> m4_245  [key=2, style=dotted];
m4_271 -> m4_246  [key=2, style=dotted];
m4_271 -> m4_292  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_272 -> m4_266  [key=0, style=bold, color=blue];
m4_295 -> m4_296  [key=0, style=solid];
m4_296 -> m4_297  [key=0, style=solid];
m4_296 -> m4_237  [key=2, style=dotted];
m4_297 -> m4_295  [key=0, style=bold, color=blue];
m4_230 -> m4_231  [key=0, style=solid];
m4_230 -> m4_234  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m4_231 -> m4_232  [key=0, style=solid];
m4_231 -> m4_220  [key=2, style=dotted];
m4_231 -> m4_234  [key=1, style=dashed, color=darkseagreen4, label=symbols];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_236  [key=2, style=dotted];
m4_234 -> m4_222  [key=2, style=dotted];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_234  [key=0, style=solid];
m4_233 -> m4_235  [key=0, style=solid];
m4_235 -> m4_230  [key=0, style=bold, color=blue];
m4_141 -> m4_142  [key=0, style=solid];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_140  [key=2, style=dotted];
m4_143 -> m4_141  [key=0, style=bold, color=blue];
m4_408 -> m4_409  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_40  [key=2, style=dotted];
m4_38 -> m4_41  [key=2, style=dotted];
m4_38 -> m4_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_37 -> m4_38  [key=0, style=solid];
m4_39 -> m4_37  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_44 -> m4_42  [key=0, style=bold, color=blue];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_40  [key=2, style=dotted];
m4_51 -> m4_41  [key=2, style=dotted];
m4_51 -> m4_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_40  [key=2, style=dotted];
m4_57 -> m4_41  [key=2, style=dotted];
m4_57 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_50 -> m4_51  [key=0, style=solid];
m4_56 -> m4_57  [key=0, style=solid];
m4_52 -> m4_50  [key=0, style=bold, color=blue];
m4_53 -> m4_54  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_53  [key=0, style=bold, color=blue];
m4_58 -> m4_56  [key=0, style=bold, color=blue];
m4_59 -> m4_60  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_61 -> m4_59  [key=0, style=bold, color=blue];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_40  [key=2, style=dotted];
m4_67 -> m4_41  [key=2, style=dotted];
m4_67 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_66 -> m4_67  [key=0, style=solid];
m4_68 -> m4_66  [key=0, style=bold, color=blue];
m4_69 -> m4_70  [key=0, style=solid];
m4_70 -> m4_71  [key=0, style=solid];
m4_71 -> m4_69  [key=0, style=bold, color=blue];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_79  [key=2, style=dotted];
m4_77 -> m4_41  [key=2, style=dotted];
m4_77 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_76 -> m4_77  [key=0, style=solid];
m4_78 -> m4_76  [key=0, style=bold, color=blue];
m4_80 -> m4_81  [key=0, style=solid];
m4_81 -> m4_82  [key=0, style=solid];
m4_82 -> m4_80  [key=0, style=bold, color=blue];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_40  [key=2, style=dotted];
m4_88 -> m4_41  [key=2, style=dotted];
m4_88 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_87 -> m4_88  [key=0, style=solid];
m4_89 -> m4_87  [key=0, style=bold, color=blue];
m4_90 -> m4_91  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_92 -> m4_90  [key=0, style=bold, color=blue];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_40  [key=2, style=dotted];
m4_125 -> m4_41  [key=2, style=dotted];
m4_125 -> m4_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_120  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_126 -> m4_124  [key=0, style=bold, color=blue];
m4_127 -> m4_128  [key=0, style=solid];
m4_129 -> m4_127  [key=0, style=bold, color=blue];
m4_164 -> m4_165  [key=0, style=solid];
m4_165 -> m4_166  [key=0, style=solid];
m4_166 -> m4_164  [key=0, style=bold, color=blue];
m4_170 -> m4_171  [key=0, style=solid];
m4_171 -> m4_172  [key=0, style=solid];
m4_172 -> m4_170  [key=0, style=bold, color=blue];
m4_176 -> m4_177  [key=0, style=solid];
m4_177 -> m4_178  [key=0, style=solid];
m4_178 -> m4_176  [key=0, style=bold, color=blue];
m4_249 -> m4_250  [key=0, style=solid];
m4_249 -> m4_254  [key=2, style=dotted];
m4_249 -> m4_255  [key=2, style=dotted];
m4_249 -> m4_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_249 -> m4_260  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_249 -> m4_252  [key=1, style=dashed, color=darkseagreen4, label=config];
m4_261 -> m4_262  [key=0, style=solid];
m4_261 -> m4_10  [key=2, style=dotted];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_256  [key=2, style=dotted];
m4_247 -> m4_248  [key=0, style=solid];
m4_263 -> m4_264  [key=0, style=solid];
m4_248 -> m4_249  [key=0, style=solid];
m4_248 -> m4_252  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_250 -> m4_251  [key=0, style=solid];
m4_250 -> m4_252  [key=0, style=solid];
m4_257 -> m4_258  [key=0, style=solid];
m4_260 -> m4_261  [key=0, style=solid];
m4_251 -> m4_253  [key=0, style=solid];
m4_253 -> m4_247  [key=0, style=bold, color=blue];
m4_258 -> m4_259  [key=0, style=solid];
m4_259 -> m4_257  [key=0, style=bold, color=blue];
m4_262 -> m4_260  [key=0, style=bold, color=blue];
m4_264 -> m4_265  [key=0, style=solid];
m4_265 -> m4_263  [key=0, style=bold, color=blue];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_254  [key=2, style=dotted];
m4_275 -> m4_255  [key=2, style=dotted];
m4_275 -> m4_286  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_275 -> m4_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_275 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label=config];
m4_290 -> m4_291  [key=0, style=solid];
m4_290 -> m4_10  [key=2, style=dotted];
m4_278 -> m4_279  [key=0, style=solid];
m4_278 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label=res];
m4_279 -> m4_280  [key=0, style=solid];
m4_279 -> m4_282  [key=2, style=dotted];
m4_279 -> m4_283  [key=2, style=dotted];
m4_280 -> m4_281  [key=0, style=solid];
m4_280 -> m4_284  [key=2, style=dotted];
m4_280 -> m4_285  [key=2, style=dotted];
m4_280 -> m4_256  [key=2, style=dotted];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_279  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_292 -> m4_293  [key=0, style=solid];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_278  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_274 -> m4_280  [key=1, style=dashed, color=darkseagreen4, label=security];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_278  [key=0, style=solid];
m4_286 -> m4_287  [key=0, style=solid];
m4_289 -> m4_290  [key=0, style=solid];
m4_277 -> m4_281  [key=0, style=solid];
m4_281 -> m4_273  [key=0, style=bold, color=blue];
m4_287 -> m4_288  [key=0, style=solid];
m4_288 -> m4_286  [key=0, style=bold, color=blue];
m4_291 -> m4_289  [key=0, style=bold, color=blue];
m4_293 -> m4_294  [key=0, style=solid];
m4_294 -> m4_292  [key=0, style=bold, color=blue];
m4_317 -> m4_318  [key=0, style=solid];
m4_313 -> m4_314  [key=0, style=solid];
m4_316 -> m4_317  [key=0, style=solid];
m4_319 -> m4_320  [key=0, style=solid];
m4_314 -> m4_315  [key=0, style=solid];
m4_315 -> m4_313  [key=0, style=bold, color=blue];
m4_318 -> m4_316  [key=0, style=bold, color=blue];
m4_320 -> m4_321  [key=0, style=solid];
m4_321 -> m4_319  [key=0, style=bold, color=blue];
m4_399 -> m4_400  [key=0, style=solid];
m4_399 -> m4_402  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m4_399 -> m4_403  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m4_405 -> m4_406  [key=0, style=solid];
m4_400 -> m4_401  [key=0, style=solid];
m4_400 -> m4_402  [key=0, style=solid];
m4_402 -> m4_403  [key=0, style=solid];
m4_402 -> m4_35  [key=2, style=dotted];
m4_402 -> m4_36  [key=2, style=dotted];
m4_403 -> m4_404  [key=0, style=solid];
m4_403 -> m4_36  [key=2, style=dotted];
m4_401 -> m4_404  [key=0, style=solid];
m4_404 -> m4_399  [key=0, style=bold, color=blue];
m4_406 -> m4_407  [key=0, style=solid];
}
