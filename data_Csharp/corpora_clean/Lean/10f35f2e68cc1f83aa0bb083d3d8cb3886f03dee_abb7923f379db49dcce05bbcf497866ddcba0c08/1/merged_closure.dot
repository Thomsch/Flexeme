digraph  {
n22 [label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", span=""];
n0 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", label="Entry QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", span="106-106"];
n1 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", label="Exit QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight()", span="106-106"];
n2 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="Entry QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", span="114-114"];
n3 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="Id = insight.Id.ToString(''N'')", span="116-116"];
n4 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="GeneratedTime = Time.DateTimeToUnixTimeStamp(insight.GeneratedTimeUtc)", span="117-117"];
n5 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="CloseTime = Time.DateTimeToUnixTimeStamp(insight.CloseTimeUtc)", span="118-118"];
n6 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="Symbol = insight.Symbol.ID.ToString()", span="119-119"];
n7 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="Ticker = insight.Symbol.Value", span="120-120"];
n8 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="Type = insight.Type", span="121-121"];
n9 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="ReferenceValue = insight.ReferenceValue", span="122-122"];
n10 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="Direction = insight.Direction", span="123-123"];
n11 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="Period = insight.Period.TotalSeconds", span="124-124"];
n12 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="Magnitude = insight.Magnitude", span="125-125"];
n13 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="Confidence = insight.Confidence", span="126-126"];
n14 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="ScoreIsFinal = insight.Score.IsFinalScore", span="127-127"];
n15 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="ScoreMagnitude = insight.Score.Magnitude", span="128-128"];
n16 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="ScoreDirection = insight.Score.Direction", span="129-129"];
n17 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="EstimatedValue = insight.EstimatedValue", span="130-130"];
n19 [cluster="System.Guid.ToString(string)", label="Entry System.Guid.ToString(string)", span="0-0"];
n20 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="169-169"];
n21 [cluster="QuantConnect.SecurityIdentifier.ToString()", label="Entry QuantConnect.SecurityIdentifier.ToString()", span="717-717"];
n18 [cluster="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", label="Exit QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight.SerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Insight)", span="114-114"];
d330 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", color=green, community=0, label="var minResolution = subscriptions.Count > 0 ? subscriptions.Min(x => x.Resolution) : Resolution.Second", prediction=0, span="673-673"];
d329 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var subscriptions = algorithm.SubscriptionManager.Subscriptions.Where(x => !x.IsInternalFeed).ToList()", span="672-672"];
d331 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="674-674"];
d405 [cluster="Unk.Min", label="Entry Unk.Min", span=""];
d428 [cluster="lambda expression", label="Entry lambda expression", span="673-673"];
d334 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution < minResolution", span="679-679"];
d335 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.Resolution = minResolution", span="681-681"];
d336 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = request.FillForwardResolution.HasValue ? minResolution : (Resolution?) null", span="682-682"];
d429 [cluster="lambda expression", color=green, community=0, label="x.Resolution", prediction=1, span="673-673"];
d430 [cluster="lambda expression", label="Exit lambda expression", span="673-673"];
d245 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="649-649"];
d328 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="669-669"];
d237 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d406 [cluster="Unk.ToList", label="Entry Unk.ToList", span=""];
d425 [cluster="lambda expression", label="Entry lambda expression", span="672-672"];
d323 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var historyRequests = algorithm.GetWarmupHistoryRequests().ToList()", span="657-657"];
d333 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Securities.TryGetValue(request.Symbol, out security) && security.SubscriptionDataConfig.IsInternalFeed", span="677-677"];
d332 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Security security", span="676-676"];
d337 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Any(x => x.FillForwardResolution.HasValue)", span="688-688"];
d326 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var minimumIncrement = algorithm.UniverseManager\r\n                .Select(x => x.Value.Configuration.Resolution.ToTimeSpan())\r\n                .DefaultIfEmpty(Time.OneSecond)\r\n                .Min()", span="662-665"];
d338 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minResolution = historyRequests.Where(x => x.FillForwardResolution.HasValue).Min(x => x.FillForwardResolution.Value)", span="690-690"];
d41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Stream(job, algorithm, feed, results, token)", span="194-194"];
d400 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", span="649-649"];
d319 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="bool setStartTime = false", span="651-651"];
d360 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield break;", span="727-727"];
d370 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="746-746"];
d399 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="yield return timeSlice;", span="815-815"];
d320 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var timeZone = algorithm.TimeZone", span="652-652"];
d321 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var history = algorithm.HistoryProvider", span="653-653"];
d348 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var security = algorithm.Securities[symbol]", span="713-713"];
d356 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice = TimeSlice.Create(slice.Time.ConvertToUtc(timeZone), timeZone, algorithm.Portfolio.CashBook, paired, SecurityChanges.None)", span="721-721"];
d359 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="726-726"];
d365 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm warming up...'')", span="736-736"];
d369 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="744-744"];
d372 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!algorithm.LiveMode || historyRequests.Count == 0", span="753-753"];
d373 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="755-755"];
d374 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Running)", span="756-756"];
d376 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="759-759"];
d378 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=feed, span="764-764"];
d382 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.LiveMode && algorithm.IsWarmingUp", span="771-771"];
d386 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="data.EndTime.ConvertToUtc(algorithm.Securities[data.Symbol].Exchange.TimeZone) >= lastHistoryTimeUtc", span="782-782"];
d391 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.SetFinishedWarmingUp()", span="801-801"];
d392 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Running)", span="802-802"];
d393 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="algorithm.Debug(''Algorithm finished warming up.'')", span="803-803"];
d398 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.History, string.Format(''Catching up to realtime {0}%...'', percent))", span="812-812"];
d9 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", span="129-129"];
d327 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="minimumIncrement = minimumIncrement == TimeSpan.Zero ? Time.OneSecond : minimumIncrement", span="667-667"];
d29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var hasOnDataSlice = algorithm.GetType().GetMethods()\r\n                .Where(x => x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice))\r\n                .FirstOrDefault(x => x.DeclaringType == algorithm.GetType()) != null", span="162-164"];
d339 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Where(x => x.FillForwardResolution.HasValue)", span="691-691"];
d427 [cluster="lambda expression", label="Exit lambda expression", span="672-672"];
d426 [cluster="lambda expression", label="!x.IsInternalFeed", span="672-672"];
d322 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime? lastHistoryTimeUtc = null", span="656-656"];
d324 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var start = DateTime.UtcNow.Ticks", span="660-660"];
d401 [cluster="QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetWarmupHistoryRequests()", span="494-494"];
d283 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
d341 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=historyRequests, span="697-697"];
d344 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="history.GetHistory(historyRequests, timeZone)", span="704-704"];
d375 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="historyRequests.Count != 0", span="757-757"];
d407 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="200-200"];
d408 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
d431 [cluster="lambda expression", label="Entry lambda expression", span="688-688"];
d325 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="661-661"];
d403 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
d404 [cluster="Unk.DefaultIfEmpty", label="Entry Unk.DefaultIfEmpty", span=""];
d421 [cluster="lambda expression", label="Entry lambda expression", span="663-663"];
d434 [cluster="lambda expression", label="Entry lambda expression", span="690-690"];
d437 [cluster="lambda expression", label="Entry lambda expression", span="690-690"];
d340 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="request.FillForwardResolution = minResolution", span="693-693"];
d477 [label="QuantConnect.Lean.Engine.AlgorithmManager", span=""];
d40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Begin DataStream - Start: '' + algorithm.StartDate + '' Stop: '' + algorithm.EndDate)", span="193-193"];
d202 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents()", span="575-575"];
d42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.UtcNow", span="197-197"];
d203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_currentTimeStepTime = DateTime.MinValue", span="579-579"];
d44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): Algorithm state changed to {0} at {1}'', _algorithm.Status, timeSlice.Time))", span="202-202"];
d46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): CancellationRequestion at '' + timeSlice.Time)", span="209-209"];
d58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var time = timeSlice.Time", span="234-234"];
d59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_dataPointCount += timeSlice.DataPointCount", span="235-235"];
d70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Count != 0", span="273-273"];
d72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof (SymbolChangedEvents)](algorithm, timeSlice.Slice.SymbolChangedEvents)", span="277-277"];
d73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.SymbolChangedEvents.Keys", span="279-279"];
d76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="289-289"];
d77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges.AddedSecurities", span="291-291"];
d80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.CashBookUpdateData", span="302-302"];
d82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.SecuritiesUpdateData", span="308-308"];
d86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="realtime.SetTime(timeSlice.Time)", span="320-320"];
d101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Run(): Algorithm encountered a runtime error at {0}. Error: {1}'', timeSlice.Time, algorithm.RunTimeError))", span="348-348"];
d129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.SecurityChanges != SecurityChanges.None", span="412-412"];
d130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.OnSecuritiesChanged(timeSlice.SecurityChanges)", span="416-416"];
d136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Dividends.Values", span="428-428"];
d139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Splits.Values", span="435-435"];
d150 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.ConsolidatorUpdateData", span="461-461"];
d160 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.CustomData", span="482-482"];
d172 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="hasOnDataDividends && timeSlice.Slice.Dividends.Count != 0", span="513-513"];
d173 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Dividends)](algorithm, timeSlice.Slice.Dividends)", span="515-515"];
d174 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="hasOnDataSplits && timeSlice.Slice.Splits.Count != 0", span="517-517"];
d175 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Splits)](algorithm, timeSlice.Slice.Splits)", span="519-519"];
d176 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="hasOnDataDelistings && timeSlice.Slice.Delistings.Count != 0", span="521-521"];
d177 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Delistings)](algorithm, timeSlice.Slice.Delistings)", span="523-523"];
d183 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="HandleDelistedSymbols(algorithm, timeSlice.Slice.Delistings, delistingTickets)", span="535-535"];
d184 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="hasOnDataTradeBars && timeSlice.Slice.Bars.Count > 0", span="540-540"];
d185 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(TradeBars)](algorithm, timeSlice.Slice.Bars)", span="540-540"];
d186 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="hasOnDataTicks && timeSlice.Slice.Ticks.Count > 0", span="541-541"];
d187 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="methodInvokers[typeof(Ticks)](algorithm, timeSlice.Slice.Ticks)", span="541-541"];
d193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.HasData", span="553-553"];
d194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.OnData(timeSlice.Slice)", span="556-556"];
d362 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="732-732"];
d379 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="!setStartTime", span="766-766"];
d106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var executingMarginCall = false", span="360-360"];
d361 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice != null", span="730-730"];
d366 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="738-738"];
d371 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = timeSlice.Time", span="747-747"];
d395 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="DateTime.UtcNow > nextStatusTime", span="806-806"];
d394 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="804-804"];
d347 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="slice.Keys", span="711-711"];
d349 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var data = slice[symbol]", span="714-714"];
d355 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="paired.Add(new KeyValuePair<Security, List<BaseData>>(security, list))", span="719-719"];
d346 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var paired = new List<KeyValuePair<Security, List<BaseData>>>()", span="710-710"];
d357 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=Exception, span="723-723"];
d414 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="449-449"];
d415 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="101-101"];
d364 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="735-735"];
d368 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int)(100 * (timeSlice.Time.Ticks - start) / (double)(DateTime.UtcNow.Ticks - start))", span="743-743"];
d358 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Error(err)", span="725-725"];
d416 [cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="355-355"];
d277 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d296 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="214-214"];
d417 [cluster="QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", label="Entry QuantConnect.Interfaces.IAlgorithm.SetFinishedWarmingUp()", span="488-488"];
d377 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Stream(): Finished warmup'')", span="760-760"];
d388 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label=hasHistoricalData, span="788-788"];
d381 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="_previousTime = timeSlice.Time", span="769-769"];
d385 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Slice.Ticks.Values.SelectMany(x => x).Concat<BaseData>(timeSlice.Slice.Bars.Values)", span="779-779"];
d390 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="timeSlice.Time > DateTime.UtcNow.Subtract(minimumIncrement)", span="799-799"];
d397 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var percent = (int) (100*(timeSlice.Time.Ticks - start)/(double) (DateTime.UtcNow.Ticks - start))", span="811-811"];
d383 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc.HasValue", span="775-775"];
d387 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="hasHistoricalData = true", span="784-784"];
d234 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="827-827"];
d255 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="871-871"];
d289 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", span="844-844"];
d230 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", span="129-129"];
d10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_dataPointCount = 0", span="132-132"];
d11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm = algorithm", span="133-133"];
d12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="134-134"];
d13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="135-135"];
d20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithmId = job.AlgorithmId", span="145-145"];
d22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_previousTime = algorithm.StartDate.Date", span="147-147"];
d23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var hasOnDataTradeBars = AddMethodInvoker<TradeBars>(algorithm, methodInvokers)", span="152-152"];
d24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var hasOnDataTicks = AddMethodInvoker<Ticks>(algorithm, methodInvokers)", span="153-153"];
d25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var hasOnDataDividends = AddMethodInvoker<Dividends>(algorithm, methodInvokers)", span="156-156"];
d26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var hasOnDataSplits = AddMethodInvoker<Splits>(algorithm, methodInvokers)", span="157-157"];
d27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var hasOnDataDelistings = AddMethodInvoker<Delistings>(algorithm, methodInvokers)", span="158-158"];
d28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var hasOnDataSymbolChangedEvents = AddMethodInvoker<SymbolChangedEvents>(algorithm, methodInvokers)", span="159-159"];
d305 [cluster="lambda expression", label="x.DeclaringType == algorithm.GetType()", span="164-164"];
d30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.SubscriptionManager.Subscriptions", span="167-167"];
d32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="173-173"];
d35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="181-181"];
d45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="token.IsCancellationRequested", span="207-207"];
d48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="commands.GetCommands()", span="214-214"];
d52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="result = command.Run(algorithm)", span="221-221"];
d55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.Error(string.Format(''{0} Error: {1}'', command.GetType().Name, err.Message))", span="226-226"];
d57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.Messages.Enqueue(result)", span="231-231"];
d62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, _previousTime.Date)", span="245-245"];
d63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="248-248"];
d65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, 0)", span="253-253"];
d66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue) * 100 / portfolioValue, 10))", span="257-257"];
d67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="portfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="259-259"];
d68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, time)", span="265-265"];
d69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.SetDateTime(time)", span="271-271"];
d74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="transactions.GetOrderTickets(x => x.Status.IsOpen() && x.Symbol == symbol)", span="282-282"];
d78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="!algorithm.Securities.ContainsKey(security.Symbol)", span="293-293"];
d79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.Securities.Add(security)", span="296-296"];
d85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.TradeBuilder.SetMarketPrice(kvp.Key.Symbol, kvp.Value.Price)", span="315-315"];
d87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="323-323"];
d93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.Securities.Remove(ticket.Symbol)", span="332-332"];
d97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.Status == AlgorithmStatus.Stopped", span="340-340"];
d99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError != null", span="345-345"];
d104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="357-357"];
d107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCall(marginCallOrders)", span="364-364"];
d109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var executedTickets = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="369-369"];
d111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.Error(string.Format(''{0} - Executed MarginCallOrder: {1} - Quantity: {2} @ {3}'', algorithm.Time, ticket.Symbol, ticket.Quantity, ticket.AverageFillPrice))", span="372-372"];
d113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="377-377"];
d119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.OnMarginCallWarning()", span="389-389"];
d121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="393-393"];
d127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ScanForCashSettlement(algorithm.UtcTime)", span="406-406"];
d132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="420-420"];
d138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplyDividend(dividend)", span="431-431"];
d141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.Portfolio.ApplySplit(split)", span="440-440"];
d142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_liveMode || algorithm.Securities[split.Symbol].SubscriptionDataConfig.DataNormalizationMode == DataNormalizationMode.Raw", span="442-442"];
d143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var openOrders = transactions.GetOrderTickets(ticket => ticket.Status.IsOpen() && ticket.Symbol == split.Symbol)", span="445-445"];
d144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.BrokerageModel.ApplySplit(openOrders.ToList(), split)", span="446-446"];
d146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="451-451"];
d156 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="475-475"];
d166 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="methodInvoker(algorithm, dataPoint)", span="497-497"];
d168 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="503-503"];
d179 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="528-528"];
d189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="545-545"];
d196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = err", span="561-561"];
d200 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="transactions.ProcessSynchronousEvents()", span="569-569"];
d205 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.OnEndOfAlgorithm()", span="585-585"];
d208 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="590-590"];
d211 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.ProcessSynchronousEvents(forceProcess: true)", span="596-596"];
d214 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="algorithm.Liquidate()", span="602-602"];
d215 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Liquidated'')", span="603-603"];
d216 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Liquidated)", span="604-604"];
d219 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.LogMessage(''Algorithm Stopped'')", span="611-611"];
d220 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Stopped)", span="612-612"];
d223 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="619-619"];
d224 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Deleted)", span="620-620"];
d225 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Completed)", span="624-624"];
d226 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.SampleRange(algorithm.GetChartUpdates())", span="627-627"];
d227 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="628-628"];
d228 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="SampleBenchmark(algorithm, results, _previousTime)", span="629-629"];
d229 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="results.SamplePerformance(_previousTime, Math.Round((algorithm.Portfolio.TotalPortfolioValue - portfolioValue)*100/portfolioValue, 10))", span="630-630"];
d235 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
d236 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
d238 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
d300 [cluster="lambda expression", label="Entry lambda expression", span="163-163"];
d304 [cluster="lambda expression", label="Entry lambda expression", span="164-164"];
d34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="genericMethod == null && !hasOnDataSlice", span="179-179"];
d440 [cluster="lambda expression", label="Entry lambda expression", span="691-691"];
d1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="TimeLoopWithinLimits = () =>\r\n            {\r\n                if (CurrentTimeStepElapsed > _timeLoopMaximum)\r\n                {\r\n                    return ''Algorithm took longer than 10 minutes on a single time loop.'';\r\n                }\r\n                return null;\r\n            }", span="106-113"];
d342 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="start = Math.Min(request.StartTimeUtc.Ticks, start)", span="699-699"];
d343 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="Log.Trace(string.Format(''AlgorithmManager.Stream(): WarmupHistoryRequest: {0}: Start: {1} End: {2} Resolution: {3}'', request.Symbol, request.StartTimeUtc, request.EndTimeUtc, request.Resolution))", span="700-700"];
d345 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="TimeSlice timeSlice", span="706-706"];
d410 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="51-51"];
d433 [cluster="lambda expression", label="Exit lambda expression", span="688-688"];
d432 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="688-688"];
d402 [cluster="System.DateTime.AddSeconds(double)", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
d423 [cluster="lambda expression", label="Exit lambda expression", span="663-663"];
d422 [cluster="lambda expression", label="x.Value.Configuration.Resolution.ToTimeSpan()", span="663-663"];
d436 [cluster="lambda expression", label="Exit lambda expression", span="690-690"];
d435 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="690-690"];
d439 [cluster="lambda expression", label="Exit lambda expression", span="690-690"];
d438 [cluster="lambda expression", label="x.FillForwardResolution.Value", span="690-690"];
d5 [cluster="lambda expression", label="CurrentTimeStepElapsed > _timeLoopMaximum", span="108-108"];
d2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="_liveMode = liveMode", span="114-114"];
d21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.Running", span="146-146"];
d36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="182-182"];
d43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status != AlgorithmStatus.Running", span="200-200"];
d61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_previousTime.Date != time.Date", span="243-243"];
d100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="347-347"];
d102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="time >= nextMarginCallTime || (_liveMode && nextMarginCallTime > DateTime.UtcNow)", span="353-353"];
d114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="378-378"];
d122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="394-394"];
d126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="time >= nextSettlementScanTime || (_liveMode && nextSettlementScanTime > DateTime.UtcNow)", span="404-404"];
d133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="421-421"];
d147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="452-452"];
d157 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="476-476"];
d169 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="504-504"];
d180 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="529-529"];
d190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="546-546"];
d197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="562-562"];
d201 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_previousTime = time", span="572-572"];
d207 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="589-589"];
d212 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Liquidated && _liveMode", span="599-599"];
d217 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Stopped", span="608-608"];
d221 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="_algorithm.Status == AlgorithmStatus.Deleted", span="616-616"];
d315 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label=_lock, span="638-638"];
d317 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="_algorithm.Status = state", span="644-644"];
d471 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="_algorithm.Status = AlgorithmStatus.RuntimeError", span="881-881"];
d244 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
d291 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="248-248"];
d98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Algorithm quit requested.'')", span="342-342"];
d204 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="582-582"];
d246 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d247 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
d47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="210-210"];
d125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="nextMarginCallTime = time + marginCallFrequency", span="400-400"];
d128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="nextSettlementScanTime = time + settlementScanFrequency", span="408-408"];
d60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=backtestMode, span="240-240"];
d71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=hasOnDataSymbolChangedEvents, span="275-275"];
d14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="136-136"];
d260 [cluster="Unk.]", label="Entry Unk.]", span=""];
d308 [cluster="lambda expression", label="x.Status.IsOpen() && x.Symbol == symbol", span="282-282"];
d81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="kvp.Key.Update(kvp.Value)", span="304-304"];
d84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="kvp.Value != null", span="313-313"];
d83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="kvp.Key.SetMarketPrice(kvp.Value)", span="310-310"];
d268 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="53-53"];
d131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="418-418"];
d280 [cluster="QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="349-349"];
d137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Applying Dividend for '' + dividend.Symbol.ToString(), true)", span="430-430"];
d140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Applying Split for '' + split.Symbol.ToString(), true)", span="439-439"];
d312 [cluster="lambda expression", label="ticket.Status.IsOpen() && ticket.Symbol == split.Symbol", span="445-445"];
d152 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="kvp.Value", span="464-464"];
d151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var consolidators = kvp.Key.Consolidators", span="463-463"];
d155 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="473-473"];
d163 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="!methodInvokers.TryGetValue(type, out methodInvoker)", span="486-486"];
d164 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="kvp.Value", span="493-493"];
d161 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="MethodInvoker methodInvoker", span="484-484"];
d162 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var type = kvp.Key.SubscriptionDataConfig.Type", span="485-485"];
d178 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="526-526"];
d19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var delistingTickets = new List<OrderTicket>()", span="142-142"];
d188 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="543-543"];
d195 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="559-559"];
d290 [cluster="QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnData(QuantConnect.Data.Slice)", span="343-343"];
d363 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="734-734"];
d380 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="setStartTime = true", span="768-768"];
d105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="marginCallOrders.Count != 0", span="358-358"];
d384 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var hasHistoricalData = false", span="778-778"];
d367 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="742-742"];
d396 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="nextStatusTime = DateTime.UtcNow.AddSeconds(1)", span="810-810"];
d350 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var list = new List<BaseData>()", span="715-715"];
d351 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="var ticks = data as List<Tick>", span="716-716"];
d354 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.Add(data)", span="718-718"];
d353 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="list.AddRange(ticks)", span="717-717"];
d413 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
d412 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
d233 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d251 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
d116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(string.Format(''AlgorithmManager.Run(): RuntimeError: {0}: '', locator) + err)", span="380-380"];
d389 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="lastHistoryTimeUtc = null", span="794-794"];
d418 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
d419 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
d443 [cluster="lambda expression", label="Entry lambda expression", span="779-779"];
d420 [cluster="Unk.Subtract", label="Entry Unk.Subtract", span=""];
d451 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", span="827-827"];
d446 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="var newSplitMethodInfo = algorithm.GetType().GetMethod(methodName, new[] {typeof (T)})", span="829-829"];
d448 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="methodInvokers.Add(typeof(T), newSplitMethodInfo.DelegateForCallMethod())", span="832-832"];
d473 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", span="871-871"];
d468 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="results.SampleBenchmark(time, algorithm.Benchmark.Evaluate(time).SmartRounding())", span="876-876"];
d470 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="algorithm.RunTimeError = err", span="880-880"];
d463 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", span="844-844"];
d452 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="newDelistings.Values", span="846-846"];
d455 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="var security = algorithm.Securities[delisting.Symbol]", span="852-852"];
d456 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="var submitOrderRequest = new SubmitOrderRequest(OrderType.MarketOnClose, security.Type, security.Symbol,\r\n                        -security.Holdings.Quantity, 0, 0, algorithm.UtcTime, ''Liquidate from delisting'')", span="853-854"];
d457 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="var ticket = algorithm.Transactions.ProcessRequest(submitOrderRequest)", span="855-855"];
d459 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="delistingTickets.Add(ticket)", span="857-857"];
d461 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="algorithm.Securities.Remove(delisting.Symbol)", span="862-862"];
d37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="183-183"];
d117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="381-381"];
d124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="396-396"];
d135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="423-423"];
d149 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="454-454"];
d159 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="478-478"];
d171 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="506-506"];
d182 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="531-531"];
d192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="548-548"];
d199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="564-564"];
d210 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="return;", span="592-592"];
d64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="portfolioValue == 0m", span="251-251"];
d478 [label="QuantConnect.Interfaces.IAlgorithm", span=""];
d306 [cluster="lambda expression", label="Exit lambda expression", span="164-164"];
d33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="methodInvokers.ContainsKey(config.Type)", span="176-176"];
d39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="187-187"];
d31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="config.Type.Name != ''TradeBar'' && config.Type.Name != ''Tick'' && !config.IsInternalFeed", span="170-170"];
d38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="genericMethod != null", span="185-185"];
d239 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
d241 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
d49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="command == null", span="216-216"];
d248 [cluster="QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", label="Entry QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", span="41-41"];
d50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Executing {0}'', command)", span="217-217"];
d56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="result = new CommandResultPacket(command, false)", span="227-227"];
d51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="CommandResultPacket result", span="218-218"];
d53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="223-223"];
d250 [cluster="QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)", label="Entry QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="29-29"];
d54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(err)", span="225-225"];
d252 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="367-367"];
d254 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
d256 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
d257 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="149-149"];
d90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="i < delistingTickets.Count", span="327-327"];
d258 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="157-157"];
d259 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="421-421"];
d75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="ticket.Cancel(''Open order cancelled on symbol changed event'')", span="284-284"];
d261 [cluster="QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", label="Entry QuantConnect.Securities.IOrderProvider.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="50-50"];
d307 [cluster="lambda expression", label="Entry lambda expression", span="282-282"];
d263 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="123-123"];
d264 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="82-82"];
d267 [cluster="QuantConnect.Statistics.TradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", label="Entry QuantConnect.Statistics.TradeBuilder.SetMarketPrice(QuantConnect.Symbol, decimal)", span="104-104"];
d88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="delistingTickets.Count != 0", span="325-325"];
d269 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="67-67"];
d91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var ticket = delistingTickets[i]", span="329-329"];
d92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="ticket.Status == OrderStatus.Filled", span="330-330"];
d94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="delistingTickets.RemoveAt(i--)", span="333-333"];
d270 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="173-173"];
d103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="bool issueMarginCallWarning", span="356-356"];
d273 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="536-536"];
d118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=issueMarginCallWarning, span="385-385"];
d108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="executingMarginCall = true", span="366-366"];
d274 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="373-373"];
d110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=executedTickets, span="370-370"];
d275 [cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", label="Entry QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.SubmitOrderRequest>)", span="51-51"];
d276 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
d112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="375-375"];
d120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="391-391"];
d278 [cluster="QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnMarginCallWarning()", span="378-378"];
d279 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="705-705"];
d281 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplyDividend(QuantConnect.Data.Market.Dividend)", span="590-590"];
d282 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ApplySplit(QuantConnect.Data.Market.Split)", span="610-610"];
d145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="449-449"];
d311 [cluster="lambda expression", label="Entry lambda expression", span="445-445"];
d284 [cluster="QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", label="Entry QuantConnect.Brokerages.IBrokerageModel.ApplySplit(System.Collections.Generic.List<QuantConnect.Orders.OrderTicket>, QuantConnect.Data.Market.Split)", span="69-69"];
d165 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="type.IsInstanceOfType(dataPoint)", span="495-495"];
d288 [cluster="Unk.methodInvoker", label="Entry Unk.methodInvoker", span=""];
d167 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="501-501"];
d206 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=Exception, span="587-587"];
d292 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="393-393"];
d209 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.OnEndOfAlgorithm(): '' + err)", span="591-591"];
d293 [cluster="System.Exception.Exception(string, System.Exception)", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
d213 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="601-601"];
d294 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol)", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(QuantConnect.Symbol)", span="477-477"];
d295 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="114-114"];
d218 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="610-610"];
d222 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="618-618"];
d297 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
d298 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates(bool)", span="444-444"];
d299 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="181-181"];
d302 [cluster="lambda expression", label="Exit lambda expression", span="163-163"];
d301 [cluster="lambda expression", label="x.Name == ''OnData'' && x.GetParameters().Length == 1 && x.GetParameters()[0].ParameterType == typeof (Slice)", span="163-163"];
d442 [cluster="lambda expression", label="Exit lambda expression", span="691-691"];
d441 [cluster="lambda expression", label="x.FillForwardResolution.HasValue", span="691-691"];
d0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="104-104"];
d409 [cluster="System.Math.Min(long, long)", label="Entry System.Math.Min(long, long)", span="0-0"];
d424 [cluster="QuantConnect.Resolution.ToTimeSpan()", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="545-545"];
d4 [cluster="lambda expression", label="Entry lambda expression", span="106-113"];
d6 [cluster="lambda expression", label="return ''Algorithm took longer than 10 minutes on a single time loop.'';", span="110-110"];
d7 [cluster="lambda expression", label="return null;", span="112-112"];
d3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="104-104"];
d16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var nextMarginCallTime = DateTime.MinValue", span="138-138"];
d115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var locator = executingMarginCall ? ''Portfolio.MarginCallModel.ExecuteMarginCall'' : ''OnMarginCall''", span="379-379"];
d123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnMarginCallWarning: '' + err)", span="395-395"];
d18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var nextSettlementScanTime = DateTime.MinValue", span="140-140"];
d134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: OnSecuritiesChanged event: '' + err)", span="422-422"];
d148 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Split event: '' + err)", span="453-453"];
d158 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err)", span="477-477"];
d170 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err)", span="505-505"];
d181 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Dividends/Splits/Delistings: '' + err)", span="530-530"];
d191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err)", span="547-547"];
d198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Slice: '' + err)", span="563-563"];
d314 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="636-636"];
d316 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="state != AlgorithmStatus.Running", span="642-642"];
d318 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="636-636"];
d472 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label="Log.Error(err)", span="882-882"];
d95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="Log.Trace(''AlgorithmManager.Run(): Delisted Security removed: '' + ticket.Symbol.ToString())", span="334-334"];
d454 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisting warning: '' + delisting.Symbol.ToString())", span="851-851"];
d460 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="Log.Trace(''AlgorithmManager.Run(): Security delisted: '' + delisting.Symbol.ToString())", span="861-861"];
d462 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="Log.Trace(''AlgorithmManager.Run(): Security removed: '' + delisting.Symbol.ToString())", span="863-863"];
d15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="137-137"];
d17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="var settlementScanFrequency = TimeSpan.FromMinutes(30)", span="139-139"];
d231 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d479 [label=symbol, span=""];
d309 [cluster="lambda expression", label="Exit lambda expression", span="282-282"];
d310 [cluster="QuantConnect.Orders.OrderStatus.IsOpen()", label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39"];
d265 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="82-82"];
d266 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="443-443"];
d272 [cluster="QuantConnect.Symbol.ToString()", label="Entry QuantConnect.Symbol.ToString()", span="183-183"];
d480 [label=split, span=""];
d313 [cluster="lambda expression", label="Exit lambda expression", span="445-445"];
d153 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label=consolidators, span="466-466"];
d154 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="consolidator.Update(dataPoint)", span="468-468"];
d286 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
d352 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Stream(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, System.Threading.CancellationToken)", label="ticks != null", span="717-717"];
d411 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
d445 [cluster="lambda expression", label="Exit lambda expression", span="779-779"];
d444 [cluster="lambda expression", label=x, span="779-779"];
d450 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return false;", span="835-835"];
d449 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="return true;", span="833-833"];
d447 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AddMethodInvoker<T>(QuantConnect.Interfaces.IAlgorithm, System.Collections.Generic.Dictionary<System.Type, MethodInvoker>, string)", label="newSplitMethodInfo != null", span="830-830"];
d242 [cluster="Unk.DelegateForCallMethod", label="Entry Unk.DelegateForCallMethod", span=""];
d243 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
d469 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SampleBenchmark(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.Results.IResultHandler, System.DateTime)", label=Exception, span="878-878"];
d474 [cluster="QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", label="Entry QuantConnect.Benchmarks.IBenchmark.Evaluate(System.DateTime)", span="29-29"];
d475 [cluster="decimal.SmartRounding()", label="Entry decimal.SmartRounding()", span="150-150"];
d476 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleBenchmark(System.DateTime, decimal)", span="165-165"];
d453 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="delisting.Type == DelistingType.Warning", span="849-849"];
d458 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.HandleDelistedSymbols(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Data.Market.Delistings, System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>)", label="delisting.SetOrderTicket(ticket)", span="856-856"];
d464 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", span="92-92"];
d465 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="112-112"];
d467 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
d240 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
d249 [cluster="QuantConnect.Logging.Log.Trace(string, params object[])", label="Entry QuantConnect.Logging.Log.Trace(string, params object[])", span="123-123"];
d253 [cluster="QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", label="Entry QuantConnect.Packets.CommandResultPacket.CommandResultPacket(QuantConnect.Commands.ICommand, bool)", span="38-38"];
d89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="int i = 0", span="327-327"];
d96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", label="i++", span="327-327"];
d262 [cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="258-258"];
d271 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
d287 [cluster="System.Type.IsInstanceOfType(object)", label="Entry System.Type.IsInstanceOfType(object)", span="0-0"];
d303 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
d8 [cluster="lambda expression", label="Exit lambda expression", span="106-113"];
d232 [cluster="System.TimeSpan.FromMinutes(double)", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
d285 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", span="54-54"];
d466 [cluster="QuantConnect.Data.Market.Delisting.SetOrderTicket(QuantConnect.Orders.OrderTicket)", label="Entry QuantConnect.Data.Market.Delisting.SetOrderTicket(QuantConnect.Orders.OrderTicket)", span="66-66"];
m0_39 [cluster="Unk.IsOpenDuringBar", file="DefaultBrokerageMessageHandler.cs", label="Entry Unk.IsOpenDuringBar", span=""];
m0_33 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="DefaultBrokerageMessageHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
m0_34 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", file="DefaultBrokerageMessageHandler.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", span="121-121"];
m0_42 [cluster="System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", file="DefaultBrokerageMessageHandler.cs", label="Entry System.Threading.Tasks.Task.ContinueWith(System.Action<System.Threading.Tasks.Task>)", span="0-0"];
m0_35 [cluster="QuantConnect.Interfaces.IApi.SendUserEmail(string, string, string)", file="DefaultBrokerageMessageHandler.cs", label="Entry QuantConnect.Interfaces.IApi.SendUserEmail(string, string, string)", span="93-93"];
m0_44 [cluster="Unk.ConvertToUtc", file="DefaultBrokerageMessageHandler.cs", label="Entry Unk.ConvertToUtc", span=""];
m0_46 [cluster="Unk.Delay", file="DefaultBrokerageMessageHandler.cs", label="Entry Unk.Delay", span=""];
m0_36 [cluster="System.Exception.Exception(string)", file="DefaultBrokerageMessageHandler.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_50 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.CheckReconnected(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="Entry QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.CheckReconnected(QuantConnect.Brokerages.BrokerageMessageEvent)", span="137-137"];
m0_54 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.CheckReconnected(QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0, file="DefaultBrokerageMessageHandler.cs", label="!_connected", prediction=2, span="139-139"];
m0_55 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.CheckReconnected(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="Log.Error(''DefaultBrokerageMessageHandler.Handle(): Still disconnected, goodbye.'')", span="141-141"];
m0_56 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.CheckReconnected(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="_results.ErrorMessage(''Brokerage Disconnect: '' + message.Message)", span="142-142"];
m0_57 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.CheckReconnected(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="_algorithm.RunTimeError = new Exception(message.Message)", span="143-143"];
m0_58 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.CheckReconnected(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="Exit QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.CheckReconnected(QuantConnect.Brokerages.BrokerageMessageEvent)", span="137-137"];
m0_0 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", file="DefaultBrokerageMessageHandler.cs", label="Entry QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", span="56-56"];
m0_1 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", file="DefaultBrokerageMessageHandler.cs", label="_api = api", span="58-58"];
m0_2 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", file="DefaultBrokerageMessageHandler.cs", label="_job = job", span="59-59"];
m0_3 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", file="DefaultBrokerageMessageHandler.cs", label="_results = results", span="60-60"];
m0_4 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", file="DefaultBrokerageMessageHandler.cs", label="_algorithm = algorithm", span="61-61"];
m0_5 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", file="DefaultBrokerageMessageHandler.cs", label="_connected = true", span="62-62"];
m0_6 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", file="DefaultBrokerageMessageHandler.cs", label="_openThreshold = openThreshold ?? DefaultOpenThreshold", span="63-63"];
m0_7 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", file="DefaultBrokerageMessageHandler.cs", label="_initialDelay = initialDelay ?? DefaultInitialDelay", span="64-64"];
m0_8 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", file="DefaultBrokerageMessageHandler.cs", label="Exit QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.DefaultBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi, System.TimeSpan?, System.TimeSpan?)", span="56-56"];
m0_37 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="DefaultBrokerageMessageHandler.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m0_40 [cluster="Unk.Any", file="DefaultBrokerageMessageHandler.cs", label="Entry Unk.Any", span=""];
m0_45 [cluster="Unk.Min", file="DefaultBrokerageMessageHandler.cs", label="Entry Unk.Min", span=""];
m0_43 [cluster="Unk.GetNextMarketOpen", file="DefaultBrokerageMessageHandler.cs", label="Entry Unk.GetNextMarketOpen", span=""];
m0_41 [cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="DefaultBrokerageMessageHandler.cs", label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0"];
m0_38 [cluster="Unk.ConvertFromUtc", file="DefaultBrokerageMessageHandler.cs", label="Entry Unk.ConvertFromUtc", span=""];
m0_9 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="Entry QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", span="71-71"];
m0_12 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="_results.DebugMessage(''Brokerage Info: '' + message.Message)", span="77-77"];
m0_14 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="_results.ErrorMessage(''Brokerage Warning: '' + message.Message)", span="81-81"];
m0_15 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="_api.SendUserEmail(_job.AlgorithmId, ''Brokerage Warning'', message.Message)", span="82-82"];
m0_17 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="_results.ErrorMessage(''Brokerage Error: '' + message.Message)", span="86-86"];
m0_18 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="_algorithm.RunTimeError = new Exception(message.Message)", span="87-87"];
m0_20 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="_connected = false", span="91-91"];
m0_22 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="var open = (from kvp in _algorithm.Securities\r\n                                let security = kvp.Value\r\n                                where security.Type != SecurityType.Base\r\n                                let exchange = security.Exchange\r\n                                let localTime = _algorithm.UtcTime.ConvertFromUtc(exchange.TimeZone)\r\n                                where exchange.IsOpenDuringBar(localTime, localTime + _openThreshold, security.IsExtendedMarketHours)\r\n                                select security).Any()", span="95-101"];
m0_24 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="Task.Delay(_initialDelay).ContinueWith(_ => CheckReconnected(message))", span="107-107"];
m0_26 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="var nextMarketOpenUtc = (from kvp in _algorithm.Securities\r\n                                                 let security = kvp.Value\r\n                                                 where security.Type != SecurityType.Base\r\n                                                 let exchange = security.Exchange\r\n                                                 let localTime = _algorithm.UtcTime.ConvertFromUtc(exchange.TimeZone)\r\n                                                 let marketOpen = exchange.Hours.GetNextMarketOpen(localTime, security.IsExtendedMarketHours)\r\n                                                 let marketOpenUtc = marketOpen.ConvertToUtc(exchange.TimeZone)\r\n                                                 select marketOpenUtc).Min()", span="114-121"];
m0_27 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="var timeUntilNextMarketOpen = nextMarketOpenUtc - DateTime.UtcNow - _openThreshold", span="123-123"];
m0_28 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="Task.Delay(timeUntilNextMarketOpen).ContinueWith(_ => CheckReconnected(message))", span="126-126"];
m0_30 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="_connected = true", span="131-131"];
m0_11 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="BrokerageMessageType.Information", span="76-76"];
m0_13 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="BrokerageMessageType.Warning", span="80-80"];
m0_16 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="BrokerageMessageType.Error", span="85-85"];
m0_19 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="BrokerageMessageType.Disconnect", span="90-90"];
m0_21 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="Log.Trace(''DefaultBrokerageMessageHandler.Handle(): Disconnected.'')", span="92-92"];
m0_23 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label=open, span="104-104"];
m0_25 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="Log.Trace(''DefaultBrokerageMessageHandler.Handle(): Disconnect when exchanges are closed, checking back before exchange open.'')", span="111-111"];
m0_29 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="BrokerageMessageType.Reconnect", span="130-130"];
m0_31 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="Log.Trace(''DefaultBrokerageMessageHandler.Handle(): Reconnected.'')", span="132-132"];
m0_10 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="message.Type", span="74-74"];
m0_32 [cluster="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="DefaultBrokerageMessageHandler.cs", label="Exit QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", span="71-71"];
m0_51 [cluster="lambda expression", file="DefaultBrokerageMessageHandler.cs", label="Entry lambda expression", span="126-126"];
m0_48 [cluster="lambda expression", file="DefaultBrokerageMessageHandler.cs", label="CheckReconnected(message)", span="107-107"];
m0_52 [cluster="lambda expression", file="DefaultBrokerageMessageHandler.cs", label="CheckReconnected(message)", span="126-126"];
m0_47 [cluster="lambda expression", file="DefaultBrokerageMessageHandler.cs", label="Entry lambda expression", span="107-107"];
m0_49 [cluster="lambda expression", file="DefaultBrokerageMessageHandler.cs", label="Exit lambda expression", span="107-107"];
m0_53 [cluster="lambda expression", file="DefaultBrokerageMessageHandler.cs", label="Exit lambda expression", span="126-126"];
m0_60 [file="DefaultBrokerageMessageHandler.cs", label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", span=""];
m0_61 [file="DefaultBrokerageMessageHandler.cs", label="QuantConnect.Brokerages.BrokerageMessageEvent", span=""];
m1_0 [cluster="QuantConnect.Securities.ImmediateSettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", file="FxcmDataDownloader.cs", label="Entry QuantConnect.Securities.ImmediateSettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", span="33-33"];
m1_1 [cluster="QuantConnect.Securities.ImmediateSettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", file="FxcmDataDownloader.cs", label="portfolio.CashBook[currency].Quantity += amount", span="35-35"];
m1_2 [cluster="QuantConnect.Securities.ImmediateSettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", file="FxcmDataDownloader.cs", label="Exit QuantConnect.Securities.ImmediateSettlementModel.ApplyFunds(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, System.DateTime, string, decimal)", span="33-33"];
m2_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject)", span="756-756"];
m2_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject)", span="756-756"];
m2_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", span="767-767"];
m2_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="var dict = new Dictionary<string, string>()", span="769-769"];
m2_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="headers != null", span="771-771"];
m2_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="PyDict.IsDictType(headers)", span="777-777"];
m2_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label=headers, span="779-779"];
m2_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="var value = (string)headers.GetItem(pyKey).AsManagedObject(typeof(string))", span="782-782"];
m2_401 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException($''QCAlgorithm.Fetch(): Invalid argument. {headers.Repr()} is not a dict'');", span="788-788"];
m2_402 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="return Download(address, dict, userName, password);", span="792-792"];
m2_400 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="dict.Add(key, value)", span="783-783"];
m2_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="Py.GIL()", span="773-773"];
m2_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="var key = (string)pyKey.AsManagedObject(typeof(string))", span="781-781"];
m2_403 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Download(string, PyObject, string, string)", span="767-767"];
m2_405 [cluster="Unk.IsDictType", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IsDictType", span=""];
m2_458 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, System.Action<T>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Consolidate<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, System.Action<T>)", span="1695-1695"];
m2_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="456-456"];
m2_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="InteractiveBrokersBrokerage.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="458-458"];
m2_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator, QuantConnect.Indicators.TradeBarIndicator)", span="456-456"];
m2_500 [cluster="Unk.Split", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Split", span=""];
m2_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="464-464"];
m2_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var array = GetIndicatorArray(first, second, third, fourth)", span="466-466"];
m2_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="PlotIndicator(chart, array[0], array[1], array[2], array[3])", span="467-467"];
m2_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, PyObject, PyObject, PyObject, PyObject)", span="464-464"];
m2_225 [cluster="Unk.PlotIndicator", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.PlotIndicator", span=""];
m2_288 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m2_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="477-477"];
m2_203 [cluster="Unk.ToArray", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToArray", span=""];
m2_132 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m2_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="524-524"];
m2_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="var name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="526-526"];
m2_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="527-527"];
m2_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="528-528"];
m2_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="RegisterIndicator(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), pyselector)", span="530-530"];
m2_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="529-529"];
m2_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="return filteredIdentity;", span="531-531"];
m2_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, PyObject, PyObject, string)", span="524-524"];
m2_506 [cluster="QuantConnect.Util.ObjectActivator.AddActivator(System.Type, System.Func<object[], object>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Util.ObjectActivator.AddActivator(System.Type, System.Func<object[], object>)", span="131-131"];
m2_407 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m2_41 [cluster="Unk.Repr", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Repr", span=""];
m2_38 [cluster="Unk.AddUniverse", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.AddUniverse", span=""];
m2_406 [cluster="Unk.GetItem", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GetItem", span=""];
m2_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="401-401"];
m2_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", span="612-612"];
m2_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="614-614"];
m2_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType);\r\n                if (config == null) return null;\r\n\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="616-626"];
m2_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="return PandasConverter.GetDataFrame(History(requests.Where(x => x != null)).Memoize());", span="628-628"];
m2_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, int, QuantConnect.Resolution?)", span="612-612"];
m2_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, PyObject)", span="914-914"];
m2_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var type = GetSubscription(symbol, tickType).Type", span="917-917"];
m2_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="return Consolidate(symbol, period, tickType, handler.ConvertToDelegate<Action<TradeBar>>());", span="921-921"];
m2_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="return Consolidate(symbol, period, tickType, handler.ConvertToDelegate<Action<QuoteBar>>());", span="926-926"];
m2_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="return Consolidate(symbol, period, null, handler.ConvertToDelegate<Action<BaseData>>());", span="929-929"];
m2_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="type == typeof(TradeBar)", span="919-919"];
m2_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="type == typeof(QuoteBar)", span="924-924"];
m2_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, QuantConnect.TickType?, PyObject)", span="914-914"];
m2_472 [cluster="Unk.Count", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Count", span=""];
m2_501 [cluster="System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", file="InteractiveBrokersBrokerage.cs", label="Entry System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName, System.Reflection.Emit.AssemblyBuilderAccess)", span="0-0"];
m2_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="640-640"];
m2_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="return History(type, tickers, Time - span, Time, resolution);", span="642-642"];
m2_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="640-640"];
m2_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m2_176 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="162-162"];
m2_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="988-988"];
m2_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(PyObject)", span="833-833"];
m2_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(PyObject)", span="833-833"];
m2_46 [cluster="System.Func<T, TResult>.Invoke(T)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.Data.UniverseSelection.Universe)", span="135-135"];
m2_439 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1940-1940"];
m2_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="570-570"];
m2_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="572-572"];
m2_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="return PandasConverter.GetDataFrame(History(symbols, start, end, resolution));", span="573-573"];
m2_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="570-570"];
m2_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1516-1516"];
m2_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, QuantConnect.Resolution, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, QuantConnect.Resolution, PyObject)", span="876-876"];
m2_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, QuantConnect.Resolution, PyObject)", file="InteractiveBrokersBrokerage.cs", label="return Consolidate(symbol, period.ToTimeSpan(), null, handler);", span="878-878"];
m2_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, QuantConnect.Resolution, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, QuantConnect.Resolution, PyObject)", span="876-876"];
m2_202 [cluster="Unk.Where", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Where", span=""];
m2_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol, QuantConnect.TickType?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol, QuantConnect.TickType?)", span="1329-1329"];
m2_89 [cluster="Unk.selector", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.selector", span=""];
m2_504 [cluster="QuantConnect.Python.PythonActivator.PythonActivator(System.Type, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Python.PythonActivator.PythonActivator(System.Type, PyObject)", span="40-40"];
m2_388 [cluster="QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Python.SecurityInitializerPythonWrapper.SecurityInitializerPythonWrapper(PyObject)", span="31-31"];
m2_19 [cluster="QuantConnect.Securities.MarketHoursDatabase.SetEntryAlwaysOpen(string, string, QuantConnect.SecurityType, DateTimeZone)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.SetEntryAlwaysOpen(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m2_483 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="963-963"];
m2_43 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="coarse(c.ToList()).Select(x => (Symbol)x)", span="118-118"];
m2_42 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="118-118"];
m2_44 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="118-118"];
m2_48 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="118-118"];
m2_49 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="(Symbol)x", span="118-118"];
m2_50 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="118-118"];
m2_60 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="coarse(c.ToList()).Select(x => (Symbol)x)", span="142-142"];
m2_66 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="fine(f.ToList()).Select(x => (Symbol)x)", span="142-142"];
m2_59 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="142-142"];
m2_65 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="142-142"];
m2_61 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="142-142"];
m2_62 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="142-142"];
m2_63 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="(Symbol)x", span="142-142"];
m2_64 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="142-142"];
m2_67 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="142-142"];
m2_68 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="142-142"];
m2_69 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="(Symbol)x", span="142-142"];
m2_70 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="142-142"];
m2_77 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="selector(d).Select(x => (string)x)", span="163-163"];
m2_76 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="163-163"];
m2_78 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="163-163"];
m2_79 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="163-163"];
m2_80 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="(string)x", span="163-163"];
m2_81 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="163-163"];
m2_87 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="selector(d).Select(x => (string)x)", span="175-175"];
m2_86 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="175-175"];
m2_88 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="175-175"];
m2_90 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="175-175"];
m2_91 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="(string)x", span="175-175"];
m2_92 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="175-175"];
m2_98 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="selector(d).Select(x => (string)x)", span="190-190"];
m2_97 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="190-190"];
m2_99 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="190-190"];
m2_100 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="190-190"];
m2_101 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="(string)x", span="190-190"];
m2_102 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="190-190"];
m2_135 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))", span="299-300"];
m2_138 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market)", span="300-300"];
m2_134 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="299-300"];
m2_136 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="299-300"];
m2_137 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="300-300"];
m2_139 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="300-300"];
m2_179 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="indicator.InvokeMethod(''Update'', new[] { consolidated.ToPython() })", span="381-381"];
m2_177 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="377-383"];
m2_178 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Py.GIL()", span="379-379"];
m2_180 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="377-383"];
m2_205 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="430-430"];
m2_206 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x != null", span="430-430"];
m2_207 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="430-430"];
m2_211 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="444-444"];
m2_212 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x != null", span="444-444"];
m2_213 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="444-444"];
m2_217 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="458-458"];
m2_218 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x != null", span="458-458"];
m2_219 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="458-458"];
m2_283 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType)", span="592-593"];
m2_295 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="s.Type.BaseType == CreateType(type).BaseType", span="593-593"];
m2_286 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return CreateHistoryRequest(config, start, end, resolution);", span="596-596"];
m2_281 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="589-597"];
m2_297 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="599-599"];
m2_282 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var security = Securities[x]", span="591-591"];
m2_284 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="config == null", span="594-594"];
m2_291 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="592-592"];
m2_294 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="593-593"];
m2_285 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return null;", span="594-594"];
m2_287 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="589-597"];
m2_292 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="s.Resolution", span="592-592"];
m2_293 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="592-592"];
m2_296 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="593-593"];
m2_298 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x != null", span="599-599"];
m2_299 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="599-599"];
m2_307 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType)", span="619-620"];
m2_322 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="s.Type.BaseType == CreateType(type).BaseType", span="620-620"];
m2_310 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Resolution? res = resolution ?? security.Resolution", span="623-623"];
m2_311 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="624-624"];
m2_312 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return CreateHistoryRequest(config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="625-625"];
m2_305 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="616-626"];
m2_324 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="628-628"];
m2_306 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var security = Securities[x]", span="618-618"];
m2_308 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="config == null", span="621-621"];
m2_318 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="619-619"];
m2_321 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="620-620"];
m2_309 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return null;", span="621-621"];
m2_313 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="616-626"];
m2_319 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="s.Resolution", span="619-619"];
m2_320 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="619-619"];
m2_323 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="620-620"];
m2_325 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x != null", span="628-628"];
m2_326 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="628-628"];
m2_349 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="s.Type.BaseType == requestedType.BaseType", span="660-660"];
m2_345 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="659-659"];
m2_348 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="660-660"];
m2_351 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="663-663"];
m2_346 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="s.Resolution", span="659-659"];
m2_347 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="659-659"];
m2_350 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="660-660"];
m2_352 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x.Type.Name", span="663-663"];
m2_353 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="663-663"];
m2_474 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="955-961"];
m2_480 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Entry lambda expression", span="963-963"];
m2_475 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x == null", span="957-957"];
m2_477 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type))", span="958-958"];
m2_478 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return (dynamic)x.AsManagedObject(type);", span="959-959"];
m2_476 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="return null;", span="957-957"];
m2_479 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="955-961"];
m2_481 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="x != null", span="963-963"];
m2_482 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="963-963"];
m2_484 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="GetIndicatorBaseType(x.GetType())", span="963-963"];
m2_485 [cluster="lambda expression", file="InteractiveBrokersBrokerage.cs", label="Exit lambda expression", span="963-963"];
m2_278 [cluster="Unk.History", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.History", span=""];
m2_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="230-230"];
m2_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, universeSettings, selector)", span="232-232"];
m2_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="230-230"];
m2_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="172-172"];
m2_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var selector = pySelector.ConvertToDelegate<Func<DateTime, object[]>>()", span="174-174"];
m2_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(name, d => selector(d).Select(x => (string)x))", span="175-175"];
m2_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, PyObject)", span="172-172"];
m2_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="728-728"];
m2_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="InteractiveBrokersBrokerage.cs", label="SetBrokerageModel(new BrokerageModelPythonWrapper(model))", span="730-730"];
m2_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(PyObject)", span="728-728"];
m2_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="56-56"];
m2_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="return AddData(type, symbol, resolution, TimeZones.NewYork, false, 1m);", span="58-58"];
m2_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution)", span="56-56"];
m2_3 [cluster="QuantConnect.Python.PandasConverter.PandasConverter()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Python.PandasConverter.PandasConverter()", span="34-34"];
m2_23 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="433-433"];
m2_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="654-654"];
m2_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var security = Securities[symbol]", span="656-656"];
m2_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var requestedType = CreateType(type)", span="658-658"];
m2_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="664-664"];
m2_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var request = CreateHistoryRequest(config, start, end, resolution)", span="667-667"];
m2_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                .FirstOrDefault(s => s.Type.BaseType == requestedType.BaseType)", span="659-660"];
m2_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="663-663"];
m2_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="config == null", span="661-661"];
m2_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="return PandasConverter.GetDataFrame(History(request).Memoize());", span="668-668"];
m2_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="654-654"];
m2_341 [cluster="ArgumentException.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry ArgumentException.cstr", span=""];
m2_244 [cluster="QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Util.PythonUtil.ToFunc<T1, T2>(PyObject)", span="78-78"];
m2_280 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame<T>(System.Collections.Generic.IEnumerable<T>)", span="98-98"];
m2_427 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1791-1791"];
m2_507 [cluster="Unk.Add", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Add", span=""];
m2_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", span="392-392"];
m2_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="IIndicator<IndicatorDataPoint> indicator", span="394-394"];
m2_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var pythonType = pyObject.GetPythonType()", span="398-398"];
m2_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="indicator = pyObject.AsManagedObject(type) as IIndicator<IndicatorDataPoint>", span="403-403"];
m2_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Plot(series, indicator.Current.Value)", span="416-416"];
m2_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Py.GIL()", span="396-396"];
m2_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var type = pythonType.As<Type>()", span="402-402"];
m2_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException($''QCAlgorithm.Plot(): The last argument should be a QuantConnect Indicator object, {pythonType.Repr()} was provided.'');", span="412-412"];
m2_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="indicator == null", span="405-405"];
m2_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException();", span="407-407"];
m2_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, PyObject)", span="392-392"];
m2_175 [cluster="Unk.HasAttr", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.HasAttr", span=""];
m2_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1837-1837"];
m2_197 [cluster="System.ArgumentException.ArgumentException()", file="InteractiveBrokersBrokerage.cs", label="Entry System.ArgumentException.ArgumentException()", span="0-0"];
m2_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", span="337-337"];
m2_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="IndicatorBase<IndicatorDataPoint> indicatorDataPoint", span="339-339"];
m2_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="indicator.TryConvert(out indicatorDataPoint)", span="343-343"];
m2_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="selector?.TryConvert(out func)", span="346-346"];
m2_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="RegisterIndicator(symbol, indicatorDataPoint, consolidator, func)", span="347-347"];
m2_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="indicator.TryConvert(out indicatorDataBar)", span="350-350"];
m2_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="selector?.TryConvert(out func)", span="353-353"];
m2_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="RegisterIndicator(symbol, indicatorDataBar, consolidator, func)", span="354-354"];
m2_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="indicator.TryConvert(out indicatorTradeBar)", span="357-357"];
m2_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="selector?.TryConvert(out func)", span="360-360"];
m2_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="RegisterIndicator(symbol, indicatorTradeBar, consolidator, func)", span="361-361"];
m2_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="!indicator.HasAttr(''Update'')", span="367-367"];
m2_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException($''QCAlgorithm.RegisterIndicator(): Update method must be defined. Please checkout {indicator}'');", span="369-369"];
m2_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="374-374"];
m2_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                using (Py.GIL())\r\n                {\r\n                    indicator.InvokeMethod(''Update'', new[] { consolidated.ToPython() });\r\n                }\r\n            }", span="377-383"];
m2_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="IndicatorBase<IBaseDataBar> indicatorDataBar", span="340-340"];
m2_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="IndicatorBase<TradeBar> indicatorTradeBar", span="341-341"];
m2_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Func<IBaseData, decimal> func = null", span="345-345"];
m2_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="return;", span="348-348"];
m2_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Func<IBaseData, IBaseDataBar> func = null", span="352-352"];
m2_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="return;", span="355-355"];
m2_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Func<IBaseData, TradeBar> func = null", span="359-359"];
m2_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Py.GIL()", span="365-365"];
m2_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="return;", span="362-362"];
m2_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Data.Consolidators.IDataConsolidator, PyObject)", span="337-337"];
m2_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="1088-1088"];
m2_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1317-1317"];
m2_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, PyObject)", span="901-901"];
m2_448 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, PyObject)", file="InteractiveBrokersBrokerage.cs", label="return Consolidate(symbol, period, null, handler);", span="903-903"];
m2_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, System.TimeSpan, PyObject)", span="901-901"];
m2_315 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="619-619"];
m2_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="433-433"];
m2_35 [cluster="PyObject.TryConvert<T>(out T)", file="InteractiveBrokersBrokerage.cs", label="Entry PyObject.TryConvert<T>(out T)", span="1038-1038"];
m2_255 [cluster="string.Format(string, object, object, object)", file="InteractiveBrokersBrokerage.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m2_75 [cluster="PyObject.ConvertToDelegate<T>()", file="InteractiveBrokersBrokerage.cs", label="Entry PyObject.ConvertToDelegate<T>()", span="1154-1154"];
m2_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="1078-1078"];
m2_196 [cluster="Unk.AsManagedObject", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.AsManagedObject", span=""];
m2_204 [cluster="Unk.Plot", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Plot", span=""];
m2_47 [cluster="Unk.Select", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Select", span=""];
m2_181 [cluster="Unk.ToPython", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.ToPython", span=""];
m2_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="800-800"];
m2_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Symbol symbol", span="802-802"];
m2_414 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="yield return symbol;", span="808-808"];
m2_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="yield return s;", span="815-815"];
m2_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="pyObject.TryConvert(out symbol)", span="805-805"];
m2_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="pyObject.TryConvert(out symbols)", span="810-810"];
m2_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException($''Argument type should be Symbol or a list of Symbol. Object: {pyObject}.'');", span="822-822"];
m2_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Symbol[] symbols", span="803-803"];
m2_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="symbol == null", span="807-807"];
m2_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="807-807"];
m2_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label=symbols, span="812-812"];
m2_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Py.GIL()", span="820-820"];
m2_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="s == null", span="814-814"];
m2_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="814-814"];
m2_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSymbolsFromPyObject(PyObject)", span="800-800"];
m2_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="var security = SecurityManager.CreateSecurity(dataType, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone,\r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="95-96"];
m2_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="86-86"];
m2_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="var marketHoursDbEntry = MarketHoursDatabase.SetEntryAlwaysOpen(Market.USA, symbol, SecurityType.Base, timeZone)", span="88-88"];
m2_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="91-91"];
m2_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="92-92"];
m2_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="AddToUserDefinedUniverse(security)", span="98-98"];
m2_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="return security;", span="99-99"];
m2_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(System.Type, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="86-86"];
m2_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(PyObject)", span="844-844"];
m2_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(PyObject)", span="844-844"];
m2_133 [cluster="FuncUniverse.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry FuncUniverse.cstr", span=""];
m2_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="542-542"];
m2_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="544-544"];
m2_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="return PandasConverter.GetDataFrame(History(symbols, periods, resolution));", span="545-545"];
m2_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, int, QuantConnect.Resolution?)", span="542-542"];
m2_344 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="231-231"];
m2_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, System.TimeSpan?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, System.TimeSpan?, PyObject)", span="324-324"];
m2_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, System.TimeSpan?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="326-326"];
m2_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, System.TimeSpan?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, System.TimeSpan?, PyObject)", span="324-324"];
m2_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="107-107"];
m2_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Func<IEnumerable<CoarseFundamental>, object[]> coarse", span="109-109"];
m2_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="InteractiveBrokersBrokerage.cs", label="pyObject.TryConvert(out universe)", span="112-112"];
m2_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="InteractiveBrokersBrokerage.cs", label="pyObject.TryConvertToDelegate(out coarse)", span="116-116"];
m2_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException($''QCAlgorithm.AddUniverse: {pyObject.Repr()} is not a valid argument.'');", span="124-124"];
m2_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Universe universe", span="110-110"];
m2_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(universe)", span="114-114"];
m2_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(c => coarse(c.ToList()).Select(x => (Symbol)x))", span="118-118"];
m2_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Py.GIL()", span="122-122"];
m2_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject)", span="107-107"];
m2_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1882-1882"];
m2_498 [cluster="Unk.TryGetValue", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.TryGetValue", span=""];
m2_426 [cluster="PyObject.ToSafeString()", file="InteractiveBrokersBrokerage.cs", label="Entry PyObject.ToSafeString()", span="1002-1002"];
m2_342 [cluster="QuantConnect.Symbol.ToString()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Symbol.ToString()", span="375-375"];
m2_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(PyObject)", span="855-855"];
m2_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Log(message.ToSafeString())", span="857-857"];
m2_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(PyObject)", span="855-855"];
m2_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="937-937"];
m2_460 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="InteractiveBrokersBrokerage.cs", label="type.BaseType == typeof(object)", span="939-939"];
m2_461 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="InteractiveBrokersBrokerage.cs", label="return type;", span="941-941"];
m2_462 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="InteractiveBrokersBrokerage.cs", label="return GetIndicatorBaseType(type.BaseType);", span="943-943"];
m2_463 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorBaseType(System.Type)", span="937-937"];
m2_473 [cluster="System.Exception.Exception(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m2_386 [cluster="QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Util.PythonUtil.ToAction<T1>(PyObject)", span="36-36"];
m2_505 [cluster="System.Reflection.Emit.TypeBuilder.CreateType()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Reflection.Emit.TypeBuilder.CreateType()", span="0-0"];
m2_40 [cluster="System.ArgumentException.ArgumentException(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m2_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="419-419"];
m2_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1271-1271"];
m2_245 [cluster="QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", span="35-35"];
m2_289 [cluster="Unk.FirstOrDefault", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.FirstOrDefault", span=""];
m2_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(PyObject)", span="864-864"];
m2_437 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Quit(message.ToSafeString())", span="866-866"];
m2_438 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(PyObject)", span="864-864"];
m2_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="160-160"];
m2_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var selector = pySelector.ConvertToDelegate<Func<DateTime, object[]>>()", span="162-162"];
m2_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(name, resolution, d => selector(d).Select(x => (string)x))", span="163-163"];
m2_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(string, QuantConnect.Resolution, PyObject)", span="160-160"];
m2_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var exchangeTimeZone = marketHoursDbEntry.ExchangeHours.TimeZone", span="293-293"];
m2_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="289-289"];
m2_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var marketHoursDbEntry = MarketHoursDatabase.GetEntry(market, name, securityType)", span="291-291"];
m2_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var symbol = QuantConnect.Symbol.Create(name, securityType, market)", span="294-294"];
m2_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var config = new SubscriptionDataConfig(dataType, symbol, resolution, dataTimeZone, exchangeTimeZone, false, false, true, true, isFilteredSubscription: false)", span="295-295"];
m2_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var selector = pySelector.ConvertToDelegate<Func<IEnumerable<IBaseData>, object[]>>()", span="297-297"];
m2_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(new FuncUniverse(config, universeSettings, SecurityInitializer, d => selector(d)\r\n                .Select(x => x is Symbol ? (Symbol)x : QuantConnect.Symbol.Create((string)x, securityType, market))))", span="299-300"];
m2_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var dataTimeZone = marketHoursDbEntry.DataTimeZone", span="292-292"];
m2_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="289-289"];
m2_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.Download(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Download(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>, string, string)", span="2086-2086"];
m2_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="215-215"];
m2_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, resolution, Market.USA, UniverseSettings, selector)", span="217-217"];
m2_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Resolution, PyObject)", span="215-215"];
m2_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="449-449"];
m2_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1452-1452"];
m2_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="979-979"];
m2_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="PythonActivator pythonType", span="981-981"];
m2_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="!_pythonActivators.TryGetValue(type.Handle, out pythonType)", span="982-982"];
m2_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="an = new AssemblyName(type.Repr().Split('\'')[1])", span="987-987"];
m2_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="pythonType = new PythonActivator(typeBuilder.CreateType(), type)", span="994-994"];
m2_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="_pythonActivators.Add(type.Handle, pythonType)", span="999-999"];
m2_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="AssemblyName an", span="984-984"];
m2_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="return pythonType.Type;", span="1001-1001"];
m2_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Py.GIL()", span="985-985"];
m2_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="var typeBuilder = AppDomain.CurrentDomain\r\n                    .DefineDynamicAssembly(an, AssemblyBuilderAccess.Run)\r\n                    .DefineDynamicModule(''MainModule'')\r\n                    .DefineType(an.Name, TypeAttributes.Class, typeof(DynamicData))", span="989-992"];
m2_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="ObjectActivator.AddActivator(pythonType.Type, pythonType.Factory)", span="996-996"];
m2_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateType(PyObject)", span="979-979"];
m2_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Resolution?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Resolution?, PyObject)", span="311-311"];
m2_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Resolution?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="313-313"];
m2_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Resolution?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, PyObject, QuantConnect.Resolution?, PyObject)", span="311-311"];
m2_262 [cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="50-50"];
m2_20 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="242-242"];
m2_22 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m2_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="709-709"];
m2_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Py.GIL()", span="711-711"];
m2_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="InteractiveBrokersBrokerage.cs", label="var pyBenchmark = PythonUtil.ToFunc<DateTime, decimal>(benchmark)", span="713-713"];
m2_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="InteractiveBrokersBrokerage.cs", label="SetBenchmark((Symbol)benchmark.AsManagedObject(typeof(Symbol)))", span="719-719"];
m2_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="InteractiveBrokersBrokerage.cs", label="pyBenchmark != null", span="714-714"];
m2_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="InteractiveBrokersBrokerage.cs", label="SetBenchmark(pyBenchmark)", span="716-716"];
m2_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="InteractiveBrokersBrokerage.cs", label="return;", span="717-717"];
m2_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(PyObject)", span="709-709"];
m2_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="612-612"];
m2_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="556-556"];
m2_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="558-558"];
m2_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="return PandasConverter.GetDataFrame(History(symbols, span, resolution));", span="559-559"];
m2_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, System.TimeSpan, QuantConnect.Resolution?)", span="556-556"];
m2_21 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m2_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1387-1387"];
m2_316 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="725-725"];
m2_377 [cluster="QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Python.BrokerageModelPythonWrapper.BrokerageModelPythonWrapper(PyObject)", span="38-38"];
m2_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="737-737"];
m2_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="InteractiveBrokersBrokerage.cs", label="var securityInitializer1 = PythonUtil.ToAction<Security>(securityInitializer)", span="739-739"];
m2_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="InteractiveBrokersBrokerage.cs", label="SetSecurityInitializer(new SecurityInitializerPythonWrapper(securityInitializer))", span="746-746"];
m2_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="InteractiveBrokersBrokerage.cs", label="securityInitializer1 != null", span="740-740"];
m2_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="InteractiveBrokersBrokerage.cs", label="SetSecurityInitializer(securityInitializer1)", span="742-742"];
m2_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="InteractiveBrokersBrokerage.cs", label="return;", span="743-743"];
m2_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(PyObject)", span="737-737"];
m2_502 [cluster="System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(string)", span="0-0"];
m2_37 [cluster="PyObject.TryConvertToDelegate<T>(out T)", file="InteractiveBrokersBrokerage.cs", label="Entry PyObject.TryConvertToDelegate<T>(out T)", span="1099-1099"];
m2_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="950-950"];
m2_464 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Py.GIL()", span="952-952"];
m2_465 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var array = new[] { first, second, third, fourth }\r\n                    .Select(x =>\r\n                    {\r\n                        if (x == null) return null;\r\n                        var type = (Type)x.GetPythonType().AsManagedObject(typeof(Type));\r\n                        return (dynamic)x.AsManagedObject(type);\r\n\r\n                    }).ToArray()", span="954-961"];
m2_466 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var types = array.Where(x => x != null).Select(x => GetIndicatorBaseType(x.GetType())).Distinct()", span="963-963"];
m2_469 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="return array;", span="970-970"];
m2_467 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="types.Count() > 1", span="965-965"];
m2_468 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="throw new Exception(''QCAlgorithm.GetIndicatorArray(). All indicators must be of the same type: data point, bar or tradebar.'');", span="967-967"];
m2_470 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetIndicatorArray(PyObject, PyObject, PyObject, PyObject)", span="950-950"];
m2_130 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType)", span="175-175"];
m2_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="244-244"];
m2_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, universeSettings, selector)", span="246-246"];
m2_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="244-244"];
m2_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="135-135"];
m2_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Func<IEnumerable<CoarseFundamental>, object[]> coarse", span="137-137"];
m2_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="pycoarse.TryConvertToDelegate(out coarse) && pyfine.TryConvertToDelegate(out fine)", span="140-140"];
m2_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException($''QCAlgorithm.AddUniverse: {pycoarse.Repr()} or {pyfine.Repr()} is not a valid argument.'');", span="148-148"];
m2_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Func<IEnumerable<FineFundamental>, object[]> fine", span="138-138"];
m2_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(c => coarse(c.ToList()).Select(x => (Symbol)x), f => fine(f.ToList()).Select(x => (Symbol)x))", span="142-142"];
m2_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Py.GIL()", span="146-146"];
m2_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, PyObject)", span="135-135"];
m2_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="457-457"];
m2_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1424-1424"];
m2_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType?, PyObject)", span="889-889"];
m2_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="return Consolidate(symbol, period.ToTimeSpan(), tickType, handler);", span="891-891"];
m2_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType?, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Consolidate(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType?, PyObject)", span="889-889"];
m2_317 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="479-479"];
m2_131 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m2_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", span="43-43"];
m2_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", file="InteractiveBrokersBrokerage.cs", label="PandasConverter = new PandasConverter()", span="45-45"];
m2_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetPandasConverter()", span="43-43"];
m2_499 [cluster="AssemblyName.cstr", file="InteractiveBrokersBrokerage.cs", label="Entry AssemblyName.cstr", span=""];
m2_195 [cluster="Unk.>", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.>", span=""];
m2_471 [cluster="Unk.Distinct", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Distinct", span=""];
m2_182 [cluster="Unk.InvokeMethod", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.InvokeMethod", span=""];
m2_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="504-504"];
m2_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="var name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="506-506"];
m2_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="var pyselector = PythonUtil.ToFunc<IBaseData, IBaseDataBar>(selector)", span="507-507"];
m2_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="var pyfilter = PythonUtil.ToFunc<IBaseData, bool>(filter)", span="508-508"];
m2_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="RegisterIndicator(symbol, filteredIdentity, resolution, pyselector)", span="510-510"];
m2_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="var filteredIdentity = new FilteredIdentity(name, pyfilter)", span="509-509"];
m2_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="return filteredIdentity;", span="511-511"];
m2_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, PyObject, PyObject, string)", span="504-504"];
m2_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="681-681"];
m2_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="resolution == Resolution.Tick", span="683-683"];
m2_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="685-685"];
m2_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var end = Time.RoundDown((resolution ?? Securities[symbol].Resolution).ToTimeSpan())", span="686-686"];
m2_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="return History(type, symbol, start, end, resolution);", span="687-687"];
m2_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="683-683"];
m2_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="681-681"];
m2_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="442-442"];
m2_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="InteractiveBrokersBrokerage.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="444-444"];
m2_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="442-442"];
m2_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="699-699"];
m2_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="return History(type, symbol, Time - span, Time, resolution);", span="701-701"];
m2_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="699-699"];
m2_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="651-651"];
m2_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="187-187"];
m2_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var selector = pySelector.ConvertToDelegate<Func<DateTime, object[]>>()", span="189-189"];
m2_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(securityType, name, resolution, market, universeSettings, d => selector(d).Select(x => (string)x))", span="190-190"];
m2_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="187-187"];
m2_503 [cluster="System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", file="InteractiveBrokersBrokerage.cs", label="Entry System.Reflection.Emit.ModuleBuilder.DefineType(string, System.Reflection.TypeAttributes, System.Type)", span="0-0"];
m2_194 [cluster="Unk.GetPythonType", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GetPythonType", span=""];
m2_39 [cluster="Unk.GIL", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.GIL", span=""];
m2_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="274-274"];
m2_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, universeSettings, selector)", span="276-276"];
m2_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, QuantConnect.Data.UniverseSelection.UniverseSettings, PyObject)", span="274-274"];
m2_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="473-473"];
m2_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="var array = GetIndicatorArray(first, second, third, fourth)", span="475-475"];
m2_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="PlotIndicator(chart, waitForReady, array[0], array[1], array[2], array[3])", span="476-476"];
m2_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, PyObject, PyObject, PyObject, PyObject)", span="473-473"];
m2_404 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m2_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="259-259"];
m2_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(CreateType(T), securityType, name, resolution, market, UniverseSettings, selector)", span="261-261"];
m2_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, QuantConnect.SecurityType, string, QuantConnect.Resolution, string, PyObject)", span="259-259"];
m2_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="201-201"];
m2_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="AddUniverse(CreateType(T), SecurityType.Equity, name, Resolution.Daily, Market.USA, UniverseSettings, selector)", span="203-203"];
m2_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddUniverse(PyObject, string, PyObject)", span="201-201"];
m2_279 [cluster="Unk.Memoize", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.Memoize", span=""];
m2_290 [cluster="Unk.CreateHistoryRequest", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.CreateHistoryRequest", span=""];
m2_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="71-71"];
m2_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="return AddData(CreateType(type), symbol, resolution, timeZone, fillDataForward, leverage);", span="73-73"];
m2_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData(PyObject, string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="71-71"];
m2_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, decimal)", span="61-61"];
m2_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1485-1485"];
m2_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="488-488"];
m2_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="var resolution = GetSubscription(symbol).Resolution", span="490-490"];
m2_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="return FilteredIdentity(symbol, resolution, selector, filter, fieldName);", span="491-491"];
m2_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, PyObject, PyObject, string)", span="488-488"];
m2_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="428-428"];
m2_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="InteractiveBrokersBrokerage.cs", label="Plot(chart, new[] { first, second, third, fourth }.Where(x => x != null).ToArray())", span="430-430"];
m2_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="428-428"];
m2_340 [cluster="Unk.DefaultIfEmpty", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m2_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="585-585"];
m2_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var symbols = GetSymbolsFromPyObject(tickers)", span="587-587"];
m2_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                        .FirstOrDefault(s => s.Type.BaseType == CreateType(type).BaseType);\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(config, start, end, resolution);\r\n            })", span="589-597"];
m2_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="return PandasConverter.GetDataFrame(History(requests.Where(x => x != null)).Memoize());", span="599-599"];
m2_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(PyObject, PyObject, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="585-585"];
m2_508 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m2_509 [file="InteractiveBrokersBrokerage.cs", label=coarse, span=""];
m2_510 [file="InteractiveBrokersBrokerage.cs", label=coarse, span=""];
m2_511 [file="InteractiveBrokersBrokerage.cs", label=fine, span=""];
m2_512 [file="InteractiveBrokersBrokerage.cs", label=selector, span=""];
m2_513 [file="InteractiveBrokersBrokerage.cs", label=selector, span=""];
m2_514 [file="InteractiveBrokersBrokerage.cs", label=selector, span=""];
m2_515 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.SecurityType", span=""];
m2_516 [file="InteractiveBrokersBrokerage.cs", label=string, span=""];
m2_517 [file="InteractiveBrokersBrokerage.cs", label=selector, span=""];
m2_518 [file="InteractiveBrokersBrokerage.cs", label=PyObject, span=""];
m2_519 [file="InteractiveBrokersBrokerage.cs", label=PyObject, span=""];
m2_520 [file="InteractiveBrokersBrokerage.cs", label="System.DateTime", span=""];
m2_521 [file="InteractiveBrokersBrokerage.cs", label="System.DateTime", span=""];
m2_522 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Resolution?", span=""];
m2_523 [file="InteractiveBrokersBrokerage.cs", label=PyObject, span=""];
m2_524 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Resolution?", span=""];
m2_525 [file="InteractiveBrokersBrokerage.cs", label=int, span=""];
m2_526 [file="InteractiveBrokersBrokerage.cs", label=requestedType, span=""];
m3_20 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="Program.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m3_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", file="Program.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", span="96-96"];
m3_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", file="Program.cs", label="IsFinalScore = true", span="98-98"];
m3_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", file="Program.cs", label="UpdatedTimeUtc = algorithmUtcTime", span="99-99"];
m3_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", file="Program.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", span="96-96"];
m3_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Program.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", span="71-71"];
m3_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Program.cs", label=IsFinalScore, span="73-73"];
m3_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Program.cs", label="UpdatedTimeUtc = algorithmUtcTime", span="75-75"];
m3_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Program.cs", label=type, span="77-77"];
m3_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Program.cs", label="throw new ArgumentOutOfRangeException(nameof(type), type, null);", span="88-88"];
m3_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Program.cs", label="return;", span="73-73"];
m3_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Program.cs", label="AlphaScoreType.Direction", span="79-79"];
m3_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Program.cs", label="AlphaScoreType.Magnitude", span="83-83"];
m3_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Program.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", span="71-71"];
m3_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", file="Program.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", span="48-48"];
m3_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", file="Program.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", span="48-48"];
m3_18 [cluster="System.Math.Min(double, double)", file="Program.cs", label="Entry System.Math.Min(double, double)", span="0-0"];
m3_37 [cluster="System.Math.Round(double, int)", file="Program.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m3_21 [cluster="Unk.nameof", file="Program.cs", label="Entry Unk.nameof", span=""];
m3_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.ToString()", file="Program.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.ToString()", span="125-125"];
m3_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.ToString()", file="Program.cs", label="return $''Direction: {Math.Round(100 * Direction, 2)} Magnitude: {Math.Round(100 * Magnitude, 2)}'';", span="127-127"];
m3_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.ToString()", file="Program.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaScore.ToString()", span="125-125"];
m3_26 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Program.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", span="107-107"];
m3_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Program.cs", label=type, span="109-109"];
m3_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Program.cs", label="throw new ArgumentOutOfRangeException(nameof(type), type, null);", span="118-118"];
m3_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Program.cs", label="AlphaScoreType.Direction", span="111-111"];
m3_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Program.cs", label="AlphaScoreType.Magnitude", span="114-114"];
m3_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Program.cs", label="return Direction;", span="112-112"];
m3_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Program.cs", label="return Magnitude;", span="115-115"];
m3_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", file="Program.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaScore.GetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType)", span="107-107"];
m3_19 [cluster="System.Math.Max(double, double)", file="Program.cs", label="Entry System.Math.Max(double, double)", span="0-0"];
m3_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Program.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", span="58-58"];
m3_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Program.cs", label="Direction = direction", span="60-60"];
m3_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Program.cs", label="Magnitude = magnitude", span="61-61"];
m3_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Program.cs", label="UpdatedTimeUtc = updatedTimeUtc", span="62-62"];
m3_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Program.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", span="58-58"];
m3_38 [file="Program.cs", label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", span=""];
d330 -> d428  [color=green, key=1, label="lambda expression", style=dashed];
d330 -> d334  [color=green, key=1, label=minResolution, style=dashed];
d329 -> d425  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d331 -> d333  [color=darkseagreen4, key=1, label=request, style=dashed];
d331 -> d334  [color=darkseagreen4, key=1, label=request, style=dashed];
d245 -> d333  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d245 -> d365  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d245 -> d369  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d245 -> d372  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d245 -> d373  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d245 -> d374  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d245 -> d376  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d245 -> d378  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
d245 -> d382  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d245 -> d386  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d245 -> d391  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d245 -> d392  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d245 -> d393  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d245 -> d398  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d323 -> d331  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d323 -> d328  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d323 -> d337  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d323 -> d339  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d323 -> d341  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d323 -> d344  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d323 -> d372  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d323 -> d375  [color=darkseagreen4, key=1, label=historyRequests, style=dashed];
d333 -> d333  [color=darkseagreen4, key=1, label=security, style=dashed];
d337 -> d431  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d326 -> d421  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d338 -> d434  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d338 -> d437  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d41 -> d44  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d46  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d70  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d72  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d73  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d76  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d77  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d80  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d82  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d86  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d101  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d129  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d130  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d136  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d139  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d150  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d160  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d172  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d173  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d174  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d175  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d176  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d177  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d183  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d184  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d185  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d186  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d187  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d193  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d41 -> d194  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d319 -> d362  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
d319 -> d379  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
d320 -> d344  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
d321 -> d344  [color=darkseagreen4, key=1, label=history, style=dashed];
d348 -> d355  [color=darkseagreen4, key=1, label=security, style=dashed];
d356 -> d370  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d378 -> d399  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d378 -> d385  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d378 -> d390  [color=darkseagreen4, key=1, label=timeSlice, style=dashed];
d9 -> d41  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d305  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d30  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d40  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d45  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d9 -> d48  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.ICommandQueueHandler", style=dashed];
d9 -> d55  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d57  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d63  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d66  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d69  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d72  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d74  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
d9 -> d78  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d79  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d85  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d86  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
d9 -> d87  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
d9 -> d93  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d97  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d99  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d101  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d107  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d111  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d119  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d127  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d130  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d138  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d141  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d142  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d144  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d166  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d173  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d175  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d177  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d183  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d185  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d187  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d194  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d200  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
d9 -> d202  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d205  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d211  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d214  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d215  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d216  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d219  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
d9 -> d220  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d223  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d224  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d225  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
d9 -> d226  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d227  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d228  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d9 -> d229  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d327 -> d390  [color=darkseagreen4, key=1, label=minimumIncrement, style=dashed];
d29 -> d300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d29 -> d304  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d29 -> d34  [color=darkseagreen4, key=1, label=hasOnDataSlice, style=dashed];
d339 -> d440  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d322 -> d386  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
d322 -> d383  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
d341 -> d343  [color=darkseagreen4, key=1, label=request, style=dashed];
d344 -> d347  [color=darkseagreen4, key=1, label=slice, style=dashed];
d325 -> d366  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
d325 -> d395  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
d477 -> d41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d43  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d61  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d62  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d65  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d102  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d126  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d142  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d212  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d217  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d221  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d227  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d228  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d477 -> d315  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.AlgorithmManager", style=dashed];
d58 -> d61  [color=darkseagreen4, key=1, label=time, style=dashed];
d58 -> d68  [color=darkseagreen4, key=1, label=time, style=dashed];
d58 -> d69  [color=darkseagreen4, key=1, label=time, style=dashed];
d58 -> d102  [color=darkseagreen4, key=1, label=time, style=dashed];
d58 -> d126  [color=darkseagreen4, key=1, label=time, style=dashed];
d73 -> d308  [color=darkseagreen4, key=1, label=symbol, style=dashed];
d77 -> d79  [color=darkseagreen4, key=1, label=security, style=dashed];
d136 -> d138  [color=darkseagreen4, key=1, label=dividend, style=dashed];
d139 -> d141  [color=darkseagreen4, key=1, label=split, style=dashed];
d139 -> d142  [color=darkseagreen4, key=1, label=split, style=dashed];
d139 -> d312  [color=darkseagreen4, key=1, label=split, style=dashed];
d139 -> d144  [color=darkseagreen4, key=1, label=split, style=dashed];
d371 -> d386  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
d371 -> d383  [color=darkseagreen4, key=1, label=lastHistoryTimeUtc, style=dashed];
d349 -> d354  [color=darkseagreen4, key=1, label=data, style=dashed];
d346 -> d355  [color=darkseagreen4, key=1, label=paired, style=dashed];
d385 -> d443  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d234 -> d448  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<System.Type, MethodInvoker>", style=dashed];
d289 -> d459  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Orders.OrderTicket>", style=dashed];
d289 -> d461  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d12 -> d64  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d12 -> d66  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d12 -> d229  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d13 -> d60  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
d23 -> d184  [color=darkseagreen4, key=1, label=hasOnDataTradeBars, style=dashed];
d24 -> d186  [color=darkseagreen4, key=1, label=hasOnDataTicks, style=dashed];
d25 -> d172  [color=darkseagreen4, key=1, label=hasOnDataDividends, style=dashed];
d26 -> d174  [color=darkseagreen4, key=1, label=hasOnDataSplits, style=dashed];
d27 -> d176  [color=darkseagreen4, key=1, label=hasOnDataDelistings, style=dashed];
d28 -> d71  [color=darkseagreen4, key=1, label=hasOnDataSymbolChangedEvents, style=dashed];
d30 -> d33  [color=darkseagreen4, key=1, label=config, style=dashed];
d30 -> d39  [color=darkseagreen4, key=1, label=config, style=dashed];
d32 -> d34  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
d32 -> d38  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
d32 -> d39  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
d45 -> d45  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
d48 -> d50  [color=darkseagreen4, key=1, label=command, style=dashed];
d48 -> d55  [color=darkseagreen4, key=1, label=command, style=dashed];
d67 -> d229  [color=darkseagreen4, key=1, label=portfolioValue, style=dashed];
d74 -> d307  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d85 -> d85  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d104 -> d107  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
d104 -> d118  [color=darkseagreen4, key=1, label=issueMarginCallWarning, style=dashed];
d143 -> d311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d422 -> d422  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
d14 -> d72  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d14 -> d173  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d14 -> d175  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d14 -> d177  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d14 -> d185  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d14 -> d187  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d14 -> d33  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d14 -> d39  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d14 -> d163  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
d81 -> d81  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d84 -> d84  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d83 -> d83  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d152 -> d152  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d152 -> d154  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
d151 -> d153  [color=darkseagreen4, key=1, label=consolidators, style=dashed];
d163 -> d166  [color=darkseagreen4, key=1, label=methodInvoker, style=dashed];
d164 -> d166  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
d164 -> d164  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d162 -> d164  [color=darkseagreen4, key=1, label=kvp, style=dashed];
d162 -> d165  [color=darkseagreen4, key=1, label=type, style=dashed];
d19 -> d183  [color=darkseagreen4, key=1, label=delistingTickets, style=dashed];
d19 -> d88  [color=darkseagreen4, key=1, label=delistingTickets, style=dashed];
d19 -> d90  [color=darkseagreen4, key=1, label=delistingTickets, style=dashed];
d19 -> d94  [color=darkseagreen4, key=1, label=delistingTickets, style=dashed];
d363 -> d379  [color=darkseagreen4, key=1, label=setStartTime, style=dashed];
d384 -> d388  [color=darkseagreen4, key=1, label=hasHistoricalData, style=dashed];
d367 -> d395  [color=darkseagreen4, key=1, label=nextStatusTime, style=dashed];
d350 -> d355  [color=darkseagreen4, key=1, label=list, style=dashed];
d350 -> d353  [color=darkseagreen4, key=1, label=list, style=dashed];
d350 -> d354  [color=darkseagreen4, key=1, label=list, style=dashed];
d351 -> d353  [color=darkseagreen4, key=1, label=ticks, style=dashed];
d446 -> d448  [color=darkseagreen4, key=1, label=newSplitMethodInfo, style=dashed];
d452 -> d454  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d452 -> d458  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d452 -> d460  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d452 -> d461  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d452 -> d462  [color=darkseagreen4, key=1, label=delisting, style=dashed];
d457 -> d459  [color=darkseagreen4, key=1, label=ticket, style=dashed];
d478 -> d305  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
d91 -> d93  [color=darkseagreen4, key=1, label=ticket, style=dashed];
d91 -> d95  [color=darkseagreen4, key=1, label=ticket, style=dashed];
d94 -> d94  [color=darkseagreen4, key=1, label=i, style=dashed];
d94 -> d96  [color=darkseagreen4, key=1, label=i, style=dashed];
d16 -> d102  [color=darkseagreen4, key=1, label=nextMarginCallTime, style=dashed];
d18 -> d126  [color=darkseagreen4, key=1, label=nextSettlementScanTime, style=dashed];
d314 -> d316  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
d479 -> d308  [color=darkseagreen4, key=1, label=symbol, style=dashed];
d480 -> d312  [color=darkseagreen4, key=1, label=split, style=dashed];
d89 -> d94  [color=darkseagreen4, key=1, label=i, style=dashed];
d89 -> d96  [color=darkseagreen4, key=1, label=i, style=dashed];
d96 -> d96  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_50 -> m0_56  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_9 -> m0_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_9 -> m0_14  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_9 -> m0_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_9 -> m0_17  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_9 -> m0_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_9 -> m0_48  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_9 -> m0_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_9 -> m0_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_24 -> m0_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_28 -> m0_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_60 -> m0_54  [color=green, key=1, label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", style=dashed];
m0_60 -> m0_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", style=dashed];
m0_60 -> m0_14  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", style=dashed];
m0_60 -> m0_15  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", style=dashed];
m0_60 -> m0_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", style=dashed];
m0_60 -> m0_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", style=dashed];
m0_60 -> m0_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", style=dashed];
m0_60 -> m0_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", style=dashed];
m0_60 -> m0_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", style=dashed];
m0_60 -> m0_56  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DefaultBrokerageMessageHandler", style=dashed];
m0_61 -> m0_48  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m0_61 -> m0_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m2_392 -> m2_394  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_392 -> m2_396  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_392 -> m2_397  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_392 -> m2_401  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_392 -> m2_402  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_393 -> m2_400  [color=darkseagreen4, key=1, label=dict, style=dashed];
m2_393 -> m2_402  [color=darkseagreen4, key=1, label=dict, style=dashed];
m2_398 -> m2_400  [color=darkseagreen4, key=1, label=key, style=dashed];
m2_215 -> m2_217  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_220 -> m2_222  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_247 -> m2_252  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_249 -> m2_252  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m2_251 -> m2_253  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m2_300 -> m2_322  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_300 -> m2_312  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m2_302 -> m2_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_303 -> m2_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_443 -> m2_452  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_443 -> m2_454  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_443 -> m2_455  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_450 -> m2_453  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_268 -> m2_270  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_43 -> m2_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_60 -> m2_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_66 -> m2_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_77 -> m2_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_87 -> m2_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_98 -> m2_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_135 -> m2_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_177 -> m2_179  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m2_283 -> m2_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_283 -> m2_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_283 -> m2_286  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_307 -> m2_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_307 -> m2_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_307 -> m2_312  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_310 -> m2_312  [color=darkseagreen4, key=1, label=res, style=dashed];
m2_474 -> m2_478  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_82 -> m2_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_83 -> m2_87  [color=darkseagreen4, key=1, label=selector, style=dashed];
m2_84 -> m2_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_330 -> m2_336  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_332 -> m2_349  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m2_332 -> m2_336  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m2_333 -> m2_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_333 -> m2_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_335 -> m2_351  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_183 -> m2_192  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_186 -> m2_191  [color=darkseagreen4, key=1, label=pythonType, style=dashed];
m2_188 -> m2_192  [color=darkseagreen4, key=1, label=indicator, style=dashed];
m2_144 -> m2_152  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_144 -> m2_154  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_144 -> m2_155  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_144 -> m2_157  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_144 -> m2_159  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_144 -> m2_160  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_144 -> m2_162  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_144 -> m2_164  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_144 -> m2_165  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_144 -> m2_168  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_144 -> m2_169  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_144 -> m2_170  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_144 -> m2_179  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_152 -> m2_155  [color=darkseagreen4, key=1, label=indicatorDataPoint, style=dashed];
m2_157 -> m2_160  [color=darkseagreen4, key=1, label=indicatorDataBar, style=dashed];
m2_162 -> m2_165  [color=darkseagreen4, key=1, label=indicatorTradeBar, style=dashed];
m2_171 -> m2_179  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m2_260 -> m2_411  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_260 -> m2_415  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_260 -> m2_421  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_411 -> m2_414  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m2_416 -> m2_419  [color=darkseagreen4, key=1, label=s, style=dashed];
m2_15 -> m2_17  [color=darkseagreen4, key=1, label=security, style=dashed];
m2_256 -> m2_258  [color=darkseagreen4, key=1, label=int, style=dashed];
m2_25 -> m2_28  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_25 -> m2_30  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_25 -> m2_33  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_30 -> m2_43  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m2_31 -> m2_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_459 -> m2_461  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_459 -> m2_462  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_71 -> m2_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_72 -> m2_77  [color=darkseagreen4, key=1, label=selector, style=dashed];
m2_73 -> m2_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_106 -> m2_128  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m2_106 -> m2_135  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m2_106 -> m2_138  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m2_126 -> m2_128  [color=darkseagreen4, key=1, label=config, style=dashed];
m2_127 -> m2_135  [color=darkseagreen4, key=1, label=selector, style=dashed];
m2_128 -> m2_135  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>", style=dashed];
m2_10 -> m2_488  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_10 -> m2_495  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_493 -> m2_495  [color=darkseagreen4, key=1, label=pythonType, style=dashed];
m2_493 -> m2_496  [color=darkseagreen4, key=1, label=pythonType, style=dashed];
m2_364 -> m2_370  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_366 -> m2_368  [color=darkseagreen4, key=1, label=pyBenchmark, style=dashed];
m2_263 -> m2_265  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m2_379 -> m2_384  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_380 -> m2_382  [color=darkseagreen4, key=1, label=securityInitializer1, style=dashed];
m2_465 -> m2_474  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_465 -> m2_469  [color=darkseagreen4, key=1, label=array, style=dashed];
m2_466 -> m2_480  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_466 -> m2_483  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_51 -> m2_54  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_51 -> m2_57  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_54 -> m2_60  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m2_54 -> m2_66  [color=darkseagreen4, key=1, label=fine, style=dashed];
m2_55 -> m2_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_55 -> m2_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_235 -> m2_240  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_237 -> m2_240  [color=darkseagreen4, key=1, label=pyselector, style=dashed];
m2_239 -> m2_241  [color=darkseagreen4, key=1, label=filteredIdentity, style=dashed];
m2_354 -> m2_359  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_357 -> m2_359  [color=darkseagreen4, key=1, label=start, style=dashed];
m2_209 -> m2_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_93 -> m2_95  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m2_94 -> m2_98  [color=darkseagreen4, key=1, label=selector, style=dashed];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_226 -> m2_228  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_230 -> m2_232  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m2_200 -> m2_205  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_273 -> m2_295  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_273 -> m2_286  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_275 -> m2_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_276 -> m2_297  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_508 -> m2_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_108  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_114  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_120  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_128  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_141  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_155  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_165  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_170  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_192  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_200  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_209  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_215  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_222  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_228  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_232  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_240  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_252  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_258  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_265  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_270  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_295  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_286  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_276  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_312  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_303  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_328  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_338  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_359  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_362  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_368  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_370  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_375  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_382  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_384  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_402  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_413  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_418  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_433  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_437  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_441  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_445  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_448  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_452  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_454  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_455  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_462  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_484  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_488  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_508 -> m2_495  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m2_509 -> m2_43  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m2_510 -> m2_60  [color=darkseagreen4, key=1, label=coarse, style=dashed];
m2_511 -> m2_66  [color=darkseagreen4, key=1, label=fine, style=dashed];
m2_512 -> m2_77  [color=darkseagreen4, key=1, label=selector, style=dashed];
m2_513 -> m2_87  [color=darkseagreen4, key=1, label=selector, style=dashed];
m2_514 -> m2_98  [color=darkseagreen4, key=1, label=selector, style=dashed];
m2_515 -> m2_135  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m2_515 -> m2_138  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m2_516 -> m2_135  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_516 -> m2_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_517 -> m2_135  [color=darkseagreen4, key=1, label=selector, style=dashed];
m2_518 -> m2_179  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_519 -> m2_295  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_520 -> m2_286  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_521 -> m2_286  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m2_522 -> m2_286  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m2_523 -> m2_322  [color=darkseagreen4, key=1, label=PyObject, style=dashed];
m2_524 -> m2_312  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m2_526 -> m2_349  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m3_7 -> m3_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType", style=dashed];
m3_7 -> m3_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType", style=dashed];
m3_26 -> m3_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType", style=dashed];
m3_38 -> m3_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m3_38 -> m3_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m3_38 -> m3_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m3_38 -> m3_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
}
