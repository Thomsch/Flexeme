digraph  {
n134 [label="QuantConnect.Securities.SecurityMarginModel", span=""];
n0 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel()", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel()", span="32-32"];
n1 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel()", label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel()", span="32-32"];
n2 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="43-43"];
n3 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", label="initialMarginRequirement < 0 || initialMarginRequirement > 1", span="45-45"];
n5 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", label="maintenanceMarginRequirement < 0 || maintenanceMarginRequirement > 1", span="50-50"];
n7 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", label="_initialMarginRequirement = initialMarginRequirement", span="55-55"];
n8 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", label="_maintenanceMarginRequirement = maintenanceMarginRequirement", span="56-56"];
n4 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", label="throw new ArgumentException(''Initial margin requirement must be between 0 and 1'');", span="47-47"];
n6 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", label="throw new ArgumentException(''Maintenance margin requirement must be between 0 and 1'');", span="52-52"];
n9 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal, decimal)", span="43-43"];
n10 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n11 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", label="Entry QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", span="63-63"];
n12 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", label="leverage < 1", span="65-65"];
n14 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", label="_initialMarginRequirement = 1/leverage", span="70-70"];
n15 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", label="_maintenanceMarginRequirement = 1/leverage", span="71-71"];
n13 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", label="throw new ArgumentException(''Leverage must be greater than or equal to 1.'');", span="67-67"];
n16 [cluster="QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", label="Exit QuantConnect.Securities.SecurityMarginModel.SecurityMarginModel(decimal)", span="63-63"];
n17 [cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="79-79"];
n18 [cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", label="return 1/GetMaintenanceMarginRequirement(security);", span="81-81"];
n19 [cluster="QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", label="Exit QuantConnect.Securities.SecurityMarginModel.GetLeverage(QuantConnect.Securities.Security)", span="79-79"];
n20 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="196-196"];
n21 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", label="Entry QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="92-92"];
n22 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", label="leverage < 1", span="94-94"];
n24 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", label="decimal margin = 1/leverage", span="99-99"];
n23 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", label="throw new ArgumentException(''Leverage must be greater than or equal to 1.'');", span="96-96"];
n25 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", label="_initialMarginRequirement = margin", span="100-100"];
n26 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", label="_maintenanceMarginRequirement = margin", span="101-101"];
n27 [cluster="QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", label="Exit QuantConnect.Securities.SecurityMarginModel.SetLeverage(QuantConnect.Securities.Security, decimal)", span="92-92"];
n28 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="Entry QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="110-110"];
n29 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var orderFees = security.FeeModel.GetOrderFee(security, order)", span="114-114"];
n30 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var orderValue = order.GetValue(security) * GetInitialMarginRequirement(security)", span="116-116"];
n33 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
n31 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="return orderValue + Math.Sign(orderValue) * orderFees;", span="117-117"];
n34 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
n35 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", span="188-188"];
n32 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="Exit QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="110-110"];
n36 [cluster="System.Math.Sign(decimal)", label="Entry System.Math.Sign(decimal)", span="0-0"];
n37 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="125-125"];
n38 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", label="return security.Holdings.AbsoluteHoldingsCost*GetMaintenanceMarginRequirement(security);", span="127-127"];
n39 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMargin(QuantConnect.Securities.Security)", span="125-125"];
n40 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="137-137"];
n41 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="var holdings = security.Holdings", span="139-139"];
n42 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="direction == OrderDirection.Hold", span="141-141"];
n43 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="return portfolio.MarginRemaining;", span="143-143"];
n45 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label=direction, span="150-150"];
n47 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="return portfolio.MarginRemaining;", span="153-153"];
n49 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="return\r\n                            // portion of margin to close the existing position\r\n                            GetMaintenanceMargin(security) +\r\n                            // portion of margin to open the new position\r\n                            security.Holdings.AbsoluteHoldingsValue * GetInitialMarginRequirement(security) +\r\n                            portfolio.MarginRemaining;", span="156-161"];
n51 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label=direction, span="166-166"];
n53 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="return\r\n                            // portion of margin to close the existing position\r\n                            GetMaintenanceMargin(security) +\r\n                            // portion of margin to open the new position\r\n                            security.Holdings.AbsoluteHoldingsValue * GetInitialMarginRequirement(security) +\r\n                            portfolio.MarginRemaining;", span="169-174"];
n55 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="return portfolio.MarginRemaining;", span="177-177"];
n56 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="return portfolio.MarginRemaining;", span="182-182"];
n44 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="holdings.IsLong", span="148-148"];
n50 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="holdings.IsShort", span="164-164"];
n46 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="OrderDirection.Buy", span="152-152"];
n48 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="OrderDirection.Sell", span="155-155"];
n52 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="OrderDirection.Buy", span="168-168"];
n54 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="OrderDirection.Sell", span="176-176"];
n57 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMarginRemaining(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="137-137"];
n58 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", label="return _initialMarginRequirement;", span="190-190"];
n59 [cluster="QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", label="Exit QuantConnect.Securities.SecurityMarginModel.GetInitialMarginRequirement(QuantConnect.Securities.Security)", span="188-188"];
n60 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", label="return _maintenanceMarginRequirement;", span="198-198"];
n61 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMaintenanceMarginRequirement(QuantConnect.Securities.Security)", span="196-196"];
n62 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="Entry QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="208-208"];
n63 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="order.Quantity == 0", span="211-211"];
n65 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var ticket = portfolio.Transactions.GetOrderTicket(order.Id)", span="213-213"];
n67 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="Log.Error($''SecurityMarginBuyingPowerModel.HasSufficientBuyingPowerForOrder(): Null order ticket for id: {order.Id}'')", span="216-216"];
n69 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="order.Type == OrderType.OptionExercise", span="220-220"];
n70 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var option = (Option.Option)security", span="223-223"];
n73 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var quantity = option.GetExerciseQuantity(order.Quantity)", span="228-228"];
n74 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var newOrder = new LimitOrder\r\n                    {\r\n                        Id = order.Id,\r\n                        Time = order.Time,\r\n                        LimitPrice = option.StrikePrice,\r\n                        Symbol = underlying.Symbol,\r\n                        Quantity = option.Symbol.ID.OptionRight == OptionRight.Call ? quantity : -quantity\r\n                    }", span="230-237"];
n75 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="return underlying.BuyingPowerModel.HasSufficientBuyingPowerForOrder(portfolio, underlying, newOrder);", span="240-240"];
n77 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="security.Holdings.Quantity * order.Quantity < 0 && Math.Abs(security.Holdings.Quantity) >= Math.Abs(order.Quantity)", span="247-247"];
n79 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var freeMargin = GetMarginRemaining(portfolio, security, order.Direction)", span="249-249"];
n80 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var initialMarginRequiredForOrder = GetInitialMarginRequiredForOrder(security, order)", span="250-250"];
n81 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var percentUnfilled = (Math.Abs(order.Quantity) - Math.Abs(ticket.QuantityFilled)) / Math.Abs(order.Quantity)", span="253-253"];
n84 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="Log.Error($''SecurityMarginBuyingPowerModel.HasSufficientBuyingPowerForOrder(): Id: {order.Id}, Initial Margin: {initialMarginRequiredForRemainderOfOrder}, Free Margin: {freeMargin}'')", span="258-258"];
n64 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="return true;", span="211-211"];
n66 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="ticket == null", span="214-214"];
n88 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="225-225"];
n68 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="return false;", span="217-217"];
n89 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
n71 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var underlying = option.Underlying", span="224-224"];
n72 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="option.IsAutoExercised(underlying.Close)", span="226-226"];
n76 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="return true;", span="243-243"];
n90 [cluster="QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", label="Entry QuantConnect.Securities.Option.Option.IsAutoExercised(decimal)", span="197-197"];
n91 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(decimal)", span="189-189"];
n92 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42"];
n78 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="return true;", span="247-247"];
n94 [cluster="System.Math.Abs(decimal)", label="Entry System.Math.Abs(decimal)", span="0-0"];
n83 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="Math.Abs(initialMarginRequiredForRemainderOfOrder) > freeMargin", span="256-256"];
n82 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="var initialMarginRequiredForRemainderOfOrder = percentUnfilled * initialMarginRequiredForOrder", span="254-254"];
n86 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="return true;", span="262-262"];
n85 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="return false;", span="259-259"];
n87 [cluster="QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="Exit QuantConnect.Securities.SecurityMarginModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="208-208"];
n93 [cluster="QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", label="Entry QuantConnect.Securities.IBuyingPowerModel.HasSufficientBuyingPowerForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="48-48"];
n95 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="Entry QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="272-272"];
n96 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="targetPortfolioValue == 0", span="275-275"];
n97 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="return -security.Holdings.Quantity;", span="275-275"];
n98 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="var currentHoldingsValue = security.Holdings.HoldingsValue", span="277-277"];
n99 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="var targetOrderValue = Math.Abs(targetPortfolioValue - currentHoldingsValue)", span="280-280"];
n100 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="var direction = targetPortfolioValue > currentHoldingsValue ? OrderDirection.Buy : OrderDirection.Sell", span="281-281"];
n101 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="var unitPrice = new MarketOrder(security.Symbol, 1, DateTime.UtcNow).GetValue(security)", span="284-284"];
n104 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="var marginRemaining = GetMarginRemaining(portfolio, security, direction)", span="288-288"];
n112 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="orderQuantity -= orderQuantity % security.SymbolProperties.LotSize", span="301-301"];
n116 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="var order = new MarketOrder(security.Symbol, orderQuantity, DateTime.UtcNow)", span="311-311"];
n117 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="orderValue = order.GetValue(security)", span="312-312"];
n118 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="313-313"];
n120 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="feeToPriceRatio -= feeToPriceRatio % security.SymbolProperties.LotSize", span="317-317"];
n121 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="feeToPriceRatio < security.SymbolProperties.LotSize", span="318-318"];
n122 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="feeToPriceRatio = security.SymbolProperties.LotSize", span="320-320"];
n123 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="marginRequired = GetInitialMarginRequiredForOrder(security, order)", span="324-324"];
n111 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="var orderQuantity = targetOrderValue / unitPrice", span="298-298"];
n124 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="marginRequired > marginRemaining || orderValue + orderFees > targetOrderValue", span="326-326"];
n125 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="329-329"];
n102 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="unitPrice == 0", span="285-285"];
n127 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
n119 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="feeToPriceRatio = orderFees / unitPrice", span="316-316"];
n103 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="return 0;", span="285-285"];
n105 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="marginRemaining <= 0", span="289-289"];
n106 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="return 0;", span="289-289"];
n107 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="decimal marginRequired", span="292-292"];
n108 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="decimal orderValue", span="293-293"];
n109 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="decimal orderFees", span="294-294"];
n110 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="var feeToPriceRatio = 0m", span="295-295"];
n113 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="orderQuantity -= feeToPriceRatio", span="307-307"];
n114 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="orderQuantity <= 0", span="308-308"];
n115 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="return 0;", span="308-308"];
n126 [cluster="QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", label="Exit QuantConnect.Securities.SecurityMarginModel.GetMaximumOrderQuantityForTargetValue(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, decimal)", span="272-272"];
n128 [cluster="QuantConnect.Securities.SecurityMarginModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", label="Entry QuantConnect.Securities.SecurityMarginModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", span="337-337"];
n129 [cluster="QuantConnect.Securities.SecurityMarginModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", label="return GetMaintenanceMargin(security);", span="339-339"];
n130 [cluster="QuantConnect.Securities.SecurityMarginModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", label="Exit QuantConnect.Securities.SecurityMarginModel.GetReservedBuyingPowerForPosition(QuantConnect.Securities.Security)", span="337-337"];
n131 [cluster="QuantConnect.Securities.SecurityMarginModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="Entry QuantConnect.Securities.SecurityMarginModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="349-349"];
n132 [cluster="QuantConnect.Securities.SecurityMarginModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="return GetMarginRemaining(portfolio, security, direction);", span="351-351"];
n133 [cluster="QuantConnect.Securities.SecurityMarginModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", label="Exit QuantConnect.Securities.SecurityMarginModel.GetBuyingPower(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderDirection)", span="349-349"];
m0_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="AlgorithmRunner.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", span="46-46"];
m0_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="AlgorithmRunner.cs", label="Date = date", span="48-48"];
m0_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="AlgorithmRunner.cs", label="Source = source", span="49-49"];
m0_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", file="AlgorithmRunner.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs.CreateStreamReaderErrorEventArgs(System.DateTime, QuantConnect.Data.SubscriptionDataSource)", span="46-46"];
m0_4 [file="AlgorithmRunner.cs", label="QuantConnect.Lean.Engine.DataFeeds.CreateStreamReaderErrorEventArgs", span=""];
m1_8 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BaseDataCollection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m1_9 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.Clone()", file="BaseDataCollection.cs", label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.Clone()", span="60-60"];
m1_10 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.Clone()", color=green, community=0, file="BaseDataCollection.cs", label="return new BaseDataCollection(Time, Symbol, Data);", prediction=0, span="62-62"];
m1_11 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.Clone()", file="BaseDataCollection.cs", label="Exit QuantConnect.Data.UniverseSelection.BaseDataCollection.Clone()", span="60-60"];
m1_0 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", file="BaseDataCollection.cs", label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", span="35-35"];
m1_1 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", file="BaseDataCollection.cs", label="Exit QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", span="35-35"];
m1_2 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="BaseDataCollection.cs", label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="46-46"];
m1_3 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="BaseDataCollection.cs", label="Symbol = symbol", span="48-48"];
m1_4 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="BaseDataCollection.cs", label="Time = time", span="49-49"];
m1_7 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="BaseDataCollection.cs", label="Exit QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection(System.DateTime, QuantConnect.Symbol, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="46-46"];
m1_12 [file="BaseDataCollection.cs", label="QuantConnect.Data.UniverseSelection.BaseDataCollection", span=""];
m2_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", span="56-56"];
m2_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", color=green, community=0, file="BaseDataCollectionAggregatorEnumerator.cs", label="collection = new BaseDataCollection\r\n                    {\r\n                        Symbol = _symbol,\r\n                        Time = _enumerator.Current.Time,\r\n                        EndTime = _enumerator.Current.EndTime\r\n                    }", prediction=1, span="86-91"];
m2_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="collection == null", span="83-83"];
m2_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="collection.EndTime != _enumerator.Current.EndTime", span="94-94"];
m2_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="collection.Data.Add(_enumerator.Current)", span="102-102"];
m2_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Current = collection", span="106-106"];
m2_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label=_endOfStream, span="58-58"];
m2_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label=_needsMoveNext, span="66-66"];
m2_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="!_enumerator.MoveNext()", span="69-69"];
m2_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="_endOfStream = true", span="71-71"];
m2_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="_enumerator.Current == null", span="76-76"];
m2_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="_needsMoveNext = true", span="79-79"];
m2_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="_needsMoveNext = false", span="97-97"];
m2_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="_needsMoveNext = true", span="103-103"];
m2_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="return !_endOfStream;", span="107-107"];
m2_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="BaseDataCollection collection = null", span="63-63"];
m2_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label=true, span="64-64"];
m2_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="return false;", span="60-60"];
m2_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.MoveNext()", span="56-56"];
m2_30 [cluster="System.Collections.IEnumerator.Reset()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m2_26 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BaseDataCollectionAggregatorEnumerator.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_25 [cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", span="35-35"];
m2_34 [cluster="System.IDisposable.Dispose()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m2_24 [cluster="System.Collections.IEnumerator.MoveNext()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m2_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.BaseDataCollectionAggregatorEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Symbol)", file="BaseDataCollectionAggregatorEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.BaseDataCollectionAggregatorEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Symbol)", span="41-41"];
m2_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.BaseDataCollectionAggregatorEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Symbol)", file="BaseDataCollectionAggregatorEnumerator.cs", label="_symbol = symbol", span="43-43"];
m2_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.BaseDataCollectionAggregatorEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Symbol)", file="BaseDataCollectionAggregatorEnumerator.cs", label="_enumerator = enumerator", span="44-44"];
m2_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.BaseDataCollectionAggregatorEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Symbol)", file="BaseDataCollectionAggregatorEnumerator.cs", label="_needsMoveNext = true", span="46-46"];
m2_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.BaseDataCollectionAggregatorEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Symbol)", file="BaseDataCollectionAggregatorEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.BaseDataCollectionAggregatorEnumerator(System.Collections.Generic.IEnumerator<QuantConnect.Data.BaseData>, QuantConnect.Symbol)", span="41-41"];
m2_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.Reset()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.Reset()", span="114-114"];
m2_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.Reset()", file="BaseDataCollectionAggregatorEnumerator.cs", label="_enumerator.Reset()", span="116-116"];
m2_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.Reset()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.Reset()", span="114-114"];
m2_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.Dispose()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.Dispose()", span="146-146"];
m2_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.Dispose()", color=green, community=0, file="BaseDataCollectionAggregatorEnumerator.cs", label="_enumerator.Dispose()", prediction=2, span="148-148"];
m2_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.Dispose()", file="BaseDataCollectionAggregatorEnumerator.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator.Dispose()", span="146-146"];
m2_35 [file="BaseDataCollectionAggregatorEnumerator.cs", label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator", span=""];
m4_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="BaseDataExchangeTests.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", span="45-45"];
m4_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="BaseDataExchangeTests.cs", label="Line = line", span="47-47"];
m4_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="BaseDataExchangeTests.cs", label="Exception = exception", span="48-48"];
m4_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", file="BaseDataExchangeTests.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs.ReaderErrorEventArgs(string, System.Exception)", span="45-45"];
m4_4 [file="BaseDataExchangeTests.cs", label="QuantConnect.Lean.Engine.DataFeeds.ReaderErrorEventArgs", span=""];
m6_28 [cluster="QuantConnect.Notifications.NotificationManager.Sms(string, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Notifications.NotificationManager.Sms(string, string)", span="110-110"];
m6_14 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", span="47-47"];
m6_15 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BrokerageTransactionHandler.cs", label=LiveMode, span="49-49"];
m6_16 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BrokerageTransactionHandler.cs", label="SetRuntimeStatistic(''BTC'', data.Close.ToString(''C''))", span="52-52"];
m6_17 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BrokerageTransactionHandler.cs", label="!Portfolio.HoldStock", span="55-55"];
m6_18 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BrokerageTransactionHandler.cs", label="Order(''BTC'', 100)", span="57-57"];
m6_19 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BrokerageTransactionHandler.cs", label="Notify.Email(''myemail@gmail.com'', ''Test'', ''Test Body'', ''test attachment'')", span="60-60"];
m6_20 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BrokerageTransactionHandler.cs", label="Notify.Sms(''+11233456789'', Time.ToString(''u'') + ''>> Test message from live BTC server.'')", span="61-61"];
m6_21 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BrokerageTransactionHandler.cs", label="Notify.Web(''http://api.quantconnect.com'', Time.ToString(''u'') + ''>> Test data packet posted from live BTC server.'')", span="62-62"];
m6_22 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", span="47-47"];
m6_0 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", span="30-30"];
m6_1 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs", label="SetStartDate(2013, 1, 1)", span="32-32"];
m6_2 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs", label="SetEndDate(DateTime.Now.Date.AddDays(-1))", span="33-33"];
m6_3 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs", label="SetCash(25000)", span="34-34"];
m6_4 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs", label="AddSecurity(SecurityType.Equity, ''AAPL'', Resolution.Second)", span="37-37"];
m6_5 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs", label="AddSecurity(SecurityType.Forex, ''EURUSD'', Resolution.Minute)", span="40-40"];
m6_6 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs", label="AddData<Bitcoin>(''BTC'', Resolution.Second)", span="43-43"];
m6_7 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", span="30-30"];
m6_44 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="126-126"];
m6_45 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="var source = ''''", span="128-128"];
m6_46 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label=datafeed, span="130-130"];
m6_47 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataFeedEndpoint.Backtesting", span="133-133"];
m6_49 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataFeedEndpoint.LiveTrading", span="138-138"];
m6_48 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="source = ''http://www.quandl.com/api/v1/datasets/BITCOIN/BITSTAMPUSD.csv?sort_order=asc''", span="134-134"];
m6_50 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="source = ''https://www.bitstamp.net/api/ticker/''", span="140-140"];
m6_51 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="System.Console.WriteLine(DateTime.Now.ToString(''u'') + '' SOURCE >> '' + source)", span="144-144"];
m6_52 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="return source;", span="146-146"];
m6_53 [cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="126-126"];
m6_37 [cluster="QuantConnect.Data.Market.TradeBars.ContainsKey(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Data.Market.TradeBars.ContainsKey(string)", span="199-199"];
m6_84 [cluster="string.Split(params char[])", file="BrokerageTransactionHandler.cs", label="Entry string.Split(params char[])", span="0-0"];
m6_26 [cluster="QuantConnect.Notifications.NotificationManager.Email(string, string, string, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Notifications.NotificationManager.Email(string, string, string, string)", span="91-91"];
m6_24 [cluster="Unk.SetRuntimeStatistic", file="BrokerageTransactionHandler.cs", label="Entry Unk.SetRuntimeStatistic", span=""];
m6_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="669-669"];
m6_54 [cluster="System.Console.WriteLine(string)", file="BrokerageTransactionHandler.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m6_85 [cluster="System.DateTime.Parse(string)", file="BrokerageTransactionHandler.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m6_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="185-185"];
m6_23 [cluster="Unk.ToString", file="BrokerageTransactionHandler.cs", label="Entry Unk.ToString", span=""];
m6_27 [cluster="System.DateTime.ToString(string)", file="BrokerageTransactionHandler.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m6_55 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="152-152"];
m6_56 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Bitcoin coin = new Bitcoin()", span="154-154"];
m6_57 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label=datafeed, span="155-155"];
m6_59 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="string[] data = line.Split(',')", span="163-163"];
m6_70 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="var liveBTC = JsonConvert.DeserializeObject<LiveBitcoin>(line)", span="182-182"];
m6_80 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="System.Console.WriteLine(DateTime.Now.ToString(''u'') + '' READER >> '' + line + '' COIN >> '' + coin.Time.ToString(''u''))", span="197-197"];
m6_60 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Time = DateTime.Parse(data[0])", span="164-164"];
m6_67 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Symbol = ''BTC''", span="171-171"];
m6_68 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Value = coin.Close", span="172-172"];
m6_71 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Time = DateTime.Now", span="183-183"];
m6_78 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Symbol = ''BTC''", span="190-190"];
m6_79 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Value = coin.Close", span="191-191"];
m6_81 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="return coin;", span="199-199"];
m6_58 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataFeedEndpoint.Backtesting", span="160-160"];
m6_69 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataFeedEndpoint.LiveTrading", span="179-179"];
m6_61 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Open = Convert.ToDecimal(data[1], CultureInfo.InvariantCulture)", span="165-165"];
m6_62 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.High = Convert.ToDecimal(data[2], CultureInfo.InvariantCulture)", span="166-166"];
m6_63 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Low = Convert.ToDecimal(data[3], CultureInfo.InvariantCulture)", span="167-167"];
m6_64 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Close = Convert.ToDecimal(data[4], CultureInfo.InvariantCulture)", span="168-168"];
m6_65 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.VolumeBTC = Convert.ToDecimal(data[5], CultureInfo.InvariantCulture)", span="169-169"];
m6_66 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.WeightedPrice = Convert.ToDecimal(data[7], CultureInfo.InvariantCulture)", span="170-170"];
m6_72 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Open = liveBTC.Last", span="184-184"];
m6_73 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.High = liveBTC.High", span="185-185"];
m6_74 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Low = liveBTC.Low", span="186-186"];
m6_75 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.Close = liveBTC.Last", span="187-187"];
m6_76 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.VolumeBTC = liveBTC.Volume", span="188-188"];
m6_77 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="coin.WeightedPrice = liveBTC.VWAP", span="189-189"];
m6_82 [cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="152-152"];
m6_29 [cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Notifications.NotificationManager.Web(string, object)", span="127-127"];
m6_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="442-442"];
m6_87 [cluster="Unk.>", file="BrokerageTransactionHandler.cs", label="Entry Unk.>", span=""];
m6_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="723-723"];
m6_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="409-409"];
m6_30 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="66-66"];
m6_31 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageTransactionHandler.cs", label="!Portfolio.HoldStock && data.ContainsKey(''AAPL'')", span="68-68"];
m6_32 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageTransactionHandler.cs", label="int quantity = (int)Math.Floor(Portfolio.Cash / data[''AAPL''].Close)", span="70-70"];
m6_33 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageTransactionHandler.cs", label="Order(''AAPL'', quantity)", span="71-71"];
m6_34 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageTransactionHandler.cs", label="Debug(''Purchased SPY on '' + Time.ToShortDateString())", span="72-72"];
m6_35 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageTransactionHandler.cs", label="Notify.Email(''myemail@gmail.com'', ''Test'', ''Test Body'', ''test attachment'')", span="73-73"];
m6_36 [cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="66-66"];
m6_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="535-535"];
m6_39 [cluster="System.DateTime.ToShortDateString()", file="BrokerageTransactionHandler.cs", label="Entry System.DateTime.ToShortDateString()", span="0-0"];
m6_38 [cluster="System.Math.Floor(decimal)", file="BrokerageTransactionHandler.cs", label="Entry System.Math.Floor(decimal)", span="0-0"];
m6_41 [cluster="QuantConnect.Bitcoin.Bitcoin()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Bitcoin.Bitcoin()", span="118-118"];
m6_42 [cluster="QuantConnect.Bitcoin.Bitcoin()", file="BrokerageTransactionHandler.cs", label="Symbol = ''BTC''", span="120-120"];
m6_43 [cluster="QuantConnect.Bitcoin.Bitcoin()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Bitcoin.Bitcoin()", span="118-118"];
m6_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="608-608"];
m6_9 [cluster="System.DateTime.AddDays(double)", file="BrokerageTransactionHandler.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m6_83 [cluster="Bitcoin.cstr", file="BrokerageTransactionHandler.cs", label="Entry Bitcoin.cstr", span=""];
m6_86 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="BrokerageTransactionHandler.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m6_88 [file="BrokerageTransactionHandler.cs", label="QuantConnect.LiveTradingFeaturesAlgorithm", span=""];
m6_89 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Bitcoin", span=""];
m15_14 [cluster="QuantConnect.ToolBox.Bz2StreamProvider.Bz2StreamProvider()", file="Global.cs", label="Entry QuantConnect.ToolBox.Bz2StreamProvider.Bz2StreamProvider()", span="21-21"];
m15_12 [cluster="System.IO.Path.GetExtension(string)", file="Global.cs", label="Entry System.IO.Path.GetExtension(string)", span="0-0"];
m15_0 [cluster="QuantConnect.ToolBox.IStreamProvider.Open(string)", file="Global.cs", label="Entry QuantConnect.ToolBox.IStreamProvider.Open(string)", span="31-31"];
m15_1 [cluster="QuantConnect.ToolBox.IStreamProvider.Open(string)", file="Global.cs", label="Exit QuantConnect.ToolBox.IStreamProvider.Open(string)", span="31-31"];
m15_15 [cluster="QuantConnect.ToolBox.FileStreamProvider.FileStreamProvider()", file="Global.cs", label="Entry QuantConnect.ToolBox.FileStreamProvider.FileStreamProvider()", span="23-23"];
m15_4 [cluster="QuantConnect.ToolBox.StreamProvider.ForExtension(string)", file="Global.cs", label="Entry QuantConnect.ToolBox.StreamProvider.ForExtension(string)", span="50-50"];
m15_5 [cluster="QuantConnect.ToolBox.StreamProvider.ForExtension(string)", file="Global.cs", label="var ext = Path.GetExtension(extension)", span="52-52"];
m15_6 [cluster="QuantConnect.ToolBox.StreamProvider.ForExtension(string)", file="Global.cs", label="ext == ''.zip''", span="53-53"];
m15_8 [cluster="QuantConnect.ToolBox.StreamProvider.ForExtension(string)", file="Global.cs", label="ext == ''.bz2''", span="57-57"];
m15_7 [cluster="QuantConnect.ToolBox.StreamProvider.ForExtension(string)", file="Global.cs", label="return new ZipStreamProvider();", span="55-55"];
m15_9 [cluster="QuantConnect.ToolBox.StreamProvider.ForExtension(string)", file="Global.cs", label="return new Bz2StreamProvider();", span="59-59"];
m15_10 [cluster="QuantConnect.ToolBox.StreamProvider.ForExtension(string)", file="Global.cs", label="return new FileStreamProvider();", span="62-62"];
m15_11 [cluster="QuantConnect.ToolBox.StreamProvider.ForExtension(string)", file="Global.cs", label="Exit QuantConnect.ToolBox.StreamProvider.ForExtension(string)", span="50-50"];
m15_13 [cluster="QuantConnect.ToolBox.ZipStreamProvider.ZipStreamProvider()", file="Global.cs", label="Entry QuantConnect.ToolBox.ZipStreamProvider.ZipStreamProvider()", span="25-25"];
m15_2 [cluster="QuantConnect.ToolBox.IStreamProvider.Close(string)", file="Global.cs", label="Entry QuantConnect.ToolBox.IStreamProvider.Close(string)", span="37-37"];
m15_3 [cluster="QuantConnect.ToolBox.IStreamProvider.Close(string)", file="Global.cs", label="Exit QuantConnect.ToolBox.IStreamProvider.Close(string)", span="37-37"];
m17_0 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="34-34"];
m17_1 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="var utcTime = asset.LocalTime.ConvertToUtc(asset.Exchange.TimeZone)", span="37-37"];
m17_2 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="var fill = new OrderEvent(order, utcTime, 0)", span="38-38"];
m17_3 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="order.Status == OrderStatus.Canceled", span="40-40"];
m17_5 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="!IsExchangeOpen(asset)", span="43-43"];
m17_7 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", color=green, community=0, file="ImmediateFillModel.cs", label="fill.FillPrice = asset.Price", prediction=3, span="46-46"];
m17_9 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="var slip = asset.SlippageModel.GetSlippageApproximation(asset, order)", span="50-50"];
m17_10 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="order.Direction", span="53-53"];
m17_16 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="fill.FillQuantity = order.Quantity", span="66-66"];
m17_17 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="fill.OrderFee = asset.FeeModel.GetOrderFee(asset, order)", span="67-67"];
m17_4 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="return fill;", span="40-40"];
m17_6 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="return fill;", span="43-43"];
m17_8 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="fill.Status = OrderStatus.Filled", span="47-47"];
m17_12 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="fill.FillPrice += slip", span="56-56"];
m17_14 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="fill.FillPrice -= slip", span="59-59"];
m17_15 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="fill.Status == OrderStatus.Filled", span="64-64"];
m17_18 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="return fill;", span="70-70"];
m17_11 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="OrderDirection.Buy", span="55-55"];
m17_13 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="OrderDirection.Sell", span="58-58"];
m17_19 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Orders.Fills.ImmediateFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="34-34"];
m17_20 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="ImmediateFillModel.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="485-485"];
m17_186 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="ImmediateFillModel.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData<T>()", span="155-155"];
m17_193 [cluster="QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", span="115-115"];
m17_52 [cluster="System.Math.Max(decimal, decimal)", file="ImmediateFillModel.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m17_101 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="274-274"];
m17_102 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="var utcTime = asset.LocalTime.ConvertToUtc(asset.Exchange.TimeZone)", span="276-276"];
m17_103 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="var fill = new OrderEvent(order, utcTime, 0)", span="277-277"];
m17_104 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="order.Status == OrderStatus.Canceled", span="279-279"];
m17_106 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="var currentBar = asset.GetLastData()", span="287-287"];
m17_107 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="var localOrderTime = order.Time.ConvertFromUtc(asset.Exchange.TimeZone)", span="288-288"];
m17_110 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="asset.Exchange.DateTimeIsOpen(localOrderTime) && localOrderTime.Date == asset.LocalTime.Date", span="292-292"];
m17_112 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="!IsExchangeOpen(asset)", span="299-299"];
m17_116 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="var slip = asset.SlippageModel.GetSlippageApproximation(asset, order)", span="305-305"];
m17_117 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="order.Direction", span="308-308"];
m17_123 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="fill.FillQuantity = order.Quantity", span="321-321"];
m17_124 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="fill.OrderFee = asset.FeeModel.GetOrderFee(asset, order)", span="322-322"];
m17_105 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="return fill;", span="279-279"];
m17_109 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="return fill;", span="289-289"];
m17_111 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="return fill;", span="294-294"];
m17_113 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="return fill;", span="299-299"];
m17_115 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="fill.Status = OrderStatus.Filled", span="302-302"];
m17_119 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="fill.FillPrice += slip", span="311-311"];
m17_121 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="fill.FillPrice -= slip", span="314-314"];
m17_122 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="fill.Status == OrderStatus.Filled", span="319-319"];
m17_125 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="return fill;", span="325-325"];
m17_108 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="currentBar == null || localOrderTime >= currentBar.EndTime", span="289-289"];
m17_118 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="OrderDirection.Buy", span="310-310"];
m17_120 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="OrderDirection.Sell", span="313-313"];
m17_126 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="274-274"];
m17_127 [cluster="QuantConnect.Securities.Security.GetLastData()", file="ImmediateFillModel.cs", label="Entry QuantConnect.Securities.Security.GetLastData()", span="490-490"];
m17_51 [cluster="System.Math.Min(decimal, decimal)", file="ImmediateFillModel.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m17_25 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="81-81"];
m17_26 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="var utcTime = asset.LocalTime.ConvertToUtc(asset.Exchange.TimeZone)", span="84-84"];
m17_27 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="var fill = new OrderEvent(order, utcTime, 0)", span="85-85"];
m17_28 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="!IsExchangeOpen(asset)", span="88-88"];
m17_30 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="order.Status == OrderStatus.Canceled", span="91-91"];
m17_35 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="var slip = asset.SlippageModel.GetSlippageApproximation(asset, order)", span="99-99"];
m17_36 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="order.Direction", span="102-102"];
m17_46 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="fill.FillQuantity = order.Quantity", span="128-128"];
m17_47 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="fill.OrderFee = asset.FeeModel.GetOrderFee(asset, order)", span="129-129"];
m17_29 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="return fill;", span="88-88"];
m17_31 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="return fill;", span="91-91"];
m17_39 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", color=green, community=0, file="ImmediateFillModel.cs", label="fill.Status = OrderStatus.Filled", prediction=4, span="108-108"];
m17_43 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", color=green, community=0, file="ImmediateFillModel.cs", label="fill.Status = OrderStatus.Filled", prediction=5, span="118-118"];
m17_45 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="fill.Status == OrderStatus.Filled", span="126-126"];
m17_48 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="return fill;", span="132-132"];
m17_32 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", color=green, community=0, file="ImmediateFillModel.cs", label="decimal minimumPrice", prediction=6, span="94-94"];
m17_37 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", color=green, community=0, file="ImmediateFillModel.cs", label="OrderDirection.Sell", prediction=7, span="104-104"];
m17_41 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", color=green, community=0, file="ImmediateFillModel.cs", label="OrderDirection.Buy", prediction=8, span="114-114"];
m17_49 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Orders.Fills.ImmediateFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="81-81"];
m17_50 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", span="384-384"];
m17_153 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="ImmediateFillModel.cs", label="var tick = asset.Cache.GetData<Tick>()", prediction=9, span="386-386"];
m17_156 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", file="ImmediateFillModel.cs", label="direction == OrderDirection.Sell && tick.BidPrice != 0", span="390-390"];
m17_158 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="ImmediateFillModel.cs", label="direction == OrderDirection.Buy && tick.AskPrice != 0", prediction=9, span="394-394"];
m17_162 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", file="ImmediateFillModel.cs", label="var quoteBar = asset.Cache.GetData<QuoteBar>()", span="402-402"];
m17_164 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="ImmediateFillModel.cs", label="var bar = direction == OrderDirection.Sell ? quoteBar.Ask : quoteBar.Bid", prediction=11, span="405-405"];
m17_173 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", file="ImmediateFillModel.cs", label="var tradeBar = asset.Cache.GetData<TradeBar>()", span="416-416"];
m17_178 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", file="ImmediateFillModel.cs", label="var lastData = asset.GetLastData()", span="424-424"];
m17_154 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="ImmediateFillModel.cs", label="tick != null", prediction=12, span="387-387"];
m17_160 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="ImmediateFillModel.cs", label="minimumPrice = maximumPrice = price", prediction=13, span="398-398"];
m17_163 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", file="ImmediateFillModel.cs", label="quoteBar != null", span="403-403"];
m17_167 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="ImmediateFillModel.cs", label="bar != null", prediction=11, span="408-408"];
m17_174 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", file="ImmediateFillModel.cs", label="tradeBar != null", span="417-417"];
m17_179 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", color=green, community=0, file="ImmediateFillModel.cs", label="var lastBar = lastData as IBar", prediction=15, span="425-425"];
m17_180 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", file="ImmediateFillModel.cs", label="lastBar != null", span="426-426"];
m17_185 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Orders.Fills.ImmediateFillModel.DataMinMaxPrices(QuantConnect.Securities.Security, out decimal, out decimal, QuantConnect.Orders.OrderDirection)", span="384-384"];
m17_129 [cluster="QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)", span="107-107"];
m17_22 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.IsExchangeOpen(QuantConnect.Securities.Security)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.IsExchangeOpen(QuantConnect.Securities.Security)", span="439-439"];
m17_187 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.IsExchangeOpen(QuantConnect.Securities.Security)", file="ImmediateFillModel.cs", label="!asset.Exchange.DateTimeIsOpen(asset.LocalTime)", span="441-441"];
m17_188 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.IsExchangeOpen(QuantConnect.Securities.Security)", color=green, community=0, file="ImmediateFillModel.cs", label="var currentBar = asset.GetLastData()", prediction=16, span="444-444"];
m17_189 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.IsExchangeOpen(QuantConnect.Securities.Security)", color=green, community=0, file="ImmediateFillModel.cs", label="asset.LocalTime.Date != currentBar.EndTime.Date || !asset.Exchange.IsOpenDuringBar(currentBar.Time, currentBar.EndTime, false)", prediction=17, span="445-445"];
m17_191 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.IsExchangeOpen(QuantConnect.Securities.Security)", color=green, community=0, file="ImmediateFillModel.cs", label="return true;", prediction=18, span="450-450"];
m17_190 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.IsExchangeOpen(QuantConnect.Securities.Security)", color=green, community=0, file="ImmediateFillModel.cs", label="return false;", prediction=19, span="447-447"];
m17_192 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.IsExchangeOpen(QuantConnect.Securities.Security)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Orders.Fills.ImmediateFillModel.IsExchangeOpen(QuantConnect.Securities.Security)", span="439-439"];
m17_130 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="334-334"];
m17_131 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="var utcTime = asset.LocalTime.ConvertToUtc(asset.Exchange.TimeZone)", span="336-336"];
m17_132 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="var fill = new OrderEvent(order, utcTime, 0)", span="337-337"];
m17_133 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="order.Status == OrderStatus.Canceled", span="339-339"];
m17_135 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="var localOrderTime = order.Time.ConvertFromUtc(asset.Exchange.TimeZone)", span="341-341"];
m17_136 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="var nextMarketClose = asset.Exchange.Hours.GetNextMarketClose(localOrderTime, false)", span="342-342"];
m17_137 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="asset.LocalTime < nextMarketClose", span="345-345"];
m17_141 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="var slip = asset.SlippageModel.GetSlippageApproximation(asset, order)", span="354-354"];
m17_142 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="order.Direction", span="357-357"];
m17_148 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="fill.FillQuantity = order.Quantity", span="370-370"];
m17_149 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="fill.OrderFee = asset.FeeModel.GetOrderFee(asset, order)", span="371-371"];
m17_134 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="return fill;", span="339-339"];
m17_138 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="return fill;", span="347-347"];
m17_140 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="fill.Status = OrderStatus.Filled", span="351-351"];
m17_144 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="fill.FillPrice += slip", span="360-360"];
m17_146 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="fill.FillPrice -= slip", span="363-363"];
m17_147 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="fill.Status == OrderStatus.Filled", span="368-368"];
m17_150 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="return fill;", span="374-374"];
m17_143 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="OrderDirection.Buy", span="359-359"];
m17_145 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="OrderDirection.Sell", span="362-362"];
m17_151 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Orders.Fills.ImmediateFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="334-334"];
m17_152 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="224-224"];
m17_23 [cluster="QuantConnect.Orders.Slippage.ISlippageModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.Slippage.ISlippageModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="27-27"];
m17_53 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="150-150"];
m17_54 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="var utcTime = asset.LocalTime.ConvertToUtc(asset.Exchange.TimeZone)", span="153-153"];
m17_55 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="var fill = new OrderEvent(order, utcTime, 0)", span="154-154"];
m17_56 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="order.Status == OrderStatus.Canceled", span="157-157"];
m17_61 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", color=green, community=0, file="ImmediateFillModel.cs", label="order.Direction", prediction=20, span="165-165"];
m17_64 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="order.StopTriggered = true", span="171-171"];
m17_65 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="asset.Price < order.LimitPrice", span="175-175"];
m17_67 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="fill.FillPrice = order.LimitPrice", span="178-178"];
m17_70 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="order.StopTriggered = true", span="187-187"];
m17_71 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="asset.Price > order.LimitPrice", span="191-191"];
m17_73 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="fill.FillPrice = order.LimitPrice", span="194-194"];
m17_75 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="fill.FillQuantity = order.Quantity", span="203-203"];
m17_76 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="fill.OrderFee = asset.FeeModel.GetOrderFee(asset, order)", span="204-204"];
m17_57 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="return fill;", span="157-157"];
m17_66 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="fill.Status = OrderStatus.Filled", span="177-177"];
m17_72 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="fill.Status = OrderStatus.Filled", span="193-193"];
m17_74 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="fill.Status == OrderStatus.Filled", span="201-201"];
m17_77 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="return fill;", span="207-207"];
m17_62 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="OrderDirection.Buy", span="167-167"];
m17_68 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="OrderDirection.Sell", span="183-183"];
m17_78 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Orders.Fills.ImmediateFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="150-150"];
m17_21 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="122-122"];
m17_79 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="Entry QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="218-218"];
m17_80 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="var utcTime = asset.LocalTime.ConvertToUtc(asset.Exchange.TimeZone)", span="221-221"];
m17_81 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="var fill = new OrderEvent(order, utcTime, 0)", span="222-222"];
m17_82 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="order.Status == OrderStatus.Canceled", span="225-225"];
m17_87 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="order.Direction", span="233-233"];
m17_89 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", color=green, community=0, file="ImmediateFillModel.cs", label="minimumPrice < order.LimitPrice", prediction=21, span="237-237"];
m17_97 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="fill.FillQuantity = order.Quantity", span="261-261"];
m17_98 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="fill.OrderFee = asset.FeeModel.GetOrderFee(asset, order)", span="262-262"];
m17_83 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="return fill;", span="225-225"];
m17_90 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="fill.Status = OrderStatus.Filled", span="240-240"];
m17_94 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="fill.Status = OrderStatus.Filled", span="250-250"];
m17_96 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="fill.Status == OrderStatus.Filled", span="259-259"];
m17_99 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="return fill;", span="265-265"];
m17_88 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="OrderDirection.Buy", span="235-235"];
m17_92 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="OrderDirection.Sell", span="246-246"];
m17_100 [cluster="QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="ImmediateFillModel.cs", label="Exit QuantConnect.Orders.Fills.ImmediateFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="218-218"];
m17_128 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="ImmediateFillModel.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="473-473"];
m17_194 [file="ImmediateFillModel.cs", label="QuantConnect.Orders.Fills.ImmediateFillModel", span=""];
m19_73 [cluster="string.Contains(string)", file="IndicatorExtensionsTests.cs", label="Entry string.Contains(string)", span="0-0"];
m19_82 [cluster="QuantConnect.ToolBox.DukascopyDownloader.DukascopyDownloaderProgram.DukascopyDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.DukascopyDownloader.DukascopyDownloaderProgram.DukascopyDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="30-30"];
m19_71 [cluster="QuantConnect.ToolBox.Program.GetParameterOrExit(System.Collections.Generic.IReadOnlyDictionary<string, object>, string)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.Program.GetParameterOrExit(System.Collections.Generic.IReadOnlyDictionary<string, object>, string)", span="172-172"];
m19_109 [cluster="QuantConnect.ToolBox.Program.GetParameterOrExit(System.Collections.Generic.IReadOnlyDictionary<string, object>, string)", file="IndicatorExtensionsTests.cs", label="!optionsObject.ContainsKey(parameter)", span="174-174"];
m19_110 [cluster="QuantConnect.ToolBox.Program.GetParameterOrExit(System.Collections.Generic.IReadOnlyDictionary<string, object>, string)", file="IndicatorExtensionsTests.cs", label="PrintMessageAndExit(1, ''ERROR: REQUIRED parameter --'' + parameter + ''= is missing'')", span="176-176"];
m19_111 [cluster="QuantConnect.ToolBox.Program.GetParameterOrExit(System.Collections.Generic.IReadOnlyDictionary<string, object>, string)", file="IndicatorExtensionsTests.cs", label="return optionsObject[parameter].ToString();", span="178-178"];
m19_112 [cluster="QuantConnect.ToolBox.Program.GetParameterOrExit(System.Collections.Generic.IReadOnlyDictionary<string, object>, string)", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.ToolBox.Program.GetParameterOrExit(System.Collections.Generic.IReadOnlyDictionary<string, object>, string)", span="172-172"];
m19_80 [cluster="QuantConnect.ToolBox.GDAXDownloader.GDAXDownloaderProgram.GDAXDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.GDAXDownloader.GDAXDownloaderProgram.GDAXDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="30-30"];
m19_113 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="IndicatorExtensionsTests.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m19_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="IndicatorExtensionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m19_90 [cluster="QuantConnect.ToolBox.YahooDownloader.YahooDownloaderProgram.YahooDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.YahooDownloader.YahooDownloaderProgram.YahooDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="28-28"];
m19_79 [cluster="System.Collections.Generic.List<T>.List()", file="IndicatorExtensionsTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m19_84 [cluster="QuantConnect.ToolBox.FxcmVolumeDownload.FxcmVolumeDownloadProgram.FxcmVolumeDownload(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.FxcmVolumeDownload.FxcmVolumeDownloadProgram.FxcmVolumeDownload(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="25-25"];
m19_83 [cluster="QuantConnect.ToolBox.FxcmDownloader.FxcmDownloaderProgram.FxcmDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.FxcmDownloader.FxcmDownloaderProgram.FxcmDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="31-31"];
m19_106 [cluster="System.Console.WriteLine(string)", file="IndicatorExtensionsTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m19_93 [cluster="QuantConnect.ToolBox.IVolatilityEquityConverter.IVolatilityEquityConverterProgram.IVolatilityEquityConverter(string, string, string, string)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.IVolatilityEquityConverter.IVolatilityEquityConverterProgram.IVolatilityEquityConverter(string, string, string, string)", span="47-47"];
m19_77 [cluster="object.ToString()", file="IndicatorExtensionsTests.cs", label="Entry object.ToString()", span="0-0"];
m19_96 [cluster="QuantConnect.ToolBox.QuantQuoteConverter.QuantQuoteConverterProgram.QuantQuoteConverter(string, string, string)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.QuantQuoteConverter.QuantQuoteConverterProgram.QuantQuoteConverter(string, string, string)", span="29-29"];
m19_91 [cluster="QuantConnect.ToolBox.AlgoSeekFuturesConverter.AlgoSeekFuturesProgram.AlgoSeekFuturesConverter(string)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.AlgoSeekFuturesConverter.AlgoSeekFuturesProgram.AlgoSeekFuturesConverter(string)", span="30-30"];
m19_72 [cluster="string.ToLower()", file="IndicatorExtensionsTests.cs", label="Entry string.ToLower()", span="0-0"];
m19_74 [cluster="string.EndsWith(string)", file="IndicatorExtensionsTests.cs", label="Entry string.EndsWith(string)", span="0-0"];
m19_75 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="IndicatorExtensionsTests.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m19_87 [cluster="QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.KrakenDownloader.KrakenDownloaderProgram.KrakenDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="29-29"];
m19_94 [cluster="QuantConnect.ToolBox.KaikoDataConverter.KaikoDataConverterProgram.KaikoDataConverter(string, string, string)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.KaikoDataConverter.KaikoDataConverterProgram.KaikoDataConverter(string, string, string)", span="33-33"];
m19_107 [cluster="System.Console.ReadLine()", file="IndicatorExtensionsTests.cs", label="Entry System.Console.ReadLine()", span="0-0"];
m19_69 [cluster="QuantConnect.Configuration.ToolboxArgumentParser.ParseArguments(string[])", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.Configuration.ToolboxArgumentParser.ParseArguments(string[])", span="51-51"];
m19_97 [cluster="QuantConnect.ToolBox.CoarseUniverseGenerator.CoarseUniverseGeneratorProgram.CoarseUniverseGenerator()", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.CoarseUniverseGenerator.CoarseUniverseGeneratorProgram.CoarseUniverseGenerator()", span="42-42"];
m19_78 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="IndicatorExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m19_85 [cluster="QuantConnect.ToolBox.GoogleDownloader.GoogleDownloaderProgram.GoogleDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.GoogleDownloader.GoogleDownloaderProgram.GoogleDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="29-29"];
m19_105 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="IndicatorExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="118-118"];
m19_70 [cluster="QuantConnect.ToolBox.Program.PrintMessageAndExit(int, string)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.Program.PrintMessageAndExit(int, string)", span="160-160"];
m19_98 [cluster="QuantConnect.ToolBox.Program.PrintMessageAndExit(int, string)", file="IndicatorExtensionsTests.cs", label="!message.IsNullOrEmpty()", span="162-162"];
m19_99 [cluster="QuantConnect.ToolBox.Program.PrintMessageAndExit(int, string)", file="IndicatorExtensionsTests.cs", label="Console.WriteLine(''\n'' + message)", span="164-164"];
m19_103 [cluster="QuantConnect.ToolBox.Program.PrintMessageAndExit(int, string)", file="IndicatorExtensionsTests.cs", label="Environment.Exit(exitCode)", span="169-169"];
m19_100 [cluster="QuantConnect.ToolBox.Program.PrintMessageAndExit(int, string)", file="IndicatorExtensionsTests.cs", label="Console.WriteLine(''\nUse the '--help' parameter for more information'')", span="166-166"];
m19_101 [cluster="QuantConnect.ToolBox.Program.PrintMessageAndExit(int, string)", file="IndicatorExtensionsTests.cs", label="Console.WriteLine(''Press any key to quit'')", span="167-167"];
m19_102 [cluster="QuantConnect.ToolBox.Program.PrintMessageAndExit(int, string)", file="IndicatorExtensionsTests.cs", label="Console.ReadLine()", span="168-168"];
m19_104 [cluster="QuantConnect.ToolBox.Program.PrintMessageAndExit(int, string)", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.ToolBox.Program.PrintMessageAndExit(int, string)", span="160-160"];
m19_0 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.Program.Main(string[])", span="43-43"];
m19_1 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="var optionsObject = ToolboxArgumentParser.ParseArguments(args)", span="45-45"];
m19_2 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="optionsObject.Count == 0", span="46-46"];
m19_4 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="var targetApp = GetParameterOrExit(optionsObject, ''app'').ToLower()", span="51-51"];
m19_6 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="var fromDate = DateTime.ParseExact(GetParameterOrExit(optionsObject, ''from-date''), ''yyyyMMdd-HH:mm:ss'', CultureInfo.InvariantCulture)", span="54-54"];
m19_7 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="var resolution = optionsObject.ContainsKey(''resolution'') ? optionsObject[''resolution''].ToString() : ''''", span="55-55"];
m19_8 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="var tickers = optionsObject.ContainsKey(''tickers'')\r\n                    ? (optionsObject[''tickers''] as Dictionary<string, object>)?.Keys.ToList()\r\n                    : new List<string>()", span="56-58"];
m19_9 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="var toDate = optionsObject.ContainsKey(''to-date'')\r\n                    ? DateTime.ParseExact(optionsObject[''to-date''].ToString(), ''yyyyMMdd-HH:mm:ss'', CultureInfo.InvariantCulture)\r\n                    : DateTime.UtcNow", span="59-61"];
m19_16 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="CryptoiqDownloaderProgram.CryptoiqDownloader(tickers, GetParameterOrExit(optionsObject, ''exchange''), fromDate, toDate)", span="70-70"];
m19_40 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="QuandlBitfinexDownloaderProgram.QuandlBitfinexDownloader(fromDate, GetParameterOrExit(optionsObject, ''api-key''))", span="102-102"];
m19_48 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="AlgoSeekFuturesProgram.AlgoSeekFuturesConverter(GetParameterOrExit(optionsObject, ''date''))", span="119-119"];
m19_51 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="AlgoSeekOptionsConverterProgram.AlgoSeekOptionsConverter(GetParameterOrExit(optionsObject, ''date''))", span="123-123"];
m19_54 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="IVolatilityEquityConverterProgram.IVolatilityEquityConverter(GetParameterOrExit(optionsObject, ''source-dir''),\r\n                                                                                     GetParameterOrExit(optionsObject, ''source-meta-dir''),\r\n                                                                                     GetParameterOrExit(optionsObject, ''destination-dir''),\r\n                                                                                     GetParameterOrExit(optionsObject, ''resolution''))", span="127-130"];
m19_57 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="KaikoDataConverterProgram.KaikoDataConverter(GetParameterOrExit(optionsObject, ''market''),\r\n                                                                     GetParameterOrExit(optionsObject, ''tick-type''),\r\n                                                                     GetParameterOrExit(optionsObject, ''source-dir''))", span="134-136"];
m19_60 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="NseMarketDataConverterProgram.NseMarketDataConverter(GetParameterOrExit(optionsObject, ''source-dir''),\r\n                                                                             GetParameterOrExit(optionsObject, ''destination-dir''))", span="140-141"];
m19_63 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="QuantQuoteConverterProgram.QuantQuoteConverter(GetParameterOrExit(optionsObject, ''destination-dir''),\r\n                                                                       GetParameterOrExit(optionsObject, ''source-dir''),\r\n                                                                       GetParameterOrExit(optionsObject, ''resolution''))", span="145-147"];
m19_3 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="PrintMessageAndExit()", span="48-48"];
m19_5 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="targetApp.Contains(''download'') || targetApp.EndsWith(''dl'')", span="52-52"];
m19_10 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label=targetApp, span="62-62"];
m19_45 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label=targetApp, span="115-115"];
m19_13 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="GDAXDownloaderProgram.GDAXDownloader(tickers, resolution, fromDate, toDate)", span="66-66"];
m19_19 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="DukascopyDownloaderProgram.DukascopyDownloader(tickers, resolution, fromDate, toDate)", span="74-74"];
m19_22 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="FxcmDownloaderProgram.FxcmDownloader(tickers, resolution, fromDate, toDate)", span="78-78"];
m19_25 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="FxcmVolumeDownloadProgram.FxcmVolumeDownload(tickers, resolution, fromDate, toDate)", span="82-82"];
m19_28 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="GoogleDownloaderProgram.GoogleDownloader(tickers, resolution, fromDate, toDate)", span="86-86"];
m19_31 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="IBDownloaderProgram.IBDownloader(tickers, resolution, fromDate, toDate)", span="90-90"];
m19_34 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="KrakenDownloaderProgram.KrakenDownloader(tickers, resolution, fromDate, toDate)", span="94-94"];
m19_37 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="OandaDownloaderProgram.OandaDownloader(tickers, resolution, fromDate, toDate)", span="98-98"];
m19_43 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="YahooDownloaderProgram.YahooDownloader(tickers, resolution, fromDate, toDate)", span="106-106"];
m19_11 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''gdaxdl''", span="64-64"];
m19_14 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''cdl''", span="68-68"];
m19_17 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''ddl''", span="72-72"];
m19_20 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''fdl''", span="76-76"];
m19_23 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''fvdl''", span="80-80"];
m19_26 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''gdl''", span="84-84"];
m19_29 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''ibdl''", span="88-88"];
m19_32 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''kdl''", span="92-92"];
m19_35 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''odl''", span="96-96"];
m19_38 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''qbdl''", span="100-100"];
m19_41 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''ydl''", span="104-104"];
m19_44 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="PrintMessageAndExit(1, ''ERROR: Unrecognized --app value'')", span="109-109"];
m19_12 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''gdaxdownloader''", span="65-65"];
m19_15 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''cryptoiqdownloader''", span="69-69"];
m19_18 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''dukascopydownloader''", span="73-73"];
m19_21 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''fxcmdownloader''", span="77-77"];
m19_24 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''fxcmvolumedownload''", span="81-81"];
m19_27 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''googledownloader''", span="85-85"];
m19_30 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''ibdownloader''", span="89-89"];
m19_33 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''krakendownloader''", span="93-93"];
m19_36 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''oandadownloader''", span="97-97"];
m19_39 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''quandlbitfinexdownloader''", span="101-101"];
m19_42 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''yahoodownloader''", span="105-105"];
m19_46 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''asfc''", span="117-117"];
m19_49 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''asoc''", span="121-121"];
m19_52 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''ivec''", span="125-125"];
m19_55 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''kdc''", span="132-132"];
m19_58 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''nmdc''", span="138-138"];
m19_61 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''qqc''", span="143-143"];
m19_64 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''cug''", span="149-149"];
m19_67 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="PrintMessageAndExit(1, ''ERROR: Unrecognized --app value'')", span="154-154"];
m19_47 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''algoseekfuturesconverter''", span="118-118"];
m19_50 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''algoseekoptionsconverter''", span="122-122"];
m19_53 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''ivolatilityequityconverter''", span="126-126"];
m19_56 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''kaikodataconverter''", span="133-133"];
m19_59 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''nsemarketdataconverter''", span="139-139"];
m19_62 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''quantquoteconverter''", span="144-144"];
m19_65 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="''coarseuniversegenerator''", span="150-150"];
m19_66 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="CoarseUniverseGeneratorProgram.CoarseUniverseGenerator()", span="151-151"];
m19_68 [cluster="QuantConnect.ToolBox.Program.Main(string[])", file="IndicatorExtensionsTests.cs", label="Exit QuantConnect.ToolBox.Program.Main(string[])", span="43-43"];
m19_89 [cluster="QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloaderProgram.QuandlBitfinexDownloader(System.DateTime, string)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.QuandlBitfinexDownloader.QuandlBitfinexDownloaderProgram.QuandlBitfinexDownloader(System.DateTime, string)", span="26-26"];
m19_92 [cluster="QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverterProgram.AlgoSeekOptionsConverter(string)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.AlgoSeekOptionsConverter.AlgoSeekOptionsConverterProgram.AlgoSeekOptionsConverter(string)", span="29-29"];
m19_86 [cluster="QuantConnect.ToolBox.IBDownloader.IBDownloaderProgram.IBDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.IBDownloader.IBDownloaderProgram.IBDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="31-31"];
m19_88 [cluster="QuantConnect.ToolBox.OandaDownloader.OandaDownloaderProgram.OandaDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.OandaDownloader.OandaDownloaderProgram.OandaDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="30-30"];
m19_95 [cluster="QuantConnect.ToolBox.NseMarketDataConverter.NseMarketDataConverterProgram.NseMarketDataConverter(string, string)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.NseMarketDataConverter.NseMarketDataConverterProgram.NseMarketDataConverter(string, string)", span="30-30"];
m19_81 [cluster="QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloaderProgram.CryptoiqDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", file="IndicatorExtensionsTests.cs", label="Entry QuantConnect.ToolBox.CryptoiqDownloader.CryptoiqDownloaderProgram.CryptoiqDownloader(System.Collections.Generic.IList<string>, string, System.DateTime, System.DateTime)", span="28-28"];
m19_108 [cluster="System.Environment.Exit(int)", file="IndicatorExtensionsTests.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m20_0 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="IndicatorResult.cs", label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45"];
m20_1 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="IndicatorResult.cs", label="Value = value", span="47-47"];
m20_2 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="IndicatorResult.cs", label="Status = status", span="48-48"];
m20_3 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="IndicatorResult.cs", label="Exit QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45"];
m20_4 [file="IndicatorResult.cs", label="QuantConnect.Indicators.IndicatorResult", span=""];
m23_67 [cluster="Unk.GetEntry", file="Messaging.cs", label="Entry Unk.GetEntry", span=""];
m23_69 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="Messaging.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal)", span="48-48"];
m23_62 [cluster="Unk.Where", file="Messaging.cs", label="Entry Unk.Where", span=""];
m23_88 [cluster="decimal.RoundToSignificantDigits(int)", file="Messaging.cs", label="Entry decimal.RoundToSignificantDigits(int)", span="139-139"];
m23_71 [cluster="Unk.Trace", file="Messaging.cs", label="Entry Unk.Trace", span=""];
m23_17 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Messaging.cs", label="Entry QuantConnect.Securities.Cash.AddAmount(decimal)", span="100-100"];
m23_19 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Messaging.cs", label="Amount += amount", span="104-104"];
m23_20 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Messaging.cs", label="return Amount;", span="105-105"];
m23_21 [cluster="QuantConnect.Securities.Cash.AddAmount(decimal)", file="Messaging.cs", label="Exit QuantConnect.Securities.Cash.AddAmount(decimal)", span="100-100"];
m23_9 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Messaging.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="82-82"];
m23_10 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Messaging.cs", label=_isBaseCurrency, span="84-84"];
m23_12 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Messaging.cs", label="var rate = data.Value", span="86-86"];
m23_11 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Messaging.cs", label="return;", span="84-84"];
m23_13 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Messaging.cs", label=_invertRealTimePrice, span="87-87"];
m23_14 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Messaging.cs", label="rate = 1/rate", span="89-89"];
m23_15 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Messaging.cs", label="ConversionRate = rate", span="91-91"];
m23_16 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="Messaging.cs", label="Exit QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="82-82"];
m23_83 [cluster="QuantConnect.Securities.Cash.ToString()", file="Messaging.cs", label="Entry QuantConnect.Securities.Cash.ToString()", span="196-196"];
m23_84 [cluster="QuantConnect.Securities.Cash.ToString()", file="Messaging.cs", label="decimal rate = ConversionRate", span="199-199"];
m23_85 [cluster="QuantConnect.Securities.Cash.ToString()", file="Messaging.cs", label="rate = rate < 1000 ? rate.RoundToSignificantDigits(5) : Math.Round(rate, 2)", span="200-200"];
m23_86 [cluster="QuantConnect.Securities.Cash.ToString()", file="Messaging.cs", label="return string.Format(''{0}: {1,10} @ ${2,10} = {3}'', Symbol, Amount.ToString(''0.00''), rate.ToString(''0.00####''), ValueInAccountCurrency.ToString(''C''));", span="201-201"];
m23_87 [cluster="QuantConnect.Securities.Cash.ToString()", file="Messaging.cs", label="Exit QuantConnect.Securities.Cash.ToString()", span="196-196"];
m23_66 [cluster="Unk.Min", file="Messaging.cs", label="Entry Unk.Min", span=""];
m23_80 [cluster="lambda expression", file="Messaging.cs", label="Entry lambda expression", span="169-169"];
m23_73 [cluster="lambda expression", file="Messaging.cs", label="Entry lambda expression", span="147-147"];
m23_77 [cluster="lambda expression", file="Messaging.cs", label="QuantConnect.Symbol.Create(x, SecurityType.Forex, market)", span="168-168"];
m23_76 [cluster="lambda expression", file="Messaging.cs", label="Entry lambda expression", span="168-168"];
m23_74 [cluster="lambda expression", file="Messaging.cs", label="config.SecurityType == SecurityType.Forex", span="147-147"];
m23_75 [cluster="lambda expression", file="Messaging.cs", label="Exit lambda expression", span="147-147"];
m23_78 [cluster="lambda expression", file="Messaging.cs", label="Exit lambda expression", span="168-168"];
m23_81 [cluster="lambda expression", file="Messaging.cs", label="x.Resolution", span="169-169"];
m23_82 [cluster="lambda expression", file="Messaging.cs", label="Exit lambda expression", span="169-169"];
m23_70 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="Messaging.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="69-69"];
m23_79 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="Messaging.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m23_22 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Messaging.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="113-113"];
m23_23 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Messaging.cs", label=_locker, span="115-115"];
m23_24 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Messaging.cs", label="Amount = amount", span="117-117"];
m23_25 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="Messaging.cs", label="Exit QuantConnect.Securities.Cash.SetAmount(decimal)", span="113-113"];
m23_68 [cluster="Unk.Add", file="Messaging.cs", label="Entry Unk.Add", span=""];
m23_8 [cluster="string.ToUpper()", file="Messaging.cs", label="Entry string.ToUpper()", span="0-0"];
m23_61 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Messaging.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m23_63 [cluster="Unk.FirstOrDefault", file="Messaging.cs", label="Entry Unk.FirstOrDefault", span=""];
m23_89 [cluster="System.Math.Round(decimal, int)", file="Messaging.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m23_91 [cluster="string.Format(string, params object[])", file="Messaging.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m23_52 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="177-177"];
m23_26 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", span="129-129"];
m23_27 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="Symbol == CashBook.AccountCurrency", span="131-131"];
m23_32 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="subscriptions.Count == 0", span="139-139"];
m23_36 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="subscriptions.Subscriptions.Where(config => config.SecurityType == SecurityType.Forex)", span="147-147"];
m23_44 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="string market = (from config in subscriptions.Subscriptions\r\n                             where config.SecurityType == SecurityType.Forex\r\n                             select config.Market).FirstOrDefault() ?? Market.FXCM", span="163-165"];
m23_46 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="var minimumResolution = subscriptions.Subscriptions.Select(x => x.Resolution).DefaultIfEmpty(Resolution.Minute).Min()", span="169-169"];
m23_51 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(market, symbol.Value, SecurityType.Forex)", span="176-176"];
m23_53 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="var config = subscriptions.Add(objectType, symbol, minimumResolution, marketHoursDbEntry.DataTimeZone, exchangeHours.TimeZone, false, true, false, true)", span="179-179"];
m23_56 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="securities.Add(config.Symbol, security)", span="182-182"];
m23_28 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="SecuritySymbol = QuantConnect.Symbol.Empty", span="133-133"];
m23_29 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="_isBaseCurrency = true", span="134-134"];
m23_30 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="ConversionRate = 1.0m", span="135-135"];
m23_31 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="return null;", span="136-136"];
m23_33 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="throw new InvalidOperationException(''Unable to add cash when no subscriptions are present. Please add subscriptions in the Initialize() method.'');", span="141-141"];
m23_34 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="string normal = Symbol + CashBook.AccountCurrency", span="145-145"];
m23_35 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="string invert = CashBook.AccountCurrency + Symbol", span="146-146"];
m23_37 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="config.Symbol.Value == normal", span="149-149"];
m23_49 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="symbol.Value == normal || symbol.Value == invert", span="173-173"];
m23_40 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="config.Symbol.Value == invert", span="154-154"];
m23_50 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="_invertRealTimePrice = symbol.Value == invert", span="175-175"];
m23_38 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="SecuritySymbol = config.Symbol", span="151-151"];
m23_41 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="SecuritySymbol = config.Symbol", span="156-156"];
m23_39 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="return null;", span="152-152"];
m23_42 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="_invertRealTimePrice = true", span="157-157"];
m23_43 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="return null;", span="158-158"];
m23_45 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="var currencyPairs = Forex.Forex.CurrencyPairs.Select(x => QuantConnect.Symbol.Create(x, SecurityType.Forex, market))", span="168-168"];
m23_48 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label=currencyPairs, span="171-171"];
m23_47 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (TradeBar)", span="170-170"];
m23_59 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.AccountCurrency));", span="189-189"];
m23_57 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="Log.Trace(''Cash.EnsureCurrencyDataFeed(): Adding '' + symbol.Value + '' for cash '' + Symbol + '' currency feed'')", span="183-183"];
m23_54 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="var security = new Forex.Forex(exchangeHours, this, config, 1m)", span="180-180"];
m23_55 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="SecuritySymbol = config.Symbol", span="181-181"];
m23_58 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="return security;", span="184-184"];
m23_60 [cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="Messaging.cs", label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", span="129-129"];
m23_0 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Messaging.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="67-67"];
m23_1 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Messaging.cs", label="symbol == null || symbol.Length != 3", span="69-69"];
m23_3 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Messaging.cs", label="Amount = amount", span="73-73"];
m23_4 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Messaging.cs", label="ConversionRate = conversionRate", span="74-74"];
m23_5 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Messaging.cs", label="Symbol = symbol.ToUpper()", span="75-75"];
m23_2 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Messaging.cs", label="throw new ArgumentException(''Cash symbols must be exactly 3 characters.'');", span="71-71"];
m23_6 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Messaging.cs", label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="67-67"];
m23_72 [cluster="string.Format(string, object, object)", file="Messaging.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m23_64 [cluster="Unk.Select", file="Messaging.cs", label="Entry Unk.Select", span=""];
m23_65 [cluster="Unk.DefaultIfEmpty", file="Messaging.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m23_90 [cluster="decimal.ToString(string)", file="Messaging.cs", label="Entry decimal.ToString(string)", span="0-0"];
m23_92 [file="Messaging.cs", label="QuantConnect.Securities.Cash", span=""];
m23_93 [file="Messaging.cs", label=market, span=""];
m38_32 [cluster="string.Format(string, params object[])", file="OrderEvent.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m38_31 [cluster="string.Format(string, object, object, object)", file="OrderEvent.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m38_0 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", span="101-101"];
m38_1 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="OrderId = orderId", span="103-103"];
m38_2 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="Symbol = symbol", span="104-104"];
m38_3 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="UtcTime = utcTime", span="105-105"];
m38_4 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="Status = status", span="106-106"];
m38_5 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="Direction = direction", span="107-107"];
m38_6 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="FillPrice = fillPrice", span="108-108"];
m38_8 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="FillQuantity = fillQuantity", span="110-110"];
m38_9 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="OrderFee = Math.Abs(orderFee)", span="111-111"];
m38_10 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="Message = message", span="112-112"];
m38_7 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="FillPriceCurrency = string.Empty", span="109-109"];
m38_11 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="OrderEvent.cs", label="Exit QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", span="101-101"];
m38_33 [cluster="string.Format(string, object, object)", file="OrderEvent.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m38_37 [cluster="object.MemberwiseClone()", file="OrderEvent.cs", label="Entry object.MemberwiseClone()", span="0-0"];
m38_25 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="146-146"];
m38_26 [cluster="QuantConnect.Orders.OrderEvent.ToString()", color=green, community=0, file="OrderEvent.cs", label="var message = FillQuantity == 0 \r\n                ? string.Format(''OrderID: {0} Symbol: {1} Status: {2}'', OrderId, Symbol, Status) \r\n                : string.Format(''OrderID: {0} Symbol: {1} Status: {2} Quantity: {3} FillPrice: {4} {5}'', OrderId, Symbol, Status, FillQuantity, FillPrice, FillPriceCurrency)", prediction=22, span="148-150"];
m38_27 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="OrderFee != 0m", span="153-153"];
m38_28 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="message += string.Format('' OrderFee: {0} {1}'', OrderFee, CashBook.AccountCurrency)", span="153-153"];
m38_29 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="return message;", span="155-155"];
m38_30 [cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OrderEvent.cs", label="Exit QuantConnect.Orders.OrderEvent.ToString()", span="146-146"];
m38_13 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="122-122"];
m38_14 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="OrderId = order.Id", span="124-124"];
m38_15 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Symbol = order.Symbol", span="125-125"];
m38_16 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Status = order.Status", span="126-126"];
m38_17 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Direction = order.Direction", span="127-127"];
m38_20 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="FillPriceCurrency = order.PriceCurrency", span="132-132"];
m38_21 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="UtcTime = utcTime", span="134-134"];
m38_22 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="OrderFee = Math.Abs(orderFee)", span="135-135"];
m38_23 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Message = message", span="136-136"];
m38_18 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="FillQuantity = 0", span="130-130"];
m38_19 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="FillPrice = 0", span="131-131"];
m38_24 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="OrderEvent.cs", label="Exit QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="122-122"];
m38_34 [cluster="QuantConnect.Orders.OrderEvent.Clone()", file="OrderEvent.cs", label="Entry QuantConnect.Orders.OrderEvent.Clone()", span="162-162"];
m38_35 [cluster="QuantConnect.Orders.OrderEvent.Clone()", file="OrderEvent.cs", label="return (OrderEvent)MemberwiseClone();", span="164-164"];
m38_36 [cluster="QuantConnect.Orders.OrderEvent.Clone()", file="OrderEvent.cs", label="Exit QuantConnect.Orders.OrderEvent.Clone()", span="162-162"];
m38_38 [file="OrderEvent.cs", label="QuantConnect.Orders.OrderEvent", span=""];
m41_160 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="RegressionTests.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m41_182 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="396-396"];
m41_183 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="RegressionTests.cs", label="MarketSimulation?.SimulateMarketConditions(this, Algorithm)", span="399-399"];
m41_184 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SimulateMarket()", span="396-396"];
m41_175 [cluster="Unk.All", file="RegressionTests.cs", label="Entry Unk.All", span=""];
m41_203 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m41_52 [cluster="int.ToString()", file="RegressionTests.cs", label="Entry int.ToString()", span="0-0"];
m41_56 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="424-424"];
m41_198 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs", label="e.Status.IsClosed() && _pendingOptionAssignments.Contains(e.Symbol)", span="426-426"];
m41_199 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs", label="_pendingOptionAssignments.Remove(e.Symbol)", span="428-428"];
m41_200 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs", label="base.OnOrderEvent(e)", span="431-431"];
m41_201 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="424-424"];
m41_18 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", span="105-105"];
m41_163 [cluster="QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="54-54"];
m41_164 [cluster="QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="38-38"];
m41_21 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="RegressionTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m41_195 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="RegressionTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m41_210 [cluster="QuantConnect.Orders.Order.Clone()", file="RegressionTests.cs", label="Entry QuantConnect.Orders.Order.Clone()", span="241-241"];
m41_22 [cluster="Holding.cstr", file="RegressionTests.cs", label="Entry Holding.cstr", span=""];
m41_24 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="281-281"];
m41_25 [cluster="TestCaseData.cstr", file="RegressionTests.cs", label="Entry TestCaseData.cstr", span=""];
m41_26 [cluster="Unk.SetName", file="RegressionTests.cs", label="Entry Unk.SetName", span=""];
m41_31 [cluster="lambda expression", file="RegressionTests.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m41_32 [cluster="lambda expression", file="RegressionTests.cs", label="x.Value", span="119-119"];
m41_33 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="119-119"];
m41_176 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="245-245"];
m41_179 [cluster="lambda expression", file="RegressionTests.cs", label="Entry lambda expression", span="378-378"];
m41_177 [cluster="lambda expression", file="RegressionTests.cs", label="x.Key", span="245-245"];
m41_178 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="245-245"];
m41_180 [cluster="lambda expression", file="RegressionTests.cs", label="x.Status.IsClosed()", span="378-378"];
m41_181 [cluster="lambda expression", file="RegressionTests.cs", label="Exit lambda expression", span="378-378"];
m41_23 [cluster="Unk.ToList", file="RegressionTests.cs", label="Entry Unk.ToList", span=""];
m41_34 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127"];
m41_35 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Algorithm.LiveMode", span="129-129"];
m41_36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Log.Trace(''BacktestingBrokerage.PlaceOrder(): Type: '' + order.Type + '' Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="131-131"];
m41_37 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="order.Status == OrderStatus.New", span="134-134"];
m41_40 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="SetPendingOrder(order)", span="139-139"];
m41_41 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="var orderId = order.Id.ToString()", span="142-142"];
m41_42 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="!order.BrokerId.Contains(orderId)", span="143-143"];
m41_43 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="order.BrokerId.Add(orderId)", span="143-143"];
m41_45 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="var submitted = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="147-147"];
m41_38 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label=_needsScanLock, span="136-136"];
m41_48 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="return false;", span="152-152"];
m41_39 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="_needsScan = true", span="138-138"];
m41_44 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="int orderFee = 0", span="146-146"];
m41_46 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="OnOrderEvent(submitted)", span="148-148"];
m41_47 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="return true;", span="150-150"];
m41_49 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="127-127"];
m41_27 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Algorithm = algorithm", span="292-292"];
m41_28 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Statistics = statistics", span="293-293"];
m41_29 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="RegressionTests.cs", label="Language = language", span="294-294"];
m41_155 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="RegressionTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m41_5 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var basicTemplateStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''264.956%''},\r\n                {''Drawdown'', ''2.200%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.411''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.752''},\r\n                {''Beta'', ''0.186''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''1.316''},\r\n                {''Tracking Error'', ''0.246''},\r\n                {''Treynor Ratio'', ''4.572''},\r\n                {''Total Fees'', ''$3.09''}\r\n            }", span="32-53"];
m41_6 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="RegressionTests.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''0.051''},\r\n                {''Beta'', ''0.002''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-2.451''},\r\n                {''Tracking Error'', ''0.194''},\r\n                {''Treynor Ratio'', ''29.506''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", prediction=23, span="55-76"];
m41_7 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.076''},\r\n                {''Beta'', ''0.039''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-2.167''},\r\n                {''Tracking Error'', ''0.112''},\r\n                {''Treynor Ratio'', ''-1.755''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="78-99"];
m41_8 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.023''},\r\n                {''Beta'', ''0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.203''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''-33.666''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="101-122"];
m41_158 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="78-78"];
m41_185 [cluster="QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="31-31"];
m41_19 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.GetAccountHoldings()", file="RegressionTests.cs", label="return (from kvp in Algorithm.Portfolio.Securities.OrderBy(x => x.Value.Symbol)\r\n                    where kvp.Value.Holdings.AbsoluteQuantity > 0\r\n                    select new Holding(kvp.Value)).ToList();", span="108-110"];
m41_30 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m41_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.764''},\r\n                {''Beta'', ''0.186''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''1.957''},\r\n                {''Tracking Error'', ''0.171''},\r\n                {''Treynor Ratio'', ''4.634''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="239-260"];
m41_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="return new List<AlgorithmStatisticsTestParameters>\r\n            {\r\n                // CSharp\r\n                new AlgorithmStatisticsTestParameters(''AddRemoveSecurityRegressionAlgorithm'', addRemoveSecurityRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''CustomDataRegressionAlgorithm'', customDataRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxBaseDataUniverseSelectionAlgorithm'', dropboxBaseDataUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''DropboxUniverseSelectionAlgorithm'', dropboxUniverseSelectionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''LimitFillRegressionAlgorithm'', limitFillRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''ParameterizedAlgorithm'', parameterizedStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''RegressionAlgorithm'', regressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UniverseSelectionRegressionAlgorithm'', universeSelectionRegressionStatistics, Language.CSharp),\r\n                new AlgorithmStatisticsTestParameters(''UpdateOrderRegressionAlgorithm'', updateOrderRegressionStatistics, Language.CSharp),\r\n\r\n                // FSharp\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.FSharp),\r\n\r\n                // VisualBasic\r\n                new AlgorithmStatisticsTestParameters(''BasicTemplateAlgorithm'', basicTemplateStatistics, Language.VisualBasic),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)).ToArray();", span="262-281"];
m41_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="30-30"];
m41_202 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="RegressionTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m41_174 [cluster="QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOptionPositionAssigned(QuantConnect.Orders.OrderEvent)", span="132-132"];
m41_91 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232"];
m41_92 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label=_needsScanLock, span="234-234"];
m41_93 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="!_needsScan", span="237-237"];
m41_94 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="return;", span="239-239"];
m41_95 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="var stillNeedsScan = false", span="242-242"];
m41_96 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="_pending.OrderBy(x => x.Key)", span="245-245"];
m41_153 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="_needsScan = stillNeedsScan", span="389-389"];
m41_97 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="var order = kvp.Value", span="247-247"];
m41_98 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="order == null", span="248-248"];
m41_99 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Log.Error(''BacktestingBrokerage.Scan(): Null pending order found: '' + kvp.Key)", span="250-250"];
m41_101 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="order.Status.IsClosed()", span="255-255"];
m41_102 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="_pending.TryRemove(order.Id, out order)", span="258-258"];
m41_103 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="order.Time == Algorithm.UtcTime && order.Type != OrderType.Market", span="263-263"];
m41_105 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="var fills = new[] { new OrderEvent(order, Algorithm.UtcTime, 0) }", span="269-269"];
m41_107 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="!Algorithm.Securities.TryGetValue(order.Symbol, out security)", span="272-272"];
m41_108 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Log.Error(''BacktestingBrokerage.Scan(): Unable to process order: '' + order.Id + ''. The security no longer exists.'')", span="274-274"];
m41_109 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0m){Status = OrderStatus.Invalid})", span="276-276"];
m41_110 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="_pending.TryRemove(order.Id, out order)", span="277-277"];
m41_111 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="!Algorithm.BrokerageModel.CanExecuteOrder(security, order)", span="282-282"];
m41_113 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="hasSufficientBuyingPower = security.BuyingPowerModel.HasSufficientBuyingPowerForOrder(Algorithm.Portfolio, security, order)", span="291-291"];
m41_116 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="_pending.TryRemove(order.Id, out pending)", span="297-297"];
m41_117 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="order.Status = OrderStatus.Invalid", span="298-298"];
m41_118 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OnOrderEvent(new OrderEvent(order, Algorithm.UtcTime, 0, ''Error in GetSufficientCapitalForOrder''))", span="299-299"];
m41_120 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Error executing margin models: {1}'', order.Id, err.Message))", span="302-302"];
m41_123 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="order.Type", span="315-315"];
m41_125 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="fills = new[] { model.LimitFill(security, order as LimitOrder) }", span="318-318"];
m41_127 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="fills = new[] { model.StopMarketFill(security, order as StopMarketOrder) }", span="322-322"];
m41_129 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="fills = new[] { model.MarketFill(security, order as MarketOrder) }", span="326-326"];
m41_131 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="fills = new[] { model.StopLimitFill(security, order as StopLimitOrder) }", span="330-330"];
m41_133 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="fills = new[] { model.MarketOnOpenFill(security, order as MarketOnOpenOrder) }", span="334-334"];
m41_135 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="fills = new[] { model.MarketOnCloseFill(security, order as MarketOnCloseOrder) }", span="338-338"];
m41_138 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="fills = option.OptionExerciseModel.OptionExercise(option, order as OptionExerciseOrder).ToArray()", span="343-343"];
m41_141 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'',\r\n                                order.Id, order.Type, err.Message))", span="350-351"];
m41_142 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="order.Status = OrderStatus.Invalid", span="357-357"];
m41_143 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id,\r\n                            order.GetValue(security).SmartRounding()))", span="358-359"];
m41_145 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="order.Status != fill.Status || fill.FillQuantity != 0", span="365-365"];
m41_147 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="order.Type == OrderType.OptionExercise", span="371-371"];
m41_148 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="fill.Message = order.Tag", span="373-373"];
m41_151 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="_pending.TryRemove(order.Id, out order)", span="380-380"];
m41_100 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="_pending.TryRemove(kvp.Key, out order)", span="251-251"];
m41_104 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="stillNeedsScan = true", span="265-265"];
m41_106 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Security security", span="271-271"];
m41_144 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label=fills, span="362-362"];
m41_150 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="fills.All(x => x.Status.IsClosed())", span="378-378"];
m41_122 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="var model = security.FillModel", span="310-310"];
m41_137 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="var option = (Option)security", span="342-342"];
m41_112 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="bool hasSufficientBuyingPower", span="288-288"];
m41_114 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label=Exception, span="293-293"];
m41_121 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label=hasSufficientBuyingPower, span="307-307"];
m41_115 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Order pending", span="296-296"];
m41_119 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Log.Error(err)", span="301-301"];
m41_124 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OrderType.Limit", span="317-317"];
m41_126 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OrderType.StopMarket", span="321-321"];
m41_128 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OrderType.Market", span="325-325"];
m41_130 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OrderType.StopLimit", span="329-329"];
m41_132 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OrderType.MarketOnOpen", span="333-333"];
m41_134 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OrderType.MarketOnClose", span="337-337"];
m41_136 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OrderType.OptionExercise", span="341-341"];
m41_139 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label=Exception, span="347-347"];
m41_140 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Log.Error(err)", span="349-349"];
m41_146 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OnOrderEvent(fill)", span="368-368"];
m41_149 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="OnOptionPositionAssigned(fill)", span="374-374"];
m41_152 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="stillNeedsScan = true", span="384-384"];
m41_154 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="232-232"];
m41_162 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="RegressionTests.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="426-426"];
m41_74 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="RegressionTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m41_90 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="RegressionTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m41_173 [cluster="decimal.SmartRounding()", file="RegressionTests.cs", label="Entry decimal.SmartRounding()", span="207-207"];
m41_194 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="RegressionTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m41_9 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-56.034%''},\r\n                {''Drawdown'', ''3.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-3.755%''},\r\n                {''Sharpe Ratio'', ''-3.629''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.643''},\r\n                {''Beta'', ''0.684''},\r\n                {''Annual Standard Deviation'', ''0.173''},\r\n                {''Annual Variance'', ''0.03''},\r\n                {''Information Ratio'', ''-3.927''},\r\n                {''Tracking Error'', ''0.166''},\r\n                {''Treynor Ratio'', ''-0.918''},\r\n                {''Total Fees'', ''$2.00''}\r\n            }", span="124-145"];
m41_10 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''99.900%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''0.453''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''48.714''},\r\n                {''Beta'', ''50.259''},\r\n                {''Annual Standard Deviation'', ''118.922''},\r\n                {''Annual Variance'', ''14142.47''},\r\n                {''Information Ratio'', ''0.452''},\r\n                {''Tracking Error'', ''118.917''},\r\n                {''Treynor Ratio'', ''1.072''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="147-168"];
m41_11 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.906''},\r\n                {''Beta'', ''0.018''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.648''},\r\n                {''Tracking Error'', ''0.236''},\r\n                {''Treynor Ratio'', ''50.372''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="170-191"];
m41_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.151''},\r\n                {''Beta'', ''-0.073''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.506''},\r\n                {''Tracking Error'', ''0.146''},\r\n                {''Treynor Ratio'', ''-1.873''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="193-214"];
m41_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.178''},\r\n                {''Beta'', ''-0.071''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.296''},\r\n                {''Tracking Error'', ''0.161''},\r\n                {''Treynor Ratio'', ''-2.319''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="216-237"];
m41_4 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="RegressionTests.cs", label="Entry QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="30-30"];
m41_172 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="191-191"];
m41_0 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50"];
m41_1 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="RegressionTests.cs", label="Algorithm = algorithm", span="53-53"];
m41_2 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="RegressionTests.cs", label="_pending = new ConcurrentDictionary<int, Order>()", span="54-54"];
m41_3 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="50-50"];
m41_57 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160"];
m41_58 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Algorithm.LiveMode", span="162-162"];
m41_59 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Log.Trace(''BacktestingBrokerage.UpdateOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity + '' Status: '' + order.Status)", span="164-164"];
m41_62 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="!_pending.TryGetValue(order.Id, out pending)", span="170-170"];
m41_65 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="SetPendingOrder(order)", span="177-177"];
m41_66 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="var orderId = order.Id.ToString()", span="180-180"];
m41_67 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="!order.BrokerId.Contains(orderId)", span="181-181"];
m41_68 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="order.BrokerId.Add(orderId)", span="181-181"];
m41_70 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="var updated = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Submitted }", span="185-185"];
m41_60 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label=_needsScanLock, span="167-167"];
m41_61 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Order pending", span="169-169"];
m41_63 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="return false;", span="173-173"];
m41_64 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="_needsScan = true", span="176-176"];
m41_69 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="int orderFee = 0", span="184-184"];
m41_71 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="OnOrderEvent(updated)", span="186-186"];
m41_72 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="return true;", span="188-188"];
m41_73 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="160-160"];
m41_186 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="407-407"];
m41_187 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="RegressionTests.cs", label="_pendingOptionAssignments.Contains(option.Symbol)", span="410-410"];
m41_189 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="RegressionTests.cs", label="_pendingOptionAssignments.Add(option.Symbol)", span="412-412"];
m41_190 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="RegressionTests.cs", label="var request = new SubmitOrderRequest(OrderType.OptionExercise, option.Type, option.Symbol, -quantity, 0m, 0m, Algorithm.UtcTime, ''Simulated option assignment before expiration'')", span="414-414"];
m41_188 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="RegressionTests.cs", label="return;", span="410-410"];
m41_191 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="RegressionTests.cs", label="var ticket = Algorithm.Transactions.ProcessRequest(request)", span="416-416"];
m41_192 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="RegressionTests.cs", label="Log.Trace($''BacktestingBrokerage.ActivateOptionAssignment(): OrderId: {ticket.OrderId}'')", span="417-417"];
m41_193 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="407-407"];
m41_53 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m41_170 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="RegressionTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m41_17 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RegressionTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m41_157 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="RegressionTests.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
m41_169 [cluster="QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.OptionExercise.IOptionExerciseModel.OptionExercise(QuantConnect.Securities.Option.Option, QuantConnect.Orders.OptionExerciseOrder)", span="33-33"];
m41_165 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="30-30"];
m41_204 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="437-437"];
m41_205 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Connect()", span="437-437"];
m41_196 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102"];
m41_75 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196"];
m41_76 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Algorithm.LiveMode", span="198-198"];
m41_77 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Log.Trace(''BacktestingBrokerage.CancelOrder(): Symbol: '' + order.Symbol.Value + '' Quantity: '' + order.Quantity)", span="200-200"];
m41_80 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="!_pending.TryRemove(order.Id, out pending)", span="206-206"];
m41_82 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="var orderId = order.Id.ToString()", span="213-213"];
m41_83 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="!order.BrokerId.Contains(orderId)", span="214-214"];
m41_84 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="order.BrokerId.Add(order.Id.ToString())", span="214-214"];
m41_86 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="var canceled = new OrderEvent(order, Algorithm.UtcTime, orderFee) { Status = OrderStatus.Canceled }", span="218-218"];
m41_78 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label=_needsScanLock, span="203-203"];
m41_79 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Order pending", span="205-205"];
m41_81 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="return false;", span="209-209"];
m41_85 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="int orderFee = 0", span="217-217"];
m41_87 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="OnOrderEvent(canceled)", span="219-219"];
m41_88 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="return true;", span="221-221"];
m41_89 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="196-196"];
m41_166 [cluster="QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="46-46"];
m41_197 [cluster="QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", file="RegressionTests.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.ProcessRequest(QuantConnect.Orders.OrderRequest)", span="133-133"];
m41_171 [cluster="string.Format(string, object, object, object)", file="RegressionTests.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m41_54 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RegressionTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m41_206 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="445-445"];
m41_207 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Disconnect()", span="445-445"];
m41_51 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="455-455"];
m41_208 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="_pending[order.Id] = order.Clone()", span="458-458"];
m41_209 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", file="RegressionTests.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.SetPendingOrder(QuantConnect.Orders.Order)", span="455-455"];
m41_156 [cluster="QuantConnect.Orders.OrderStatus.IsClosed()", file="RegressionTests.cs", label="Entry QuantConnect.Orders.OrderStatus.IsClosed()", span="27-27"];
m41_168 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnCloseFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnCloseOrder)", span="70-70"];
m41_167 [cluster="QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.Fills.IFillModel.MarketOnOpenFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOnOpenOrder)", span="62-62"];
m41_161 [cluster="string.Format(string, object, object)", file="RegressionTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m41_20 [cluster="Unk.Select", file="RegressionTests.cs", label="Entry Unk.Select", span=""];
m41_50 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="RegressionTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m41_55 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m41_211 [file="RegressionTests.cs", label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span=""];
m42_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.ZipEntryNameSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionFactory.ZipEntryNameSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="45-45"];
m42_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionFactory.TextSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionFactory.TextSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="61-61"];
m42_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="ScheduledEventFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", span="39-39"];
m42_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", file="ScheduledEventFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.ISubscriptionFactory.Read(QuantConnect.Data.SubscriptionDataSource)", span="39-39"];
m42_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="FileFormat.ZipEntryName", span="65-65"];
m42_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="55-55"];
m42_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="source.Format", span="57-57"];
m42_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="return new TextSubscriptionFactory(config, date, isLiveMode);", span="60-60"];
m42_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="return new CollectionSubscriptionFactory(config, date, isLiveMode);", span="63-63"];
m42_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="return new ZipEntryNameSubscriptionFactory(config, date, isLiveMode);", span="66-66"];
m42_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="throw new NotImplementedException(''SubscriptionFactory.ForSource('' + source + '') has not been implemented yet.'');", span="69-69"];
m42_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="FileFormat.Csv", span="59-59"];
m42_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="FileFormat.Collection", span="62-62"];
m42_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionFactory.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="55-55"];
m42_15 [cluster="System.NotImplementedException.NotImplementedException(string)", file="ScheduledEventFactory.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m42_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionFactory.CollectionSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="ScheduledEventFactory.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionFactory.CollectionSubscriptionFactory(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="41-41"];
m43_8 [cluster="System.Math.Abs(double)", file="Security.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m43_164 [cluster="Unk.Where", file="Security.cs", label="Entry Unk.Where", span=""];
m43_242 [cluster="QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", file="Security.cs", label="Entry QuantConnect.Orders.OrderResponse.Success(QuantConnect.Orders.OrderRequest)", span="120-120"];
m43_169 [cluster="System.DateTime.ToString()", file="Security.cs", label="Entry System.DateTime.ToString()", span="0-0"];
m43_265 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="254-254"];
m43_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="95-95"];
m43_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="Security.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="97-97"];
m43_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, double)", span="95-95"];
m43_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="137-137"];
m43_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="Security.cs", label="return Order(symbol, (int) quantity);", span="139-139"];
m43_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal)", span="137-137"];
m43_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="163-163"];
m43_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="var security = Securities[symbol]", span="165-165"];
m43_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="var mooTicket = MarketOnOpenOrder(security.Symbol, quantity, tag)", span="171-171"];
m43_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Debug(''Converted OrderID: '' + mooTicket.OrderId + '' into a MarketOnOpen order.'')", span="175-175"];
m43_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="var request = CreateSubmitOrderRequest(OrderType.Market, security, quantity, tag)", span="180-180"];
m43_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label=IsWarmingUp, span="183-183"];
m43_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="185-185"];
m43_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="189-189"];
m43_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="192-192"];
m43_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="var ticket = Transactions.AddOrder(request)", span="196-196"];
m43_53 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="201-201"];
m43_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="!security.Exchange.ExchangeOpen", span="169-169"];
m43_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="var anyNonDailySubscriptions = security.Subscriptions.Any(x => x.Resolution != Resolution.Daily)", span="172-172"];
m43_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="mooTicket.SubmitRequest.Response.IsSuccess && !anyNonDailySubscriptions", span="173-173"];
m43_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="return mooTicket;", span="177-177"];
m43_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="preOrderCheckResponse.IsError", span="190-190"];
m43_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="!asynchronous", span="199-199"];
m43_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="return ticket;", span="204-204"];
m43_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="163-163"];
m43_64 [cluster="QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.WaitForOrder(int)", span="222-222"];
m43_163 [cluster="int.ToString()", file="Security.cs", label="Entry int.ToString()", span="0-0"];
m43_162 [cluster="System.Collections.Generic.List<T>.List()", file="Security.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m43_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="380-380"];
m43_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="return GenerateOrders(strategy, quantity);", span="382-382"];
m43_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Securities.Option.OptionStrategy, int)", span="380-380"];
m43_173 [cluster="Unk.MarketOrder", file="Security.cs", label="Entry Unk.MarketOrder", span=""];
m43_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="753-753"];
m43_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="Security.cs", label="return CalculateOrderQuantity(symbol, (decimal)target);", span="755-755"];
m43_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, double)", span="753-753"];
m43_239 [cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="Security.cs", label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="236-236"];
m43_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1612-1612"];
m43_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="276-276"];
m43_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="var security = Securities[symbol]", span="278-278"];
m43_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopMarket, security, quantity, tag, stopPrice: stopPrice)", span="279-279"];
m43_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="var response = PreOrderChecks(request)", span="280-280"];
m43_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="283-283"];
m43_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="return Transactions.AddOrder(request);", span="286-286"];
m43_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="response.IsError", span="281-281"];
m43_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="276-276"];
m43_65 [cluster="lambda expression", file="Security.cs", label="Entry lambda expression", span="172-172"];
m43_178 [cluster="lambda expression", file="Security.cs", label="Entry lambda expression", span="397-400"];
m43_268 [cluster="lambda expression", file="Security.cs", label="Entry lambda expression", span="603-603"];
m43_179 [cluster="lambda expression", file="Security.cs", label="kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike", span="397-400"];
m43_180 [cluster="lambda expression", file="Security.cs", label="Exit lambda expression", span="397-400"];
m43_270 [cluster="lambda expression", file="Security.cs", label="Exit lambda expression", span="603-603"];
m43_269 [cluster="lambda expression", file="Security.cs", label="x.Value", span="603-603"];
m43_66 [cluster="lambda expression", file="Security.cs", label="x.Resolution != Resolution.Daily", span="172-172"];
m43_67 [cluster="lambda expression", file="Security.cs", label="Exit lambda expression", span="172-172"];
m43_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="369-369"];
m43_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="return Order(strategy, Math.Abs(quantity) * -1);", span="371-371"];
m43_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Securities.Option.OptionStrategy, int)", span="369-369"];
m43_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="714-714"];
m43_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="!Securities.TryGetValue(symbol, out security)", span="718-718"];
m43_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="Error(symbol.ToString() + '' not found in portfolio. Request this data when initializing the algorithm.'')", span="720-720"];
m43_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label=Portfolio, span="727-727"];
m43_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="Order(holdingSymbol, -holdings.Quantity, false, tag)", span="734-734"];
m43_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="var quantity = CalculateOrderQuantity(symbol, percentage)", span="740-740"];
m43_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="MarketOrder(symbol, quantity, false, tag)", span="743-743"];
m43_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="Security security", span="717-717"];
m43_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label=liquidateExistingHoldings, span="725-725"];
m43_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="return;", span="721-721"];
m43_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="holdingSymbol != symbol && holdings.AbsoluteQuantity > 0", span="731-731"];
m43_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="var holdingSymbol = kvp.Key", span="729-729"];
m43_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="var holdings = kvp.Value", span="730-730"];
m43_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="Math.Abs(quantity) > 0", span="741-741"];
m43_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="714-714"];
m43_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="84-84"];
m43_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="Security.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="86-86"];
m43_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="84-84"];
m43_166 [cluster="QuantConnect.Symbol.ToString()", file="Security.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m43_344 [cluster="QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Security.cs", label="Entry QuantConnect.Securities.ISecurityMarginModel.GetInitialMarginRequiredForOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="47-47"];
m43_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="873-873"];
m43_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="Security.cs", label="return Order(symbol, quantity);", span="875-875"];
m43_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType)", span="873-873"];
m43_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="686-686"];
m43_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="Security.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="688-688"];
m43_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, float, bool, string)", span="686-686"];
m43_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="298-298"];
m43_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="Security.cs", label="var security = Securities[symbol]", span="300-300"];
m43_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="Security.cs", label="var request = CreateSubmitOrderRequest(OrderType.StopLimit, security, quantity, tag, stopPrice: stopPrice, limitPrice: limitPrice)", span="301-301"];
m43_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="Security.cs", label="var response = PreOrderChecks(request)", span="302-302"];
m43_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="Security.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="305-305"];
m43_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="Security.cs", label="return Transactions.AddOrder(request);", span="309-309"];
m43_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="Security.cs", label="response.IsError", span="303-303"];
m43_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="298-298"];
m43_240 [cluster="QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.GetNextMarketClose(System.DateTime, bool)", span="238-238"];
m43_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m43_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="Security.cs", label="return Order(symbol, Math.Abs(quantity));", span="75-75"];
m43_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, float)", span="73-73"];
m43_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m43_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="Security.cs", label="return Order(symbol, Math.Abs(quantity));", span="42-42"];
m43_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40"];
m43_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="358-358"];
m43_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="return Order(strategy, Math.Abs(quantity));", span="360-360"];
m43_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Securities.Option.OptionStrategy, int)", span="358-358"];
m43_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="478-478"];
m43_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", color=green, community=0, file="Security.cs", label="!Portfolio.CashBook.TryGetValue(quoteCurrency, out quoteCash)", prediction=24, span="521-521"];
m43_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="var quoteCurrency = security.QuoteCurrency.Symbol", span="520-520"];
m43_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.QuoteCurrencyRequired, request.Symbol.Value + '': requires '' + quoteCurrency + '' in the cashbook to trade.'');", span="523-523"];
m43_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="security.QuoteCurrency.ConversionRate == 0m", span="525-525"];
m43_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="!Securities.TryGetValue(request.Symbol, out security)", span="483-483"];
m43_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="!Portfolio.CashBook.TryGetValue(baseCurrency, out baseCash)", span="535-535"];
m43_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Transactions.OrdersCount > _maxOrders", span="552-552"];
m43_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Status = AlgorithmStatus.Stopped", span="554-554"];
m43_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExceededMaximumOrders, string.Format(''You have exceeded maximum number of orders ({0}), for unlimited orders upgrade your account.'', _maxOrders));", span="555-555"];
m43_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="!security.Exchange.ExchangeOpen || Time > latestSubmissionTime", span="578-578"];
m43_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Cash quoteCash", span="519-519"];
m43_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ConversionRateZero, request.Symbol.Value + '': requires '' + quoteCurrency + '' to have a non-zero conversion rate. This can be caused by lack of data.'');", span="527-527"];
m43_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexBaseAndQuoteCurrenciesRequired, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' in the cashbook to trade.'');", span="537-537"];
m43_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ForexConversionRateZero, request.Symbol.Value + '': requires '' + baseCurrency + '' and '' + quoteCurrency + '' to have non-zero conversion rates. This can be caused by lack of data.'');", span="541-541"];
m43_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="security.Type == SecurityType.Forex", span="531-531"];
m43_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Security security", span="482-482"];
m43_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MissingSecurity, ''You haven't requested '' + request.Symbol.ToString() + '' data. Add this with AddSecurity() in the Initialize() Method.'');", span="485-485"];
m43_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="request.Quantity == 0 || request.Symbol == null || request.Symbol == QuantConnect.Symbol.Empty || Math.Abs(request.Quantity) < security.SymbolProperties.LotSize", span="489-489"];
m43_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="!security.IsTradable", span="494-494"];
m43_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="var price = security.Price", span="499-499"];
m43_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="request.OrderType == OrderType.MarketOnClose && !security.Exchange.ExchangeOpen", span="502-502"];
m43_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="request.OrderType == OrderType.OptionExercise && !security.Exchange.ExchangeOpen", span="508-508"];
m43_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="var baseCurrency = ((Forex) security).BaseCurrencySymbol", span="534-534"];
m43_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="!security.HasData", span="546-546"];
m43_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="security.Type != SecurityType.Option", span="560-560"];
m43_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="security.Holdings.IsShort", span="563-563"];
m43_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="request.Quantity > security.Holdings.Quantity", span="566-566"];
m43_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="var nextMarketClose = security.Exchange.Hours.GetNextMarketClose(security.LocalTime, false)", span="575-575"];
m43_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="baseCash.ConversionRate == 0m", span="539-539"];
m43_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="request.OrderType == OrderType.OptionExercise", span="558-558"];
m43_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="var latestSubmissionTime = nextMarketClose.AddMinutes(-15.50)", span="577-577"];
m43_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.MarketOnCloseOrderTooLate, ''MarketOnClose orders must be placed with at least a 16 minute buffer before market close.'');", span="583-583"];
m43_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Success(request);", span="588-588"];
m43_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="price == 0", span="513-513"];
m43_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.ZeroQuantity(request);", span="491-491"];
m43_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonTradableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is marked as non-tradable.'');", span="496-496"];
m43_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="504-504"];
m43_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.ExchangeNotOpen, request.OrderType + '' order and exchange not open.'');", span="510-510"];
m43_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityPriceZero, request.Symbol.ToString() + '': asset price is $0. If using custom data make sure you've set the 'Value' property.'');", span="515-515"];
m43_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.SecurityHasNoData, ''There is no data for this symbol yet, please check the security.HasData flag to ensure there is at least one data point.'');", span="548-548"];
m43_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.NonExercisableSecurity, ''The security with symbol ''' + request.Symbol.ToString() + ''' is not exercisable.'');", span="561-561"];
m43_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''The security with symbol ''' + request.Symbol.ToString() + ''' has a short option position. Only long option positions are exercisable.'');", span="564-564"];
m43_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return OrderResponse.Error(request, OrderResponseErrorCode.UnsupportedRequestType, ''Cannot exercise more contracts of ''' + request.Symbol.ToString() + ''' than is currently available in the portfolio. '');", span="567-567"];
m43_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="request.Quantity <= 0.0m", span="569-569"];
m43_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="OrderResponse.ZeroQuantity(request)", span="570-570"];
m43_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="request.OrderType == OrderType.MarketOnClose", span="573-573"];
m43_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Cash baseCash", span="533-533"];
m43_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecksImpl(QuantConnect.Orders.SubmitOrderRequest)", span="478-478"];
m43_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m43_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="Security.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="109-109"];
m43_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, float)", span="107-107"];
m43_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m43_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="Security.cs", label="return Order(symbol, Math.Abs(quantity));", span="53-53"];
m43_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, double)", span="51-51"];
m43_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="385-385"];
m43_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="var optionSeq = Securities.Where(kv => kv.Key.Underlying == strategy.Underlying &&\r\n                                                            kv.Key.ID.OptionRight == optionLeg.Right &&\r\n                                                            kv.Key.ID.Date == optionLeg.Expiration &&\r\n                                                            kv.Key.ID.StrikePrice == optionLeg.Strike)", span="397-400"];
m43_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="var marketOrder = MarketOrder(option, optionLeg.Quantity * strategyQuantity, tag: strategyTag)", span="414-414"];
m43_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="var limitOrder = LimitOrder(option, optionLeg.Quantity * strategyQuantity, optionLeg.OrderPrice, tag: strategyTag)", span="418-418"];
m43_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="!Securities.ContainsKey(strategy.Underlying)", span="432-432"];
m43_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="var marketOrder = MarketOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, tag: strategyTag)", span="441-441"];
m43_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="var limitOrder = LimitOrder(strategy.Underlying, underlyingLeg.Quantity * strategyQuantity, underlyingLeg.OrderPrice, tag: strategyTag)", span="445-445"];
m43_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="strategy.OptionLegs", span="395-395"];
m43_135 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="optionSeq.Count() != 1", span="402-402"];
m43_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="var option = optionSeq.First().Key", span="409-409"];
m43_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="var strategyTag = strategy.Name + '' ('' + strategyQuantity.ToString() + '')''", span="390-390"];
m43_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="OrderType.Market", span="413-413"];
m43_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="orders.Add(marketOrder)", span="415-415"];
m43_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="OrderType.Limit", span="417-417"];
m43_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="orders.Add(limitOrder)", span="419-419"];
m43_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="strategy.UnderlyingLegs", span="430-430"];
m43_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="var error = string.Format(''Couldn't find the option contract underlying in algorithm securities list. Underlying: {0}'', strategy.Underlying.ToString())", span="434-434"];
m43_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="underlyingLeg.OrderType", span="438-438"];
m43_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="OrderType.Market", span="440-440"];
m43_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="orders.Add(marketOrder)", span="442-442"];
m43_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="OrderType.Limit", span="444-444"];
m43_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="orders.Add(limitOrder)", span="446-446"];
m43_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="var orders = new List<OrderTicket>()", span="387-387"];
m43_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="strategy.OptionLegs != null", span="393-393"];
m43_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="var error = string.Format(''Couldn't find the option contract in algorithm securities list. Underlying: {0}, option {1}, strike {2}, expiration: {3}'',\r\n                                strategy.Underlying.ToString(), optionLeg.Right.ToString(), optionLeg.Strike.ToString(), optionLeg.Expiration.ToString())", span="404-405"];
m43_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="strategy.UnderlyingLegs != null", span="428-428"];
m43_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="optionLeg.OrderType", span="411-411"];
m43_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + optionLeg.OrderType.ToString());", span="422-422"];
m43_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="return orders;", span="453-453"];
m43_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="throw new InvalidOperationException(''Order type is not supported in option strategy: '' + underlyingLeg.OrderType.ToString());", span="449-449"];
m43_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="throw new InvalidOperationException(error);", span="435-435"];
m43_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="throw new InvalidOperationException(error);", span="406-406"];
m43_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GenerateOrders(QuantConnect.Securities.Option.OptionStrategy, int)", span="385-385"];
m43_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="861-861"];
m43_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="Security.cs", label="return Order(symbol, (int)quantity);", span="863-863"];
m43_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, decimal, QuantConnect.Orders.OrderType)", span="861-861"];
m43_342 [cluster="QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.GetMarginRemaining(QuantConnect.Symbol, QuantConnect.Orders.OrderDirection)", span="503-503"];
m43_18 [cluster="System.Math.Abs(float)", file="Security.cs", label="Entry System.Math.Abs(float)", span="0-0"];
m43_165 [cluster="Unk.Count", file="Security.cs", label="Entry Unk.Count", span=""];
m43_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1587-1587"];
m43_237 [cluster="QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", file="Security.cs", label="Entry QuantConnect.Orders.OrderResponse.Error(QuantConnect.Orders.OrderRequest, QuantConnect.Orders.OrderResponseErrorCode, string)", span="128-128"];
m43_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="214-214"];
m43_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="var security = Securities[symbol]", span="216-216"];
m43_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnOpen, security, quantity, tag)", span="217-217"];
m43_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="var response = PreOrderChecks(request)", span="218-218"];
m43_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="221-221"];
m43_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="return Transactions.AddOrder(request);", span="224-224"];
m43_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="response.IsError", span="219-219"];
m43_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="214-214"];
m43_341 [cluster="QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", file="Security.cs", label="Entry QuantConnect.Orders.Order.GetValue(QuantConnect.Securities.Security)", span="174-174"];
m43_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m43_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="Security.cs", label="return Order(symbol, (int) quantity);", span="129-129"];
m43_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, double)", span="127-127"];
m43_171 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Security.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m43_357 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", file="Security.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", span="92-92"];
m43_177 [cluster="string.Format(string, object)", file="Security.cs", label="Entry string.Format(string, object)", span="0-0"];
m43_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="255-255"];
m43_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="var security = Securities[symbol]", span="257-257"];
m43_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="var request = CreateSubmitOrderRequest(OrderType.Limit, security, quantity, tag, limitPrice: limitPrice)", span="258-258"];
m43_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="var response = PreOrderChecks(request)", span="259-259"];
m43_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="262-262"];
m43_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="return Transactions.AddOrder(request);", span="265-265"];
m43_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="response.IsError", span="260-260"];
m43_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="255-255"];
m43_236 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="200-200"];
m43_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="766-766"];
m43_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var security = Securities[symbol]", span="768-768"];
m43_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var targetPortfolioValue = target*Portfolio.TotalPortfolioValue", span="778-778"];
m43_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var unitPrice = new MarketOrder(symbol, 1, UtcTime).GetValue(security)", span="786-786"];
m43_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var marginRemaining = Portfolio.GetMarginRemaining(symbol, direction)", span="790-790"];
m43_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var order = new MarketOrder(security.Symbol, orderQuantity, UtcTime)", span="816-816"];
m43_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var price = security.Price", span="769-769"];
m43_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="return -security.Holdings.Quantity;", span="775-775"];
m43_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var currentHoldingsValue = security.Holdings.HoldingsValue", span="779-779"];
m43_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="orderValue = order.GetValue(security)", span="817-817"];
m43_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="orderFees = security.FeeModel.GetOrderFee(security, order)", span="818-818"];
m43_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="marginRequired = security.MarginModel.GetInitialMarginRequiredForOrder(security, order)", span="822-822"];
m43_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="orderQuantity % Convert.ToInt32(security.SymbolProperties.LotSize) != 0", span="829-829"];
m43_337 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="orderQuantity = orderQuantity - (orderQuantity % Convert.ToInt32(security.SymbolProperties.LotSize))", span="831-831"];
m43_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="target == 0", span="775-775"];
m43_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var targetOrderValue = Math.Abs(targetPortfolioValue - currentHoldingsValue)", span="782-782"];
m43_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var direction = targetPortfolioValue > currentHoldingsValue ? OrderDirection.Buy : OrderDirection.Sell", span="783-783"];
m43_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="unitPrice == 0", span="787-787"];
m43_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var orderQuantity = (int)(targetOrderValue / unitPrice)", span="800-800"];
m43_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="feeToPriceRatio = (int)(orderFees / unitPrice)", span="819-819"];
m43_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="marginRemaining <= 0", span="791-791"];
m43_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="orderQuantity > 0 && (marginRequired > marginRemaining || orderValue + orderFees > targetOrderValue)", span="826-826"];
m43_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="orderQuantity -= feeToPriceRatio", span="810-810"];
m43_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="orderQuantity--", span="812-812"];
m43_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="iterations > 0", span="806-806"];
m43_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="price == 0", span="772-772"];
m43_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="iterations++", span="824-824"];
m43_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="return (direction == OrderDirection.Sell ? -1 : 1) * orderQuantity;", span="835-835"];
m43_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="return 0;", span="787-787"];
m43_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var feeToPriceRatio = 0", span="797-797"];
m43_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="var iterations = 0", span="801-801"];
m43_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="return 0;", span="791-791"];
m43_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="decimal marginRequired", span="794-794"];
m43_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="feeToPriceRatio > 0", span="809-809"];
m43_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="return 0;", span="772-772"];
m43_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="decimal orderFees", span="796-796"];
m43_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="decimal orderValue", span="795-795"];
m43_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="766-766"];
m43_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m43_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="Security.cs", label="return Order(symbol, Math.Abs(quantity));", span="64-64"];
m43_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, decimal)", span="62-62"];
m43_167 [cluster="System.Enum.ToString()", file="Security.cs", label="Entry System.Enum.ToString()", span="0-0"];
m43_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="849-849"];
m43_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="Security.cs", label="return Order(symbol, quantity, asynchronous, tag);", span="851-851"];
m43_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, QuantConnect.Orders.OrderType, bool, string)", span="849-849"];
m43_176 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="123-123"];
m43_264 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Security.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m43_57 [cluster="Unk.Any", file="Security.cs", label="Entry Unk.Any", span=""];
m43_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="598-598"];
m43_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="Securities.Keys.OrderBy(x => x.Value)", span="603-603"];
m43_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="var orders = Transactions.GetOpenOrders(symbol)", span="610-610"];
m43_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="var quantity = Portfolio[symbol].Quantity", span="613-613"];
m43_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="var ticket = Transactions.GetOrderTicket(order.Id)", span="626-626"];
m43_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="Transactions.CancelOrder(order.Id, tag)", span="635-635"];
m43_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="var ticket = Order(symbol, -quantity - marketOrdersQuantity)", span="643-643"];
m43_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="symbolToLiquidate = symbolToLiquidate ?? QuantConnect.Symbol.Empty", span="601-601"];
m43_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="orderIdList.Add(ticket.OrderId)", span="646-646"];
m43_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="symbol != symbolToLiquidate && symbolToLiquidate != QuantConnect.Symbol.Empty", span="606-606"];
m43_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="orders.Count == 1 && quantity != 0 && orders[0].Quantity == -quantity && orders[0].Type == OrderType.Market", span="616-616"];
m43_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="quantity != 0", span="640-640"];
m43_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="ticket.Status == OrderStatus.Filled", span="644-644"];
m43_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="return orderIdList;", span="651-651"];
m43_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label=orders, span="621-621"];
m43_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="order.Type == OrderType.Market", span="623-623"];
m43_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="ticket != null", span="627-627"];
m43_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="marketOrdersQuantity += ticket.Quantity - ticket.QuantityFilled", span="630-630"];
m43_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="var marketOrdersQuantity = 0m", span="620-620"];
m43_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="var orderIdList = new List<int>()", span="600-600"];
m43_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="598-598"];
m43_63 [cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144"];
m43_343 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Security.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m43_62 [cluster="QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", file="Security.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidSubmitRequest(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest, QuantConnect.Orders.OrderResponse)", span="405-405"];
m43_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="319-319"];
m43_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="var option = (Option)Securities[optionSymbol]", span="321-321"];
m43_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="var request = CreateSubmitOrderRequest(OrderType.OptionExercise, option, quantity, tag)", span="323-323"];
m43_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label=IsWarmingUp, span="326-326"];
m43_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="return OrderTicket.InvalidWarmingUp(Transactions, request);", span="328-328"];
m43_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="var preOrderCheckResponse = PreOrderChecks(request)", span="332-332"];
m43_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, preOrderCheckResponse);", span="335-335"];
m43_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="var ticket = Transactions.AddOrder(request)", span="339-339"];
m43_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Transactions.WaitForOrder(ticket.OrderId)", span="344-344"];
m43_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="preOrderCheckResponse.IsError", span="333-333"];
m43_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="!asynchronous", span="342-342"];
m43_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="return ticket;", span="347-347"];
m43_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ExerciseOption(QuantConnect.Symbol, int, bool, string)", span="319-319"];
m43_340 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="Security.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47"];
m43_60 [cluster="QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Entry QuantConnect.Orders.OrderTicket.InvalidWarmingUp(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="414-414"];
m43_345 [cluster="System.Convert.ToInt32(decimal)", file="Security.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m43_170 [cluster="string.Format(string, params object[])", file="Security.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m43_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="658-658"];
m43_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="Security.cs", label="!_locked", span="660-660"];
m43_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="Security.cs", label="_maxOrders = max", span="662-662"];
m43_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetMaximumOrders(int)", span="658-658"];
m43_267 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOrder(int, string)", span="164-164"];
m43_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="673-673"];
m43_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="Security.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings)", span="675-675"];
m43_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="673-673"];
m43_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", span="878-878"];
m43_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="Security.cs", label="return new SubmitOrderRequest(orderType, security.Type, security.Symbol, quantity, stopPrice, limitPrice, UtcTime, tag);", span="880-880"];
m43_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateSubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.Securities.Security, int, string, decimal, decimal)", span="878-878"];
m43_174 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Security.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m43_241 [cluster="System.DateTime.AddMinutes(double)", file="Security.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m43_168 [cluster="decimal.ToString()", file="Security.cs", label="Entry decimal.ToString()", span="0-0"];
m43_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m43_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="Security.cs", label="return Order(symbol, Math.Abs(quantity) * -1);", span="120-120"];
m43_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, decimal)", span="118-118"];
m43_238 [cluster="QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", file="Security.cs", label="Entry QuantConnect.Orders.OrderResponse.ZeroQuantity(QuantConnect.Orders.OrderRequest)", span="154-154"];
m43_3 [cluster="System.Math.Abs(int)", file="Security.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m43_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", span="150-150"];
m43_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="return MarketOrder(symbol, quantity, asynchronous, tag);", span="152-152"];
m43_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int, bool, string)", span="150-150"];
m43_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="234-234"];
m43_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="var security = Securities[symbol]", span="236-236"];
m43_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="var request = CreateSubmitOrderRequest(OrderType.MarketOnClose, security, quantity, tag)", span="237-237"];
m43_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="var response = PreOrderChecks(request)", span="238-238"];
m43_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="return OrderTicket.InvalidSubmitRequest(Transactions, request, response);", span="241-241"];
m43_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="return Transactions.AddOrder(request);", span="244-244"];
m43_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="response.IsError", span="239-239"];
m43_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="234-234"];
m43_172 [cluster="Unk.First", file="Security.cs", label="Entry Unk.First", span=""];
m43_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="463-463"];
m43_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="var response = PreOrderChecksImpl(request)", span="465-465"];
m43_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Error(response.ErrorMessage)", span="468-468"];
m43_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="response.IsError", span="466-466"];
m43_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="return response;", span="470-470"];
m43_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PreOrderChecks(QuantConnect.Orders.SubmitOrderRequest)", span="463-463"];
m43_266 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", file="Security.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTicket(int)", span="210-210"];
m43_175 [cluster="Unk.LimitOrder", file="Security.cs", label="Entry Unk.LimitOrder", span=""];
m43_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="699-699"];
m43_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="SetHoldings(symbol, (decimal)percentage, liquidateExistingHoldings, tag)", span="701-701"];
m43_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="Security.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="699-699"];
m43_358 [file="Security.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m43_359 [file="Security.cs", label="QuantConnect.Securities.Option.OptionStrategy", span=""];
m43_360 [file="Security.cs", label=optionLeg, span=""];
m44_49 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData<T>()", span="155-155"];
m44_50 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="BaseData data", span="158-158"];
m44_51 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="_dataByType.TryGetValue(typeof (T), out data)", span="159-159"];
m44_52 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="return data as T;", span="160-160"];
m44_53 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.GetData<T>()", span="155-155"];
m44_45 [cluster="object.GetType()", file="SecurityCache.cs", label="Entry object.GetType()", span="0-0"];
m44_55 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="166-166"];
m44_56 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="SecurityCache.cs", label="_dataByType.Clear()", span="168-168"];
m44_57 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.Reset()", span="166-166"];
m44_58 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="SecurityCache.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m44_46 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData()", span="145-145"];
m44_47 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="SecurityCache.cs", label="return _lastData;", span="147-147"];
m44_48 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.GetData()", span="145-145"];
m44_0 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="89-89"];
m44_1 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="_lastData = data", span="91-91"];
m44_2 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="_dataByType[data.GetType()] = data", span="92-92"];
m44_4 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="var tick = data as Tick", prediction=25, span="97-97"];
m44_17 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var bar = data as IBar", span="109-109"];
m44_19 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="_lastQuoteBarUpdate != data.EndTime", span="112-112"];
m44_5 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick != null", span="98-98"];
m44_8 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.BidPrice != 0", span="102-102"];
m44_9 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="BidPrice = tick.BidPrice", span="102-102"];
m44_10 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.BidSize != 0", span="103-103"];
m44_11 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="BidSize = tick.BidSize", span="103-103"];
m44_12 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.AskPrice != 0", span="105-105"];
m44_13 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskPrice = tick.AskPrice", span="105-105"];
m44_14 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.AskSize != 0", span="106-106"];
m44_15 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskSize = tick.AskSize", span="106-106"];
m44_18 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar != null", span="110-110"];
m44_20 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.Open != 0", span="114-114"];
m44_21 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Open = bar.Open", span="114-114"];
m44_22 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.High != 0", span="115-115"];
m44_23 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="High = bar.High", span="115-115"];
m44_24 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.Low != 0", span="116-116"];
m44_25 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Low = bar.Low", span="116-116"];
m44_26 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.Close != 0", span="117-117"];
m44_27 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Price = bar.Close", span="119-119"];
m44_28 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Close = bar.Close", span="120-120"];
m44_29 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var tradeBar = bar as TradeBar", span="124-124"];
m44_33 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var quoteBar = bar as QuoteBar", span="129-129"];
m44_44 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="89-89"];
m44_30 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tradeBar != null", span="125-125"];
m44_31 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tradeBar.Volume != 0", span="127-127"];
m44_32 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Volume = tradeBar.Volume", span="127-127"];
m44_34 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar != null", span="130-130"];
m44_35 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="_lastQuoteBarUpdate = quoteBar.EndTime", span="132-132"];
m44_36 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar.Ask != null && quoteBar.Ask.Close != 0", span="133-133"];
m44_37 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskPrice = quoteBar.Ask.Close", span="133-133"];
m44_38 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar.Bid != null && quoteBar.Bid.Close != 0", span="134-134"];
m44_39 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="BidPrice = quoteBar.Bid.Close", span="134-134"];
m44_40 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="quoteBar.LastBidSize != 0", prediction=26, span="135-135"];
m44_41 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="BidSize = quoteBar.LastBidSize", prediction=27, span="135-135"];
m44_42 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="quoteBar.LastAskSize != 0", prediction=26, span="136-136"];
m44_43 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="AskSize = quoteBar.LastAskSize", prediction=29, span="136-136"];
m44_54 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityCache.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m44_59 [file="SecurityCache.cs", label="QuantConnect.Securities.SecurityCache", span=""];
m45_40 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", file="SecurityChanges.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", span="112-112"];
m45_41 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", file="SecurityChanges.cs", label="AddedSecurities.Count == 0 && RemovedSecurities.Count == 0", span="114-114"];
m45_42 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", file="SecurityChanges.cs", label="return ''SecurityChanges: None'';", span="116-116"];
m45_43 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", file="SecurityChanges.cs", label="var added = string.Empty", span="118-118"];
m45_44 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", file="SecurityChanges.cs", label="AddedSecurities.Count != 0", span="119-119"];
m45_49 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", file="SecurityChanges.cs", label="return ''SecurityChanges: '' + added + removed;", span="129-129"];
m45_45 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", color=green, community=0, file="SecurityChanges.cs", label="added = '' Added: '' + string.Join('','', AddedSecurities.Select(x => x.Symbol.ID))", prediction=30, span="121-121"];
m45_46 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", file="SecurityChanges.cs", label="var removed = string.Empty", span="123-123"];
m45_47 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", file="SecurityChanges.cs", label="RemovedSecurities.Count != 0", span="124-124"];
m45_48 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", color=green, community=0, file="SecurityChanges.cs", label="removed = '' Removed: '' + string.Join('','', RemovedSecurities.Select(x => x.Symbol.ID))", prediction=31, span="126-126"];
m45_50 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", file="SecurityChanges.cs", label="Exit QuantConnect.Data.UniverseSelection.SecurityChanges.ToString()", span="112-112"];
m45_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SecurityChanges.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m45_33 [cluster="Unk.Where", file="SecurityChanges.cs", label="Entry Unk.Where", span=""];
m45_39 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="SecurityChanges.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m45_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SecurityChanges.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m45_18 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.Removed(params QuantConnect.Securities.Security[])", file="SecurityChanges.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.Removed(params QuantConnect.Securities.Security[])", span="80-80"];
m45_19 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.Removed(params QuantConnect.Securities.Security[])", file="SecurityChanges.cs", label="securities == null || securities.Length == 0", span="82-82"];
m45_21 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.Removed(params QuantConnect.Securities.Security[])", file="SecurityChanges.cs", label="return new SecurityChanges(new List<Security>(), securities.ToList());", span="83-83"];
m45_20 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.Removed(params QuantConnect.Securities.Security[])", file="SecurityChanges.cs", label="return None;", span="82-82"];
m45_22 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.Removed(params QuantConnect.Securities.Security[])", file="SecurityChanges.cs", label="Exit QuantConnect.Data.UniverseSelection.SecurityChanges.Removed(params QuantConnect.Securities.Security[])", span="80-80"];
m45_10 [cluster="Unk.ToHashSet", file="SecurityChanges.cs", label="Entry Unk.ToHashSet", span=""];
m45_17 [cluster="System.Collections.Generic.List<T>.List()", file="SecurityChanges.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m45_35 [cluster="SecurityChanges.cstr", file="SecurityChanges.cs", label="Entry SecurityChanges.cstr", span=""];
m45_34 [cluster="Unk.ToList", file="SecurityChanges.cs", label="Entry Unk.ToList", span=""];
m45_52 [cluster="Unk.Join", file="SecurityChanges.cs", label="Entry Unk.Join", span=""];
m45_51 [cluster="Unk.Select", file="SecurityChanges.cs", label="Entry Unk.Select", span=""];
m45_6 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58"];
m45_7 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="SecurityChanges.cs", label="_addedSecurities = addedSecurities.ToHashSet()", span="60-60"];
m45_8 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="SecurityChanges.cs", label="_removedSecurities = removedSecurities.ToHashSet()", span="61-61"];
m45_9 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="SecurityChanges.cs", label="Exit QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58"];
m45_23 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SecurityChanges.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="92-92"];
m45_24 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SecurityChanges.cs", label="left == None", span="95-95"];
m45_25 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SecurityChanges.cs", label="return right;", span="95-95"];
m45_26 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SecurityChanges.cs", label="right == None", span="96-96"];
m45_27 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SecurityChanges.cs", label="return left;", span="96-96"];
m45_28 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SecurityChanges.cs", label="var additions = left.AddedSecurities.Union(right.AddedSecurities).ToList()", span="98-98"];
m45_29 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SecurityChanges.cs", label="var removals = left.RemovedSecurities.Union(right.RemovedSecurities).Where(x => !additions.Contains(x)).ToList()", span="99-99"];
m45_30 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SecurityChanges.cs", label="return new SecurityChanges(additions, removals);", span="100-100"];
m45_31 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SecurityChanges.cs", label="Exit QuantConnect.Data.UniverseSelection.SecurityChanges.operator +(QuantConnect.Data.UniverseSelection.SecurityChanges, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="92-92"];
m45_11 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.Added(params QuantConnect.Securities.Security[])", file="SecurityChanges.cs", label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.Added(params QuantConnect.Securities.Security[])", span="69-69"];
m45_12 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.Added(params QuantConnect.Securities.Security[])", file="SecurityChanges.cs", label="securities == null || securities.Length == 0", span="71-71"];
m45_14 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.Added(params QuantConnect.Securities.Security[])", file="SecurityChanges.cs", label="return new SecurityChanges(securities.ToList(), new List<Security>());", span="72-72"];
m45_13 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.Added(params QuantConnect.Securities.Security[])", file="SecurityChanges.cs", label="return None;", span="71-71"];
m45_15 [cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.Added(params QuantConnect.Securities.Security[])", file="SecurityChanges.cs", label="Exit QuantConnect.Data.UniverseSelection.SecurityChanges.Added(params QuantConnect.Securities.Security[])", span="69-69"];
m45_56 [cluster="lambda expression", file="SecurityChanges.cs", label="Entry lambda expression", span="126-126"];
m45_0 [cluster="lambda expression", file="SecurityChanges.cs", label="Entry lambda expression", span="40-40"];
m45_1 [cluster="lambda expression", file="SecurityChanges.cs", label="x.Symbol.Value", span="40-40"];
m45_2 [cluster="lambda expression", file="SecurityChanges.cs", label="Exit lambda expression", span="40-40"];
m45_3 [cluster="lambda expression", file="SecurityChanges.cs", label="Entry lambda expression", span="50-50"];
m45_4 [cluster="lambda expression", file="SecurityChanges.cs", label="x.Symbol.Value", span="50-50"];
m45_5 [cluster="lambda expression", file="SecurityChanges.cs", label="Exit lambda expression", span="50-50"];
m45_37 [cluster="lambda expression", file="SecurityChanges.cs", label="!additions.Contains(x)", span="99-99"];
m45_36 [cluster="lambda expression", file="SecurityChanges.cs", label="Entry lambda expression", span="99-99"];
m45_38 [cluster="lambda expression", file="SecurityChanges.cs", label="Exit lambda expression", span="99-99"];
m45_53 [cluster="lambda expression", file="SecurityChanges.cs", label="Entry lambda expression", span="121-121"];
m45_54 [cluster="lambda expression", color=green, community=0, file="SecurityChanges.cs", label="x.Symbol.ID", prediction=32, span="121-121"];
m45_55 [cluster="lambda expression", file="SecurityChanges.cs", label="Exit lambda expression", span="121-121"];
m45_57 [cluster="lambda expression", color=green, community=0, file="SecurityChanges.cs", label="x.Symbol.ID", prediction=33, span="126-126"];
m45_58 [cluster="lambda expression", file="SecurityChanges.cs", label="Exit lambda expression", span="126-126"];
m45_59 [file="SecurityChanges.cs", label="QuantConnect.Data.UniverseSelection.SecurityChanges", span=""];
m45_60 [file="SecurityChanges.cs", label=additions, span=""];
m46_98 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="62-62"];
m46_15 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m46_16 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Add(security.Symbol, security)", span="83-83"];
m46_17 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81"];
m46_63 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityManager.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventHandler.Invoke(object, System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="0-0"];
m46_55 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()", span="0-0"];
m46_37 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="162-162"];
m46_38 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="return Remove(pair.Key);", span="164-164"];
m46_39 [cluster="QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Remove(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="162-162"];
m46_106 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityManager.cs", label="var exchangeHours = marketHoursDbEntry.ExchangeHours", span="413-413"];
m46_113 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", color=green, community=0, file="SecurityManager.cs", label="return CreateSecurity(type, securityPortfolioManager, subscriptionManager, exchangeHours, marketHoursDbEntry.DataTimeZone, symbolProperties, securityInitializer, symbol, resolution,\r\n                fillDataForward, leverage, extendedMarketHours, isInternalFeed, isCustomData, addToSymbolCache);", prediction=34, span="421-422"];
m46_104 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", span="398-398"];
m46_105 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityManager.cs", label="var marketHoursDbEntry = marketHoursDatabase.GetEntry(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType)", span="412-412"];
m46_110 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityManager.cs", label="var symbolProperties = symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol.Value, symbol.ID.SecurityType, defaultQuoteCurrency)", span="417-417"];
m46_112 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityManager.cs", label="var type = resolution == Resolution.Tick ? typeof(Tick) : tradeBarType", span="420-420"];
m46_108 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityManager.cs", label="symbol.ID.SecurityType == SecurityType.Forex", span="416-416"];
m46_109 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityManager.cs", label="defaultQuoteCurrency = symbol.Value.Substring(3)", span="416-416"];
m46_107 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityManager.cs", label="var defaultQuoteCurrency = CashBook.AccountCurrency", span="415-415"];
m46_111 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityManager.cs", label="var tradeBarType = typeof(TradeBar)", span="419-419"];
m46_114 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", span="398-398"];
m46_115 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="153-153"];
m46_94 [cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, bool)", span="93-93"];
m46_5 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m46_6 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityManager.cs", label="_securityManager.TryAdd(symbol, security)", span="70-70"];
m46_7 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityManager.cs", label="security.SetLocalTimeKeeper(_timeKeeper.GetLocalTimeKeeper(security.Exchange.TimeZone))", span="72-72"];
m46_8 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityManager.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, security))", span="73-73"];
m46_9 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68"];
m46_96 [cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="75-75"];
m46_100 [cluster="QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Cfd.Cfd.Cfd(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m46_0 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m46_1 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="_timeKeeper = timeKeeper", span="57-57"];
m46_2 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="_securityManager = new ConcurrentDictionary<Symbol, Security>()", span="58-58"];
m46_3 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55"];
m46_10 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m46_99 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36"];
m46_36 [cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="SecurityManager.cs", label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0"];
m46_102 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security)", span="27-27"];
m46_11 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="SecurityManager.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m46_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m46_47 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m46_4 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m46_12 [cluster="QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Security.SetLocalTimeKeeper(QuantConnect.LocalTimeKeeper)", span="500-500"];
m46_97 [cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="211-211"];
m46_21 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Clear()", span="100-100"];
m46_22 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityManager.cs", label="_securityManager.Clear()", span="102-102"];
m46_23 [cluster="QuantConnect.Securities.SecurityManager.Clear()", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Clear()", span="100-100"];
m46_25 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="111-111"];
m46_26 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="return _securityManager.Contains(pair);", span="113-113"];
m46_27 [cluster="QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Contains(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="111-111"];
m46_48 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m46_49 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityManager.cs", label="return _securityManager.TryGetValue(symbol, out security);", span="201-201"];
m46_50 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="199-199"];
m46_52 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", span="218-218"];
m46_53 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", file="SecurityManager.cs", label="return _securityManager.GetEnumerator();", span="220-220"];
m46_54 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>>.GetEnumerator()", span="218-218"];
m46_116 [cluster="string.Substring(int)", file="SecurityManager.cs", label="Entry string.Substring(int)", span="0-0"];
m46_14 [cluster="QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="297-297"];
m46_59 [cluster="QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityManager.cs", label="var handler = CollectionChanged", span="299-299"];
m46_60 [cluster="QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityManager.cs", label="handler != null", span="300-300"];
m46_61 [cluster="QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityManager.cs", label="handler(this, changedEventArgs)", span="300-300"];
m46_62 [cluster="QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)", span="297-297"];
m46_101 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="294-294"];
m46_29 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m46_30 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityManager.cs", label="return _securityManager.ContainsKey(symbol);", span="124-124"];
m46_31 [cluster="QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.ContainsKey(QuantConnect.Symbol)", span="122-122"];
m46_32 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m46_18 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="91-91"];
m46_19 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Add(pair.Key, pair.Value)", span="93-93"];
m46_20 [cluster="QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Add(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>)", span="91-91"];
m46_40 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m46_41 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="Security security", span="174-174"];
m46_42 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="_securityManager.TryRemove(symbol, out security)", span="175-175"];
m46_44 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="return true;", span="178-178"];
m46_45 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="return false;", span="180-180"];
m46_43 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="OnCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, security))", span="177-177"];
m46_46 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="172-172"];
m46_103 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="529-529"];
m46_33 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", span="133-133"];
m46_34 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityManager.cs", label="((IDictionary<Symbol, Security>)_securityManager).CopyTo(array, number)", span="135-135"];
m46_35 [cluster="QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.CopyTo(System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>[], int)", span="133-133"];
m46_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="SecurityManager.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m46_117 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m46_93 [cluster="QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", file="SecurityManager.cs", label="Entry QuantConnect.SymbolCache.Set(string, QuantConnect.Symbol)", span="36-36"];
m46_56 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="228-228"];
m46_57 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityManager.cs", label="return _securityManager.GetEnumerator();", span="230-230"];
m46_58 [cluster="QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.System.Collections.IEnumerable.GetEnumerator()", span="228-228"];
m46_13 [cluster="System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", file="SecurityManager.cs", label="Entry System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, object)", span="0-0"];
m46_64 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="308-308"];
m46_73 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", color=green, community=0, file="SecurityManager.cs", label="SecurityType.Forex", prediction=35, span="341-341"];
m46_70 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="config.SecurityType", span="335-335"];
m46_74 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="string baseCurrency, quoteCurrency", span="344-344"];
m46_68 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="var config = subscriptionManager.Add(factoryType, symbol, resolution, dataTimeZone, exchangeHours.TimeZone, isCustomData, fillDataForward,\r\n                extendedMarketHours, isInternalFeed, isFilteredSubscription)", span="331-332"];
m46_69 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="Security security", span="334-334"];
m46_71 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="SecurityType.Equity", span="337-337"];
m46_81 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="SecurityType.Cfd", span="361-361"];
m46_86 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="SecurityType.Base", span="375-375"];
m46_75 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="Forex.Forex.DecomposeCurrencyPair(symbol.Value, out baseCurrency, out quoteCurrency)", span="345-345"];
m46_65 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="var sid = symbol.ID", span="325-325"];
m46_66 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label=addToSymbolCache, span="328-328"];
m46_67 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="SymbolCache.Set(symbol.Value, symbol)", span="328-328"];
m46_72 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security = new Equity.Equity(exchangeHours, config, securityPortfolioManager.CashBook[CashBook.AccountCurrency], symbolProperties)", span="338-338"];
m46_76 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="!securityPortfolioManager.CashBook.ContainsKey(baseCurrency)", span="347-347"];
m46_77 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="securityPortfolioManager.CashBook.Add(baseCurrency, 0, 0)", span="350-350"];
m46_78 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="!securityPortfolioManager.CashBook.ContainsKey(quoteCurrency)", span="352-352"];
m46_79 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="securityPortfolioManager.CashBook.Add(quoteCurrency, 0, 0)", span="355-355"];
m46_80 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security = new Forex.Forex(exchangeHours, securityPortfolioManager.CashBook[quoteCurrency], config, symbolProperties)", span="357-357"];
m46_82 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="var quoteCurrency = symbolProperties.QuoteCurrency", span="363-363"];
m46_83 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="!securityPortfolioManager.CashBook.ContainsKey(quoteCurrency)", span="365-365"];
m46_84 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="securityPortfolioManager.CashBook.Add(quoteCurrency, 0, 0)", span="368-368"];
m46_85 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security = new Cfd.Cfd(exchangeHours, securityPortfolioManager.CashBook[quoteCurrency], config, symbolProperties)", span="370-370"];
m46_87 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security = new Security(exchangeHours, config, securityPortfolioManager.CashBook[CashBook.AccountCurrency], symbolProperties)", span="376-376"];
m46_88 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="securityInitializer.Initialize(security)", span="381-381"];
m46_89 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="leverage > 0", span="385-385"];
m46_90 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="security.SetLeverage(leverage)", span="387-387"];
m46_91 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="return security;", span="390-390"];
m46_92 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="SecurityManager.cs", label="Exit QuantConnect.Securities.SecurityManager.CreateSecurity(System.Type, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="308-308"];
m46_24 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="SecurityManager.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m46_95 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="SecurityManager.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42"];
m46_118 [file="SecurityManager.cs", label="QuantConnect.Securities.SecurityManager", span=""];
m48_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="232-232"];
m48_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return AROON(symbol, period, period, resolution, selector);", span="234-234"];
m48_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="232-232"];
m48_22 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ResetsProperly2()", file="StandardDeviationTests.cs", label="std.Update(DateTime.Today.AddSeconds(2), 1m)", span="54-54"];
m48_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="selector = selector ?? (x => x.Value)", span="1069-1069"];
m48_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="1072-1072"];
m48_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value));\r\n            }", span="1075-1079"];
m48_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1066-1066"];
m48_12 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", file="StandardDeviationTests.cs", label="Assert.AreEqual(2.05480466765633m, std.Current.Value)", span="45-45"];
m48_128 [cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="67-67"];
m48_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="453-453"];
m48_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''OBV'', resolution)", span="455-455"];
m48_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, onBalanceVolume, resolution, selector)", span="457-457"];
m48_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var onBalanceVolume = new OnBalanceVolume(name)", span="456-456"];
m48_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return onBalanceVolume;", span="458-458"];
m48_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="453-453"];
m48_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="384-384"];
m48_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="string name = CreateIndicatorName(symbol, ''ROC'' + period, resolution)", span="386-386"];
m48_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var rateofchange = new RateOfChange(name, period)", span="387-387"];
m48_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, rateofchange, resolution, selector)", span="388-388"];
m48_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return rateofchange;", span="389-389"];
m48_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="384-384"];
m48_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="401-401"];
m48_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="string name = CreateIndicatorName(symbol, ''ROCP'' + period, resolution)", span="403-403"];
m48_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var rateofchangepercent = new RateOfChangePercent(name, period)", span="404-404"];
m48_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, rateofchangepercent, resolution, selector)", span="405-405"];
m48_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return rateofchangepercent;", span="406-406"];
m48_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="401-401"];
m48_5 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", file="StandardDeviationTests.cs", label="std.Update(reference.AddDays(2), -1m)", span="35-35"];
m48_6 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", color=green, community=0, file="StandardDeviationTests.cs", label="Assert.AreEqual(0m, std.Current.Value)", prediction=36, span="36-36"];
m48_8 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", file="StandardDeviationTests.cs", label="Assert.AreEqual(0.942809041582063m, std.Current.Value)", span="39-39"];
m48_7 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", file="StandardDeviationTests.cs", label="std.Update(reference.AddDays(3), 1m)", span="38-38"];
m48_9 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", file="StandardDeviationTests.cs", label="std.Update(reference.AddDays(4), -2m)", span="41-41"];
m48_10 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", file="StandardDeviationTests.cs", label="Assert.AreEqual(1.24721912892465m, std.Current.Value)", span="42-42"];
m48_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="840-840"];
m48_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''NATR'' + period, resolution)", span="842-842"];
m48_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var natr = new NormalizedAverageTrueRange(name, period)", span="843-843"];
m48_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, natr, resolution, selector)", span="844-844"];
m48_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return natr;", span="845-845"];
m48_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="840-840"];
m48_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="631-631"];
m48_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''VAR'' + period, resolution)", span="633-633"];
m48_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var variance = new Variance(name, period)", span="634-634"];
m48_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, variance, resolution, selector)", span="635-635"];
m48_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return variance;", span="636-636"];
m48_252 [cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="631-631"];
m48_215 [cluster="QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", span="54-54"];
m48_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="489-489"];
m48_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''KCH'', resolution)", span="491-491"];
m48_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var keltnerChannels = new KeltnerChannels(name, period, k, movingAverageType)", span="492-492"];
m48_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, keltnerChannels, resolution, selector)", span="493-493"];
m48_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return keltnerChannels;", span="494-494"];
m48_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="489-489"];
m48_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="553-553"];
m48_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="return STO(symbol, period, period, 3, resolution);", span="555-555"];
m48_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="553-553"];
m48_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="774-774"];
m48_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''MAD'' + period, resolution)", span="776-776"];
m48_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var mad = new MeanAbsoluteDeviation(name, period)", span="777-777"];
m48_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, mad, resolution, selector)", span="778-778"];
m48_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return mad;", span="779-779"];
m48_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="774-774"];
m48_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="824-824"];
m48_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''T3({0},{1})'', period, volumeFactor), resolution)", span="826-826"];
m48_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var t3 = new T3MovingAverage(name, period, volumeFactor)", span="827-827"];
m48_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, t3, resolution, selector)", span="828-828"];
m48_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return t3;", span="829-829"];
m48_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="824-824"];
m48_351 [cluster="QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", span="62-62"];
m48_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="87-87"];
m48_379 [cluster="QuantConnect.Indicators.UltimateOscillator.UltimateOscillator(string, int, int, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.UltimateOscillator.UltimateOscillator(string, int, int, int)", span="55-55"];
m48_72 [cluster="System.Type.IsAssignableFrom(System.Type)", file="StandardDeviationTests.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m48_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="678-678"];
m48_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''TR'', resolution)", span="680-680"];
m48_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, tr, resolution, selector)", span="682-682"];
m48_270 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var tr = new TrueRange(name)", span="681-681"];
m48_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return tr;", span="683-683"];
m48_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="678-678"];
m48_0 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", file="StandardDeviationTests.cs", label="Entry QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", span="25-25"];
m48_2 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", file="StandardDeviationTests.cs", label="var reference = DateTime.MinValue", span="30-30"];
m48_3 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ComputesCorrectly()", file="StandardDeviationTests.cs", label="std.Update(reference.AddDays(1), 1m)", span="32-32"];
m48_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="298-298"];
m48_116 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''RSI'' + period, resolution)", span="300-300"];
m48_117 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var rsi = new RelativeStrengthIndex(name, period, movingAverageType)", span="301-301"];
m48_118 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, rsi, resolution, selector)", span="302-302"];
m48_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return rsi;", span="303-303"];
m48_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="298-298"];
m48_330 [cluster="QuantConnect.Indicators.Sum.Sum(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.Sum.Sum(string, int)", span="44-44"];
m48_437 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="121-121"];
m48_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="507-507"];
m48_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''DCH'', resolution)", span="509-509"];
m48_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var donchianChannel = new DonchianChannel(name, upperPeriod, lowerPeriod)", span="510-510"];
m48_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, donchianChannel, resolution, selector)", span="511-511"];
m48_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return donchianChannel;", span="512-512"];
m48_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="507-507"];
m48_445 [cluster="System.Func<T, TResult>.Invoke(T)", file="StandardDeviationTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m48_480 [cluster="System.Type.MakeGenericType(params System.Type[])", file="StandardDeviationTests.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m48_532 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="StandardDeviationTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m48_500 [cluster="QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", span="39-39"];
m48_100 [cluster="QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", span="61-61"];
m48_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="710-710"];
m48_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''DEMA'' + period, resolution)", span="712-712"];
m48_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var dema = new DoubleExponentialMovingAverage(name, period)", span="713-713"];
m48_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, dema, resolution, selector)", span="714-714"];
m48_286 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return dema;", span="715-715"];
m48_287 [cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="710-710"];
m48_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="367-367"];
m48_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''BB({0},{1})'', period, k), resolution)", span="369-369"];
m48_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var bb = new BollingerBands(name, period, k, movingAverageType)", span="370-370"];
m48_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, bb, resolution, selector)", span="371-371"];
m48_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return bb;", span="372-372"];
m48_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="367-367"];
m48_393 [cluster="QuantConnect.Indicators.MidPrice.MidPrice(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.MidPrice.MidPrice(string, int)", span="35-35"];
m48_498 [cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", span="30-30"];
m48_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", span="1117-1117"];
m48_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="1120-1120"];
m48_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, T>)", span="1117-1117"];
m48_267 [cluster="QuantConnect.Indicators.AccumulationDistributionOscillator.AccumulationDistributionOscillator(string, int, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.AccumulationDistributionOscillator.AccumulationDistributionOscillator(string, int, int)", span="48-48"];
m48_421 [cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40"];
m48_21 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.ResetsProperly2()", file="StandardDeviationTests.cs", label="std.Update(DateTime.Today.AddSeconds(1), 5m)", span="53-53"];
m48_483 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="var subscription = GetSubscription(symbol)", span="1199-1199"];
m48_484 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="!timeSpan.HasValue || subscription.Resolution.ToTimeSpan() == timeSpan.Value", span="1202-1202"];
m48_487 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="timeSpan.Value < subscription.Resolution.ToTimeSpan()", span="1211-1211"];
m48_488 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="throw new ArgumentException(string.Format(''Unable to create {0} consolidator because {0} is registered for {1} data. '' +\r\n                    ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, subscription.Resolution)\r\n                    );", span="1213-1216"];
m48_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="return new TradeBarConsolidator(timeSpan.Value);", span="1223-1223"];
m48_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="return new TickConsolidator(timeSpan.Value);", span="1230-1230"];
m48_494 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="return new DynamicDataConsolidator(timeSpan.Value);", span="1236-1236"];
m48_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="return new BaseDataConsolidator(timeSpan.Value);", span="1240-1240"];
m48_485 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="var identityConsolidatorType = typeof(IdentityDataConsolidator<>).MakeGenericType(subscription.Type)", span="1205-1205"];
m48_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="1221-1221"];
m48_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="typeof(Tick).IsAssignableFrom(subscription.Type)", span="1228-1228"];
m48_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="typeof(DynamicData).IsAssignableFrom(subscription.Type)", span="1234-1234"];
m48_486 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="return (IDataConsolidator)Activator.CreateInstance(identityConsolidatorType);", span="1206-1206"];
m48_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1197-1197"];
m48_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="316-316"];
m48_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''CCI'' + period, resolution)", span="318-318"];
m48_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var cci = new CommodityChannelIndex(name, period, movingAverageType)", span="319-319"];
m48_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, cci, resolution, selector)", span="320-320"];
m48_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return cci;", span="321-321"];
m48_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="316-316"];
m48_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="419-419"];
m48_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="string name = CreateIndicatorName(symbol, ''WILR'' + period, resolution)", span="421-421"];
m48_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var williamspercentr = new WilliamsPercentR(name, period)", span="422-422"];
m48_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, williamspercentr, resolution, selector)", span="423-423"];
m48_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return williamspercentr;", span="424-424"];
m48_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="419-419"];
m48_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="122-122"];
m48_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="string name = CreateIndicatorName(symbol, ''EMA'' + period, resolution)", span="124-124"];
m48_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var ema = new ExponentialMovingAverage(name, period)", span="125-125"];
m48_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, ema, resolution, selector)", span="126-126"];
m48_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return ema;", span="127-127"];
m48_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="122-122"];
m48_497 [cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="44-44"];
m48_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="StandardDeviationTests.cs", label="return identity;", span="71-71"];
m48_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="66-66"];
m48_20 [cluster="string.Format(string, object, object, object)", file="StandardDeviationTests.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m48_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="87-87"];
m48_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ICHIMOKU({0},{1})'', tenkanPeriod, kijunPeriod), resolution)", span="89-89"];
m48_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="var ichimoku = new IchimokuKinkoHyo(name, tenkanPeriod, kijunPeriod, senkouAPeriod, senkouBPeriod, senkouADelayPeriod, senkouBDelayPeriod)", span="90-90"];
m48_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, ichimoku, resolution)", span="91-91"];
m48_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.BaseData, decimal>, string)", span="66-66"];
m48_114 [cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", span="38-38"];
m48_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var atr = new AverageTrueRange(name, period, type)", span="108-108"];
m48_75 [cluster="lambda expression", file="StandardDeviationTests.cs", label="((TradeBar)x).High", span="187-187"];
m48_74 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Entry lambda expression", span="187-187"];
m48_76 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Exit lambda expression", span="187-187"];
m48_89 [cluster="lambda expression", file="StandardDeviationTests.cs", label="((TradeBar) x).Low", span="216-216"];
m48_88 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Entry lambda expression", span="216-216"];
m48_90 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Exit lambda expression", span="216-216"];
m48_425 [cluster="lambda expression", file="StandardDeviationTests.cs", label="x.Value", span="1042-1042"];
m48_424 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Entry lambda expression", span="1042-1042"];
m48_426 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Exit lambda expression", span="1042-1042"];
m48_431 [cluster="lambda expression", file="StandardDeviationTests.cs", label="x.Value", span="1055-1055"];
m48_430 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Entry lambda expression", span="1055-1055"];
m48_432 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Exit lambda expression", span="1055-1055"];
m48_443 [cluster="lambda expression", file="StandardDeviationTests.cs", label="indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value))", span="1078-1078"];
m48_439 [cluster="lambda expression", file="StandardDeviationTests.cs", label="x.Value", span="1069-1069"];
m48_442 [cluster="lambda expression", file="StandardDeviationTests.cs", label="var value = selector(consolidated)", span="1077-1077"];
m48_438 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Entry lambda expression", span="1069-1069"];
m48_440 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Exit lambda expression", span="1069-1069"];
m48_441 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Entry lambda expression", span="1075-1079"];
m48_444 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Exit lambda expression", span="1075-1079"];
m48_469 [cluster="lambda expression", file="StandardDeviationTests.cs", label="indicator.Update(value)", span="1154-1154"];
m48_465 [cluster="lambda expression", file="StandardDeviationTests.cs", label="(T) x", span="1135-1135"];
m48_468 [cluster="lambda expression", file="StandardDeviationTests.cs", label="var value = selector(consolidated)", span="1153-1153"];
m48_464 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Entry lambda expression", span="1135-1135"];
m48_466 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Exit lambda expression", span="1135-1135"];
m48_467 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Entry lambda expression", span="1151-1155"];
m48_470 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Exit lambda expression", span="1151-1155"];
m48_511 [cluster="lambda expression", file="StandardDeviationTests.cs", label="x.Symbol == symbol", span="1255-1255"];
m48_510 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Entry lambda expression", span="1255-1255"];
m48_512 [cluster="lambda expression", file="StandardDeviationTests.cs", label="Exit lambda expression", span="1255-1255"];
m48_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, atr, resolution, selector)", span="109-109"];
m48_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return atr;", span="110-110"];
m48_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1249-1249"];
m48_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1272-1272"];
m48_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1040-1040"];
m48_365 [cluster="QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", span="39-39"];
m48_29 [cluster="string.Format(string, object, object)", file="StandardDeviationTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m48_135 [cluster="QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", span="78-78"];
m48_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="646-646"];
m48_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''AD'', resolution)", span="648-648"];
m48_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, ad, resolution, selector)", span="650-650"];
m48_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var ad = new AccumulationDistribution(name)", span="649-649"];
m48_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return ad;", span="651-651"];
m48_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="646-646"];
m48_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="742-742"];
m48_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''TRIMA'' + period, resolution)", span="744-744"];
m48_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var trima = new TriangularMovingAverage(name, period)", span="745-745"];
m48_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, trima, resolution, selector)", span="746-746"];
m48_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return trima;", span="747-747"];
m48_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="742-742"];
m48_401 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="989-989"];
m48_402 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''PPO({0},{1})'', fastPeriod, slowPeriod), resolution)", span="991-991"];
m48_403 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var ppo = new PercentagePriceOscillator(name, fastPeriod, slowPeriod, movingAverageType)", span="992-992"];
m48_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, ppo, resolution, selector)", span="993-993"];
m48_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return ppo;", span="994-994"];
m48_406 [cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="989-989"];
m48_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="538-538"];
m48_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="string name = CreateIndicatorName(symbol, ''STO'', resolution)", span="540-540"];
m48_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="var stoch = new Stochastic(name, period, kPeriod, dPeriod)", span="541-541"];
m48_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, stoch, resolution)", span="542-542"];
m48_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="return stoch;", span="543-543"];
m48_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="538-538"];
m48_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="158-158"];
m48_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''MACD({0},{1})'', fastPeriod, slowPeriod), resolution)", span="160-160"];
m48_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var macd = new MovingAverageConvergenceDivergence(name, fastPeriod, slowPeriod, signalPeriod, type)", span="161-161"];
m48_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, macd, resolution, selector)", span="162-162"];
m48_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return macd;", span="163-163"];
m48_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="158-158"];
m48_142 [cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="44-44"];
m48_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="436-436"];
m48_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="string name = CreateIndicatorName(symbol, ''LWMA'' + period, resolution)", span="438-438"];
m48_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var lwma = new LinearWeightedMovingAverage(name, period)", span="439-439"];
m48_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, lwma, resolution, selector)", span="440-440"];
m48_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return lwma;", span="441-441"];
m48_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="436-436"];
m48_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="921-921"];
m48_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ULTOSC({0},{1},{2})'', period1, period2, period3), resolution)", span="923-923"];
m48_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var ultosc = new UltimateOscillator(name, period1, period2, period3)", span="924-924"];
m48_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, ultosc, resolution, selector)", span="925-925"];
m48_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return ultosc;", span="926-926"];
m48_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="921-921"];
m48_427 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1053-1053"];
m48_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="1055-1055"];
m48_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1053-1053"];
m48_77 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="204-204"];
m48_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''MIN'' + period, resolution)", span="206-206"];
m48_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var min = new Minimum(name, period)", span="207-207"];
m48_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="selector == null", span="210-210"];
m48_81 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var subscription = GetSubscription(symbol)", span="212-212"];
m48_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, min, ResolveConsolidator(symbol, resolution), selector)", span="220-220"];
m48_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return min;", span="221-221"];
m48_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="typeof (TradeBar).IsAssignableFrom(subscription.Type)", span="213-213"];
m48_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="selector = x => ((TradeBar) x).Low", span="216-216"];
m48_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="204-204"];
m48_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="105-105"];
m48_260 [cluster="QuantConnect.Indicators.AccumulationDistribution.AccumulationDistribution(string)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.AccumulationDistribution.AccumulationDistribution(string)", span="30-30"];
m48_232 [cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="40-40"];
m48_501 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="StandardDeviationTests.cs", label="SubscriptionDataConfig subscription", span="1251-1251"];
m48_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="StandardDeviationTests.cs", label="subscription = SubscriptionManager.Subscriptions.First(x => x.Symbol == symbol)", span="1255-1255"];
m48_504 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="StandardDeviationTests.cs", label="throw new Exception(''Please register to receive data for symbol ''' + symbol.ToString() + ''' using the AddSecurity() function.'');", span="1260-1260"];
m48_503 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="StandardDeviationTests.cs", label=InvalidOperationException, span="1257-1257"];
m48_505 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="StandardDeviationTests.cs", label="return subscription;", span="1262-1262"];
m48_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1249-1249"];
m48_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="524-524"];
m48_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return DCH(symbol, period, period, resolution, selector);", span="526-526"];
m48_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="524-524"];
m48_400 [cluster="QuantConnect.Indicators.AbsolutePriceOscillator.AbsolutePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.AbsolutePriceOscillator.AbsolutePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", span="34-34"];
m48_316 [cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="48-48"];
m48_38 [cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="56-56"];
m48_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="694-694"];
m48_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''CMO'' + period, resolution)", span="696-696"];
m48_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var cmo = new ChandeMomentumOscillator(name, period)", span="697-697"];
m48_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, cmo, resolution, selector)", span="698-698"];
m48_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return cmo;", span="699-699"];
m48_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="694-694"];
m48_60 [cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="66-66"];
m48_288 [cluster="QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", span="38-38"];
m48_15 [cluster="System.DateTime.AddDays(double)", file="StandardDeviationTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m48_17 [cluster="Unk.AreEqual", file="StandardDeviationTests.cs", label="Entry Unk.AreEqual", span=""];
m48_16 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="34-34"];
m48_372 [cluster="QuantConnect.Indicators.MidPoint.MidPoint(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.MidPoint.MidPoint(string, int)", span="33-33"];
m48_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="470-470"];
m48_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''ADX'', resolution)", span="472-472"];
m48_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var averageDirectionalIndex = new AverageDirectionalIndex(name, period)", span="473-473"];
m48_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, averageDirectionalIndex, resolution, selector)", span="474-474"];
m48_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return averageDirectionalIndex;", span="475-475"];
m48_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="470-470"];
m48_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="581-581"];
m48_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''LSMA'' + period, resolution)", span="583-583"];
m48_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var lsma = new LeastSquaresMovingAverage(name, period)", span="584-584"];
m48_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, lsma, resolution, selector)", span="585-585"];
m48_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return lsma;", span="586-586"];
m48_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="581-581"];
m48_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="887-887"];
m48_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''KAMA'' + period, resolution)", span="889-889"];
m48_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var kama = new KaufmanAdaptiveMovingAverage(name, period)", span="890-890"];
m48_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, kama, resolution, selector)", span="891-891"];
m48_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return kama;", span="892-892"];
m48_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="887-887"];
m48_198 [cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="80-80"];
m48_87 [cluster="QuantConnect.Indicators.Minimum.Minimum(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.Minimum.Minimum(string, int)", span="51-51"];
m48_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="726-726"];
m48_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''TEMA'' + period, resolution)", span="728-728"];
m48_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var tema = new TripleExponentialMovingAverage(name, period)", span="729-729"];
m48_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, tema, resolution, selector)", span="730-730"];
m48_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return tema;", span="731-731"];
m48_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="726-726"];
m48_309 [cluster="QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", span="29-29"];
m48_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", span="1024-1024"];
m48_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''FRAMA'' + period, resolution)", span="1026-1026"];
m48_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="var frama = new FractalAdaptiveMovingAverage(name, period, longPeriod)", span="1027-1027"];
m48_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, frama, resolution)", span="1028-1028"];
m48_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="return frama;", span="1029-1029"];
m48_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?)", span="1024-1024"];
m48_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="615-615"];
m48_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''BOP'', resolution)", span="617-617"];
m48_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, bop, resolution, selector)", span="619-619"];
m48_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var bop = new BalanceOfPower(name)", span="618-618"];
m48_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return bop;", span="620-620"];
m48_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="615-615"];
m48_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="791-791"];
m48_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''MOMERSION({0},{1})'', minPeriod, fullPeriod), resolution)", span="793-793"];
m48_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var momersion = new MomersionIndicator(name, minPeriod, fullPeriod)", span="794-794"];
m48_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, momersion, resolution, selector)", span="795-795"];
m48_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return momersion;", span="796-796"];
m48_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="791-791"];
m48_394 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="971-971"];
m48_395 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''APO({0},{1})'', fastPeriod, slowPeriod), resolution)", span="973-973"];
m48_396 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var apo = new AbsolutePriceOscillator(name, fastPeriod, slowPeriod, movingAverageType)", span="974-974"];
m48_397 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, apo, resolution, selector)", span="975-975"];
m48_398 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return apo;", span="976-976"];
m48_399 [cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="971-971"];
m48_302 [cluster="QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", span="34-34"];
m48_481 [cluster="System.Activator.CreateInstance(System.Type)", file="StandardDeviationTests.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m48_253 [cluster="QuantConnect.Indicators.Variance.Variance(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.Variance.Variance(string, int)", span="39-39"];
m48_407 [cluster="QuantConnect.Indicators.PercentagePriceOscillator.PercentagePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.PercentagePriceOscillator.PercentagePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", span="31-31"];
m48_509 [cluster="QuantConnect.Symbol.ToString()", file="StandardDeviationTests.cs", label="Entry QuantConnect.Symbol.ToString()", span="208-208"];
m48_246 [cluster="QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", span="30-30"];
m48_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="139-139"];
m48_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="string name = CreateIndicatorName(symbol, ''SMA'' + period, resolution)", span="141-141"];
m48_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var sma = new SimpleMovingAverage(name, period)", span="142-142"];
m48_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, sma, resolution, selector)", span="143-143"];
m48_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return sma;", span="144-144"];
m48_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="139-139"];
m48_225 [cluster="QuantConnect.Indicators.LogReturn.LogReturn(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.LogReturn.LogReturn(string, int)", span="31-31"];
m48_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="871-871"];
m48_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''ADXR'' + period, resolution)", span="873-873"];
m48_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var adxr = new AverageDirectionalMovementIndexRating(name, period)", span="874-874"];
m48_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, adxr, resolution, selector)", span="875-875"];
m48_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return adxr;", span="876-876"];
m48_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="871-871"];
m48_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="246-246"];
m48_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''AROON({0},{1})'', upPeriod, downPeriod), resolution)", span="248-248"];
m48_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var aroon = new AroonOscillator(name, upPeriod, downPeriod)", span="249-249"];
m48_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, aroon, resolution, selector)", span="250-250"];
m48_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return aroon;", span="251-251"];
m48_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="246-246"];
m48_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="1006-1006"];
m48_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''VWAP'' + period, resolution)", span="1008-1008"];
m48_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var vwap = new VolumeWeightedAveragePriceIndicator(name, period)", span="1009-1009"];
m48_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, vwap, resolution, selector)", span="1010-1010"];
m48_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return vwap;", span="1011-1011"];
m48_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="1006-1006"];
m48_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="953-953"];
m48_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''MIDPRICE'' + period, resolution)", span="955-955"];
m48_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var midprice = new MidPrice(name, period)", span="956-956"];
m48_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, midprice, resolution, selector)", span="957-957"];
m48_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return midprice;", span="958-958"];
m48_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="953-953"];
m48_508 [cluster="System.Exception.Exception(string)", file="StandardDeviationTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m48_205 [cluster="QuantConnect.Indicators.DonchianChannel.DonchianChannel(string, int, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.DonchianChannel.DonchianChannel(string, int, int)", span="55-55"];
m48_149 [cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="53-53"];
m48_31 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.CreateIndicator()", file="StandardDeviationTests.cs", label="Entry QuantConnect.Tests.Indicators.StandardDeviationTests.CreateIndicator()", span="61-61"];
m48_448 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution))", span="1092-1092"];
m48_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1089-1089"];
m48_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="!resolution.HasValue", span="1274-1274"];
m48_514 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="resolution = GetSubscription(symbol).Resolution", span="1276-1276"];
m48_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label=resolution, span="1279-1279"];
m48_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="return string.Format(''{0}({1}{2})'', type, symbol.ToString(), res);", span="1303-1303"];
m48_515 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="string res", span="1278-1278"];
m48_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Resolution.Tick", span="1281-1281"];
m48_519 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Resolution.Second", span="1284-1284"];
m48_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Resolution.Minute", span="1287-1287"];
m48_523 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Resolution.Hour", span="1290-1290"];
m48_525 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Resolution.Daily", span="1293-1293"];
m48_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label=null, span="1296-1296"];
m48_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="throw new ArgumentOutOfRangeException(''resolution'');", span="1300-1300"];
m48_518 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="res = ''_tick''", span="1282-1282"];
m48_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="res = ''_sec''", span="1285-1285"];
m48_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="res = ''_min''", span="1288-1288"];
m48_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="res = ''_hr''", span="1291-1291"];
m48_526 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="res = ''_day''", span="1294-1294"];
m48_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="res = string.Empty", span="1297-1297"];
m48_531 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1272-1272"];
m48_447 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74"];
m48_53 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m48_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="263-263"];
m48_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="string name = CreateIndicatorName(symbol, ''MOM'' + period, resolution)", span="265-265"];
m48_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var momentum = new Momentum(name, period)", span="266-266"];
m48_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, momentum, resolution, selector)", span="267-267"];
m48_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return momentum;", span="268-268"];
m48_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="263-263"];
m48_136 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="349-349"];
m48_137 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''STD'' + period, resolution)", span="351-351"];
m48_138 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var std = new StandardDeviation(name, period)", span="352-352"];
m48_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, std, resolution, selector)", span="353-353"];
m48_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return std;", span="354-354"];
m48_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="349-349"];
m48_239 [cluster="QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", span="43-43"];
m48_32 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.CreateIndicator()", file="StandardDeviationTests.cs", label="return new StandardDeviation(10);", span="63-63"];
m48_33 [cluster="QuantConnect.Tests.Indicators.StandardDeviationTests.CreateIndicator()", file="StandardDeviationTests.cs", label="Exit QuantConnect.Tests.Indicators.StandardDeviationTests.CreateIndicator()", span="61-61"];
m48_414 [cluster="QuantConnect.Indicators.VolumeWeightedAveragePriceIndicator.VolumeWeightedAveragePriceIndicator(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.VolumeWeightedAveragePriceIndicator.VolumeWeightedAveragePriceIndicator(string, int)", span="48-48"];
m48_30 [cluster="QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", span="99-99"];
m48_184 [cluster="QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", span="34-34"];
m48_156 [cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", span="37-37"];
m48_107 [cluster="QuantConnect.Indicators.Momentum.Momentum(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.Momentum.Momentum(string, int)", span="37-37"];
m48_46 [cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", span="30-30"];
m48_170 [cluster="QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", span="59-59"];
m48_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="903-903"];
m48_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''MIDPOINT'' + period, resolution)", span="905-905"];
m48_368 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var midpoint = new MidPoint(name, period)", span="906-906"];
m48_369 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, midpoint, resolution, selector)", span="907-907"];
m48_370 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return midpoint;", span="908-908"];
m48_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="903-903"];
m48_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="280-280"];
m48_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="string name = CreateIndicatorName(symbol, ''MOMP'' + period, resolution)", span="282-282"];
m48_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var momentum = new MomentumPercent(name, period)", span="283-283"];
m48_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, momentum, resolution, selector)", span="284-284"];
m48_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return momentum;", span="285-285"];
m48_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="280-280"];
m48_507 [cluster="Unk.First", file="StandardDeviationTests.cs", label="Entry Unk.First", span=""];
m48_482 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="StandardDeviationTests.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="581-581"];
m48_163 [cluster="QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", span="37-37"];
m48_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="599-599"];
m48_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''PSAR({0},{1},{2})'', afStart, afIncrement, afMax), resolution)", span="601-601"];
m48_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var psar = new ParabolicStopAndReverse(name, afStart, afIncrement, afMax)", span="602-602"];
m48_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, psar, resolution, selector)", span="603-603"];
m48_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return psar;", span="604-604"];
m48_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="599-599"];
m48_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="175-175"];
m48_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''MAX'' + period, resolution)", span="177-177"];
m48_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var max = new Maximum(name, period)", span="178-178"];
m48_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="selector == null", span="181-181"];
m48_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var subscription = GetSubscription(symbol)", span="183-183"];
m48_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, max, ResolveConsolidator(symbol, resolution), selector)", span="191-191"];
m48_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return max;", span="192-192"];
m48_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="184-184"];
m48_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="selector = x => ((TradeBar)x).High", span="187-187"];
m48_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="175-175"];
m48_281 [cluster="QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", span="44-44"];
m48_337 [cluster="QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", span="38-38"];
m48_422 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="1042-1042"];
m48_423 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="1040-1040"];
m48_274 [cluster="QuantConnect.Indicators.TrueRange.TrueRange(string)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.TrueRange.TrueRange(string)", span="35-35"];
m48_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="807-807"];
m48_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''SUM'' + period, resolution)", span="809-809"];
m48_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var sum = new Sum(name, period)", span="810-810"];
m48_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, sum, resolution, selector)", span="811-811"];
m48_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return sum;", span="812-812"];
m48_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="807-807"];
m48_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="565-565"];
m48_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="string name = CreateIndicatorName(symbol, ''LOGR'', resolution)", span="567-567"];
m48_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="var logr = new LogReturn(name, period)", span="568-568"];
m48_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, logr, resolution)", span="569-569"];
m48_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="return logr;", span="570-570"];
m48_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="565-565"];
m48_499 [cluster="QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", span="30-30"];
m48_121 [cluster="QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55"];
m48_71 [cluster="QuantConnect.Indicators.Maximum.Maximum(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.Maximum.Maximum(string, int)", span="51-51"];
m48_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="758-758"];
m48_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''ROCR'' + period, resolution)", span="760-760"];
m48_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var rocr = new RateOfChangeRatio(name, period)", span="761-761"];
m48_306 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, rocr, resolution, selector)", span="762-762"];
m48_307 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return rocr;", span="763-763"];
m48_308 [cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="758-758"];
m48_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="663-663"];
m48_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, string.Format(''ADOSC({0},{1})'', fastPeriod, slowPeriod), resolution)", span="665-665"];
m48_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var adOsc = new AccumulationDistributionOscillator(name, fastPeriod, slowPeriod)", span="666-666"];
m48_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, adOsc, resolution, selector)", span="667-667"];
m48_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return adOsc;", span="668-668"];
m48_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="663-663"];
m48_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="333-333"];
m48_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''MFI'' + period, resolution)", span="335-335"];
m48_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var mfi = new MoneyFlowIndex(name, period)", span="336-336"];
m48_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, mfi, resolution, selector)", span="337-337"];
m48_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return mfi;", span="338-338"];
m48_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="333-333"];
m48_27 [cluster="System.DateTime.AddSeconds(double)", file="StandardDeviationTests.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m48_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="855-855"];
m48_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''HA'', resolution)", span="857-857"];
m48_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, ha, resolution, selector)", span="859-859"];
m48_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="var ha = new HeikinAshi(name)", span="858-858"];
m48_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="return ha;", span="860-860"];
m48_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, QuantConnect.Data.Market.TradeBar>)", span="855-855"];
m48_386 [cluster="QuantConnect.Indicators.Trix.Trix(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.Trix.Trix(string, int)", span="35-35"];
m48_446 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52"];
m48_191 [cluster="QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", span="66-66"];
m48_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="937-937"];
m48_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var name = CreateIndicatorName(symbol, ''TRIX'' + period, resolution)", span="939-939"];
m48_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="var trix = new Trix(name, period)", span="940-940"];
m48_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, trix, resolution, selector)", span="941-941"];
m48_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="return trix;", span="942-942"];
m48_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, decimal>)", span="937-937"];
m48_295 [cluster="QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", span="37-37"];
m48_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", span="1131-1131"];
m48_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="selector = selector ?? (x => (T) x)", span="1135-1135"];
m48_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="1138-1138"];
m48_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="!type.IsAssignableFrom(consolidator.OutputType)", span="1142-1142"];
m48_460 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="throw new ArgumentException(string.Format(''Type mismatch found between consolidator and indicator for symbol: {0}.'' +\r\n                    ''Consolidator outputs type {1} but indicator expects input type {2}'',\r\n                    symbol, consolidator.OutputType.Name, type.Name)\r\n                    );", span="1144-1147"];
m48_461 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(value);\r\n            }", span="1151-1155"];
m48_458 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="var type = typeof(T)", span="1141-1141"];
m48_462 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.BaseData, T>)", span="1131-1131"];
m48_177 [cluster="QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", span="41-41"];
m48_344 [cluster="QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", span="36-36"];
m48_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", span="1103-1103"];
m48_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="1106-1106"];
m48_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.BaseData, T>)", span="1103-1103"];
m48_358 [cluster="QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", span="36-36"];
m48_323 [cluster="QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", span="52-52"];
m48_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1164-1164"];
m48_471 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="var subscription = GetSubscription(symbol)", span="1166-1166"];
m48_472 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="!resolution.HasValue || subscription.Resolution == resolution.Value", span="1169-1169"];
m48_475 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="var timeSpan = resolution.Value.ToTimeSpan()", span="1176-1176"];
m48_477 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="throw new ArgumentException(string.Format(''Unable to create {0} {1} consolidator because {0} is registered for {2} data. '' +\r\n                    ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, resolution.Value, subscription.Resolution)\r\n                    );", span="1182-1185"];
m48_478 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="return ResolveConsolidator(symbol, timeSpan);", span="1188-1188"];
m48_473 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="var identityConsolidatorType = typeof(IdentityDataConsolidator<>).MakeGenericType(subscription.Type)", span="1172-1172"];
m48_476 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="timeSpan < subscription.Resolution.ToTimeSpan()", span="1180-1180"];
m48_474 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="return (IDataConsolidator)Activator.CreateInstance(identityConsolidatorType);", span="1173-1173"];
m48_479 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="StandardDeviationTests.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1164-1164"];
m48_533 [file="StandardDeviationTests.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m48_534 [file="StandardDeviationTests.cs", label="System.Func<QuantConnect.Data.BaseData, decimal>", span=""];
m48_535 [file="StandardDeviationTests.cs", label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", span=""];
m48_536 [file="StandardDeviationTests.cs", label="System.Func<QuantConnect.Data.BaseData, T>", span=""];
m48_537 [file="StandardDeviationTests.cs", label="QuantConnect.Indicators.IndicatorBase<T>", span=""];
m48_538 [file="StandardDeviationTests.cs", label="QuantConnect.Symbol", span=""];
m51_35 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="SubscriptionDataConfig.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m51_37 [cluster="System.TimeSpan.FromMinutes(double)", file="SubscriptionDataConfig.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m51_38 [cluster="System.TimeSpan.FromHours(double)", file="SubscriptionDataConfig.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m51_54 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="SubscriptionDataConfig.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m51_39 [cluster="System.TimeSpan.FromDays(double)", file="SubscriptionDataConfig.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m51_0 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", span="157-157"];
m51_1 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Type = objectType", span="169-169"];
m51_2 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="SecurityType = symbol.ID.SecurityType", span="170-170"];
m51_3 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Resolution = resolution", span="171-171"];
m51_4 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="_sid = symbol.ID", span="172-172"];
m51_5 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="FillDataForward = fillForward", span="173-173"];
m51_6 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="ExtendedMarketHours = extendedHours", span="174-174"];
m51_8 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="MappedSymbol = symbol.Value", span="176-176"];
m51_9 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="IsInternalFeed = isInternalFeed", span="177-177"];
m51_10 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="IsCustomData = isCustom", span="178-178"];
m51_11 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Market = symbol.ID.Market", span="179-179"];
m51_12 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="DataTimeZone = dataTimeZone", span="180-180"];
m51_13 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="ExchangeTimeZone = exchangeTimeZone", span="181-181"];
m51_14 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="IsFilteredSubscription = isFilteredSubscription", span="182-182"];
m51_16 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="!tickType.HasValue", span="185-185"];
m51_20 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="TickType = tickType.Value", span="195-195"];
m51_21 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label=resolution, span="198-198"];
m51_33 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="throw new InvalidEnumArgumentException(''Unexpected Resolution: '' + resolution);", span="218-218"];
m51_7 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="PriceScaleFactor = 1", span="175-175"];
m51_15 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Consolidators = new HashSet<IDataConsolidator>()", span="183-183"];
m51_17 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="TickType = TickType.Trade", span="187-187"];
m51_18 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", color=green, community=0, file="SubscriptionDataConfig.cs", label="SecurityType == SecurityType.Forex || SecurityType == SecurityType.Cfd", prediction=37, span="188-188"];
m51_19 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="TickType = TickType.Quote", span="190-190"];
m51_22 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Resolution.Tick", span="200-200"];
m51_25 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Resolution.Second", span="205-205"];
m51_27 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Resolution.Minute", span="208-208"];
m51_29 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Resolution.Hour", span="211-211"];
m51_31 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Resolution.Daily", span="214-214"];
m51_23 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Increment = TimeSpan.FromSeconds(0)", span="202-202"];
m51_24 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="FillDataForward = false", span="203-203"];
m51_26 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Increment = TimeSpan.FromSeconds(1)", span="206-206"];
m51_28 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Increment = TimeSpan.FromMinutes(1)", span="209-209"];
m51_30 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Increment = TimeSpan.FromHours(1)", span="212-212"];
m51_32 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Increment = TimeSpan.FromDays(1)", span="215-215"];
m51_34 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="SubscriptionDataConfig.cs", label="Exit QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", span="157-157"];
m51_41 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?)", file="SubscriptionDataConfig.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?)", span="239-239"];
m51_42 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?)", file="SubscriptionDataConfig.cs", label="Exit QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?)", span="239-239"];
m51_40 [cluster="System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string)", file="SubscriptionDataConfig.cs", label="Entry System.ComponentModel.InvalidEnumArgumentException.InvalidEnumArgumentException(string)", span="0-0"];
m51_43 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="271-271"];
m51_44 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label=DataNormalizationMode, span="273-273"];
m51_46 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label="return price;", span="276-276"];
m51_49 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label="return price*PriceScaleFactor;", span="281-281"];
m51_51 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label="return (price*PriceScaleFactor) + SumOfDividends;", span="284-284"];
m51_45 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label="DataNormalizationMode.Raw", span="275-275"];
m51_47 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label="DataNormalizationMode.Adjusted", span="279-279"];
m51_50 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label="DataNormalizationMode.TotalReturn", span="283-283"];
m51_52 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label="throw new ArgumentOutOfRangeException();", span="287-287"];
m51_48 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label="DataNormalizationMode.SplitAdjusted", span="280-280"];
m51_53 [cluster="QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", file="SubscriptionDataConfig.cs", label="Exit QuantConnect.Data.SubscriptionDataConfig.GetNormalizedPrice(decimal)", span="271-271"];
m51_36 [cluster="System.TimeSpan.FromSeconds(double)", file="SubscriptionDataConfig.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m51_55 [file="SubscriptionDataConfig.cs", label="QuantConnect.Data.SubscriptionDataConfig", span=""];
m52_0 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Symbol.cs", label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="35-35"];
m52_2 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=green, community=0, file="Symbol.cs", label="return 0m;", prediction=38, span="40-40"];
m52_1 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Symbol.cs", label="order.Type == OrderType.Limit", span="38-38"];
m52_3 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Symbol.cs", label="decimal divisor = 0.025m", span="44-44"];
m52_5 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Symbol.cs", label="return fee;", span="47-47"];
m52_4 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Symbol.cs", label="decimal fee = security.Price * (order.Quantity < 0 ? (order.Quantity * -1) : order.Quantity) * divisor", span="46-46"];
m52_6 [cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="Symbol.cs", label="Exit QuantConnect.Orders.Fees.GDAXFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="35-35"];
m53_61 [cluster="QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.RemoveConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="202-202"];
m53_28 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.GetUnorderedQuantity(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget)", span="62-62"];
m53_29 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SymbolCacheTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m53_37 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="126-126"];
m53_38 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="var addedSymbols = new List<Symbol>()", span="128-128"];
m53_39 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="changes.AddedSecurities", span="129-129"];
m53_41 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="var symbolData = new SymbolData(algorithm, added, _period, _resolution)", span="134-134"];
m53_45 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="algorithm.History(addedSymbols, _period, _resolution)\r\n                    .PushThroughConsolidators(symbol =>\r\n                    {\r\n                        SymbolData data;\r\n                        return _symbolData.TryGetValue(symbol, out data) ? data.Consolidator : null;\r\n                    })", span="143-148"];
m53_46 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="changes.RemovedSecurities", span="151-151"];
m53_49 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="IsSafeToRemove(algorithm, removed.Symbol)", span="157-157"];
m53_51 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="algorithm.SubscriptionManager.RemoveConsolidator(removed.Symbol, data.Consolidator)", span="160-160"];
m53_42 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="addedSymbols.Add(added.Symbol)", span="135-135"];
m53_44 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="addedSymbols.Count > 0", span="140-140"];
m53_40 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="!_symbolData.ContainsKey(added.Symbol)", span="132-132"];
m53_43 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="_symbolData[added.Symbol] = symbolData", span="136-136"];
m53_47 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="SymbolData data", span="154-154"];
m53_48 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="_symbolData.TryGetValue(removed.Symbol, out data)", span="155-155"];
m53_50 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="_symbolData.Remove(removed.Symbol)", span="159-159"];
m53_52 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="SymbolCacheTests.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="126-126"];
m53_58 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.PushThroughConsolidators(System.Func<QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator>)", file="SymbolCacheTests.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.PushThroughConsolidators(System.Func<QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator>)", span="195-195"];
m53_82 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", span="207-207"];
m53_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SymbolCacheTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m53_53 [cluster="System.Collections.Generic.List<T>.List()", file="SymbolCacheTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m53_60 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="SymbolCacheTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m53_36 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.Remove(QuantConnect.Symbol)", span="169-169"];
m53_9 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", span="73-73"];
m53_10 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="_targetsCollection.AddRange(targets)", span="75-75"];
m53_13 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="var unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="82-82"];
m53_22 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="algorithm.MarketOrder(symbol, Math.Sign(unorderedQuantity) * orderSize)", span="108-108"];
m53_23 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="unorderedQuantity = OrderSizing.GetUnorderedQuantity(algorithm, target)", span="113-113"];
m53_11 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label=_targetsCollection, span="77-77"];
m53_12 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="var symbol = target.Symbol", span="79-79"];
m53_25 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="_targetsCollection.Remove(target.Symbol)", span="116-116"];
m53_15 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="!_symbolData.TryGetValue(symbol, out data)", span="86-86"];
m53_14 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="SymbolData data", span="85-85"];
m53_17 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="data.STD.IsReady && PriceIsFavorable(data, unorderedQuantity)", span="98-98"];
m53_19 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="var orderSize = Math.Min(maxOrderSize, Math.Abs(unorderedQuantity))", span="102-102"];
m53_16 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="data.Security.Price == 0m", span="92-92"];
m53_18 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="var maxOrderSize = OrderSizing.Value(data.Security, MaximumOrderValue)", span="101-101"];
m53_20 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="orderSize -= orderSize % data.Security.SymbolProperties.LotSize", span="105-105"];
m53_21 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="orderSize != 0", span="106-106"];
m53_24 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="unorderedQuantity == 0m", span="114-114"];
m53_26 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="SymbolCacheTests.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", span="73-73"];
m53_97 [cluster="lambda expression", file="SymbolCacheTests.cs", label="Entry lambda expression", span="225-229"];
m53_62 [cluster="lambda expression", file="SymbolCacheTests.cs", label="Entry lambda expression", span="144-148"];
m53_63 [cluster="lambda expression", file="SymbolCacheTests.cs", label="SymbolData data", span="146-146"];
m53_64 [cluster="lambda expression", file="SymbolCacheTests.cs", label="return _symbolData.TryGetValue(symbol, out data) ? data.Consolidator : null;", span="147-147"];
m53_65 [cluster="lambda expression", file="SymbolCacheTests.cs", label="Exit lambda expression", span="144-148"];
m53_80 [cluster="lambda expression", file="SymbolCacheTests.cs", label="kvp.Value.ContainsMember(symbol)", span="205-205"];
m53_79 [cluster="lambda expression", file="SymbolCacheTests.cs", label="Entry lambda expression", span="205-205"];
m53_81 [cluster="lambda expression", file="SymbolCacheTests.cs", label="Exit lambda expression", span="205-205"];
m53_98 [cluster="lambda expression", file="SymbolCacheTests.cs", label="SMA.Update(consolidated.EndTime, consolidated.Value)", span="227-227"];
m53_99 [cluster="lambda expression", file="SymbolCacheTests.cs", label="STD.Update(consolidated.EndTime, consolidated.Value)", span="228-228"];
m53_100 [cluster="lambda expression", file="SymbolCacheTests.cs", label="Exit lambda expression", span="225-229"];
m53_34 [cluster="System.Math.Sign(decimal)", file="SymbolCacheTests.cs", label="Entry System.Math.Sign(decimal)", span="0-0"];
m53_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m53_30 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", span="170-170"];
m53_66 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="var deviations = _deviations * data.STD", span="172-172"];
m53_67 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="unorderedQuantity > 0", span="173-173"];
m53_68 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="var price = data.Security.BidPrice == 0\r\n                    ? data.Security.Price\r\n                    : data.Security.BidPrice", span="175-177"];
m53_69 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="price < data.SMA - deviations", span="179-179"];
m53_71 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="var price = data.Security.AskPrice == 0\r\n                    ? data.Security.AskPrice\r\n                    : data.Security.Price", span="186-188"];
m53_72 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="price > data.SMA + deviations", span="190-190"];
m53_70 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="return true;", span="181-181"];
m53_74 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="return false;", span="196-196"];
m53_73 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="return true;", span="192-192"];
m53_75 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", file="SymbolCacheTests.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.PriceIsFavorable(QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData, decimal)", span="170-170"];
m53_55 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", span="215-215"];
m53_83 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="Security = security", span="217-217"];
m53_84 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, resolution)", span="218-218"];
m53_85 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="var smaName = algorithm.CreateIndicatorName(security.Symbol, ''SMA'' + period, resolution)", span="219-219"];
m53_86 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="SMA = new SimpleMovingAverage(smaName, period)", span="220-220"];
m53_87 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="var stdName = algorithm.CreateIndicatorName(security.Symbol, ''STD'' + period, resolution)", span="221-221"];
m53_88 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="STD = new StandardDeviation(stdName, period)", span="222-222"];
m53_89 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="algorithm.SubscriptionManager.AddConsolidator(security.Symbol, Consolidator)", span="224-224"];
m53_90 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="Consolidator.DataConsolidated += (sender, consolidated) =>\r\n                {\r\n                    SMA.Update(consolidated.EndTime, consolidated.Value);\r\n                    STD.Update(consolidated.EndTime, consolidated.Value);\r\n                }", span="225-229"];
m53_91 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security, int, QuantConnect.Resolution)", span="215-215"];
m53_95 [cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="44-44"];
m53_0 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", span="54-54"];
m53_1 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="_period = period", span="60-60"];
m53_2 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="_deviations = deviations", span="61-61"];
m53_3 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="_resolution = resolution", span="62-62"];
m53_4 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="_targetsCollection = new PortfolioTargetCollection()", span="63-63"];
m53_5 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="_symbolData = new Dictionary<Symbol, SymbolData>()", span="64-64"];
m53_6 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", file="SymbolCacheTests.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.StandardDeviationExecutionModel(int, decimal, QuantConnect.Resolution)", span="54-54"];
m53_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1270-1270"];
m53_96 [cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169"];
m53_78 [cluster="Unk.Any", file="SymbolCacheTests.cs", label="Entry Unk.Any", span=""];
m53_59 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="202-202"];
m53_76 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="SymbolCacheTests.cs", label="return !algorithm.UniverseManager.Any(kvp => kvp.Value.ContainsMember(symbol));", span="205-205"];
m53_77 [cluster="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="SymbolCacheTests.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="202-202"];
m53_94 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46"];
m53_31 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.Value(QuantConnect.Securities.Security, decimal)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.Value(QuantConnect.Securities.Security, decimal)", span="44-44"];
m53_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="433-433"];
m53_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SymbolCacheTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m53_27 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.AddRange(System.Collections.Generic.IEnumerable<QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget>)", span="91-91"];
m53_56 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SymbolCacheTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m53_33 [cluster="System.Math.Min(decimal, decimal)", file="SymbolCacheTests.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m53_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464"];
m53_7 [cluster="QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.PortfolioTargetCollection()", file="SymbolCacheTests.cs", label="Entry QuantConnect.Algorithm.Framework.Portfolio.PortfolioTargetCollection.PortfolioTargetCollection()", span="26-26"];
m53_101 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", file="SymbolCacheTests.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(System.DateTime, decimal)", span="106-106"];
m53_102 [file="SymbolCacheTests.cs", label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", span=""];
m53_103 [file="SymbolCacheTests.cs", label="QuantConnect.Symbol", span=""];
m53_104 [file="SymbolCacheTests.cs", label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", span=""];
m56_75 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m56_78 [cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="35-35"];
m56_80 [cluster="QuantConnect.Data.Market.Splits.Splits(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Splits.Splits(System.DateTime)", span="36-36"];
m56_84 [cluster="System.Collections.Generic.List<T>.Add(T)", file="TimeSlice.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m56_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="79-79"];
m56_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Time = time", span="89-89"];
m56_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Data = data", span="90-90"];
m56_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Slice = slice", span="91-91"];
m56_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="CustomData = customData", span="92-92"];
m56_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="DataPointCount = dataPointCount", span="93-93"];
m56_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="CashBookUpdateData = cashBookUpdateData", span="94-94"];
m56_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="SecuritiesUpdateData = securitiesUpdateData", span="95-95"];
m56_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="ConsolidatorUpdateData = consolidatorUpdateData", span="96-96"];
m56_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="SecurityChanges = securityChanges", span="97-97"];
m56_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.TimeSlice(System.DateTime, int, QuantConnect.Data.Slice, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Cash, QuantConnect.Data.BaseData>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>>>, System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<QuantConnect.Securities.Security, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>>>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="79-79"];
m56_82 [cluster="QuantConnect.Data.Market.Delistings.Delistings(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Delistings.Delistings(System.DateTime)", span="36-36"];
m56_85 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TimeSlice.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m56_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="109-109"];
m56_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="int count = 0", span="111-111"];
m56_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var allDataForAlgorithm = new List<BaseData>(data.Count)", span="115-115"];
m56_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var cash = new List<KeyValuePair<Cash, BaseData>>(cashBook.Count)", span="116-116"];
m56_19 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cashBook.Values", span="119-119"];
m56_25 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var algorithmTime = utcDateTime.ConvertFromUtc(algorithmTimeZone)", span="129-129"];
m56_32 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label=data, span="137-137"];
m56_64 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label=cashBook, span="211-211"];
m56_71 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="return new TimeSlice(utcDateTime, count, slice, data, cash, security, consolidator, custom, changes);", span="230-230"];
m56_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var security = new List<KeyValuePair<Security, List<BaseData>>>()", span="112-112"];
m56_38 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="count += list.Count", span="151-151"];
m56_14 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var custom = new List<KeyValuePair<Security, IEnumerable<BaseData>>>()", span="113-113"];
m56_67 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="security.Add(new KeyValuePair<Security, List<BaseData>>(packet.Security, securityUpdate))", span="220-220"];
m56_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var consolidator = new List<KeyValuePair<SubscriptionDataConfig, List<BaseData>>>()", span="114-114"];
m56_47 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="custom.Add(new KeyValuePair<Security, IEnumerable<BaseData>>(packet.Security, list))", span="166-166"];
m56_69 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidator.Add(new KeyValuePair<SubscriptionDataConfig, List<BaseData>>(packet.Security.SubscriptionDataConfig, consolidatorUpdate))", span="224-224"];
m56_45 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="allDataForAlgorithm.Add(baseData)", prediction=39, span="162-162"];
m56_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var cashSecurities = new HashSet<Symbol>()", span="118-118"];
m56_66 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cash.Add(new KeyValuePair<Cash, BaseData>(cashKvp.Value, securityUpdate[securityUpdate.Count - 1]))", span="215-215"];
m56_20 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cashSecurities.Add(cashItem.SecuritySymbol)", span="121-121"];
m56_63 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cashSecurities.Contains(packet.Security.Symbol)", span="209-209"];
m56_21 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Split split", span="124-124"];
m56_22 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Dividend dividend", span="125-125"];
m56_23 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Delisting delisting", span="126-126"];
m56_24 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="SymbolChangedEvent symbolChange", span="127-127"];
m56_26 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var tradeBars = new TradeBars(algorithmTime)", span="130-130"];
m56_27 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="var ticks = new Ticks(algorithmTime)", prediction=40, span="131-131"];
m56_28 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="var splits = new Splits(algorithmTime)", prediction=41, span="132-132"];
m56_29 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="var dividends = new Dividends(algorithmTime)", prediction=42, span="133-133"];
m56_30 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="var delistings = new Delistings(algorithmTime)", prediction=43, span="134-134"];
m56_31 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="var symbolChanges = new SymbolChangedEvents(algorithmTime)", prediction=44, span="135-135"];
m56_58 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="splits[symbol] = split", prediction=45, span="194-194"];
m56_56 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="dividends[symbol] = dividend", prediction=46, span="190-190"];
m56_54 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="delistings[symbol] = delisting", span="186-186"];
m56_60 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="symbolChanges[packet.Security.SubscriptionDataConfig.Symbol] = symbolChange", prediction=47, span="199-199"];
m56_33 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="var list = packet.Data", prediction=48, span="139-139"];
m56_34 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var symbol = packet.Security.Symbol", span="140-140"];
m56_44 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="!packet.Security.SubscriptionDataConfig.IsInternalFeed", prediction=49, span="159-159"];
m56_46 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="packet.Security.SubscriptionDataConfig.IsCustomData", span="163-163"];
m56_49 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="!packet.Security.SubscriptionDataConfig.IsInternalFeed", span="172-172"];
m56_65 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="cashKvp.Value.SecuritySymbol == packet.Security.Symbol", span="213-213"];
m56_35 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="list.Count == 0", span="142-142"];
m56_36 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="list.Count == 1 && list[0] is BaseDataCollection", span="145-145"];
m56_39 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var securityUpdate = new List<BaseData>(list.Count)", span="154-154"];
m56_40 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="var consolidatorUpdate = new List<BaseData>(list.Count)", span="155-155"];
m56_42 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="i < list.Count", span="156-156"];
m56_43 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="var baseData = list[i]", prediction=39, span="158-158"];
m56_52 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="securityUpdate.Add(baseData)", span="181-181"];
m56_62 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="securityUpdate.Count > 0", span="203-203"];
m56_41 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="int i = 0", span="156-156"];
m56_51 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidatorUpdate.Add(baseData)", span="177-177"];
m56_68 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="consolidatorUpdate.Count > 0", span="222-222"];
m56_61 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="i++", span="156-156"];
m56_48 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="baseData.DataType != MarketDataType.Auxiliary", span="170-170"];
m56_53 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(delisting = baseData as Delisting) != null", span="184-184"];
m56_55 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="(dividend = baseData as Dividend) != null", span="188-188"];
m56_57 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="(split = baseData as Split) != null", prediction=51, span="192-192"];
m56_59 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", color=green, community=0, file="TimeSlice.cs", label="(symbolChange = baseData as SymbolChangedEvent) != null", prediction=52, span="196-196"];
m56_72 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="109-109"];
m56_100 [cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189"];
m56_73 [cluster="System.Collections.Generic.List<T>.List()", file="TimeSlice.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m56_79 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="37-37"];
m56_83 [cluster="QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.SymbolChangedEvents.SymbolChangedEvents(System.DateTime)", span="36-36"];
m56_74 [cluster="System.Collections.Generic.List<T>.List(int)", file="TimeSlice.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m56_86 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars)", file="TimeSlice.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars)", span="236-236"];
m56_89 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars)", file="TimeSlice.cs", label="var symbol = baseData.Symbol", span="238-238"];
m56_90 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars)", file="TimeSlice.cs", label="baseData.DataType", span="241-241"];
m56_98 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars)", file="TimeSlice.cs", label="tradeBars[symbol] = (TradeBar) baseData", span="254-254"];
m56_91 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars)", file="TimeSlice.cs", label="MarketDataType.Tick", span="243-243"];
m56_97 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars)", file="TimeSlice.cs", label="MarketDataType.TradeBar", span="253-253"];
m56_99 [cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars)", file="TimeSlice.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.TimeSlice.PopulateDataDictionaries(QuantConnect.Data.BaseData, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.TradeBars)", span="236-236"];
m56_88 [cluster="QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Slice.Slice(System.DateTime, System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>, QuantConnect.Data.Market.TradeBars, QuantConnect.Data.Market.Ticks, QuantConnect.Data.Market.Splits, QuantConnect.Data.Market.Dividends, QuantConnect.Data.Market.Delistings, QuantConnect.Data.Market.SymbolChangedEvents, bool?)", span="156-156"];
m56_81 [cluster="QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", file="TimeSlice.cs", label="Entry QuantConnect.Data.Market.Dividends.Dividends(System.DateTime)", span="36-36"];
m56_76 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m56_87 [cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="TimeSlice.cs", label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0"];
m56_77 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="TimeSlice.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="473-473"];
m56_101 [file="TimeSlice.cs", label="QuantConnect.Lean.Engine.DataFeeds.TimeSlice", span=""];
m57_48 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", span="194-194"];
m57_49 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", color=green, community=0, file="Universe.cs", label="return _securities.ContainsKey(symbol);", prediction=53, span="196-196"];
m57_50 [cluster="QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.ContainsMember(QuantConnect.Symbol)", span="194-194"];
m57_57 [cluster="QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", span="254-254"];
m57_77 [cluster="QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Added = added", span="256-256"];
m57_78 [cluster="QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Security = security", span="257-257"];
m57_79 [cluster="QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.Member.Member(System.DateTime, QuantConnect.Securities.Security)", span="254-254"];
m57_41 [cluster="QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase)", span="166-166"];
m57_42 [cluster="QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase)", file="Universe.cs", label="return SecurityManager.CreateSecurity(algorithm.Portfolio, algorithm.SubscriptionManager, marketHoursDatabase, symbolPropertiesDatabase,\r\n                SecurityInitializer, symbol, UniverseSettings.Resolution, UniverseSettings.FillForward, UniverseSettings.Leverage,\r\n                UniverseSettings.ExtendedMarketHours, false, false, symbol.ID.SecurityType == SecurityType.Option);", span="169-171"];
m57_43 [cluster="QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.CreateSecurity(QuantConnect.Symbol, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase)", span="166-166"];
m57_44 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", file="Universe.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool)", span="398-398"];
m57_21 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="112-112"];
m57_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.ToString()", file="Universe.cs", label="return $''Direction: {Math.Round(100 * Direction, 2)} Magnitude: {Math.Round(100 * Magnitude, 2)}'';", span="127-127"];
m57_20 [cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return false;", span="123-123"];
m57_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Universe.cs", label="AlphaScoreType.Direction", span="79-79"];
m57_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", file="Universe.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", span="48-48"];
m57_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", file="Universe.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore()", span="48-48"];
m57_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Universe.cs", label="AlphaScoreType.Magnitude", span="83-83"];
m57_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Universe.cs", label="throw new ArgumentOutOfRangeException(nameof(type), type, null);", span="88-88"];
m57_18 [cluster="System.Math.Min(double, double)", file="Universe.cs", label="Entry System.Math.Min(double, double)", span="0-0"];
m57_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Universe.cs", label="Magnitude = Math.Max(0, Math.Min(1, value))", span="84-84"];
m57_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Universe.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", span="71-71"];
m57_19 [cluster="System.Math.Max(double, double)", file="Universe.cs", label="Entry System.Math.Max(double, double)", span="0-0"];
m57_37 [cluster="System.Math.Round(double, int)", file="Universe.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m57_59 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="224-224"];
m57_60 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="CanRemoveMember(utcTime, security)", span="226-226"];
m57_62 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return _securities.TryRemove(security.Symbol, out member);", span="229-229"];
m57_61 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Member member", span="228-228"];
m57_63 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return false;", span="231-231"];
m57_64 [cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="224-224"];
m57_52 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", span="206-206"];
m57_53 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="_securities.ContainsKey(security.Symbol)", span="208-208"];
m57_55 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return _securities.TryAdd(security.Symbol, new Member(utcTime, security));", span="212-212"];
m57_54 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="return false;", span="210-210"];
m57_56 [cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", span="206-206"];
m57_58 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="Universe.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0"];
m57_26 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="return Unchanged;", span="137-137"];
m57_27 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="var selections = result.ToHashSet()", span="140-140"];
m57_32 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="return selections;", span="147-147"];
m57_28 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="var hasDiffs = _previousSelections.Except(selections).Union(selections.Except(_previousSelections)).Any()", span="141-141"];
m57_30 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="!hasDiffs", span="143-143"];
m57_29 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="_previousSelections = selections", span="142-142"];
m57_31 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="return Unchanged;", span="145-145"];
m57_33 [cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="132-132"];
m57_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", file="Universe.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", span="96-96"];
m57_65 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="Universe.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m57_13 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType, double, System.DateTime)", file="Universe.cs", label="Direction = Math.Max(0, Math.Min(1, value))", span="80-80"];
m57_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", file="Universe.cs", label="IsFinalScore = true", span="98-98"];
m57_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", file="Universe.cs", label="UpdatedTimeUtc = algorithmUtcTime", span="99-99"];
m57_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", file="Universe.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.AlphaScore.Finalize(System.DateTime)", span="96-96"];
m57_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.ToString()", file="Universe.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.ToString()", span="125-125"];
m57_40 [cluster="QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="156-156"];
m57_39 [cluster="Unk.Any", file="Universe.cs", label="Entry Unk.Any", span=""];
m57_36 [cluster="Unk.ToHashSet", file="Universe.cs", label="Entry Unk.ToHashSet", span=""];
m57_51 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="Universe.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m57_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Universe.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", span="58-58"];
m57_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Universe.cs", label="Direction = direction", span="60-60"];
m57_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Universe.cs", label="Magnitude = magnitude", span="61-61"];
m57_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.AlphaScore.AlphaScore(double, double, System.DateTime)", file="Universe.cs", label="UpdatedTimeUtc = updatedTimeUtc", span="62-62"];
m57_6 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="Entry QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", span="94-94"];
m57_7 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="_previousSelections = new HashSet<Symbol>()", span="96-96"];
m57_8 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="_securities = new ConcurrentDictionary<Symbol, Member>()", span="97-97"];
m57_10 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="SecurityInitializer = securityInitializer ?? Securities.SecurityInitializer.Null", span="100-100"];
m57_11 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="Exit QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", span="94-94"];
m57_9 [cluster="QuantConnect.Data.UniverseSelection.Universe.Universe(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.ISecurityInitializer)", file="Universe.cs", label="Configuration = config", span="99-99"];
m57_38 [cluster="Unk.Union", file="Universe.cs", label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", span=""];
m57_80 [file="Universe.cs", label="QuantConnect.Data.UniverseSelection.Universe", span=""];
m57_81 [file="Universe.cs", label="QuantConnect.Data.UniverseSelection.Universe.Member", span=""];
m58_10 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="53-53"];
m58_11 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="_previous.Date == Time.Date", span="56-56"];
m58_23 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="Plot(_symbol, ''Open'', data[_symbol].Open)", span="79-79"];
m58_12 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="return;", span="56-56"];
m58_13 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="!_macd.IsReady", span="58-58"];
m58_14 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="return;", span="58-58"];
m58_15 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="var holding = Portfolio[_symbol]", span="60-60"];
m58_16 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="var signalDeltaPercent = (_macd - _macd.Signal)/_macd.Fast", span="62-62"];
m58_18 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="holding.Quantity <= 0 && signalDeltaPercent > tolerance", span="66-66"];
m58_20 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="holding.Quantity >= 0 && signalDeltaPercent < -tolerance", span="72-72"];
m58_17 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="var tolerance = 0.0025m", span="63-63"];
m58_19 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="SetHoldings(_symbol, 1.0)", span="69-69"];
m58_21 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="Liquidate(_symbol)", span="74-74"];
m58_22 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="Plot(''MACD'', _macd, _macd.Signal)", span="78-78"];
m58_24 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="Plot(_symbol, _macd.Fast, _macd.Slow)", span="80-80"];
m58_25 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="_previous = Time", span="82-82"];
m58_26 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="UniverseSelection.cs", label="Exit QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="53-53"];
m58_28 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770"];
m58_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="844-844"];
m58_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="231-231"];
m58_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="157-157"];
m58_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1197-1197"];
m58_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1371-1371"];
m58_0 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", span="38-38"];
m58_1 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="UniverseSelection.cs", label="SetStartDate(2004, 01, 01)", span="40-40"];
m58_2 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="UniverseSelection.cs", label="SetEndDate(2015, 01, 01)", span="41-41"];
m58_3 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="UniverseSelection.cs", label="AddSecurity(SecurityType.Equity, _symbol, Resolution.Daily)", span="43-43"];
m58_4 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="UniverseSelection.cs", label="_macd = MACD(_symbol, 12, 26, 9, MovingAverageType.Exponential, Resolution.Daily)", span="46-46"];
m58_5 [cluster="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", file="UniverseSelection.cs", label="Exit QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm.Initialize()", span="38-38"];
m58_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1172-1172"];
m58_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="UniverseSelection.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="632-632"];
m58_31 [file="UniverseSelection.cs", label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", span=""];
m59_16 [cluster="QuantConnect.Indicators.Variance.Reset()", file="Variance.cs", label="Entry QuantConnect.Indicators.Variance.Reset()", span="79-79"];
m59_17 [cluster="QuantConnect.Indicators.Variance.Reset()", file="Variance.cs", label="_rollingSum = 0", span="81-81"];
m59_18 [cluster="QuantConnect.Indicators.Variance.Reset()", file="Variance.cs", label="_rollingSumOfSquares = 0", span="82-82"];
m59_19 [cluster="QuantConnect.Indicators.Variance.Reset()", file="Variance.cs", label="base.Reset()", span="83-83"];
m59_20 [cluster="QuantConnect.Indicators.Variance.Reset()", file="Variance.cs", label="Exit QuantConnect.Indicators.Variance.Reset()", span="79-79"];
m59_0 [cluster="QuantConnect.Indicators.Variance.Variance(int)", file="Variance.cs", label="Entry QuantConnect.Indicators.Variance.Variance(int)", span="29-29"];
m59_1 [cluster="QuantConnect.Indicators.Variance.Variance(int)", file="Variance.cs", label="Exit QuantConnect.Indicators.Variance.Variance(int)", span="29-29"];
m59_4 [cluster="QuantConnect.Indicators.Variance.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Variance.cs", label="Entry QuantConnect.Indicators.Variance.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="58-58"];
m59_5 [cluster="QuantConnect.Indicators.Variance.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Variance.cs", label="_rollingSum += input.Value", span="60-60"];
m59_6 [cluster="QuantConnect.Indicators.Variance.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Variance.cs", label="_rollingSumOfSquares += input.Value * input.Value", span="61-61"];
m59_8 [cluster="QuantConnect.Indicators.Variance.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Variance.cs", label="return 0m;", span="64-64"];
m59_14 [cluster="QuantConnect.Indicators.Variance.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Variance.cs", label="return meanValue2 - meanValue1 * meanValue1;", span="73-73"];
m59_15 [cluster="QuantConnect.Indicators.Variance.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", file="Variance.cs", label="Exit QuantConnect.Indicators.Variance.ComputeNextValue(QuantConnect.Indicators.IReadOnlyWindow<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Indicators.IndicatorDataPoint)", span="58-58"];
m59_21 [cluster="QuantConnect.Indicators.WindowIndicator<T>.Reset()", file="Variance.cs", label="Entry QuantConnect.Indicators.WindowIndicator<T>.Reset()", span="69-69"];
m59_2 [cluster="QuantConnect.Indicators.Variance.Variance(string, int)", file="Variance.cs", label="Entry QuantConnect.Indicators.Variance.Variance(string, int)", span="39-39"];
m59_3 [cluster="QuantConnect.Indicators.Variance.Variance(string, int)", file="Variance.cs", label="Exit QuantConnect.Indicators.Variance.Variance(string, int)", span="39-39"];
m59_22 [file="Variance.cs", label="QuantConnect.Indicators.Variance", span=""];
n134 -> n18  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
n134 -> n38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
n134 -> n49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
n134 -> n53  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
n134 -> n58  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
n134 -> n60  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
n134 -> n129  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
n134 -> n132  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityMarginModel", style=dashed];
n2 -> n5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
n29 -> n31  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
n40 -> n42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
n40 -> n43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
n40 -> n45  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
n40 -> n47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
n40 -> n49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
n40 -> n51  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
n40 -> n53  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
n40 -> n55  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
n40 -> n56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
n41 -> n44  [color=darkseagreen4, key=1, label=holdings, style=dashed];
n41 -> n50  [color=darkseagreen4, key=1, label=holdings, style=dashed];
n62 -> n67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n62 -> n69  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n62 -> n75  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
n62 -> n77  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
n62 -> n84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
n70 -> n72  [color=darkseagreen4, key=1, label=option, style=dashed];
n79 -> n83  [color=darkseagreen4, key=1, label=freeMargin, style=dashed];
n79 -> n84  [color=darkseagreen4, key=1, label=freeMargin, style=dashed];
n71 -> n75  [color=darkseagreen4, key=1, label=underlying, style=dashed];
n82 -> n84  [color=darkseagreen4, key=1, label=initialMarginRequiredForRemainderOfOrder, style=dashed];
n95 -> n97  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
n95 -> n121  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
n99 -> n124  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
n100 -> n125  [color=darkseagreen4, key=1, label=direction, style=dashed];
n104 -> n124  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
n117 -> n124  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
n118 -> n124  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
n113 -> n125  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m1_12 -> m1_10  [color=green, key=1, label="QuantConnect.Data.UniverseSelection.BaseDataCollection", style=dashed];
m2_16 -> m2_19  [color=green, key=1, label=collection, style=dashed];
m2_8 -> m2_15  [color=darkseagreen4, key=1, label=collection, style=dashed];
m2_8 -> m2_17  [color=darkseagreen4, key=1, label=collection, style=dashed];
m2_8 -> m2_19  [color=darkseagreen4, key=1, label=collection, style=dashed];
m2_35 -> m2_32  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator", style=dashed];
m2_35 -> m2_6  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator", style=dashed];
m2_35 -> m2_10  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator", style=dashed];
m2_35 -> m2_11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator", style=dashed];
m2_35 -> m2_13  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator", style=dashed];
m2_35 -> m2_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator", style=dashed];
m2_35 -> m2_19  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator", style=dashed];
m2_35 -> m2_22  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator", style=dashed];
m2_35 -> m2_28  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.Enumerators.BaseDataCollectionAggregatorEnumerator", style=dashed];
m6_44 -> m6_46  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m6_50 -> m6_52  [color=darkseagreen4, key=1, label=source, style=dashed];
m6_55 -> m6_57  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m6_55 -> m6_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_56 -> m6_80  [color=darkseagreen4, key=1, label=coin, style=dashed];
m6_56 -> m6_81  [color=darkseagreen4, key=1, label=coin, style=dashed];
m6_88 -> m6_1  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_2  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_3  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_4  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_5  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_6  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_15  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_16  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_17  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_18  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_19  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_20  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_21  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_31  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_33  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_34  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m6_88 -> m6_35  [color=darkseagreen4, key=1, label="QuantConnect.LiveTradingFeaturesAlgorithm", style=dashed];
m15_5 -> m15_8  [color=darkseagreen4, key=1, label=ext, style=dashed];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
m17_0 -> m17_5  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_0 -> m17_10  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOrder", style=dashed];
m17_2 -> m17_4  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_2 -> m17_6  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_2 -> m17_15  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_2 -> m17_18  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_101 -> m17_104  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m17_101 -> m17_110  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_101 -> m17_112  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_101 -> m17_117  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnOpenOrder", style=dashed];
m17_103 -> m17_105  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_103 -> m17_109  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_103 -> m17_111  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_103 -> m17_113  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_103 -> m17_122  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_103 -> m17_125  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_106 -> m17_108  [color=darkseagreen4, key=1, label=currentBar, style=dashed];
m17_107 -> m17_110  [color=darkseagreen4, key=1, label=localOrderTime, style=dashed];
m17_25 -> m17_28  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_25 -> m17_30  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m17_25 -> m17_36  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopMarketOrder", style=dashed];
m17_27 -> m17_29  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_27 -> m17_31  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_27 -> m17_45  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_27 -> m17_48  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_50 -> m17_158  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m17_50 -> m17_156  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m17_153 -> m17_156  [color=green, key=1, label=tick, style=dashed];
m17_153 -> m17_158  [color=green, key=1, label=tick, style=dashed];
m17_164 -> m17_167  [color=green, key=1, label=bar, style=dashed];
m17_22 -> m17_189  [color=green, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_130 -> m17_133  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m17_130 -> m17_137  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_130 -> m17_142  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m17_132 -> m17_134  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_132 -> m17_138  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_132 -> m17_147  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_132 -> m17_150  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_53 -> m17_61  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m17_53 -> m17_56  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m17_53 -> m17_65  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_53 -> m17_71  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m17_55 -> m17_57  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_55 -> m17_74  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_55 -> m17_77  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_79 -> m17_82  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_79 -> m17_87  [color=darkseagreen4, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_79 -> m17_89  [color=green, key=1, label="QuantConnect.Orders.LimitOrder", style=dashed];
m17_81 -> m17_83  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_81 -> m17_96  [color=darkseagreen4, key=1, label=fill, style=dashed];
m17_81 -> m17_99  [color=darkseagreen4, key=1, label=fill, style=dashed];
m19_71 -> m19_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_71 -> m19_111  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, object>", style=dashed];
m19_70 -> m19_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_70 -> m19_103  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_1 -> m19_16  [color=darkseagreen4, key=1, label=optionsObject, style=dashed];
m19_1 -> m19_40  [color=darkseagreen4, key=1, label=optionsObject, style=dashed];
m19_1 -> m19_48  [color=darkseagreen4, key=1, label=optionsObject, style=dashed];
m19_1 -> m19_51  [color=darkseagreen4, key=1, label=optionsObject, style=dashed];
m19_1 -> m19_54  [color=darkseagreen4, key=1, label=optionsObject, style=dashed];
m19_1 -> m19_57  [color=darkseagreen4, key=1, label=optionsObject, style=dashed];
m19_1 -> m19_60  [color=darkseagreen4, key=1, label=optionsObject, style=dashed];
m19_1 -> m19_63  [color=darkseagreen4, key=1, label=optionsObject, style=dashed];
m19_4 -> m19_10  [color=darkseagreen4, key=1, label=targetApp, style=dashed];
m19_4 -> m19_45  [color=darkseagreen4, key=1, label=targetApp, style=dashed];
m19_6 -> m19_13  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_6 -> m19_16  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_6 -> m19_19  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_6 -> m19_22  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_6 -> m19_25  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_6 -> m19_28  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_6 -> m19_31  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_6 -> m19_34  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_6 -> m19_37  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_6 -> m19_40  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_6 -> m19_43  [color=darkseagreen4, key=1, label=fromDate, style=dashed];
m19_7 -> m19_13  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m19_7 -> m19_19  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m19_7 -> m19_22  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m19_7 -> m19_25  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m19_7 -> m19_28  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m19_7 -> m19_31  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m19_7 -> m19_34  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m19_7 -> m19_37  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m19_7 -> m19_43  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m19_8 -> m19_13  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m19_8 -> m19_16  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m19_8 -> m19_19  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m19_8 -> m19_22  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m19_8 -> m19_25  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m19_8 -> m19_28  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m19_8 -> m19_31  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m19_8 -> m19_34  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m19_8 -> m19_37  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m19_8 -> m19_43  [color=darkseagreen4, key=1, label=tickers, style=dashed];
m19_9 -> m19_13  [color=darkseagreen4, key=1, label=toDate, style=dashed];
m19_9 -> m19_16  [color=darkseagreen4, key=1, label=toDate, style=dashed];
m19_9 -> m19_19  [color=darkseagreen4, key=1, label=toDate, style=dashed];
m19_9 -> m19_22  [color=darkseagreen4, key=1, label=toDate, style=dashed];
m19_9 -> m19_25  [color=darkseagreen4, key=1, label=toDate, style=dashed];
m19_9 -> m19_28  [color=darkseagreen4, key=1, label=toDate, style=dashed];
m19_9 -> m19_31  [color=darkseagreen4, key=1, label=toDate, style=dashed];
m19_9 -> m19_34  [color=darkseagreen4, key=1, label=toDate, style=dashed];
m19_9 -> m19_37  [color=darkseagreen4, key=1, label=toDate, style=dashed];
m19_9 -> m19_43  [color=darkseagreen4, key=1, label=toDate, style=dashed];
m23_26 -> m23_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_26 -> m23_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionManager", style=dashed];
m23_26 -> m23_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m23_36 -> m23_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_36 -> m23_40  [color=darkseagreen4, key=1, label=config, style=dashed];
m23_44 -> m23_77  [color=darkseagreen4, key=1, label=market, style=dashed];
m23_46 -> m23_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_53 -> m23_56  [color=darkseagreen4, key=1, label=config, style=dashed];
m23_34 -> m23_37  [color=darkseagreen4, key=1, label=normal, style=dashed];
m23_34 -> m23_49  [color=darkseagreen4, key=1, label=normal, style=dashed];
m23_35 -> m23_40  [color=darkseagreen4, key=1, label=invert, style=dashed];
m23_35 -> m23_49  [color=darkseagreen4, key=1, label=invert, style=dashed];
m23_45 -> m23_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_45 -> m23_48  [color=darkseagreen4, key=1, label=currencyPairs, style=dashed];
m23_48 -> m23_57  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m23_54 -> m23_56  [color=darkseagreen4, key=1, label=security, style=dashed];
m23_54 -> m23_58  [color=darkseagreen4, key=1, label=security, style=dashed];
m23_92 -> m23_10  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m23_92 -> m23_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m23_92 -> m23_20  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m23_92 -> m23_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m23_92 -> m23_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m23_92 -> m23_57  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m23_92 -> m23_59  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Cash", style=dashed];
m23_93 -> m23_77  [color=darkseagreen4, key=1, label=market, style=dashed];
m38_26 -> m38_29  [color=green, key=1, label=message, style=dashed];
m38_38 -> m38_27  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m38_38 -> m38_35  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m41_56 -> m41_199  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m41_56 -> m41_200  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m41_25 -> m41_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m41_32 -> m41_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>", style=dashed];
m41_177 -> m41_177  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m41_34 -> m41_36  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_34 -> m41_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_34 -> m41_40  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_34 -> m41_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_34 -> m41_43  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_41 -> m41_43  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m41_28 -> m41_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_5 -> m41_15  [color=darkseagreen4, key=1, label=basicTemplateStatistics, style=dashed];
m41_6 -> m41_15  [color=green, key=1, label=limitFillRegressionStatistics, style=dashed];
m41_7 -> m41_15  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m41_8 -> m41_15  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m41_19 -> m41_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_19 -> m41_19  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m41_15 -> m41_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_96 -> m41_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_97 -> m41_99  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m41_97 -> m41_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_108  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_97 -> m41_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_99 -> m41_99  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m41_102 -> m41_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_108  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_102 -> m41_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_105 -> m41_144  [color=darkseagreen4, key=1, label=fills, style=dashed];
m41_105 -> m41_150  [color=darkseagreen4, key=1, label=fills, style=dashed];
m41_107 -> m41_143  [color=darkseagreen4, key=1, label=security, style=dashed];
m41_110 -> m41_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_110 -> m41_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_110 -> m41_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_110 -> m41_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_110 -> m41_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_110 -> m41_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_110 -> m41_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_110 -> m41_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_110 -> m41_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_110 -> m41_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_110 -> m41_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_138 -> m41_150  [color=darkseagreen4, key=1, label=fills, style=dashed];
m41_151 -> m41_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_100  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m41_100 -> m41_101  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_102  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_103  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_107  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_108  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_110  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_111  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_123  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_143  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_145  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_100 -> m41_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m41_144 -> m41_146  [color=darkseagreen4, key=1, label=fill, style=dashed];
m41_144 -> m41_149  [color=darkseagreen4, key=1, label=fill, style=dashed];
m41_150 -> m41_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m41_9 -> m41_15  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m41_10 -> m41_15  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m41_11 -> m41_15  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m41_12 -> m41_15  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m41_13 -> m41_15  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m41_57 -> m41_59  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_57 -> m41_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_57 -> m41_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_57 -> m41_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_57 -> m41_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_66 -> m41_68  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m41_186 -> m41_189  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m41_75 -> m41_77  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_75 -> m41_80  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_75 -> m41_83  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_75 -> m41_84  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m41_211 -> m41_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_19  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_35  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_40  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_46  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_58  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_62  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_65  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_71  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_76  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_78  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_80  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_87  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_92  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_93  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_96  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_102  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_103  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_107  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_111  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_118  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_120  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_141  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_143  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_146  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_149  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_187  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_198  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_199  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m41_211 -> m41_200  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m42_2 -> m42_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m42_2 -> m42_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m42_2 -> m42_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m42_2 -> m42_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataSource", style=dashed];
m43_37 -> m43_52  [color=darkseagreen4, key=1, label=bool, style=dashed];
m43_40 -> m43_42  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m43_40 -> m43_43  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m43_40 -> m43_44  [color=darkseagreen4, key=1, label=mooTicket, style=dashed];
m43_45 -> m43_47  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_45 -> m43_50  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_48 -> m43_50  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m43_51 -> m43_53  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m43_51 -> m43_54  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m43_41 -> m43_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_93 -> m43_96  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_93 -> m43_97  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_94 -> m43_96  [color=darkseagreen4, key=1, label=response, style=dashed];
m43_179 -> m43_179  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m43_278 -> m43_286  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_278 -> m43_287  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_278 -> m43_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m43_278 -> m43_297  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_278 -> m43_289  [color=darkseagreen4, key=1, label=bool, style=dashed];
m43_278 -> m43_293  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_295 -> m43_297  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m43_291 -> m43_294  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m43_291 -> m43_293  [color=darkseagreen4, key=1, label=holdingSymbol, style=dashed];
m43_292 -> m43_294  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m43_101 -> m43_104  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_101 -> m43_105  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_102 -> m43_104  [color=darkseagreen4, key=1, label=response, style=dashed];
m43_186 -> m43_205  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_189  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_219  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_207  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_212  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_214  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_190  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_191  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_192  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_194  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_196  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_197  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_198  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_199  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_201  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_216  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_220  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_222  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_224  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_225  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_226  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_227  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_228  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_229  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_233  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_186 -> m43_234  [color=darkseagreen4, key=1, label="QuantConnect.Orders.SubmitOrderRequest", style=dashed];
m43_203 -> m43_205  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m43_203 -> m43_207  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m43_203 -> m43_212  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m43_203 -> m43_214  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m43_189 -> m43_206  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_189 -> m43_193  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_189 -> m43_196  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_189 -> m43_198  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_189 -> m43_208  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_189 -> m43_215  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_189 -> m43_221  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_189 -> m43_223  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_189 -> m43_225  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_189 -> m43_232  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_195 -> m43_200  [color=darkseagreen4, key=1, label=price, style=dashed];
m43_210 -> m43_212  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m43_210 -> m43_214  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m43_129 -> m43_149  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m43_129 -> m43_132  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m43_129 -> m43_133  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m43_129 -> m43_179  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m43_129 -> m43_147  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m43_129 -> m43_148  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m43_134 -> m43_178  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_133 -> m43_179  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m43_133 -> m43_139  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m43_133 -> m43_146  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m43_148 -> m43_152  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m43_148 -> m43_159  [color=darkseagreen4, key=1, label=underlyingLeg, style=dashed];
m43_130 -> m43_142  [color=darkseagreen4, key=1, label=orders, style=dashed];
m43_130 -> m43_145  [color=darkseagreen4, key=1, label=orders, style=dashed];
m43_130 -> m43_155  [color=darkseagreen4, key=1, label=orders, style=dashed];
m43_130 -> m43_158  [color=darkseagreen4, key=1, label=orders, style=dashed];
m43_130 -> m43_160  [color=darkseagreen4, key=1, label=orders, style=dashed];
m43_69 -> m43_72  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_69 -> m43_73  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_70 -> m43_72  [color=darkseagreen4, key=1, label=response, style=dashed];
m43_85 -> m43_88  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_85 -> m43_89  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_86 -> m43_88  [color=darkseagreen4, key=1, label=response, style=dashed];
m43_299 -> m43_307  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m43_303 -> m43_308  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_303 -> m43_336  [color=darkseagreen4, key=1, label=security, style=dashed];
m43_316 -> m43_335  [color=darkseagreen4, key=1, label=marginRemaining, style=dashed];
m43_330 -> m43_335  [color=darkseagreen4, key=1, label=orderValue, style=dashed];
m43_331 -> m43_335  [color=darkseagreen4, key=1, label=orderFees, style=dashed];
m43_333 -> m43_335  [color=darkseagreen4, key=1, label=marginRequired, style=dashed];
m43_311 -> m43_335  [color=darkseagreen4, key=1, label=targetOrderValue, style=dashed];
m43_312 -> m43_338  [color=darkseagreen4, key=1, label=direction, style=dashed];
m43_323 -> m43_336  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_323 -> m43_328  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_323 -> m43_335  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_323 -> m43_338  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_327 -> m43_336  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_327 -> m43_335  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_327 -> m43_338  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_328 -> m43_336  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_328 -> m43_335  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_328 -> m43_328  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_328 -> m43_338  [color=darkseagreen4, key=1, label=orderQuantity, style=dashed];
m43_334 -> m43_334  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m43_322 -> m43_326  [color=darkseagreen4, key=1, label=feeToPriceRatio, style=dashed];
m43_324 -> m43_334  [color=darkseagreen4, key=1, label=iterations, style=dashed];
m43_243 -> m43_257  [color=darkseagreen4, key=1, label=string, style=dashed];
m43_246 -> m43_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m43_248 -> m43_250  [color=darkseagreen4, key=1, label=orders, style=dashed];
m43_248 -> m43_252  [color=darkseagreen4, key=1, label=orders, style=dashed];
m43_249 -> m43_258  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m43_259 -> m43_261  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m43_245 -> m43_247  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m43_252 -> m43_257  [color=darkseagreen4, key=1, label=order, style=dashed];
m43_244 -> m43_261  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m43_244 -> m43_262  [color=darkseagreen4, key=1, label=orderIdList, style=dashed];
m43_107 -> m43_116  [color=darkseagreen4, key=1, label=bool, style=dashed];
m43_109 -> m43_111  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_109 -> m43_114  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_112 -> m43_114  [color=darkseagreen4, key=1, label=preOrderCheckResponse, style=dashed];
m43_115 -> m43_117  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m43_115 -> m43_118  [color=darkseagreen4, key=1, label=ticket, style=dashed];
m43_77 -> m43_80  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_77 -> m43_81  [color=darkseagreen4, key=1, label=request, style=dashed];
m43_78 -> m43_80  [color=darkseagreen4, key=1, label=response, style=dashed];
m43_181 -> m43_183  [color=darkseagreen4, key=1, label=response, style=dashed];
m43_181 -> m43_184  [color=darkseagreen4, key=1, label=response, style=dashed];
m43_358 -> m43_204  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_114  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_117  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_121  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_183  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_189  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_211  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_217  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_219  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_232  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_246  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_272  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_276  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_280  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_283  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_286  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_287  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_294  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_297  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_301  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_347  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_350  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_353  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_358 -> m43_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m43_359 -> m43_179  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.OptionStrategy", style=dashed];
m43_360 -> m43_179  [color=darkseagreen4, key=1, label=optionLeg, style=dashed];
m44_0 -> m44_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m44_4 -> m44_8  [color=green, key=1, label=tick, style=dashed];
m44_4 -> m44_10  [color=green, key=1, label=tick, style=dashed];
m44_4 -> m44_12  [color=green, key=1, label=tick, style=dashed];
m44_4 -> m44_14  [color=green, key=1, label=tick, style=dashed];
m44_17 -> m44_20  [color=darkseagreen4, key=1, label=bar, style=dashed];
m44_17 -> m44_22  [color=darkseagreen4, key=1, label=bar, style=dashed];
m44_17 -> m44_24  [color=darkseagreen4, key=1, label=bar, style=dashed];
m44_17 -> m44_26  [color=darkseagreen4, key=1, label=bar, style=dashed];
m44_29 -> m44_31  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m44_33 -> m44_36  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m44_33 -> m44_38  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m44_33 -> m44_40  [color=green, key=1, label=quoteBar, style=dashed];
m44_33 -> m44_42  [color=green, key=1, label=quoteBar, style=dashed];
m44_59 -> m44_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m44_59 -> m44_47  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m44_59 -> m44_51  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m44_59 -> m44_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m45_43 -> m45_49  [color=darkseagreen4, key=1, label=added, style=dashed];
m45_45 -> m45_53  [color=green, key=1, label="lambda expression", style=dashed];
m45_45 -> m45_49  [color=green, key=1, label=added, style=dashed];
m45_46 -> m45_49  [color=darkseagreen4, key=1, label=removed, style=dashed];
m45_48 -> m45_56  [color=green, key=1, label="lambda expression", style=dashed];
m45_18 -> m45_21  [color=darkseagreen4, key=1, label="params QuantConnect.Securities.Security[]", style=dashed];
m45_23 -> m45_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m45_23 -> m45_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m45_23 -> m45_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m45_28 -> m45_37  [color=darkseagreen4, key=1, label=additions, style=dashed];
m45_28 -> m45_30  [color=darkseagreen4, key=1, label=additions, style=dashed];
m45_29 -> m45_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m45_11 -> m45_14  [color=darkseagreen4, key=1, label="params QuantConnect.Securities.Security[]", style=dashed];
m45_59 -> m45_41  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m45_59 -> m45_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m45_59 -> m45_47  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m45_60 -> m45_37  [color=darkseagreen4, key=1, label=additions, style=dashed];
m46_38 -> m46_38  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m46_106 -> m46_113  [color=green, key=1, label=exchangeHours, style=dashed];
m46_104 -> m46_113  [color=green, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m46_104 -> m46_108  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m46_105 -> m46_113  [color=green, key=1, label=marketHoursDbEntry, style=dashed];
m46_110 -> m46_113  [color=green, key=1, label=symbolProperties, style=dashed];
m46_5 -> m46_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m46_5 -> m46_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m46_14 -> m46_61  [color=darkseagreen4, key=1, label="System.Collections.Specialized.NotifyCollectionChangedEventArgs", style=dashed];
m46_59 -> m46_61  [color=darkseagreen4, key=1, label=handler, style=dashed];
m46_19 -> m46_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m46_40 -> m46_42  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m46_64 -> m46_66  [color=darkseagreen4, key=1, label=bool, style=dashed];
m46_64 -> m46_67  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m46_64 -> m46_75  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m46_64 -> m46_76  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m46_64 -> m46_77  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m46_64 -> m46_78  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m46_64 -> m46_79  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m46_64 -> m46_83  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m46_64 -> m46_84  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityPortfolioManager", style=dashed];
m46_64 -> m46_88  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityInitializer", style=dashed];
m46_64 -> m46_89  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_64 -> m46_90  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m46_68 -> m46_70  [color=darkseagreen4, key=1, label=config, style=dashed];
m46_75 -> m46_77  [color=darkseagreen4, key=1, label=baseCurrency, style=dashed];
m46_75 -> m46_78  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m46_75 -> m46_79  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m46_82 -> m46_84  [color=darkseagreen4, key=1, label=quoteCurrency, style=dashed];
m46_87 -> m46_90  [color=darkseagreen4, key=1, label=security, style=dashed];
m46_87 -> m46_91  [color=darkseagreen4, key=1, label=security, style=dashed];
m46_118 -> m46_38  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_42  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_6  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_7  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_22  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_26  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_30  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_34  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_53  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_57  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m46_118 -> m46_61  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityManager", style=dashed];
m48_22 -> m48_434  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_22 -> m48_443  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m48_433 -> m48_439  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m48_435 -> m48_443  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m48_178 -> m48_181  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_180 -> m48_182  [color=darkseagreen4, key=1, label=onBalanceVolume, style=dashed];
m48_150 -> m48_153  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_152 -> m48_154  [color=darkseagreen4, key=1, label=rateofchange, style=dashed];
m48_157 -> m48_160  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_159 -> m48_161  [color=darkseagreen4, key=1, label=rateofchangepercent, style=dashed];
m48_5 -> m48_8  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_7 -> m48_9  [color=darkseagreen4, key=1, label=identity, style=dashed];
m48_338 -> m48_341  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_340 -> m48_342  [color=darkseagreen4, key=1, label=natr, style=dashed];
m48_247 -> m48_250  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_249 -> m48_251  [color=darkseagreen4, key=1, label=variance, style=dashed];
m48_192 -> m48_195  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_194 -> m48_196  [color=darkseagreen4, key=1, label=keltnerChannels, style=dashed];
m48_310 -> m48_313  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_312 -> m48_314  [color=darkseagreen4, key=1, label=mad, style=dashed];
m48_331 -> m48_334  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_333 -> m48_335  [color=darkseagreen4, key=1, label=t3, style=dashed];
m48_268 -> m48_271  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_270 -> m48_272  [color=darkseagreen4, key=1, label=tr, style=dashed];
m48_2 -> m48_7  [color=darkseagreen4, key=1, label=reference, style=dashed];
m48_2 -> m48_9  [color=darkseagreen4, key=1, label=reference, style=dashed];
m48_2 -> m48_11  [color=darkseagreen4, key=1, label=reference, style=dashed];
m48_115 -> m48_118  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_117 -> m48_119  [color=darkseagreen4, key=1, label=rsi, style=dashed];
m48_199 -> m48_202  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_201 -> m48_203  [color=darkseagreen4, key=1, label=donchianChannel, style=dashed];
m48_282 -> m48_285  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_284 -> m48_286  [color=darkseagreen4, key=1, label=dema, style=dashed];
m48_143 -> m48_146  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_145 -> m48_147  [color=darkseagreen4, key=1, label=bb, style=dashed];
m48_21 -> m48_484  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m48_21 -> m48_487  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m48_21 -> m48_488  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_21 -> m48_490  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m48_21 -> m48_492  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m48_21 -> m48_494  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m48_21 -> m48_495  [color=darkseagreen4, key=1, label="System.TimeSpan?", style=dashed];
m48_483 -> m48_487  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m48_483 -> m48_488  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m48_483 -> m48_489  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m48_483 -> m48_491  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m48_483 -> m48_493  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m48_122 -> m48_125  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_124 -> m48_126  [color=darkseagreen4, key=1, label=cci, style=dashed];
m48_164 -> m48_167  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_166 -> m48_168  [color=darkseagreen4, key=1, label=williamspercentr, style=dashed];
m48_40 -> m48_43  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_42 -> m48_44  [color=darkseagreen4, key=1, label=ema, style=dashed];
m48_19 -> m48_21  [color=darkseagreen4, key=1, label=std, style=dashed];
m48_19 -> m48_22  [color=darkseagreen4, key=1, label=std, style=dashed];
m48_19 -> m48_23  [color=darkseagreen4, key=1, label=std, style=dashed];
m48_23 -> m48_26  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_25 -> m48_27  [color=darkseagreen4, key=1, label=ichimoku, style=dashed];
m48_14 -> m48_17  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_34 -> m48_36  [color=darkseagreen4, key=1, label=atr, style=dashed];
m48_441 -> m48_443  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m48_4 -> m48_511  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_4 -> m48_504  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_11 -> m48_516  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m48_11 -> m48_530  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_254 -> m48_257  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_256 -> m48_258  [color=darkseagreen4, key=1, label=ad, style=dashed];
m48_296 -> m48_299  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_298 -> m48_300  [color=darkseagreen4, key=1, label=trima, style=dashed];
m48_401 -> m48_404  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_403 -> m48_405  [color=darkseagreen4, key=1, label=ppo, style=dashed];
m48_209 -> m48_212  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_211 -> m48_213  [color=darkseagreen4, key=1, label=stoch, style=dashed];
m48_54 -> m48_57  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_56 -> m48_58  [color=darkseagreen4, key=1, label=macd, style=dashed];
m48_171 -> m48_174  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_173 -> m48_175  [color=darkseagreen4, key=1, label=lwma, style=dashed];
m48_373 -> m48_376  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_375 -> m48_377  [color=darkseagreen4, key=1, label=ultosc, style=dashed];
m48_428 -> m48_431  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m48_77 -> m48_80  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, decimal>", style=dashed];
m48_77 -> m48_84  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_79 -> m48_84  [color=darkseagreen4, key=1, label=min, style=dashed];
m48_79 -> m48_85  [color=darkseagreen4, key=1, label=min, style=dashed];
m48_83 -> m48_89  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m48_502 -> m48_510  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m48_275 -> m48_278  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_277 -> m48_279  [color=darkseagreen4, key=1, label=cmo, style=dashed];
m48_16 -> m48_18  [color=darkseagreen4, key=1, label=identity, style=dashed];
m48_185 -> m48_188  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_187 -> m48_189  [color=darkseagreen4, key=1, label=averageDirectionalIndex, style=dashed];
m48_226 -> m48_229  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_228 -> m48_230  [color=darkseagreen4, key=1, label=lsma, style=dashed];
m48_359 -> m48_362  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_361 -> m48_363  [color=darkseagreen4, key=1, label=kama, style=dashed];
m48_289 -> m48_292  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_291 -> m48_293  [color=darkseagreen4, key=1, label=tema, style=dashed];
m48_415 -> m48_418  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_417 -> m48_419  [color=darkseagreen4, key=1, label=frama, style=dashed];
m48_240 -> m48_243  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_242 -> m48_244  [color=darkseagreen4, key=1, label=bop, style=dashed];
m48_317 -> m48_320  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_319 -> m48_321  [color=darkseagreen4, key=1, label=momersion, style=dashed];
m48_394 -> m48_397  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_396 -> m48_398  [color=darkseagreen4, key=1, label=apo, style=dashed];
m48_47 -> m48_50  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_49 -> m48_51  [color=darkseagreen4, key=1, label=sma, style=dashed];
m48_352 -> m48_355  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_354 -> m48_356  [color=darkseagreen4, key=1, label=adxr, style=dashed];
m48_94 -> m48_97  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_96 -> m48_98  [color=darkseagreen4, key=1, label=aroon, style=dashed];
m48_408 -> m48_411  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_410 -> m48_412  [color=darkseagreen4, key=1, label=vwap, style=dashed];
m48_387 -> m48_390  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_389 -> m48_391  [color=darkseagreen4, key=1, label=midprice, style=dashed];
m48_514 -> m48_516  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m48_101 -> m48_104  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_103 -> m48_105  [color=darkseagreen4, key=1, label=momentum, style=dashed];
m48_136 -> m48_139  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_138 -> m48_140  [color=darkseagreen4, key=1, label=std, style=dashed];
m48_32 -> m48_35  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_366 -> m48_369  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_368 -> m48_370  [color=darkseagreen4, key=1, label=midpoint, style=dashed];
m48_108 -> m48_111  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_110 -> m48_112  [color=darkseagreen4, key=1, label=momentum, style=dashed];
m48_233 -> m48_236  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_235 -> m48_237  [color=darkseagreen4, key=1, label=psar, style=dashed];
m48_61 -> m48_64  [color=darkseagreen4, key=1, label="System.Func<QuantConnect.Data.BaseData, decimal>", style=dashed];
m48_61 -> m48_68  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_63 -> m48_68  [color=darkseagreen4, key=1, label=max, style=dashed];
m48_63 -> m48_69  [color=darkseagreen4, key=1, label=max, style=dashed];
m48_67 -> m48_75  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m48_422 -> m48_425  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m48_324 -> m48_327  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_326 -> m48_328  [color=darkseagreen4, key=1, label=sum, style=dashed];
m48_219 -> m48_222  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_221 -> m48_223  [color=darkseagreen4, key=1, label=logr, style=dashed];
m48_303 -> m48_306  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_305 -> m48_307  [color=darkseagreen4, key=1, label=rocr, style=dashed];
m48_261 -> m48_264  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_263 -> m48_265  [color=darkseagreen4, key=1, label=adOsc, style=dashed];
m48_129 -> m48_132  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_131 -> m48_133  [color=darkseagreen4, key=1, label=mfi, style=dashed];
m48_345 -> m48_348  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_347 -> m48_349  [color=darkseagreen4, key=1, label=ha, style=dashed];
m48_380 -> m48_383  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_382 -> m48_384  [color=darkseagreen4, key=1, label=trix, style=dashed];
m48_450 -> m48_457  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_450 -> m48_459  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.IDataConsolidator", style=dashed];
m48_450 -> m48_460  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_450 -> m48_469  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m48_456 -> m48_465  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m48_458 -> m48_460  [color=darkseagreen4, key=1, label=type, style=dashed];
m48_73 -> m48_472  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m48_73 -> m48_477  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_73 -> m48_478  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m48_471 -> m48_476  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m48_471 -> m48_477  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m48_475 -> m48_478  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m48_533 -> m48_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_68  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_104  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_111  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_118  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_139  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_146  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_153  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_195  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_202  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_207  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_212  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_217  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_222  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_229  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_236  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_243  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_250  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_264  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_271  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_278  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_285  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_292  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_299  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_306  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_313  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_320  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_327  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_341  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_348  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_355  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_362  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_369  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_376  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_390  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_397  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_404  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_411  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_418  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_422  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_428  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_434  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_448  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_451  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_454  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_457  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_533 -> m48_478  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m48_535 -> m48_443  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m48_537 -> m48_469  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m48_538 -> m48_511  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m51_0 -> m51_16  [color=darkseagreen4, key=1, label="QuantConnect.TickType?", style=dashed];
m51_0 -> m51_21  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m51_0 -> m51_33  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m51_43 -> m51_46  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m51_43 -> m51_49  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m51_43 -> m51_51  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m51_55 -> m51_18  [color=green, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m51_55 -> m51_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m51_55 -> m51_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m51_55 -> m51_51  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m53_37 -> m53_39  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m53_37 -> m53_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m53_37 -> m53_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m53_37 -> m53_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m53_37 -> m53_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m53_38 -> m53_42  [color=darkseagreen4, key=1, label=addedSymbols, style=dashed];
m53_38 -> m53_44  [color=darkseagreen4, key=1, label=addedSymbols, style=dashed];
m53_38 -> m53_45  [color=darkseagreen4, key=1, label=addedSymbols, style=dashed];
m53_39 -> m53_42  [color=darkseagreen4, key=1, label=added, style=dashed];
m53_45 -> m53_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_46 -> m53_48  [color=darkseagreen4, key=1, label=removed, style=dashed];
m53_46 -> m53_49  [color=darkseagreen4, key=1, label=removed, style=dashed];
m53_46 -> m53_50  [color=darkseagreen4, key=1, label=removed, style=dashed];
m53_46 -> m53_51  [color=darkseagreen4, key=1, label=removed, style=dashed];
m53_48 -> m53_51  [color=darkseagreen4, key=1, label=data, style=dashed];
m53_9 -> m53_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m53_13 -> m53_17  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m53_13 -> m53_22  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m53_11 -> m53_25  [color=darkseagreen4, key=1, label=target, style=dashed];
m53_12 -> m53_15  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m53_12 -> m53_22  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m53_15 -> m53_17  [color=darkseagreen4, key=1, label=data, style=dashed];
m53_20 -> m53_22  [color=darkseagreen4, key=1, label=orderSize, style=dashed];
m53_97 -> m53_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m53_62 -> m53_64  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m53_64 -> m53_64  [color=darkseagreen4, key=1, label=data, style=dashed];
m53_80 -> m53_80  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m53_30 -> m53_67  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m53_30 -> m53_69  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m53_30 -> m53_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m53_66 -> m53_69  [color=darkseagreen4, key=1, label=deviations, style=dashed];
m53_66 -> m53_72  [color=darkseagreen4, key=1, label=deviations, style=dashed];
m53_55 -> m53_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m53_90 -> m53_98  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m53_90 -> m53_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.IBaseData", style=dashed];
m53_59 -> m53_80  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m53_76 -> m53_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m53_102 -> m53_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_102 -> m53_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_102 -> m53_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_102 -> m53_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_102 -> m53_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_102 -> m53_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_102 -> m53_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_102 -> m53_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_102 -> m53_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_102 -> m53_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_102 -> m53_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel", style=dashed];
m53_103 -> m53_80  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m53_104 -> m53_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m53_104 -> m53_98  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m53_104 -> m53_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.StandardDeviationExecutionModel.SymbolData", style=dashed];
m56_11 -> m56_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m56_11 -> m56_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>", style=dashed];
m56_11 -> m56_64  [color=darkseagreen4, key=1, label="QuantConnect.Securities.CashBook", style=dashed];
m56_11 -> m56_71  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m56_12 -> m56_71  [color=darkseagreen4, key=1, label=count, style=dashed];
m56_16 -> m56_45  [color=green, key=1, label=allDataForAlgorithm, style=dashed];
m56_17 -> m56_66  [color=darkseagreen4, key=1, label=cash, style=dashed];
m56_17 -> m56_71  [color=darkseagreen4, key=1, label=cash, style=dashed];
m56_32 -> m56_44  [color=green, key=1, label=packet, style=dashed];
m56_32 -> m56_46  [color=darkseagreen4, key=1, label=packet, style=dashed];
m56_32 -> m56_47  [color=darkseagreen4, key=1, label=packet, style=dashed];
m56_32 -> m56_49  [color=darkseagreen4, key=1, label=packet, style=dashed];
m56_32 -> m56_63  [color=darkseagreen4, key=1, label=packet, style=dashed];
m56_32 -> m56_65  [color=darkseagreen4, key=1, label=packet, style=dashed];
m56_32 -> m56_67  [color=darkseagreen4, key=1, label=packet, style=dashed];
m56_32 -> m56_69  [color=darkseagreen4, key=1, label=packet, style=dashed];
m56_13 -> m56_67  [color=darkseagreen4, key=1, label=security, style=dashed];
m56_13 -> m56_71  [color=darkseagreen4, key=1, label=security, style=dashed];
m56_38 -> m56_71  [color=darkseagreen4, key=1, label=count, style=dashed];
m56_14 -> m56_47  [color=darkseagreen4, key=1, label=custom, style=dashed];
m56_14 -> m56_71  [color=darkseagreen4, key=1, label=custom, style=dashed];
m56_15 -> m56_69  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m56_15 -> m56_71  [color=darkseagreen4, key=1, label=consolidator, style=dashed];
m56_18 -> m56_20  [color=darkseagreen4, key=1, label=cashSecurities, style=dashed];
m56_18 -> m56_63  [color=darkseagreen4, key=1, label=cashSecurities, style=dashed];
m56_66 -> m56_66  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m56_33 -> m56_35  [color=green, key=1, label=list, style=dashed];
m56_33 -> m56_36  [color=green, key=1, label=list, style=dashed];
m56_33 -> m56_42  [color=green, key=1, label=list, style=dashed];
m56_33 -> m56_47  [color=green, key=1, label=list, style=dashed];
m56_65 -> m56_65  [color=darkseagreen4, key=1, label=cashKvp, style=dashed];
m56_39 -> m56_52  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m56_39 -> m56_62  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m56_39 -> m56_66  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m56_39 -> m56_67  [color=darkseagreen4, key=1, label=securityUpdate, style=dashed];
m56_40 -> m56_51  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m56_40 -> m56_68  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m56_40 -> m56_69  [color=darkseagreen4, key=1, label=consolidatorUpdate, style=dashed];
m56_43 -> m56_45  [color=green, key=1, label=baseData, style=dashed];
m56_43 -> m56_48  [color=green, key=1, label=baseData, style=dashed];
m56_43 -> m56_51  [color=green, key=1, label=baseData, style=dashed];
m56_43 -> m56_52  [color=green, key=1, label=baseData, style=dashed];
m56_41 -> m56_61  [color=darkseagreen4, key=1, label=i, style=dashed];
m56_61 -> m56_61  [color=darkseagreen4, key=1, label=i, style=dashed];
m56_86 -> m56_90  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m57_14 -> m57_16  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m57_14 -> m57_17  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m57_59 -> m57_62  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m57_52 -> m57_55  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m57_26 -> m57_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType", style=dashed];
m57_28 -> m57_30  [color=darkseagreen4, key=1, label=hasDiffs, style=dashed];
m57_7 -> m57_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType", style=dashed];
m57_7 -> m57_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScoreType", style=dashed];
m57_38 -> m57_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m57_38 -> m57_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.AlphaScore", style=dashed];
m57_80 -> m57_49  [color=green, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m57_80 -> m57_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m57_80 -> m57_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m57_80 -> m57_42  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m57_80 -> m57_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m57_80 -> m57_55  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m57_80 -> m57_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m57_80 -> m57_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.Universe", style=dashed];
m58_10 -> m58_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m58_15 -> m58_18  [color=darkseagreen4, key=1, label=holding, style=dashed];
m58_15 -> m58_20  [color=darkseagreen4, key=1, label=holding, style=dashed];
m58_16 -> m58_18  [color=darkseagreen4, key=1, label=signalDeltaPercent, style=dashed];
m58_16 -> m58_20  [color=darkseagreen4, key=1, label=signalDeltaPercent, style=dashed];
m58_17 -> m58_20  [color=darkseagreen4, key=1, label=tolerance, style=dashed];
m58_31 -> m58_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m58_31 -> m58_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m58_31 -> m58_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m58_31 -> m58_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m58_31 -> m58_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m58_31 -> m58_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m58_31 -> m58_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m58_31 -> m58_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m58_31 -> m58_23  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m58_31 -> m58_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.MACDTrendAlgorithm", style=dashed];
m59_22 -> m59_19  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.Variance", style=dashed];
}
