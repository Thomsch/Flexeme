digraph  {
n0 [label="Entry QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="34-34", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)"];
n1 [label="var symbol = LeanData.ReadSymbolFromZipEntry(config.Symbol, config.Resolution, line)", span="36-36", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)"];
n2 [label="return new ZipEntryName {Time = date, Symbol = symbol};", span="37-37", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)"];
n4 [label="Entry QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)", span="645-645", cluster="QuantConnect.Util.LeanData.ReadSymbolFromZipEntry(QuantConnect.Symbol, QuantConnect.Resolution, string)"];
n3 [label="Exit QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="34-34", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)"];
n5 [label="Entry QuantConnect.Data.Auxiliary.ZipEntryName.ZipEntryName()", span="23-23", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.ZipEntryName()"];
n6 [label="Entry QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="47-47", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n7 [label=isLiveMode, span="49-49", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n9 [label="var source = LeanData.GenerateZipFilePath(Globals.DataFolder, config.Symbol, date, config.Resolution, config.TickType)", span="54-54", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n8 [label="return new SubscriptionDataSource(string.Empty, SubscriptionTransportMedium.LocalFile);", span="51-51", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n10 [label="return new SubscriptionDataSource(source, SubscriptionTransportMedium.LocalFile, FileFormat.ZipEntryName);", span="55-55", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n13 [label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="343-343", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)"];
n11 [label="Exit QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="47-47", cluster="QuantConnect.Data.Auxiliary.ZipEntryName.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)"];
n12 [label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="51-51", cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)"];
n14 [label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)", span="62-62", cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat)"];
d56 [label="var marginCallOrders = algorithm.Portfolio.ScanForMarginCall()", span="254-254", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0];
d0 [label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="128-128", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d55 [label="time >= nextMarginCallTime", span="251-251", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0];
d57 [label="marginCallOrders.Count != 0", span="255-255", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0];
d176 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", span="479-479", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()"];
d58 [label="var executedOrders = algorithm.Portfolio.MarginCallModel.ExecuteMarginCall(marginCallOrders)", span="258-258", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0];
d59 [label=executedOrders, span="259-259", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=1];
d177 [label="Entry QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", span="35-35", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)"];
d60 [label="algorithm.Error(''Executed MarginCallOrder: '' + order.Symbol + '': '' + order.Quantity)", span="261-261", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0];
d178 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)"];
d8 [label="var marginCallFrequency = TimeSpan.FromMinutes(5)", span="138-138", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0];
d7 [label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="137-137", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d9 [label="var nextMarginCallTime = DateTime.MinValue", span="139-139", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0];
d161 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)"];
d61 [label="nextMarginCallTime = time + marginCallFrequency", span="265-265", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=green, community=0];
d10 [label="_frontier = setup.StartingDate", span="142-142", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d41 [label="newData.Keys", span="203-203", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d62 [label="algorithm.GetQuit()", span="270-270", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d54 [label="algorithm.Securities.Update(time, newData[time])", span="248-248", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d159 [label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="128-128", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d1 [label="_dataPointCount = 0", span="131-131", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d5 [label="var startingPortfolioValue = setup.StartingCapital", span="135-135", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d6 [label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="136-136", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d11 [label="_algorithmId = job.AlgorithmId", span="143-143", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d13 [label="_previousTime = setup.StartingDate.Date", span="145-145", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d14 [label="var oldTradeBarsMethodInfo = (algorithm.GetType()).GetMethod(''OnTradeBar'',   new[] { typeof(Dictionary<string, TradeBar>) })", span="151-151", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d15 [label="var oldTicksMethodInfo = (algorithm.GetType()).GetMethod(''OnTick'', new[] { typeof(Dictionary<string, List<Tick>>) })", span="152-152", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d16 [label="var newTradeBarsMethodInfo = (algorithm.GetType()).GetMethod(''OnData'', new[] { tradebarsType })", span="156-156", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d17 [label="var newTicksMethodInfo = (algorithm.GetType()).GetMethod(''OnData'', new[] { ticksType })", span="157-157", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d29 [label="feed.Subscriptions", span="173-173", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d31 [label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="179-179", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d34 [label="algorithm.RunTimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="187-187", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d39 [label="DataStream.GetData(feed, setup.StartingDate)", span="197-197", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d46 [label="realtime.SetTime(time)", span="221-221", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d48 [label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="227-227", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d50 [label="results.SamplePerformance(_previousTime.Date, 0)", span="232-232", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d51 [label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - startingPortfolioValue) * 100 / startingPortfolioValue, 10))", span="236-236", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d52 [label="startingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="238-238", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d53 [label="algorithm.Portfolio.CashBook.Update(newData[time])", span="245-245", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d64 [label="algorithm.SetDateTime(time)", span="277-277", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d71 [label="var config = feed.Subscriptions[i]", span="291-291", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d80 [label="algorithm.RunTimeError = err", span="315-315", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d106 [label="methodInvokers[config.Type](algorithm, dataPoint)", span="366-366", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d108 [label="algorithm.RunTimeError = err", span="370-370", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d114 [label="methodInvokers[tradebarsType](algorithm, oldBars)", span="386-386", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d116 [label="methodInvokers[ticksType](algorithm, oldTicks)", span="387-387", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d118 [label="algorithm.RunTimeError = err", span="391-391", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d123 [label="methodInvokers[tradebarsType](algorithm, newBars)", span="402-402", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d125 [label="methodInvokers[ticksType](algorithm, newTicks)", span="403-403", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d127 [label="algorithm.RunTimeError = err", span="407-407", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d131 [label="transactions.ProcessSynchronousEvents()", span="416-416", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d133 [label="results.ProcessSynchronousEvents()", span="422-422", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d135 [label="algorithm.OnEndOfAlgorithm()", span="432-432", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d138 [label="algorithm.RunTimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="437-437", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d141 [label="results.ProcessSynchronousEvents(forceProcess: true)", span="443-443", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d144 [label="algorithm.Liquidate()", span="449-449", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d145 [label="results.LogMessage(''Algorithm Liquidated'')", span="450-450", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d146 [label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Liquidated)", span="451-451", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d149 [label="results.LogMessage(''Algorithm Stopped'')", span="458-458", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d150 [label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Stopped)", span="459-459", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d153 [label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="466-466", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d154 [label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Deleted)", span="467-467", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d155 [label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Completed)", span="471-471", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d156 [label="results.SampleRange(algorithm.GetChartUpdates())", span="474-474", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d157 [label="results.SampleEquity(_frontier, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="475-475", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d158 [label="results.SamplePerformance(_frontier, Math.Round((algorithm.Portfolio.TotalPortfolioValue - startingPortfolioValue) * 100 / startingPortfolioValue, 10))", span="476-476", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d160 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
d21 [label="methodInvokers.Add(tradebarsType, oldTradeBarsMethodInfo.DelegateForCallMethod())", span="162-162", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d23 [label="methodInvokers.Add(ticksType, oldTicksMethodInfo.DelegateForCallMethod())", span="163-163", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d26 [label="methodInvokers.Add(tradebarsType, newTradeBarsMethodInfo.DelegateForCallMethod())", span="168-168", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d28 [label="methodInvokers.Add(ticksType, newTicksMethodInfo.DelegateForCallMethod())", span="169-169", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d32 [label="methodInvokers.ContainsKey(config.Type)", span="182-182", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d37 [label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="191-191", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d40 [label="_algorithmState != AlgorithmStatus.Running", span="200-200", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d42 [label="_frontier = time", span="206-206", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d47 [label="_previousTime.Date != time.Date", span="224-224", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d67 [label="var newBars = new TradeBars(time)", span="282-282", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d68 [label="var newTicks = new Ticks(time)", span="283-283", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d69 [label="newData[time].Keys", span="287-287", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d70 [label="var dataPoints = newData[time][i]", span="290-290", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d94 [label="Log.Error(time.ToLongTimeString() + '' >> '' + bar.Time.ToLongTimeString() + '' >> '' + bar.Symbol + '' >> '' + bar.Value.ToString(''C''))", span="341-341", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d95 [label="Log.Error(''AlgorithmManager.Run(): Failed to add TradeBar ('' + bar.Symbol + '') Time: ('' + time.ToLongTimeString() + '') Count:('' + newBars.Count + '') '' + err.Message)", span="342-342", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d132 [label="_previousTime = time", span="419-419", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d63 [label="_algorithmState = AlgorithmStatus.Quit", span="272-272", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d179 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="434-434", cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()"];
d175 [label="Entry QuantConnect.Securities.SecurityManager.Update(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="327-327", cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)"];
d36 [label="return;", span="189-189", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d44 [label="return;", span="211-211", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d83 [label="return;", span="318-318", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d111 [label="return;", span="373-373", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d121 [label="return;", span="394-394", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d130 [label="return;", span="410-410", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d140 [label="return;", span="439-439", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d2 [label="var backwardsCompatibilityMode = false", span="132-132", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d4 [label="var ticksType = typeof(Ticks)", span="134-134", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d49 [label="startingPortfolioValue == 0m", span="230-230", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d45 [label=backtestMode, span="217-217", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d12 [label="_algorithmState = AlgorithmStatus.Running", span="144-144", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d162 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
d163 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])"];
d20 [label="oldTradeBarsMethodInfo != null", span="162-162", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d22 [label="oldTradeBarsMethodInfo != null", span="163-163", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d113 [label="oldTradeBarsMethodInfo != null && oldBars.Count > 0", span="386-386", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d115 [label="oldTicksMethodInfo != null && oldTicks.Count > 0", span="387-387", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d3 [label="var tradebarsType = typeof (TradeBars)", span="133-133", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d18 [label="newTradeBarsMethodInfo == null && newTicksMethodInfo == null", span="159-159", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d25 [label="newTradeBarsMethodInfo != null", span="168-168", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d122 [label="newTradeBarsMethodInfo != null && newBars.Count > 0", span="402-402", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d27 [label="newTicksMethodInfo != null", span="169-169", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d124 [label="newTicksMethodInfo != null && newTicks.Count > 0", span="403-403", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d30 [label="config.Type.Name != ''TradeBar'' && config.Type.Name != ''Tick''", span="176-176", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d38 [label="Log.Debug(''AlgorithmManager.Run(): Algorithm initialized, launching time loop.'')", span="196-196", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d33 [label="genericMethod == null", span="185-185", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d35 [label="_algorithmState = AlgorithmStatus.RuntimeError", span="188-188", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d167 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
d134 [label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="429-429", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d169 [label="Entry QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", span="58-58", cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)"];
d170 [label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="105-105", cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)"];
d171 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)"];
d172 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="142-142", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)"];
d76 [label="j < config.Consolidators.Count", span="308-308", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d173 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="150-150", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)"];
d174 [label="Entry QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="58-58", cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)"];
d65 [label="var oldBars = new Dictionary<string, TradeBar>()", span="280-280", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d180 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="283-283", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)"];
d72 [label="_dataPointCount += dataPoints.Count", span="294-294", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d73 [label="config.IsInternalFeed", span="297-297", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d77 [label="config.Consolidators[j].Update(dataPoint)", span="310-310", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d84 [label="config.Type.Name", span="321-321", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d79 [label=Exception, span="313-313", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d81 [label="_algorithmState = AlgorithmStatus.RuntimeError", span="316-316", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d74 [label=dataPoints, span="303-303", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d107 [label=Exception, span="368-368", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d194 [label="Entry Unk.]", span="", cluster="Unk.]"];
d109 [label="_algorithmState = AlgorithmStatus.RuntimeError", span="371-371", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d66 [label="var oldTicks = new Dictionary<string, List<Tick>>()", span="281-281", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d117 [label=Exception, span="389-389", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d119 [label="_algorithmState = AlgorithmStatus.RuntimeError", span="392-392", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d126 [label=Exception, span="405-405", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d128 [label="_algorithmState = AlgorithmStatus.RuntimeError", span="408-408", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d195 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="68-68", cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()"];
d196 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="228-228", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)"];
d136 [label=Exception, span="434-434", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d198 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="270-270", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()"];
d137 [label="_algorithmState = AlgorithmStatus.RuntimeError", span="436-436", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d139 [label="Log.Debug(''AlgorithmManager.OnEndOfAlgorithm(): '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="438-438", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d199 [label="Entry System.Exception.Exception(string, System.Exception)", span="0-0", cluster="System.Exception.Exception(string, System.Exception)"];
d142 [label="_algorithmState == AlgorithmStatus.Liquidated || !Engine.LiveMode", span="446-446", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d143 [label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="448-448", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d200 [label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="386-386", cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)"];
d201 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="107-107", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)"];
d147 [label="_algorithmState == AlgorithmStatus.Stopped", span="455-455", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d202 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="193-193", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)"];
d148 [label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="457-457", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d151 [label="_algorithmState == AlgorithmStatus.Deleted", span="463-463", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d152 [label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="465-465", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d203 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="95-95", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)"];
d204 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", span="329-329", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()"];
d205 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="166-166", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)"];
d164 [label="Entry Unk.DelegateForCallMethod", span="", cluster="Unk.DelegateForCallMethod"];
d165 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
d166 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
d43 [label="Isolator.IsCancellationRequested", span="209-209", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d181 [label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="59-59", cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)"];
d91 [label="!newBars.ContainsKey(bar.Symbol)", span="335-335", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d92 [label="newBars.Add(bar.Symbol, bar)", span="335-335", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d182 [label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="45-45", cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)"];
d103 [label="!newTicks.ContainsKey(tick.Symbol)", span="356-356", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d104 [label="newTicks.Add(tick.Symbol, new List<Tick>())", span="356-356", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d105 [label="newTicks[tick.Symbol].Add(tick)", span="357-357", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d112 [label=backwardsCompatibilityMode, span="381-381", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d86 [label="var bar = dataPoint as TradeBar", span="324-324", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d93 [label=Exception, span="339-339", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d188 [label="Entry System.DateTime.ToLongTimeString()", span="0-0", cluster="System.DateTime.ToLongTimeString()"];
d189 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)"];
d184 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86", cluster="QuantConnect.Logging.Log.Error(string, bool)"];
d82 [label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err.Message)", span="317-317", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d110 [label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="372-372", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d120 [label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: Backwards Compatibility Mode: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="393-393", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d129 [label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="409-409", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d19 [label="backwardsCompatibilityMode = true", span="161-161", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d24 [label="backwardsCompatibilityMode = false", span="167-167", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d168 [label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="124-124", cluster="QuantConnect.Logging.Log.Debug(string, int, int)"];
d197 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104", cluster="QuantConnect.Logging.Log.Trace(string, bool)"];
d75 [label="var j = 0", span="308-308", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d78 [label="j++", span="308-308", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d89 [label="!oldBars.ContainsKey(bar.Symbol)", span="331-331", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d90 [label="oldBars.Add(bar.Symbol, bar)", span="331-331", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d183 [label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", span="54-54", cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)"];
d85 [label="''TradeBar''", span="323-323", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d96 [label="''Tick''", span="346-346", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d102 [label="oldTicks[tick.Symbol].Add(tick)", span="352-352", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d87 [label="bar != null", span="327-327", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d98 [label="tick != null", span="348-348", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d97 [label="var tick = dataPoint as Tick", span="347-347", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d100 [label="!oldTicks.ContainsKey(tick.Symbol)", span="351-351", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d101 [label="oldTicks.Add(tick.Symbol, new List<Tick>())", span="351-351", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d88 [label=backwardsCompatibilityMode, span="329-329", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d186 [label="Entry QuantConnect.Data.Market.TradeBars.ContainsKey(string)", span="199-199", cluster="QuantConnect.Data.Market.TradeBars.ContainsKey(string)"];
d187 [label="Entry QuantConnect.Data.Market.TradeBars.Add(string, QuantConnect.Data.Market.TradeBar)", span="119-119", cluster="QuantConnect.Data.Market.TradeBars.Add(string, QuantConnect.Data.Market.TradeBar)"];
d99 [label=backwardsCompatibilityMode, span="350-350", cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)"];
d192 [label="Entry QuantConnect.Data.Market.Ticks.ContainsKey(string)", span="181-181", cluster="QuantConnect.Data.Market.Ticks.ContainsKey(string)"];
d190 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
d193 [label="Entry QuantConnect.Data.Market.Ticks.Add(string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>)", span="100-100", cluster="QuantConnect.Data.Market.Ticks.Add(string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>)"];
d191 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
d185 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
m0_307 [label="Entry Unk.ToDateTimeUtc", span="", cluster="Unk.ToDateTimeUtc", file="BacktestingSetupHandler.cs"];
m0_371 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="BacktestingSetupHandler.cs"];
m0_86 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="BacktestingSetupHandler.cs"];
m0_20 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="BacktestingSetupHandler.cs"];
m0_315 [label="Entry System.Timers.Timer.Stop()", span="0-0", cluster="System.Timers.Timer.Stop()", file="BacktestingSetupHandler.cs"];
m0_574 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="BacktestingSetupHandler.cs"];
m0_281 [label="Entry QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="569-569", cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_282 [label="d == TimeSpan.Zero", span="571-571", cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_283 [label="return time;", span="574-574", cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_284 [label="return new DateTime(((time.Ticks + d.Ticks - 1) / d.Ticks) * d.Ticks);", span="576-576", cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_285 [label="Exit QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="569-569", cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_233 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="BacktestingSetupHandler.cs"];
m0_279 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="BacktestingSetupHandler.cs"];
m0_460 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="BacktestingSetupHandler.cs"];
m0_157 [label="Entry QuantConnect.Extensions.ToInt64(string)", span="315-315", cluster="QuantConnect.Extensions.ToInt64(string)", file="BacktestingSetupHandler.cs"];
m0_158 [label="long value = 0", span="317-317", cluster="QuantConnect.Extensions.ToInt64(string)", file="BacktestingSetupHandler.cs"];
m0_160 [label="i < str.Length", span="318-318", cluster="QuantConnect.Extensions.ToInt64(string)", file="BacktestingSetupHandler.cs"];
m0_161 [label="value = value * 10 + (str[i] - '0')", span="320-320", cluster="QuantConnect.Extensions.ToInt64(string)", file="BacktestingSetupHandler.cs"];
m0_159 [label="var i = 0", span="318-318", cluster="QuantConnect.Extensions.ToInt64(string)", file="BacktestingSetupHandler.cs"];
m0_163 [label="return value;", span="322-322", cluster="QuantConnect.Extensions.ToInt64(string)", file="BacktestingSetupHandler.cs"];
m0_162 [label="i++", span="318-318", cluster="QuantConnect.Extensions.ToInt64(string)", file="BacktestingSetupHandler.cs"];
m0_164 [label="Exit QuantConnect.Extensions.ToInt64(string)", span="315-315", cluster="QuantConnect.Extensions.ToInt64(string)", file="BacktestingSetupHandler.cs"];
m0_203 [label="Entry string.Trim(params char[])", span="0-0", cluster="string.Trim(params char[])", file="BacktestingSetupHandler.cs"];
m0_576 [label="Entry Unk.Repr", span="", cluster="Unk.Repr", file="BacktestingSetupHandler.cs"];
m0_0 [label="Entry QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="47-47", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="BacktestingSetupHandler.cs"];
m0_1 [label="var oItem = list[oldIndex]", span="49-49", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="BacktestingSetupHandler.cs"];
m0_2 [label="list.RemoveAt(oldIndex)", span="50-50", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="BacktestingSetupHandler.cs"];
m0_3 [label="newIndex > oldIndex", span="51-51", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="BacktestingSetupHandler.cs"];
m0_4 [label="newIndex--", span="51-51", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="BacktestingSetupHandler.cs"];
m0_5 [label="list.Insert(newIndex, oItem)", span="52-52", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="BacktestingSetupHandler.cs"];
m0_6 [label="Exit QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="47-47", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", file="BacktestingSetupHandler.cs"];
m0_522 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="BacktestingSetupHandler.cs"];
m0_565 [label="Entry Unk.GetItem", span="", cluster="Unk.GetItem", file="BacktestingSetupHandler.cs"];
m0_337 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="BacktestingSetupHandler.cs"];
m0_94 [label="Entry System.Math.Log10(double)", span="0-0", cluster="System.Math.Log10(double)", file="BacktestingSetupHandler.cs"];
m0_469 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="BacktestingSetupHandler.cs"];
m0_414 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="BacktestingSetupHandler.cs"];
m0_413 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="BacktestingSetupHandler.cs"];
m0_209 [label="Entry QuantConnect.Extensions.GetDecimalEpsilon()", span="402-402", cluster="QuantConnect.Extensions.GetDecimalEpsilon()", file="BacktestingSetupHandler.cs"];
m0_210 [label="return new decimal(1, 0, 0, false, 27);", span="404-404", cluster="QuantConnect.Extensions.GetDecimalEpsilon()", file="BacktestingSetupHandler.cs"];
m0_211 [label="Exit QuantConnect.Extensions.GetDecimalEpsilon()", span="402-402", cluster="QuantConnect.Extensions.GetDecimalEpsilon()", file="BacktestingSetupHandler.cs"];
m0_53 [label="Entry QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="136-136", cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="BacktestingSetupHandler.cs"];
m0_54 [label="dictionary.AddOrUpdate(key, value, (oldkey, oldvalue) => value)", span="138-138", cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="BacktestingSetupHandler.cs"];
m0_55 [label="Exit QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="136-136", cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", file="BacktestingSetupHandler.cs"];
m0_423 [label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", span="839-839", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m0_424 [label="return waitHandle.WaitOne((int) timeout.TotalMilliseconds, cancellationToken);", span="841-841", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m0_425 [label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", span="839-839", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m0_528 [label="Entry QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", span="1037-1037", cluster="QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_529 [label="result = default(T)", span="1040-1040", cluster="QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_530 [label="pyObject == null", span="1042-1042", cluster="QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_533 [label="result = pyObject.AsManagedObject(typeof(T)) as T", span="1051-1051", cluster="QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_531 [label="return true;", span="1044-1044", cluster="QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_532 [label="Py.GIL()", span="1047-1047", cluster="QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_534 [label="return true;", span="1052-1052", cluster="QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_535 [label="return false;", span="1061-1061", cluster="QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_536 [label="Exit QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", span="1037-1037", cluster="QuantConnect.Extensions.TryConvert<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_258 [label="Entry QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="515-515", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="BacktestingSetupHandler.cs"];
m0_259 [label="interval == TimeSpan.Zero", span="518-518", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="BacktestingSetupHandler.cs"];
m0_260 [label="return dateTime;", span="518-518", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="BacktestingSetupHandler.cs"];
m0_261 [label="var rounded = dateTime.RoundDown(interval)", span="520-520", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="BacktestingSetupHandler.cs"];
m0_262 [label="!exchangeHours.IsOpen(rounded, rounded + interval, extendedMarket)", span="521-521", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="BacktestingSetupHandler.cs"];
m0_263 [label="rounded -= interval", span="523-523", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="BacktestingSetupHandler.cs"];
m0_264 [label="return rounded;", span="525-525", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="BacktestingSetupHandler.cs"];
m0_265 [label="Exit QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="515-515", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="BacktestingSetupHandler.cs"];
m0_40 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="BacktestingSetupHandler.cs"];
m0_256 [label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="587-587", cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_124 [label="Entry QuantConnect.Extensions.ToDecimal(string)", span="250-250", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_125 [label="long value = 0", span="252-252", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_129 [label="var length = str.Length", span="256-256", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_130 [label="index < length && char.IsWhiteSpace(str[index])", span="258-258", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_132 [label="var isNegative = index < length && str[index] == '-'", span="263-263", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_136 [label="var ch = str[index++]", span="271-271", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_126 [label="var decimalPlaces = 0", span="253-253", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_141 [label="value = value * 10 + (ch - '0')", span="283-283", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_143 [label="var lo = (int)value", span="288-288", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_144 [label="var mid = (int)(value >> 32)", span="289-289", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_127 [label="var hasDecimals = false", span="254-254", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_142 [label="decimalPlaces++", span="284-284", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_145 [label="return new decimal(lo, mid, 0, isNegative, (byte)(hasDecimals ? decimalPlaces : 0));", span="290-290", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_128 [label="var index = 0", span="255-255", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_131 [label="index++", span="260-260", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_134 [label="index++", span="266-266", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_135 [label="index < length", span="269-269", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_133 [label=isNegative, span="264-264", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_137 [label="ch == '.'", span="272-272", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_140 [label="char.IsWhiteSpace(ch)", span="277-277", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_138 [label="hasDecimals = true", span="274-274", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_139 [label="decimalPlaces = 0", span="275-275", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_146 [label="Exit QuantConnect.Extensions.ToDecimal(string)", span="250-250", cluster="QuantConnect.Extensions.ToDecimal(string)", file="BacktestingSetupHandler.cs"];
m0_348 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="BacktestingSetupHandler.cs"];
m0_35 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="BacktestingSetupHandler.cs"];
m0_7 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="BacktestingSetupHandler.cs"];
m0_496 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="102-102", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="BacktestingSetupHandler.cs"];
m0_37 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="BacktestingSetupHandler.cs"];
m0_68 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="BacktestingSetupHandler.cs"];
m0_231 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="BacktestingSetupHandler.cs"];
m0_16 [label="Entry QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="73-73", cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="BacktestingSetupHandler.cs"];
m0_17 [label="T item", span="75-75", cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="BacktestingSetupHandler.cs"];
m0_18 [label="queue.TryDequeue(out item)", span="76-76", cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="BacktestingSetupHandler.cs"];
m0_19 [label="Exit QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="73-73", cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", file="BacktestingSetupHandler.cs"];
m0_373 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="BacktestingSetupHandler.cs"];
m0_42 [label="Entry QuantConnect.Extensions.ToSHA256(string)", span="115-115", cluster="QuantConnect.Extensions.ToSHA256(string)", file="BacktestingSetupHandler.cs"];
m0_43 [label="var crypt = new SHA256Managed()", span="117-117", cluster="QuantConnect.Extensions.ToSHA256(string)", file="BacktestingSetupHandler.cs"];
m0_45 [label="var crypto = crypt.ComputeHash(Encoding.UTF8.GetBytes(data), 0, Encoding.UTF8.GetByteCount(data))", span="119-119", cluster="QuantConnect.Extensions.ToSHA256(string)", file="BacktestingSetupHandler.cs"];
m0_44 [label="var hash = new StringBuilder()", span="118-118", cluster="QuantConnect.Extensions.ToSHA256(string)", file="BacktestingSetupHandler.cs"];
m0_47 [label="hash.Append(theByte.ToString(''x2''))", span="122-122", cluster="QuantConnect.Extensions.ToSHA256(string)", file="BacktestingSetupHandler.cs"];
m0_48 [label="return hash.ToString();", span="124-124", cluster="QuantConnect.Extensions.ToSHA256(string)", file="BacktestingSetupHandler.cs"];
m0_46 [label=crypto, span="120-120", cluster="QuantConnect.Extensions.ToSHA256(string)", file="BacktestingSetupHandler.cs"];
m0_49 [label="Exit QuantConnect.Extensions.ToSHA256(string)", span="115-115", cluster="QuantConnect.Extensions.ToSHA256(string)", file="BacktestingSetupHandler.cs"];
m0_234 [label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="444-444", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="BacktestingSetupHandler.cs"];
m0_235 [label="roundingInterval == TimeSpan.Zero", span="446-446", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="BacktestingSetupHandler.cs"];
m0_236 [label="return time;", span="449-449", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="BacktestingSetupHandler.cs"];
m0_237 [label="return new TimeSpan(\r\n                Convert.ToInt64(Math.Round(\r\n                    time.Ticks / (decimal)roundingInterval.Ticks,\r\n                    roundingType\r\n                )) * roundingInterval.Ticks\r\n            );", span="452-457", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="BacktestingSetupHandler.cs"];
m0_238 [label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="444-444", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", file="BacktestingSetupHandler.cs"];
m0_434 [label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", span="0-0", cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", file="BacktestingSetupHandler.cs"];
m0_561 [label="Entry PyDict.cstr", span="", cluster="PyDict.cstr", file="BacktestingSetupHandler.cs"];
m0_38 [label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", span="0-0", cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", file="BacktestingSetupHandler.cs"];
m0_219 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="BacktestingSetupHandler.cs"];
m0_349 [label="Entry Unk.Replace", span="", cluster="Unk.Replace", file="BacktestingSetupHandler.cs"];
m0_104 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="BacktestingSetupHandler.cs"];
m0_317 [label="Entry QuantConnect.Extensions.MatchesTypeName(System.Type, string)", span="655-655", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="BacktestingSetupHandler.cs"];
m0_318 [label="type.AssemblyQualifiedName == typeName", span="657-657", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="BacktestingSetupHandler.cs"];
m0_320 [label="type.FullName == typeName", span="661-661", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="BacktestingSetupHandler.cs"];
m0_322 [label="type.Name == typeName", span="665-665", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="BacktestingSetupHandler.cs"];
m0_319 [label="return true;", span="659-659", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="BacktestingSetupHandler.cs"];
m0_321 [label="return true;", span="663-663", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="BacktestingSetupHandler.cs"];
m0_323 [label="return true;", span="667-667", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="BacktestingSetupHandler.cs"];
m0_324 [label="return false;", span="669-669", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="BacktestingSetupHandler.cs"];
m0_325 [label="Exit QuantConnect.Extensions.MatchesTypeName(System.Type, string)", span="655-655", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)", file="BacktestingSetupHandler.cs"];
m0_298 [label="Entry Unk.AtLeniently", span="", cluster="Unk.AtLeniently", file="BacktestingSetupHandler.cs"];
m0_93 [label="Entry System.Math.Abs(double)", span="0-0", cluster="System.Math.Abs(double)", file="BacktestingSetupHandler.cs"];
m0_115 [label="Entry QuantConnect.Extensions.SafeDecimalCast(double)", span="229-229", cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="BacktestingSetupHandler.cs"];
m0_116 [label="input <= (double) decimal.MinValue", span="231-231", cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="BacktestingSetupHandler.cs"];
m0_118 [label="input >= (double) decimal.MaxValue", span="232-232", cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="BacktestingSetupHandler.cs"];
m0_120 [label="return (decimal) input;", span="233-233", cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="BacktestingSetupHandler.cs"];
m0_117 [label="return decimal.MinValue;", span="231-231", cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="BacktestingSetupHandler.cs"];
m0_119 [label="return decimal.MaxValue;", span="232-232", cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="BacktestingSetupHandler.cs"];
m0_121 [label="Exit QuantConnect.Extensions.SafeDecimalCast(double)", span="229-229", cluster="QuantConnect.Extensions.SafeDecimalCast(double)", file="BacktestingSetupHandler.cs"];
m0_52 [label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", span="0-0", cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[], int, int)", file="BacktestingSetupHandler.cs"];
m0_275 [label="Entry System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", span="496-496", cluster="System.DateTime.RoundDownInTimeZone(System.TimeSpan, DateTimeZone, DateTimeZone)", file="BacktestingSetupHandler.cs"];
m0_338 [label="Entry QuantConnect.Extensions.GetBetterTypeName(System.Type)", span="707-707", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="BacktestingSetupHandler.cs"];
m0_339 [label="string name = type.Name", span="709-709", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="BacktestingSetupHandler.cs"];
m0_340 [label="type.IsGenericType", span="710-710", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="BacktestingSetupHandler.cs"];
m0_341 [label="var genericArguments = type.GetGenericArguments()", span="712-712", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="BacktestingSetupHandler.cs"];
m0_343 [label="name = name.Replace(toBeReplaced, ''<'' + string.Join('', '', genericArguments.Select(x => x.GetBetterTypeName())) + ''>'')", span="714-714", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="BacktestingSetupHandler.cs"];
m0_344 [label="return name;", span="716-716", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="BacktestingSetupHandler.cs"];
m0_342 [label="var toBeReplaced = ''`'' + (genericArguments.Length)", span="713-713", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="BacktestingSetupHandler.cs"];
m0_345 [label="Exit QuantConnect.Extensions.GetBetterTypeName(System.Type)", span="707-707", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)", file="BacktestingSetupHandler.cs"];
m0_266 [label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", span="141-141", cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", file="BacktestingSetupHandler.cs"];
m0_497 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="118-118", cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="BacktestingSetupHandler.cs"];
m0_220 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BacktestingSetupHandler.cs"];
m0_461 [label="Entry lambda expression", span="922-922", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_58 [label=value, span="138-138", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_57 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_59 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_66 [label="addValueFactory(key)", span="152-152", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_70 [label="new Lazy<TValue>(() => updateValueFactory(key2, old.Value))", span="152-152", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_73 [label="updateValueFactory(key2, old.Value)", span="152-152", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_69 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_65 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_67 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_71 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_72 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_74 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_350 [label="Entry lambda expression", span="714-714", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_351 [label="x.GetBetterTypeName()", span="714-714", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_352 [label="Exit lambda expression", span="714-714", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_462 [label="x.Contains(''.'' + algorithmTypeName)", span="922-922", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_463 [label="Exit lambda expression", span="922-922", cluster="lambda expression", file="BacktestingSetupHandler.cs"];
m0_401 [label="Entry string.ConvertTo(System.Type)", span="790-790", cluster="string.ConvertTo(System.Type)", file="BacktestingSetupHandler.cs"];
m0_96 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="BacktestingSetupHandler.cs"];
m0_506 [label="Entry QuantConnect.Extensions.ToSafeString(PyObject)", span="1001-1001", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_507 [label="Py.GIL()", span="1003-1003", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_508 [label="pyObject.HasAttr(''to_string'')", span="1007-1007", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_509 [label="return Environment.NewLine + pyObject.InvokeMethod(''to_string'').ToString();", span="1009-1009", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_510 [label="var value = pyObject.ToString()", span="1012-1012", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_512 [label="var pythonType = pyObject.GetPythonType()", span="1015-1015", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_516 [label="value = pyObject.AsManagedObject(type).ToString()", span="1023-1023", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_511 [label="string.IsNullOrWhiteSpace(value)", span="1013-1013", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_517 [label="return value;", span="1026-1026", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_513 [label="pythonType.GetType() == typeof(PyObject)", span="1016-1016", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_514 [label="value = pythonType.ToString()", span="1018-1018", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_515 [label="var type = pythonType.As<Type>()", span="1022-1022", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_518 [label="Exit QuantConnect.Extensions.ToSafeString(PyObject)", span="1001-1001", cluster="QuantConnect.Extensions.ToSafeString(PyObject)", file="BacktestingSetupHandler.cs"];
m0_239 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)", file="BacktestingSetupHandler.cs"];
m0_575 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="BacktestingSetupHandler.cs"];
m0_267 [label="Entry QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", span="539-539", cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_268 [label="interval == TimeSpan.Zero", span="542-542", cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_269 [label="return dateTime;", span="542-542", cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_270 [label="var rounded = dateTime.RoundDownInTimeZone(interval, exchangeHours.TimeZone, roundingTimeZone)", span="544-544", cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_271 [label="!exchangeHours.IsOpen(rounded, rounded + interval, extendedMarket)", span="545-545", cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_272 [label="rounded = (rounded - interval).RoundDownInTimeZone(interval, exchangeHours.TimeZone, roundingTimeZone)", span="547-547", cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_273 [label="return rounded;", span="549-549", cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_274 [label="Exit QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", span="539-539", cluster="QuantConnect.Extensions.ExchangeRoundDownInTimeZone(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_26 [label="Entry System.Text.Encoding.GetString(byte[])", span="0-0", cluster="System.Text.Encoding.GetString(byte[])", file="BacktestingSetupHandler.cs"];
m0_232 [label="Entry System.IO.StreamWriter.Write(string)", span="0-0", cluster="System.IO.StreamWriter.Write(string)", file="BacktestingSetupHandler.cs"];
m0_75 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="BacktestingSetupHandler.cs"];
m0_430 [label="Entry QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="868-868", cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="BacktestingSetupHandler.cs"];
m0_431 [label="var md5 = MD5.Create()", span="870-870", cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="BacktestingSetupHandler.cs"];
m0_432 [label="return md5.ComputeHash(stream);", span="872-872", cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="BacktestingSetupHandler.cs"];
m0_433 [label="Exit QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="868-868", cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", file="BacktestingSetupHandler.cs"];
m0_520 [label="Entry Unk.HasAttr", span="", cluster="Unk.HasAttr", file="BacktestingSetupHandler.cs"];
m0_297 [label="Entry Unk.ToDateTimeUnspecified", span="", cluster="Unk.ToDateTimeUnspecified", file="BacktestingSetupHandler.cs"];
m0_468 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="BacktestingSetupHandler.cs"];
m0_422 [label="Entry System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", span="858-858", cluster="System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m0_242 [label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="467-467", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_243 [label="return Round(time, roundingInterval, MidpointRounding.ToEven);", span="469-469", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_244 [label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="467-467", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_456 [label="Entry QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", span="918-918", cluster="QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", file="BacktestingSetupHandler.cs"];
m0_457 [label="return names.Count == 1 ? names.Single() : names.SingleOrDefault(x => x.Contains(''.'' + algorithmTypeName));", span="922-922", cluster="QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", file="BacktestingSetupHandler.cs"];
m0_458 [label="Exit QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", span="918-918", cluster="QuantConnect.Extensions.SingleOrAlgorithmTypeName(System.Collections.Generic.List<string>, string)", file="BacktestingSetupHandler.cs"];
m0_590 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="BacktestingSetupHandler.cs"];
m0_442 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="BacktestingSetupHandler.cs"];
m0_294 [label="Entry Unk.FromDateTime", span="", cluster="Unk.FromDateTime", file="BacktestingSetupHandler.cs"];
m0_205 [label="Entry QuantConnect.Extensions.IsNaNOrZero(double)", span="393-393", cluster="QuantConnect.Extensions.IsNaNOrZero(double)", file="BacktestingSetupHandler.cs"];
m0_206 [label="return double.IsNaN(value) || Math.Abs(value) < double.Epsilon;", span="395-395", cluster="QuantConnect.Extensions.IsNaNOrZero(double)", file="BacktestingSetupHandler.cs"];
m0_207 [label="Exit QuantConnect.Extensions.IsNaNOrZero(double)", span="393-393", cluster="QuantConnect.Extensions.IsNaNOrZero(double)", file="BacktestingSetupHandler.cs"];
m0_573 [label="Entry PyObject.TryConvert<T>(out T)", span="1037-1037", cluster="PyObject.TryConvert<T>(out T)", file="BacktestingSetupHandler.cs"];
m0_208 [label="Entry double.IsNaN(double)", span="0-0", cluster="double.IsNaN(double)", file="BacktestingSetupHandler.cs"];
m0_417 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="BacktestingSetupHandler.cs"];
m0_429 [label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", span="0-0", cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", file="BacktestingSetupHandler.cs"];
m0_527 [label="Entry Unk.AsManagedObject", span="", cluster="Unk.AsManagedObject", file="BacktestingSetupHandler.cs"];
m0_212 [label="Entry QuantConnect.Extensions.GetExtension(string)", span="412-412", cluster="QuantConnect.Extensions.GetExtension(string)", file="BacktestingSetupHandler.cs"];
m0_213 [label="var ext = str.Substring(Math.Max(0, str.Length - 4))", span="413-413", cluster="QuantConnect.Extensions.GetExtension(string)", file="BacktestingSetupHandler.cs"];
m0_214 [label="var allowedExt = new List<string>() { ''.zip'', ''.csv'', ''.json'' }", span="414-414", cluster="QuantConnect.Extensions.GetExtension(string)", file="BacktestingSetupHandler.cs"];
m0_215 [label="!allowedExt.Contains(ext)", span="415-415", cluster="QuantConnect.Extensions.GetExtension(string)", file="BacktestingSetupHandler.cs"];
m0_217 [label="return ext;", span="419-419", cluster="QuantConnect.Extensions.GetExtension(string)", file="BacktestingSetupHandler.cs"];
m0_216 [label="ext = ''.custom''", span="417-417", cluster="QuantConnect.Extensions.GetExtension(string)", file="BacktestingSetupHandler.cs"];
m0_218 [label="Exit QuantConnect.Extensions.GetExtension(string)", span="412-412", cluster="QuantConnect.Extensions.GetExtension(string)", file="BacktestingSetupHandler.cs"];
m0_293 [label="Entry Unk.ReferenceEquals", span="", cluster="Unk.ReferenceEquals", file="BacktestingSetupHandler.cs"];
m0_498 [label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="200-200", cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BacktestingSetupHandler.cs"];
m0_347 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BacktestingSetupHandler.cs"];
m0_562 [label="Entry Unk.ToPython", span="", cluster="Unk.ToPython", file="BacktestingSetupHandler.cs"];
m0_51 [label="Entry System.Text.Encoding.GetByteCount(string)", span="0-0", cluster="System.Text.Encoding.GetByteCount(string)", file="BacktestingSetupHandler.cs"];
m0_464 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="BacktestingSetupHandler.cs"];
m0_296 [label="Entry Unk.WithZone", span="", cluster="Unk.WithZone", file="BacktestingSetupHandler.cs"];
m0_149 [label="Entry QuantConnect.Extensions.ToInt32(string)", span="299-299", cluster="QuantConnect.Extensions.ToInt32(string)", file="BacktestingSetupHandler.cs"];
m0_150 [label="int value = 0", span="301-301", cluster="QuantConnect.Extensions.ToInt32(string)", file="BacktestingSetupHandler.cs"];
m0_152 [label="i < str.Length", span="302-302", cluster="QuantConnect.Extensions.ToInt32(string)", file="BacktestingSetupHandler.cs"];
m0_153 [label="value = value * 10 + (str[i] - '0')", span="304-304", cluster="QuantConnect.Extensions.ToInt32(string)", file="BacktestingSetupHandler.cs"];
m0_151 [label="var i = 0", span="302-302", cluster="QuantConnect.Extensions.ToInt32(string)", file="BacktestingSetupHandler.cs"];
m0_155 [label="return value;", span="306-306", cluster="QuantConnect.Extensions.ToInt32(string)", file="BacktestingSetupHandler.cs"];
m0_154 [label="i++", span="302-302", cluster="QuantConnect.Extensions.ToInt32(string)", file="BacktestingSetupHandler.cs"];
m0_156 [label="Exit QuantConnect.Extensions.ToInt32(string)", span="299-299", cluster="QuantConnect.Extensions.ToInt32(string)", file="BacktestingSetupHandler.cs"];
m0_419 [label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", span="821-821", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m0_420 [label="return waitHandle.WaitOne(Timeout.Infinite, cancellationToken);", span="823-823", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m0_421 [label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", span="821-821", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m0_60 [label="Entry QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", span="150-150", cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="BacktestingSetupHandler.cs"];
m0_61 [label="var result = dictionary.AddOrUpdate(key, new Lazy<TValue>(() => addValueFactory(key)), (key2, old) => new Lazy<TValue>(() => updateValueFactory(key2, old.Value)))", span="152-152", cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="BacktestingSetupHandler.cs"];
m0_62 [label="return result.Value;", span="153-153", cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="BacktestingSetupHandler.cs"];
m0_63 [label="Exit QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", span="150-150", cluster="QuantConnect.Extensions.AddOrUpdate<TKey, TValue>(System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Lazy<TValue>>, TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)", file="BacktestingSetupHandler.cs"];
m0_591 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="BacktestingSetupHandler.cs"];
m0_470 [label="Entry QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", span="941-941", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_471 [label="var limitPrice = 0m", span="943-943", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_473 [label="order.Type", span="946-946", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_475 [label="var limitOrder = order as LimitOrder", span="949-949", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_478 [label="var stopMarketOrder = order as StopMarketOrder", span="953-953", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_481 [label="var stopLimitOrder = order as StopLimitOrder", span="957-957", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_488 [label="limitPrice = order.Price", span="965-965", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_489 [label="stopPrice = order.Price", span="966-966", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_491 [label="var submitOrderRequest = new SubmitOrderRequest(order.Type,\r\n                order.SecurityType,\r\n                order.Symbol,\r\n                order.Quantity,\r\n                stopPrice,\r\n                limitPrice,\r\n                order.Time,\r\n                order.Tag,\r\n                order.Properties)", span="972-980", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_492 [label="submitOrderRequest.SetOrderId(order.Id)", span="982-982", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_493 [label="return new OrderTicket(transactionManager, submitOrderRequest);", span="984-984", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_472 [label="var stopPrice = 0m", span="944-944", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_474 [label="OrderType.Limit", span="948-948", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_477 [label="OrderType.StopMarket", span="952-952", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_480 [label="OrderType.StopLimit", span="956-956", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_484 [label="OrderType.OptionExercise", span="961-961", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_490 [label="throw new ArgumentOutOfRangeException();", span="969-969", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_476 [label="limitPrice = limitOrder.LimitPrice", span="950-950", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_479 [label="stopPrice = stopMarketOrder.StopPrice", span="954-954", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_482 [label="stopPrice = stopLimitOrder.StopPrice", span="958-958", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_483 [label="limitPrice = stopLimitOrder.LimitPrice", span="959-959", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_485 [label="OrderType.Market", span="962-962", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_486 [label="OrderType.MarketOnOpen", span="963-963", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_487 [label="OrderType.MarketOnClose", span="964-964", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_494 [label="Exit QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", span="941-941", cluster="QuantConnect.Extensions.ToOrderTicket(QuantConnect.Orders.Order, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs"];
m0_41 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="BacktestingSetupHandler.cs"];
m0_98 [label="Entry QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", span="197-197", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="BacktestingSetupHandler.cs"];
m0_99 [label="d == 0", span="199-199", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="BacktestingSetupHandler.cs"];
m0_101 [label="var scale = (decimal)Math.Pow(10, Math.Floor(Math.Log10((double) Math.Abs(d))) + 1)", span="200-200", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="BacktestingSetupHandler.cs"];
m0_102 [label="return scale * Math.Round(d / scale, digits);", span="201-201", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="BacktestingSetupHandler.cs"];
m0_100 [label="return 0;", span="199-199", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="BacktestingSetupHandler.cs"];
m0_103 [label="Exit QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", span="197-197", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", file="BacktestingSetupHandler.cs"];
m0_36 [label="Entry System.Security.Cryptography.MD5.Create()", span="0-0", cluster="System.Security.Cryptography.MD5.Create()", file="BacktestingSetupHandler.cs"];
m0_308 [label="Entry QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", span="633-633", cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", file="BacktestingSetupHandler.cs"];
m0_309 [label="return (date.DayOfWeek != DayOfWeek.Saturday && date.DayOfWeek != DayOfWeek.Sunday);", span="635-635", cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", file="BacktestingSetupHandler.cs"];
m0_310 [label="Exit QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", span="633-633", cluster="QuantConnect.Extensions.IsCommonBusinessDay(System.DateTime)", file="BacktestingSetupHandler.cs"];
m0_147 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="BacktestingSetupHandler.cs"];
m0_83 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingSetupHandler.cs"];
m0_459 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="BacktestingSetupHandler.cs"];
m0_525 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="BacktestingSetupHandler.cs"];
m0_346 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="BacktestingSetupHandler.cs"];
m0_85 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="BacktestingSetupHandler.cs"];
m0_222 [label="Entry QuantConnect.Extensions.ToStream(string)", span="427-427", cluster="QuantConnect.Extensions.ToStream(string)", file="BacktestingSetupHandler.cs"];
m0_223 [label="var stream = new MemoryStream()", span="429-429", cluster="QuantConnect.Extensions.ToStream(string)", file="BacktestingSetupHandler.cs"];
m0_225 [label="writer.Write(str)", span="431-431", cluster="QuantConnect.Extensions.ToStream(string)", file="BacktestingSetupHandler.cs"];
m0_224 [label="var writer = new StreamWriter(stream)", span="430-430", cluster="QuantConnect.Extensions.ToStream(string)", file="BacktestingSetupHandler.cs"];
m0_227 [label="stream.Position = 0", span="433-433", cluster="QuantConnect.Extensions.ToStream(string)", file="BacktestingSetupHandler.cs"];
m0_228 [label="return stream;", span="434-434", cluster="QuantConnect.Extensions.ToStream(string)", file="BacktestingSetupHandler.cs"];
m0_226 [label="writer.Flush()", span="432-432", cluster="QuantConnect.Extensions.ToStream(string)", file="BacktestingSetupHandler.cs"];
m0_229 [label="Exit QuantConnect.Extensions.ToStream(string)", span="427-427", cluster="QuantConnect.Extensions.ToStream(string)", file="BacktestingSetupHandler.cs"];
m0_245 [label="Entry QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="478-478", cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_246 [label="interval == TimeSpan.Zero", span="480-480", cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_247 [label="return dateTime;", span="483-483", cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_248 [label="return dateTime.AddTicks(-(dateTime.Ticks % interval.Ticks));", span="485-485", cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_249 [label="Exit QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="478-478", cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_241 [label="Entry System.Convert.ToInt64(decimal)", span="0-0", cluster="System.Convert.ToInt64(decimal)", file="BacktestingSetupHandler.cs"];
m0_106 [label="Entry QuantConnect.Extensions.SmartRounding(decimal)", span="208-208", cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="BacktestingSetupHandler.cs"];
m0_107 [label="input = Normalize(input)", span="210-210", cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="BacktestingSetupHandler.cs"];
m0_108 [label="input > 1000", span="213-213", cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="BacktestingSetupHandler.cs"];
m0_109 [label="return Math.Round(input, 4);", span="215-215", cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="BacktestingSetupHandler.cs"];
m0_110 [label="var d = (double)input", span="219-219", cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="BacktestingSetupHandler.cs"];
m0_111 [label="return (decimal)d.RoundToSignificantDigits(7);", span="220-220", cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="BacktestingSetupHandler.cs"];
m0_112 [label="Exit QuantConnect.Extensions.SmartRounding(decimal)", span="208-208", cluster="QuantConnect.Extensions.SmartRounding(decimal)", file="BacktestingSetupHandler.cs"];
m0_316 [label="Entry System.Timers.Timer.Start()", span="0-0", cluster="System.Timers.Timer.Start()", file="BacktestingSetupHandler.cs"];
m0_302 [label="Entry QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", span="618-618", cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_303 [label=strict, span="620-620", cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_304 [label="return from.AtStrictly(LocalDateTime.FromDateTime(time)).ToDateTimeUtc();", span="622-622", cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_305 [label="return from.AtLeniently(LocalDateTime.FromDateTime(time)).ToDateTimeUtc();", span="625-625", cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_306 [label="Exit QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", span="618-618", cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_499 [label="Entry QuantConnect.Extensions.ProcessUntilEmpty<T>(System.Collections.Concurrent.IProducerConsumerCollection<T>, System.Action<T>)", span="987-987", cluster="QuantConnect.Extensions.ProcessUntilEmpty<T>(System.Collections.Concurrent.IProducerConsumerCollection<T>, System.Action<T>)", file="BacktestingSetupHandler.cs"];
m0_500 [label="T item", span="989-989", cluster="QuantConnect.Extensions.ProcessUntilEmpty<T>(System.Collections.Concurrent.IProducerConsumerCollection<T>, System.Action<T>)", file="BacktestingSetupHandler.cs"];
m0_501 [label="collection.TryTake(out item)", span="990-990", cluster="QuantConnect.Extensions.ProcessUntilEmpty<T>(System.Collections.Concurrent.IProducerConsumerCollection<T>, System.Action<T>)", file="BacktestingSetupHandler.cs"];
m0_502 [label="handler(item)", span="992-992", cluster="QuantConnect.Extensions.ProcessUntilEmpty<T>(System.Collections.Concurrent.IProducerConsumerCollection<T>, System.Action<T>)", file="BacktestingSetupHandler.cs"];
m0_503 [label="Exit QuantConnect.Extensions.ProcessUntilEmpty<T>(System.Collections.Concurrent.IProducerConsumerCollection<T>, System.Action<T>)", span="987-987", cluster="QuantConnect.Extensions.ProcessUntilEmpty<T>(System.Collections.Concurrent.IProducerConsumerCollection<T>, System.Action<T>)", file="BacktestingSetupHandler.cs"];
m0_114 [label="Entry double.RoundToSignificantDigits(int)", span="184-184", cluster="double.RoundToSignificantDigits(int)", file="BacktestingSetupHandler.cs"];
m0_560 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="BacktestingSetupHandler.cs"];
m0_251 [label="Entry QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", span="496-496", cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="BacktestingSetupHandler.cs"];
m0_252 [label="var dateTimeInRoundingTimeZone = dateTime.ConvertTo(sourceTimeZone, roundingTimeZone)", span="498-498", cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="BacktestingSetupHandler.cs"];
m0_253 [label="var roundedDateTimeInRoundingTimeZone = dateTimeInRoundingTimeZone.RoundDown(roundingInterval)", span="499-499", cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="BacktestingSetupHandler.cs"];
m0_254 [label="return roundedDateTimeInRoundingTimeZone.ConvertTo(roundingTimeZone, sourceTimeZone);", span="500-500", cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="BacktestingSetupHandler.cs"];
m0_255 [label="Exit QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", span="496-496", cluster="QuantConnect.Extensions.RoundDownInTimeZone(System.DateTime, System.TimeSpan, DateTimeZone, DateTimeZone)", file="BacktestingSetupHandler.cs"];
m0_563 [label="Entry Unk.SetItem", span="", cluster="Unk.SetItem", file="BacktestingSetupHandler.cs"];
m0_299 [label="Entry QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", span="606-606", cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_300 [label="return time.ConvertTo(TimeZones.Utc, to, strict);", span="608-608", cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_301 [label="Exit QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", span="606-606", cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_165 [label="Entry QuantConnect.Extensions.ToCsv(string, int)", span="331-331", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_166 [label="int last = 0", span="333-333", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_167 [label="var csv = new List<string>(size)", span="334-334", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_169 [label="i < str.Length", span="335-335", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_170 [label="str[i] == ','", span="337-337", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_173 [label="csv.Add(str.Substring(last, i - last))", span="340-340", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_178 [label="csv.Add(str.Substring(last))", span="345-345", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_171 [label="last != 0", span="339-339", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_172 [label="last = last + 1", span="339-339", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_176 [label="last != 0", span="344-344", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_177 [label="last = last + 1", span="344-344", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_168 [label="int i = 0", span="335-335", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_179 [label="return csv;", span="346-346", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_174 [label="last = i", span="341-341", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_175 [label="i++", span="335-335", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_180 [label="Exit QuantConnect.Extensions.ToCsv(string, int)", span="331-331", cluster="QuantConnect.Extensions.ToCsv(string, int)", file="BacktestingSetupHandler.cs"];
m0_221 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="BacktestingSetupHandler.cs"];
m0_372 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="BacktestingSetupHandler.cs"];
m0_8 [label="Entry System.Collections.Generic.List<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.List<T>.Insert(int, T)", file="BacktestingSetupHandler.cs"];
m0_27 [label="Entry QuantConnect.Extensions.ToMD5(string)", span="99-99", cluster="QuantConnect.Extensions.ToMD5(string)", file="BacktestingSetupHandler.cs"];
m0_28 [label="var builder = new StringBuilder()", span="101-101", cluster="QuantConnect.Extensions.ToMD5(string)", file="BacktestingSetupHandler.cs"];
m0_30 [label="var data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(str))", span="104-104", cluster="QuantConnect.Extensions.ToMD5(string)", file="BacktestingSetupHandler.cs"];
m0_29 [label="var md5Hash = MD5.Create()", span="102-102", cluster="QuantConnect.Extensions.ToMD5(string)", file="BacktestingSetupHandler.cs"];
m0_32 [label="builder.Append(t.ToString(''x2''))", span="105-105", cluster="QuantConnect.Extensions.ToMD5(string)", file="BacktestingSetupHandler.cs"];
m0_33 [label="return builder.ToString();", span="107-107", cluster="QuantConnect.Extensions.ToMD5(string)", file="BacktestingSetupHandler.cs"];
m0_31 [label=data, span="105-105", cluster="QuantConnect.Extensions.ToMD5(string)", file="BacktestingSetupHandler.cs"];
m0_34 [label="Exit QuantConnect.Extensions.ToMD5(string)", span="99-99", cluster="QuantConnect.Extensions.ToMD5(string)", file="BacktestingSetupHandler.cs"];
m0_148 [label="Entry decimal.Decimal(int, int, int, bool, byte)", span="0-0", cluster="decimal.Decimal(int, int, int, bool, byte)", file="BacktestingSetupHandler.cs"];
m0_184 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="BacktestingSetupHandler.cs"];
m0_353 [label="Entry System.Type.GetBetterTypeName()", span="707-707", cluster="System.Type.GetBetterTypeName()", file="BacktestingSetupHandler.cs"];
m0_326 [label="Entry QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", span="679-679", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_327 [label="type != null && type != typeof(object)", span="681-681", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_329 [label="type.IsGenericType && possibleSuperType.IsGenericTypeDefinition", span="684-684", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_330 [label="cur = type.GetGenericTypeDefinition()", span="686-686", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_331 [label="cur = type", span="690-690", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_332 [label="possibleSuperType == cur", span="692-692", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_334 [label="type = type.BaseType", span="696-696", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_328 [label="Type cur", span="683-683", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_335 [label="return false;", span="698-698", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_333 [label="return true;", span="694-694", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_336 [label="Exit QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", span="679-679", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", file="BacktestingSetupHandler.cs"];
m0_105 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)", file="BacktestingSetupHandler.cs"];
m0_368 [label="Entry System.TimeSpan.FromTicks(long)", span="0-0", cluster="System.TimeSpan.FromTicks(long)", file="BacktestingSetupHandler.cs"];
m0_445 [label="Entry QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", span="899-899", cluster="QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", file="BacktestingSetupHandler.cs"];
m0_446 [label="var startIndex = 1 + value.IndexOf(left)", span="901-901", cluster="QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", file="BacktestingSetupHandler.cs"];
m0_447 [label="var length = value.IndexOf(right, startIndex) - startIndex", span="902-902", cluster="QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", file="BacktestingSetupHandler.cs"];
m0_449 [label="value = value.Substring(startIndex, length)", span="905-905", cluster="QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", file="BacktestingSetupHandler.cs"];
m0_450 [label="startIndex = 1 + value.IndexOf(left)", span="906-906", cluster="QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", file="BacktestingSetupHandler.cs"];
m0_448 [label="length > 0", span="903-903", cluster="QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", file="BacktestingSetupHandler.cs"];
m0_452 [label="return string.Empty;", span="909-909", cluster="QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", file="BacktestingSetupHandler.cs"];
m0_451 [label="return value.Substring(startIndex).Trim();", span="907-907", cluster="QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", file="BacktestingSetupHandler.cs"];
m0_453 [label="Exit QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", span="899-899", cluster="QuantConnect.Extensions.GetStringBetweenChars(string, char, char)", file="BacktestingSetupHandler.cs"];
m0_426 [label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", span="858-858", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m0_427 [label="return WaitHandle.WaitAny(new[] { waitHandle, cancellationToken.WaitHandle }, millisecondsTimeout) == 0;", span="860-860", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m0_428 [label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", span="858-858", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", file="BacktestingSetupHandler.cs"];
m0_495 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="BacktestingSetupHandler.cs"];
m0_418 [label="Entry Unk.DeserializeObject", span="", cluster="Unk.DeserializeObject", file="BacktestingSetupHandler.cs"];
m0_50 [label="Entry System.Security.Cryptography.SHA256Managed.SHA256Managed()", span="0-0", cluster="System.Security.Cryptography.SHA256Managed.SHA256Managed()", file="BacktestingSetupHandler.cs"];
m0_465 [label="Entry QuantConnect.Extensions.ToLower(System.Enum)", span="930-930", cluster="QuantConnect.Extensions.ToLower(System.Enum)", file="BacktestingSetupHandler.cs"];
m0_466 [label="return @enum.ToString().ToLower();", span="932-932", cluster="QuantConnect.Extensions.ToLower(System.Enum)", file="BacktestingSetupHandler.cs"];
m0_467 [label="Exit QuantConnect.Extensions.ToLower(System.Enum)", span="930-930", cluster="QuantConnect.Extensions.ToLower(System.Enum)", file="BacktestingSetupHandler.cs"];
m0_39 [label="Entry byte.ToString(string)", span="0-0", cluster="byte.ToString(string)", file="BacktestingSetupHandler.cs"];
m0_398 [label="Entry QuantConnect.Extensions.ConvertTo<T>(string)", span="779-779", cluster="QuantConnect.Extensions.ConvertTo<T>(string)", file="BacktestingSetupHandler.cs"];
m0_399 [label="return (T) value.ConvertTo(typeof (T));", span="781-781", cluster="QuantConnect.Extensions.ConvertTo<T>(string)", file="BacktestingSetupHandler.cs"];
m0_400 [label="Exit QuantConnect.Extensions.ConvertTo<T>(string)", span="779-779", cluster="QuantConnect.Extensions.ConvertTo<T>(string)", file="BacktestingSetupHandler.cs"];
m0_415 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="BacktestingSetupHandler.cs"];
m0_369 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="BacktestingSetupHandler.cs"];
m0_230 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="BacktestingSetupHandler.cs"];
m0_87 [label="Entry QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="184-184", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="BacktestingSetupHandler.cs"];
m0_88 [label="d == 0", span="186-186", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="BacktestingSetupHandler.cs"];
m0_90 [label="var scale = Math.Pow(10, Math.Floor(Math.Log10(Math.Abs(d))) + 1)", span="187-187", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="BacktestingSetupHandler.cs"];
m0_91 [label="return scale * Math.Round(d / scale, digits);", span="188-188", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="BacktestingSetupHandler.cs"];
m0_89 [label="return 0;", span="186-186", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="BacktestingSetupHandler.cs"];
m0_92 [label="Exit QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="184-184", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)", file="BacktestingSetupHandler.cs"];
m0_566 [label="Entry QuantConnect.Extensions.GetEnumString(int, PyObject)", span="1122-1122", cluster="QuantConnect.Extensions.GetEnumString(int, PyObject)", file="BacktestingSetupHandler.cs"];
m0_567 [label="Type type", span="1124-1124", cluster="QuantConnect.Extensions.GetEnumString(int, PyObject)", file="BacktestingSetupHandler.cs"];
m0_568 [label="pyObject.TryConvert(out type)", span="1125-1125", cluster="QuantConnect.Extensions.GetEnumString(int, PyObject)", file="BacktestingSetupHandler.cs"];
m0_569 [label="return value.ToString().ConvertTo(type).ToString();", span="1127-1127", cluster="QuantConnect.Extensions.GetEnumString(int, PyObject)", file="BacktestingSetupHandler.cs"];
m0_571 [label="throw new ArgumentException($''GetEnumString(): {pyObject.Repr()} is not a C# Type.'');", span="1133-1133", cluster="QuantConnect.Extensions.GetEnumString(int, PyObject)", file="BacktestingSetupHandler.cs"];
m0_570 [label="Py.GIL()", span="1131-1131", cluster="QuantConnect.Extensions.GetEnumString(int, PyObject)", file="BacktestingSetupHandler.cs"];
m0_572 [label="Exit QuantConnect.Extensions.GetEnumString(int, PyObject)", span="1122-1122", cluster="QuantConnect.Extensions.GetEnumString(int, PyObject)", file="BacktestingSetupHandler.cs"];
m0_9 [label="Entry QuantConnect.Extensions.GetBytes(string)", span="60-60", cluster="QuantConnect.Extensions.GetBytes(string)", file="BacktestingSetupHandler.cs"];
m0_10 [label="var bytes = new byte[str.Length * sizeof(char)]", span="62-62", cluster="QuantConnect.Extensions.GetBytes(string)", file="BacktestingSetupHandler.cs"];
m0_11 [label="Buffer.BlockCopy(str.ToCharArray(), 0, bytes, 0, bytes.Length)", span="63-63", cluster="QuantConnect.Extensions.GetBytes(string)", file="BacktestingSetupHandler.cs"];
m0_12 [label="return bytes;", span="64-64", cluster="QuantConnect.Extensions.GetBytes(string)", file="BacktestingSetupHandler.cs"];
m0_13 [label="Exit QuantConnect.Extensions.GetBytes(string)", span="60-60", cluster="QuantConnect.Extensions.GetBytes(string)", file="BacktestingSetupHandler.cs"];
m0_14 [label="Entry string.ToCharArray()", span="0-0", cluster="string.ToCharArray()", file="BacktestingSetupHandler.cs"];
m0_181 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="BacktestingSetupHandler.cs"];
m0_182 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="BacktestingSetupHandler.cs"];
m0_76 [label="Entry QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="166-166", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="BacktestingSetupHandler.cs"];
m0_77 [label="TCollection list", span="169-169", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="BacktestingSetupHandler.cs"];
m0_78 [label="!dictionary.TryGetValue(key, out list)", span="170-170", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="BacktestingSetupHandler.cs"];
m0_80 [label="dictionary.Add(key, list)", span="173-173", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="BacktestingSetupHandler.cs"];
m0_81 [label="list.Add(element)", span="175-175", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="BacktestingSetupHandler.cs"];
m0_79 [label="list = new TCollection()", span="172-172", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="BacktestingSetupHandler.cs"];
m0_82 [label="Exit QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="166-166", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="BacktestingSetupHandler.cs"];
m0_374 [label="Entry QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", span="752-752", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_375 [label=requireExactMatch, span="754-754", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_376 [label="TimeSpan.Zero == timeSpan", span="756-756", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_378 [label="Time.OneSecond == timeSpan", span="757-757", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_380 [label="Time.OneMinute == timeSpan", span="758-758", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_382 [label="Time.OneHour   == timeSpan", span="759-759", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_384 [label="Time.OneDay    == timeSpan", span="760-760", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_386 [label="throw new InvalidOperationException($''Unable to exactly convert time span ('{timeSpan}') to resolution.'');", span="761-761", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_387 [label="Time.OneSecond > timeSpan", span="765-765", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_389 [label="Time.OneMinute > timeSpan", span="766-766", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_391 [label="Time.OneHour   > timeSpan", span="767-767", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_393 [label="Time.OneDay    > timeSpan", span="768-768", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_377 [label="return Resolution.Tick;", span="756-756", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_379 [label="return Resolution.Second;", span="757-757", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_381 [label="return Resolution.Minute;", span="758-758", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_383 [label="return Resolution.Hour;", span="759-759", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_385 [label="return Resolution.Daily;", span="760-760", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_388 [label="return Resolution.Tick;", span="765-765", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_390 [label="return Resolution.Second;", span="766-766", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_392 [label="return Resolution.Minute;", span="767-767", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_394 [label="return Resolution.Hour;", span="768-768", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_395 [label="return Resolution.Daily;", span="770-770", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_396 [label="Exit QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", span="752-752", cluster="QuantConnect.Extensions.ToHigherResolutionEquivalent(System.TimeSpan, bool)", file="BacktestingSetupHandler.cs"];
m0_402 [label="Entry QuantConnect.Extensions.ConvertTo(string, System.Type)", span="790-790", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_403 [label="type.IsEnum", span="792-792", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_404 [label="return Enum.Parse(type, value);", span="794-794", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_405 [label="typeof (IConvertible).IsAssignableFrom(type)", span="797-797", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_406 [label="return Convert.ChangeType(value, type, CultureInfo.InvariantCulture);", span="799-799", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_407 [label="var parse = type.GetMethod(''Parse'', new[] {typeof (string)})", span="803-803", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_409 [label="var result = parse.Invoke(null, new object[] {value})", span="806-806", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_411 [label="return JsonConvert.DeserializeObject(value, type);", span="810-810", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_408 [label="parse != null", span="804-804", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_410 [label="return result;", span="807-807", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_412 [label="Exit QuantConnect.Extensions.ConvertTo(string, System.Type)", span="790-790", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)", file="BacktestingSetupHandler.cs"];
m0_435 [label="Entry QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", span="881-881", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="BacktestingSetupHandler.cs"];
m0_436 [label="var regx = new Regex(''http(s)?://([\\w+?\\.\\w+])+([a-zA-Z0-9\\~\\!\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)_\\-\\=\\+\\\\\\/\\?\\.\\:\\;\\'\\,]*([a-zA-Z0-9\\?\\#\\=\\/]){1})?'', RegexOptions.IgnoreCase)", span="883-883", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="BacktestingSetupHandler.cs"];
m0_437 [label="var matches = regx.Matches(source)", span="884-884", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="BacktestingSetupHandler.cs"];
m0_439 [label="source = source.Replace(match.Value, ''<a href=''' + match.Value + ''' target='blank'>'' + match.Value + ''</a>'')", span="887-887", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="BacktestingSetupHandler.cs"];
m0_440 [label="return source;", span="889-889", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="BacktestingSetupHandler.cs"];
m0_438 [label=matches, span="885-885", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="BacktestingSetupHandler.cs"];
m0_441 [label="Exit QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", span="881-881", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", file="BacktestingSetupHandler.cs"];
m0_370 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="BacktestingSetupHandler.cs"];
m0_84 [label="Entry TCollection.cstr", span="", cluster="TCollection.cstr", file="BacktestingSetupHandler.cs"];
m0_250 [label="Entry System.DateTime.AddTicks(long)", span="0-0", cluster="System.DateTime.AddTicks(long)", file="BacktestingSetupHandler.cs"];
m0_523 [label="Entry Unk.IsNullOrWhiteSpace", span="", cluster="Unk.IsNullOrWhiteSpace", file="BacktestingSetupHandler.cs"];
m0_454 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="BacktestingSetupHandler.cs"];
m0_443 [label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Matches(string)", file="BacktestingSetupHandler.cs"];
m0_257 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="478-478", cluster="System.DateTime.RoundDown(System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_295 [label="Entry Unk.AtStrictly", span="", cluster="Unk.AtStrictly", file="BacktestingSetupHandler.cs"];
m0_64 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="BacktestingSetupHandler.cs"];
m0_280 [label="Entry System.TimeSpan.Round(System.TimeSpan)", span="467-467", cluster="System.TimeSpan.Round(System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_526 [label="Entry Unk.>", span="", cluster="Unk.>", file="BacktestingSetupHandler.cs"];
m0_113 [label="Entry QuantConnect.Extensions.Normalize(decimal)", span="236-236", cluster="QuantConnect.Extensions.Normalize(decimal)", file="BacktestingSetupHandler.cs"];
m0_122 [label="return input / 1.000000000000000000000000000000000m;", span="239-239", cluster="QuantConnect.Extensions.Normalize(decimal)", file="BacktestingSetupHandler.cs"];
m0_123 [label="Exit QuantConnect.Extensions.Normalize(decimal)", span="236-236", cluster="QuantConnect.Extensions.Normalize(decimal)", file="BacktestingSetupHandler.cs"];
m0_521 [label="Entry Unk.InvokeMethod", span="", cluster="Unk.InvokeMethod", file="BacktestingSetupHandler.cs"];
m0_185 [label="Entry QuantConnect.Extensions.ToCsvData(string, int)", span="355-355", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_186 [label="var csv = new List<string>(size)", span="357-357", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_190 [label="i < str.Length", span="362-362", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_191 [label="str[i]", span="364-364", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_196 [label="csv.Add(str.Substring(last + 1, (i - last)).Trim(' ', ','))", span="372-372", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_199 [label="last != str.Length - 1", span="381-381", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_200 [label="csv.Add(str.Substring(last + 1).Trim())", span="383-383", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_187 [label="int last = -1", span="359-359", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_201 [label="return csv;", span="386-386", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_188 [label="bool textDataField = false", span="360-360", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_189 [label="var i = 0", span="362-362", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_193 [label="textDataField = !textDataField", span="367-367", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_197 [label="last = i", span="373-373", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_198 [label="i++", span="362-362", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_192 [label="''''", span="366-366", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_194 [label="','", span="369-369", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_195 [label="!textDataField", span="370-370", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_202 [label="Exit QuantConnect.Extensions.ToCsvData(string, int)", span="355-355", cluster="QuantConnect.Extensions.ToCsvData(string, int)", file="BacktestingSetupHandler.cs"];
m0_455 [label="Entry string.IndexOf(char, int)", span="0-0", cluster="string.IndexOf(char, int)", file="BacktestingSetupHandler.cs"];
m0_397 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BacktestingSetupHandler.cs"];
m0_577 [label="Entry QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", span="1145-1145", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_578 [label="var enumerator = enumerable.GetEnumerator()", span="1147-1147", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_585 [label="yield return list;", span="1162-1162", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_588 [label="yield return list;", span="1169-1169", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_583 [label="list.Count < batchSize", span="1156-1156", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_579 [label="List<T> list = null", span="1149-1149", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_580 [label="enumerator.MoveNext()", span="1150-1150", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_582 [label="list = new List<T> {enumerator.Current}", span="1154-1154", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_584 [label="list.Add(enumerator.Current)", span="1158-1158", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_586 [label="list = new List<T> {enumerator.Current}", span="1163-1163", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_581 [label="list == null", span="1152-1152", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_587 [label="list?.Count > 0", span="1167-1167", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_589 [label="Exit QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", span="1145-1145", cluster="QuantConnect.Extensions.BatchBy<T>(System.Collections.Generic.IEnumerable<T>, int)", file="BacktestingSetupHandler.cs"];
m0_444 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="BacktestingSetupHandler.cs"];
m0_15 [label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", file="BacktestingSetupHandler.cs"];
m0_354 [label="Entry QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", span="724-724", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_355 [label=resolution, span="726-726", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_356 [label="Resolution.Tick", span="728-728", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_358 [label="Resolution.Second", span="731-731", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_360 [label="Resolution.Minute", span="733-733", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_362 [label="Resolution.Hour", span="735-735", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_364 [label="Resolution.Daily", span="737-737", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_366 [label="throw new ArgumentOutOfRangeException(''resolution'');", span="740-740", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_357 [label="return TimeSpan.FromTicks(0);", span="730-730", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_359 [label="return TimeSpan.FromSeconds(1);", span="732-732", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_361 [label="return TimeSpan.FromMinutes(1);", span="734-734", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_363 [label="return TimeSpan.FromHours(1);", span="736-736", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_365 [label="return TimeSpan.FromDays(1);", span="738-738", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_367 [label="Exit QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", span="724-724", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", file="BacktestingSetupHandler.cs"];
m0_564 [label="Entry Unk.Exec", span="", cluster="Unk.Exec", file="BacktestingSetupHandler.cs"];
m0_524 [label="Entry Unk.GetPythonType", span="", cluster="Unk.GetPythonType", file="BacktestingSetupHandler.cs"];
m0_97 [label="Entry System.Math.Round(double, int)", span="0-0", cluster="System.Math.Round(double, int)", file="BacktestingSetupHandler.cs"];
m0_519 [label="Entry Unk.GIL", span="", cluster="Unk.GIL", file="BacktestingSetupHandler.cs"];
m0_311 [label="Entry QuantConnect.Extensions.Reset(System.Timers.Timer)", span="642-642", cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="BacktestingSetupHandler.cs"];
m0_312 [label="timer.Stop()", span="644-644", cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="BacktestingSetupHandler.cs"];
m0_313 [label="timer.Start()", span="645-645", cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="BacktestingSetupHandler.cs"];
m0_314 [label="Exit QuantConnect.Extensions.Reset(System.Timers.Timer)", span="642-642", cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)", file="BacktestingSetupHandler.cs"];
m0_95 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)", file="BacktestingSetupHandler.cs"];
m0_416 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="BacktestingSetupHandler.cs"];
m0_505 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="BacktestingSetupHandler.cs"];
m0_204 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="BacktestingSetupHandler.cs"];
m0_21 [label="Entry QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="87-87", cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="BacktestingSetupHandler.cs"];
m0_22 [label="encoding == null", span="89-89", cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="BacktestingSetupHandler.cs"];
m0_24 [label="return encoding.GetString(bytes);", span="91-91", cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="BacktestingSetupHandler.cs"];
m0_23 [label="encoding = Encoding.ASCII", span="89-89", cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="BacktestingSetupHandler.cs"];
m0_25 [label="Exit QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="87-87", cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", file="BacktestingSetupHandler.cs"];
m0_56 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="BacktestingSetupHandler.cs"];
m0_286 [label="Entry QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", span="587-587", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_287 [label="ReferenceEquals(from, to)", span="589-589", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_288 [label="return time;", span="589-589", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_289 [label=strict, span="591-591", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_290 [label="return from.AtStrictly(LocalDateTime.FromDateTime(time)).WithZone(to).ToDateTimeUnspecified();", span="593-593", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_291 [label="return from.AtLeniently(LocalDateTime.FromDateTime(time)).WithZone(to).ToDateTimeUnspecified();", span="596-596", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_292 [label="Exit QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", span="587-587", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", file="BacktestingSetupHandler.cs"];
m0_276 [label="Entry QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="558-558", cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_277 [label="return new DateTime((datetime - DateTime.MinValue).Round(roundingInterval).Ticks);", span="560-560", cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_278 [label="Exit QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="558-558", cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", file="BacktestingSetupHandler.cs"];
m0_504 [label="Entry System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(out T)", span="0-0", cluster="System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(out T)", file="BacktestingSetupHandler.cs"];
m0_240 [label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0", cluster="System.Math.Round(decimal, System.MidpointRounding)", file="BacktestingSetupHandler.cs"];
m0_537 [label="Entry QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", span="1071-1071", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_538 [label="var type = typeof(T)", span="1073-1073", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_542 [label="pyObject == null", span="1082-1082", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_552 [label="locals.SetItem(''pyObject'', pyObject)", span="1096-1096", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_539 [label="!typeof(MulticastDelegate).IsAssignableFrom(type)", span="1075-1075", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_540 [label="throw new ArgumentException($''TryConvertToDelegate cannot be used to convert a PyObject into {type}.'');", span="1077-1077", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_546 [label="var types = type.GetGenericArguments()", span="1089-1089", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_553 [label="var name = type.FullName.Substring(0, type.FullName.IndexOf('`'))", span="1100-1100", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_541 [label="result = default(T)", span="1080-1080", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_543 [label="return true;", span="1084-1084", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_544 [label="var code = string.Empty", span="1087-1087", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_545 [label="var locals = new PyDict()", span="1088-1088", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_549 [label="code += $'',t{i}''", span="1093-1093", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_554 [label="code = $''import System; delegate = {name}[{code.Substring(1)}](pyObject)''", span="1101-1101", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_550 [label="locals.SetItem($''t{i}'', types[i].ToPython())", span="1094-1094", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_555 [label="PythonEngine.Exec(code, null, locals.Handle)", span="1103-1103", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_556 [label="result = (T)locals.GetItem(''delegate'').AsManagedObject(typeof(T))", span="1104-1104", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_547 [label="var i = 0", span="1091-1091", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_548 [label="i < types.Length", span="1091-1091", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_551 [label="i++", span="1091-1091", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_557 [label="return true;", span="1106-1106", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_559 [label="return false;", span="1113-1113", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_558 [label="Exit QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", span="1071-1071", cluster="QuantConnect.Extensions.TryConvertToDelegate<T>(PyObject, out T)", file="BacktestingSetupHandler.cs"];
m0_592 [label=V, span="", file="BacktestingSetupHandler.cs"];
m0_593 [label=TKey, span="", file="BacktestingSetupHandler.cs"];
m0_594 [label="System.Func<TKey, TValue>", span="", file="BacktestingSetupHandler.cs"];
m0_595 [label="System.Func<TKey, TValue, TValue>", span="", file="BacktestingSetupHandler.cs"];
m0_596 [label=TKey, span="", file="BacktestingSetupHandler.cs"];
m0_597 [label="System.Lazy<TValue>", span="", file="BacktestingSetupHandler.cs"];
m0_598 [label=string, span="", file="BacktestingSetupHandler.cs"];
m3_57 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="237-237", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_79 [label="Order queued", span="239-239", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_80 [label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="240-240", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_81 [label="_orders[order.Id] = order", span="242-242", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_82 [label="!_brokerage.CancelOrder(order)", span="244-244", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_83 [label="order.Status = OrderStatus.Invalid", span="247-247", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_84 [label="Log.Error(''BrokerageTransactionHandler.HandleCancelledOrder(): Unable to cancel order with ID '' + order.Id + ''.'')", span="252-252", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_85 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", span="237-237", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleCancelledOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_103 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="277-277", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_51 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", file="BrokerageTransactionHandler.cs"];
m3_100 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="318-318", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="BrokerageTransactionHandler.cs"];
m3_17 [label="Entry lambda expression", span="73-80", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m3_19 [label="Log.Trace(string.Format(''BrokerageTransactionHandler.AccountChanged(): Algo Cash: {0} Brokerage Cash: {1} Delta: {2}'', algorithm.Portfolio.Cash, account.CashBalance, delta))", span="79-79", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m3_14 [label="HandleOrderEvent(fill)", span="69-69", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m3_18 [label="decimal delta = _algorithm.Portfolio.Cash - account.CashBalance", span="78-78", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m3_13 [label="Entry lambda expression", span="67-70", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m3_15 [label="Exit lambda expression", span="67-70", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m3_20 [label="Exit lambda expression", span="73-80", cluster="lambda expression", file="BrokerageTransactionHandler.cs"];
m3_23 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="109-109", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_24 [label="!_exitTriggered", span="111-111", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_25 [label="Order order", span="115-115", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_48 [label="Log.Trace(''BrokerageTransactionHandler.Run(): Ending Thread...'')", span="166-166", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_26 [label="!_orderQueue.TryDequeue(out order)", span="116-116", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_27 [label="_algorithm.ProcessingOrder = false", span="118-118", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_29 [label="_algorithm.ProcessingOrder = true", span="123-123", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_30 [label="order.Direction == OrderDirection.Hold", span="126-126", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_31 [label="Log.Error(''BrokerageTransactionHandler.Run(): Encountered OrderDirection.Hold in OrderID: '' + order.Id)", span="128-128", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_32 [label="!_orders.TryAdd(order.Id, order)", span="131-131", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_33 [label="Log.Error(''BrokerageTransactionHandler.Run(): Unable to add order to permanent storage. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="133-133", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_34 [label="order.Status", span="139-139", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_36 [label="HandleNewOrder(order)", span="142-142", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_38 [label="HandleUpdatedOrder(order)", span="146-146", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_40 [label="HandleCancelledOrder(order)", span="150-150", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_46 [label="Log.Error(''BrokerageTransactionHandler.Run(): Invalid order status found in order queue. OrderID: '' + order.Id + '' Status: '' + order.Status)", span="159-159", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_28 [label="Thread.Sleep(1)", span="119-119", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_35 [label="OrderStatus.New", span="141-141", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_37 [label="OrderStatus.Update", span="145-145", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_39 [label="OrderStatus.Canceled", span="149-149", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_41 [label="OrderStatus.None", span="154-154", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_42 [label="OrderStatus.Invalid", span="155-155", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_43 [label="OrderStatus.PartiallyFilled", span="156-156", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_44 [label="OrderStatus.Filled", span="157-157", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_45 [label="OrderStatus.Submitted", span="158-158", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_47 [label="ProcessSynchronousEvents()", span="163-163", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_49 [label="IsActive = false", span="167-167", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_50 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", span="109-109", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Run()", file="BrokerageTransactionHandler.cs"];
m3_60 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="181-181", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs"];
m3_61 [label="_exitTriggered = true", span="183-183", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs"];
m3_62 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", span="181-181", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.Exit()", file="BrokerageTransactionHandler.cs"];
m3_12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BrokerageTransactionHandler.cs"];
m3_54 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)", file="BrokerageTransactionHandler.cs"];
m3_56 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="215-215", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_70 [label="Order queued", span="217-217", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_71 [label="_orders.TryGetValue(order.Id, out queued) && (queued.Status == OrderStatus.Submitted)", span="218-218", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_72 [label="_orders[order.Id] = order", span="220-220", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_73 [label="!_brokerage.UpdateOrder(order)", span="221-221", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_74 [label="order.Status = OrderStatus.Invalid", span="224-224", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_75 [label="Log.Error(''BrokerageTransactionHandler.HandleUpdatedOrder(): Unable to update order with ID '' + order.Id + ''.'')", span="229-229", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_76 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", span="215-215", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleUpdatedOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_58 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="173-173", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs"];
m3_59 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", span="173-173", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.ProcessSynchronousEvents()", file="BrokerageTransactionHandler.cs"];
m3_69 [label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="67-67", cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_104 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="255-255", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BrokerageTransactionHandler.cs"];
m3_77 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BrokerageTransactionHandler.cs"];
m3_55 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="190-190", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_63 [label="_orders.TryAdd(order.Id, order)", span="193-193", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_64 [label="_brokerage.PlaceOrder(order)", span="196-196", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_65 [label="order.Status = OrderStatus.Submitted", span="198-198", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_66 [label="order.Status = OrderStatus.Invalid", span="202-202", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_67 [label="Log.Error(''BrokerageTransactionHandler.HandleNewOrder(): Unable to add new order, order not processed.'')", span="207-207", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_68 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", span="190-190", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleNewOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_101 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="488-488", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_52 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="BrokerageTransactionHandler.cs"];
m3_102 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", span="213-213", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.OrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_21 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="BrokerageTransactionHandler.cs"];
m3_86 [label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="81-81", cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_22 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BrokerageTransactionHandler.cs"];
m3_16 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="256-256", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_87 [label="var order = _algorithm.Transactions.GetOrderById(fill.OrderId)", span="259-259", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_89 [label="Log.Error(''BrokerageTransactionHandler.HandleOrderEvnt(): Unable to locate Order with id '' + fill.OrderId)", span="262-262", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_91 [label="order.Status = fill.Status", span="267-267", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_92 [label="fill.Status == OrderStatus.Filled || fill.Status == OrderStatus.PartiallyFilled", span="275-275", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_93 [label="_algorithm.Portfolio.ProcessFill(fill)", span="277-277", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_94 [label="fill.Status != OrderStatus.None", span="281-281", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_95 [label="Engine.ResultHandler.OrderEvent(fill)", span="284-284", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_96 [label="_algorithm.OnOrderEvent(fill)", span="288-288", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_88 [label="order == null", span="260-260", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_90 [label="return;", span="263-263", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_97 [label=Exception, span="290-290", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_98 [label="_algorithm.Error(''Order Event Handler Error: '' + err.Message)", span="292-292", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_99 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", span="256-256", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.HandleOrderEvent(QuantConnect.Orders.OrderEvent)", file="BrokerageTransactionHandler.cs"];
m3_78 [label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="74-74", cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BrokerageTransactionHandler.cs"];
m3_0 [label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_1 [label="brokerage == null", span="61-61", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_3 [label="_brokerage = brokerage", span="66-66", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_5 [label="_brokerage.AccountChanged += (sender, account) =>\r\n            {\r\n                //_algorithm.Portfolio.SetCash(account.CashBalance);\r\n\r\n                // how close are we?\r\n                decimal delta = _algorithm.Portfolio.Cash - account.CashBalance;\r\n                Log.Trace(string.Format(''BrokerageTransactionHandler.AccountChanged(): Algo Cash: {0} Brokerage Cash: {1} Delta: {2}'', algorithm.Portfolio.Cash, account.CashBalance, delta));\r\n            }", span="73-80", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_7 [label="_algorithm = algorithm", span="84-84", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_8 [label="_orders = algorithm.Transactions.Orders", span="87-87", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_9 [label="_orderEvents = algorithm.Transactions.OrderEvents", span="88-88", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_10 [label="_orderQueue = algorithm.Transactions.OrderQueue", span="89-89", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_2 [label="throw new ArgumentNullException(''brokerage'');", span="63-63", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_4 [label="_brokerage.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                HandleOrderEvent(fill);\r\n            }", span="67-70", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_6 [label="IsActive = true", span="82-82", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_11 [label="Exit QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", span="59-59", cluster="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler.BrokerageTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage)", file="BrokerageTransactionHandler.cs"];
m3_105 [label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler", span="", file="BrokerageTransactionHandler.cs"];
m3_106 [label="QuantConnect.Interfaces.IAlgorithm", span="", file="BrokerageTransactionHandler.cs"];
m4_55 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Min<TSource, TResult>(System.Func<TSource, TResult>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Min<TSource, TResult>(System.Func<TSource, TResult>)", file="Cash.cs"];
m4_8 [label="Entry string.ToUpper()", span="0-0", cluster="string.ToUpper()", file="Cash.cs"];
m4_20 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Cash.cs"];
m4_54 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Cash.cs"];
m4_21 [label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", span="102-102", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_22 [label="Symbol == CashBook.BaseCurrency", span="104-104", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", color=red, community=0, file="Cash.cs"];
m4_26 [label="subscriptions.Count == 0", span="111-111", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_31 [label="i < subscriptions.Subscriptions.Count", span="119-119", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_32 [label="var config = subscriptions.Subscriptions[i]", span="121-121", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_43 [label="var minimumResolution = subscriptions.Subscriptions.Min(x => x.Resolution)", span="141-141", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_49 [label="_config = subscriptions.Add(objectType, SecurityType.Forex, symbol, minimumResolution, true, false, isTradeBar, isTradeBar, true)", span="150-150", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_50 [label="securities.Add(symbol, _config, 1m, false)", span="151-151", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", color=red, community=0, file="Cash.cs"];
m4_23 [label="_isBaseCurrency = true", span="106-106", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_24 [label="ConversionRate = 1.0m", span="107-107", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_25 [label="return;", span="108-108", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_27 [label="throw new InvalidOperationException(''Unable to add cash when no subscriptions are present. Please add subscriptions in the Initialize() method.'');", span="113-113", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_28 [label="string normal = Symbol + CashBook.BaseCurrency", span="117-117", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", color=red, community=0, file="Cash.cs"];
m4_29 [label="string invert = CashBook.BaseCurrency + Symbol", span="118-118", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", color=red, community=0, file="Cash.cs"];
m4_34 [label="config.Symbol == normal", span="126-126", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_47 [label="symbol == normal || symbol == invert", span="146-146", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_30 [label="int i = 0", span="119-119", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_37 [label="config.Symbol == invert", span="131-131", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_48 [label="_invertRealTimePrice = symbol == invert", span="148-148", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_41 [label="i++", span="119-119", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_42 [label="var currencyPairs = Forex.Forex.CurrencyPairs", span="140-140", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_33 [label="config.Security != SecurityType.Forex", span="122-122", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_35 [label="_config = config", span="128-128", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_38 [label="_config = config", span="133-133", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_36 [label="return;", span="129-129", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_39 [label="_invertRealTimePrice = true", span="134-134", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_40 [label="return;", span="135-135", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_46 [label=currencyPairs, span="144-144", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_44 [label="var objectType = minimumResolution == Resolution.Tick ? typeof (Tick) : typeof (TradeBar)", span="142-142", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_45 [label="var isTradeBar = objectType == typeof (TradeBar)", span="143-143", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_52 [label="throw new ArgumentException(string.Format(''In order to maintain cash in {0} you are required to add a subscription for Forex pair {0}{1} or {1}{0}'', Symbol, CashBook.BaseCurrency));", span="157-157", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", color=red, community=0, file="Cash.cs"];
m4_51 [label="return;", span="152-152", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_53 [label="Exit QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", span="102-102", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityManager)", file="Cash.cs"];
m4_0 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="60-60", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs"];
m4_1 [label="symbol == null || symbol.Length != 3", span="62-62", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs"];
m4_3 [label="Quantity = quantity", span="66-66", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs"];
m4_4 [label="ConversionRate = conversionRate", span="67-67", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs"];
m4_5 [label="Symbol = symbol.ToUpper()", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs"];
m4_2 [label="throw new ArgumentException(''Cash symbols must be exactly 3 characters.'');", span="64-64", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs"];
m4_6 [label="Exit QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="60-60", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="Cash.cs"];
m4_58 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="Cash.cs"];
m4_57 [label="Entry QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="94-94", cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="Cash.cs"];
m4_56 [label="Entry QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool)", span="106-106", cluster="QuantConnect.Data.SubscriptionManager.Add(System.Type, QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool, bool, bool, bool)", file="Cash.cs"];
m4_9 [label="Entry QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="75-75", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_10 [label=_isBaseCurrency, span="78-78", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_13 [label="!data.TryGetValue(_config.SubscriptionIndex, out realTimePrice) || realTimePrice.Count == 0", span="81-81", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_11 [label="return;", span="78-78", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_12 [label="List<BaseData> realTimePrice", span="80-80", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_14 [label="return;", span="84-84", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_15 [label="decimal rate = realTimePrice[realTimePrice.Count - 1].Value", span="87-87", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_16 [label=_invertRealTimePrice, span="88-88", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_17 [label="rate = 1/rate", span="90-90", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_18 [label="ConversionRate = rate", span="93-93", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_19 [label="Exit QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="75-75", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="Cash.cs"];
m4_7 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="Cash.cs"];
m4_59 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="Cash.cs"];
m4_60 [label="x.Resolution", span="141-141", cluster="lambda expression", file="Cash.cs"];
m4_61 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="Cash.cs"];
m4_62 [label="QuantConnect.Securities.Cash", span="", file="Cash.cs"];
m5_347 [label="Entry QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", span="33-33", cluster="QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", file="CashBook.cs"];
m5_264 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", span="402-402", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_265 [label="var securities = new SecurityManager(TimeKeeper)", span="404-404", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_266 [label="var transactions = new SecurityTransactionManager(securities)", span="405-405", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_267 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="406-406", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_269 [label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="409-409", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_270 [label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="410-410", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_274 [label="Assert.AreEqual(0, securities[Symbols.AAPL].Holdings.Quantity)", span="416-416", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_268 [label="portfolio.SetCash(0)", span="407-407", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_272 [label="portfolio.ProcessFill(fill)", span="413-413", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_273 [label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="415-415", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_271 [label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="412-412", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_275 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", span="402-402", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="CashBook.cs"];
m5_348 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="CashBook.cs"];
m5_69 [label="portfolio.SetCash(equity[0])", span="147-147", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_0 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="CashBook.cs"];
m5_1 [label="x.ValueInAccountCurrency", span="42-42", cluster="lambda expression", file="CashBook.cs", color=green, community=0];
m5_2 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="CashBook.cs"];
m5_3 [label="Entry QuantConnect.Securities.CashBook.CashBook()", span="48-48", cluster="QuantConnect.Securities.CashBook.CashBook()", file="CashBook.cs"];
m5_4 [label="_currencies = new Dictionary<string, Cash>()", span="50-50", cluster="QuantConnect.Securities.CashBook.CashBook()", file="CashBook.cs"];
m5_5 [label="_currencies.Add(AccountCurrency, new Cash(AccountCurrency, 0, 1.0m))", span="51-51", cluster="QuantConnect.Securities.CashBook.CashBook()", file="CashBook.cs", color=green, community=0];
m5_15 [label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="73-73", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="CashBook.cs"];
m5_16 [label="var cash = new Cash(symbol, quantity, conversionRate)", span="75-75", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="CashBook.cs"];
m5_13 [label="Exit QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="58-58", cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", color=red, community=0, file="CashBook.cs"];
m5_21 [label="cash.EnsureCurrencyDataFeed(securities, subscriptions)", span="88-88", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="CashBook.cs", color=green, community=0];
m5_6 [label="Exit QuantConnect.Securities.CashBook.CashBook()", span="48-48", cluster="QuantConnect.Securities.CashBook.CashBook()", file="CashBook.cs"];
m5_7 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", color=red, community=0, file="CashBook.cs"];
m5_8 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="60-60", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", color=red, community=0, file="CashBook.cs"];
m5_10 [label="Entry QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="58-58", cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="CashBook.cs"];
m5_11 [label="_currencies.Values", span="60-60", cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="CashBook.cs"];
m5_12 [label="cash.Update(data)", span="62-62", cluster="QuantConnect.Securities.CashBook.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="CashBook.cs"];
m5_9 [label="security.SetLeverage(10m)", span="83-83", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", color=red, community=0, file="CashBook.cs"];
m5_19 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="84-84", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="CashBook.cs"];
m5_20 [label="_currencies.Values", span="86-86", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="CashBook.cs"];
m5_14 [label="Entry QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="75-75", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="CashBook.cs"];
m5_17 [label="_currencies.Add(symbol, cash)", span="76-76", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="CashBook.cs"];
m5_22 [label="Exit QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="84-84", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="CashBook.cs"];
m5_18 [label="Exit QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="73-73", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="CashBook.cs"];
m5_23 [label="Entry QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="102-102", cluster="QuantConnect.Securities.Cash.EnsureCurrencyDataFeed(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="CashBook.cs"];
m5_46 [label="Entry lambda expression", span="60-70", cluster="lambda expression", file="CashBook.cs"];
m5_73 [label="var mchCash = portfolio.CashBook[''MCH'']", span="152-152", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_115 [label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="83-83", cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="CashBook.cs"];
m5_36 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="68-68", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="CashBook.cs"];
m5_37 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49", cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="CashBook.cs"];
m5_38 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="CashBook.cs"];
m5_118 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="CashBook.cs"];
m5_205 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="CashBook.cs"];
m5_27 [label="var conversionRate = source.ConversionRate*destination.ConversionRate", span="103-103", cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="CashBook.cs", color=green, community=0];
m5_189 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", span="523-523", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", file="CashBook.cs"];
m5_30 [label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="55-55", cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="CashBook.cs"];
m5_31 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="301-301", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", color=green, community=0, file="CashBook.cs"];
m5_32 [label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="67-67", cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="CashBook.cs"];
m5_349 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="CashBook.cs"];
m5_35 [label="Exit QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="130-130", cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="CashBook.cs"];
m5_208 [label="Entry Unk.GreaterOrEqual", span="", cluster="Unk.GreaterOrEqual", file="CashBook.cs"];
m5_262 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="467-467", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="CashBook.cs"];
m5_54 [label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="160-160", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="CashBook.cs"];
m5_47 [label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue, \r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0m)", span="60-70", cluster="lambda expression", file="CashBook.cs"];
m5_48 [label="Exit lambda expression", span="60-70", cluster="lambda expression", file="CashBook.cs"];
m5_49 [label="Entry OrderEvent.cstr", span="", cluster="OrderEvent.cstr", file="CashBook.cs"];
m5_111 [label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="CashBook.cs"];
m5_203 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="301-301", cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="CashBook.cs"];
m5_383 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="CashBook.cs"];
m5_113 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="69-69", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="CashBook.cs"];
m5_198 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107", cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="CashBook.cs"];
m5_43 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="CashBook.cs"];
m5_44 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="581-581", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="CashBook.cs"];
m5_45 [label="Entry Unk.ProcessFill", span="", cluster="Unk.ProcessFill", file="CashBook.cs"];
m5_51 [label="return _currencies.ContainsKey(key);", span="157-157", cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="CashBook.cs"];
m5_52 [label="Exit QuantConnect.Securities.CashBook.ContainsKey(string)", span="155-155", cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="CashBook.cs"];
m5_53 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CashBook.cs"];
m5_119 [label="Entry lambda expression", span="115-125", cluster="lambda expression", file="CashBook.cs"];
m5_122 [label="Entry lambda expression", span="129-129", cluster="lambda expression", file="CashBook.cs"];
m5_125 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="CashBook.cs"];
m5_128 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="CashBook.cs"];
m5_120 [label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0)", span="115-125", cluster="lambda expression", file="CashBook.cs"];
m5_121 [label="Exit lambda expression", span="115-125", cluster="lambda expression", file="CashBook.cs"];
m5_123 [label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="129-129", cluster="lambda expression", file="CashBook.cs"];
m5_124 [label="Exit lambda expression", span="129-129", cluster="lambda expression", file="CashBook.cs"];
m5_126 [label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="133-133", cluster="lambda expression", file="CashBook.cs"];
m5_127 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="CashBook.cs"];
m5_129 [label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="137-137", cluster="lambda expression", file="CashBook.cs"];
m5_130 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="CashBook.cs"];
m5_377 [label="x.BrokerId.Contains(brokerageId)", span="546-546", cluster="lambda expression", file="CashBook.cs"];
m5_376 [label="Entry lambda expression", span="546-546", cluster="lambda expression", file="CashBook.cs"];
m5_378 [label="Exit lambda expression", span="546-546", cluster="lambda expression", file="CashBook.cs"];
m5_384 [label="Entry lambda expression", span="551-551", cluster="lambda expression", file="CashBook.cs"];
m5_385 [label=true, span="551-551", cluster="lambda expression", file="CashBook.cs"];
m5_386 [label="Exit lambda expression", span="551-551", cluster="lambda expression", file="CashBook.cs"];
m5_395 [label="Entry lambda expression", span="563-563", cluster="lambda expression", file="CashBook.cs"];
m5_396 [label=true, span="563-563", cluster="lambda expression", file="CashBook.cs"];
m5_397 [label="Exit lambda expression", span="563-563", cluster="lambda expression", file="CashBook.cs"];
m5_42 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="CashBook.cs"];
m5_276 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", span="420-420", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_277 [label="var securities = new SecurityManager(TimeKeeper)", span="422-422", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_278 [label="var transactions = new SecurityTransactionManager(securities)", span="423-423", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_279 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="424-424", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_281 [label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="427-427", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_282 [label="securities[Symbols.AAPL].Holdings.SetHoldings(100, -100)", span="428-428", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_284 [label="Assert.AreEqual(-100, securities[Symbols.AAPL].Holdings.Quantity)", span="431-431", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_287 [label="Assert.AreEqual(-200, securities[Symbols.AAPL].Holdings.Quantity)", span="435-435", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_280 [label="portfolio.SetCash(0)", span="425-425", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_285 [label="portfolio.ProcessFill(fill)", span="432-432", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_286 [label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="434-434", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_283 [label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue,  OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="430-430", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_288 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", span="420-420", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="CashBook.cs"];
m5_70 [label="portfolio.CashBook.Add(''MCH'', mchQuantity[0], 0)", span="148-148", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_71 [label="portfolio.CashBook.Add(''JWB'', jwbQuantity[0], 0)", span="149-149", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_72 [label="var jwbCash = portfolio.CashBook[''JWB'']", span="151-151", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_387 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", span="554-554", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="CashBook.cs"];
m5_388 [label="OrderTicket ticket", span="556-556", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="CashBook.cs"];
m5_389 [label="_tickets.TryGetValue(orderId, out ticket)", span="557-557", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="CashBook.cs"];
m5_390 [label="return ticket;", span="558-558", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="CashBook.cs"];
m5_391 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", span="554-554", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTicket(int)", file="CashBook.cs"];
m5_65 [label="var subscriptions = new SubscriptionManager(TimeKeeper)", span="143-143", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_55 [label="return _currencies.TryGetValue(key, out value);", span="162-162", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="CashBook.cs"];
m5_56 [label="Exit QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="160-160", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="CashBook.cs"];
m5_57 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CashBook.cs"];
m5_60 [label="Exit QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="165-165", cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="CashBook.cs"];
m5_58 [label="Entry QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="165-165", cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="CashBook.cs"];
m5_61 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="CashBook.cs"];
m5_59 [label="return _currencies.Contains(item);", span="167-167", cluster="QuantConnect.Securities.CashBook.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="CashBook.cs"];
m5_62 [label="Entry QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", span="170-170", cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="CashBook.cs"];
m5_63 [label="((IDictionary<string, Cash>) _currencies).CopyTo(array, arrayIndex)", span="172-172", cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="CashBook.cs"];
m5_64 [label="Exit QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", span="170-170", cluster="QuantConnect.Securities.CashBook.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>[], int)", file="CashBook.cs"];
m5_89 [label="i < fills.Count", span="173-173", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_90 [label="var fill = fills[i]", span="176-176", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_104 [label="Assert.AreEqual((double) mchQuantity[i + 1], (double)portfolio.CashBook[''MCH''].Amount)", span="217-217", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_105 [label="Assert.AreEqual((double) jwbQuantity[i + 1], (double)portfolio.CashBook[''JWB''].Amount)", span="218-218", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_66 [label="Entry QuantConnect.Securities.CashBook.GetEnumerator()", span="199-199", cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="CashBook.cs"];
m5_75 [label="var mchJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, jwbCash, subscriptions.Add(MCHJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(jwbCash.Symbol))", span="155-155", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_77 [label="var mchUsdSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, subscriptions.Add(MCHUSD, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(usdCash.Symbol))", span="157-157", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_79 [label="var usdJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, mchCash, subscriptions.Add(USDJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), SymbolProperties.GetDefault(mchCash.Symbol))", span="159-159", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_87 [label="portfolio.CashBook.EnsureCurrencyDataFeeds(securities, subscriptions, MarketHoursDatabase.FromDataFolder(), SymbolPropertiesDatabase.FromDataFolder(), DefaultBrokerageModel.DefaultMarketMap)", span="171-171", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_67 [label="return _currencies.GetEnumerator();", span="201-201", cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="CashBook.cs"];
m5_68 [label="Exit QuantConnect.Securities.CashBook.GetEnumerator()", span="199-199", cluster="QuantConnect.Securities.CashBook.GetEnumerator()", file="CashBook.cs"];
m5_84 [label="securities.Add(mchJwbSecurity)", span="167-167", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_85 [label="securities.Add(usdJwbSecurity)", span="168-168", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_86 [label="securities.Add(mchUsdSecurity)", span="169-169", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_74 [label="QuantConnect.Securities.CashBook", span="", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_102 [label="portfolio.ProcessFill(fill)", span="204-204", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_103 [label="Console.WriteLine(i + 1 + ''   '' + portfolio.TotalPortfolioValue.ToString(''C''))", span="215-215", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_96 [label="jwbCash.Update(new IndicatorDataPoint(MCHJWB, time, mchJwb))", span="188-188", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_98 [label="mchCash.Update(new IndicatorDataPoint(JWBUSD, time, usdJwb))", span="190-190", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_97 [label="usdCash.Update(new IndicatorDataPoint(MCHUSD, time, mchUsd))", span="189-189", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_76 [label="mchJwbSecurity.SetLeverage(10m)", span="156-156", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_81 [label="mchJwbSecurity.TransactionModel = new SecurityTransactionModel()", span="163-163", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_99 [label="var updateData = new Dictionary<Security, BaseData>\r\n                {\r\n                    {mchJwbSecurity, new IndicatorDataPoint(MCHJWB, time, mchJwb)},\r\n                    {mchUsdSecurity, new IndicatorDataPoint(MCHUSD, time, mchUsd)},\r\n                    {usdJwbSecurity, new IndicatorDataPoint(JWBUSD, time, usdJwb)}\r\n                }", span="192-197", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_78 [label="mchUsdSecurity.SetLeverage(10m)", span="158-158", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_82 [label="mchUsdSecurity.TransactionModel = new SecurityTransactionModel()", span="164-164", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_80 [label="usdJwbSecurity.SetLeverage(10m)", span="160-160", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_83 [label="usdJwbSecurity.TransactionModel = new SecurityTransactionModel()", span="165-165", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_88 [label="int i = 0", span="173-173", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_91 [label="var time = DateTime.Today.AddDays(i)", span="177-177", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_92 [label="decimal mchJwb = i + 1", span="181-181", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_93 [label="decimal mchUsd = (i + 1)/(i + 2m)", span="182-182", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_94 [label="decimal usdJwb = i + 2", span="183-183", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_106 [label="i++", span="173-173", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_95 [label="Assert.AreEqual((double)mchJwb, (double)(mchUsd*usdJwb), 1e-10)", span="184-184", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_100 [label=updateData, span="199-199", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_101 [label="kvp.Key.SetMarketPrice(kvp.Value)", span="201-201", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_107 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="105-105", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="CashBook.cs"];
m5_108 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="CashBook.cs"];
m5_39 [label="Entry Unk.SetCash", span="", cluster="Unk.SetCash", file="CashBook.cs"];
m5_40 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="CashBook.cs"];
m5_41 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="485-485", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="CashBook.cs"];
m5_201 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="524-524", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="CashBook.cs"];
m5_361 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="CashBook.cs"];
m5_29 [label="Exit QuantConnect.Securities.CashBook.Convert(decimal, string, string)", span="99-99", cluster="QuantConnect.Securities.CashBook.Convert(decimal, string, string)", file="CashBook.cs"];
m5_24 [label="Entry Unk.Load", span="", cluster="Unk.Load", file="CashBook.cs"];
m5_25 [label="Entry Unk.Descendants", span="", cluster="Unk.Descendants", color=green, community=0, file="CashBook.cs"];
m5_26 [label="Entry Unk.Select", span="", cluster="Unk.Select", color=green, community=0, file="CashBook.cs"];
m5_28 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", color=green, community=0, file="CashBook.cs"];
m5_33 [label="Entry QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", span="130-130", cluster="QuantConnect.Securities.CashBook.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>)", file="CashBook.cs"];
m5_199 [label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194", cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="CashBook.cs"];
m5_197 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="CashBook.cs"];
m5_34 [label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84", cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="CashBook.cs"];
m5_112 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="120-120", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="CashBook.cs"];
m5_360 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="CashBook.cs"];
m5_200 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="532-532", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="CashBook.cs"];
m5_364 [label="_tickets[ticket.OrderId] = ticket", span="534-534", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="CashBook.cs"];
m5_365 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="532-532", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="CashBook.cs"];
m5_372 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="544-544", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="CashBook.cs"];
m5_373 [label="return _orders.Values.FirstOrDefault(x => x.BrokerId.Contains(brokerageId));", span="546-546", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="CashBook.cs"];
m5_374 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="544-544", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="CashBook.cs"];
m5_206 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="536-536", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="CashBook.cs"];
m5_401 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="CashBook.cs"];
m5_398 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", span="566-566", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="CashBook.cs"];
m5_399 [label="throw new NotImplementedException();", span="568-568", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="CashBook.cs"];
m5_400 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", span="566-566", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.Process(QuantConnect.Orders.OrderRequest)", file="CashBook.cs"];
m5_109 [label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", span="36-36", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SymbolProperties)", file="CashBook.cs"];
m5_375 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="CashBook.cs"];
m5_190 [label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="343-343", cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="CashBook.cs"];
m5_379 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="CashBook.cs"];
m5_359 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", span="156-156", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool)", file="CashBook.cs"];
m5_345 [label="Entry QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="188-188", cluster="QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", file="CashBook.cs"];
m5_380 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="549-549", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="CashBook.cs"];
m5_381 [label="return _tickets.Values.Where(filter ?? (x => true));", span="551-551", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="CashBook.cs"];
m5_382 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="549-549", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="CashBook.cs"];
m5_193 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="159-159", cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="CashBook.cs"];
m5_131 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="226-226", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_132 [label="decimal leverage = 1m", span="228-228", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_133 [label="int quantity = (int) (1000*leverage)", span="229-229", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_143 [label="security.SetLeverage(leverage)", span="240-240", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_179 [label="security.SetLeverage(leverage * 2)", span="297-297", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_134 [label="var securities = new SecurityManager(TimeKeeper)", span="230-230", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_139 [label="portfolio.CashBook[''USD''].SetAmount(quantity)", span="235-235", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_147 [label="var order = new MarketOrder(Symbols.AAPL, quantity, time) {Price = buyPrice}", span="246-246", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_148 [label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="247-247", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_156 [label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="257-257", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_157 [label="Assert.AreEqual(quantity, portfolio.TotalPortfolioValue)", span="258-258", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_164 [label="Assert.AreEqual(quantity, portfolio.MarginRemaining)", span="271-271", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_165 [label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="272-272", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_166 [label="Assert.AreEqual(quantity * 2, portfolio.TotalPortfolioValue)", span="273-273", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_173 [label="Assert.AreEqual(-quantity/2m, portfolio.MarginRemaining)", span="286-286", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_174 [label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="287-287", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_175 [label="Assert.AreEqual(quantity/2m, portfolio.TotalPortfolioValue)", span="288-288", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_180 [label="order = new MarketOrder(Symbols.AAPL, quantity, time) { Price = buyPrice }", span="299-299", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_181 [label="fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="300-300", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_135 [label="var transactions = new SecurityTransactionManager(securities)", span="231-231", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_138 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="234-234", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_141 [label="securities.Add(new Security(SecurityExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="238-238", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_142 [label="var security = securities[Symbols.AAPL]", span="239-239", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_136 [label="var orderProcessor = new OrderProcessor()", span="232-232", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_137 [label="transactions.SetOrderProcessor(orderProcessor)", span="233-233", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_159 [label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="262-262", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_168 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, anotherOrder)", span="277-277", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_149 [label="orderProcessor.AddOrder(order)", span="248-248", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_152 [label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="251-251", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_153 [label="Assert.AreEqual(portfolio.CashBook[''USD''].Amount, fill.FillPrice*fill.FillQuantity)", span="252-252", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_154 [label="portfolio.ProcessFill(fill)", span="254-254", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_155 [label="Assert.AreEqual(0, portfolio.MarginRemaining)", span="256-256", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_177 [label="var marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="293-293", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_182 [label="portfolio.ProcessFill(fill)", span="302-302", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_183 [label="Assert.AreEqual(0, portfolio.TotalPortfolioValue)", span="304-304", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_184 [label="marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="306-306", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_187 [label="Assert.GreaterOrEqual(-portfolio.MarginRemaining, security.Price * marginCallOrders[0].Quantity)", span="309-309", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_140 [label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="237-237", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_146 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="244-244", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_150 [label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="249-249", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_163 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, highPrice, highPrice, highPrice, highPrice, 1))", span="269-269", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_172 [label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="284-284", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_186 [label="Assert.AreEqual(-security.Holdings.Quantity, marginCallOrders[0].Quantity)", span="308-308", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_144 [label="var time = DateTime.Now", span="242-242", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_145 [label="decimal buyPrice = 1m", span="243-243", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_158 [label="var newOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) {Price = buyPrice}", span="261-261", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_161 [label="time = time.AddDays(1)", span="267-267", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_162 [label="decimal highPrice = buyPrice * 2", span="268-268", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_171 [label="decimal lowPrice = buyPrice/2", span="283-283", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_151 [label="request.SetOrderId(0)", span="250-250", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_160 [label="Assert.IsFalse(sufficientCapital)", span="263-263", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_167 [label="var anotherOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) { Price = highPrice }", span="276-276", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_170 [label="time = time.AddDays(1)", span="282-282", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_169 [label="Assert.IsTrue(sufficientCapital)", span="278-278", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_176 [label="bool issueMarginCallWarning", span="292-292", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_178 [label="Assert.AreEqual(0, marginCallOrders.Count)", span="294-294", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_185 [label="Assert.AreNotEqual(0, marginCallOrders.Count)", span="307-307", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_188 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="226-226", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="CashBook.cs"];
m5_192 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="509-509", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="CashBook.cs"];
m5_353 [label="type == SecurityType.Equity", span="511-511", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="CashBook.cs"];
m5_354 [label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="512-512", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="CashBook.cs"];
m5_355 [label="type == SecurityType.Forex", span="513-513", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="CashBook.cs"];
m5_356 [label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="514-514", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="CashBook.cs"];
m5_357 [label="throw new NotImplementedException(type.ToString());", span="515-515", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="CashBook.cs"];
m5_358 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="509-509", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="CashBook.cs"];
m5_250 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="121-121", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="CashBook.cs"];
m5_195 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="122-122", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="CashBook.cs"];
m5_308 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="462-462", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_309 [label="var securityExchangeHours = SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="464-464", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_310 [label="var securities = new SecurityManager(TimeKeeper)", span="465-465", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_314 [label="securities.Add(Symbols.AAPL, new QuantConnect.Securities.Equity.Equity(securityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="469-469", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_338 [label="var marketOpen = securityExchangeHours.MarketHours[timeUtc.DayOfWeek].GetMarketOpen(TimeSpan.Zero, false)", span="501-501", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_340 [label="timeUtc = timeUtc.AddDays(1).Date.Add(marketOpen.Value).ConvertToUtc(securityExchangeHours.TimeZone)", span="503-503", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_311 [label="var transactions = new SecurityTransactionManager(securities)", span="466-466", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_312 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="467-467", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_315 [label="var security = securities[Symbols.AAPL]", span="470-470", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_313 [label="portfolio.SetCash(1000)", span="468-468", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_318 [label="Assert.AreEqual(1000, portfolio.Cash)", span="473-473", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_319 [label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="474-474", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_323 [label="portfolio.ProcessFill(fill)", span="480-480", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_325 [label="Assert.AreEqual(-1, portfolio.Cash)", span="482-482", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_326 [label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="483-483", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_330 [label="portfolio.ProcessFill(fill)", span="489-489", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_332 [label="Assert.AreEqual(-2, portfolio.Cash)", span="491-491", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_333 [label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="492-492", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_335 [label="portfolio.ScanForCashSettlement(timeUtc)", span="496-496", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_336 [label="Assert.AreEqual(-2, portfolio.Cash)", span="497-497", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_337 [label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="498-498", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_341 [label="portfolio.ScanForCashSettlement(timeUtc)", span="504-504", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_342 [label="Assert.AreEqual(998, portfolio.Cash)", span="505-505", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_343 [label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="506-506", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_316 [label="security.SettlementModel = new DelayedSettlementModel(3, TimeSpan.FromHours(8))", span="471-471", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_317 [label="Assert.AreEqual(0, security.Holdings.Quantity)", span="472-472", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_321 [label="var orderFee = security.FeeModel.GetOrderFee(security,new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="478-478", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_324 [label="Assert.AreEqual(10, security.Holdings.Quantity)", span="481-481", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_328 [label="orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="487-487", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_331 [label="Assert.AreEqual(0, security.Holdings.Quantity)", span="490-490", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_320 [label="var timeUtc = new DateTime(2015, 10, 26, 15, 30, 0)", span="477-477", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_322 [label="var fill = new OrderEvent(1, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Buy, 100, 10, orderFee)", span="479-479", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_327 [label="timeUtc = timeUtc.AddDays(1)", span="486-486", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_329 [label="fill = new OrderEvent(2, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Sell, 100, -10, orderFee)", span="488-488", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_334 [label="timeUtc = timeUtc.AddDays(2)", span="495-495", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_339 [label="Assert.IsTrue(marketOpen.HasValue)", span="502-502", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_344 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="462-462", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="CashBook.cs"];
m5_117 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="CashBook.cs"];
m5_194 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", span="47-47", cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string)", file="CashBook.cs"];
m5_248 [label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="62-62", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="CashBook.cs"];
m5_392 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="561-561", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBook.cs"];
m5_393 [label="return _orders.Values.Where(filter ?? (x => true));", span="563-563", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBook.cs"];
m5_394 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="561-561", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="CashBook.cs"];
m5_251 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", span="385-385", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_252 [label="var securities = new SecurityManager(TimeKeeper)", span="387-387", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_253 [label="var transactions = new SecurityTransactionManager(securities)", span="388-388", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_254 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="389-389", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_256 [label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="392-392", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_260 [label="Assert.AreEqual(-100, securities[Symbols.AAPL].Holdings.Quantity)", span="398-398", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_255 [label="portfolio.SetCash(0)", span="390-390", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_258 [label="portfolio.ProcessFill(fill)", span="395-395", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_259 [label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="397-397", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_257 [label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="394-394", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_261 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", span="385-385", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="CashBook.cs"];
m5_204 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="CashBook.cs"];
m5_263 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, decimal, decimal, string)", span="101-101", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, decimal, decimal, string)", file="CashBook.cs"];
m5_352 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="CashBook.cs"];
m5_50 [label="Entry QuantConnect.Securities.CashBook.ContainsKey(string)", span="155-155", cluster="QuantConnect.Securities.CashBook.ContainsKey(string)", file="CashBook.cs"];
m5_371 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CashBook.cs"];
m5_191 [label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="CashBook.cs"];
m5_366 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="537-537", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="CashBook.cs"];
m5_367 [label="Order order", span="539-539", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="CashBook.cs"];
m5_368 [label="_orders.TryGetValue(orderId, out order)", span="540-540", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="CashBook.cs"];
m5_369 [label="return order;", span="541-541", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="CashBook.cs"];
m5_370 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="537-537", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="CashBook.cs"];
m5_196 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="527-527", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="CashBook.cs"];
m5_362 [label="_orders[order.Id] = order", span="529-529", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="CashBook.cs"];
m5_363 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="527-527", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="CashBook.cs"];
m5_350 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="713-713", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="CashBook.cs"];
m5_114 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="77-77", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="CashBook.cs"];
m5_110 [label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="37-37", cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="CashBook.cs"];
m5_209 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="313-313", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_210 [label="var securities = new SecurityManager(TimeKeeper)", span="315-315", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_211 [label="var transactions = new SecurityTransactionManager(securities)", span="316-316", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_214 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="319-319", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_223 [label="securities.Add(new Security(SecurityExchangeHours, config1, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="330-330", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_224 [label="securities[Symbols.AAPL].SetLeverage(2m)", span="331-331", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_225 [label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="332-332", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_226 [label="securities[Symbols.AAPL].SetMarketPrice(new TradeBar{Time = time, Value = 100})", span="333-333", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_228 [label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, config2, SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="340-340", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_229 [label="securities[Symbols.EURUSD].SetLeverage(100m)", span="341-341", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_230 [label="securities[Symbols.EURUSD].Holdings.SetHoldings(1.1m, 1000)", span="342-342", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_231 [label="securities[Symbols.EURUSD].SetMarketPrice(new TradeBar { Time = time, Value = 1.1m })", span="343-343", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_233 [label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, gbpCash, config3, SymbolProperties.GetDefault(gbpCash.Symbol)))", span="350-350", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_234 [label="securities[Symbols.EURGBP].SetLeverage(100m)", span="351-351", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_235 [label="securities[Symbols.EURGBP].Holdings.SetHoldings(1m, 1000)", span="352-352", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_236 [label="securities[Symbols.EURGBP].SetMarketPrice(new TradeBar { Time = time, Value = 1m })", span="353-353", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_212 [label="var orderProcessor = new OrderProcessor()", span="317-317", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_213 [label="transactions.SetOrderProcessor(orderProcessor)", span="318-318", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_242 [label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, acceptedOrder)", span="376-376", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_245 [label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, rejectedOrder)", span="380-380", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_238 [label="orderProcessor.AddOrder(acceptedOrder)", span="372-372", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_241 [label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="375-375", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_215 [label="portfolio.CashBook[''USD''].SetAmount(1000)", span="320-320", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_216 [label="portfolio.CashBook.Add(''EUR'',  1000, 1.1m)", span="321-321", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_217 [label="portfolio.CashBook.Add(''GBP'', -1000, 2.0m)", span="322-322", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_218 [label="var eurCash = portfolio.CashBook[''EUR'']", span="324-324", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_219 [label="var gbpCash = portfolio.CashBook[''GBP'']", span="325-325", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_220 [label="var usdCash = portfolio.CashBook[''USD'']", span="326-326", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_221 [label="var time = DateTime.Now", span="328-328", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_222 [label="var config1 = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="329-329", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_227 [label="var config2 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD)", span="339-339", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_232 [label="var config3 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURGBP)", span="349-349", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_237 [label="var acceptedOrder = new MarketOrder(Symbols.AAPL, 101, DateTime.Now) { Price = 100 }", span="371-371", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_239 [label="var request = new SubmitOrderRequest(OrderType.Market, acceptedOrder.SecurityType, acceptedOrder.Symbol, acceptedOrder.Quantity, 0, 0, acceptedOrder.Time, null)", span="373-373", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_240 [label="request.SetOrderId(0)", span="374-374", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_243 [label="Assert.IsTrue(sufficientCapital)", span="377-377", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_244 [label="var rejectedOrder = new MarketOrder(Symbols.AAPL, 102, DateTime.Now) { Price = 100 }", span="379-379", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_246 [label="Assert.IsFalse(sufficientCapital)", span="381-381", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_247 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="313-313", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="CashBook.cs"];
m5_289 [label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="439-439", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_290 [label="var securities = new SecurityManager(TimeKeeper)", span="441-441", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_291 [label="var transactions = new SecurityTransactionManager(securities)", span="442-442", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_292 [label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="443-443", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_295 [label="securities.Add(Symbols.EURUSD, new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, portfolio.CashBook[''USD''], CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD), SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="447-447", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_296 [label="var security = securities[Symbols.EURUSD]", span="448-448", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_293 [label="portfolio.SetCash(1000)", span="444-444", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_294 [label="portfolio.CashBook.Add(''EUR'', 0, 1.1000m)", span="445-445", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_298 [label="Assert.AreEqual(1000, portfolio.Cash)", span="450-450", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_301 [label="portfolio.ProcessFill(fill)", span="454-454", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_303 [label="Assert.AreEqual(998, portfolio.Cash)", span="456-456", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_304 [label="Assert.AreEqual(100, portfolio.CashBook[''EUR''].Amount)", span="457-457", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_305 [label="Assert.AreEqual(888, portfolio.CashBook[''USD''].Amount)", span="458-458", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_297 [label="Assert.AreEqual(0, security.Holdings.Quantity)", span="449-449", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_299 [label="var orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.EURUSD, 100, DateTime.MinValue))", span="452-452", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_302 [label="Assert.AreEqual(100, security.Holdings.Quantity)", span="455-455", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_300 [label="var fill = new OrderEvent(1, Symbols.EURUSD, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 1.1000m, 100, orderFee)", span="453-453", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_306 [label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="439-439", cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="CashBook.cs"];
m5_307 [label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31", cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CashBook.cs"];
m5_202 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="CashBook.cs"];
m5_116 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CashBook.cs"];
m5_207 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="CashBook.cs"];
m5_249 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="343-343", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="CashBook.cs"];
m5_351 [label="Entry QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan, bool)", span="172-172", cluster="QuantConnect.Securities.LocalMarketHours.GetMarketOpen(System.TimeSpan, bool)", file="CashBook.cs"];
m5_346 [label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="64-64", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="CashBook.cs"];
m5_402 [label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", span="", file="CashBook.cs"];
m5_403 [label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", span="", file="CashBook.cs"];
m5_404 [label=string, span="", file="CashBook.cs"];
m6_10 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="CashBookTests.cs"];
m6_19 [label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="72-72", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="CashBookTests.cs"];
m6_11 [label="Entry QuantConnect.Tests.Common.Securities.CashBookTests.ComputesValueInBaseCurrency()", span="36-36", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.ComputesValueInBaseCurrency()", file="CashBookTests.cs"];
m6_12 [label="var book = new CashBook()", span="38-38", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.ComputesValueInBaseCurrency()", file="CashBookTests.cs"];
m6_13 [label="book[''USD''].Quantity = 1000", span="39-39", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.ComputesValueInBaseCurrency()", file="CashBookTests.cs"];
m6_14 [label="book.Add(''JPY'', 1000, 1/100m)", span="40-40", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.ComputesValueInBaseCurrency()", file="CashBookTests.cs"];
m6_15 [label="book.Add(''GBP'', 1000, 2m)", span="41-41", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.ComputesValueInBaseCurrency()", file="CashBookTests.cs"];
m6_16 [label="decimal expected = book[''USD''].ValueInBaseCurrency + book[''JPY''].ValueInBaseCurrency + book[''GBP''].ValueInBaseCurrency", span="43-43", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.ComputesValueInBaseCurrency()", color=red, community=0, file="CashBookTests.cs"];
m6_17 [label="Assert.AreEqual(expected, book.ValueInBaseCurrency)", span="44-44", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.ComputesValueInBaseCurrency()", color=red, community=0, file="CashBookTests.cs"];
m6_18 [label="Exit QuantConnect.Tests.Common.Securities.CashBookTests.ComputesValueInBaseCurrency()", span="36-36", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.ComputesValueInBaseCurrency()", file="CashBookTests.cs"];
m6_9 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="CashBookTests.cs"];
m6_8 [label="Entry QuantConnect.Securities.CashBook.CashBook()", span="47-47", cluster="QuantConnect.Securities.CashBook.CashBook()", file="CashBookTests.cs"];
m6_0 [label="Entry QuantConnect.Tests.Common.Securities.CashBookTests.InitializesWithBaseCurrencyAdded()", span="25-25", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.InitializesWithBaseCurrencyAdded()", file="CashBookTests.cs"];
m6_1 [label="var book = new CashBook()", span="27-27", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.InitializesWithBaseCurrencyAdded()", file="CashBookTests.cs"];
m6_2 [label="Assert.AreEqual(1, book.Count)", span="28-28", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.InitializesWithBaseCurrencyAdded()", file="CashBookTests.cs"];
m6_3 [label="var cash = book.Single().Value", span="29-29", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.InitializesWithBaseCurrencyAdded()", file="CashBookTests.cs"];
m6_4 [label="Assert.AreEqual(CashBook.BaseCurrency, cash.Symbol)", span="30-30", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.InitializesWithBaseCurrencyAdded()", color=red, community=0, file="CashBookTests.cs"];
m6_5 [label="Assert.AreEqual(0, cash.Quantity)", span="31-31", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.InitializesWithBaseCurrencyAdded()", file="CashBookTests.cs"];
m6_6 [label="Assert.AreEqual(1m, cash.ConversionRate)", span="32-32", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.InitializesWithBaseCurrencyAdded()", file="CashBookTests.cs"];
m6_7 [label="Exit QuantConnect.Tests.Common.Securities.CashBookTests.InitializesWithBaseCurrencyAdded()", span="25-25", cluster="QuantConnect.Tests.Common.Securities.CashBookTests.InitializesWithBaseCurrencyAdded()", file="CashBookTests.cs"];
m7_39 [label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager()", span="51-51", cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager()", file="CashTests.cs"];
m7_71 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="CashTests.cs"];
m7_43 [label="Entry QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", span="81-81", cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Securities.Security)", file="CashTests.cs"];
m7_42 [label="Entry QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="94-94", cluster="QuantConnect.Securities.SecurityManager.Add(string, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="CashTests.cs"];
m7_121 [label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", span="154-154", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="CashTests.cs"];
m7_9 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooShort()", span="44-44", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooShort()", file="CashTests.cs"];
m7_10 [label="var cash = new Cash(''s'', 0, 0)", span="46-46", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooShort()", file="CashTests.cs"];
m7_11 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooShort()", span="44-44", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooShort()", file="CashTests.cs"];
m7_102 [label="Entry lambda expression", span="144-144", cluster="lambda expression", file="CashTests.cs"];
m7_45 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="CashTests.cs"];
m7_48 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="CashTests.cs"];
m7_46 [label="x.Symbol == ''USDJPY''", span="82-82", cluster="lambda expression", file="CashTests.cs"];
m7_47 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="CashTests.cs"];
m7_49 [label="x.Symbol == ''USDJPY''", span="83-83", cluster="lambda expression", file="CashTests.cs"];
m7_50 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="CashTests.cs"];
m7_72 [label="Entry lambda expression", span="113-113", cluster="lambda expression", file="CashTests.cs"];
m7_73 [label="x.Symbol == ''USDJPY''", span="113-113", cluster="lambda expression", file="CashTests.cs"];
m7_74 [label="Exit lambda expression", span="113-113", cluster="lambda expression", file="CashTests.cs"];
m7_87 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="CashTests.cs"];
m7_88 [label="x.Symbol == ''USDJPY''", span="128-128", cluster="lambda expression", file="CashTests.cs"];
m7_89 [label="Exit lambda expression", span="128-128", cluster="lambda expression", file="CashTests.cs"];
m7_103 [label="x.Symbol == ''USDJPY''", span="144-144", cluster="lambda expression", file="CashTests.cs"];
m7_104 [label="Exit lambda expression", span="144-144", cluster="lambda expression", file="CashTests.cs"];
m7_0 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", span="29-29", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", file="CashTests.cs"];
m7_1 [label="var cash = new Cash(''low'', 0, 0)", span="31-31", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", file="CashTests.cs"];
m7_2 [label="Assert.AreEqual(''LOW'', cash.Symbol)", span="32-32", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", file="CashTests.cs"];
m7_3 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", span="29-29", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorCapitalizedSymbol()", file="CashTests.cs"];
m7_101 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="CashTests.cs"];
m7_21 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", span="62-62", cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs"];
m7_22 [label="int quantity = 100", span="64-64", cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs"];
m7_23 [label="decimal conversionRate = 1/100m", span="65-65", cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs"];
m7_24 [label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="66-66", cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs"];
m7_25 [label="Assert.AreEqual(quantity*conversionRate, cash.ValueInAccountCurrency)", span="67-67", cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", color=green, community=0, file="CashTests.cs"];
m7_26 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", span="62-62", cluster="QuantConnect.Tests.Common.Securities.CashTests.ComputesValueInBaseCurrency()", file="CashTests.cs"];
m7_122 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CashTests.cs"];
m7_90 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", span="133-133", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs"];
m7_91 [label="int quantity = 100", span="135-135", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs"];
m7_92 [label="decimal conversionRate = 1 / 100m", span="136-136", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs"];
m7_93 [label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="137-137", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs"];
m7_94 [label="var subscriptions = new SubscriptionManager()", span="139-139", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs"];
m7_97 [label="securities.Add(''USDJPY'', new Security(subscriptions.Add(SecurityType.Forex, ''USDJPY'', Resolution.Minute), 1m))", span="141-141", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", color=green, community=0, file="CashTests.cs"];
m7_95 [label="var securities = new SecurityManager()", span="140-140", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs"];
m7_96 [label="securities.Add(''USDJPY'', subscriptions.Add(SecurityType.Forex, ''USDJPY'', Resolution.Minute))", span="141-141", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", color=red, community=0, file="CashTests.cs"];
m7_98 [label="cash.EnsureCurrencyDataFeed(securities, subscriptions)", span="143-143", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs", color=green, community=0];
m7_99 [label="Assert.IsFalse(config.IsInternalFeed)", span="145-145", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs"];
m7_100 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", span="133-133", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedDoesNotMarkIsCurrencyDataFeedForExistantSubscriptions()", file="CashTests.cs"];
m7_86 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="CashTests.cs"];
m7_123 [label="Entry QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", span="75-75", cluster="QuantConnect.Securities.Cash.Update(System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>)", file="CashTests.cs"];
m7_12 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", span="50-50", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs"];
m7_13 [label="string symbol = ''JPY''", span="52-52", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs"];
m7_14 [label="int quantity = 1", span="53-53", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs"];
m7_16 [label="var cash = new Cash(symbol, quantity, conversionRate)", span="55-55", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs"];
m7_17 [label="Assert.AreEqual(symbol, cash.Symbol)", span="56-56", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs"];
m7_15 [label="decimal conversionRate = 1.2m", span="54-54", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs"];
m7_18 [label="Assert.AreEqual(quantity, cash.Quantity)", span="57-57", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs"];
m7_19 [label="Assert.AreEqual(conversionRate, cash.ConversionRate)", span="58-58", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs"];
m7_20 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", span="50-50", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorSetsProperties()", file="CashTests.cs"];
m7_41 [label="Entry QuantConnect.Securities.SecurityManager.SecurityManager()", span="60-60", cluster="QuantConnect.Securities.SecurityManager.SecurityManager()", file="CashTests.cs"];
m7_75 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", span="117-117", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs"];
m7_76 [label="int quantity = 100", span="119-119", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs"];
m7_77 [label="decimal conversionRate = 1 / 100m", span="120-120", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs"];
m7_78 [label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="121-121", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs"];
m7_79 [label="var subscriptions = new SubscriptionManager()", span="123-123", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs"];
m7_82 [label="securities.Add(''ABC'', new Security(subscriptions.Add(SecurityType.Forex, ''ABC'', Resolution.Minute), 1m))", span="125-125", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", color=green, community=0, file="CashTests.cs"];
m7_80 [label="var securities = new SecurityManager()", span="124-124", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs"];
m7_81 [label="securities.Add(''ABC'', subscriptions.Add(SecurityType.Forex, ''ABC'', Resolution.Minute))", span="125-125", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", color=red, community=0, file="CashTests.cs"];
m7_83 [label="cash.EnsureCurrencyDataFeed(securities, subscriptions)", span="127-127", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs", color=green, community=0];
m7_84 [label="Assert.IsTrue(config.IsInternalFeed)", span="129-129", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs"];
m7_85 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", span="117-117", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedMarksIsCurrencyDataFeedForNewSubscriptions()", file="CashTests.cs"];
m7_124 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", span="176-176", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_125 [label="int quantity = 100", span="178-178", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_126 [label="decimal conversionRate = 1 / 100m", span="179-179", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_127 [label="var cash = new Cash(''GBP'', quantity, conversionRate)", span="180-180", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_128 [label="var subscriptions = new SubscriptionManager()", span="182-182", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_131 [label="securities.Add(''GBPUSD'', new Security(subscriptions.Add(SecurityType.Forex, ''GBPUSD'', Resolution.Minute), 1m))", span="184-184", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", color=green, community=0, file="CashTests.cs"];
m7_135 [label="cash.Update(data)", span="196-196", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_136 [label="Assert.AreEqual(last, cash.ConversionRate)", span="199-199", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_129 [label="var securities = new SecurityManager()", span="183-183", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_130 [label="securities.Add(''GBPUSD'', subscriptions.Add(SecurityType.Forex, ''GBPUSD'', Resolution.Minute))", span="184-184", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", color=red, community=0, file="CashTests.cs"];
m7_132 [label="cash.EnsureCurrencyDataFeed(securities, subscriptions)", span="187-187", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs", color=green, community=0];
m7_133 [label="var data = new Dictionary<int, List<BaseData>>()", span="190-190", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_134 [label="data.Add(0, new List<BaseData>\r\n            {\r\n                new Tick(DateTime.Now, ''GBPUSD'', last, last*1.009m, last*0.009m)\r\n            })", span="191-194", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_137 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", span="176-176", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRate()", file="CashTests.cs"];
m7_27 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", span="71-71", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs"];
m7_28 [label="int quantity = 100", span="73-73", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs"];
m7_29 [label="decimal conversionRate = 1 / 100m", span="74-74", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs"];
m7_30 [label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="75-75", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs"];
m7_31 [label="var subscriptions = new SubscriptionManager()", span="77-77", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs"];
m7_35 [label="cash.EnsureCurrencyDataFeed(securities, subscriptions)", span="81-81", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", color=green, community=0, file="CashTests.cs"];
m7_32 [label="var abcConfig = subscriptions.Add(SecurityType.Equity, ''ABC'', Resolution.Minute)", span="78-78", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs"];
m7_36 [label="Assert.AreEqual(1, subscriptions.Subscriptions.Count(x => x.Symbol == ''USDJPY''))", span="82-82", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs"];
m7_33 [label="var securities = new SecurityManager()", span="79-79", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs"];
m7_34 [label="securities.Add(''ABC'', new Security(abcConfig, 1m))", span="80-80", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", color=green, community=0, file="CashTests.cs"];
m7_37 [label="Assert.AreEqual(1, securities.Values.Count(x => x.Symbol == ''USDJPY''))", span="83-83", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs"];
m7_38 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", span="71-71", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscription()", file="CashTests.cs"];
m7_5 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="CashTests.cs"];
m7_6 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooLong()", span="37-37", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooLong()", file="CashTests.cs"];
m7_7 [label="var cash = new Cash(''too long'', 0, 0)", span="39-39", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooLong()", file="CashTests.cs"];
m7_8 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooLong()", span="37-37", cluster="QuantConnect.Tests.Common.Securities.CashTests.ConstructorThrowsOnSymbolTooLong()", file="CashTests.cs"];
m7_51 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscriptionThrowsWhenZeroSubscriptionsPresent()", span="88-88", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscriptionThrowsWhenZeroSubscriptionsPresent()", file="CashTests.cs"];
m7_52 [label="int quantity = 100", span="90-90", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscriptionThrowsWhenZeroSubscriptionsPresent()", file="CashTests.cs"];
m7_53 [label="decimal conversionRate = 1 / 100m", span="91-91", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscriptionThrowsWhenZeroSubscriptionsPresent()", file="CashTests.cs"];
m7_54 [label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="92-92", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscriptionThrowsWhenZeroSubscriptionsPresent()", file="CashTests.cs"];
m7_55 [label="var securities = new SecurityManager()", span="94-94", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscriptionThrowsWhenZeroSubscriptionsPresent()", file="CashTests.cs"];
m7_57 [label="cash.EnsureCurrencyDataFeed(subscriptions, securities)", span="96-96", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscriptionThrowsWhenZeroSubscriptionsPresent()", color=red, community=0, file="CashTests.cs"];
m7_56 [label="var subscriptions = new SubscriptionManager()", span="95-95", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscriptionThrowsWhenZeroSubscriptionsPresent()", file="CashTests.cs"];
m7_58 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscriptionThrowsWhenZeroSubscriptionsPresent()", span="88-88", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedAddsSubscriptionThrowsWhenZeroSubscriptionsPresent()", color=green, community=0, file="CashTests.cs"];
m7_105 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", span="149-149", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_106 [label="int quantity = 100", span="151-151", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_107 [label="decimal conversionRate = 1 / 100m", span="152-152", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_108 [label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="153-153", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_109 [label="var subscriptions = new SubscriptionManager()", span="155-155", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_112 [label="securities.Add(''USDJPY'', new Security(subscriptions.Add(SecurityType.Forex, ''USDJPY'', Resolution.Minute), 1m))", span="157-157", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", color=green, community=0, file="CashTests.cs"];
m7_116 [label="cash.Update(data)", span="169-169", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_117 [label="Assert.AreEqual(1 / last, cash.ConversionRate)", span="172-172", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_110 [label="var securities = new SecurityManager()", span="156-156", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_111 [label="securities.Add(''USDJPY'', subscriptions.Add(SecurityType.Forex, ''USDJPY'', Resolution.Minute))", span="157-157", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", color=red, community=0, file="CashTests.cs"];
m7_113 [label="cash.EnsureCurrencyDataFeed(securities, subscriptions)", span="160-160", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs", color=green, community=0];
m7_114 [label="var data = new Dictionary<int, List<BaseData>>()", span="163-163", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_115 [label="data.Add(0, new List<BaseData>\r\n            {\r\n                new Tick(DateTime.Now, ''USDJPY'', last, 119.95m, 120.05m)\r\n            })", span="164-167", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_118 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", span="149-149", cluster="QuantConnect.Tests.Common.Securities.CashTests.UpdateModifiesConversionRateAsInvertedValue()", file="CashTests.cs"];
m7_59 [label="Entry QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", span="100-100", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs"];
m7_60 [label="int quantity = 100", span="102-102", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs"];
m7_61 [label="decimal conversionRate = 1 / 100m", span="103-103", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs"];
m7_63 [label="var cash = new Cash(''JPY'', quantity, conversionRate)", span="105-105", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs"];
m7_62 [label="Resolution minimumResolution = Resolution.Second", span="104-104", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs"];
m7_67 [label="securities.Add(''ABC'', new Security(subscriptions.Add(SecurityType.Equity, ''ABC'', Resolution.Minute), 1m))", span="109-109", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=0, file="CashTests.cs"];
m7_69 [label="cash.EnsureCurrencyDataFeed(securities, subscriptions)", span="112-112", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs", color=green, community=0];
m7_64 [label="var subscriptions = new SubscriptionManager()", span="107-107", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs"];
m7_68 [label="securities.Add(''BCD'', new Security(subscriptions.Add(SecurityType.Equity, ''BCD'', minimumResolution), 1m))", span="110-110", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=green, community=0, file="CashTests.cs"];
m7_65 [label="var securities = new SecurityManager()", span="108-108", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs"];
m7_66 [label="securities.Add(''ABC'', subscriptions.Add(SecurityType.Equity, ''ABC'', Resolution.Minute))", span="109-109", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", color=red, community=0, file="CashTests.cs"];
m7_70 [label="Exit QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", span="100-100", cluster="QuantConnect.Tests.Common.Securities.CashTests.EnsureCurrencyDataFeedsAddsSubscriptionAtMinimumResolution()", file="CashTests.cs"];
m7_119 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CashTests.cs"];
m7_44 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="CashTests.cs"];
m7_4 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="60-60", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="CashTests.cs"];
m7_40 [label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="82-82", cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="CashTests.cs"];
m9_30 [label="Entry QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", span="38-38", cluster="QuantConnect.Tests.Indicators.TestHelper.GetDataStream(int, System.Func<int, decimal>)", file="ConsoleSetupHandler.cs"];
m9_33 [label="Entry QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", span="200-200", cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="ConsoleSetupHandler.cs"];
m9_15 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="30-30", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", file="ConsoleSetupHandler.cs"];
m9_38 [label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", span="55-55", cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", file="ConsoleSetupHandler.cs"];
m9_21 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ConsoleSetupHandler.cs"];
m9_19 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ConsoleSetupHandler.cs"];
m9_17 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="66-66", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="ConsoleSetupHandler.cs"];
m9_31 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="ConsoleSetupHandler.cs"];
m9_13 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ConsoleSetupHandler.cs"];
m9_32 [label="Entry QuantConnect.Indicators.WindowIndicator<T>.Reset()", span="69-69", cluster="QuantConnect.Indicators.WindowIndicator<T>.Reset()", file="ConsoleSetupHandler.cs"];
m9_18 [label="Entry System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ConsoleSetupHandler.cs"];
m9_0 [label="Entry QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", span="27-27", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_1 [label="var sma = new SimpleMovingAverage(4)", span="29-29", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_2 [label="var data = new[] {1m, 10m, 100m, 1000m, 10000m, 1234m, 56789m}", span="30-30", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_8 [label="sma.Update(new IndicatorDataPoint(DateTime.Now.AddSeconds(i), datum))", span="37-37", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_9 [label="Assert.AreEqual(Enumerable.Reverse(seen).Take(sma.Period).Average(), sma.Current.Value)", span="38-38", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_3 [label="var seen = new List<decimal>()", span="32-32", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_5 [label="i < data.Length", span="33-33", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_6 [label="var datum = data[i]", span="35-35", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_4 [label="int i = 0", span="33-33", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_7 [label="seen.Add(datum)", span="36-36", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_10 [label="i++", span="33-33", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_11 [label="Exit QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", span="27-27", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.SMAComputesCorrectly()", file="ConsoleSetupHandler.cs"];
m9_34 [label="Entry QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", span="59-59", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", file="ConsoleSetupHandler.cs"];
m9_35 [label="var sma = new SimpleMovingAverage(14)", span="61-61", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", file="ConsoleSetupHandler.cs"];
m9_36 [label="TestHelper.TestIndicator(sma, ''SMA14'', 1e-2)", span="62-62", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", file="ConsoleSetupHandler.cs"];
m9_37 [label="Exit QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", span="59-59", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.CompareAgainstExternalData()", file="ConsoleSetupHandler.cs"];
m9_22 [label="Entry QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", span="43-43", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", file="ConsoleSetupHandler.cs"];
m9_23 [label="var sma = new SimpleMovingAverage(3)", span="45-45", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", file="ConsoleSetupHandler.cs"];
m9_24 [label="TestHelper.GetDataStream(4)", span="47-47", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", file="ConsoleSetupHandler.cs"];
m9_25 [label="sma.Update(data)", span="49-49", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", file="ConsoleSetupHandler.cs"];
m9_26 [label="Assert.IsTrue(sma.IsReady)", span="51-51", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", file="ConsoleSetupHandler.cs"];
m9_27 [label="sma.Reset()", span="53-53", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", file="ConsoleSetupHandler.cs"];
m9_28 [label="TestHelper.AssertIndicatorIsInDefaultState(sma)", span="55-55", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", file="ConsoleSetupHandler.cs"];
m9_29 [label="Exit QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", span="43-43", cluster="QuantConnect.Tests.Indicators.SimpleMovingAverageTests.ResetsProperly()", file="ConsoleSetupHandler.cs"];
m9_12 [label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", span="38-38", cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", file="ConsoleSetupHandler.cs"];
m9_16 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="ConsoleSetupHandler.cs"];
m9_20 [label="Entry System.Collections.Generic.IEnumerable<decimal>.Average()", span="0-0", cluster="System.Collections.Generic.IEnumerable<decimal>.Average()", file="ConsoleSetupHandler.cs"];
m10_13 [label="Entry QuantConnect.Securities.Equity.EquityPortfolioModel.EquityPortfolioModel()", span="20-20", cluster="QuantConnect.Securities.Equity.EquityPortfolioModel.EquityPortfolioModel()", file="Equity.cs"];
m10_0 [label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="38-38", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="Equity.cs"];
m10_1 [label="Cache = new EquityCache()", span="42-42", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="Equity.cs"];
m10_2 [label="Exchange = new EquityExchange()", span="43-43", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=red, community=0, file="Equity.cs"];
m10_3 [label="DataFilter = new EquityDataFilter()", span="44-44", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="Equity.cs", color=green, community=0];
m10_4 [label="TransactionModel = new EquityTransactionModel()", span="46-46", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Equity.cs"];
m10_5 [label="PortfolioModel = new EquityPortfolioModel()", span="47-47", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="Equity.cs", color=green, community=0];
m10_9 [label="Entry QuantConnect.Securities.Equity.EquityTransactionModel.EquityTransactionModel()", span="51-51", cluster="QuantConnect.Securities.Equity.EquityTransactionModel.EquityTransactionModel()", file="Equity.cs"];
m10_6 [label="Entry QuantConnect.Securities.Equity.EquityCache.EquityCache()", span="40-40", cluster="QuantConnect.Securities.Equity.EquityCache.EquityCache()", color=green, community=0, file="Equity.cs"];
m10_7 [label="Entry QuantConnect.Securities.Equity.EquityHolding.EquityHolding(string, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", span="43-43", cluster="QuantConnect.Securities.Equity.EquityHolding.EquityHolding(string, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", color=green, community=0, file="Equity.cs"];
m10_8 [label="Entry QuantConnect.Securities.Equity.EquityExchange.EquityExchange()", span="44-44", cluster="QuantConnect.Securities.Equity.EquityExchange.EquityExchange()", file="Equity.cs"];
m10_14 [label="Entry QuantConnect.Securities.Equity.EquityMarginModel.EquityMarginModel(decimal)", span="38-38", cluster="QuantConnect.Securities.Equity.EquityMarginModel.EquityMarginModel(decimal)", file="Equity.cs"];
m10_15 [label="Entry QuantConnect.Securities.Equity.EquityHolding.EquityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", span="42-42", cluster="QuantConnect.Securities.Equity.EquityHolding.EquityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="Equity.cs"];
m10_11 [label="Entry QuantConnect.Securities.Equity.EquityDataFilter.EquityDataFilter()", span="42-42", cluster="QuantConnect.Securities.Equity.EquityDataFilter.EquityDataFilter()", file="Equity.cs"];
m10_10 [label="QuantConnect.Securities.Equity.Equity", span="", file="Equity.cs"];
m11_0 [label="Entry QuantConnect.Securities.Equity.EquityHolding.EquityHolding(string, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", span="43-43", cluster="QuantConnect.Securities.Equity.EquityHolding.EquityHolding(string, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="EquityHolding.cs"];
m11_1 [label="Exit QuantConnect.Securities.Equity.EquityHolding.EquityHolding(string, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", span="43-43", cluster="QuantConnect.Securities.Equity.EquityHolding.EquityHolding(string, decimal, QuantConnect.Securities.Interfaces.ISecurityTransactionModel)", file="EquityHolding.cs"];
m14_2 [label="Entry QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", span="75-75", cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", file="FakeTradeBarCustom.cs"];
m14_3 [label="SolutionExplorerMenuCommand.Initialize(this)", span="77-77", cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", color=red, community=0, file="FakeTradeBarCustom.cs"];
m14_4 [label="base.Initialize()", span="78-78", cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", color=red, community=0, file="FakeTradeBarCustom.cs"];
m14_5 [label="QuantConnect.VisualStudioPlugin.ToolMenuCommand.Initialize(this)", span="79-79", cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", color=red, community=0, file="FakeTradeBarCustom.cs"];
m14_6 [label="Exit QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", span="75-75", cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", file="FakeTradeBarCustom.cs"];
m14_0 [label="Entry QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", span="61-61", cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", file="FakeTradeBarCustom.cs"];
m14_1 [label="Exit QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", span="61-61", cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", file="FakeTradeBarCustom.cs"];
m14_7 [label="Entry Unk.Initialize", span="", cluster="Unk.Initialize", file="FakeTradeBarCustom.cs"];
m14_8 [label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", span="", file="FakeTradeBarCustom.cs"];
m15_19 [label="Entry QuantConnect.Securities.Forex.ForexMarginModel.ForexMarginModel(decimal)", span="43-43", cluster="QuantConnect.Securities.Forex.ForexMarginModel.ForexMarginModel(decimal)", file="Forex.cs"];
m15_17 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.ForexTransactionModel()", span="51-51", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.ForexTransactionModel()", file="Forex.cs"];
m15_0 [label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="44-44", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="Forex.cs"];
m15_1 [label="QuoteCurrency = quoteCurrency", span="47-47", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_2 [label="Cache = new ForexCache()", span="49-49", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="Forex.cs"];
m15_7 [label="MarginModel = new ForexMarginModel(leverage)", span="54-54", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_6 [label="PortfolioModel = new ForexPortfolioModel()", span="53-53", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_8 [label="Holdings = new ForexHolding(this, TransactionModel, MarginModel)", span="55-55", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_10 [label="DecomposeCurrencyPair(config.Symbol, out baseCurrencySymbol, out quoteCurrencySymbol)", span="59-59", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_9 [label="string baseCurrencySymbol, quoteCurrencySymbol", span="58-58", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_11 [label="BaseCurrencySymbol = baseCurrencySymbol", span="60-60", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_12 [label="QuoteCurrencySymbol = quoteCurrencySymbol", span="61-61", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_3 [label="Exchange = new ForexExchange()", span="50-50", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_4 [label="DataFilter = new ForexDataFilter()", span="51-51", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_5 [label="TransactionModel = new ForexTransactionModel()", span="52-52", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", color=green, community=0, file="Forex.cs"];
m15_13 [label="Exit QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", span="44-44", cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="Forex.cs"];
m15_21 [label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="102-102", cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Forex.cs"];
m15_22 [label="currencyPair == null || currencyPair.Length != 6", span="104-104", cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", color=green, community=0, file="Forex.cs"];
m15_23 [label="throw new ArgumentException(''Currency pairs must be exactly 6 characters: '' + currencyPair);", span="106-106", cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", color=green, community=0, file="Forex.cs"];
m15_24 [label="baseCurrency = currencyPair.Substring(0, 3)", span="108-108", cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", color=green, community=0, file="Forex.cs"];
m15_25 [label="quoteCurrency = currencyPair.Substring(3)", span="109-109", cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", color=green, community=0, file="Forex.cs"];
m15_26 [label="Exit QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="102-102", cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="Forex.cs"];
m15_29 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="Forex.cs"];
m15_16 [label="Entry QuantConnect.Securities.Forex.ForexDataFilter.ForexDataFilter()", span="42-42", cluster="QuantConnect.Securities.Forex.ForexDataFilter.ForexDataFilter()", file="Forex.cs"];
m15_18 [label="Entry QuantConnect.Securities.Forex.ForexPortfolioModel.ForexPortfolioModel()", span="24-24", cluster="QuantConnect.Securities.Forex.ForexPortfolioModel.ForexPortfolioModel()", file="Forex.cs"];
m15_14 [label="Entry QuantConnect.Securities.Forex.ForexCache.ForexCache()", span="40-40", cluster="QuantConnect.Securities.Forex.ForexCache.ForexCache()", file="Forex.cs"];
m15_20 [label="Entry QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", span="48-48", cluster="QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="Forex.cs"];
m15_15 [label="Entry QuantConnect.Securities.Forex.ForexExchange.ForexExchange()", span="44-44", cluster="QuantConnect.Securities.Forex.ForexExchange.ForexExchange()", file="Forex.cs"];
m15_27 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="Forex.cs"];
m15_28 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="Forex.cs"];
m15_30 [label="QuantConnect.Securities.Forex.Forex", span="", file="Forex.cs"];
m16_0 [label="Entry QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", span="48-48", cluster="QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="ForexHolding.cs"];
m16_1 [label="_forex = security", span="51-51", cluster="QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="ForexHolding.cs", color=green, community=0];
m16_2 [label="Exit QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", span="48-48", cluster="QuantConnect.Securities.Forex.ForexHolding.ForexHolding(QuantConnect.Securities.Forex.Forex, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="ForexHolding.cs"];
m16_3 [label="Entry QuantConnect.Securities.Forex.ForexHolding.TotalCloseProfit()", span="84-84", cluster="QuantConnect.Securities.Forex.ForexHolding.TotalCloseProfit()", file="ForexHolding.cs"];
m16_4 [label="AbsoluteQuantity == 0", span="86-86", cluster="QuantConnect.Securities.Forex.ForexHolding.TotalCloseProfit()", color=green, community=0, file="ForexHolding.cs"];
m16_5 [label="return 0;", span="88-88", cluster="QuantConnect.Securities.Forex.ForexHolding.TotalCloseProfit()", color=green, community=0, file="ForexHolding.cs"];
m16_6 [label="decimal orderFee = 0", span="91-91", cluster="QuantConnect.Securities.Forex.ForexHolding.TotalCloseProfit()", color=green, community=0, file="ForexHolding.cs"];
m16_7 [label="AbsoluteQuantity > 0", span="93-93", cluster="QuantConnect.Securities.Forex.ForexHolding.TotalCloseProfit()", color=green, community=0, file="ForexHolding.cs"];
m16_9 [label="return (Price - AveragePrice)*Quantity*_forex.QuoteCurrency.ConversionRate - orderFee;", span="100-100", cluster="QuantConnect.Securities.Forex.ForexHolding.TotalCloseProfit()", color=green, community=0, file="ForexHolding.cs"];
m16_8 [label="orderFee = TransactionModel.GetOrderFee(AbsoluteQuantity, Price)", span="96-96", cluster="QuantConnect.Securities.Forex.ForexHolding.TotalCloseProfit()", color=green, community=0, file="ForexHolding.cs"];
m16_10 [label="Exit QuantConnect.Securities.Forex.ForexHolding.TotalCloseProfit()", span="84-84", cluster="QuantConnect.Securities.Forex.ForexHolding.TotalCloseProfit()", file="ForexHolding.cs"];
m16_11 [label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", span="84-84", cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", file="ForexHolding.cs"];
m16_12 [label="QuantConnect.Securities.Forex.ForexHolding", span="", file="ForexHolding.cs"];
m17_32 [label="Entry Unk.ExecuteOnProject", span="", cluster="Unk.ExecuteOnProject", file="ForexMarginModel.cs"];
m17_39 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)", file="ForexMarginModel.cs"];
m17_18 [label="Entry System.ComponentModel.Design.CommandID.CommandID(System.Guid, int)", span="0-0", cluster="System.ComponentModel.Design.CommandID.CommandID(System.Guid, int)", file="ForexMarginModel.cs"];
m17_98 [label="Entry Unk.Item", span="", cluster="Unk.Item", file="ForexMarginModel.cs"];
m17_38 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="ForexMarginModel.cs"];
m17_29 [label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SendForBacktestingCallback(object, System.EventArgs)", span="117-117", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SendForBacktestingCallback(object, System.EventArgs)", file="ForexMarginModel.cs"];
m17_30 [label="ExecuteOnProject(sender, (selectedProjectName, files) =>\r\n            {\r\n                var message = string.Format(CultureInfo.CurrentCulture, ''Send for backtesting to project {0}, files: {1}'', selectedProjectName, string.Join('' '', files));\r\n                var title = ''SendToBacktesting'';\r\n\r\n                // Show a message box to prove we were here\r\n                VsShellUtilities.ShowMessageBox(\r\n                    this.ServiceProvider,\r\n                    message,\r\n                    title,\r\n                    OLEMSGICON.OLEMSGICON_INFO,\r\n                    OLEMSGBUTTON.OLEMSGBUTTON_OK,\r\n                    OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST);\r\n            })", span="119-132", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SendForBacktestingCallback(object, System.EventArgs)", file="ForexMarginModel.cs"];
m17_31 [label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SendForBacktestingCallback(object, System.EventArgs)", span="117-117", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SendForBacktestingCallback(object, System.EventArgs)", file="ForexMarginModel.cs"];
m17_75 [label="Entry Unk.ShowModal", span="", cluster="Unk.ShowModal", file="ForexMarginModel.cs"];
m17_78 [label="Entry QuantConnect.VisualStudioPlugin.ProjectFinder.AssociateProjectWith(string, System.Collections.Generic.List<string>)", span="99-99", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.AssociateProjectWith(string, System.Collections.Generic.List<string>)", file="ForexMarginModel.cs"];
m17_83 [label="Entry lambda expression", span="162-162", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_36 [label="VsShellUtilities.ShowMessageBox(\r\n                    this.ServiceProvider,\r\n                    message,\r\n                    title,\r\n                    OLEMSGICON.OLEMSGICON_INFO,\r\n                    OLEMSGBUTTON.OLEMSGBUTTON_OK,\r\n                    OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST)", span="125-131", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_47 [label="VsShellUtilities.ShowMessageBox(\r\n                    this.ServiceProvider,\r\n                    message,\r\n                    title,\r\n                    OLEMSGICON.OLEMSGICON_INFO,\r\n                    OLEMSGBUTTON.OLEMSGBUTTON_OK,\r\n                    OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST)", span="143-149", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_33 [label="Entry lambda expression", span="119-132", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_34 [label="var message = string.Format(CultureInfo.CurrentCulture, ''Send for backtesting to project {0}, files: {1}'', selectedProjectName, string.Join('' '', files))", span="121-121", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_35 [label="var title = ''SendToBacktesting''", span="122-122", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_37 [label="Exit lambda expression", span="119-132", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_44 [label="Entry lambda expression", span="137-150", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_45 [label="var message = string.Format(CultureInfo.CurrentCulture, ''Save to project {0}, files {1}'', selectedProjectName, string.Join('' '', files))", span="139-139", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_46 [label="var title = ''SaveToQuantConnect''", span="140-140", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_48 [label="Exit lambda expression", span="137-150", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_80 [label="Entry lambda expression", span="159-159", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_82 [label="Exit lambda expression", span="159-159", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_81 [label="p.Name", span="159-159", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_84 [label="tuple.Item1", span="162-162", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_85 [label="Exit lambda expression", span="162-162", cluster="lambda expression", file="ForexMarginModel.cs"];
m17_73 [label="Entry Unk.ProjectNameForFiles", span="", cluster="Unk.ProjectNameForFiles", file="ForexMarginModel.cs"];
m17_74 [label="Entry ProjectNameDialog.cstr", span="", cluster="ProjectNameDialog.cstr", file="ForexMarginModel.cs"];
m17_77 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectName()", span="45-45", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectName()", file="ForexMarginModel.cs"];
m17_13 [label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", span="81-81", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", file="ForexMarginModel.cs"];
m17_22 [label="var menuCommandID = new CommandID(CommandSet, SaveToQuantConnectCommandId)", span="83-83", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", color=green, community=0, file="ForexMarginModel.cs"];
m17_23 [label="var oleMenuItem = new OleMenuCommand(new EventHandler(SaveToQuantConnectCallback), menuCommandID)", span="84-84", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", color=green, community=0, file="ForexMarginModel.cs"];
m17_24 [label="commandService.AddCommand(oleMenuItem)", span="85-85", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", color=green, community=0, file="ForexMarginModel.cs"];
m17_25 [label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", span="81-81", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", file="ForexMarginModel.cs"];
m17_68 [label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", span="46-46", cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="ForexMarginModel.cs"];
m17_99 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="ForexMarginModel.cs"];
m17_72 [label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", span="179-179", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_88 [label="var selectedItems = (object[])dte2.ToolWindows.SolutionExplorer.SelectedItems", span="184-184", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_87 [label="var selectedFiles = new List<Tuple<string, string>>()", span="183-183", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_89 [label=selectedItems, span="185-185", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_86 [label="var myCommand = sender as OleMenuCommand", span="181-181", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_94 [label="selectedFiles.Add(fileAndItsPath)", span="192-192", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_95 [label="return selectedFiles;", span="195-195", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_90 [label="selectedUIHierarchyItem.Object is EnvDTE.ProjectItem", span="187-187", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_91 [label="var item = selectedUIHierarchyItem.Object as EnvDTE.ProjectItem", span="189-189", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_93 [label="var fileAndItsPath = new Tuple<string, string>(item.Name, filePath)", span="191-191", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_92 [label="var filePath = item.Properties.Item(''FullPath'').Value.ToString()", span="190-190", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_96 [label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", span="179-179", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="ForexMarginModel.cs"];
m17_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ForexMarginModel.cs"];
m17_71 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="ForexMarginModel.cs"];
m17_79 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ForexMarginModel.cs"];
m17_11 [label="Entry System.IServiceProvider.GetService(System.Type)", span="0-0", cluster="System.IServiceProvider.GetService(System.Type)", file="ForexMarginModel.cs"];
m17_12 [label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", span="74-74", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", file="ForexMarginModel.cs"];
m17_14 [label="var menuCommandID = new CommandID(CommandSet, SendForBacktestingCommandId)", span="76-76", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", color=green, community=0, file="ForexMarginModel.cs"];
m17_15 [label="var oleMenuItem = new OleMenuCommand(new EventHandler(SendForBacktestingCallback), menuCommandID)", span="77-77", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", color=green, community=0, file="ForexMarginModel.cs"];
m17_16 [label="commandService.AddCommand(oleMenuItem)", span="78-78", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", color=green, community=0, file="ForexMarginModel.cs"];
m17_17 [label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", span="74-74", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", file="ForexMarginModel.cs"];
m17_67 [label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", span="36-36", cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", file="ForexMarginModel.cs"];
m17_100 [label="Entry Tuple<string, string>.cstr", span="", cluster="Tuple<string, string>.cstr", file="ForexMarginModel.cs"];
m17_76 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameProvided()", span="40-40", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameProvided()", file="ForexMarginModel.cs"];
m17_0 [label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", span="55-55", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="ForexMarginModel.cs"];
m17_1 [label="package == null", span="57-57", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="ForexMarginModel.cs"];
m17_2 [label="throw new ArgumentNullException(''package'');", span="59-59", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="ForexMarginModel.cs"];
m17_3 [label="this.package = package", span="63-63", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="ForexMarginModel.cs"];
m17_4 [label="this.dte2 = ServiceProvider.GetService(typeof(SDTE)) as DTE2", span="64-64", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="ForexMarginModel.cs"];
m17_5 [label="var commandService = this.ServiceProvider.GetService(typeof(IMenuCommandService)) as OleMenuCommandService", span="66-66", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="ForexMarginModel.cs"];
m17_6 [label="commandService != null", span="67-67", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="ForexMarginModel.cs"];
m17_7 [label="RegisterSendForBacktesting(commandService)", span="69-69", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="ForexMarginModel.cs"];
m17_8 [label="RegisterSaveToQuantConnect(commandService)", span="70-70", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="ForexMarginModel.cs"];
m17_9 [label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", span="55-55", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="ForexMarginModel.cs"];
m17_40 [label="Entry Unk.ShowMessageBox", span="", cluster="Unk.ShowMessageBox", file="ForexMarginModel.cs"];
m17_41 [label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", span="135-135", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", file="ForexMarginModel.cs"];
m17_42 [label="ExecuteOnProject(sender, (selectedProjectName, files) =>\r\n            {\r\n                var message = string.Format(CultureInfo.CurrentCulture, ''Save to project {0}, files {1}'', selectedProjectName, string.Join('' '', files));\r\n                var title = ''SaveToQuantConnect'';\r\n\r\n                // Show a message box to prove we were here\r\n                VsShellUtilities.ShowMessageBox(\r\n                    this.ServiceProvider,\r\n                    message,\r\n                    title,\r\n                    OLEMSGICON.OLEMSGICON_INFO,\r\n                    OLEMSGBUTTON.OLEMSGBUTTON_OK,\r\n                    OLEMSGDEFBUTTON.OLEMSGDEFBUTTON_FIRST);\r\n            })", span="137-150", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", file="ForexMarginModel.cs"];
m17_43 [label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", span="135-135", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", file="ForexMarginModel.cs"];
m17_66 [label="Entry QuantConnect.VisualStudioPlugin.LogInCommand.DoLogIn(System.IServiceProvider)", span="32-32", cluster="QuantConnect.VisualStudioPlugin.LogInCommand.DoLogIn(System.IServiceProvider)", file="ForexMarginModel.cs"];
m17_26 [label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", span="112-112", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", file="ForexMarginModel.cs"];
m17_27 [label="Instance = new SolutionExplorerMenuCommand(package)", span="114-114", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", file="ForexMarginModel.cs"];
m17_28 [label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", span="112-112", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", file="ForexMarginModel.cs"];
m17_69 [label="Entry QuantConnect.Api.Api.ListProjects()", span="120-120", cluster="QuantConnect.Api.Api.ListProjects()", file="ForexMarginModel.cs"];
m17_101 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ForexMarginModel.cs"];
m17_21 [label="Entry Unk.AddCommand", span="", cluster="Unk.AddCommand", file="ForexMarginModel.cs"];
m17_70 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ForexMarginModel.cs"];
m17_20 [label="Entry EventHandler.cstr", span="", cluster="EventHandler.cstr", file="ForexMarginModel.cs"];
m17_19 [label="Entry OleMenuCommand.cstr", span="", cluster="OleMenuCommand.cstr", file="ForexMarginModel.cs"];
m17_49 [label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", span="153-153", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_50 [label="LogInCommand.DoLogIn(this.ServiceProvider)", span="155-155", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_54 [label="var files = GetSelectedFiles(sender)", span="161-161", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_56 [label="var suggestedProjectName = _projectFinder.ProjectNameForFiles(fileNames)", span="163-163", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_63 [label="_projectFinder.AssociateProjectWith(selectedProjectName, files)", span="172-172", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_51 [label="var api = AuthorizationManager.GetInstance().GetApi()", span="157-157", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_53 [label="var projectNames = projects.Select(p => p.Name).ToList()", span="159-159", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_55 [label="var fileNames = files.Select(tuple => tuple.Item1).ToList()", span="162-162", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_64 [label="onProject.Invoke(selectedProjectName, files)", span="174-174", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_57 [label="var projectNameDialog = new ProjectNameDialog(projectNames, suggestedProjectName)", span="164-164", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_62 [label="var selectedProjectName = projectNameDialog.GetSelectedProjectName()", span="171-171", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_52 [label="var projects = api.ListProjects().Projects", span="158-158", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_61 [label="projectNameDialog.ProjectNameProvided()", span="169-169", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_58 [label="projectNameDialog.HasMinimizeButton = false", span="165-165", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_59 [label="projectNameDialog.HasMaximizeButton = false", span="166-166", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_60 [label="projectNameDialog.ShowModal()", span="167-167", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_65 [label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", span="153-153", cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<string, System.Collections.Generic.List<string>>)", file="ForexMarginModel.cs"];
m17_102 [label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", span="", file="ForexMarginModel.cs"];
m19_3 [label="Entry object.MemberwiseClone()", span="0-0", cluster="object.MemberwiseClone()", file="ForexTests.cs"];
m19_0 [label="Entry QuantConnect.Orders.InteractiveBrokersOrderProperties.Clone()", span="53-53", cluster="QuantConnect.Orders.InteractiveBrokersOrderProperties.Clone()", file="ForexTests.cs"];
m19_1 [label="return (InteractiveBrokersOrderProperties)MemberwiseClone();", span="55-55", cluster="QuantConnect.Orders.InteractiveBrokersOrderProperties.Clone()", color=green, community=0, file="ForexTests.cs"];
m19_2 [label="Exit QuantConnect.Orders.InteractiveBrokersOrderProperties.Clone()", span="53-53", cluster="QuantConnect.Orders.InteractiveBrokersOrderProperties.Clone()", file="ForexTests.cs"];
m19_4 [label="QuantConnect.Orders.InteractiveBrokersOrderProperties", span="", file="ForexTests.cs"];
m20_44 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="ISecurityMarginModel.cs"];
m20_8 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionCount(QuantConnect.Resolution)", span="57-57", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionCount(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_9 [label="return (from subscription in _subscriptionsProvider()\r\n                    let security = subscription.Security\r\n                    where security.Resolution == resolution\r\n                    // don't count feeds we auto add\r\n                    where !security.SubscriptionDataConfig.IsInternalFeed\r\n                    select security.Resolution).Count();", span="59-64", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionCount(QuantConnect.Resolution)", color=green, community=0, file="ISecurityMarginModel.cs"];
m20_10 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionCount(QuantConnect.Resolution)", span="57-57", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionCount(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_31 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetMaxRamReason(decimal)", span="162-162", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetMaxRamReason(decimal)", file="ISecurityMarginModel.cs"];
m20_52 [label="return string.Format(''We estimate you will run out of memory ({0}mb of {1}mb physically available). '' +\r\n                ''Please reduce the number of symbols you're analysing or if in live trading upgrade your server to allow more memory.'',\r\n                currentEstimatedRam, _maxRamEstimate\r\n                );", span="164-167", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetMaxRamReason(decimal)", file="ISecurityMarginModel.cs"];
m20_53 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetMaxRamReason(decimal)", span="162-162", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetMaxRamReason(decimal)", file="ISecurityMarginModel.cs"];
m20_30 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetCountLimitReason(QuantConnect.Resolution)", span="154-154", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetCountLimitReason(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_47 [label="return string.Format(''We currently only support {0} {1} at a time due to physical memory limitations'', _tickLimit, resolution.ToString().ToLower());", span="156-156", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetCountLimitReason(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_48 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetCountLimitReason(QuantConnect.Resolution)", span="154-154", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetCountLimitReason(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_49 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="ISecurityMarginModel.cs"];
m20_51 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ISecurityMarginModel.cs"];
m20_7 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetRamEstimate(int, int, int)", span="146-146", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetRamEstimate(int, int, int)", file="ISecurityMarginModel.cs"];
m20_45 [label="return MinuteMemory * minute + SecondMemory * second + TickMemory * tick;", span="148-148", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetRamEstimate(int, int, int)", file="ISecurityMarginModel.cs"];
m20_46 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetRamEstimate(int, int, int)", span="146-146", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetRamEstimate(int, int, int)", file="ISecurityMarginModel.cs"];
m20_16 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", span="120-120", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_34 [label="return _tickLimit;", span="125-125", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_36 [label="return _secondLimit;", span="128-128", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_38 [label="return _minuteLimit;", span="131-131", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_32 [label=resolution, span="122-122", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_42 [label="throw new ArgumentOutOfRangeException(''resolution'', resolution, null);", span="138-138", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_33 [label="Resolution.Tick", span="124-124", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_35 [label="Resolution.Second", span="127-127", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_37 [label="Resolution.Minute", span="130-130", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_41 [label="return int.MaxValue;", span="135-135", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_39 [label="Resolution.Hour", span="133-133", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_40 [label="Resolution.Daily", span="134-134", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_43 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", span="120-120", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetResolutionLimit(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", span="43-43", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", file="ISecurityMarginModel.cs"];
m20_1 [label="_subscriptionsProvider = subscriptionsProvider", span="45-45", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", color=green, community=0, file="ISecurityMarginModel.cs"];
m20_2 [label="_tickLimit = tickLimit", span="46-46", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", color=green, community=0, file="ISecurityMarginModel.cs"];
m20_3 [label="_secondLimit = secondLimit", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", color=green, community=0, file="ISecurityMarginModel.cs"];
m20_4 [label="_minuteLimit = minuteLimit", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", color=green, community=0, file="ISecurityMarginModel.cs"];
m20_5 [label="_maxRamEstimate = GetRamEstimate(minuteLimit, secondLimit, tickLimit)", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", color=green, community=0, file="ISecurityMarginModel.cs"];
m20_6 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", span="43-43", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", file="ISecurityMarginModel.cs"];
m20_13 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetRemaining(QuantConnect.Resolution)", span="72-72", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetRemaining(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_14 [label="return GetResolutionLimit(resolution) - GetResolutionCount(resolution);", span="74-74", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetRemaining(QuantConnect.Resolution)", color=green, community=0, file="ISecurityMarginModel.cs"];
m20_15 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetRemaining(QuantConnect.Resolution)", span="72-72", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.GetRemaining(QuantConnect.Resolution)", file="ISecurityMarginModel.cs"];
m20_50 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="ISecurityMarginModel.cs"];
m20_11 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="ISecurityMarginModel.cs"];
m20_17 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", span="84-84", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_19 [label="var limit = GetResolutionLimit(resolution)", span="87-87", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_20 [label="var count = GetResolutionCount(resolution) + 1", span="90-90", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_22 [label="reason = GetCountLimitReason(resolution)", span="95-95", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_24 [label="var ramEstimate = GetRamEstimate(\r\n                GetResolutionCount(Resolution.Minute), \r\n                GetResolutionCount(Resolution.Second), \r\n                GetResolutionCount(Resolution.Tick)\r\n                )", span="100-104", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_25 [label="ramEstimate > _maxRamEstimate", span="107-107", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_26 [label="reason = GetMaxRamReason(ramEstimate)", span="109-109", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_18 [label="reason = null", span="86-86", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_21 [label="count >= limit", span="93-93", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_23 [label="return false;", span="96-96", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_28 [label="return true;", span="112-112", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_27 [label="return false;", span="110-110", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_29 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", span="84-84", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="ISecurityMarginModel.cs"];
m20_12 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="ISecurityMarginModel.cs"];
m20_54 [label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter", span="", file="ISecurityMarginModel.cs"];
m22_3 [label="Entry QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", span="35-35", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", file="MarginCallModel.cs"];
m22_4 [label="var executedOrders = new List<Order>()", span="38-38", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs"];
m22_5 [label="var ordersWithSecurities = generatedMarginCallOrders.ToDictionary(x => x, x => Portfolio[x.Symbol])", span="39-39", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs"];
m22_10 [label="executedOrders.Add(order)", span="45-45", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs"];
m22_12 [label="return executedOrders;", span="53-53", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs"];
m22_6 [label="var orderedByLosers = ordersWithSecurities.OrderBy(x => x.Value.UnrealizedProfit).Select(x => x.Key)", span="40-40", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs"];
m22_7 [label=orderedByLosers, span="41-41", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs"];
m22_9 [label="Portfolio.Transactions.WaitForOrder(order.Id)", span="44-44", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs"];
m22_11 [label="Portfolio.MarginRemaining >= 0", span="48-48", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs"];
m22_8 [label="Portfolio.Transactions.AddOrder(order)", span="43-43", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", color=green, community=0, file="MarginCallModel.cs"];
m22_13 [label="Exit QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", span="35-35", cluster="QuantConnect.Securities.MarginCallModel.ExecuteMarginCall(System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>)", file="MarginCallModel.cs"];
m22_0 [label="Entry QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", span="24-24", cluster="QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="MarginCallModel.cs"];
m22_1 [label="Portfolio = portfolio", span="26-26", cluster="QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", color=green, community=0, file="MarginCallModel.cs"];
m22_2 [label="Exit QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", span="24-24", cluster="QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="MarginCallModel.cs"];
m22_18 [label="Entry Unk.AddOrder", span="", cluster="Unk.AddOrder", file="MarginCallModel.cs"];
m22_14 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="MarginCallModel.cs"];
m22_16 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="MarginCallModel.cs"];
m22_17 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="MarginCallModel.cs"];
m22_15 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="MarginCallModel.cs"];
m22_19 [label="Entry Unk.WaitForOrder", span="", cluster="Unk.WaitForOrder", file="MarginCallModel.cs"];
m22_30 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="MarginCallModel.cs"];
m22_21 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="MarginCallModel.cs"];
m22_24 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="MarginCallModel.cs"];
m22_27 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="MarginCallModel.cs"];
m22_22 [label=x, span="39-39", cluster="lambda expression", color=green, community=1, file="MarginCallModel.cs"];
m22_23 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="MarginCallModel.cs"];
m22_25 [label="Portfolio[x.Symbol]", span="39-39", cluster="lambda expression", color=green, community=0, file="MarginCallModel.cs"];
m22_26 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="MarginCallModel.cs"];
m22_28 [label="x.Value.UnrealizedProfit", span="40-40", cluster="lambda expression", color=green, community=0, file="MarginCallModel.cs"];
m22_29 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="MarginCallModel.cs"];
m22_31 [label="x.Key", span="40-40", cluster="lambda expression", color=green, community=0, file="MarginCallModel.cs"];
m22_32 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="MarginCallModel.cs"];
m22_33 [label="QuantConnect.Securities.MarginCallModel", span="", file="MarginCallModel.cs"];
m26_0 [label="Entry QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="29-29", cluster="QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.cs"];
m26_1 [label="Exit QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="29-29", cluster="QuantConnect.Commands.ICommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="QCAlgorithm.cs"];
m27_19 [label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="70-70", cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="QCAlgorithm.Trading.cs"];
m27_28 [label="Entry QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", span="143-143", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_48 [label="Log(consolidated.Time.ToString(''0'') + '' >> Plotting!'')", span="145-145", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_49 [label="Plot(consolidated.Symbol, ''3HourBar'', consolidated.Close)", span="146-146", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_50 [label="Exit QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", span="143-143", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThreeHourBarConsolidatedHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_25 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m27_26 [label="ThreeHourBarConsolidatedHandler(sender, (TradeBar) consolidated)", span="92-92", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m27_27 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="QCAlgorithm.Trading.cs"];
m27_29 [label="Entry QuantConnect.Algorithm.Examples.DataConsolidation.OnData(QuantConnect.Data.Market.TradeBars)", span="102-102", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnData(QuantConnect.Data.Market.TradeBars)", file="QCAlgorithm.Trading.cs"];
m27_30 [label="Exit QuantConnect.Algorithm.Examples.DataConsolidation.OnData(QuantConnect.Data.Market.TradeBars)", span="102-102", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnData(QuantConnect.Data.Market.TradeBars)", file="QCAlgorithm.Trading.cs"];
m27_23 [label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(int)", span="79-79", cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(int)", file="QCAlgorithm.Trading.cs"];
m27_36 [label="Entry QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", span="123-123", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_37 [label="_last != null && consolidated.Close > _last.Close", span="125-125", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_38 [label="Log(consolidated.Time.ToString(''o'') + '' >> SPY >> LONG  >> 100 >> '' + Portfolio[''SPY''].Quantity)", span="127-127", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_40 [label="_last != null && consolidated.Close < _last.Close", span="130-130", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_41 [label="Log(consolidated.Time.ToString(''o'') + '' >> SPY >> SHORT >> 100 >> '' + Portfolio[''SPY''].Quantity)", span="132-132", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_43 [label="_last = consolidated", span="135-135", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_39 [label="Order(''SPY'', 100)", span="128-128", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_42 [label="Order(''SPY'', -100)", span="133-133", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_44 [label="Exit QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", span="123-123", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.ThirtyMinuteBarHandler(object, QuantConnect.Data.Market.TradeBar)", file="QCAlgorithm.Trading.cs"];
m27_47 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="183-183", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="QCAlgorithm.Trading.cs"];
m27_45 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="QCAlgorithm.Trading.cs"];
m27_17 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="QCAlgorithm.Trading.cs"];
m27_22 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="QCAlgorithm.Trading.cs"];
m27_31 [label="Entry QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", span="111-111", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", file="QCAlgorithm.Trading.cs"];
m27_32 [label="Liquidate(symbol)", span="114-114", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", file="QCAlgorithm.Trading.cs"];
m27_33 [label="_last = null", span="115-115", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", file="QCAlgorithm.Trading.cs"];
m27_34 [label="Exit QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", span="111-111", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.OnEndOfDay(string)", file="QCAlgorithm.Trading.cs"];
m27_46 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="723-723", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="QCAlgorithm.Trading.cs"];
m27_16 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="503-503", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="QCAlgorithm.Trading.cs"];
m27_0 [label="Entry QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", span="54-54", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_1 [label="AddSecurity(SecurityType.Equity, ''SPY'')", span="56-56", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_2 [label="var start = new DateTime(2013, 10, 07, 09, 30, 0)", span="59-59", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_3 [label="SetStartDate(start)", span="60-60", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_4 [label="SetEndDate(start.AddDays(1))", span="61-61", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_5 [label="var thirtyMinuteConsolidator = new TradeBarConsolidator(TimeSpan.FromMinutes(30))", span="65-65", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_6 [label="thirtyMinuteConsolidator.DataConsolidated += ThirtyMinuteBarHandler", span="69-69", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_7 [label="SubscriptionManager.AddConsolidator(''SPY'', thirtyMinuteConsolidator)", span="72-72", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_8 [label="var oneDayConsolidator = new TradeBarConsolidator(TimeSpan.FromDays(1))", span="81-81", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_9 [label="var threeCountConsolidator = new TradeBarConsolidator(3)", span="84-84", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_10 [label="var three_oneDayBar = new SequentialConsolidator(oneDayConsolidator, threeCountConsolidator)", span="89-89", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_11 [label="three_oneDayBar.DataConsolidated += (sender, consolidated) => ThreeHourBarConsolidatedHandler(sender, (TradeBar) consolidated)", span="92-92", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_12 [label="SubscriptionManager.AddConsolidator(''SPY'', three_oneDayBar)", span="95-95", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_13 [label="Exit QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", span="54-54", cluster="QuantConnect.Algorithm.Examples.DataConsolidation.Initialize()", file="QCAlgorithm.Trading.cs"];
m27_35 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="QCAlgorithm.Trading.cs"];
m27_15 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="QCAlgorithm.Trading.cs"];
m27_18 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="538-538", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QCAlgorithm.Trading.cs"];
m27_24 [label="Entry QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", span="90-90", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Trading.cs"];
m27_51 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="170-170", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="QCAlgorithm.Trading.cs"];
m27_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="612-612", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="QCAlgorithm.Trading.cs"];
m27_21 [label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", span="118-118", cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(string, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QCAlgorithm.Trading.cs"];
m27_52 [label="QuantConnect.Algorithm.Examples.DataConsolidation", span="", file="QCAlgorithm.Trading.cs"];
m32_67 [label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="73-73", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="SecurityPortfolioManager.cs"];
m32_47 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(string, out QuantConnect.Securities.Security)", span="214-214", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(string, out QuantConnect.Securities.Security)", file="SecurityPortfolioManager.cs"];
m32_53 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="235-235", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs"];
m32_54 [label="return Securities.GetInternalPortfolioCollection().GetEnumerator();", span="237-237", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs"];
m32_55 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="235-235", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="SecurityPortfolioManager.cs"];
m32_40 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="SecurityPortfolioManager.cs"];
m32_85 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="SecurityPortfolioManager.cs"];
m32_66 [label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="160-160", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="SecurityPortfolioManager.cs"];
m32_95 [label="Entry System.DateTime.AddMilliseconds(double)", span="0-0", cluster="System.DateTime.AddMilliseconds(double)", file="SecurityPortfolioManager.cs"];
m32_88 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="514-514", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs"];
m32_90 [label="Transactions.TransactionRecord.ContainsKey(clone)", span="517-517", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs"];
m32_92 [label="Transactions.TransactionRecord.Add(clone, transactionProfitLoss)", span="521-521", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs"];
m32_89 [label="var clone = time", span="516-516", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs"];
m32_91 [label="clone = clone.AddMilliseconds(1)", span="519-519", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs"];
m32_93 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="514-514", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioManager.cs"];
m32_41 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", span="212-212", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs"];
m32_43 [label="var success = Securities.TryGetValue(symbol, out security)", span="215-215", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs"];
m32_42 [label="Security security", span="214-214", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs"];
m32_44 [label="holding = success ? security.Holdings : null", span="216-216", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs"];
m32_45 [label="return success;", span="217-217", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs"];
m32_46 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", span="212-212", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="SecurityPortfolioManager.cs"];
m32_73 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", span="479-479", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="SecurityPortfolioManager.cs"];
m32_74 [label="decimal totalMarginUsed = TotalMarginUsed", span="481-481", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_75 [label="decimal totalPortfolioValue = TotalPortfolioValue", span="482-482", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_80 [label="var marginCallOrder = security.MarginModel.GenerateMarginCallOrder(security, totalPortfolioValue, totalMarginUsed)", span="494-494", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_76 [label="MarginRemaining > 0", span="485-485", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_79 [label="Securities.Values", span="492-492", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_81 [label="marginCallOrder != null && marginCallOrder.Quantity != 0", span="495-495", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_82 [label="marginCallOrders.Add(marginCallOrder)", span="497-497", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_77 [label="return new List<Order>();", span="487-487", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_78 [label="var marginCallOrders = new List<Order>()", span="491-491", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_83 [label="return marginCallOrders;", span="501-501", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_84 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", span="479-479", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="SecurityPortfolioManager.cs"];
m32_51 [label="Entry QuantConnect.Securities.SecurityManager.GetInternalPortfolioCollection()", span="245-245", cluster="QuantConnect.Securities.SecurityManager.GetInternalPortfolioCollection()", file="SecurityPortfolioManager.cs"];
m32_59 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="445-445", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs"];
m32_61 [label="CashBook.TryGetValue(symbol, out item)", span="448-448", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs"];
m32_64 [label="CashBook.Add(symbol, cash, conversionRate)", span="455-455", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs"];
m32_60 [label="Cash item", span="447-447", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs"];
m32_62 [label="item.Quantity = cash", span="450-450", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs"];
m32_63 [label="item.ConversionRate = conversionRate", span="451-451", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs"];
m32_65 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="445-445", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="SecurityPortfolioManager.cs"];
m32_8 [label="QuantConnect.Packets.DebugPacket", span="", cluster="QuantConnect.Securities.CashBook.CashBook()", file="SecurityPortfolioManager.cs"];
m32_96 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SecurityPortfolioManager.cs"];
m32_7 [label="Exit QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", span="86-86", cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="SecurityPortfolioManager.cs"];
m32_29 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", span="131-131", cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs"];
m32_30 [label="return Securities.ContainsKey(pair.Key);", span="133-133", cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs"];
m32_31 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", span="131-131", cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="SecurityPortfolioManager.cs"];
m32_32 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", span="166-166", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs"];
m32_33 [label="array = new KeyValuePair<string, SecurityHolding>[Securities.Count]", span="168-168", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs"];
m32_35 [label=Securities, span="170-170", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs"];
m32_34 [label="var i = 0", span="169-169", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs"];
m32_37 [label="array[i] = new KeyValuePair<string, SecurityHolding>(asset.Key, asset.Value.Holdings)", span="174-174", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs"];
m32_38 [label="i++", span="176-176", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs"];
m32_36 [label="i >= index", span="172-172", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs"];
m32_39 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", span="166-166", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="SecurityPortfolioManager.cs"];
m32_0 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="60-60", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs"];
m32_1 [label="Securities = securityManager", span="62-62", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs"];
m32_2 [label="Transactions = transactions", span="63-63", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs"];
m32_3 [label="MarginCallModel = new MarginCallModel(this)", span="64-64", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", color=green, community=0];
m32_4 [label="CashBook = new CashBook()", span="66-66", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs"];
m32_5 [label="_baseCurrencyCash = CashBook[CashBook.AccountCurrency]", span="67-67", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs", color=green, community=0];
m32_6 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="60-60", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="SecurityPortfolioManager.cs"];
m32_25 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="120-120", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="SecurityPortfolioManager.cs"];
m32_26 [label="return Securities.ContainsKey(symbol);", span="122-122", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="SecurityPortfolioManager.cs"];
m32_27 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="120-120", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="SecurityPortfolioManager.cs"];
m32_68 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="467-467", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs"];
m32_69 [label="var security = Securities[fill.Symbol]", span="469-469", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_70 [label="security.PortfolioModel.ProcessFill(this, security, fill)", span="470-470", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioManager.cs"];
m32_71 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="467-467", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs"];
m32_72 [label="Entry QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="29-29", cluster="QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioManager.cs"];
m32_52 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="SecurityPortfolioManager.cs"];
m32_48 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="225-225", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs"];
m32_49 [label="return Securities.GetInternalPortfolioCollection().GetEnumerator();", span="227-227", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs"];
m32_50 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="225-225", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="SecurityPortfolioManager.cs"];
m32_86 [label="Entry QuantConnect.Securities.ISecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="73-73", cluster="QuantConnect.Securities.ISecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="SecurityPortfolioManager.cs"];
m32_87 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="SecurityPortfolioManager.cs"];
m32_56 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="434-434", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs"];
m32_57 [label="_baseCurrencyCash.Quantity = cash", span="436-436", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs"];
m32_58 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="434-434", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="SecurityPortfolioManager.cs"];
m32_28 [label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(string)", span="137-137", cluster="QuantConnect.Securities.SecurityManager.ContainsKey(string)", file="SecurityPortfolioManager.cs"];
m32_97 [label="QuantConnect.Securities.SecurityPortfolioManager", span="", file="SecurityPortfolioManager.cs"];
m33_2 [label="Entry QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", span="84-84", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", file="SecurityPortfolioManagerTests.cs"];
m33_3 [label="Symbol = holding.Symbol", span="86-86", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", file="SecurityPortfolioManagerTests.cs"];
m33_4 [label="Quantity = holding.Quantity", span="87-87", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", file="SecurityPortfolioManagerTests.cs"];
m33_6 [label="type == SecurityType.Forex", span="90-90", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", file="SecurityPortfolioManagerTests.cs"];
m33_8 [label="AveragePrice = Math.Round(holding.AveragePrice, rounding)", span="92-92", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", file="SecurityPortfolioManagerTests.cs"];
m33_9 [label="MarketPrice = Math.Round(holding.Price, rounding)", span="93-93", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", file="SecurityPortfolioManagerTests.cs"];
m33_5 [label="var rounding = 2", span="89-89", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", file="SecurityPortfolioManagerTests.cs"];
m33_7 [label="rounding = 4", span="90-90", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", file="SecurityPortfolioManagerTests.cs"];
m33_10 [label="Exit QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", span="84-84", cluster="QuantConnect.Holding.Holding(QuantConnect.Securities.SecurityHolding, QuantConnect.SecurityType)", file="SecurityPortfolioManagerTests.cs"];
m33_0 [label="Entry QuantConnect.Holding.Holding()", span="76-76", cluster="QuantConnect.Holding.Holding()", file="SecurityPortfolioManagerTests.cs"];
m33_1 [label="Exit QuantConnect.Holding.Holding()", span="76-76", cluster="QuantConnect.Holding.Holding()", file="SecurityPortfolioManagerTests.cs"];
m33_12 [label="Entry QuantConnect.AlgorithmControl.AlgorithmControl()", span="356-356", cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="SecurityPortfolioManagerTests.cs"];
m33_13 [label="Status = AlgorithmStatus.Running", span="358-358", cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="SecurityPortfolioManagerTests.cs"];
m33_14 [label="ChartSubscription = ''Strategy Equity''", span="359-359", cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="SecurityPortfolioManagerTests.cs"];
m33_15 [label="Exit QuantConnect.AlgorithmControl.AlgorithmControl()", span="356-356", cluster="QuantConnect.AlgorithmControl.AlgorithmControl()", file="SecurityPortfolioManagerTests.cs"];
m33_16 [label="QuantConnect.Holding", span="", file="SecurityPortfolioManagerTests.cs"];
m33_17 [label="QuantConnect.AlgorithmControl", span="", file="SecurityPortfolioManagerTests.cs"];
m34_64 [label="Entry System.Convert.ToDecimal(int)", span="0-0", cluster="System.Convert.ToDecimal(int)", file="SecurityPortfolioModel.cs"];
m34_73 [label="Entry System.Convert.ToInt32(decimal)", span="0-0", cluster="System.Convert.ToInt32(decimal)", file="SecurityPortfolioModel.cs"];
m34_67 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="SecurityPortfolioModel.cs"];
m34_71 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="514-514", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="SecurityPortfolioModel.cs"];
m34_69 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", span="338-338", cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="SecurityPortfolioModel.cs"];
m34_66 [label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", span="84-84", cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", file="SecurityPortfolioModel.cs"];
m34_0 [label="Entry QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="32-32", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioModel.cs"];
m34_1 [label="var isLong = security.Holdings.IsLong", span="35-35", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_2 [label="var isShort = security.Holdings.IsShort", span="36-36", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_12 [label="isLong && fill.Direction == OrderDirection.Sell", span="57-57", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_34 [label=isLong, span="119-119", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_3 [label="var closedPosition = false", span="37-37", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_19 [label="isShort && fill.Direction == OrderDirection.Buy", span="78-78", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_47 [label=isShort, span="148-148", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_4 [label="var quantityHoldings = (decimal)security.Holdings.Quantity", span="39-39", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_5 [label="var absoluteHoldingsQuantity = security.Holdings.AbsoluteQuantity", span="40-40", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_13 [label="quantityHoldings >= fill.AbsoluteFillQuantity", span="60-60", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_16 [label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * quantityHoldings", span="71-71", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_17 [label="portfolio.CashBook[CashBook.AccountCurrency].Quantity += lastTradeProfit + ((averageHoldingsPrice * quantityHoldings))", span="74-74", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_30 [label="quantityHoldings == 0", span="112-112", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_37 [label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (fill.FillQuantity * fill.FillPrice)) / (quantityHoldings + (decimal)fill.FillQuantity)", span="126-126", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_38 [label="quantityHoldings += fill.FillQuantity", span="128-128", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_50 [label="quantityHoldings += fill.FillQuantity", span="155-155", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_62 [label="security.Holdings.SetHoldings(averageHoldingsPrice, Convert.ToInt32(quantityHoldings))", span="185-185", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_6 [label="var averageHoldingsPrice = security.Holdings.AveragePrice", span="41-41", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_20 [label="absoluteHoldingsQuantity >= fill.FillQuantity", span="81-81", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_23 [label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * absoluteHoldingsQuantity", span="92-92", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_24 [label="portfolio.CashBook[CashBook.AccountCurrency].Quantity += lastTradeProfit + ((averageHoldingsPrice * absoluteHoldingsQuantity))", span="95-95", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_7 [label="var lastTradeProfit = 0m", span="43-43", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_14 [label="lastTradeProfit = (fill.FillPrice - averageHoldingsPrice) * fill.AbsoluteFillQuantity", span="63-63", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_15 [label="portfolio.CashBook[CashBook.AccountCurrency].Quantity += lastTradeProfit + ((averageHoldingsPrice * fill.AbsoluteFillQuantity))", span="66-66", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_21 [label="lastTradeProfit = (averageHoldingsPrice - fill.FillPrice) * fill.AbsoluteFillQuantity", span="84-84", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_22 [label="portfolio.CashBook[CashBook.AccountCurrency].Quantity += lastTradeProfit + ((averageHoldingsPrice * fill.AbsoluteFillQuantity))", span="87-87", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_57 [label="averageHoldingsPrice = ((averageHoldingsPrice * quantityHoldings) + (Convert.ToDecimal(fill.FillQuantity) * fill.FillPrice)) / (quantityHoldings + (decimal)fill.FillQuantity)", span="172-172", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_8 [label="security.Holdings.AddNewSale(fill.FillPrice * Convert.ToDecimal(fill.AbsoluteFillQuantity))", span="48-48", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_9 [label="var feeThisOrder = Math.Abs(security.TransactionModel.GetOrderFee(fill.AbsoluteFillQuantity, fill.FillPrice))", span="51-51", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_10 [label="security.Holdings.AddNewFee(feeThisOrder)", span="52-52", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_11 [label="portfolio.CashBook[CashBook.AccountCurrency].Quantity -= feeThisOrder", span="53-53", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_29 [label="portfolio.AddTransactionRecord(security.Time, lastTradeProfit - 2 * feeThisOrder)", span="106-106", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_27 [label="security.Holdings.AddNewProfit(lastTradeProfit)", span="104-104", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_28 [label="security.Holdings.SetLastTradeProfit(lastTradeProfit)", span="105-105", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_18 [label="closedPosition = true", span="76-76", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_26 [label=closedPosition, span="101-101", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_25 [label="closedPosition = true", span="97-97", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_31 [label="averageHoldingsPrice = fill.FillPrice", span="115-115", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_32 [label="quantityHoldings = fill.FillQuantity", span="116-116", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_33 [label="portfolio.CashBook[CashBook.AccountCurrency].Quantity -= (fill.FillPrice * Convert.ToDecimal(fill.AbsoluteFillQuantity))", span="117-117", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_60 [label=Exception, span="179-179", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_35 [label="fill.Direction", span="122-122", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_36 [label="OrderDirection.Buy", span="124-124", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_40 [label="OrderDirection.Sell", span="133-133", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_39 [label="portfolio.CashBook[CashBook.AccountCurrency].Quantity -= (fill.FillPrice * Convert.ToDecimal(fill.AbsoluteFillQuantity))", span="130-130", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_41 [label="quantityHoldings += fill.FillQuantity", span="134-134", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_42 [label="quantityHoldings < 0", span="135-135", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_44 [label="portfolio.CashBook[CashBook.AccountCurrency].Quantity -= (fill.FillPrice * Math.Abs(quantityHoldings))", span="139-139", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_45 [label="quantityHoldings == 0", span="141-141", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_43 [label="averageHoldingsPrice = fill.FillPrice", span="138-138", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_48 [label="fill.Direction", span="151-151", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_49 [label="OrderDirection.Buy", span="153-153", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_56 [label="OrderDirection.Sell", span="168-168", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_51 [label="quantityHoldings > 0", span="156-156", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_53 [label="portfolio.CashBook[CashBook.AccountCurrency].Quantity -= (fill.FillPrice * Math.Abs(quantityHoldings))", span="160-160", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_54 [label="quantityHoldings == 0", span="162-162", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_58 [label="quantityHoldings += fill.FillQuantity", span="173-173", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_52 [label="averageHoldingsPrice = fill.FillPrice", span="159-159", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_55 [label="averageHoldingsPrice = 0", span="164-164", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_59 [label="portfolio.CashBook[CashBook.AccountCurrency].Quantity -= (fill.FillPrice * Convert.ToDecimal(fill.AbsoluteFillQuantity))", span="174-174", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_46 [label="averageHoldingsPrice = 0", span="143-143", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_61 [label="Log.Error(''SecurityPortfolioModel.ProcessFill(): '' + err.Message)", span="181-181", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", color=green, community=0, file="SecurityPortfolioModel.cs"];
m34_63 [label="Exit QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="32-32", cluster="QuantConnect.Securities.SecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="SecurityPortfolioModel.cs"];
m34_74 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="364-364", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="SecurityPortfolioModel.cs"];
m34_70 [label="Entry QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", span="356-356", cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="SecurityPortfolioModel.cs"];
m34_68 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", span="329-329", cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="SecurityPortfolioModel.cs"];
m34_65 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="347-347", cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="SecurityPortfolioModel.cs"];
m35_12 [label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0", cluster="System.DateTime.Subtract(System.TimeSpan)", file="SecurityTransactionManager.cs"];
m35_21 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="SecurityTransactionManager.cs"];
m35_44 [label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="316-316", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="SecurityTransactionManager.cs"];
m35_57 [label="Entry Unk.AlwaysOpen", span="", cluster="Unk.AlwaysOpen", file="SecurityTransactionManager.cs"];
m35_42 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="SecurityTransactionManager.cs"];
m35_58 [label="Entry Unk.EachTradeableDayInTimeZone", span="", cluster="Unk.EachTradeableDayInTimeZone", file="SecurityTransactionManager.cs"];
m35_32 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="SecurityTransactionManager.cs"];
m35_11 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="477-477", cluster="System.DateTime.RoundDown(System.TimeSpan)", file="SecurityTransactionManager.cs"];
m35_56 [label="Entry Unk.ForOffset", span="", cluster="Unk.ForOffset", file="SecurityTransactionManager.cs"];
m35_68 [label="Entry QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", span="104-104", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", file="SecurityTransactionManager.cs"];
m35_69 [label="var start = new DateTime(2016, 2, 11)", span="106-106", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", file="SecurityTransactionManager.cs"];
m35_70 [label="var end = new DateTime(2016, 2, 12)", span="107-107", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", file="SecurityTransactionManager.cs"];
m35_73 [label="var expected = new[] {start.AddDays(-2), start.AddDays(-1), start}", span="112-112", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", file="SecurityTransactionManager.cs"];
m35_74 [label="var actual = Time.EachTradeableDayInTimeZone(exchange, start, end, dataTimeZone, true)", span="113-113", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", file="SecurityTransactionManager.cs"];
m35_71 [label="var exchange = SecurityExchangeHours.AlwaysOpen(DateTimeZone.ForOffset(Offset.FromHours(12)))", span="108-108", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", file="SecurityTransactionManager.cs"];
m35_72 [label="var dataTimeZone = DateTimeZone.ForOffset(Offset.FromHours(-13))", span="109-109", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", file="SecurityTransactionManager.cs"];
m35_75 [label="CollectionAssert.AreEqual(expected, actual)", span="114-114", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", file="SecurityTransactionManager.cs"];
m35_76 [label="Exit QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", span="104-104", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffset25()", file="SecurityTransactionManager.cs"];
m35_46 [label="Entry QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", span="76-76", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", file="SecurityTransactionManager.cs"];
m35_47 [label="var start = new DateTime(2016, 2, 11)", span="78-78", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", file="SecurityTransactionManager.cs"];
m35_48 [label="var end = new DateTime(2016, 2, 12)", span="79-79", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", file="SecurityTransactionManager.cs"];
m35_51 [label="var expected = new[] {start, end, end.AddDays(1)}", span="84-84", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", file="SecurityTransactionManager.cs"];
m35_52 [label="var actual = Time.EachTradeableDayInTimeZone(equityExchange, start, end, dataTimeZone, true)", span="85-85", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", file="SecurityTransactionManager.cs"];
m35_49 [label="var equityExchange = SecurityExchangeHours.AlwaysOpen(DateTimeZone.ForOffset(Offset.FromHours(-5)))", span="80-80", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", file="SecurityTransactionManager.cs"];
m35_50 [label="var dataTimeZone = DateTimeZone.ForOffset(Offset.FromHours(7))", span="81-81", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", file="SecurityTransactionManager.cs"];
m35_53 [label="CollectionAssert.AreEqual(expected, actual)", span="86-86", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", file="SecurityTransactionManager.cs"];
m35_54 [label="Exit QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", span="76-76", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetPlus12()", file="SecurityTransactionManager.cs"];
m35_34 [label="Entry QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneIsSameForEqualTimeZones()", span="65-65", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneIsSameForEqualTimeZones()", file="SecurityTransactionManager.cs"];
m35_35 [label="var start = new DateTime(2010, 01, 01)", span="67-67", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneIsSameForEqualTimeZones()", file="SecurityTransactionManager.cs"];
m35_36 [label="var end = new DateTime(2016, 02, 12)", span="68-68", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneIsSameForEqualTimeZones()", file="SecurityTransactionManager.cs"];
m35_38 [label="var expected = Time.EachTradeableDay(entry.ExchangeHours, start, end)", span="70-70", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneIsSameForEqualTimeZones()", file="SecurityTransactionManager.cs"];
m35_39 [label="var actual = Time.EachTradeableDayInTimeZone(entry.ExchangeHours, start, end, entry.ExchangeHours.TimeZone, true)", span="71-71", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneIsSameForEqualTimeZones()", file="SecurityTransactionManager.cs"];
m35_37 [label="var entry = MarketHoursDatabase.FromDataFolder().ExchangeHoursListing.First().Value", span="69-69", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneIsSameForEqualTimeZones()", file="SecurityTransactionManager.cs"];
m35_40 [label="CollectionAssert.AreEqual(expected, actual)", span="72-72", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneIsSameForEqualTimeZones()", file="SecurityTransactionManager.cs"];
m35_41 [label="Exit QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneIsSameForEqualTimeZones()", span="65-65", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneIsSameForEqualTimeZones()", file="SecurityTransactionManager.cs"];
m35_9 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="SecurityTransactionManager.cs"];
m35_13 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="SecurityTransactionManager.cs"];
m35_33 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="SecurityTransactionManager.cs"];
m35_0 [label="Entry QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsRoundsDown()", span="28-28", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsRoundsDown()", file="SecurityTransactionManager.cs"];
m35_1 [label="var end = new DateTime(2015, 09, 01, 12, 0, 1)", span="31-31", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsRoundsDown()", file="SecurityTransactionManager.cs"];
m35_2 [label="var barSize = TimeSpan.FromMinutes(1)", span="32-32", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsRoundsDown()", file="SecurityTransactionManager.cs"];
m35_4 [label="var start = Time.GetStartTimeForTradeBars(hours, end, barSize, 1, false)", span="34-34", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsRoundsDown()", file="SecurityTransactionManager.cs"];
m35_5 [label="Assert.AreEqual(end.RoundDown(barSize).Subtract(barSize), start)", span="36-36", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsRoundsDown()", file="SecurityTransactionManager.cs"];
m35_3 [label="var hours = SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork)", span="33-33", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsRoundsDown()", file="SecurityTransactionManager.cs"];
m35_6 [label="Exit QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsRoundsDown()", span="28-28", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsRoundsDown()", file="SecurityTransactionManager.cs"];
m35_24 [label="Entry QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesWeekends()", span="52-52", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesWeekends()", file="SecurityTransactionManager.cs"];
m35_25 [label="var end = new DateTime(2015, 09, 01, 12, 0, 0)", span="55-55", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesWeekends()", file="SecurityTransactionManager.cs"];
m35_26 [label="var expectedStart = new DateTime(2015, 08, 21)", span="56-56", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesWeekends()", file="SecurityTransactionManager.cs"];
m35_29 [label="var start = Time.GetStartTimeForTradeBars(hours, end, barSize, 7, false)", span="59-59", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesWeekends()", file="SecurityTransactionManager.cs"];
m35_27 [label="var barSize = TimeSpan.FromDays(1)", span="57-57", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesWeekends()", file="SecurityTransactionManager.cs"];
m35_30 [label="Assert.AreEqual(expectedStart, start)", span="61-61", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesWeekends()", file="SecurityTransactionManager.cs"];
m35_28 [label="var hours = SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="58-58", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesWeekends()", file="SecurityTransactionManager.cs"];
m35_31 [label="Exit QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesWeekends()", span="52-52", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesWeekends()", file="SecurityTransactionManager.cs"];
m35_22 [label="Entry QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="258-258", cluster="QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", file="SecurityTransactionManager.cs"];
m35_7 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="SecurityTransactionManager.cs"];
m35_55 [label="Entry Unk.FromHours", span="", cluster="Unk.FromHours", file="SecurityTransactionManager.cs"];
m35_10 [label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="427-427", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="SecurityTransactionManager.cs"];
m35_43 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SecurityTransactionManager.cs"];
m35_23 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="SecurityTransactionManager.cs"];
m35_45 [label="Entry QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", span="340-340", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="SecurityTransactionManager.cs"];
m35_59 [label="Entry QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", span="90-90", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", file="SecurityTransactionManager.cs"];
m35_60 [label="var start = new DateTime(2016, 2, 11)", span="92-92", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", file="SecurityTransactionManager.cs"];
m35_61 [label="var end = new DateTime(2016, 2, 12)", span="93-93", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", file="SecurityTransactionManager.cs"];
m35_64 [label="var expected = new[] {start.AddDays(-1), start, end}", span="98-98", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", file="SecurityTransactionManager.cs"];
m35_65 [label="var actual = Time.EachTradeableDayInTimeZone(exchange, start, end, dataTimeZone, true)", span="99-99", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", file="SecurityTransactionManager.cs"];
m35_62 [label="var exchange = SecurityExchangeHours.AlwaysOpen(DateTimeZone.ForOffset(Offset.FromHours(5)))", span="94-94", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", file="SecurityTransactionManager.cs"];
m35_63 [label="var dataTimeZone = DateTimeZone.ForOffset(Offset.FromHours(-7))", span="95-95", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", file="SecurityTransactionManager.cs"];
m35_66 [label="CollectionAssert.AreEqual(expected, actual)", span="100-100", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", file="SecurityTransactionManager.cs"];
m35_67 [label="Exit QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", span="90-90", cluster="QuantConnect.Tests.Common.TimeTests.EachTradeableDayInTimeZoneWithOffsetMinus12()", file="SecurityTransactionManager.cs"];
m35_14 [label="Entry QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesOverNight()", span="40-40", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesOverNight()", file="SecurityTransactionManager.cs"];
m35_15 [label="var end = new DateTime(2015, 09, 01, 12, 0, 0)", span="43-43", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesOverNight()", file="SecurityTransactionManager.cs"];
m35_16 [label="var barSize = TimeSpan.FromHours(1)", span="44-44", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesOverNight()", file="SecurityTransactionManager.cs"];
m35_18 [label="var start = Time.GetStartTimeForTradeBars(hours, end, barSize, 7, false)", span="46-46", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesOverNight()", file="SecurityTransactionManager.cs"];
m35_19 [label="Assert.AreEqual(end.AddDays(-1), start)", span="48-48", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesOverNight()", file="SecurityTransactionManager.cs"];
m35_17 [label="var hours = SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="45-45", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesOverNight()", file="SecurityTransactionManager.cs"];
m35_20 [label="Exit QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesOverNight()", span="40-40", cluster="QuantConnect.Tests.Common.TimeTests.GetStartTimeForTradeBarsHandlesOverNight()", file="SecurityTransactionManager.cs"];
m36_0 [label="Entry QuantConnect.Commands.UpdateOrderCommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="57-57", cluster="QuantConnect.Commands.UpdateOrderCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionDataConfig.cs"];
m36_4 [label="Exit QuantConnect.Commands.UpdateOrderCommand.Run(QuantConnect.Interfaces.IAlgorithm)", span="57-57", cluster="QuantConnect.Commands.UpdateOrderCommand.Run(QuantConnect.Interfaces.IAlgorithm)", color=green, community=0, file="SubscriptionDataConfig.cs"];
m36_3 [label="return new CommandResultPacket(this, response.IsSuccess);", span="68-68", cluster="QuantConnect.Commands.UpdateOrderCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionDataConfig.cs"];
m36_1 [label="var ticket = algorithm.Transactions.UpdateOrder(new UpdateOrderRequest(algorithm.UtcTime, OrderId, new UpdateOrderFields\r\n            {\r\n                Quantity = Quantity,\r\n                LimitPrice = LimitPrice,\r\n                StopPrice = StopPrice,\r\n                Tag = Tag\r\n            }))", span="59-65", cluster="QuantConnect.Commands.UpdateOrderCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionDataConfig.cs"];
m36_2 [label="var response = ticket.GetMostRecentOrderResponse()", span="67-67", cluster="QuantConnect.Commands.UpdateOrderCommand.Run(QuantConnect.Interfaces.IAlgorithm)", file="SubscriptionDataConfig.cs"];
m36_5 [label="Entry QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", span="54-54", cluster="QuantConnect.Orders.UpdateOrderRequest.UpdateOrderRequest(System.DateTime, int, QuantConnect.Orders.UpdateOrderFields)", file="SubscriptionDataConfig.cs"];
m36_6 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="445-445", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SubscriptionDataConfig.cs"];
m36_27 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", span="396-396", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(string, double, bool)", file="SubscriptionDataConfig.cs"];
m36_29 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="215-215", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="SubscriptionDataConfig.cs"];
m36_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="470-470", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SubscriptionDataConfig.cs"];
m36_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="612-612", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SubscriptionDataConfig.cs"];
m36_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", span="105-105", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(string, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?)", file="SubscriptionDataConfig.cs"];
m36_30 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="170-170", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="SubscriptionDataConfig.cs"];
m36_28 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", span="363-363", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(string)", file="SubscriptionDataConfig.cs"];
m36_10 [label="QuantConnect.Commands.UpdateOrderCommand", span="", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_11 [label="previous.Date == data.Time.Date", span="45-45", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="SubscriptionDataConfig.cs"];
m36_12 [label="return;", span="45-45", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="SubscriptionDataConfig.cs"];
m36_13 [label="!macd.IsReady", span="47-47", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="SubscriptionDataConfig.cs"];
m36_14 [label="return;", span="47-47", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="SubscriptionDataConfig.cs"];
m36_15 [label="var holding = Portfolio[Symbol]", span="49-49", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="SubscriptionDataConfig.cs"];
m36_16 [label="decimal signalDeltaPercent = (macd - macd.Signal)/macd.Fast", span="51-51", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="SubscriptionDataConfig.cs"];
m36_18 [label="holding.Quantity <= 0 && signalDeltaPercent > tolerance", span="55-55", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_20 [label="holding.Quantity >= 0 && signalDeltaPercent < -tolerance", span="61-61", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_17 [label="var tolerance = 0.0025m", span="52-52", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_19 [label="SetHoldings(Symbol, 1.0)", span="58-58", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_21 [label="Liquidate(Symbol)", span="63-63", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_22 [label="Plot(''MACD'', macd, macd.Signal)", span="67-67", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_23 [label="Plot(Symbol, ''Open'', data[Symbol].Open)", span="68-68", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_24 [label="Plot(Symbol, macd.Fast, macd.Slow)", span="69-69", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_25 [label="previous = data.Time", span="71-71", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_26 [label="Exit QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42", cluster="QuantConnect.Algorithm.Examples.MACDTrendFollowing.OnData(QuantConnect.Data.Market.TradeBars)", file="SubscriptionDataConfig.cs"];
m36_31 [label="QuantConnect.Algorithm.Examples.MACDTrendFollowing", span="", file="SubscriptionDataConfig.cs"];
m37_2 [label="Entry QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", span="72-72", cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="SubscriptionDataReader.cs"];
m37_3 [label="ProjectId = projectId", span="75-75", cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="SubscriptionDataReader.cs"];
m37_4 [label="Message = message", span="76-76", cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="SubscriptionDataReader.cs"];
m37_5 [label="CompileId = compileId", span="77-77", cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="SubscriptionDataReader.cs"];
m37_6 [label="AlgorithmId = algorithmId", span="78-78", cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="SubscriptionDataReader.cs"];
m37_7 [label="Exit QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", span="72-72", cluster="QuantConnect.Packets.DebugPacket.DebugPacket(int, string, string, string)", file="SubscriptionDataReader.cs"];
m37_0 [label="Entry QuantConnect.Packets.DebugPacket.DebugPacket()", span="65-65", cluster="QuantConnect.Packets.DebugPacket.DebugPacket()", file="SubscriptionDataReader.cs"];
m37_1 [label="Exit QuantConnect.Packets.DebugPacket.DebugPacket()", span="65-65", cluster="QuantConnect.Packets.DebugPacket.DebugPacket()", file="SubscriptionDataReader.cs"];
m37_8 [label="QuantConnect.Packets.DebugPacket", span="", file="SubscriptionDataReader.cs"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=2, style=dotted];
n3 -> n0  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n13  [key=2, style=dotted];
n8 -> n11  [key=0, style=solid];
n8 -> n12  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n14  [key=2, style=dotted];
n11 -> n6  [key=0, style=bold, color=blue];
d56 -> d57  [key=0, style=solid, color=green];
d56 -> d176  [key=2, style=dotted, color=green];
d56 -> d58  [key=1, style=dashed, color=green, label=marginCallOrders];
d0 -> d56  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d58  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d60  [key=1, style=dashed, color=green, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d1  [key=0, style=solid];
d0 -> d5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ISetupHandler"];
d0 -> d6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
d0 -> d10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ISetupHandler"];
d0 -> d11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
d0 -> d13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ISetupHandler"];
d0 -> d14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
d0 -> d31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
d0 -> d46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
d0 -> d48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d0 -> d51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
d0 -> d80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
d0 -> d133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d0 -> d135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d0 -> d144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d0 -> d146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
d0 -> d149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
d0 -> d150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
d0 -> d153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
d0 -> d154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
d0 -> d155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
d0 -> d156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d0 -> d158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
d55 -> d56  [key=0, style=solid, color=green];
d55 -> d62  [key=0, style=solid, color=green];
d57 -> d58  [key=0, style=solid, color=green];
d57 -> d61  [key=0, style=solid, color=green];
d58 -> d59  [key=0, style=solid, color=green];
d58 -> d177  [key=2, style=dotted, color=green];
d59 -> d60  [key=0, style=solid, color=green];
d59 -> d61  [key=0, style=solid, color=green];
d60 -> d59  [key=0, style=solid, color=green];
d60 -> d178  [key=2, style=dotted, color=green];
d8 -> d9  [key=0, style=solid, color=green];
d8 -> d161  [key=2, style=dotted, color=green];
d8 -> d61  [key=1, style=dashed, color=green, label=marginCallFrequency];
d7 -> d8  [key=0, style=solid, color=green];
d7 -> d160  [key=2, style=dotted];
d7 -> d21  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d7 -> d23  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d7 -> d26  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d7 -> d28  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d7 -> d32  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d7 -> d37  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d7 -> d106  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d7 -> d114  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d7 -> d116  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d7 -> d123  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d7 -> d125  [key=1, style=dashed, color=darkseagreen4, label=methodInvokers];
d9 -> d10  [key=0, style=solid, color=green];
d9 -> d55  [key=1, style=dashed, color=green, label=nextMarginCallTime];
d61 -> d62  [key=0, style=solid, color=green];
d10 -> d11  [key=0, style=solid];
d41 -> d61  [key=1, style=dashed, color=green, label=time];
d41 -> d55  [key=1, style=dashed, color=green, label=time];
d41 -> d42  [key=0, style=solid];
d41 -> d39  [key=0, style=solid];
d41 -> d46  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d47  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d53  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d54  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d64  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d67  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d68  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d69  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d70  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d94  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d95  [key=1, style=dashed, color=darkseagreen4, label=time];
d41 -> d132  [key=1, style=dashed, color=darkseagreen4, label=time];
d62 -> d63  [key=0, style=solid];
d62 -> d64  [key=0, style=solid];
d62 -> d179  [key=2, style=dotted];
d54 -> d55  [key=0, style=solid, color=green];
d54 -> d175  [key=2, style=dotted];
d159 -> d0  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d5 -> d49  [key=1, style=dashed, color=darkseagreen4, label=startingPortfolioValue];
d5 -> d51  [key=1, style=dashed, color=darkseagreen4, label=startingPortfolioValue];
d5 -> d158  [key=1, style=dashed, color=darkseagreen4, label=startingPortfolioValue];
d6 -> d7  [key=0, style=solid];
d6 -> d45  [key=1, style=dashed, color=darkseagreen4, label=backtestMode];
d11 -> d12  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d14 -> d162  [key=2, style=dotted];
d14 -> d163  [key=2, style=dotted];
d14 -> d20  [key=1, style=dashed, color=darkseagreen4, label=oldTradeBarsMethodInfo];
d14 -> d21  [key=1, style=dashed, color=darkseagreen4, label=oldTradeBarsMethodInfo];
d14 -> d22  [key=1, style=dashed, color=darkseagreen4, label=oldTradeBarsMethodInfo];
d14 -> d113  [key=1, style=dashed, color=darkseagreen4, label=oldTradeBarsMethodInfo];
d15 -> d16  [key=0, style=solid];
d15 -> d162  [key=2, style=dotted];
d15 -> d163  [key=2, style=dotted];
d15 -> d23  [key=1, style=dashed, color=darkseagreen4, label=oldTicksMethodInfo];
d15 -> d115  [key=1, style=dashed, color=darkseagreen4, label=oldTicksMethodInfo];
d16 -> d17  [key=0, style=solid];
d16 -> d162  [key=2, style=dotted];
d16 -> d163  [key=2, style=dotted];
d16 -> d18  [key=1, style=dashed, color=darkseagreen4, label=newTradeBarsMethodInfo];
d16 -> d25  [key=1, style=dashed, color=darkseagreen4, label=newTradeBarsMethodInfo];
d16 -> d26  [key=1, style=dashed, color=darkseagreen4, label=newTradeBarsMethodInfo];
d16 -> d122  [key=1, style=dashed, color=darkseagreen4, label=newTradeBarsMethodInfo];
d17 -> d18  [key=0, style=solid];
d17 -> d162  [key=2, style=dotted];
d17 -> d163  [key=2, style=dotted];
d17 -> d27  [key=1, style=dashed, color=darkseagreen4, label=newTicksMethodInfo];
d17 -> d28  [key=1, style=dashed, color=darkseagreen4, label=newTicksMethodInfo];
d17 -> d124  [key=1, style=dashed, color=darkseagreen4, label=newTicksMethodInfo];
d29 -> d30  [key=0, style=solid];
d29 -> d38  [key=0, style=solid];
d29 -> d31  [key=1, style=dashed, color=darkseagreen4, label=config];
d29 -> d32  [key=1, style=dashed, color=darkseagreen4, label=config];
d29 -> d34  [key=1, style=dashed, color=darkseagreen4, label=config];
d29 -> d37  [key=1, style=dashed, color=darkseagreen4, label=config];
d31 -> d32  [key=0, style=solid];
d31 -> d162  [key=2, style=dotted];
d31 -> d163  [key=2, style=dotted];
d31 -> d33  [key=1, style=dashed, color=darkseagreen4, label=genericMethod];
d31 -> d37  [key=1, style=dashed, color=darkseagreen4, label=genericMethod];
d34 -> d35  [key=0, style=solid];
d34 -> d167  [key=2, style=dotted];
d39 -> d41  [key=1, style=dashed, color=darkseagreen4, label=newData];
d39 -> d54  [key=1, style=dashed, color=darkseagreen4, label=newData];
d39 -> d40  [key=0, style=solid];
d39 -> d134  [key=0, style=solid];
d39 -> d169  [key=2, style=dotted];
d39 -> d53  [key=1, style=dashed, color=darkseagreen4, label=newData];
d39 -> d69  [key=1, style=dashed, color=darkseagreen4, label=newData];
d39 -> d70  [key=1, style=dashed, color=darkseagreen4, label=newData];
d46 -> d47  [key=0, style=solid];
d46 -> d170  [key=2, style=dotted];
d48 -> d49  [key=0, style=solid];
d48 -> d171  [key=2, style=dotted];
d48 -> d172  [key=2, style=dotted];
d50 -> d52  [key=0, style=solid];
d50 -> d173  [key=2, style=dotted];
d51 -> d52  [key=0, style=solid];
d51 -> d171  [key=2, style=dotted];
d51 -> d173  [key=2, style=dotted];
d52 -> d53  [key=0, style=solid];
d52 -> d158  [key=1, style=dashed, color=darkseagreen4, label=startingPortfolioValue];
d53 -> d54  [key=0, style=solid];
d53 -> d174  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid];
d64 -> d180  [key=2, style=dotted];
d71 -> d72  [key=0, style=solid];
d71 -> d73  [key=1, style=dashed, color=darkseagreen4, label=config];
d71 -> d76  [key=1, style=dashed, color=darkseagreen4, label=config];
d71 -> d77  [key=1, style=dashed, color=darkseagreen4, label=config];
d71 -> d84  [key=1, style=dashed, color=darkseagreen4, label=config];
d71 -> d106  [key=1, style=dashed, color=darkseagreen4, label=config];
d80 -> d81  [key=0, style=solid];
d106 -> d107  [key=0, style=solid];
d106 -> d74  [key=0, style=solid];
d106 -> d194  [key=2, style=dotted];
d108 -> d109  [key=0, style=solid];
d114 -> d115  [key=0, style=solid];
d114 -> d194  [key=2, style=dotted];
d116 -> d117  [key=0, style=solid];
d116 -> d131  [key=0, style=solid];
d116 -> d194  [key=2, style=dotted];
d118 -> d119  [key=0, style=solid];
d123 -> d124  [key=0, style=solid];
d123 -> d194  [key=2, style=dotted];
d125 -> d126  [key=0, style=solid];
d125 -> d131  [key=0, style=solid];
d125 -> d194  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d131 -> d132  [key=0, style=solid];
d131 -> d195  [key=2, style=dotted];
d133 -> d41  [key=0, style=solid];
d133 -> d196  [key=2, style=dotted];
d135 -> d136  [key=0, style=solid];
d135 -> d141  [key=0, style=solid];
d135 -> d198  [key=2, style=dotted];
d138 -> d139  [key=0, style=solid];
d138 -> d199  [key=2, style=dotted];
d141 -> d142  [key=0, style=solid];
d141 -> d196  [key=2, style=dotted];
d144 -> d145  [key=0, style=solid];
d144 -> d200  [key=2, style=dotted];
d145 -> d146  [key=0, style=solid];
d145 -> d201  [key=2, style=dotted];
d146 -> d147  [key=0, style=solid];
d146 -> d202  [key=2, style=dotted];
d149 -> d150  [key=0, style=solid];
d149 -> d201  [key=2, style=dotted];
d150 -> d151  [key=0, style=solid];
d150 -> d202  [key=2, style=dotted];
d153 -> d154  [key=0, style=solid];
d153 -> d203  [key=2, style=dotted];
d154 -> d155  [key=0, style=solid];
d154 -> d202  [key=2, style=dotted];
d155 -> d156  [key=0, style=solid];
d155 -> d202  [key=2, style=dotted];
d156 -> d157  [key=0, style=solid];
d156 -> d204  [key=2, style=dotted];
d156 -> d205  [key=2, style=dotted];
d157 -> d158  [key=0, style=solid];
d157 -> d171  [key=2, style=dotted];
d157 -> d172  [key=2, style=dotted];
d158 -> d159  [key=0, style=solid];
d158 -> d171  [key=2, style=dotted];
d158 -> d173  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d21 -> d164  [key=2, style=dotted];
d21 -> d165  [key=2, style=dotted];
d23 -> d29  [key=0, style=solid];
d23 -> d164  [key=2, style=dotted];
d23 -> d165  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d26 -> d164  [key=2, style=dotted];
d26 -> d165  [key=2, style=dotted];
d28 -> d29  [key=0, style=solid];
d28 -> d164  [key=2, style=dotted];
d28 -> d165  [key=2, style=dotted];
d32 -> d29  [key=0, style=solid];
d32 -> d33  [key=0, style=solid];
d32 -> d166  [key=2, style=dotted];
d37 -> d29  [key=0, style=solid];
d37 -> d164  [key=2, style=dotted];
d37 -> d165  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d134  [key=0, style=solid];
d42 -> d43  [key=0, style=solid];
d47 -> d48  [key=0, style=solid];
d47 -> d53  [key=0, style=solid];
d67 -> d123  [key=1, style=dashed, color=darkseagreen4, label=newBars];
d67 -> d68  [key=0, style=solid];
d67 -> d181  [key=2, style=dotted];
d67 -> d91  [key=1, style=dashed, color=darkseagreen4, label=newBars];
d67 -> d92  [key=1, style=dashed, color=darkseagreen4, label=newBars];
d67 -> d95  [key=1, style=dashed, color=darkseagreen4, label=newBars];
d67 -> d122  [key=1, style=dashed, color=darkseagreen4, label=newBars];
d68 -> d125  [key=1, style=dashed, color=darkseagreen4, label=newTicks];
d68 -> d69  [key=0, style=solid];
d68 -> d182  [key=2, style=dotted];
d68 -> d103  [key=1, style=dashed, color=darkseagreen4, label=newTicks];
d68 -> d104  [key=1, style=dashed, color=darkseagreen4, label=newTicks];
d68 -> d105  [key=1, style=dashed, color=darkseagreen4, label=newTicks];
d68 -> d124  [key=1, style=dashed, color=darkseagreen4, label=newTicks];
d69 -> d71  [key=1, style=dashed, color=darkseagreen4, label=i];
d69 -> d70  [key=0, style=solid];
d69 -> d112  [key=0, style=solid];
d70 -> d71  [key=0, style=solid];
d70 -> d72  [key=1, style=dashed, color=darkseagreen4, label=dataPoints];
d70 -> d74  [key=1, style=dashed, color=darkseagreen4, label=dataPoints];
d94 -> d95  [key=0, style=solid];
d94 -> d188  [key=2, style=dotted];
d94 -> d189  [key=2, style=dotted];
d94 -> d184  [key=2, style=dotted];
d95 -> d74  [key=0, style=solid];
d95 -> d188  [key=2, style=dotted];
d95 -> d184  [key=2, style=dotted];
d132 -> d133  [key=0, style=solid];
d63 -> d39  [key=0, style=solid];
d36 -> d159  [key=0, style=solid];
d44 -> d159  [key=0, style=solid];
d83 -> d159  [key=0, style=solid];
d111 -> d159  [key=0, style=solid];
d121 -> d159  [key=0, style=solid];
d130 -> d159  [key=0, style=solid];
d140 -> d159  [key=0, style=solid];
d2 -> d2  [key=3, color=darkorchid, style=bold, label="Local variable bool backwardsCompatibilityMode"];
d2 -> d3  [key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d4 -> d17  [key=1, style=dashed, color=darkseagreen4, label=ticksType];
d4 -> d116  [key=1, style=dashed, color=darkseagreen4, label=ticksType];
d4 -> d125  [key=1, style=dashed, color=darkseagreen4, label=ticksType];
d4 -> d23  [key=1, style=dashed, color=darkseagreen4, label=ticksType];
d4 -> d28  [key=1, style=dashed, color=darkseagreen4, label=ticksType];
d49 -> d50  [key=0, style=solid];
d49 -> d51  [key=0, style=solid];
d45 -> d46  [key=0, style=solid];
d45 -> d53  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d20 -> d22  [key=0, style=solid];
d22 -> d29  [key=0, style=solid];
d22 -> d23  [key=0, style=solid];
d113 -> d114  [key=0, style=solid];
d113 -> d115  [key=0, style=solid];
d115 -> d116  [key=0, style=solid];
d115 -> d131  [key=0, style=solid];
d115 -> d117  [key=0, style=solid];
d3 -> d16  [key=1, style=dashed, color=darkseagreen4, label=tradebarsType];
d3 -> d114  [key=1, style=dashed, color=darkseagreen4, label=tradebarsType];
d3 -> d123  [key=1, style=dashed, color=darkseagreen4, label=tradebarsType];
d3 -> d21  [key=1, style=dashed, color=darkseagreen4, label=tradebarsType];
d3 -> d26  [key=1, style=dashed, color=darkseagreen4, label=tradebarsType];
d3 -> d4  [key=0, style=solid];
d18 -> d19  [key=0, style=solid];
d18 -> d24  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d25 -> d27  [key=0, style=solid];
d122 -> d123  [key=0, style=solid];
d122 -> d124  [key=0, style=solid];
d27 -> d29  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d124 -> d125  [key=0, style=solid];
d124 -> d131  [key=0, style=solid];
d124 -> d126  [key=0, style=solid];
d30 -> d29  [key=0, style=solid];
d30 -> d31  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d38 -> d168  [key=2, style=dotted];
d33 -> d34  [key=0, style=solid];
d33 -> d37  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d134 -> d135  [key=0, style=solid];
d134 -> d197  [key=2, style=dotted];
d76 -> d50  [key=3, color=darkorchid, style=bold, label="Local variable int j"];
d76 -> d77  [key=0, style=solid];
d76 -> d79  [key=0, style=solid];
d76 -> d84  [key=0, style=solid];
d65 -> d114  [key=1, style=dashed, color=darkseagreen4, label=oldBars];
d65 -> d160  [key=2, style=dotted];
d65 -> d113  [key=1, style=dashed, color=darkseagreen4, label=oldBars];
d65 -> d66  [key=0, style=solid];
d65 -> d89  [key=1, style=dashed, color=darkseagreen4, label=oldBars];
d65 -> d90  [key=1, style=dashed, color=darkseagreen4, label=oldBars];
d72 -> d73  [key=0, style=solid];
d73 -> d69  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d77 -> d78  [key=0, style=solid];
d77 -> d183  [key=2, style=dotted];
d84 -> d106  [key=0, style=solid];
d84 -> d85  [key=0, style=solid];
d84 -> d96  [key=0, style=solid];
d79 -> d80  [key=0, style=solid];
d81 -> d82  [key=0, style=solid];
d74 -> d106  [key=1, style=dashed, color=darkseagreen4, label=dataPoint];
d74 -> d69  [key=0, style=solid];
d74 -> d77  [key=1, style=dashed, color=darkseagreen4, label=dataPoint];
d74 -> d75  [key=0, style=solid];
d74 -> d86  [key=1, style=dashed, color=darkseagreen4, label=dataPoint];
d74 -> d97  [key=1, style=dashed, color=darkseagreen4, label=dataPoint];
d107 -> d108  [key=0, style=solid];
d109 -> d110  [key=0, style=solid];
d66 -> d116  [key=1, style=dashed, color=darkseagreen4, label=oldTicks];
d66 -> d160  [key=2, style=dotted];
d66 -> d67  [key=0, style=solid];
d66 -> d115  [key=1, style=dashed, color=darkseagreen4, label=oldTicks];
d66 -> d100  [key=1, style=dashed, color=darkseagreen4, label=oldTicks];
d66 -> d101  [key=1, style=dashed, color=darkseagreen4, label=oldTicks];
d66 -> d102  [key=1, style=dashed, color=darkseagreen4, label=oldTicks];
d117 -> d118  [key=0, style=solid];
d119 -> d120  [key=0, style=solid];
d126 -> d127  [key=0, style=solid];
d128 -> d129  [key=0, style=solid];
d136 -> d137  [key=0, style=solid];
d137 -> d138  [key=0, style=solid];
d139 -> d140  [key=0, style=solid];
d139 -> d168  [key=2, style=dotted];
d142 -> d143  [key=0, style=solid];
d142 -> d147  [key=0, style=solid];
d143 -> d144  [key=0, style=solid];
d143 -> d197  [key=2, style=dotted];
d147 -> d148  [key=0, style=solid];
d147 -> d151  [key=0, style=solid];
d148 -> d149  [key=0, style=solid];
d148 -> d197  [key=2, style=dotted];
d151 -> d155  [key=0, style=solid];
d151 -> d152  [key=0, style=solid];
d152 -> d153  [key=0, style=solid];
d152 -> d197  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d43 -> d45  [key=0, style=solid];
d91 -> d74  [key=0, style=solid];
d91 -> d92  [key=0, style=solid];
d91 -> d93  [key=0, style=solid];
d91 -> d186  [key=2, style=dotted];
d92 -> d74  [key=0, style=solid];
d92 -> d93  [key=0, style=solid];
d92 -> d187  [key=2, style=dotted];
d103 -> d104  [key=0, style=solid];
d103 -> d105  [key=0, style=solid];
d103 -> d192  [key=2, style=dotted];
d104 -> d105  [key=0, style=solid];
d104 -> d190  [key=2, style=dotted];
d104 -> d193  [key=2, style=dotted];
d105 -> d74  [key=0, style=solid];
d105 -> d191  [key=2, style=dotted];
d112 -> d113  [key=0, style=solid];
d112 -> d122  [key=0, style=solid];
d86 -> d94  [key=1, style=dashed, color=darkseagreen4, label=bar];
d86 -> d95  [key=1, style=dashed, color=darkseagreen4, label=bar];
d86 -> d91  [key=1, style=dashed, color=darkseagreen4, label=bar];
d86 -> d92  [key=1, style=dashed, color=darkseagreen4, label=bar];
d86 -> d87  [key=0, style=solid];
d86 -> d89  [key=1, style=dashed, color=darkseagreen4, label=bar];
d86 -> d90  [key=1, style=dashed, color=darkseagreen4, label=bar];
d93 -> d94  [key=0, style=solid];
d82 -> d83  [key=0, style=solid];
d82 -> d184  [key=2, style=dotted];
d110 -> d111  [key=0, style=solid];
d110 -> d168  [key=2, style=dotted];
d120 -> d121  [key=0, style=solid];
d120 -> d168  [key=2, style=dotted];
d129 -> d130  [key=0, style=solid];
d129 -> d168  [key=2, style=dotted];
d19 -> d20  [key=0, style=solid];
d19 -> d112  [key=1, style=dashed, color=darkseagreen4, label=backwardsCompatibilityMode];
d19 -> d88  [key=1, style=dashed, color=darkseagreen4, label=backwardsCompatibilityMode];
d19 -> d99  [key=1, style=dashed, color=darkseagreen4, label=backwardsCompatibilityMode];
d24 -> d25  [key=0, style=solid];
d24 -> d112  [key=1, style=dashed, color=darkseagreen4, label=backwardsCompatibilityMode];
d24 -> d88  [key=1, style=dashed, color=darkseagreen4, label=backwardsCompatibilityMode];
d24 -> d99  [key=1, style=dashed, color=darkseagreen4, label=backwardsCompatibilityMode];
d75 -> d76  [key=0, style=solid];
d75 -> d77  [key=1, style=dashed, color=darkseagreen4, label=j];
d75 -> d78  [key=1, style=dashed, color=darkseagreen4, label=j];
d78 -> d76  [key=0, style=solid];
d78 -> d78  [key=1, style=dashed, color=darkseagreen4, label=j];
d89 -> d74  [key=0, style=solid];
d89 -> d166  [key=2, style=dotted];
d89 -> d93  [key=0, style=solid];
d89 -> d90  [key=0, style=solid];
d90 -> d74  [key=0, style=solid];
d90 -> d93  [key=0, style=solid];
d90 -> d185  [key=2, style=dotted];
d85 -> d86  [key=0, style=solid];
d96 -> d97  [key=0, style=solid];
d102 -> d74  [key=0, style=solid];
d102 -> d191  [key=2, style=dotted];
d87 -> d74  [key=0, style=solid];
d87 -> d93  [key=0, style=solid];
d87 -> d88  [key=0, style=solid];
d98 -> d74  [key=0, style=solid];
d98 -> d99  [key=0, style=solid];
d97 -> d103  [key=1, style=dashed, color=darkseagreen4, label=tick];
d97 -> d104  [key=1, style=dashed, color=darkseagreen4, label=tick];
d97 -> d105  [key=1, style=dashed, color=darkseagreen4, label=tick];
d97 -> d102  [key=1, style=dashed, color=darkseagreen4, label=tick];
d97 -> d98  [key=0, style=solid];
d97 -> d100  [key=1, style=dashed, color=darkseagreen4, label=tick];
d97 -> d101  [key=1, style=dashed, color=darkseagreen4, label=tick];
d100 -> d166  [key=2, style=dotted];
d100 -> d102  [key=0, style=solid];
d100 -> d101  [key=0, style=solid];
d101 -> d102  [key=0, style=solid];
d101 -> d190  [key=2, style=dotted];
d101 -> d185  [key=2, style=dotted];
d88 -> d91  [key=0, style=solid];
d88 -> d89  [key=0, style=solid];
d99 -> d103  [key=0, style=solid];
d99 -> d100  [key=0, style=solid];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_283  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_281 -> m0_284  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_284  [key=0, style=solid];
m0_283 -> m0_285  [key=0, style=solid];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_279  [key=2, style=dotted];
m0_284 -> m0_284  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_285 -> m0_281  [key=0, style=bold, color=blue];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_160  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_157 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_158 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_163  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_161 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_161  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_159 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_163 -> m0_164  [key=0, style=solid];
m0_162 -> m0_160  [key=0, style=solid];
m0_162 -> m0_162  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_164 -> m0_157  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<T>"];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<T>"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=oItem];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_8  [key=2, style=dotted];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_209 -> m0_210  [key=0, style=solid];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_148  [key=2, style=dotted];
m0_211 -> m0_209  [key=0, style=bold, color=blue];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=V];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_56  [key=2, style=dotted];
m0_54 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_55 -> m0_53  [key=0, style=bold, color=blue];
m0_423 -> m0_424  [key=0, style=solid];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_422  [key=2, style=dotted];
m0_424 -> m0_424  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_425 -> m0_423  [key=0, style=bold, color=blue];
m0_528 -> m0_529  [key=0, style=solid];
m0_528 -> m0_530  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_528 -> m0_533  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_529 -> m0_530  [key=0, style=solid];
m0_530 -> m0_531  [key=0, style=solid];
m0_530 -> m0_532  [key=0, style=solid];
m0_533 -> m0_534  [key=0, style=solid];
m0_533 -> m0_527  [key=2, style=dotted];
m0_533 -> m0_536  [key=1, style=dashed, color=darkseagreen4, label="out T"];
m0_531 -> m0_536  [key=0, style=solid];
m0_532 -> m0_533  [key=0, style=solid];
m0_532 -> m0_519  [key=2, style=dotted];
m0_534 -> m0_536  [key=0, style=solid];
m0_535 -> m0_536  [key=0, style=solid];
m0_536 -> m0_528  [key=0, style=bold, color=blue];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_260  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_258 -> m0_261  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_258 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_258 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_261  [key=0, style=solid];
m0_260 -> m0_265  [key=0, style=solid];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_257  [key=2, style=dotted];
m0_261 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label=rounded];
m0_261 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label=rounded];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_264  [key=0, style=solid];
m0_262 -> m0_266  [key=2, style=dotted];
m0_263 -> m0_262  [key=0, style=solid];
m0_263 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label=rounded];
m0_263 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label=rounded];
m0_264 -> m0_265  [key=0, style=solid];
m0_265 -> m0_258  [key=0, style=bold, color=blue];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_129  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_124 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_124 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_124 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_125 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_125 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=length];
m0_129 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=length];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_132  [key=0, style=solid];
m0_130 -> m0_147  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=isNegative];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_136 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=ch];
m0_136 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=ch];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=decimalPlaces];
m0_126 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=decimalPlaces];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_141 -> m0_143  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_141 -> m0_144  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=lo];
m0_144 -> m0_145  [key=0, style=solid];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=hasDecimals];
m0_142 -> m0_135  [key=0, style=solid];
m0_142 -> m0_142  [key=1, style=dashed, color=darkseagreen4, label=decimalPlaces];
m0_142 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=decimalPlaces];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_148  [key=2, style=dotted];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_130  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_128 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_128 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_128 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_128 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_128 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_131 -> m0_130  [key=0, style=solid];
m0_131 -> m0_131  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_131 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_131 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_131 -> m0_135  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_131 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_134  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_134 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=index];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_143  [key=0, style=solid];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_135  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_140  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_143  [key=0, style=solid];
m0_140 -> m0_147  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=hasDecimals];
m0_139 -> m0_135  [key=0, style=solid];
m0_139 -> m0_145  [key=1, style=dashed, color=darkseagreen4, label=decimalPlaces];
m0_146 -> m0_124  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Concurrent.ConcurrentQueue<T>"];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_18  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=2, style=dotted];
m0_19 -> m0_16  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_50  [key=2, style=dotted];
m0_43 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=crypt];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_37  [key=2, style=dotted];
m0_45 -> m0_51  [key=2, style=dotted];
m0_45 -> m0_52  [key=2, style=dotted];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_35  [key=2, style=dotted];
m0_44 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=hash];
m0_44 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=hash];
m0_47 -> m0_46  [key=0, style=solid];
m0_47 -> m0_39  [key=2, style=dotted];
m0_47 -> m0_40  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_41  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=0, style=solid];
m0_49 -> m0_42  [key=0, style=bold, color=blue];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_234 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_237  [key=0, style=solid];
m0_236 -> m0_238  [key=0, style=solid];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_239  [key=2, style=dotted];
m0_237 -> m0_240  [key=2, style=dotted];
m0_237 -> m0_241  [key=2, style=dotted];
m0_237 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_238 -> m0_234  [key=0, style=bold, color=blue];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_317 -> m0_322  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_320  [key=0, style=solid];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_322  [key=0, style=solid];
m0_322 -> m0_323  [key=0, style=solid];
m0_322 -> m0_324  [key=0, style=solid];
m0_319 -> m0_325  [key=0, style=solid];
m0_321 -> m0_325  [key=0, style=solid];
m0_323 -> m0_325  [key=0, style=solid];
m0_324 -> m0_325  [key=0, style=solid];
m0_325 -> m0_317  [key=0, style=bold, color=blue];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_118  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_115 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_118  [key=0, style=solid];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_117 -> m0_121  [key=0, style=solid];
m0_119 -> m0_121  [key=0, style=solid];
m0_121 -> m0_115  [key=0, style=bold, color=blue];
m0_338 -> m0_339  [key=0, style=solid];
m0_338 -> m0_340  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_338 -> m0_341  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=name];
m0_339 -> m0_344  [key=1, style=dashed, color=darkseagreen4, label=name];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_344  [key=0, style=solid];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_346  [key=2, style=dotted];
m0_341 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=genericArguments];
m0_343 -> m0_344  [key=0, style=solid];
m0_343 -> m0_347  [key=2, style=dotted];
m0_343 -> m0_348  [key=2, style=dotted];
m0_343 -> m0_349  [key=2, style=dotted];
m0_343 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=name];
m0_343 -> m0_350  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_344 -> m0_345  [key=0, style=solid];
m0_342 -> m0_343  [key=0, style=solid];
m0_345 -> m0_338  [key=0, style=bold, color=blue];
m0_461 -> m0_462  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_57 -> m0_58  [key=0, style=solid];
m0_59 -> m0_57  [key=0, style=bold, color=blue];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_68  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_64  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_75  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=TKey];
m0_65 -> m0_66  [key=0, style=solid];
m0_67 -> m0_65  [key=0, style=bold, color=blue];
m0_71 -> m0_69  [key=0, style=bold, color=blue];
m0_72 -> m0_73  [key=0, style=solid];
m0_74 -> m0_72  [key=0, style=bold, color=blue];
m0_350 -> m0_351  [key=0, style=solid];
m0_351 -> m0_352  [key=0, style=solid];
m0_351 -> m0_353  [key=2, style=dotted];
m0_352 -> m0_350  [key=0, style=bold, color=blue];
m0_462 -> m0_463  [key=0, style=solid];
m0_462 -> m0_464  [key=2, style=dotted];
m0_463 -> m0_461  [key=0, style=bold, color=blue];
m0_506 -> m0_507  [key=0, style=solid];
m0_506 -> m0_508  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_506 -> m0_509  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_506 -> m0_510  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_506 -> m0_512  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_506 -> m0_516  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_507 -> m0_508  [key=0, style=solid];
m0_507 -> m0_519  [key=2, style=dotted];
m0_508 -> m0_509  [key=0, style=solid];
m0_508 -> m0_510  [key=0, style=solid];
m0_508 -> m0_520  [key=2, style=dotted];
m0_509 -> m0_518  [key=0, style=solid];
m0_509 -> m0_521  [key=2, style=dotted];
m0_509 -> m0_522  [key=2, style=dotted];
m0_510 -> m0_511  [key=0, style=solid];
m0_510 -> m0_522  [key=2, style=dotted];
m0_510 -> m0_517  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_512 -> m0_513  [key=0, style=solid];
m0_512 -> m0_524  [key=2, style=dotted];
m0_512 -> m0_514  [key=1, style=dashed, color=darkseagreen4, label=pythonType];
m0_512 -> m0_515  [key=1, style=dashed, color=darkseagreen4, label=pythonType];
m0_516 -> m0_517  [key=0, style=solid];
m0_516 -> m0_527  [key=2, style=dotted];
m0_516 -> m0_522  [key=2, style=dotted];
m0_511 -> m0_512  [key=0, style=solid];
m0_511 -> m0_517  [key=0, style=solid];
m0_511 -> m0_523  [key=2, style=dotted];
m0_517 -> m0_518  [key=0, style=solid];
m0_513 -> m0_514  [key=0, style=solid];
m0_513 -> m0_515  [key=0, style=solid];
m0_513 -> m0_525  [key=2, style=dotted];
m0_514 -> m0_517  [key=0, style=solid];
m0_514 -> m0_522  [key=2, style=dotted];
m0_515 -> m0_516  [key=0, style=solid];
m0_515 -> m0_526  [key=2, style=dotted];
m0_518 -> m0_506  [key=0, style=bold, color=blue];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_269  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_267 -> m0_270  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_267 -> m0_271  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_267 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_268 -> m0_269  [key=0, style=solid];
m0_268 -> m0_270  [key=0, style=solid];
m0_269 -> m0_274  [key=0, style=solid];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_275  [key=2, style=dotted];
m0_270 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=rounded];
m0_270 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label=rounded];
m0_271 -> m0_272  [key=0, style=solid];
m0_271 -> m0_273  [key=0, style=solid];
m0_271 -> m0_266  [key=2, style=dotted];
m0_272 -> m0_271  [key=0, style=solid];
m0_272 -> m0_275  [key=2, style=dotted];
m0_272 -> m0_272  [key=1, style=dashed, color=darkseagreen4, label=rounded];
m0_272 -> m0_273  [key=1, style=dashed, color=darkseagreen4, label=rounded];
m0_273 -> m0_274  [key=0, style=solid];
m0_274 -> m0_267  [key=0, style=bold, color=blue];
m0_430 -> m0_431  [key=0, style=solid];
m0_430 -> m0_432  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
m0_431 -> m0_432  [key=0, style=solid];
m0_431 -> m0_36  [key=2, style=dotted];
m0_432 -> m0_433  [key=0, style=solid];
m0_432 -> m0_434  [key=2, style=dotted];
m0_433 -> m0_430  [key=0, style=bold, color=blue];
m0_242 -> m0_243  [key=0, style=solid];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_234  [key=2, style=dotted];
m0_244 -> m0_242  [key=0, style=bold, color=blue];
m0_456 -> m0_457  [key=0, style=solid];
m0_456 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_457 -> m0_458  [key=0, style=solid];
m0_457 -> m0_459  [key=2, style=dotted];
m0_457 -> m0_460  [key=2, style=dotted];
m0_457 -> m0_461  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_458 -> m0_456  [key=0, style=bold, color=blue];
m0_205 -> m0_206  [key=0, style=solid];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_208  [key=2, style=dotted];
m0_206 -> m0_93  [key=2, style=dotted];
m0_207 -> m0_205  [key=0, style=bold, color=blue];
m0_212 -> m0_213  [key=0, style=solid];
m0_213 -> m0_214  [key=0, style=solid];
m0_213 -> m0_219  [key=2, style=dotted];
m0_213 -> m0_184  [key=2, style=dotted];
m0_213 -> m0_215  [key=1, style=dashed, color=darkseagreen4, label=ext];
m0_213 -> m0_217  [key=1, style=dashed, color=darkseagreen4, label=ext];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_220  [key=2, style=dotted];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_217  [key=0, style=solid];
m0_215 -> m0_221  [key=2, style=dotted];
m0_217 -> m0_218  [key=0, style=solid];
m0_216 -> m0_217  [key=0, style=solid];
m0_218 -> m0_212  [key=0, style=bold, color=blue];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_152  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_149 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_150 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_155  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_153 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label=value];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_151 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_155 -> m0_156  [key=0, style=solid];
m0_154 -> m0_152  [key=0, style=solid];
m0_154 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_156 -> m0_149  [key=0, style=bold, color=blue];
m0_419 -> m0_420  [key=0, style=solid];
m0_420 -> m0_421  [key=0, style=solid];
m0_420 -> m0_422  [key=2, style=dotted];
m0_421 -> m0_419  [key=0, style=bold, color=blue];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=TKey];
m0_60 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TKey, TValue, TValue>"];
m0_60 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TKey, TValue, TValue>"];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_64  [key=2, style=dotted];
m0_61 -> m0_56  [key=2, style=dotted];
m0_61 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_60  [key=0, style=bold, color=blue];
m0_470 -> m0_471  [key=0, style=solid];
m0_470 -> m0_473  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_470 -> m0_475  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_470 -> m0_478  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_470 -> m0_481  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_470 -> m0_488  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_470 -> m0_489  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_470 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_470 -> m0_492  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m0_470 -> m0_493  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m0_471 -> m0_472  [key=0, style=solid];
m0_473 -> m0_474  [key=0, style=solid];
m0_473 -> m0_477  [key=0, style=solid];
m0_473 -> m0_480  [key=0, style=solid];
m0_473 -> m0_484  [key=0, style=solid];
m0_473 -> m0_490  [key=0, style=solid];
m0_475 -> m0_476  [key=0, style=solid];
m0_478 -> m0_479  [key=0, style=solid];
m0_481 -> m0_482  [key=0, style=solid];
m0_481 -> m0_483  [key=1, style=dashed, color=darkseagreen4, label=stopLimitOrder];
m0_488 -> m0_489  [key=0, style=solid];
m0_488 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m0_489 -> m0_491  [key=0, style=solid];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_496  [key=2, style=dotted];
m0_491 -> m0_493  [key=1, style=dashed, color=darkseagreen4, label=submitOrderRequest];
m0_492 -> m0_493  [key=0, style=solid];
m0_492 -> m0_497  [key=2, style=dotted];
m0_493 -> m0_494  [key=0, style=solid];
m0_493 -> m0_498  [key=2, style=dotted];
m0_472 -> m0_473  [key=0, style=solid];
m0_474 -> m0_475  [key=0, style=solid];
m0_477 -> m0_478  [key=0, style=solid];
m0_480 -> m0_481  [key=0, style=solid];
m0_484 -> m0_485  [key=0, style=solid];
m0_490 -> m0_494  [key=0, style=solid];
m0_490 -> m0_495  [key=2, style=dotted];
m0_476 -> m0_491  [key=0, style=solid];
m0_479 -> m0_491  [key=0, style=solid];
m0_482 -> m0_483  [key=0, style=solid];
m0_483 -> m0_491  [key=0, style=solid];
m0_485 -> m0_486  [key=0, style=solid];
m0_486 -> m0_487  [key=0, style=solid];
m0_487 -> m0_488  [key=0, style=solid];
m0_494 -> m0_470  [key=0, style=bold, color=blue];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_98 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_101  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_104  [key=2, style=dotted];
m0_101 -> m0_94  [key=2, style=dotted];
m0_101 -> m0_95  [key=2, style=dotted];
m0_101 -> m0_96  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_105  [key=2, style=dotted];
m0_100 -> m0_103  [key=0, style=solid];
m0_103 -> m0_98  [key=0, style=bold, color=blue];
m0_308 -> m0_309  [key=0, style=solid];
m0_309 -> m0_310  [key=0, style=solid];
m0_310 -> m0_308  [key=0, style=bold, color=blue];
m0_222 -> m0_223  [key=0, style=solid];
m0_222 -> m0_225  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_223 -> m0_224  [key=0, style=solid];
m0_223 -> m0_230  [key=2, style=dotted];
m0_223 -> m0_227  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_223 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label=stream];
m0_225 -> m0_226  [key=0, style=solid];
m0_225 -> m0_232  [key=2, style=dotted];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_231  [key=2, style=dotted];
m0_224 -> m0_226  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_227 -> m0_228  [key=0, style=solid];
m0_228 -> m0_229  [key=0, style=solid];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_233  [key=2, style=dotted];
m0_229 -> m0_222  [key=0, style=bold, color=blue];
m0_245 -> m0_246  [key=0, style=solid];
m0_245 -> m0_247  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_245 -> m0_248  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_248  [key=0, style=solid];
m0_247 -> m0_249  [key=0, style=solid];
m0_248 -> m0_249  [key=0, style=solid];
m0_248 -> m0_250  [key=2, style=dotted];
m0_248 -> m0_248  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_249 -> m0_245  [key=0, style=bold, color=blue];
m0_106 -> m0_107  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_113  [key=2, style=dotted];
m0_107 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_107 -> m0_109  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_107 -> m0_110  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_110  [key=0, style=solid];
m0_109 -> m0_112  [key=0, style=solid];
m0_109 -> m0_105  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_114  [key=2, style=dotted];
m0_112 -> m0_106  [key=0, style=bold, color=blue];
m0_302 -> m0_303  [key=0, style=solid];
m0_302 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_302 -> m0_305  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_305  [key=0, style=solid];
m0_304 -> m0_306  [key=0, style=solid];
m0_304 -> m0_294  [key=2, style=dotted];
m0_304 -> m0_295  [key=2, style=dotted];
m0_304 -> m0_307  [key=2, style=dotted];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_294  [key=2, style=dotted];
m0_305 -> m0_298  [key=2, style=dotted];
m0_305 -> m0_307  [key=2, style=dotted];
m0_306 -> m0_302  [key=0, style=bold, color=blue];
m0_499 -> m0_500  [key=0, style=solid];
m0_499 -> m0_501  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Concurrent.IProducerConsumerCollection<T>"];
m0_499 -> m0_502  [key=1, style=dashed, color=darkseagreen4, label="System.Action<T>"];
m0_500 -> m0_501  [key=0, style=solid];
m0_501 -> m0_502  [key=0, style=solid];
m0_501 -> m0_503  [key=0, style=solid];
m0_501 -> m0_504  [key=2, style=dotted];
m0_502 -> m0_501  [key=0, style=solid];
m0_502 -> m0_505  [key=2, style=dotted];
m0_503 -> m0_499  [key=0, style=bold, color=blue];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_253  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_251 -> m0_254  [key=1, style=dashed, color=darkseagreen4, label=DateTimeZone];
m0_252 -> m0_253  [key=0, style=solid];
m0_252 -> m0_256  [key=2, style=dotted];
m0_253 -> m0_254  [key=0, style=solid];
m0_253 -> m0_257  [key=2, style=dotted];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_256  [key=2, style=dotted];
m0_255 -> m0_251  [key=0, style=bold, color=blue];
m0_299 -> m0_300  [key=0, style=solid];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_256  [key=2, style=dotted];
m0_301 -> m0_299  [key=0, style=bold, color=blue];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_167  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_165 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_165 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_165 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_165 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_166 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_166 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_166 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_166 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_166 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_181  [key=2, style=dotted];
m0_167 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=csv];
m0_167 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=csv];
m0_167 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label=csv];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_176  [key=0, style=solid];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_175  [key=0, style=solid];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_182  [key=2, style=dotted];
m0_173 -> d191  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_184  [key=2, style=dotted];
m0_178 -> d191  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_173  [key=0, style=solid];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_178  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_168 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_168 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_168 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_179 -> m0_180  [key=0, style=solid];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_174 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_174 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_175 -> m0_169  [key=0, style=solid];
m0_175 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_180 -> m0_165  [key=0, style=bold, color=blue];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_35  [key=2, style=dotted];
m0_28 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_28 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=builder];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_37  [key=2, style=dotted];
m0_30 -> m0_38  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_36  [key=2, style=dotted];
m0_32 -> m0_31  [key=0, style=solid];
m0_32 -> m0_39  [key=2, style=dotted];
m0_32 -> m0_40  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_41  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=0, style=solid];
m0_34 -> m0_27  [key=0, style=bold, color=blue];
m0_326 -> m0_327  [key=0, style=solid];
m0_326 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_326 -> m0_330  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_326 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_326 -> m0_332  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_326 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_327 -> m0_328  [key=0, style=solid];
m0_327 -> m0_335  [key=0, style=solid];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_331  [key=0, style=solid];
m0_330 -> m0_332  [key=0, style=solid];
m0_330 -> m0_337  [key=2, style=dotted];
m0_331 -> m0_332  [key=0, style=solid];
m0_332 -> m0_333  [key=0, style=solid];
m0_332 -> m0_334  [key=0, style=solid];
m0_334 -> m0_327  [key=0, style=solid];
m0_334 -> m0_334  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_328 -> m0_329  [key=0, style=solid];
m0_335 -> m0_336  [key=0, style=solid];
m0_333 -> m0_336  [key=0, style=solid];
m0_336 -> m0_326  [key=0, style=bold, color=blue];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_447  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_445 -> m0_449  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_445 -> m0_450  [key=1, style=dashed, color=darkseagreen4, label=char];
m0_446 -> m0_447  [key=0, style=solid];
m0_446 -> m0_454  [key=2, style=dotted];
m0_446 -> m0_449  [key=1, style=dashed, color=darkseagreen4, label=startIndex];
m0_447 -> m0_448  [key=0, style=solid];
m0_447 -> m0_455  [key=2, style=dotted];
m0_447 -> m0_449  [key=1, style=dashed, color=darkseagreen4, label=length];
m0_449 -> m0_450  [key=0, style=solid];
m0_449 -> m0_182  [key=2, style=dotted];
m0_449 -> m0_449  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_449 -> m0_451  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_450 -> m0_451  [key=0, style=solid];
m0_450 -> m0_454  [key=2, style=dotted];
m0_448 -> m0_449  [key=0, style=solid];
m0_448 -> m0_452  [key=0, style=solid];
m0_452 -> m0_453  [key=0, style=solid];
m0_451 -> m0_453  [key=0, style=solid];
m0_451 -> m0_184  [key=2, style=dotted];
m0_451 -> m0_204  [key=2, style=dotted];
m0_453 -> m0_445  [key=0, style=bold, color=blue];
m0_426 -> m0_427  [key=0, style=solid];
m0_427 -> m0_428  [key=0, style=solid];
m0_427 -> m0_429  [key=2, style=dotted];
m0_427 -> m0_427  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m0_428 -> m0_426  [key=0, style=bold, color=blue];
m0_465 -> m0_466  [key=0, style=solid];
m0_466 -> m0_467  [key=0, style=solid];
m0_466 -> m0_468  [key=2, style=dotted];
m0_466 -> m0_469  [key=2, style=dotted];
m0_467 -> m0_465  [key=0, style=bold, color=blue];
m0_398 -> m0_399  [key=0, style=solid];
m0_399 -> m0_400  [key=0, style=solid];
m0_399 -> m0_401  [key=2, style=dotted];
m0_400 -> m0_398  [key=0, style=bold, color=blue];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_90  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_87 -> m0_91  [key=1, style=dashed, color=darkseagreen4, label=double];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_90  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_93  [key=2, style=dotted];
m0_90 -> m0_94  [key=2, style=dotted];
m0_90 -> m0_95  [key=2, style=dotted];
m0_90 -> m0_96  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_97  [key=2, style=dotted];
m0_89 -> m0_92  [key=0, style=solid];
m0_92 -> m0_87  [key=0, style=bold, color=blue];
m0_566 -> m0_567  [key=0, style=solid];
m0_566 -> m0_568  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_566 -> m0_569  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_566 -> m0_571  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_567 -> m0_568  [key=0, style=solid];
m0_568 -> m0_569  [key=0, style=solid];
m0_568 -> m0_570  [key=0, style=solid];
m0_568 -> m0_573  [key=2, style=dotted];
m0_569 -> m0_572  [key=0, style=solid];
m0_569 -> m0_574  [key=2, style=dotted];
m0_569 -> m0_401  [key=2, style=dotted];
m0_569 -> m0_575  [key=2, style=dotted];
m0_571 -> m0_572  [key=0, style=solid];
m0_571 -> m0_560  [key=2, style=dotted];
m0_571 -> m0_576  [key=2, style=dotted];
m0_570 -> m0_571  [key=0, style=solid];
m0_570 -> m0_519  [key=2, style=dotted];
m0_572 -> m0_566  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=bytes];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=2, style=dotted];
m0_11 -> m0_15  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_9  [key=0, style=bold, color=blue];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<TKey, TCollection>"];
m0_76 -> m0_80  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<TKey, TCollection>"];
m0_76 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=TElement];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_81  [key=0, style=solid];
m0_78 -> m0_83  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_85  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_86  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_84  [key=2, style=dotted];
m0_79 -> m0_81  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_82 -> m0_76  [key=0, style=bold, color=blue];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_376  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_374 -> m0_378  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_374 -> m0_380  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_374 -> m0_382  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_374 -> m0_384  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_374 -> m0_386  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_374 -> m0_387  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_374 -> m0_389  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_374 -> m0_391  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_374 -> m0_393  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m0_375 -> m0_376  [key=0, style=solid];
m0_375 -> m0_387  [key=0, style=solid];
m0_376 -> m0_377  [key=0, style=solid];
m0_376 -> m0_378  [key=0, style=solid];
m0_378 -> m0_379  [key=0, style=solid];
m0_378 -> m0_380  [key=0, style=solid];
m0_380 -> m0_381  [key=0, style=solid];
m0_380 -> m0_382  [key=0, style=solid];
m0_382 -> m0_383  [key=0, style=solid];
m0_382 -> m0_384  [key=0, style=solid];
m0_384 -> m0_385  [key=0, style=solid];
m0_384 -> m0_386  [key=0, style=solid];
m0_386 -> m0_396  [key=0, style=solid];
m0_386 -> m0_397  [key=2, style=dotted];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_389  [key=0, style=solid];
m0_389 -> m0_390  [key=0, style=solid];
m0_389 -> m0_391  [key=0, style=solid];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> m0_393  [key=0, style=solid];
m0_393 -> m0_394  [key=0, style=solid];
m0_393 -> m0_395  [key=0, style=solid];
m0_377 -> m0_396  [key=0, style=solid];
m0_379 -> m0_396  [key=0, style=solid];
m0_381 -> m0_396  [key=0, style=solid];
m0_383 -> m0_396  [key=0, style=solid];
m0_385 -> m0_396  [key=0, style=solid];
m0_388 -> m0_396  [key=0, style=solid];
m0_390 -> m0_396  [key=0, style=solid];
m0_392 -> m0_396  [key=0, style=solid];
m0_394 -> m0_396  [key=0, style=solid];
m0_395 -> m0_396  [key=0, style=solid];
m0_396 -> m0_374  [key=0, style=bold, color=blue];
m0_402 -> m0_403  [key=0, style=solid];
m0_402 -> m0_404  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_402 -> m0_405  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_402 -> m0_406  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_402 -> m0_407  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_402 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_402 -> m0_411  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_403 -> m0_404  [key=0, style=solid];
m0_403 -> m0_405  [key=0, style=solid];
m0_404 -> m0_412  [key=0, style=solid];
m0_404 -> m0_413  [key=2, style=dotted];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_407  [key=0, style=solid];
m0_405 -> m0_414  [key=2, style=dotted];
m0_406 -> m0_412  [key=0, style=solid];
m0_406 -> m0_415  [key=2, style=dotted];
m0_407 -> m0_408  [key=0, style=solid];
m0_407 -> m0_416  [key=2, style=dotted];
m0_407 -> m0_409  [key=1, style=dashed, color=darkseagreen4, label=parse];
m0_409 -> m0_410  [key=0, style=solid];
m0_409 -> m0_417  [key=2, style=dotted];
m0_411 -> m0_412  [key=0, style=solid];
m0_411 -> m0_418  [key=2, style=dotted];
m0_408 -> m0_409  [key=0, style=solid];
m0_408 -> m0_411  [key=0, style=solid];
m0_410 -> m0_412  [key=0, style=solid];
m0_412 -> m0_402  [key=0, style=bold, color=blue];
m0_435 -> m0_436  [key=0, style=solid];
m0_435 -> m0_437  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_435 -> m0_439  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_435 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_436 -> m0_437  [key=0, style=solid];
m0_436 -> m0_442  [key=2, style=dotted];
m0_437 -> m0_438  [key=0, style=solid];
m0_437 -> m0_443  [key=2, style=dotted];
m0_439 -> m0_438  [key=0, style=solid];
m0_439 -> m0_444  [key=2, style=dotted];
m0_439 -> m0_439  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_439 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_440 -> m0_441  [key=0, style=solid];
m0_438 -> m0_439  [key=0, style=solid];
m0_438 -> m0_440  [key=0, style=solid];
m0_441 -> m0_435  [key=0, style=bold, color=blue];
m0_113 -> m0_122  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_123 -> m0_113  [key=0, style=bold, color=blue];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_190  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_185 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_185 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_185 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_185 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_181  [key=2, style=dotted];
m0_186 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=csv];
m0_186 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=csv];
m0_186 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=csv];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_199  [key=0, style=solid];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_194  [key=0, style=solid];
m0_191 -> m0_198  [key=0, style=solid];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_182  [key=2, style=dotted];
m0_196 -> m0_203  [key=2, style=dotted];
m0_196 -> d191  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_201  [key=0, style=solid];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_184  [key=2, style=dotted];
m0_200 -> m0_204  [key=2, style=dotted];
m0_200 -> d191  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_187 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_187 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_201 -> m0_202  [key=0, style=solid];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=textDataField];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_189 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_189 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_189 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_193 -> m0_198  [key=0, style=solid];
m0_193 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=textDataField];
m0_193 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=textDataField];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_197 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=last];
m0_198 -> m0_190  [key=0, style=solid];
m0_198 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_192 -> m0_193  [key=0, style=solid];
m0_194 -> m0_195  [key=0, style=solid];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_198  [key=0, style=solid];
m0_202 -> m0_185  [key=0, style=bold, color=blue];
m0_577 -> m0_578  [key=0, style=solid];
m0_577 -> m0_585  [key=0, style=bold, color=crimson];
m0_577 -> m0_588  [key=0, style=bold, color=crimson];
m0_577 -> m0_583  [key=1, style=dashed, color=darkseagreen4, label=int];
m0_578 -> m0_579  [key=0, style=solid];
m0_578 -> m0_590  [key=2, style=dotted];
m0_578 -> m0_580  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m0_578 -> m0_582  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m0_578 -> m0_584  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m0_578 -> m0_586  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m0_585 -> m0_586  [key=0, style=solid];
m0_588 -> m0_589  [key=0, style=solid];
m0_583 -> m0_584  [key=0, style=solid];
m0_583 -> m0_585  [key=0, style=solid];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_581  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_579 -> m0_583  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_579 -> m0_584  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_579 -> m0_585  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_579 -> m0_587  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_579 -> m0_588  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_580 -> m0_581  [key=0, style=solid];
m0_580 -> m0_587  [key=0, style=solid];
m0_580 -> m0_591  [key=2, style=dotted];
m0_582 -> m0_580  [key=0, style=solid];
m0_582 -> m0_220  [key=2, style=dotted];
m0_582 -> m0_587  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_582 -> m0_588  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_584 -> m0_580  [key=0, style=solid];
m0_584 -> d191  [key=2, style=dotted];
m0_586 -> m0_580  [key=0, style=solid];
m0_586 -> m0_220  [key=2, style=dotted];
m0_586 -> m0_587  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_586 -> m0_588  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_581 -> m0_582  [key=0, style=solid];
m0_581 -> m0_583  [key=0, style=solid];
m0_587 -> m0_588  [key=0, style=solid];
m0_587 -> m0_589  [key=0, style=solid];
m0_589 -> m0_577  [key=0, style=bold, color=blue];
m0_354 -> m0_355  [key=0, style=solid];
m0_355 -> m0_356  [key=0, style=solid];
m0_355 -> m0_358  [key=0, style=solid];
m0_355 -> m0_360  [key=0, style=solid];
m0_355 -> m0_362  [key=0, style=solid];
m0_355 -> m0_364  [key=0, style=solid];
m0_355 -> m0_366  [key=0, style=solid];
m0_356 -> m0_357  [key=0, style=solid];
m0_358 -> m0_359  [key=0, style=solid];
m0_360 -> m0_361  [key=0, style=solid];
m0_362 -> m0_363  [key=0, style=solid];
m0_364 -> m0_365  [key=0, style=solid];
m0_366 -> m0_367  [key=0, style=solid];
m0_366 -> m0_373  [key=2, style=dotted];
m0_357 -> m0_367  [key=0, style=solid];
m0_357 -> m0_368  [key=2, style=dotted];
m0_359 -> m0_367  [key=0, style=solid];
m0_359 -> m0_369  [key=2, style=dotted];
m0_361 -> m0_367  [key=0, style=solid];
m0_361 -> m0_370  [key=2, style=dotted];
m0_363 -> m0_367  [key=0, style=solid];
m0_363 -> m0_371  [key=2, style=dotted];
m0_365 -> m0_367  [key=0, style=solid];
m0_365 -> m0_372  [key=2, style=dotted];
m0_367 -> m0_354  [key=0, style=bold, color=blue];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label="System.Timers.Timer"];
m0_312 -> m0_313  [key=0, style=solid];
m0_312 -> m0_315  [key=2, style=dotted];
m0_313 -> m0_314  [key=0, style=solid];
m0_313 -> m0_316  [key=2, style=dotted];
m0_314 -> m0_311  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_25 -> m0_21  [key=0, style=bold, color=blue];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_288  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_286 -> m0_289  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_286 -> m0_290  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_286 -> m0_291  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m0_287 -> m0_288  [key=0, style=solid];
m0_287 -> m0_289  [key=0, style=solid];
m0_287 -> m0_293  [key=2, style=dotted];
m0_288 -> m0_292  [key=0, style=solid];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_291  [key=0, style=solid];
m0_290 -> m0_292  [key=0, style=solid];
m0_290 -> m0_294  [key=2, style=dotted];
m0_290 -> m0_295  [key=2, style=dotted];
m0_290 -> m0_296  [key=2, style=dotted];
m0_290 -> m0_297  [key=2, style=dotted];
m0_291 -> m0_292  [key=0, style=solid];
m0_291 -> m0_294  [key=2, style=dotted];
m0_291 -> m0_298  [key=2, style=dotted];
m0_291 -> m0_296  [key=2, style=dotted];
m0_291 -> m0_297  [key=2, style=dotted];
m0_292 -> m0_286  [key=0, style=bold, color=blue];
m0_276 -> m0_277  [key=0, style=solid];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_279  [key=2, style=dotted];
m0_277 -> m0_280  [key=2, style=dotted];
m0_278 -> m0_276  [key=0, style=bold, color=blue];
m0_537 -> m0_538  [key=0, style=solid];
m0_537 -> m0_542  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_537 -> m0_552  [key=1, style=dashed, color=darkseagreen4, label=PyObject];
m0_538 -> m0_539  [key=0, style=solid];
m0_538 -> m0_540  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_538 -> m0_546  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_538 -> m0_553  [key=1, style=dashed, color=darkseagreen4, label=type];
m0_542 -> m0_543  [key=0, style=solid];
m0_542 -> m0_544  [key=0, style=solid];
m0_552 -> m0_553  [key=0, style=solid];
m0_552 -> m0_563  [key=2, style=dotted];
m0_539 -> m0_540  [key=0, style=solid];
m0_539 -> m0_541  [key=0, style=solid];
m0_539 -> m0_414  [key=2, style=dotted];
m0_540 -> m0_558  [key=0, style=solid];
m0_540 -> m0_560  [key=2, style=dotted];
m0_546 -> m0_547  [key=0, style=solid];
m0_546 -> m0_346  [key=2, style=dotted];
m0_546 -> m0_548  [key=1, style=dashed, color=darkseagreen4, label=types];
m0_546 -> m0_550  [key=1, style=dashed, color=darkseagreen4, label=types];
m0_553 -> m0_554  [key=0, style=solid];
m0_553 -> m0_454  [key=2, style=dotted];
m0_553 -> m0_182  [key=2, style=dotted];
m0_541 -> m0_542  [key=0, style=solid];
m0_543 -> m0_558  [key=0, style=solid];
m0_544 -> m0_545  [key=0, style=solid];
m0_544 -> m0_549  [key=1, style=dashed, color=darkseagreen4, label=code];
m0_544 -> m0_554  [key=1, style=dashed, color=darkseagreen4, label=code];
m0_545 -> m0_546  [key=0, style=solid];
m0_545 -> m0_561  [key=2, style=dotted];
m0_545 -> m0_550  [key=1, style=dashed, color=darkseagreen4, label=locals];
m0_545 -> m0_552  [key=1, style=dashed, color=darkseagreen4, label=locals];
m0_545 -> m0_555  [key=1, style=dashed, color=darkseagreen4, label=locals];
m0_545 -> m0_556  [key=1, style=dashed, color=darkseagreen4, label=locals];
m0_549 -> m0_550  [key=0, style=solid];
m0_549 -> m0_549  [key=1, style=dashed, color=darkseagreen4, label=code];
m0_549 -> m0_554  [key=1, style=dashed, color=darkseagreen4, label=code];
m0_554 -> m0_555  [key=0, style=solid];
m0_554 -> m0_184  [key=2, style=dotted];
m0_554 -> m0_554  [key=1, style=dashed, color=darkseagreen4, label=code];
m0_550 -> m0_551  [key=0, style=solid];
m0_550 -> m0_562  [key=2, style=dotted];
m0_550 -> m0_563  [key=2, style=dotted];
m0_555 -> m0_556  [key=0, style=solid];
m0_555 -> m0_564  [key=2, style=dotted];
m0_556 -> m0_557  [key=0, style=solid];
m0_556 -> m0_565  [key=2, style=dotted];
m0_556 -> m0_527  [key=2, style=dotted];
m0_556 -> m0_558  [key=1, style=dashed, color=darkseagreen4, label="out T"];
m0_547 -> m0_548  [key=0, style=solid];
m0_547 -> m0_549  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_547 -> m0_550  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_547 -> m0_551  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_548 -> m0_549  [key=0, style=solid];
m0_548 -> m0_552  [key=0, style=solid];
m0_551 -> m0_548  [key=0, style=solid];
m0_551 -> m0_551  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_557 -> m0_558  [key=0, style=solid];
m0_559 -> m0_558  [key=0, style=solid];
m0_558 -> m0_537  [key=0, style=bold, color=blue];
m0_592 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=V];
m0_593 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=TKey];
m0_594 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TKey, TValue>"];
m0_595 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TKey, TValue, TValue>"];
m0_595 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TKey, TValue, TValue>"];
m0_596 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label=TKey];
m0_597 -> m0_73  [key=1, style=dashed, color=darkseagreen4, label="System.Lazy<TValue>"];
m0_598 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_57 -> m3_79  [key=0, style=solid];
m3_57 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_57 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_57 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_57 -> m3_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_57 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_57 -> m3_25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m3_79 -> m3_80  [key=0, style=solid];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_84  [key=0, style=solid];
m3_80 -> m3_77  [key=2, style=dotted];
m3_80 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label=queued];
m3_81 -> m3_82  [key=0, style=solid];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_85  [key=0, style=solid];
m3_82 -> m3_86  [key=2, style=dotted];
m3_83 -> m3_85  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> d184  [key=2, style=dotted];
m3_85 -> m3_57  [key=0, style=bold, color=blue];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.AccountEvent"];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=2, style=dotted];
m3_19 -> m3_22  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_15 -> m3_13  [key=0, style=bold, color=blue];
m3_20 -> m3_17  [key=0, style=bold, color=blue];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_48  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_22  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_29  [key=0, style=solid];
m3_26 -> m3_51  [key=2, style=dotted];
m3_26 -> m3_30  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_26 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_26 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_26 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_26 -> m3_34  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_26 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_26 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_26 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_26 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_27 -> m3_28  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_34  [key=0, style=solid];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> d184  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_24  [key=0, style=solid];
m3_32 -> m3_54  [key=2, style=dotted];
m3_33 -> m3_24  [key=0, style=solid];
m3_33 -> d184  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_37  [key=0, style=solid];
m3_34 -> m3_39  [key=0, style=solid];
m3_34 -> m3_41  [key=0, style=solid];
m3_36 -> m3_47  [key=0, style=solid];
m3_36 -> m3_55  [key=2, style=dotted];
m3_38 -> m3_47  [key=0, style=solid];
m3_38 -> m3_56  [key=2, style=dotted];
m3_40 -> m3_47  [key=0, style=solid];
m3_40 -> m3_57  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> d184  [key=2, style=dotted];
m3_28 -> m3_24  [key=0, style=solid];
m3_28 -> m3_52  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_43 -> m3_44  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_46  [key=0, style=solid];
m3_47 -> m3_24  [key=0, style=solid];
m3_47 -> m3_58  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_50 -> m3_23  [key=0, style=bold, color=blue];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_62 -> m3_60  [key=0, style=bold, color=blue];
m3_56 -> m3_70  [key=0, style=solid];
m3_56 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_56 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_56 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_56 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_56 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_56 -> m3_25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m3_70 -> m3_71  [key=0, style=solid];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_75  [key=0, style=solid];
m3_71 -> m3_77  [key=2, style=dotted];
m3_71 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label=queued];
m3_72 -> m3_73  [key=0, style=solid];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_76  [key=0, style=solid];
m3_73 -> m3_78  [key=2, style=dotted];
m3_74 -> m3_76  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> d184  [key=2, style=dotted];
m3_76 -> m3_56  [key=0, style=bold, color=blue];
m3_58 -> m3_59  [key=0, style=solid];
m3_59 -> m3_58  [key=0, style=bold, color=blue];
m3_55 -> m3_63  [key=0, style=solid];
m3_55 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_55 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_55 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m3_55 -> m3_25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.Order order"];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_67  [key=0, style=solid];
m3_63 -> m3_54  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_66  [key=0, style=solid];
m3_64 -> m3_69  [key=2, style=dotted];
m3_65 -> m3_68  [key=0, style=solid];
m3_66 -> m3_68  [key=0, style=solid];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> d184  [key=2, style=dotted];
m3_68 -> m3_55  [key=0, style=bold, color=blue];
m3_16 -> m3_87  [key=0, style=solid];
m3_16 -> m3_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_16 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_16 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_16 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_16 -> m3_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_16 -> m3_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_16 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_16 -> m3_4  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderEvent fill"];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_100  [key=2, style=dotted];
m3_87 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label=order];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> d184  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_94  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_101  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_99  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_102  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_99  [key=0, style=solid];
m3_96 -> m3_103  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_91  [key=0, style=solid];
m3_90 -> m3_99  [key=0, style=solid];
m3_97 -> m3_98  [key=0, style=solid];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_104  [key=2, style=dotted];
m3_99 -> m3_16  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m3_0 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m3_0 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m3_0 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m3_0 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m3_0 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.AccountEvent"];
m3_5 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.AccountEvent"];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_2 -> m3_11  [key=0, style=solid];
m3_2 -> m3_12  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m3_6 -> m3_7  [key=0, style=solid];
m3_11 -> m3_0  [key=0, style=bold, color=blue];
m3_105 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_105 -> m3_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.BrokerageTransactionHandler"];
m3_106 -> m3_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m4_21 -> m4_22  [key=0, style=solid, color=red];
m4_21 -> m4_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionManager"];
m4_21 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionManager"];
m4_21 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionManager"];
m4_21 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionManager"];
m4_21 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionManager"];
m4_21 -> m4_50  [key=1, style=dashed, color=red, label="QuantConnect.Securities.SecurityManager"];
m4_22 -> m4_23  [key=0, style=solid, color=red];
m4_22 -> m4_26  [key=0, style=solid, color=red];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=0, style=solid, color=red];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_42  [key=0, style=solid];
m4_31 -> m4_31  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label=config];
m4_32 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label=config];
m4_32 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label=config];
m4_32 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=config];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_55  [key=2, style=dotted];
m4_43 -> m4_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_43 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=minimumResolution];
m4_49 -> m4_50  [key=0, style=solid, color=red];
m4_49 -> m4_56  [key=2, style=dotted];
m4_50 -> m4_51  [key=0, style=solid, color=red];
m4_50 -> m4_57  [key=2, style=dotted, color=red];
m4_23 -> m4_24  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_25 -> m4_53  [key=0, style=solid];
m4_27 -> m4_53  [key=0, style=solid];
m4_27 -> m4_54  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid, color=red];
m4_28 -> m4_34  [key=1, style=dashed, color=red, label=normal];
m4_28 -> m4_47  [key=1, style=dashed, color=red, label=normal];
m4_29 -> m4_30  [key=0, style=solid, color=red];
m4_29 -> m4_37  [key=1, style=dashed, color=red, label=invert];
m4_29 -> m4_47  [key=1, style=dashed, color=red, label=invert];
m4_29 -> m4_48  [key=1, style=dashed, color=red, label=invert];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_37  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_46  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_30 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_41  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_41 -> m4_31  [key=0, style=solid];
m4_41 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label=currencyPairs];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_31  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_36 -> m4_53  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_40 -> m4_53  [key=0, style=solid];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_52  [key=0, style=solid, color=red];
m4_46 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m4_46 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m4_46 -> m4_50  [key=1, style=dashed, color=red, label=symbol];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=objectType];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=isTradeBar];
m4_52 -> m4_53  [key=0, style=solid, color=red];
m4_52 -> m4_7  [key=2, style=dotted, color=red];
m4_52 -> m4_58  [key=2, style=dotted, color=red];
m4_51 -> m4_53  [key=0, style=solid];
m4_53 -> m4_21  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m4_0 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m4_0 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_8  [key=2, style=dotted];
m4_2 -> m4_6  [key=0, style=solid];
m4_2 -> m4_7  [key=2, style=dotted];
m4_6 -> m4_0  [key=0, style=bold, color=blue];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>"];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=0, style=solid];
m4_13 -> m4_20  [key=2, style=dotted];
m4_13 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label=realTimePrice];
m4_11 -> m4_19  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_14 -> m4_19  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=rate];
m4_15 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=rate];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_18  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=rate];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_9  [key=0, style=bold, color=blue];
m4_59 -> m4_60  [key=0, style=solid];
m4_60 -> m4_61  [key=0, style=solid];
m4_61 -> m4_59  [key=0, style=bold, color=blue];
m4_62 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_22  [key=1, style=dashed, color=red, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_28  [key=1, style=dashed, color=red, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_29  [key=1, style=dashed, color=red, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_50  [key=1, style=dashed, color=red, label="QuantConnect.Securities.Cash"];
m4_62 -> m4_52  [key=1, style=dashed, color=red, label="QuantConnect.Securities.Cash"];
m5_264 -> m5_265  [key=0, style=solid];
m5_265 -> m5_266  [key=0, style=solid];
m5_265 -> m5_30  [key=2, style=dotted];
m5_265 -> m5_267  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_265 -> m5_269  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_265 -> m5_270  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_265 -> m5_274  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_266 -> m5_267  [key=0, style=solid];
m5_266 -> m5_37  [key=2, style=dotted];
m5_267 -> m5_268  [key=0, style=solid];
m5_267 -> m5_38  [key=2, style=dotted];
m5_267 -> m5_272  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_267 -> m5_273  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_269 -> m5_270  [key=0, style=solid];
m5_269 -> m5_31  [key=2, style=dotted];
m5_269 -> m5_192  [key=2, style=dotted];
m5_269 -> m5_33  [key=2, style=dotted];
m5_269 -> m5_34  [key=2, style=dotted];
m5_269 -> m5_36  [key=2, style=dotted];
m5_270 -> m5_271  [key=0, style=solid];
m5_270 -> m5_249  [key=2, style=dotted];
m5_274 -> m5_275  [key=0, style=solid];
m5_274 -> m5_28  [key=2, style=dotted];
m5_268 -> m5_269  [key=0, style=solid];
m5_268 -> m5_262  [key=2, style=dotted];
m5_272 -> m5_273  [key=0, style=solid];
m5_272 -> m5_201  [key=2, style=dotted];
m5_273 -> m5_274  [key=0, style=solid];
m5_273 -> m5_28  [key=2, style=dotted];
m5_271 -> m5_272  [key=0, style=solid];
m5_271 -> m5_263  [key=2, style=dotted];
m5_275 -> m5_264  [key=0, style=bold, color=blue];
m5_69 -> m5_70  [key=0, style=solid];
m5_69 -> m5_39  [key=2, style=dotted];
m5_0 -> m5_1  [key=0, style=solid, color=green];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label=fillsFile];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=equityFile];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_24  [key=2, style=dotted];
m5_3 -> m5_25  [key=2, style=dotted];
m5_3 -> m5_26  [key=2, style=dotted];
m5_3 -> m5_27  [key=2, style=dotted];
m5_3 -> m5_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_3 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=fills];
m5_3 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=fills];
m5_3 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=fills];
m5_4 -> m5_5  [key=0, style=solid, color=green];
m5_4 -> m5_24  [key=2, style=dotted];
m5_4 -> m5_25  [key=2, style=dotted];
m5_4 -> m5_26  [key=2, style=dotted];
m5_4 -> m5_27  [key=2, style=dotted];
m5_4 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_4 -> m5_13  [key=1, style=dashed, color=red, label=equity];
m5_4 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_4 -> m5_7  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid, color=green];
m5_5 -> m5_28  [key=2, style=dotted];
m5_5 -> m5_8  [key=2, style=dotted, color=green];
m5_5 -> d185  [key=2, style=dotted, color=green];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_23  [key=0, style=solid];
m5_15 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=fill];
m5_16 -> m5_8  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid, color=red];
m5_13 -> m5_39  [key=2, style=dotted, color=red];
m5_13 -> m5_10  [key=0, style=bold, color=blue];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_28  [key=2, style=dotted];
m5_21 -> m5_20  [key=0, style=solid, color=green];
m5_21 -> m5_23  [key=2, style=dotted, color=green];
m5_6 -> m5_7  [key=0, style=solid, color=red];
m5_6 -> m5_29  [key=2, style=dotted];
m5_6 -> m5_8  [key=1, style=dashed, color=red, label=subscriptions];
m5_6 -> m5_3  [key=0, style=bold, color=blue];
m5_7 -> m5_8  [key=0, style=solid, color=red];
m5_7 -> m5_30  [key=2, style=dotted, color=red];
m5_7 -> m5_10  [key=1, style=dashed, color=red, label=securities];
m5_7 -> m5_11  [key=1, style=dashed, color=red, label=securities];
m5_7 -> m5_12  [key=1, style=dashed, color=red, label=securities];
m5_8 -> m5_9  [key=0, style=solid, color=red];
m5_8 -> m5_31  [key=2, style=dotted, color=red];
m5_8 -> m5_32  [key=2, style=dotted, color=red];
m5_8 -> m5_33  [key=2, style=dotted, color=red];
m5_8 -> m5_34  [key=2, style=dotted, color=red];
m5_8 -> m5_10  [key=1, style=dashed, color=red, label=security];
m5_8 -> m5_19  [key=1, style=dashed, color=red, label=security];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_36  [key=2, style=dotted];
m5_10 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<int, System.Collections.Generic.List<QuantConnect.Data.BaseData>>"];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_37  [key=2, style=dotted];
m5_11 -> m5_13  [key=0, style=solid];
m5_12 -> m5_13  [key=0, style=solid, color=red];
m5_12 -> m5_38  [key=2, style=dotted];
m5_12 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_12 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_12 -> m5_11  [key=0, style=solid];
m5_12 -> m5_14  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid, color=red];
m5_9 -> m5_35  [key=2, style=dotted, color=red];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_43  [key=2, style=dotted];
m5_19 -> m5_44  [key=2, style=dotted];
m5_19 -> m5_21  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityManager"];
m5_20 -> m5_21  [key=0, style=solid, color=green];
m5_20 -> m5_45  [key=2, style=dotted];
m5_20 -> m5_22  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_14 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_14 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_14 -> m5_21  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_14 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_40  [key=2, style=dotted];
m5_17 -> m5_19  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_17 -> d185  [key=2, style=dotted];
m5_22 -> m5_15  [key=0, style=solid];
m5_22 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_22 -> m5_19  [key=0, style=bold, color=blue];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_41  [key=2, style=dotted];
m5_18 -> m5_42  [key=2, style=dotted];
m5_18 -> m5_15  [key=0, style=bold, color=blue];
m5_23 -> m5_0  [key=0, style=bold, color=blue];
m5_46 -> m5_47  [key=0, style=solid];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label=mchCash];
m5_73 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=mchCash];
m5_36 -> m5_37  [key=0, style=solid];
m5_37 -> d185  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_38 -> m5_36  [key=0, style=bold, color=blue];
m5_27 -> m5_28  [key=0, style=solid, color=green];
m5_30 -> m5_31  [key=0, style=solid, color=green];
m5_30 -> m5_24  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal ConvertToAccountCurrency"];
m5_31 -> m5_32  [key=0, style=solid, color=green];
m5_31 -> m5_24  [key=2, style=dotted, color=green];
m5_32 -> m5_30  [key=0, style=bold, color=blue];
m5_35 -> m5_33  [key=0, style=bold, color=blue];
m5_54 -> m5_55  [key=0, style=solid];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_49  [key=2, style=dotted];
m5_47 -> m5_50  [key=2, style=dotted];
m5_48 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>"];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_46  [key=2, style=dotted];
m5_49 -> m5_47  [key=0, style=bold, color=blue];
m5_43 -> m5_44  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_44 -> m5_46  [key=2, style=dotted];
m5_45 -> m5_43  [key=0, style=bold, color=blue];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_53  [key=2, style=dotted];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_54  [key=2, style=dotted];
m5_52 -> m5_50  [key=0, style=bold, color=blue];
m5_53 -> m5_51  [key=0, style=bold, color=blue];
m5_119 -> m5_120  [key=0, style=solid];
m5_122 -> m5_123  [key=0, style=solid];
m5_125 -> m5_126  [key=0, style=solid];
m5_128 -> m5_129  [key=0, style=solid];
m5_120 -> m5_121  [key=0, style=solid];
m5_120 -> m5_49  [key=2, style=dotted];
m5_120 -> m5_50  [key=2, style=dotted];
m5_121 -> m5_119  [key=0, style=bold, color=blue];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_54  [key=2, style=dotted];
m5_124 -> m5_122  [key=0, style=bold, color=blue];
m5_126 -> m5_127  [key=0, style=solid];
m5_126 -> m5_54  [key=2, style=dotted];
m5_127 -> m5_125  [key=0, style=bold, color=blue];
m5_129 -> m5_130  [key=0, style=solid];
m5_129 -> m5_54  [key=2, style=dotted];
m5_130 -> m5_128  [key=0, style=bold, color=blue];
m5_377 -> m5_378  [key=0, style=solid];
m5_377 -> m5_379  [key=2, style=dotted];
m5_376 -> m5_377  [key=0, style=solid];
m5_378 -> m5_376  [key=0, style=bold, color=blue];
m5_384 -> m5_385  [key=0, style=solid];
m5_385 -> m5_386  [key=0, style=solid];
m5_386 -> m5_384  [key=0, style=bold, color=blue];
m5_395 -> m5_396  [key=0, style=solid];
m5_396 -> m5_397  [key=0, style=solid];
m5_397 -> m5_395  [key=0, style=bold, color=blue];
m5_276 -> m5_277  [key=0, style=solid];
m5_277 -> m5_278  [key=0, style=solid];
m5_277 -> m5_30  [key=2, style=dotted];
m5_277 -> m5_279  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_277 -> m5_281  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_277 -> m5_282  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_277 -> m5_284  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_277 -> m5_287  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_278 -> m5_279  [key=0, style=solid];
m5_278 -> m5_37  [key=2, style=dotted];
m5_279 -> m5_280  [key=0, style=solid];
m5_279 -> m5_38  [key=2, style=dotted];
m5_279 -> m5_285  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_279 -> m5_286  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_281 -> m5_282  [key=0, style=solid];
m5_281 -> m5_31  [key=2, style=dotted];
m5_281 -> m5_192  [key=2, style=dotted];
m5_281 -> m5_33  [key=2, style=dotted];
m5_281 -> m5_34  [key=2, style=dotted];
m5_281 -> m5_36  [key=2, style=dotted];
m5_282 -> m5_283  [key=0, style=solid];
m5_282 -> m5_249  [key=2, style=dotted];
m5_284 -> m5_285  [key=0, style=solid];
m5_284 -> m5_28  [key=2, style=dotted];
m5_287 -> m5_288  [key=0, style=solid];
m5_287 -> m5_28  [key=2, style=dotted];
m5_280 -> m5_281  [key=0, style=solid];
m5_280 -> m5_262  [key=2, style=dotted];
m5_285 -> m5_286  [key=0, style=solid];
m5_285 -> m5_201  [key=2, style=dotted];
m5_286 -> m5_287  [key=0, style=solid];
m5_286 -> m5_28  [key=2, style=dotted];
m5_283 -> m5_284  [key=0, style=solid];
m5_283 -> m5_263  [key=2, style=dotted];
m5_283 -> m5_285  [key=1, style=dashed, color=darkseagreen4, label=fill];
m5_288 -> m5_276  [key=0, style=bold, color=blue];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_108  [key=2, style=dotted];
m5_70 -> m5_73  [key=3, color=darkorchid, style=bold, label="Property variable QuantConnect.Securities.Cash this[]"];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_73  [key=2, style=dotted];
m5_71 -> m5_108  [key=2, style=dotted];
m5_72 -> m5_70  [key=0, style=bold, color=blue];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label=jwbCash];
m5_72 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=jwbCash];
m5_387 -> m5_388  [key=0, style=solid];
m5_387 -> m5_389  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_388 -> m5_389  [key=0, style=solid];
m5_389 -> m5_390  [key=0, style=solid];
m5_389 -> m5_371  [key=2, style=dotted];
m5_390 -> m5_391  [key=0, style=solid];
m5_391 -> m5_387  [key=0, style=bold, color=blue];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_29  [key=2, style=dotted];
m5_65 -> m5_75  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m5_65 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m5_65 -> m5_79  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m5_65 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_57  [key=2, style=dotted];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label=fillsFile];
m5_56 -> m5_54  [key=0, style=bold, color=blue];
m5_57 -> m5_58  [key=0, style=solid];
m5_57 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=equityFile];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_24  [key=2, style=dotted];
m5_60 -> m5_25  [key=2, style=dotted];
m5_60 -> m5_26  [key=2, style=dotted];
m5_60 -> m5_27  [key=2, style=dotted];
m5_60 -> m5_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_60 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=fills];
m5_60 -> m5_89  [key=1, style=dashed, color=darkseagreen4, label=fills];
m5_60 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=fills];
m5_60 -> m5_58  [key=0, style=bold, color=blue];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_62  [key=1, style=dashed, color=darkseagreen4, label=mchQuantityFile];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_24  [key=2, style=dotted];
m5_61 -> m5_25  [key=2, style=dotted];
m5_61 -> m5_26  [key=2, style=dotted];
m5_61 -> m5_27  [key=2, style=dotted];
m5_61 -> m5_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_61 -> m5_64  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_61 -> m5_69  [key=1, style=dashed, color=darkseagreen4, label=equity];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label=jwbQuantityFile];
m5_59 -> m5_61  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_24  [key=2, style=dotted];
m5_62 -> m5_25  [key=2, style=dotted];
m5_62 -> m5_26  [key=2, style=dotted];
m5_62 -> m5_27  [key=2, style=dotted];
m5_62 -> m5_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_62 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label=mchQuantity];
m5_62 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label=mchQuantity];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_24  [key=2, style=dotted];
m5_63 -> m5_25  [key=2, style=dotted];
m5_63 -> m5_26  [key=2, style=dotted];
m5_63 -> m5_27  [key=2, style=dotted];
m5_63 -> m5_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_63 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=jwbQuantity];
m5_63 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label=jwbQuantity];
m5_63 -> m5_65  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_28  [key=2, style=dotted];
m5_64 -> m5_62  [key=0, style=bold, color=blue];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_107  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_102  [key=1, style=dashed, color=darkseagreen4, label=fill];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_28  [key=2, style=dotted];
m5_105 -> m5_106  [key=0, style=solid];
m5_105 -> m5_28  [key=2, style=dotted];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_30  [key=2, style=dotted];
m5_66 -> m5_68  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_66 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_66 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_66 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_66 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_109  [key=2, style=dotted];
m5_75 -> m5_32  [key=2, style=dotted];
m5_75 -> m5_34  [key=2, style=dotted];
m5_75 -> m5_81  [key=1, style=dashed, color=darkseagreen4, label=mchJwbSecurity];
m5_75 -> m5_84  [key=1, style=dashed, color=darkseagreen4, label=mchJwbSecurity];
m5_75 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=mchJwbSecurity];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_109  [key=2, style=dotted];
m5_77 -> m5_32  [key=2, style=dotted];
m5_77 -> m5_34  [key=2, style=dotted];
m5_77 -> m5_82  [key=1, style=dashed, color=darkseagreen4, label=mchUsdSecurity];
m5_77 -> m5_86  [key=1, style=dashed, color=darkseagreen4, label=mchUsdSecurity];
m5_77 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=mchUsdSecurity];
m5_79 -> m5_80  [key=0, style=solid];
m5_79 -> m5_109  [key=2, style=dotted];
m5_79 -> m5_32  [key=2, style=dotted];
m5_79 -> m5_34  [key=2, style=dotted];
m5_79 -> m5_83  [key=1, style=dashed, color=darkseagreen4, label=usdJwbSecurity];
m5_79 -> m5_85  [key=1, style=dashed, color=darkseagreen4, label=usdJwbSecurity];
m5_79 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=usdJwbSecurity];
m5_87 -> m5_88  [key=0, style=solid];
m5_87 -> m5_112  [key=2, style=dotted];
m5_87 -> m5_113  [key=2, style=dotted];
m5_87 -> m5_114  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_37  [key=2, style=dotted];
m5_67 -> m5_69  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_38  [key=2, style=dotted];
m5_68 -> m5_70  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_68 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_68 -> m5_72  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_68 -> m5_73  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_68 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_68 -> m5_87  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_68 -> m5_102  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_68 -> m5_103  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_68 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_68 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_68 -> m5_66  [key=0, style=bold, color=blue];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_111  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_111  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_111  [key=2, style=dotted];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=usdCash];
m5_74 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label=usdCash];
m5_74 -> m5_5  [key=1, style=dashed, color=green, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_25  [key=1, style=dashed, color=green, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_26  [key=1, style=dashed, color=green, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_31  [key=1, style=dashed, color=green, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_74 -> m5_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.CashBook"];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_45  [key=2, style=dotted];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_117  [key=2, style=dotted];
m5_103 -> m5_118  [key=2, style=dotted];
m5_96 -> m5_97  [key=0, style=solid];
m5_96 -> m5_43  [key=2, style=dotted];
m5_96 -> m5_115  [key=2, style=dotted];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_43  [key=2, style=dotted];
m5_98 -> m5_115  [key=2, style=dotted];
m5_97 -> m5_98  [key=0, style=solid];
m5_97 -> m5_43  [key=2, style=dotted];
m5_97 -> m5_115  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_35  [key=2, style=dotted];
m5_81 -> m5_82  [key=0, style=solid];
m5_81 -> m5_110  [key=2, style=dotted];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_116  [key=2, style=dotted];
m5_99 -> m5_43  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_35  [key=2, style=dotted];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_110  [key=2, style=dotted];
m5_80 -> m5_81  [key=0, style=solid];
m5_80 -> m5_35  [key=2, style=dotted];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_110  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_88 -> m5_90  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_88 -> m5_91  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_88 -> m5_92  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_88 -> m5_93  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_88 -> m5_94  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_88 -> m5_103  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_88 -> m5_104  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_88 -> m5_105  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_88 -> m5_106  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_91 -> m5_92  [key=0, style=solid];
m5_91 -> m5_40  [key=2, style=dotted];
m5_91 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_91 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_91 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_91 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label=mchJwb];
m5_92 -> m5_96  [key=1, style=dashed, color=darkseagreen4, label=mchJwb];
m5_92 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=mchJwb];
m5_93 -> m5_94  [key=0, style=solid];
m5_93 -> m5_95  [key=1, style=dashed, color=darkseagreen4, label=mchUsd];
m5_93 -> m5_97  [key=1, style=dashed, color=darkseagreen4, label=mchUsd];
m5_93 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=mchUsd];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_98  [key=1, style=dashed, color=darkseagreen4, label=usdJwb];
m5_94 -> m5_99  [key=1, style=dashed, color=darkseagreen4, label=usdJwb];
m5_106 -> m5_89  [key=0, style=solid];
m5_106 -> m5_106  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_28  [key=2, style=dotted];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_102  [key=0, style=solid];
m5_101 -> m5_100  [key=0, style=solid];
m5_101 -> m5_44  [key=2, style=dotted];
m5_101 -> m5_101  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m5_107 -> m5_55  [key=0, style=bold, color=blue];
m5_39 -> m5_40  [key=0, style=solid];
m5_40 -> m5_41  [key=0, style=solid];
m5_40 -> m5_42  [key=2, style=dotted];
m5_41 -> m5_39  [key=0, style=bold, color=blue];
m5_29 -> m5_24  [key=0, style=bold, color=blue];
m5_24 -> m5_25  [key=0, style=solid, color=green];
m5_24 -> m5_26  [key=1, style=dashed, color=green, label=string];
m5_24 -> m5_28  [key=1, style=dashed, color=green, label=decimal];
m5_24 -> m5_30  [key=3, color=darkorchid, style=bold, label="Parameter variable string sourceCurrency"];
m5_25 -> m5_26  [key=0, style=solid, color=green];
m5_25 -> m5_27  [key=1, style=dashed, color=green, label=source];
m5_26 -> m5_27  [key=0, style=solid, color=green];
m5_28 -> m5_29  [key=0, style=solid, color=green];
m5_33 -> m5_34  [key=0, style=solid];
m5_34 -> d185  [key=2, style=dotted];
m5_34 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Cash>"];
m5_34 -> m5_35  [key=0, style=solid];
m5_200 -> m5_364  [key=0, style=solid];
m5_364 -> m5_365  [key=0, style=solid];
m5_365 -> m5_200  [key=0, style=bold, color=blue];
m5_372 -> m5_373  [key=0, style=solid];
m5_372 -> m5_377  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_373 -> m5_374  [key=0, style=solid];
m5_373 -> m5_375  [key=2, style=dotted];
m5_373 -> m5_376  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_374 -> m5_372  [key=0, style=bold, color=blue];
m5_398 -> m5_399  [key=0, style=solid];
m5_399 -> m5_400  [key=0, style=solid];
m5_399 -> m5_401  [key=2, style=dotted];
m5_400 -> m5_398  [key=0, style=bold, color=blue];
m5_380 -> m5_381  [key=0, style=solid];
m5_381 -> m5_382  [key=0, style=solid];
m5_381 -> m5_383  [key=2, style=dotted];
m5_382 -> m5_380  [key=0, style=bold, color=blue];
m5_131 -> m5_132  [key=0, style=solid];
m5_132 -> m5_133  [key=0, style=solid];
m5_132 -> m5_143  [key=1, style=dashed, color=darkseagreen4, label=leverage];
m5_132 -> m5_179  [key=1, style=dashed, color=darkseagreen4, label=leverage];
m5_133 -> m5_134  [key=0, style=solid];
m5_133 -> m5_139  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_148  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_156  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_157  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_164  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_165  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_166  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_173  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_175  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_180  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_133 -> m5_181  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m5_143 -> m5_144  [key=0, style=solid];
m5_143 -> m5_35  [key=2, style=dotted];
m5_179 -> m5_180  [key=0, style=solid];
m5_179 -> m5_35  [key=2, style=dotted];
m5_134 -> m5_135  [key=0, style=solid];
m5_134 -> m5_30  [key=2, style=dotted];
m5_134 -> m5_138  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_134 -> m5_141  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_134 -> m5_142  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_139 -> m5_140  [key=0, style=solid];
m5_139 -> m5_191  [key=2, style=dotted];
m5_147 -> m5_148  [key=0, style=solid];
m5_147 -> m5_194  [key=2, style=dotted];
m5_147 -> m5_149  [key=1, style=dashed, color=darkseagreen4, label=order];
m5_147 -> m5_150  [key=1, style=dashed, color=darkseagreen4, label=order];
m5_148 -> m5_149  [key=0, style=solid];
m5_148 -> m5_195  [key=2, style=dotted];
m5_148 -> m5_153  [key=1, style=dashed, color=darkseagreen4, label=fill];
m5_148 -> m5_154  [key=1, style=dashed, color=darkseagreen4, label=fill];
m5_156 -> m5_157  [key=0, style=solid];
m5_156 -> m5_28  [key=2, style=dotted];
m5_157 -> m5_158  [key=0, style=solid];
m5_157 -> m5_28  [key=2, style=dotted];
m5_164 -> m5_165  [key=0, style=solid];
m5_164 -> m5_28  [key=2, style=dotted];
m5_165 -> m5_166  [key=0, style=solid];
m5_165 -> m5_28  [key=2, style=dotted];
m5_166 -> m5_167  [key=0, style=solid];
m5_166 -> m5_28  [key=2, style=dotted];
m5_173 -> m5_174  [key=0, style=solid];
m5_173 -> m5_28  [key=2, style=dotted];
m5_174 -> m5_175  [key=0, style=solid];
m5_174 -> m5_28  [key=2, style=dotted];
m5_175 -> m5_176  [key=0, style=solid];
m5_175 -> m5_28  [key=2, style=dotted];
m5_180 -> m5_181  [key=0, style=solid];
m5_180 -> m5_194  [key=2, style=dotted];
m5_181 -> m5_182  [key=0, style=solid];
m5_181 -> m5_195  [key=2, style=dotted];
m5_135 -> m5_136  [key=0, style=solid];
m5_135 -> m5_37  [key=2, style=dotted];
m5_135 -> m5_137  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m5_135 -> m5_138  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m5_135 -> m5_159  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m5_135 -> m5_168  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m5_138 -> m5_139  [key=0, style=solid];
m5_138 -> m5_38  [key=2, style=dotted];
m5_138 -> m5_153  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_154  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_155  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_156  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_157  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_159  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_164  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_165  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_166  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_168  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_173  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_174  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_175  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_177  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_182  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_183  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_184  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_138 -> m5_187  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_141 -> m5_142  [key=0, style=solid];
m5_141 -> m5_31  [key=2, style=dotted];
m5_141 -> m5_33  [key=2, style=dotted];
m5_141 -> m5_34  [key=2, style=dotted];
m5_141 -> m5_111  [key=2, style=dotted];
m5_142 -> m5_143  [key=0, style=solid];
m5_142 -> m5_146  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_142 -> m5_150  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_142 -> m5_163  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_142 -> m5_172  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_142 -> m5_179  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_142 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_142 -> m5_187  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_136 -> m5_137  [key=0, style=solid];
m5_136 -> m5_189  [key=2, style=dotted];
m5_136 -> m5_149  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m5_136 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m5_137 -> m5_138  [key=0, style=solid];
m5_137 -> m5_190  [key=2, style=dotted];
m5_159 -> m5_160  [key=0, style=solid];
m5_159 -> m5_203  [key=2, style=dotted];
m5_168 -> m5_169  [key=0, style=solid];
m5_168 -> m5_203  [key=2, style=dotted];
m5_149 -> m5_150  [key=0, style=solid];
m5_149 -> m5_196  [key=2, style=dotted];
m5_152 -> m5_153  [key=0, style=solid];
m5_152 -> m5_199  [key=2, style=dotted];
m5_152 -> m5_200  [key=2, style=dotted];
m5_153 -> m5_154  [key=0, style=solid];
m5_153 -> m5_28  [key=2, style=dotted];
m5_154 -> m5_155  [key=0, style=solid];
m5_154 -> m5_201  [key=2, style=dotted];
m5_155 -> m5_156  [key=0, style=solid];
m5_155 -> m5_28  [key=2, style=dotted];
m5_177 -> m5_178  [key=0, style=solid];
m5_177 -> m5_206  [key=2, style=dotted];
m5_182 -> m5_183  [key=0, style=solid];
m5_182 -> m5_201  [key=2, style=dotted];
m5_183 -> m5_184  [key=0, style=solid];
m5_183 -> m5_28  [key=2, style=dotted];
m5_184 -> m5_185  [key=0, style=solid];
m5_184 -> m5_206  [key=2, style=dotted];
m5_184 -> m5_186  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m5_184 -> m5_187  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m5_187 -> m5_188  [key=0, style=solid];
m5_187 -> m5_208  [key=2, style=dotted];
m5_140 -> m5_141  [key=0, style=solid];
m5_140 -> m5_192  [key=2, style=dotted];
m5_146 -> m5_147  [key=0, style=solid];
m5_146 -> m5_193  [key=2, style=dotted];
m5_146 -> m5_44  [key=2, style=dotted];
m5_150 -> m5_151  [key=0, style=solid];
m5_150 -> m5_197  [key=2, style=dotted];
m5_150 -> m5_152  [key=1, style=dashed, color=darkseagreen4, label=request];
m5_163 -> m5_164  [key=0, style=solid];
m5_163 -> m5_193  [key=2, style=dotted];
m5_163 -> m5_44  [key=2, style=dotted];
m5_172 -> m5_173  [key=0, style=solid];
m5_172 -> m5_193  [key=2, style=dotted];
m5_172 -> m5_44  [key=2, style=dotted];
m5_186 -> m5_187  [key=0, style=solid];
m5_186 -> m5_28  [key=2, style=dotted];
m5_144 -> m5_145  [key=0, style=solid];
m5_144 -> m5_146  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_144 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_144 -> m5_158  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_144 -> m5_161  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_145 -> m5_146  [key=0, style=solid];
m5_145 -> m5_147  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m5_145 -> m5_148  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m5_145 -> m5_158  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m5_145 -> m5_162  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m5_145 -> m5_171  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m5_145 -> m5_180  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m5_145 -> m5_181  [key=1, style=dashed, color=darkseagreen4, label=buyPrice];
m5_158 -> m5_159  [key=0, style=solid];
m5_158 -> m5_194  [key=2, style=dotted];
m5_158 -> m5_202  [key=2, style=dotted];
m5_161 -> m5_162  [key=0, style=solid];
m5_161 -> m5_40  [key=2, style=dotted];
m5_161 -> m5_161  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_161 -> m5_163  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_161 -> m5_167  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_161 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_162 -> m5_163  [key=0, style=solid];
m5_162 -> m5_167  [key=1, style=dashed, color=darkseagreen4, label=highPrice];
m5_171 -> m5_172  [key=0, style=solid];
m5_151 -> m5_152  [key=0, style=solid];
m5_151 -> m5_198  [key=2, style=dotted];
m5_160 -> m5_161  [key=0, style=solid];
m5_160 -> m5_204  [key=2, style=dotted];
m5_167 -> m5_168  [key=0, style=solid];
m5_167 -> m5_194  [key=2, style=dotted];
m5_167 -> m5_202  [key=2, style=dotted];
m5_170 -> m5_171  [key=0, style=solid];
m5_170 -> m5_40  [key=2, style=dotted];
m5_170 -> m5_170  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_170 -> m5_172  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_170 -> m5_180  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_169 -> m5_170  [key=0, style=solid];
m5_169 -> m5_205  [key=2, style=dotted];
m5_176 -> m5_177  [key=0, style=solid];
m5_178 -> m5_179  [key=0, style=solid];
m5_178 -> m5_28  [key=2, style=dotted];
m5_185 -> m5_186  [key=0, style=solid];
m5_185 -> m5_207  [key=2, style=dotted];
m5_188 -> m5_131  [key=0, style=bold, color=blue];
m5_192 -> m5_353  [key=0, style=solid];
m5_192 -> m5_354  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m5_192 -> m5_355  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m5_192 -> m5_356  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m5_192 -> m5_357  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m5_353 -> m5_354  [key=0, style=solid];
m5_353 -> m5_355  [key=0, style=solid];
m5_354 -> m5_358  [key=0, style=solid];
m5_354 -> m5_359  [key=2, style=dotted];
m5_355 -> m5_356  [key=0, style=solid];
m5_355 -> m5_357  [key=0, style=solid];
m5_356 -> m5_358  [key=0, style=solid];
m5_356 -> m5_359  [key=2, style=dotted];
m5_357 -> m5_358  [key=0, style=solid];
m5_357 -> m5_360  [key=2, style=dotted];
m5_357 -> m5_361  [key=2, style=dotted];
m5_358 -> m5_192  [key=0, style=bold, color=blue];
m5_308 -> m5_309  [key=0, style=solid];
m5_309 -> m5_310  [key=0, style=solid];
m5_309 -> m5_345  [key=2, style=dotted];
m5_309 -> m5_314  [key=1, style=dashed, color=darkseagreen4, label=securityExchangeHours];
m5_309 -> m5_338  [key=1, style=dashed, color=darkseagreen4, label=securityExchangeHours];
m5_309 -> m5_340  [key=1, style=dashed, color=darkseagreen4, label=securityExchangeHours];
m5_310 -> m5_311  [key=0, style=solid];
m5_310 -> m5_30  [key=2, style=dotted];
m5_310 -> m5_312  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_310 -> m5_314  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_310 -> m5_315  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_314 -> m5_315  [key=0, style=solid];
m5_314 -> m5_346  [key=2, style=dotted];
m5_314 -> m5_192  [key=2, style=dotted];
m5_314 -> m5_33  [key=2, style=dotted];
m5_314 -> m5_34  [key=2, style=dotted];
m5_314 -> m5_36  [key=2, style=dotted];
m5_338 -> m5_339  [key=0, style=solid];
m5_338 -> m5_351  [key=2, style=dotted];
m5_338 -> m5_340  [key=1, style=dashed, color=darkseagreen4, label=marketOpen];
m5_340 -> m5_341  [key=0, style=solid];
m5_340 -> m5_40  [key=2, style=dotted];
m5_340 -> m5_352  [key=2, style=dotted];
m5_340 -> m5_41  [key=2, style=dotted];
m5_340 -> m5_340  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m5_311 -> m5_312  [key=0, style=solid];
m5_311 -> m5_37  [key=2, style=dotted];
m5_312 -> m5_313  [key=0, style=solid];
m5_312 -> m5_38  [key=2, style=dotted];
m5_312 -> m5_318  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_319  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_323  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_325  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_326  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_330  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_332  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_333  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_335  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_336  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_337  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_341  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_342  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_312 -> m5_343  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_315 -> m5_316  [key=0, style=solid];
m5_315 -> m5_317  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_315 -> m5_321  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_315 -> m5_324  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_315 -> m5_328  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_315 -> m5_331  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_313 -> m5_314  [key=0, style=solid];
m5_313 -> m5_262  [key=2, style=dotted];
m5_318 -> m5_319  [key=0, style=solid];
m5_318 -> m5_28  [key=2, style=dotted];
m5_319 -> m5_320  [key=0, style=solid];
m5_319 -> m5_28  [key=2, style=dotted];
m5_323 -> m5_324  [key=0, style=solid];
m5_323 -> m5_201  [key=2, style=dotted];
m5_325 -> m5_326  [key=0, style=solid];
m5_325 -> m5_28  [key=2, style=dotted];
m5_326 -> m5_327  [key=0, style=solid];
m5_326 -> m5_28  [key=2, style=dotted];
m5_330 -> m5_331  [key=0, style=solid];
m5_330 -> m5_201  [key=2, style=dotted];
m5_332 -> m5_333  [key=0, style=solid];
m5_332 -> m5_28  [key=2, style=dotted];
m5_333 -> m5_334  [key=0, style=solid];
m5_333 -> m5_28  [key=2, style=dotted];
m5_335 -> m5_336  [key=0, style=solid];
m5_335 -> m5_350  [key=2, style=dotted];
m5_336 -> m5_337  [key=0, style=solid];
m5_336 -> m5_28  [key=2, style=dotted];
m5_337 -> m5_338  [key=0, style=solid];
m5_337 -> m5_28  [key=2, style=dotted];
m5_341 -> m5_342  [key=0, style=solid];
m5_341 -> m5_350  [key=2, style=dotted];
m5_342 -> m5_343  [key=0, style=solid];
m5_342 -> m5_28  [key=2, style=dotted];
m5_343 -> m5_344  [key=0, style=solid];
m5_343 -> m5_28  [key=2, style=dotted];
m5_316 -> m5_317  [key=0, style=solid];
m5_316 -> m5_347  [key=2, style=dotted];
m5_316 -> m5_348  [key=2, style=dotted];
m5_317 -> m5_318  [key=0, style=solid];
m5_317 -> m5_28  [key=2, style=dotted];
m5_321 -> m5_322  [key=0, style=solid];
m5_321 -> m5_194  [key=2, style=dotted];
m5_321 -> m5_307  [key=2, style=dotted];
m5_324 -> m5_325  [key=0, style=solid];
m5_324 -> m5_28  [key=2, style=dotted];
m5_328 -> m5_329  [key=0, style=solid];
m5_328 -> m5_194  [key=2, style=dotted];
m5_328 -> m5_307  [key=2, style=dotted];
m5_331 -> m5_332  [key=0, style=solid];
m5_331 -> m5_28  [key=2, style=dotted];
m5_320 -> m5_321  [key=0, style=solid];
m5_320 -> m5_349  [key=2, style=dotted];
m5_320 -> m5_322  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m5_320 -> m5_327  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m5_322 -> m5_323  [key=0, style=solid];
m5_322 -> m5_263  [key=2, style=dotted];
m5_327 -> m5_328  [key=0, style=solid];
m5_327 -> m5_40  [key=2, style=dotted];
m5_327 -> m5_327  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m5_327 -> m5_329  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m5_327 -> m5_334  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m5_329 -> m5_330  [key=0, style=solid];
m5_329 -> m5_263  [key=2, style=dotted];
m5_334 -> m5_335  [key=0, style=solid];
m5_334 -> m5_40  [key=2, style=dotted];
m5_334 -> m5_334  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m5_334 -> m5_338  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m5_334 -> m5_340  [key=1, style=dashed, color=darkseagreen4, label=timeUtc];
m5_339 -> m5_340  [key=0, style=solid];
m5_339 -> m5_205  [key=2, style=dotted];
m5_344 -> m5_308  [key=0, style=bold, color=blue];
m5_392 -> m5_393  [key=0, style=solid];
m5_393 -> m5_394  [key=0, style=solid];
m5_393 -> m5_383  [key=2, style=dotted];
m5_394 -> m5_392  [key=0, style=bold, color=blue];
m5_251 -> m5_252  [key=0, style=solid];
m5_252 -> m5_253  [key=0, style=solid];
m5_252 -> m5_30  [key=2, style=dotted];
m5_252 -> m5_254  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_252 -> m5_256  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_252 -> m5_260  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_253 -> m5_254  [key=0, style=solid];
m5_253 -> m5_37  [key=2, style=dotted];
m5_254 -> m5_255  [key=0, style=solid];
m5_254 -> m5_38  [key=2, style=dotted];
m5_254 -> m5_258  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_254 -> m5_259  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_256 -> m5_257  [key=0, style=solid];
m5_256 -> m5_31  [key=2, style=dotted];
m5_256 -> m5_192  [key=2, style=dotted];
m5_256 -> m5_33  [key=2, style=dotted];
m5_256 -> m5_34  [key=2, style=dotted];
m5_256 -> m5_36  [key=2, style=dotted];
m5_260 -> m5_261  [key=0, style=solid];
m5_260 -> m5_28  [key=2, style=dotted];
m5_255 -> m5_256  [key=0, style=solid];
m5_255 -> m5_262  [key=2, style=dotted];
m5_258 -> m5_259  [key=0, style=solid];
m5_258 -> m5_201  [key=2, style=dotted];
m5_259 -> m5_260  [key=0, style=solid];
m5_259 -> m5_28  [key=2, style=dotted];
m5_257 -> m5_258  [key=0, style=solid];
m5_257 -> m5_263  [key=2, style=dotted];
m5_261 -> m5_251  [key=0, style=bold, color=blue];
m5_50 -> m5_51  [key=0, style=solid];
m5_366 -> m5_367  [key=0, style=solid];
m5_366 -> m5_368  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_367 -> m5_368  [key=0, style=solid];
m5_368 -> m5_369  [key=0, style=solid];
m5_368 -> m5_371  [key=2, style=dotted];
m5_369 -> m5_370  [key=0, style=solid];
m5_370 -> m5_366  [key=0, style=bold, color=blue];
m5_196 -> m5_362  [key=0, style=solid];
m5_362 -> m5_363  [key=0, style=solid];
m5_363 -> m5_196  [key=0, style=bold, color=blue];
m5_209 -> m5_210  [key=0, style=solid];
m5_210 -> m5_211  [key=0, style=solid];
m5_210 -> m5_30  [key=2, style=dotted];
m5_210 -> m5_214  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_223  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_224  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_225  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_226  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_228  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_229  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_230  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_231  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_233  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_234  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_235  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_210 -> m5_236  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_211 -> m5_212  [key=0, style=solid];
m5_211 -> m5_37  [key=2, style=dotted];
m5_211 -> m5_213  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m5_211 -> m5_214  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m5_211 -> m5_242  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m5_211 -> m5_245  [key=1, style=dashed, color=darkseagreen4, label=transactions];
m5_214 -> m5_215  [key=0, style=solid];
m5_214 -> m5_38  [key=2, style=dotted];
m5_214 -> m5_216  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_214 -> m5_217  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_214 -> m5_218  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_214 -> m5_219  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_214 -> m5_220  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_214 -> m5_242  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_214 -> m5_245  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_223 -> m5_224  [key=0, style=solid];
m5_223 -> m5_31  [key=2, style=dotted];
m5_223 -> m5_33  [key=2, style=dotted];
m5_223 -> m5_34  [key=2, style=dotted];
m5_223 -> m5_111  [key=2, style=dotted];
m5_224 -> m5_225  [key=0, style=solid];
m5_224 -> m5_35  [key=2, style=dotted];
m5_225 -> m5_226  [key=0, style=solid];
m5_225 -> m5_249  [key=2, style=dotted];
m5_226 -> m5_227  [key=0, style=solid];
m5_226 -> m5_250  [key=2, style=dotted];
m5_226 -> m5_44  [key=2, style=dotted];
m5_228 -> m5_229  [key=0, style=solid];
m5_228 -> m5_109  [key=2, style=dotted];
m5_228 -> m5_34  [key=2, style=dotted];
m5_228 -> m5_111  [key=2, style=dotted];
m5_229 -> m5_230  [key=0, style=solid];
m5_229 -> m5_35  [key=2, style=dotted];
m5_230 -> m5_231  [key=0, style=solid];
m5_230 -> m5_249  [key=2, style=dotted];
m5_231 -> m5_232  [key=0, style=solid];
m5_231 -> m5_250  [key=2, style=dotted];
m5_231 -> m5_44  [key=2, style=dotted];
m5_233 -> m5_234  [key=0, style=solid];
m5_233 -> m5_109  [key=2, style=dotted];
m5_233 -> m5_34  [key=2, style=dotted];
m5_233 -> m5_111  [key=2, style=dotted];
m5_234 -> m5_235  [key=0, style=solid];
m5_234 -> m5_35  [key=2, style=dotted];
m5_235 -> m5_236  [key=0, style=solid];
m5_235 -> m5_249  [key=2, style=dotted];
m5_236 -> m5_237  [key=0, style=solid];
m5_236 -> m5_250  [key=2, style=dotted];
m5_236 -> m5_44  [key=2, style=dotted];
m5_212 -> m5_213  [key=0, style=solid];
m5_212 -> m5_189  [key=2, style=dotted];
m5_212 -> m5_238  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m5_212 -> m5_241  [key=1, style=dashed, color=darkseagreen4, label=orderProcessor];
m5_213 -> m5_214  [key=0, style=solid];
m5_213 -> m5_190  [key=2, style=dotted];
m5_242 -> m5_243  [key=0, style=solid];
m5_242 -> m5_203  [key=2, style=dotted];
m5_245 -> m5_246  [key=0, style=solid];
m5_245 -> m5_203  [key=2, style=dotted];
m5_238 -> m5_239  [key=0, style=solid];
m5_238 -> m5_196  [key=2, style=dotted];
m5_241 -> m5_242  [key=0, style=solid];
m5_241 -> m5_199  [key=2, style=dotted];
m5_241 -> m5_200  [key=2, style=dotted];
m5_215 -> m5_216  [key=0, style=solid];
m5_215 -> m5_191  [key=2, style=dotted];
m5_216 -> m5_217  [key=0, style=solid];
m5_216 -> m5_248  [key=2, style=dotted];
m5_217 -> m5_218  [key=0, style=solid];
m5_217 -> m5_248  [key=2, style=dotted];
m5_218 -> m5_219  [key=0, style=solid];
m5_219 -> m5_220  [key=0, style=solid];
m5_219 -> m5_233  [key=1, style=dashed, color=darkseagreen4, label=gbpCash];
m5_220 -> m5_221  [key=0, style=solid];
m5_220 -> m5_228  [key=1, style=dashed, color=darkseagreen4, label=usdCash];
m5_221 -> m5_222  [key=0, style=solid];
m5_221 -> m5_226  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_221 -> m5_231  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_221 -> m5_236  [key=1, style=dashed, color=darkseagreen4, label=time];
m5_222 -> m5_223  [key=0, style=solid];
m5_222 -> m5_192  [key=2, style=dotted];
m5_227 -> m5_228  [key=0, style=solid];
m5_227 -> m5_192  [key=2, style=dotted];
m5_232 -> m5_233  [key=0, style=solid];
m5_232 -> m5_192  [key=2, style=dotted];
m5_237 -> m5_238  [key=0, style=solid];
m5_237 -> m5_194  [key=2, style=dotted];
m5_237 -> m5_239  [key=1, style=dashed, color=darkseagreen4, label=acceptedOrder];
m5_237 -> m5_242  [key=1, style=dashed, color=darkseagreen4, label=acceptedOrder];
m5_239 -> m5_240  [key=0, style=solid];
m5_239 -> m5_197  [key=2, style=dotted];
m5_239 -> m5_241  [key=1, style=dashed, color=darkseagreen4, label=request];
m5_240 -> m5_241  [key=0, style=solid];
m5_240 -> m5_198  [key=2, style=dotted];
m5_243 -> m5_244  [key=0, style=solid];
m5_243 -> m5_205  [key=2, style=dotted];
m5_244 -> m5_245  [key=0, style=solid];
m5_244 -> m5_194  [key=2, style=dotted];
m5_246 -> m5_247  [key=0, style=solid];
m5_246 -> m5_204  [key=2, style=dotted];
m5_247 -> m5_209  [key=0, style=bold, color=blue];
m5_289 -> m5_290  [key=0, style=solid];
m5_290 -> m5_291  [key=0, style=solid];
m5_290 -> m5_30  [key=2, style=dotted];
m5_290 -> m5_292  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_290 -> m5_295  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_290 -> m5_296  [key=1, style=dashed, color=darkseagreen4, label=securities];
m5_291 -> m5_292  [key=0, style=solid];
m5_291 -> m5_37  [key=2, style=dotted];
m5_292 -> m5_293  [key=0, style=solid];
m5_292 -> m5_38  [key=2, style=dotted];
m5_292 -> m5_294  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_292 -> m5_295  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_292 -> m5_298  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_292 -> m5_301  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_292 -> m5_303  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_292 -> m5_304  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_292 -> m5_305  [key=1, style=dashed, color=darkseagreen4, label=portfolio];
m5_295 -> m5_296  [key=0, style=solid];
m5_295 -> m5_109  [key=2, style=dotted];
m5_295 -> m5_192  [key=2, style=dotted];
m5_295 -> m5_34  [key=2, style=dotted];
m5_295 -> m5_36  [key=2, style=dotted];
m5_296 -> m5_297  [key=0, style=solid];
m5_296 -> m5_299  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_296 -> m5_302  [key=1, style=dashed, color=darkseagreen4, label=security];
m5_293 -> m5_294  [key=0, style=solid];
m5_293 -> m5_262  [key=2, style=dotted];
m5_294 -> m5_295  [key=0, style=solid];
m5_294 -> m5_248  [key=2, style=dotted];
m5_298 -> m5_299  [key=0, style=solid];
m5_298 -> m5_28  [key=2, style=dotted];
m5_301 -> m5_302  [key=0, style=solid];
m5_301 -> m5_201  [key=2, style=dotted];
m5_303 -> m5_304  [key=0, style=solid];
m5_303 -> m5_28  [key=2, style=dotted];
m5_304 -> m5_305  [key=0, style=solid];
m5_304 -> m5_28  [key=2, style=dotted];
m5_305 -> m5_306  [key=0, style=solid];
m5_305 -> m5_28  [key=2, style=dotted];
m5_297 -> m5_298  [key=0, style=solid];
m5_297 -> m5_28  [key=2, style=dotted];
m5_299 -> m5_300  [key=0, style=solid];
m5_299 -> m5_194  [key=2, style=dotted];
m5_299 -> m5_307  [key=2, style=dotted];
m5_302 -> m5_303  [key=0, style=solid];
m5_302 -> m5_28  [key=2, style=dotted];
m5_300 -> m5_301  [key=0, style=solid];
m5_300 -> m5_263  [key=2, style=dotted];
m5_306 -> m5_289  [key=0, style=bold, color=blue];
m5_402 -> m5_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m5_402 -> m5_222  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m5_402 -> m5_227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m5_402 -> m5_232  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m5_402 -> m5_256  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m5_402 -> m5_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m5_402 -> m5_281  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m5_402 -> m5_295  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m5_402 -> m5_314  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests"];
m5_403 -> m5_362  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m5_403 -> m5_364  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m5_403 -> m5_368  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m5_403 -> m5_373  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m5_403 -> m5_381  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m5_403 -> m5_389  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m5_403 -> m5_393  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor"];
m5_404 -> m5_377  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_8  [key=2, style=dotted];
m6_12 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label=book];
m6_12 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=book];
m6_12 -> m6_16  [key=1, style=dashed, color=red, label=book];
m6_12 -> m6_17  [key=1, style=dashed, color=red, label=book];
m6_13 -> m6_14  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_19  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid, color=red];
m6_15 -> m6_19  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid, color=red];
m6_17 -> m6_18  [key=0, style=solid, color=red];
m6_17 -> m6_9  [key=2, style=dotted, color=red];
m6_18 -> m6_11  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_8  [key=2, style=dotted];
m6_1 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label=book];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_9  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid, color=red];
m6_3 -> m6_10  [key=2, style=dotted];
m6_3 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=cash];
m6_3 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label=cash];
m6_4 -> m6_5  [key=0, style=solid, color=red];
m6_4 -> m6_9  [key=2, style=dotted, color=red];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_9  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_9  [key=2, style=dotted];
m6_7 -> m6_0  [key=0, style=bold, color=blue];
m7_43 -> m7_22  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_4  [key=2, style=dotted];
m7_11 -> m7_9  [key=0, style=bold, color=blue];
m7_102 -> m7_103  [key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_46 -> m7_47  [key=0, style=solid];
m7_47 -> m7_45  [key=0, style=bold, color=blue];
m7_49 -> m7_50  [key=0, style=solid];
m7_50 -> m7_48  [key=0, style=bold, color=blue];
m7_72 -> m7_73  [key=0, style=solid];
m7_73 -> m7_74  [key=0, style=solid];
m7_74 -> m7_72  [key=0, style=bold, color=blue];
m7_87 -> m7_88  [key=0, style=solid];
m7_88 -> m7_89  [key=0, style=solid];
m7_89 -> m7_87  [key=0, style=bold, color=blue];
m7_103 -> m7_104  [key=0, style=solid];
m7_104 -> m7_102  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_4  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_5  [key=2, style=dotted];
m7_3 -> m7_0  [key=0, style=bold, color=blue];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m7_22 -> m7_25  [key=1, style=dashed, color=green, label=quantity];
m7_22 -> m7_22  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_25  [key=1, style=dashed, color=green, label=conversionRate];
m7_23 -> m7_23  [key=3, color=darkorchid, style=bold, label="Local variable decimal conversionRate"];
m7_24 -> m7_25  [key=0, style=solid, color=green];
m7_24 -> m7_4  [key=2, style=dotted];
m7_25 -> m7_26  [key=0, style=solid, color=green];
m7_25 -> m7_5  [key=2, style=dotted, color=green];
m7_26 -> m7_21  [key=0, style=bold, color=blue];
m7_90 -> m7_91  [key=0, style=solid];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_93  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m7_91 -> m7_22  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_23  [key=3, color=darkorchid, style=bold, label="Local variable decimal conversionRate"];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_4  [key=2, style=dotted];
m7_93 -> m7_97  [key=1, style=dashed, color=red, label=cash];
m7_93 -> m7_98  [key=1, style=dashed, color=green, label=cash];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_39  [key=2, style=dotted];
m7_94 -> m7_96  [key=1, style=dashed, color=red, label=subscriptions];
m7_94 -> m7_97  [key=1, style=dashed, color=green, label=subscriptions];
m7_94 -> m7_98  [key=1, style=dashed, color=green, label=subscriptions];
m7_97 -> m7_98  [key=0, style=solid, color=green];
m7_97 -> m7_43  [key=2, style=dotted, color=green];
m7_97 -> m7_42  [key=2, style=dotted, color=green];
m7_97 -> m7_40  [key=2, style=dotted, color=green];
m7_95 -> m7_96  [key=0, style=solid, color=red];
m7_95 -> m7_41  [key=2, style=dotted];
m7_95 -> m7_97  [key=1, style=dashed, color=red, label=securities];
m7_95 -> m7_98  [key=1, style=dashed, color=green, label=securities];
m7_96 -> m7_97  [key=0, style=solid, color=red];
m7_96 -> m7_40  [key=2, style=dotted, color=red];
m7_96 -> m7_42  [key=2, style=dotted, color=red];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_71  [key=2, style=dotted];
m7_98 -> m7_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_98 -> m7_98  [key=0, style=solid, color=green];
m7_98 -> m7_44  [key=2, style=dotted, color=green];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_101  [key=2, style=dotted];
m7_100 -> m7_90  [key=0, style=bold, color=blue];
m7_12 -> m7_13  [key=0, style=solid];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m7_13 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m7_13 -> m7_13  [key=3, color=darkorchid, style=bold, label="Local variable string symbol"];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m7_14 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m7_14 -> m7_14  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_4  [key=2, style=dotted];
m7_16 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label=cash];
m7_16 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=cash];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_5  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=conversionRate];
m7_15 -> m7_15  [key=3, color=darkorchid, style=bold, label="Local variable decimal conversionRate"];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_5  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_5  [key=2, style=dotted];
m7_20 -> m7_12  [key=0, style=bold, color=blue];
m7_75 -> m7_76  [key=0, style=solid];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_78  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m7_76 -> m7_22  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_23  [key=3, color=darkorchid, style=bold, label="Local variable decimal conversionRate"];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_4  [key=2, style=dotted];
m7_78 -> m7_82  [key=1, style=dashed, color=red, label=cash];
m7_78 -> m7_83  [key=1, style=dashed, color=green, label=cash];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_39  [key=2, style=dotted];
m7_79 -> m7_81  [key=1, style=dashed, color=red, label=subscriptions];
m7_79 -> m7_82  [key=1, style=dashed, color=green, label=subscriptions];
m7_79 -> m7_83  [key=1, style=dashed, color=green, label=subscriptions];
m7_82 -> m7_83  [key=0, style=solid, color=green];
m7_82 -> m7_43  [key=2, style=dotted, color=green];
m7_82 -> m7_42  [key=2, style=dotted, color=green];
m7_82 -> m7_40  [key=2, style=dotted, color=green];
m7_80 -> m7_81  [key=0, style=solid, color=red];
m7_80 -> m7_41  [key=2, style=dotted];
m7_80 -> m7_82  [key=1, style=dashed, color=red, label=securities];
m7_80 -> m7_83  [key=1, style=dashed, color=green, label=securities];
m7_81 -> m7_82  [key=0, style=solid, color=red];
m7_81 -> m7_40  [key=2, style=dotted, color=red];
m7_81 -> m7_42  [key=2, style=dotted, color=red];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_71  [key=2, style=dotted];
m7_83 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_83 -> m7_83  [key=0, style=solid, color=green];
m7_83 -> m7_44  [key=2, style=dotted, color=green];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_86  [key=2, style=dotted];
m7_85 -> m7_75  [key=0, style=bold, color=blue];
m7_124 -> m7_125  [key=0, style=solid];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_127  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m7_125 -> m7_22  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_23  [key=3, color=darkorchid, style=bold, label="Local variable decimal conversionRate"];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_4  [key=2, style=dotted];
m7_127 -> m7_131  [key=1, style=dashed, color=red, label=cash];
m7_127 -> m7_135  [key=1, style=dashed, color=darkseagreen4, label=cash];
m7_127 -> m7_136  [key=1, style=dashed, color=darkseagreen4, label=cash];
m7_127 -> m7_132  [key=1, style=dashed, color=green, label=cash];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_39  [key=2, style=dotted];
m7_128 -> m7_130  [key=1, style=dashed, color=red, label=subscriptions];
m7_128 -> m7_131  [key=1, style=dashed, color=green, label=subscriptions];
m7_128 -> m7_132  [key=1, style=dashed, color=green, label=subscriptions];
m7_131 -> m7_132  [key=0, style=solid, color=green];
m7_131 -> m7_43  [key=2, style=dotted, color=green];
m7_131 -> m7_42  [key=2, style=dotted, color=green];
m7_131 -> m7_40  [key=2, style=dotted, color=green];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_123  [key=2, style=dotted];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_5  [key=2, style=dotted];
m7_129 -> m7_130  [key=0, style=solid, color=red];
m7_129 -> m7_41  [key=2, style=dotted];
m7_129 -> m7_131  [key=1, style=dashed, color=red, label=securities];
m7_129 -> m7_132  [key=1, style=dashed, color=green, label=securities];
m7_130 -> m7_131  [key=0, style=solid, color=red];
m7_130 -> m7_40  [key=2, style=dotted, color=red];
m7_130 -> m7_42  [key=2, style=dotted, color=red];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_134  [key=1, style=dashed, color=darkseagreen4, label=last];
m7_132 -> m7_136  [key=1, style=dashed, color=darkseagreen4, label=last];
m7_132 -> m7_132  [key=3, color=darkorchid, style=bold, label="Local variable decimal last"];
m7_132 -> m7_44  [key=2, style=dotted, color=green];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_119  [key=2, style=dotted];
m7_133 -> m7_135  [key=1, style=dashed, color=darkseagreen4, label=data];
m7_134 -> m7_135  [key=0, style=solid];
m7_134 -> d190  [key=2, style=dotted];
m7_134 -> m7_121  [key=2, style=dotted];
m7_134 -> m7_122  [key=2, style=dotted];
m7_137 -> m7_124  [key=0, style=bold, color=blue];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_30  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m7_28 -> m7_22  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_23  [key=3, color=darkorchid, style=bold, label="Local variable decimal conversionRate"];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_4  [key=2, style=dotted];
m7_30 -> m7_35  [key=1, style=dashed, color=green, label=cash];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_39  [key=2, style=dotted];
m7_31 -> m7_35  [key=1, style=dashed, color=green, label=subscriptions];
m7_31 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m7_35 -> m7_36  [key=0, style=solid, color=green];
m7_35 -> m7_43  [key=2, style=dotted, color=red];
m7_35 -> m7_44  [key=2, style=dotted, color=green];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_40  [key=2, style=dotted];
m7_32 -> m7_34  [key=1, style=dashed, color=green, label=abcConfig];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_44  [key=2, style=dotted];
m7_36 -> m7_5  [key=2, style=dotted];
m7_36 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_33 -> m7_34  [key=0, style=solid, color=green];
m7_33 -> m7_41  [key=2, style=dotted];
m7_33 -> m7_35  [key=1, style=dashed, color=green, label=securities];
m7_33 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label=securities];
m7_34 -> m7_35  [key=0, style=solid, color=green];
m7_34 -> m7_42  [key=2, style=dotted, color=green];
m7_34 -> m7_43  [key=2, style=dotted, color=green];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_44  [key=2, style=dotted];
m7_37 -> m7_5  [key=2, style=dotted];
m7_37 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_38 -> m7_27  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_4  [key=2, style=dotted];
m7_8 -> m7_6  [key=0, style=bold, color=blue];
m7_51 -> m7_52  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_54  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m7_52 -> m7_22  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_23  [key=3, color=darkorchid, style=bold, label="Local variable decimal conversionRate"];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_4  [key=2, style=dotted];
m7_54 -> m7_57  [key=1, style=dashed, color=red, label=cash];
m7_54 -> m7_58  [key=1, style=dashed, color=green, label=cash];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_41  [key=2, style=dotted];
m7_55 -> m7_57  [key=1, style=dashed, color=red, label=securities];
m7_55 -> m7_58  [key=1, style=dashed, color=green, label=securities];
m7_57 -> m7_58  [key=0, style=solid, color=red];
m7_57 -> m7_43  [key=2, style=dotted, color=red];
m7_56 -> m7_57  [key=0, style=solid, color=red];
m7_56 -> m7_39  [key=2, style=dotted];
m7_56 -> m7_58  [key=0, style=solid, color=green];
m7_58 -> m7_58  [key=0, style=solid, color=green];
m7_58 -> m7_44  [key=2, style=dotted, color=green];
m7_58 -> m7_51  [key=0, style=bold, color=blue];
m7_105 -> m7_106  [key=0, style=solid];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_108  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m7_106 -> m7_22  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_23  [key=3, color=darkorchid, style=bold, label="Local variable decimal conversionRate"];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_4  [key=2, style=dotted];
m7_108 -> m7_112  [key=1, style=dashed, color=red, label=cash];
m7_108 -> m7_116  [key=1, style=dashed, color=darkseagreen4, label=cash];
m7_108 -> m7_117  [key=1, style=dashed, color=darkseagreen4, label=cash];
m7_108 -> m7_113  [key=1, style=dashed, color=green, label=cash];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_39  [key=2, style=dotted];
m7_109 -> m7_111  [key=1, style=dashed, color=red, label=subscriptions];
m7_109 -> m7_112  [key=1, style=dashed, color=green, label=subscriptions];
m7_109 -> m7_113  [key=1, style=dashed, color=green, label=subscriptions];
m7_112 -> m7_113  [key=0, style=solid, color=green];
m7_112 -> m7_43  [key=2, style=dotted, color=green];
m7_112 -> m7_42  [key=2, style=dotted, color=green];
m7_112 -> m7_40  [key=2, style=dotted, color=green];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_123  [key=2, style=dotted];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_5  [key=2, style=dotted];
m7_110 -> m7_111  [key=0, style=solid, color=red];
m7_110 -> m7_41  [key=2, style=dotted];
m7_110 -> m7_112  [key=1, style=dashed, color=red, label=securities];
m7_110 -> m7_113  [key=1, style=dashed, color=green, label=securities];
m7_111 -> m7_112  [key=0, style=solid, color=red];
m7_111 -> m7_40  [key=2, style=dotted, color=red];
m7_111 -> m7_42  [key=2, style=dotted, color=red];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_115  [key=1, style=dashed, color=darkseagreen4, label=last];
m7_113 -> m7_117  [key=1, style=dashed, color=darkseagreen4, label=last];
m7_113 -> m7_113  [key=3, color=darkorchid, style=bold, label="Local variable decimal last"];
m7_113 -> m7_44  [key=2, style=dotted, color=green];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_119  [key=2, style=dotted];
m7_114 -> m7_116  [key=1, style=dashed, color=darkseagreen4, label=data];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> d190  [key=2, style=dotted];
m7_115 -> m7_121  [key=2, style=dotted];
m7_115 -> m7_122  [key=2, style=dotted];
m7_118 -> m7_105  [key=0, style=bold, color=blue];
m7_59 -> m7_60  [key=0, style=solid];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_63  [key=1, style=dashed, color=darkseagreen4, label=conversionRate];
m7_61 -> m7_23  [key=3, color=darkorchid, style=bold, label="Local variable decimal conversionRate"];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_4  [key=2, style=dotted];
m7_63 -> m7_68  [key=1, style=dashed, color=red, label=cash];
m7_63 -> m7_69  [key=1, style=dashed, color=green, label=cash];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_67  [key=1, style=dashed, color=red, label=minimumResolution];
m7_62 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label=minimumResolution];
m7_62 -> m7_68  [key=1, style=dashed, color=green, label=minimumResolution];
m7_67 -> m7_68  [key=0, style=solid, color=green];
m7_67 -> m7_40  [key=2, style=dotted, color=green];
m7_67 -> m7_42  [key=2, style=dotted, color=green];
m7_67 -> m7_43  [key=2, style=dotted, color=green];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_71  [key=2, style=dotted];
m7_69 -> m7_5  [key=2, style=dotted];
m7_69 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_69 -> m7_69  [key=0, style=solid, color=green];
m7_69 -> m7_44  [key=2, style=dotted, color=green];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_39  [key=2, style=dotted];
m7_64 -> m7_66  [key=1, style=dashed, color=red, label=subscriptions];
m7_64 -> m7_67  [key=1, style=dashed, color=green, label=subscriptions];
m7_64 -> m7_68  [key=1, style=dashed, color=green, label=subscriptions];
m7_64 -> m7_69  [key=1, style=dashed, color=green, label=subscriptions];
m7_68 -> m7_69  [key=0, style=solid, color=green];
m7_68 -> m7_43  [key=2, style=dotted, color=green];
m7_68 -> m7_42  [key=2, style=dotted, color=green];
m7_68 -> m7_40  [key=2, style=dotted, color=green];
m7_65 -> m7_66  [key=0, style=solid, color=red];
m7_65 -> m7_41  [key=2, style=dotted];
m7_65 -> m7_67  [key=1, style=dashed, color=red, label=securities];
m7_65 -> m7_68  [key=1, style=dashed, color=green, label=securities];
m7_65 -> m7_69  [key=1, style=dashed, color=green, label=securities];
m7_66 -> m7_67  [key=0, style=solid, color=red];
m7_66 -> m7_40  [key=2, style=dotted, color=red];
m7_66 -> m7_42  [key=2, style=dotted, color=red];
m7_70 -> m7_59  [key=0, style=bold, color=blue];
m7_44 -> m7_22  [key=3, color=darkorchid, style=bold, label="Local variable int quantity"];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_12  [key=2, style=dotted];
m9_1 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=sma];
m9_1 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label=sma];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label=data];
m9_2 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label=data];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_15  [key=2, style=dotted];
m9_8 -> m9_16  [key=2, style=dotted];
m9_8 -> m9_17  [key=2, style=dotted];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_18  [key=2, style=dotted];
m9_9 -> m9_19  [key=2, style=dotted];
m9_9 -> m9_20  [key=2, style=dotted];
m9_9 -> m9_21  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_13  [key=2, style=dotted];
m9_3 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label=seen];
m9_3 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label=seen];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_11  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=datum];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_4 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_4 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> d191  [key=2, style=dotted];
m9_10 -> m9_5  [key=0, style=solid];
m9_10 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_11 -> m9_0  [key=0, style=bold, color=blue];
m9_34 -> m9_35  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_12  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_38  [key=2, style=dotted];
m9_37 -> m9_34  [key=0, style=bold, color=blue];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_12  [key=2, style=dotted];
m9_23 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label=sma];
m9_23 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label=sma];
m9_23 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label=sma];
m9_23 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label=sma];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_26  [key=0, style=solid];
m9_24 -> m9_30  [key=2, style=dotted];
m9_25 -> m9_24  [key=0, style=solid];
m9_25 -> m9_17  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_31  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_32  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_33  [key=2, style=dotted];
m9_29 -> m9_22  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [key=1, style=dashed, color=red, label=string];
m10_0 -> m10_6  [key=1, style=dashed, color=green, label=decimal];
m10_1 -> m10_2  [key=0, style=solid, color=red];
m10_1 -> m10_6  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid, color=green];
m10_2 -> m10_7  [key=2, style=dotted, color=red];
m10_2 -> m10_8  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid, color=green];
m10_3 -> m10_8  [key=2, style=dotted];
m10_3 -> m10_11  [key=2, style=dotted, color=green];
m10_4 -> m10_5  [key=0, style=solid, color=green];
m10_4 -> m10_9  [key=2, style=dotted, color=green];
m10_5 -> m10_0  [key=0, style=bold, color=blue];
m10_5 -> m10_6  [key=0, style=solid, color=green];
m10_5 -> m10_13  [key=2, style=dotted, color=green];
m10_6 -> m10_7  [key=0, style=solid, color=green];
m10_6 -> m10_14  [key=2, style=dotted, color=green];
m10_7 -> m10_8  [key=0, style=solid, color=green];
m10_7 -> m10_15  [key=2, style=dotted, color=green];
m10_8 -> m10_0  [key=0, style=bold, color=blue];
m10_10 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Equity.Equity"];
m10_10 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Equity.Equity"];
m10_10 -> m10_3  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Equity.Equity"];
m10_10 -> m10_4  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Equity.Equity"];
m10_10 -> m10_6  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Equity.Equity"];
m10_10 -> m10_5  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Equity.Equity"];
m10_10 -> m10_7  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Equity.Equity"];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [key=0, style=bold, color=blue];
m14_2 -> m14_3  [key=0, style=solid, color=red];
m14_3 -> m14_4  [key=0, style=solid, color=red];
m14_3 -> m14_7  [key=2, style=dotted, color=red];
m14_4 -> m14_5  [key=0, style=solid, color=red];
m14_4 -> m14_7  [key=2, style=dotted, color=red];
m14_5 -> m14_6  [key=0, style=solid, color=red];
m14_5 -> m14_7  [key=2, style=dotted, color=red];
m14_6 -> m14_2  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
m14_8 -> m14_3  [key=1, style=dashed, color=red, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage"];
m14_8 -> m14_4  [key=1, style=dashed, color=red, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage"];
m14_8 -> m14_5  [key=1, style=dashed, color=red, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage"];
m15_0 -> m15_1  [key=0, style=solid, color=green];
m15_0 -> m15_7  [key=1, style=dashed, color=green, label=decimal];
m15_0 -> m15_10  [key=1, style=dashed, color=green, label="QuantConnect.Data.SubscriptionDataConfig"];
m15_1 -> m15_2  [key=0, style=solid, color=green];
m15_2 -> m15_3  [key=0, style=solid, color=green];
m15_2 -> m15_14  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid, color=green];
m15_7 -> m15_19  [key=2, style=dotted, color=green];
m15_6 -> m15_7  [key=0, style=solid, color=green];
m15_6 -> m15_18  [key=2, style=dotted, color=green];
m15_8 -> m15_9  [key=0, style=solid, color=green];
m15_8 -> m15_20  [key=2, style=dotted, color=green];
m15_10 -> m15_11  [key=0, style=solid, color=green];
m15_10 -> m15_21  [key=2, style=dotted, color=green];
m15_10 -> m15_12  [key=1, style=dashed, color=green, label=quoteCurrencySymbol];
m15_9 -> m15_10  [key=0, style=solid, color=green];
m15_11 -> m15_12  [key=0, style=solid, color=green];
m15_12 -> m15_13  [key=0, style=solid, color=green];
m15_3 -> m15_4  [key=0, style=solid, color=green];
m15_3 -> m15_15  [key=2, style=dotted, color=green];
m15_4 -> m15_5  [key=0, style=solid, color=green];
m15_4 -> m15_16  [key=2, style=dotted, color=green];
m15_5 -> m15_6  [key=0, style=solid, color=green];
m15_5 -> m15_17  [key=2, style=dotted, color=green];
m15_13 -> m15_0  [key=0, style=bold, color=blue];
m15_21 -> m15_9  [key=3, color=green, style=bold, label="Parameter variable string quoteCurrency"];
m15_21 -> m15_22  [key=0, style=solid, color=green];
m15_21 -> m15_23  [key=1, style=dashed, color=green, label=string];
m15_21 -> m15_24  [key=1, style=dashed, color=green, label=string];
m15_21 -> m15_25  [key=1, style=dashed, color=green, label=string];
m15_22 -> m15_23  [key=0, style=solid, color=green];
m15_22 -> m15_24  [key=0, style=solid, color=green];
m15_23 -> m15_26  [key=0, style=solid, color=green];
m15_23 -> m15_27  [key=2, style=dotted, color=green];
m15_24 -> m15_25  [key=0, style=solid, color=green];
m15_24 -> m15_28  [key=2, style=dotted, color=green];
m15_24 -> m15_26  [key=1, style=dashed, color=green, label="out string"];
m15_25 -> m15_26  [key=0, style=solid, color=green];
m15_25 -> m15_29  [key=2, style=dotted, color=green];
m15_26 -> m15_21  [key=0, style=bold, color=blue];
m15_30 -> m15_1  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.Forex"];
m15_30 -> m15_7  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.Forex"];
m15_30 -> m15_3  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.Forex"];
m15_30 -> m15_4  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.Forex"];
m15_30 -> m15_5  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.Forex"];
m15_30 -> m15_6  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.Forex"];
m15_30 -> m15_8  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.Forex"];
m15_30 -> m15_11  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.Forex"];
m15_30 -> m15_12  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.Forex"];
m15_30 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Forex.Forex"];
m16_0 -> m16_1  [key=0, style=solid, color=green];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_1 -> m16_2  [key=0, style=solid, color=green];
m16_2 -> m16_0  [key=0, style=bold, color=blue];
m16_3 -> m16_4  [key=0, style=solid, color=green];
m16_3 -> m16_5  [key=3, color=green, style=bold, label="method methodReturn decimal TotalCloseProfit"];
m16_4 -> m16_5  [key=0, style=solid, color=green];
m16_4 -> m16_6  [key=0, style=solid, color=green];
m16_5 -> m16_10  [key=0, style=solid, color=green];
m16_6 -> m16_5  [key=3, color=green, style=bold, label="Local variable decimal orderFee"];
m16_6 -> m16_7  [key=0, style=solid, color=green];
m16_6 -> m16_9  [key=1, style=dashed, color=green, label=orderFee];
m16_7 -> m16_8  [key=0, style=solid, color=green];
m16_7 -> m16_9  [key=0, style=solid, color=green];
m16_9 -> m16_10  [key=0, style=solid, color=green];
m16_8 -> m16_9  [key=0, style=solid, color=green];
m16_8 -> m16_11  [key=2, style=dotted, color=green];
m16_10 -> m16_3  [key=0, style=bold, color=blue];
m16_12 -> m16_1  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.ForexHolding"];
m16_12 -> m16_4  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.ForexHolding"];
m16_12 -> m16_7  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.ForexHolding"];
m16_12 -> m16_9  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.ForexHolding"];
m16_12 -> m16_8  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Forex.ForexHolding"];
m17_29 -> m17_30  [key=0, style=solid];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_32  [key=2, style=dotted];
m17_30 -> m17_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_31 -> m17_29  [key=0, style=bold, color=blue];
m17_83 -> m17_84  [key=0, style=solid];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_40  [key=2, style=dotted];
m17_47 -> m17_48  [key=0, style=solid];
m17_47 -> m17_40  [key=2, style=dotted];
m17_33 -> m17_34  [key=0, style=solid];
m17_34 -> m17_36  [key=1, style=dashed, color=darkseagreen4, label=message];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_38  [key=2, style=dotted];
m17_34 -> m17_39  [key=2, style=dotted];
m17_35 -> m17_36  [key=0, style=solid];
m17_37 -> m17_33  [key=0, style=bold, color=blue];
m17_44 -> m17_45  [key=0, style=solid];
m17_45 -> m17_47  [key=1, style=dashed, color=darkseagreen4, label=message];
m17_45 -> m17_46  [key=0, style=solid];
m17_45 -> m17_38  [key=2, style=dotted];
m17_45 -> m17_39  [key=2, style=dotted];
m17_46 -> m17_47  [key=0, style=solid];
m17_48 -> m17_44  [key=0, style=bold, color=blue];
m17_80 -> m17_81  [key=0, style=solid];
m17_82 -> m17_80  [key=0, style=bold, color=blue];
m17_81 -> m17_82  [key=0, style=solid];
m17_84 -> m17_85  [key=0, style=solid];
m17_85 -> m17_83  [key=0, style=bold, color=blue];
m17_13 -> m17_22  [key=0, style=solid, color=green];
m17_13 -> m17_24  [key=1, style=dashed, color=green, label=OleMenuCommandService];
m17_22 -> m17_23  [key=0, style=solid, color=green];
m17_22 -> m17_18  [key=2, style=dotted, color=green];
m17_23 -> m17_24  [key=0, style=solid, color=green];
m17_23 -> m17_19  [key=2, style=dotted, color=green];
m17_23 -> m17_20  [key=2, style=dotted, color=green];
m17_24 -> m17_25  [key=0, style=solid, color=green];
m17_24 -> m17_21  [key=2, style=dotted, color=green];
m17_25 -> m17_13  [key=0, style=bold, color=blue];
m17_72 -> m17_86  [key=0, style=solid];
m17_88 -> m17_89  [key=0, style=solid];
m17_87 -> m17_88  [key=0, style=solid];
m17_87 -> d190  [key=2, style=dotted];
m17_87 -> m17_94  [key=1, style=dashed, color=darkseagreen4, label=selectedFiles];
m17_87 -> m17_95  [key=1, style=dashed, color=darkseagreen4, label=selectedFiles];
m17_89 -> m17_90  [key=0, style=solid];
m17_89 -> m17_95  [key=0, style=solid];
m17_89 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label=selectedUIHierarchyItem];
m17_86 -> m17_87  [key=0, style=solid];
m17_94 -> m17_89  [key=0, style=solid];
m17_94 -> m17_101  [key=2, style=dotted];
m17_95 -> m17_96  [key=0, style=solid];
m17_90 -> m17_89  [key=0, style=solid];
m17_90 -> m17_91  [key=0, style=solid];
m17_91 -> m17_92  [key=0, style=solid];
m17_91 -> m17_93  [key=1, style=dashed, color=darkseagreen4, label=item];
m17_93 -> m17_94  [key=0, style=solid];
m17_93 -> m17_100  [key=2, style=dotted];
m17_92 -> m17_93  [key=0, style=solid];
m17_92 -> m17_98  [key=2, style=dotted];
m17_92 -> m17_99  [key=2, style=dotted];
m17_96 -> m17_72  [key=0, style=bold, color=blue];
m17_12 -> m17_14  [key=0, style=solid, color=green];
m17_12 -> m17_16  [key=1, style=dashed, color=green, label=OleMenuCommandService];
m17_14 -> m17_15  [key=0, style=solid, color=green];
m17_14 -> m17_18  [key=2, style=dotted, color=green];
m17_15 -> m17_16  [key=0, style=solid, color=green];
m17_15 -> m17_19  [key=2, style=dotted, color=green];
m17_15 -> m17_20  [key=2, style=dotted, color=green];
m17_16 -> m17_17  [key=0, style=solid, color=green];
m17_16 -> m17_21  [key=2, style=dotted, color=green];
m17_17 -> m17_12  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid, color=green];
m17_0 -> m17_3  [key=1, style=dashed, color=green, label=Package];
m17_1 -> m17_2  [key=0, style=solid, color=green];
m17_1 -> m17_3  [key=0, style=solid, color=green];
m17_2 -> m17_9  [key=0, style=solid, color=green];
m17_2 -> m17_10  [key=2, style=dotted, color=green];
m17_3 -> m17_4  [key=0, style=solid, color=green];
m17_4 -> m17_5  [key=0, style=solid, color=green];
m17_4 -> m17_11  [key=2, style=dotted, color=green];
m17_5 -> m17_6  [key=0, style=solid, color=green];
m17_5 -> m17_11  [key=2, style=dotted, color=green];
m17_5 -> m17_7  [key=1, style=dashed, color=green, label=commandService];
m17_5 -> m17_8  [key=1, style=dashed, color=green, label=commandService];
m17_6 -> m17_7  [key=0, style=solid, color=green];
m17_6 -> m17_9  [key=0, style=solid, color=green];
m17_7 -> m17_8  [key=0, style=solid, color=green];
m17_7 -> m17_12  [key=2, style=dotted, color=green];
m17_8 -> m17_9  [key=0, style=solid, color=green];
m17_8 -> m17_13  [key=2, style=dotted, color=green];
m17_9 -> m17_0  [key=0, style=bold, color=blue];
m17_41 -> m17_42  [key=0, style=solid];
m17_42 -> m17_43  [key=0, style=solid];
m17_42 -> m17_32  [key=2, style=dotted];
m17_42 -> m17_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_43 -> m17_41  [key=0, style=bold, color=blue];
m17_26 -> m17_27  [key=0, style=solid];
m17_27 -> m17_0  [key=2, style=dotted];
m17_27 -> m17_28  [key=0, style=solid];
m17_28 -> m17_26  [key=0, style=bold, color=blue];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_54  [key=1, style=dashed, color=darkseagreen4, label=object];
m17_49 -> m17_64  [key=1, style=dashed, color=darkseagreen4, label="System.Action<string, System.Collections.Generic.List<string>>"];
m17_50 -> m17_51  [key=0, style=solid];
m17_50 -> m17_65  [key=0, style=solid];
m17_50 -> m17_66  [key=2, style=dotted];
m17_54 -> m17_55  [key=0, style=solid];
m17_54 -> m17_72  [key=2, style=dotted];
m17_54 -> m17_63  [key=1, style=dashed, color=darkseagreen4, label=files];
m17_54 -> m17_64  [key=1, style=dashed, color=darkseagreen4, label=files];
m17_56 -> m17_57  [key=0, style=solid];
m17_56 -> m17_73  [key=2, style=dotted];
m17_63 -> m17_64  [key=0, style=solid];
m17_63 -> m17_78  [key=2, style=dotted];
m17_51 -> m17_52  [key=0, style=solid];
m17_51 -> m17_67  [key=2, style=dotted];
m17_51 -> m17_68  [key=2, style=dotted];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_70  [key=2, style=dotted];
m17_53 -> m17_71  [key=2, style=dotted];
m17_53 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_53 -> m17_57  [key=1, style=dashed, color=darkseagreen4, label=projectNames];
m17_55 -> m17_56  [key=0, style=solid];
m17_55 -> m17_70  [key=2, style=dotted];
m17_55 -> m17_71  [key=2, style=dotted];
m17_55 -> m17_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_79  [key=2, style=dotted];
m17_57 -> m17_58  [key=0, style=solid];
m17_57 -> m17_74  [key=2, style=dotted];
m17_62 -> m17_63  [key=0, style=solid];
m17_62 -> m17_64  [key=1, style=dashed, color=darkseagreen4, label=selectedProjectName];
m17_62 -> m17_77  [key=2, style=dotted];
m17_52 -> m17_53  [key=0, style=solid];
m17_52 -> m17_69  [key=2, style=dotted];
m17_61 -> m17_65  [key=0, style=solid];
m17_61 -> m17_62  [key=0, style=solid];
m17_61 -> m17_76  [key=2, style=dotted];
m17_58 -> m17_58  [key=1, style=dashed, color=darkseagreen4, label=projectNameDialog];
m17_58 -> m17_59  [key=0, style=solid];
m17_59 -> m17_62  [key=1, style=dashed, color=darkseagreen4, label=projectNameDialog];
m17_59 -> m17_61  [key=1, style=dashed, color=darkseagreen4, label=projectNameDialog];
m17_59 -> m17_59  [key=1, style=dashed, color=darkseagreen4, label=projectNameDialog];
m17_59 -> m17_60  [key=0, style=solid];
m17_60 -> m17_61  [key=0, style=solid];
m17_60 -> m17_75  [key=2, style=dotted];
m17_65 -> m17_49  [key=0, style=bold, color=blue];
m17_102 -> m17_3  [key=1, style=dashed, color=green, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_4  [key=1, style=dashed, color=green, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_5  [key=1, style=dashed, color=green, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_7  [key=1, style=dashed, color=green, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_8  [key=1, style=dashed, color=green, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_15  [key=1, style=dashed, color=green, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_23  [key=1, style=dashed, color=green, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m17_102 -> m17_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand"];
m19_0 -> m19_1  [key=0, style=solid, color=green];
m19_1 -> m19_2  [key=0, style=solid, color=green];
m19_1 -> m19_3  [key=2, style=dotted, color=green];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m19_4 -> m19_1  [key=1, style=dashed, color=green, label="QuantConnect.Orders.InteractiveBrokersOrderProperties"];
m20_8 -> m20_9  [key=0, style=solid, color=green];
m20_9 -> m20_9  [key=1, style=dashed, color=green, label=subscription];
m20_9 -> m20_10  [key=0, style=solid, color=green];
m20_9 -> m20_11  [key=2, style=dotted, color=green];
m20_9 -> m20_12  [key=2, style=dotted, color=green];
m20_10 -> m20_8  [key=0, style=bold, color=blue];
m20_31 -> m20_52  [key=0, style=solid];
m20_52 -> m20_53  [key=0, style=solid];
m20_52 -> m20_51  [key=2, style=dotted];
m20_53 -> m20_31  [key=0, style=bold, color=blue];
m20_30 -> m20_47  [key=0, style=solid];
m20_47 -> m20_48  [key=0, style=solid];
m20_47 -> m20_49  [key=2, style=dotted];
m20_47 -> m20_50  [key=2, style=dotted];
m20_47 -> m20_51  [key=2, style=dotted];
m20_48 -> m20_30  [key=0, style=bold, color=blue];
m20_7 -> m20_45  [key=0, style=solid];
m20_45 -> m20_46  [key=0, style=solid];
m20_46 -> m20_7  [key=0, style=bold, color=blue];
m20_16 -> m20_32  [key=0, style=solid];
m20_16 -> m20_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m20_34 -> m20_43  [key=0, style=solid];
m20_36 -> m20_43  [key=0, style=solid];
m20_38 -> m20_43  [key=0, style=solid];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_35  [key=0, style=solid];
m20_32 -> m20_37  [key=0, style=solid];
m20_32 -> m20_39  [key=0, style=solid];
m20_32 -> m20_42  [key=0, style=solid];
m20_42 -> m20_43  [key=0, style=solid];
m20_42 -> m20_44  [key=2, style=dotted];
m20_33 -> m20_34  [key=0, style=solid];
m20_35 -> m20_36  [key=0, style=solid];
m20_37 -> m20_38  [key=0, style=solid];
m20_41 -> m20_43  [key=0, style=solid];
m20_39 -> m20_40  [key=0, style=solid];
m20_40 -> m20_41  [key=0, style=solid];
m20_43 -> m20_16  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid, color=green];
m20_0 -> m20_2  [key=1, style=dashed, color=green, label=int];
m20_0 -> m20_3  [key=1, style=dashed, color=green, label=int];
m20_0 -> m20_4  [key=1, style=dashed, color=green, label=int];
m20_0 -> m20_5  [key=1, style=dashed, color=green, label=int];
m20_1 -> m20_2  [key=0, style=solid, color=green];
m20_2 -> m20_3  [key=0, style=solid, color=green];
m20_3 -> m20_4  [key=0, style=solid, color=green];
m20_4 -> m20_5  [key=0, style=solid, color=green];
m20_5 -> m20_6  [key=0, style=solid, color=green];
m20_5 -> m20_7  [key=2, style=dotted, color=green];
m20_6 -> m20_0  [key=0, style=bold, color=blue];
m20_13 -> m20_14  [key=0, style=solid, color=green];
m20_14 -> m20_15  [key=0, style=solid, color=green];
m20_14 -> m20_16  [key=2, style=dotted, color=green];
m20_14 -> m20_8  [key=2, style=dotted, color=green];
m20_15 -> m20_13  [key=0, style=bold, color=blue];
m20_17 -> m20_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m20_17 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m20_17 -> m20_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m20_17 -> m20_18  [key=0, style=solid];
m20_19 -> m20_16  [key=2, style=dotted];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label=limit];
m20_20 -> m20_8  [key=2, style=dotted];
m20_20 -> m20_21  [key=0, style=solid];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_30  [key=2, style=dotted];
m20_22 -> m20_29  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m20_24 -> m20_7  [key=2, style=dotted];
m20_24 -> m20_8  [key=2, style=dotted];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label=ramEstimate];
m20_25 -> m20_26  [key=0, style=solid];
m20_25 -> m20_28  [key=0, style=solid];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> m20_31  [key=2, style=dotted];
m20_26 -> m20_29  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m20_18 -> m20_19  [key=0, style=solid];
m20_18 -> m20_29  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_24  [key=0, style=solid];
m20_23 -> m20_29  [key=0, style=solid];
m20_28 -> m20_29  [key=0, style=solid];
m20_27 -> m20_29  [key=0, style=solid];
m20_29 -> m20_17  [key=0, style=bold, color=blue];
m20_54 -> m20_1  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_2  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_3  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_4  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_5  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_9  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_14  [key=1, style=dashed, color=green, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m20_54 -> m20_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter"];
m22_3 -> m22_4  [key=0, style=solid, color=green];
m22_3 -> m22_5  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<QuantConnect.Orders.Order>"];
m22_4 -> m22_5  [key=0, style=solid, color=green];
m22_4 -> m22_14  [key=2, style=dotted, color=green];
m22_4 -> m22_10  [key=1, style=dashed, color=green, label=executedOrders];
m22_4 -> m22_12  [key=1, style=dashed, color=green, label=executedOrders];
m22_5 -> m22_6  [key=0, style=solid, color=green];
m22_5 -> m22_15  [key=2, style=dotted, color=green];
m22_5 -> m22_21  [key=1, style=dashed, color=green, label="lambda expression"];
m22_5 -> m22_24  [key=1, style=dashed, color=green, label="lambda expression"];
m22_10 -> m22_11  [key=0, style=solid, color=green];
m22_10 -> d165  [key=2, style=dotted, color=green];
m22_12 -> m22_13  [key=0, style=solid, color=green];
m22_6 -> m22_7  [key=0, style=solid, color=green];
m22_6 -> m22_16  [key=2, style=dotted, color=green];
m22_6 -> m22_17  [key=2, style=dotted, color=green];
m22_6 -> m22_27  [key=1, style=dashed, color=green, label="lambda expression"];
m22_6 -> m22_30  [key=1, style=dashed, color=green, label="lambda expression"];
m22_7 -> m22_10  [key=1, style=dashed, color=green, label=order];
m22_7 -> m22_12  [key=0, style=solid, color=green];
m22_7 -> m22_8  [key=0, style=solid, color=green];
m22_7 -> m22_9  [key=1, style=dashed, color=green, label=order];
m22_9 -> m22_10  [key=0, style=solid, color=green];
m22_9 -> m22_19  [key=2, style=dotted, color=green];
m22_11 -> m22_12  [key=0, style=solid, color=green];
m22_11 -> m22_7  [key=0, style=solid, color=green];
m22_8 -> m22_9  [key=0, style=solid, color=green];
m22_8 -> m22_18  [key=2, style=dotted, color=green];
m22_13 -> m22_3  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid, color=green];
m22_1 -> m22_2  [key=0, style=solid, color=green];
m22_2 -> m22_0  [key=0, style=bold, color=blue];
m22_30 -> m22_31  [key=0, style=solid, color=green];
m22_21 -> m22_22  [key=0, style=solid, color=green];
m22_24 -> m22_25  [key=0, style=solid, color=green];
m22_27 -> m22_28  [key=0, style=solid, color=green];
m22_22 -> m22_23  [key=0, style=solid, color=green];
m22_23 -> m22_21  [key=0, style=bold, color=blue];
m22_25 -> m22_26  [key=0, style=solid, color=green];
m22_26 -> m22_24  [key=0, style=bold, color=blue];
m22_28 -> m22_29  [key=0, style=solid, color=green];
m22_29 -> m22_27  [key=0, style=bold, color=blue];
m22_31 -> m22_32  [key=0, style=solid, color=green];
m22_32 -> m22_30  [key=0, style=bold, color=blue];
m22_33 -> m22_1  [key=1, style=dashed, color=green, label="QuantConnect.Securities.MarginCallModel"];
m22_33 -> m22_5  [key=1, style=dashed, color=green, label="QuantConnect.Securities.MarginCallModel"];
m22_33 -> m22_8  [key=1, style=dashed, color=green, label="QuantConnect.Securities.MarginCallModel"];
m22_33 -> m22_9  [key=1, style=dashed, color=green, label="QuantConnect.Securities.MarginCallModel"];
m22_33 -> m22_11  [key=1, style=dashed, color=green, label="QuantConnect.Securities.MarginCallModel"];
m22_33 -> m22_25  [key=1, style=dashed, color=green, label="QuantConnect.Securities.MarginCallModel"];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [key=0, style=bold, color=blue];
m27_28 -> m27_48  [key=0, style=solid];
m27_28 -> m27_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
m27_28 -> m27_11  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Market.TradeBar consolidated"];
m27_48 -> m27_49  [key=0, style=solid];
m27_48 -> m27_45  [key=2, style=dotted];
m27_48 -> m27_46  [key=2, style=dotted];
m27_49 -> m27_50  [key=0, style=solid];
m27_49 -> m27_51  [key=2, style=dotted];
m27_50 -> m27_28  [key=0, style=bold, color=blue];
m27_25 -> m27_26  [key=0, style=solid];
m27_26 -> m27_27  [key=0, style=solid];
m27_26 -> m27_28  [key=2, style=dotted];
m27_27 -> m27_25  [key=0, style=bold, color=blue];
m27_29 -> m27_30  [key=0, style=solid];
m27_30 -> m27_29  [key=0, style=bold, color=blue];
m27_36 -> m27_37  [key=0, style=solid];
m27_36 -> m27_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
m27_36 -> m27_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
m27_36 -> m27_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
m27_36 -> m27_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
m27_37 -> m27_38  [key=0, style=solid];
m27_37 -> m27_40  [key=0, style=solid];
m27_38 -> m27_39  [key=0, style=solid];
m27_38 -> m27_45  [key=2, style=dotted];
m27_38 -> m27_46  [key=2, style=dotted];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_43  [key=0, style=solid];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_45  [key=2, style=dotted];
m27_41 -> m27_46  [key=2, style=dotted];
m27_43 -> m27_44  [key=0, style=solid];
m27_39 -> m27_43  [key=0, style=solid];
m27_39 -> m27_47  [key=2, style=dotted];
m27_42 -> m27_43  [key=0, style=solid];
m27_42 -> m27_47  [key=2, style=dotted];
m27_44 -> m27_36  [key=0, style=bold, color=blue];
m27_31 -> m27_32  [key=0, style=solid];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_35  [key=2, style=dotted];
m27_33 -> m27_34  [key=0, style=solid];
m27_34 -> m27_31  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_14  [key=2, style=dotted];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_15  [key=2, style=dotted];
m27_2 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label=start];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_16  [key=2, style=dotted];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_17  [key=2, style=dotted];
m27_4 -> m27_18  [key=2, style=dotted];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_19  [key=2, style=dotted];
m27_5 -> d161  [key=2, style=dotted];
m27_5 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label=thirtyMinuteConsolidator];
m27_6 -> m27_7  [key=0, style=solid];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_21  [key=2, style=dotted];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_19  [key=2, style=dotted];
m27_8 -> m27_22  [key=2, style=dotted];
m27_8 -> m27_10  [key=1, style=dashed, color=darkseagreen4, label=oneDayConsolidator];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_23  [key=2, style=dotted];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_24  [key=2, style=dotted];
m27_10 -> m27_12  [key=1, style=dashed, color=darkseagreen4, label=three_oneDayBar];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_26  [key=1, style=dashed, color=darkseagreen4, label=object];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_21  [key=2, style=dotted];
m27_13 -> m27_0  [key=0, style=bold, color=blue];
m27_52 -> m27_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m27_52 -> m27_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.DataConsolidation"];
m32_53 -> m32_54  [key=0, style=solid];
m32_54 -> m32_55  [key=0, style=solid];
m32_54 -> m32_51  [key=2, style=dotted];
m32_54 -> m32_52  [key=2, style=dotted];
m32_55 -> m32_53  [key=0, style=bold, color=blue];
m32_88 -> m32_92  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_88 -> m32_89  [key=0, style=solid];
m32_90 -> m32_91  [key=0, style=solid];
m32_90 -> m32_92  [key=0, style=solid];
m32_90 -> d166  [key=2, style=dotted];
m32_92 -> m32_93  [key=0, style=solid];
m32_92 -> m32_96  [key=2, style=dotted];
m32_89 -> m32_90  [key=0, style=solid];
m32_89 -> m32_92  [key=1, style=dashed, color=darkseagreen4, label=clone];
m32_89 -> m32_91  [key=1, style=dashed, color=darkseagreen4, label=clone];
m32_89 -> m32_88  [key=3, color=darkorchid, style=bold, label="Local variable System.DateTime clone"];
m32_91 -> m32_90  [key=0, style=solid];
m32_91 -> m32_92  [key=1, style=dashed, color=darkseagreen4, label=clone];
m32_91 -> m32_91  [key=1, style=dashed, color=darkseagreen4, label=clone];
m32_91 -> m32_95  [key=2, style=dotted];
m32_93 -> m32_88  [key=0, style=bold, color=blue];
m32_41 -> m32_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_41 -> m32_42  [key=0, style=solid];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_47  [key=2, style=dotted];
m32_43 -> m32_45  [key=1, style=dashed, color=darkseagreen4, label=success];
m32_42 -> m32_43  [key=0, style=solid];
m32_44 -> m32_45  [key=0, style=solid];
m32_44 -> m32_46  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.SecurityHolding"];
m32_45 -> m32_46  [key=0, style=solid];
m32_46 -> m32_41  [key=0, style=bold, color=blue];
m32_73 -> m32_74  [key=0, style=solid, color=green];
m32_73 -> m32_78  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.List<QuantConnect.Orders.Order> ScanForMarginCall"];
m32_74 -> m32_75  [key=0, style=solid, color=green];
m32_74 -> m32_80  [key=1, style=dashed, color=green, label=totalMarginUsed];
m32_75 -> m32_76  [key=0, style=solid, color=green];
m32_75 -> m32_80  [key=1, style=dashed, color=green, label=totalPortfolioValue];
m32_80 -> m32_81  [key=0, style=solid, color=green];
m32_80 -> m32_86  [key=2, style=dotted, color=green];
m32_80 -> m32_82  [key=1, style=dashed, color=green, label=marginCallOrder];
m32_76 -> m32_77  [key=0, style=solid, color=green];
m32_76 -> m32_78  [key=0, style=solid, color=green];
m32_79 -> m32_80  [key=0, style=solid, color=green];
m32_79 -> m32_83  [key=0, style=solid, color=green];
m32_81 -> m32_79  [key=0, style=solid, color=green];
m32_81 -> m32_82  [key=0, style=solid, color=green];
m32_82 -> m32_79  [key=0, style=solid, color=green];
m32_82 -> m32_87  [key=2, style=dotted, color=green];
m32_77 -> m32_84  [key=0, style=solid, color=green];
m32_77 -> m32_85  [key=2, style=dotted, color=green];
m32_78 -> m32_79  [key=0, style=solid, color=green];
m32_78 -> m32_85  [key=2, style=dotted, color=green];
m32_78 -> m32_82  [key=1, style=dashed, color=green, label=marginCallOrders];
m32_78 -> m32_83  [key=1, style=dashed, color=green, label=marginCallOrders];
m32_83 -> m32_84  [key=0, style=solid, color=green];
m32_84 -> m32_73  [key=0, style=bold, color=blue];
m32_59 -> m32_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_59 -> m32_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_59 -> m32_60  [key=0, style=solid];
m32_59 -> m32_62  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_59 -> m32_63  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m32_61 -> m32_62  [key=0, style=solid];
m32_61 -> m32_64  [key=0, style=solid];
m32_61 -> m32_66  [key=2, style=dotted];
m32_61 -> m32_63  [key=1, style=dashed, color=darkseagreen4, label=item];
m32_64 -> m32_65  [key=0, style=solid];
m32_64 -> m32_67  [key=2, style=dotted];
m32_60 -> m32_61  [key=0, style=solid];
m32_62 -> m32_63  [key=0, style=solid];
m32_63 -> m32_65  [key=0, style=solid];
m32_65 -> m32_59  [key=0, style=bold, color=blue];
m32_8 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.DebugPacket"];
m32_8 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.DebugPacket"];
m32_8 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.DebugPacket"];
m32_8 -> m32_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.DebugPacket"];
m32_7 -> m32_2  [key=0, style=bold, color=blue];
m32_29 -> m32_30  [key=0, style=solid];
m32_30 -> m32_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>"];
m32_30 -> m32_31  [key=0, style=solid];
m32_30 -> m32_28  [key=2, style=dotted];
m32_31 -> m32_29  [key=0, style=bold, color=blue];
m32_32 -> m32_33  [key=0, style=solid];
m32_32 -> m32_36  [key=1, style=dashed, color=darkseagreen4, label=int];
m32_33 -> m32_34  [key=0, style=solid];
m32_33 -> m32_37  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[]"];
m32_35 -> m32_36  [key=0, style=solid];
m32_35 -> m32_39  [key=0, style=solid];
m32_35 -> m32_37  [key=1, style=dashed, color=darkseagreen4, label=asset];
m32_34 -> m32_35  [key=0, style=solid];
m32_34 -> m32_34  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m32_34 -> m32_36  [key=1, style=dashed, color=darkseagreen4, label=i];
m32_34 -> m32_37  [key=1, style=dashed, color=darkseagreen4, label=i];
m32_34 -> m32_38  [key=1, style=dashed, color=darkseagreen4, label=i];
m32_37 -> m32_37  [key=1, style=dashed, color=darkseagreen4, label=asset];
m32_37 -> m32_38  [key=0, style=solid];
m32_37 -> m32_40  [key=2, style=dotted];
m32_38 -> m32_35  [key=0, style=solid];
m32_38 -> m32_38  [key=1, style=dashed, color=darkseagreen4, label=i];
m32_36 -> m32_37  [key=0, style=solid];
m32_36 -> m32_38  [key=0, style=solid];
m32_39 -> m32_32  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m32_1 -> m32_0  [key=0, style=bold, color=blue];
m32_1 -> m32_2  [key=0, style=solid];
m32_2 -> m32_3  [key=0, style=solid, color=green];
m32_2 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_2 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_2 -> m32_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_3 -> m32_4  [key=0, style=solid, color=green];
m32_3 -> m32_7  [key=2, style=dotted, color=green];
m32_4 -> m32_5  [key=0, style=solid, color=green];
m32_4 -> m32_8  [key=2, style=dotted];
m32_5 -> m32_6  [key=0, style=solid, color=green];
m32_6 -> m32_7  [key=0, style=solid];
m32_6 -> m32_0  [key=0, style=bold, color=blue];
m32_25 -> m32_26  [key=0, style=solid];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_28  [key=2, style=dotted];
m32_27 -> m32_25  [key=0, style=bold, color=blue];
m32_68 -> m32_69  [key=0, style=solid, color=green];
m32_68 -> m32_70  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m32_69 -> m32_70  [key=0, style=solid, color=green];
m32_70 -> m32_71  [key=0, style=solid, color=green];
m32_70 -> m32_72  [key=2, style=dotted, color=green];
m32_71 -> m32_68  [key=0, style=bold, color=blue];
m32_48 -> m32_49  [key=0, style=solid];
m32_49 -> m32_50  [key=0, style=solid];
m32_49 -> m32_51  [key=2, style=dotted];
m32_49 -> m32_52  [key=2, style=dotted];
m32_50 -> m32_48  [key=0, style=bold, color=blue];
m32_56 -> m32_57  [key=0, style=solid];
m32_57 -> m32_58  [key=0, style=solid];
m32_58 -> m32_56  [key=0, style=bold, color=blue];
m32_97 -> m32_3  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_5  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_69  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_70  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_74  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_75  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_76  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_79  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m32_97 -> m32_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m33_2 -> m33_3  [key=0, style=solid];
m33_2 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m33_2 -> m33_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m33_2 -> m33_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m33_2 -> m33_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m33_3 -> m33_4  [key=0, style=solid];
m33_4 -> m33_5  [key=0, style=solid];
m33_6 -> m33_7  [key=0, style=solid];
m33_6 -> m33_8  [key=0, style=solid];
m33_8 -> m33_9  [key=0, style=solid];
m33_8 -> d171  [key=2, style=dotted];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> d171  [key=2, style=dotted];
m33_5 -> m33_6  [key=0, style=solid];
m33_5 -> m33_8  [key=1, style=dashed, color=darkseagreen4, label=rounding];
m33_5 -> m33_9  [key=1, style=dashed, color=darkseagreen4, label=rounding];
m33_5 -> m33_5  [key=3, color=darkorchid, style=bold, label="Local variable int rounding"];
m33_7 -> m33_8  [key=0, style=solid];
m33_7 -> m33_9  [key=1, style=dashed, color=darkseagreen4, label=rounding];
m33_10 -> m33_2  [key=0, style=bold, color=blue];
m33_0 -> m33_1  [key=0, style=solid];
m33_1 -> m33_0  [key=0, style=bold, color=blue];
m33_12 -> m33_13  [key=0, style=solid];
m33_13 -> m33_14  [key=0, style=solid];
m33_14 -> m33_15  [key=0, style=solid];
m33_15 -> m33_12  [key=0, style=bold, color=blue];
m33_16 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m33_16 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m33_16 -> m33_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m33_16 -> m33_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Holding"];
m33_17 -> m33_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmControl"];
m33_17 -> m33_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.AlgorithmControl"];
m34_0 -> m34_1  [key=0, style=solid, color=green];
m34_0 -> m34_2  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m34_0 -> m34_4  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m34_0 -> m34_5  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m34_0 -> m34_6  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m34_0 -> m34_8  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m34_0 -> m34_9  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m34_0 -> m34_10  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m34_0 -> m34_11  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_12  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_13  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_14  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_15  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_16  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_17  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_19  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_20  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_21  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_22  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_23  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_24  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_27  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m34_0 -> m34_28  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m34_0 -> m34_29  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_31  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_32  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_33  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_35  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_37  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_38  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_39  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_41  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_43  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_44  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_48  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_50  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_52  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_53  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_57  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_58  [key=1, style=dashed, color=green, label="QuantConnect.Orders.OrderEvent"];
m34_0 -> m34_59  [key=1, style=dashed, color=green, label="QuantConnect.Securities.SecurityPortfolioManager"];
m34_0 -> m34_62  [key=1, style=dashed, color=green, label="QuantConnect.Securities.Security"];
m34_1 -> m34_2  [key=0, style=solid, color=green];
m34_1 -> m34_12  [key=1, style=dashed, color=green, label=isLong];
m34_1 -> m34_34  [key=1, style=dashed, color=green, label=isLong];
m34_2 -> m34_3  [key=0, style=solid, color=green];
m34_2 -> m34_19  [key=1, style=dashed, color=green, label=isShort];
m34_2 -> m34_47  [key=1, style=dashed, color=green, label=isShort];
m34_12 -> m34_13  [key=0, style=solid, color=green];
m34_12 -> m34_19  [key=0, style=solid, color=green];
m34_34 -> m34_35  [key=0, style=solid, color=green];
m34_34 -> m34_47  [key=0, style=solid, color=green];
m34_3 -> m34_4  [key=0, style=solid, color=green];
m34_3 -> m34_3  [key=3, color=green, style=bold, label="Local variable bool closedPosition"];
m34_3 -> m34_26  [key=1, style=dashed, color=green, label=closedPosition];
m34_19 -> m34_20  [key=0, style=solid, color=green];
m34_19 -> m34_26  [key=0, style=solid, color=green];
m34_47 -> m34_48  [key=0, style=solid, color=green];
m34_47 -> m34_62  [key=0, style=solid, color=green];
m34_47 -> m34_60  [key=0, style=solid, color=green];
m34_4 -> m34_5  [key=0, style=solid, color=green];
m34_4 -> m34_13  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_4 -> m34_16  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_4 -> m34_17  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_4 -> m34_30  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_4 -> m34_37  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_4 -> m34_38  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_4 -> m34_50  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_4 -> m34_62  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_5 -> m34_6  [key=0, style=solid, color=green];
m34_5 -> m34_20  [key=1, style=dashed, color=green, label=absoluteHoldingsQuantity];
m34_5 -> m34_23  [key=1, style=dashed, color=green, label=absoluteHoldingsQuantity];
m34_5 -> m34_24  [key=1, style=dashed, color=green, label=absoluteHoldingsQuantity];
m34_13 -> m34_14  [key=0, style=solid, color=green];
m34_13 -> m34_16  [key=0, style=solid, color=green];
m34_16 -> m34_17  [key=0, style=solid, color=green];
m34_16 -> m34_27  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_16 -> m34_28  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_16 -> m34_29  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_17 -> m34_18  [key=0, style=solid, color=green];
m34_30 -> m34_31  [key=0, style=solid, color=green];
m34_30 -> m34_34  [key=0, style=solid, color=green];
m34_37 -> m34_37  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_37 -> m34_38  [key=0, style=solid, color=green];
m34_37 -> m34_62  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_38 -> m34_38  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_38 -> m34_39  [key=0, style=solid, color=green];
m34_38 -> m34_41  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_50 -> m34_50  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_50 -> m34_51  [key=0, style=solid, color=green];
m34_50 -> m34_53  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_50 -> m34_54  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_50 -> m34_57  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_50 -> m34_58  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_62 -> m34_63  [key=0, style=solid, color=green];
m34_62 -> m34_73  [key=2, style=dotted, color=green];
m34_62 -> m34_74  [key=2, style=dotted, color=green];
m34_6 -> m34_7  [key=0, style=solid, color=green];
m34_6 -> m34_14  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_6 -> m34_15  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_6 -> m34_16  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_6 -> m34_17  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_6 -> m34_21  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_6 -> m34_22  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_6 -> m34_23  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_6 -> m34_24  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_6 -> m34_37  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_6 -> m34_57  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_6 -> m34_62  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_20 -> m34_21  [key=0, style=solid, color=green];
m34_20 -> m34_23  [key=0, style=solid, color=green];
m34_23 -> m34_24  [key=0, style=solid, color=green];
m34_23 -> m34_27  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_23 -> m34_28  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_23 -> m34_29  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_24 -> m34_25  [key=0, style=solid, color=green];
m34_7 -> m34_8  [key=0, style=solid, color=green];
m34_7 -> m34_27  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_7 -> m34_28  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_7 -> m34_29  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_7 -> m34_7  [key=3, color=green, style=bold, label="Local variable decimal lastTradeProfit"];
m34_14 -> m34_15  [key=0, style=solid, color=green];
m34_14 -> m34_27  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_14 -> m34_28  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_14 -> m34_29  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_15 -> m34_18  [key=0, style=solid, color=green];
m34_21 -> m34_22  [key=0, style=solid, color=green];
m34_21 -> m34_27  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_21 -> m34_28  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_21 -> m34_29  [key=1, style=dashed, color=green, label=lastTradeProfit];
m34_22 -> m34_25  [key=0, style=solid, color=green];
m34_57 -> m34_57  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_57 -> m34_58  [key=0, style=solid, color=green];
m34_57 -> m34_64  [key=2, style=dotted, color=green];
m34_57 -> m34_62  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_8 -> m34_9  [key=0, style=solid, color=green];
m34_8 -> m34_64  [key=2, style=dotted, color=green];
m34_8 -> m34_65  [key=2, style=dotted, color=green];
m34_9 -> m34_10  [key=0, style=solid, color=green];
m34_9 -> m34_66  [key=2, style=dotted, color=green];
m34_9 -> m34_67  [key=2, style=dotted, color=green];
m34_9 -> m34_11  [key=1, style=dashed, color=green, label=feeThisOrder];
m34_9 -> m34_29  [key=1, style=dashed, color=green, label=feeThisOrder];
m34_10 -> m34_11  [key=0, style=solid, color=green];
m34_10 -> m34_68  [key=2, style=dotted, color=green];
m34_11 -> m34_12  [key=0, style=solid, color=green];
m34_29 -> m34_30  [key=0, style=solid, color=green];
m34_29 -> m34_71  [key=2, style=dotted, color=green];
m34_27 -> m34_28  [key=0, style=solid, color=green];
m34_27 -> m34_69  [key=2, style=dotted, color=green];
m34_28 -> m34_29  [key=0, style=solid, color=green];
m34_28 -> m34_70  [key=2, style=dotted, color=green];
m34_18 -> m34_26  [key=0, style=solid, color=green];
m34_26 -> m34_27  [key=0, style=solid, color=green];
m34_26 -> m34_30  [key=0, style=solid, color=green];
m34_25 -> m34_26  [key=0, style=solid, color=green];
m34_31 -> m34_32  [key=0, style=solid, color=green];
m34_31 -> m34_62  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_32 -> m34_33  [key=0, style=solid, color=green];
m34_32 -> m34_62  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_33 -> m34_60  [key=0, style=solid, color=green];
m34_33 -> m34_62  [key=0, style=solid, color=green];
m34_33 -> m34_64  [key=2, style=dotted, color=green];
m34_60 -> m34_61  [key=0, style=solid, color=green];
m34_35 -> m34_36  [key=0, style=solid, color=green];
m34_35 -> m34_40  [key=0, style=solid, color=green];
m34_36 -> m34_37  [key=0, style=solid, color=green];
m34_40 -> m34_41  [key=0, style=solid, color=green];
m34_39 -> m34_60  [key=0, style=solid, color=green];
m34_39 -> m34_62  [key=0, style=solid, color=green];
m34_39 -> m34_64  [key=2, style=dotted, color=green];
m34_41 -> m34_41  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_41 -> m34_42  [key=0, style=solid, color=green];
m34_41 -> m34_44  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_41 -> m34_45  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_41 -> m34_62  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_42 -> m34_43  [key=0, style=solid, color=green];
m34_42 -> m34_45  [key=0, style=solid, color=green];
m34_44 -> m34_60  [key=0, style=solid, color=green];
m34_44 -> m34_62  [key=0, style=solid, color=green];
m34_44 -> m34_67  [key=2, style=dotted, color=green];
m34_45 -> m34_62  [key=0, style=solid, color=green];
m34_45 -> m34_46  [key=0, style=solid, color=green];
m34_45 -> m34_60  [key=0, style=solid, color=green];
m34_43 -> m34_44  [key=0, style=solid, color=green];
m34_43 -> m34_62  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_48 -> m34_49  [key=0, style=solid, color=green];
m34_48 -> m34_56  [key=0, style=solid, color=green];
m34_49 -> m34_50  [key=0, style=solid, color=green];
m34_56 -> m34_57  [key=0, style=solid, color=green];
m34_51 -> m34_52  [key=0, style=solid, color=green];
m34_51 -> m34_54  [key=0, style=solid, color=green];
m34_53 -> m34_60  [key=0, style=solid, color=green];
m34_53 -> m34_62  [key=0, style=solid, color=green];
m34_53 -> m34_67  [key=2, style=dotted, color=green];
m34_54 -> m34_62  [key=0, style=solid, color=green];
m34_54 -> m34_60  [key=0, style=solid, color=green];
m34_54 -> m34_55  [key=0, style=solid, color=green];
m34_58 -> m34_58  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_58 -> m34_59  [key=0, style=solid, color=green];
m34_58 -> m34_62  [key=1, style=dashed, color=green, label=quantityHoldings];
m34_52 -> m34_53  [key=0, style=solid, color=green];
m34_52 -> m34_57  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_55 -> m34_57  [key=1, style=dashed, color=green, label=averageHoldingsPrice];
m34_55 -> m34_62  [key=0, style=solid, color=green];
m34_55 -> m34_60  [key=0, style=solid, color=green];
m34_59 -> m34_60  [key=0, style=solid, color=green];
m34_59 -> m34_62  [key=0, style=solid, color=green];
m34_59 -> m34_64  [key=2, style=dotted, color=green];
m34_46 -> m34_62  [key=0, style=solid, color=green];
m34_46 -> m34_60  [key=0, style=solid, color=green];
m34_61 -> m34_62  [key=0, style=solid, color=green];
m34_61 -> d184  [key=2, style=dotted, color=green];
m34_63 -> m34_0  [key=0, style=bold, color=blue];
m35_42 -> m35_14  [key=3, color=darkorchid, style=bold, label="Property variable System.Collections.Concurrent.ConcurrentQueue<QuantConnect.Orders.Order> OrderQueue"];
m35_68 -> m35_69  [key=0, style=solid];
m35_69 -> m35_70  [key=0, style=solid];
m35_69 -> m35_32  [key=2, style=dotted];
m35_69 -> m35_73  [key=1, style=dashed, color=darkseagreen4, label=start];
m35_69 -> m35_74  [key=1, style=dashed, color=darkseagreen4, label=start];
m35_70 -> m35_71  [key=0, style=solid];
m35_70 -> m35_32  [key=2, style=dotted];
m35_70 -> m35_74  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_73 -> m35_74  [key=0, style=solid];
m35_73 -> m35_23  [key=2, style=dotted];
m35_73 -> m35_75  [key=1, style=dashed, color=darkseagreen4, label=expected];
m35_74 -> m35_75  [key=0, style=solid];
m35_74 -> m35_58  [key=2, style=dotted];
m35_71 -> m35_72  [key=0, style=solid];
m35_71 -> m35_55  [key=2, style=dotted];
m35_71 -> m35_56  [key=2, style=dotted];
m35_71 -> m35_57  [key=2, style=dotted];
m35_71 -> m35_74  [key=1, style=dashed, color=darkseagreen4, label=exchange];
m35_72 -> m35_73  [key=0, style=solid];
m35_72 -> m35_55  [key=2, style=dotted];
m35_72 -> m35_56  [key=2, style=dotted];
m35_72 -> m35_74  [key=1, style=dashed, color=darkseagreen4, label=dataTimeZone];
m35_75 -> m35_76  [key=0, style=solid];
m35_75 -> m35_13  [key=2, style=dotted];
m35_76 -> m35_68  [key=0, style=bold, color=blue];
m35_46 -> m35_47  [key=0, style=solid];
m35_47 -> m35_48  [key=0, style=solid];
m35_47 -> m35_32  [key=2, style=dotted];
m35_47 -> m35_51  [key=1, style=dashed, color=darkseagreen4, label=start];
m35_47 -> m35_52  [key=1, style=dashed, color=darkseagreen4, label=start];
m35_48 -> m35_49  [key=0, style=solid];
m35_48 -> m35_32  [key=2, style=dotted];
m35_48 -> m35_51  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_48 -> m35_52  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_51 -> m35_52  [key=0, style=solid];
m35_51 -> m35_23  [key=2, style=dotted];
m35_51 -> m35_53  [key=1, style=dashed, color=darkseagreen4, label=expected];
m35_52 -> m35_53  [key=0, style=solid];
m35_52 -> m35_58  [key=2, style=dotted];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_55  [key=2, style=dotted];
m35_49 -> m35_56  [key=2, style=dotted];
m35_49 -> m35_57  [key=2, style=dotted];
m35_49 -> m35_52  [key=1, style=dashed, color=darkseagreen4, label=equityExchange];
m35_50 -> m35_51  [key=0, style=solid];
m35_50 -> m35_55  [key=2, style=dotted];
m35_50 -> m35_56  [key=2, style=dotted];
m35_50 -> m35_52  [key=1, style=dashed, color=darkseagreen4, label=dataTimeZone];
m35_53 -> m35_54  [key=0, style=solid];
m35_53 -> m35_13  [key=2, style=dotted];
m35_54 -> m35_46  [key=0, style=bold, color=blue];
m35_34 -> m35_35  [key=0, style=solid];
m35_35 -> m35_36  [key=0, style=solid];
m35_35 -> m35_32  [key=2, style=dotted];
m35_35 -> m35_38  [key=1, style=dashed, color=darkseagreen4, label=start];
m35_35 -> m35_39  [key=1, style=dashed, color=darkseagreen4, label=start];
m35_36 -> m35_37  [key=0, style=solid];
m35_36 -> m35_32  [key=2, style=dotted];
m35_36 -> m35_38  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_36 -> m35_39  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_38 -> m35_39  [key=0, style=solid];
m35_38 -> m35_44  [key=2, style=dotted];
m35_38 -> m35_40  [key=1, style=dashed, color=darkseagreen4, label=expected];
m35_39 -> m35_40  [key=0, style=solid];
m35_39 -> m35_45  [key=2, style=dotted];
m35_37 -> m35_38  [key=0, style=solid];
m35_37 -> m35_42  [key=2, style=dotted];
m35_37 -> m35_43  [key=2, style=dotted];
m35_37 -> m35_39  [key=1, style=dashed, color=darkseagreen4, label=entry];
m35_40 -> m35_41  [key=0, style=solid];
m35_40 -> m35_13  [key=2, style=dotted];
m35_41 -> m35_34  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_7  [key=2, style=dotted];
m35_1 -> m35_4  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_1 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> d161  [key=2, style=dotted];
m35_2 -> m35_4  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m35_2 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_10  [key=2, style=dotted];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_11  [key=2, style=dotted];
m35_5 -> m35_12  [key=2, style=dotted];
m35_5 -> m35_13  [key=2, style=dotted];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_9  [key=2, style=dotted];
m35_6 -> m35_0  [key=0, style=bold, color=blue];
m35_24 -> m35_25  [key=0, style=solid];
m35_25 -> m35_26  [key=0, style=solid];
m35_25 -> m35_7  [key=2, style=dotted];
m35_25 -> m35_29  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_26 -> m35_27  [key=0, style=solid];
m35_26 -> m35_32  [key=2, style=dotted];
m35_26 -> m35_30  [key=1, style=dashed, color=darkseagreen4, label=expectedStart];
m35_29 -> m35_30  [key=0, style=solid];
m35_29 -> m35_10  [key=2, style=dotted];
m35_27 -> m35_28  [key=0, style=solid];
m35_27 -> m35_33  [key=2, style=dotted];
m35_27 -> m35_29  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m35_30 -> m35_31  [key=0, style=solid];
m35_30 -> m35_13  [key=2, style=dotted];
m35_28 -> m35_29  [key=0, style=solid];
m35_28 -> m35_22  [key=2, style=dotted];
m35_31 -> m35_24  [key=0, style=bold, color=blue];
m35_59 -> m35_60  [key=0, style=solid];
m35_60 -> m35_61  [key=0, style=solid];
m35_60 -> m35_32  [key=2, style=dotted];
m35_60 -> m35_64  [key=1, style=dashed, color=darkseagreen4, label=start];
m35_60 -> m35_65  [key=1, style=dashed, color=darkseagreen4, label=start];
m35_61 -> m35_62  [key=0, style=solid];
m35_61 -> m35_32  [key=2, style=dotted];
m35_61 -> m35_64  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_61 -> m35_65  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_64 -> m35_65  [key=0, style=solid];
m35_64 -> m35_23  [key=2, style=dotted];
m35_64 -> m35_66  [key=1, style=dashed, color=darkseagreen4, label=expected];
m35_65 -> m35_66  [key=0, style=solid];
m35_65 -> m35_58  [key=2, style=dotted];
m35_62 -> m35_63  [key=0, style=solid];
m35_62 -> m35_55  [key=2, style=dotted];
m35_62 -> m35_56  [key=2, style=dotted];
m35_62 -> m35_57  [key=2, style=dotted];
m35_62 -> m35_65  [key=1, style=dashed, color=darkseagreen4, label=exchange];
m35_63 -> m35_64  [key=0, style=solid];
m35_63 -> m35_55  [key=2, style=dotted];
m35_63 -> m35_56  [key=2, style=dotted];
m35_63 -> m35_65  [key=1, style=dashed, color=darkseagreen4, label=dataTimeZone];
m35_66 -> m35_67  [key=0, style=solid];
m35_66 -> m35_13  [key=2, style=dotted];
m35_67 -> m35_59  [key=0, style=bold, color=blue];
m35_14 -> m35_15  [key=0, style=solid];
m35_15 -> m35_16  [key=0, style=solid];
m35_15 -> m35_7  [key=2, style=dotted];
m35_15 -> m35_18  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_15 -> m35_19  [key=1, style=dashed, color=darkseagreen4, label=end];
m35_15 -> m35_15  [key=3, color=darkorchid, style=bold, label="Field variable int _orderId"];
m35_16 -> m35_17  [key=0, style=solid];
m35_16 -> m35_21  [key=2, style=dotted];
m35_16 -> m35_18  [key=1, style=dashed, color=darkseagreen4, label=barSize];
m35_16 -> m35_16  [key=3, color=darkorchid, style=bold, label="Field variable decimal _minimumOrderSize"];
m35_18 -> m35_19  [key=0, style=solid];
m35_18 -> m35_10  [key=2, style=dotted];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_23  [key=2, style=dotted];
m35_19 -> m35_13  [key=2, style=dotted];
m35_17 -> m35_18  [key=0, style=solid];
m35_17 -> m35_22  [key=2, style=dotted];
m35_17 -> m35_15  [key=3, color=darkorchid, style=bold, label="Field variable int _minimumOrderQuantity"];
m35_20 -> m35_14  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid];
m36_4 -> m36_5  [key=0, style=solid, color=green];
m36_4 -> m36_9  [key=2, style=dotted, color=green];
m36_4 -> m36_0  [key=0, style=bold, color=blue];
m36_3 -> m36_4  [key=0, style=solid, color=green];
m36_3 -> m36_8  [key=2, style=dotted];
m36_3 -> m36_9  [key=2, style=dotted];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_6  [key=2, style=dotted];
m36_1 -> m36_5  [key=2, style=dotted];
m36_1 -> m36_7  [key=2, style=dotted];
m36_2 -> m36_3  [key=0, style=solid];
m36_2 -> m36_7  [key=2, style=dotted];
m36_2 -> m36_8  [key=2, style=dotted];
m36_5 -> m36_0  [key=0, style=bold, color=blue];
m36_10 -> m36_11  [key=0, style=solid, color=green];
m36_10 -> m36_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBars"];
m36_10 -> m36_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBars"];
m36_10 -> m36_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Commands.UpdateOrderCommand"];
m36_10 -> m36_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Commands.UpdateOrderCommand"];
m36_11 -> m36_12  [key=0, style=solid, color=green];
m36_11 -> m36_13  [key=0, style=solid, color=green];
m36_12 -> m36_26  [key=0, style=solid, color=green];
m36_13 -> m36_14  [key=0, style=solid, color=green];
m36_13 -> m36_15  [key=0, style=solid, color=green];
m36_14 -> m36_26  [key=0, style=solid, color=green];
m36_15 -> m36_16  [key=0, style=solid, color=green];
m36_15 -> m36_18  [key=1, style=dashed, color=green, label=holding];
m36_15 -> m36_20  [key=1, style=dashed, color=green, label=holding];
m36_16 -> m36_17  [key=0, style=solid, color=green];
m36_16 -> m36_18  [key=1, style=dashed, color=green, label=signalDeltaPercent];
m36_16 -> m36_20  [key=1, style=dashed, color=green, label=signalDeltaPercent];
m36_18 -> m36_19  [key=0, style=solid];
m36_18 -> m36_20  [key=0, style=solid];
m36_20 -> m36_21  [key=0, style=solid];
m36_20 -> m36_22  [key=0, style=solid];
m36_17 -> m36_18  [key=0, style=solid];
m36_17 -> m36_20  [key=1, style=dashed, color=darkseagreen4, label=tolerance];
m36_19 -> m36_22  [key=0, style=solid];
m36_19 -> m36_27  [key=2, style=dotted];
m36_21 -> m36_22  [key=0, style=solid];
m36_21 -> m36_28  [key=2, style=dotted];
m36_22 -> m36_23  [key=0, style=solid];
m36_22 -> m36_29  [key=2, style=dotted];
m36_23 -> m36_24  [key=0, style=solid];
m36_23 -> m36_30  [key=2, style=dotted];
m36_24 -> m36_25  [key=0, style=solid];
m36_24 -> m36_29  [key=2, style=dotted];
m36_25 -> m36_26  [key=0, style=solid];
m36_26 -> m36_10  [key=0, style=bold, color=blue];
m36_31 -> m36_4  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_11  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_13  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_15  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_16  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m36_31 -> m36_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MACDTrendFollowing"];
m37_2 -> m37_3  [key=0, style=solid];
m37_2 -> m37_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_2 -> m37_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_2 -> m37_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_3 -> m37_4  [key=0, style=solid];
m37_4 -> m37_5  [key=0, style=solid];
m37_5 -> m37_6  [key=0, style=solid];
m37_6 -> m37_7  [key=0, style=solid];
m37_7 -> m37_2  [key=0, style=bold, color=blue];
m37_0 -> m37_1  [key=0, style=solid];
m37_1 -> m37_0  [key=0, style=bold, color=blue];
m37_8 -> m37_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.DebugPacket"];
m37_8 -> m37_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.DebugPacket"];
m37_8 -> m37_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.DebugPacket"];
m37_8 -> m37_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.DebugPacket"];
}
