digraph  {
n0 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", label="Entry QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", span="28-28"];
n1 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", label="model.GetType() == typeof (DefaultBrokerageModel)", span="30-30"];
n3 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", label="algorithm.Securities.Values", span="36-36"];
n4 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", label="security.TransactionModel = model.GetTransactionModel(security)", span="38-38"];
n2 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", label="return;", span="33-33"];
n6 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n5 [cluster="QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", label="Exit QuantConnect.Lean.Engine.Setup.SetupHandler.UpdateTransactionModels(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.IBrokerageModel)", span="28-28"];
n7 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", label="Entry QuantConnect.Brokerages.IBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", span="57-57"];
m1_28 [cluster="QuantConnect.Api.Api.Initialize(int, string, string)", file="AuthorizationManager.cs", label="Entry QuantConnect.Api.Api.Initialize(int, string, string)", span="42-42"];
m1_27 [cluster="int.Parse(string)", file="AuthorizationManager.cs", label="Entry int.Parse(string)", span="0-0"];
m1_14 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", span="68-68"];
m1_19 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", color=green, community=0, file="AuthorizationManager.cs", label="3: _api = api", span="77-77"];
m1_16 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="var api = new Api.Api()", span="73-73"];
m1_18 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="api.Connected", span="75-75"];
m1_20 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="return true;", span="78-78"];
m1_23 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", color=green, community=0, file="AuthorizationManager.cs", label="0: return false;", span="85-85"];
m1_22 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", color=green, community=0, file="AuthorizationManager.cs", label="3: VSActivityLog.Error(''User id is not a valid number'')", span="83-83"];
m1_21 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label=FormatException, span="81-81"];
m1_15 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="VSActivityLog.Info(''Authenticating QuantConnect API'')", span="70-70"];
m1_17 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="api.Initialize(int.Parse(credentials.UserId), credentials.AccessToken, Globals.DataFolder)", span="74-74"];
m1_24 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", file="AuthorizationManager.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthorizationManager.Login(QuantConnect.VisualStudioPlugin.Credentials)", span="68-68"];
m1_10 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="AuthorizationManager.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_25 [cluster="QuantConnect.VisualStudioPlugin.VSActivityLog.Info(string, string)", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.VSActivityLog.Info(string, string)", span="26-26"];
m1_3 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", span="44-44"];
m1_4 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="_api == null", span="46-46"];
m1_7 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="return _api;", span="51-51"];
m1_5 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="VSActivityLog.Error(''Accessing API without logging in first'')", span="48-48"];
m1_6 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="throw new InvalidOperationException(''Accessing API without logging in first'');", span="49-49"];
m1_8 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="AuthorizationManager.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", span="44-44"];
m1_9 [cluster="QuantConnect.VisualStudioPlugin.VSActivityLog.Error(string, string)", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.VSActivityLog.Error(string, string)", span="30-30"];
m1_11 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", span="58-58"];
m1_12 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", file="AuthorizationManager.cs", label="return _api != null;", span="60-60"];
m1_13 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", file="AuthorizationManager.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", span="58-58"];
m1_26 [cluster="QuantConnect.Api.Api.Api()", file="AuthorizationManager.cs", label="Entry QuantConnect.Api.Api.Api()", span="30-30"];
m1_29 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", file="AuthorizationManager.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", span="91-91"];
m1_30 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", file="AuthorizationManager.cs", label="_api = null", span="93-93"];
m1_31 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", file="AuthorizationManager.cs", label="Exit QuantConnect.VisualStudioPlugin.AuthorizationManager.Logout()", span="91-91"];
m1_32 [file="AuthorizationManager.cs", label="QuantConnect.VisualStudioPlugin.AuthorizationManager", span=""];
m3_27 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m3_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", span="35-35"];
m3_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", file="CompositeAlphaModel.cs", label="alphaModels.IsNullOrEmpty()", span="37-37"];
m3_25 [cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="60-60"];
m3_7 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="CompositeAlphaModel.cs", label="parametersConfigString != string.Empty", span="74-74"];
m3_8 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", color=green, community=0, file="CompositeAlphaModel.cs", label="3: parameters = JsonConvert.DeserializeObject<Dictionary<string, string>>(parametersConfigString)", span="76-76"];
m3_10 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", color=green, community=0, file="CompositeAlphaModel.cs", label="0: var liveJob = new LiveNodePacket\r\n                {\r\n                    Type = PacketType.LiveNode,\r\n                    Algorithm = File.ReadAllBytes(AlgorithmLocation),\r\n                    Brokerage = Config.Get(''live-mode-brokerage'', PaperBrokerageTypeName),\r\n                    Channel = AccessToken,\r\n                    UserId = UserId,\r\n                    ProjectId = ProjectId,\r\n                    Version = Globals.Version,\r\n                    DeployId = AlgorithmTypeName,\r\n                    RamAllocation = int.MaxValue,\r\n                    Parameters = parameters,\r\n                    Language = Language,\r\n                }", span="82-95"];
m3_9 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", color=green, community=0, file="CompositeAlphaModel.cs", label="0: _liveMode", span="80-80"];
m3_13 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="CompositeAlphaModel.cs", label=Exception, span="103-103"];
m3_11 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", color=green, community=0, file="CompositeAlphaModel.cs", label="0: var brokerageFactory = Composer.Instance.Single<IBrokerageFactory>(factory => factory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="100-100"];
m3_12 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", color=green, community=0, file="CompositeAlphaModel.cs", label="0: liveJob.BrokerageData = brokerageFactory.BrokerageData", span="101-101"];
m3_14 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="CompositeAlphaModel.cs", label="Log.Error(err, string.Format(''Error resolving BrokerageData for live job for brokerage {0}:'', liveJob.Brokerage))", span="105-105"];
m3_23 [cluster="QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", file="CompositeAlphaModel.cs", label="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel", span=""];
m3_16 [cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="CompositeAlphaModel.cs", label="var backtestJob = new BacktestNodePacket(0, 0, '''', new byte[] {}, 10000, ''local'')\r\n            {\r\n                Type = PacketType.BacktestNode,\r\n                Algorithm = File.ReadAllBytes(AlgorithmLocation),\r\n                Channel = AccessToken,\r\n                UserId = UserId,\r\n                ProjectId = ProjectId,\r\n                Version = Globals.Version,\r\n                BacktestId = AlgorithmTypeName,\r\n                RamAllocation = int.MaxValue,\r\n                Language = Language,\r\n                Parameters = parameters\r\n            }", span="112-124"];
m3_29 [cluster="lambda expression", file="CompositeAlphaModel.cs", label="Entry lambda expression", span="100-100"];
m3_30 [cluster="lambda expression", file="CompositeAlphaModel.cs", label="factory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="100-100"];
m3_31 [cluster="lambda expression", file="CompositeAlphaModel.cs", label="Exit lambda expression", span="100-100"];
m3_38 [cluster="System.Console.Read()", file="CompositeAlphaModel.cs", label="Entry System.Console.Read()", span="0-0"];
m3_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", file="CompositeAlphaModel.cs", label="throw new ArgumentException(''Must specify at least 1 alpha model for the CompositeAlphaModel'');", span="39-39"];
m3_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", file="CompositeAlphaModel.cs", label="_alphaModels = alphaModels", span="42-42"];
m3_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.CompositeAlphaModel(params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[])", span="35-35"];
m3_5 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="CompositeAlphaModel.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m3_6 [cluster="System.ArgumentException.ArgumentException(string)", file="CompositeAlphaModel.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m3_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.GetModelName()", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.IAlphaModel.GetModelName()", span="43-43"];
m3_17 [cluster="string.IsNullOrEmpty(string)", file="CompositeAlphaModel.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m3_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="77-77"];
m3_22 [cluster="Unk.>", file="CompositeAlphaModel.cs", label="Entry Unk.>", span=""];
m3_26 [cluster="string.Format(string, object)", file="CompositeAlphaModel.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_33 [cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="133-133"];
m3_34 [cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="CompositeAlphaModel.cs", label="Console.WriteLine(''Engine.Main(): Analysis Complete. Press any key to continue.'')", span="136-136"];
m3_35 [cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="CompositeAlphaModel.cs", label="System.Console.Read()", span="137-137"];
m3_36 [cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="CompositeAlphaModel.cs", label="Exit QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="133-133"];
m3_37 [cluster="System.IO.TextWriter.WriteLine(string)", file="CompositeAlphaModel.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m3_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CompositeAlphaModel.cs", label="model.OnSecuritiesChanged(algorithm, changes)", span="81-81"];
m3_32 [cluster="System.Type.MatchesTypeName(string)", file="CompositeAlphaModel.cs", label="Entry System.Type.MatchesTypeName(string)", span="530-530"];
m3_19 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m3_21 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m3_24 [cluster="System.IO.File.ReadAllBytes(string)", file="CompositeAlphaModel.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m3_28 [cluster="QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", file="CompositeAlphaModel.cs", label="Entry QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", span="81-81"];
m3_39 [file="CompositeAlphaModel.cs", label="QuantConnect.Queues.JobQueue", span=""];
m3_40 [file="CompositeAlphaModel.cs", label=liveJob, span=""];
m4_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m4_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", color=green, community=0, file="CompositeAlphaModelFrameworkAlgorithm.cs", label="3: _optionChainProvider = optionChainProvider", span="37-37"];
m4_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35"];
m4_14 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_13 [cluster="QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Entry QuantConnect.Interfaces.IOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="31-31"];
m4_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", color=green, community=0, file="CompositeAlphaModelFrameworkAlgorithm.cs", label="2: _cache[symbol] = new OptionChainCacheEntry(date.Date, symbols)", span="54-54"];
m4_4 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", color=green, community=0, file="CompositeAlphaModelFrameworkAlgorithm.cs", label="1: List<Symbol> symbols", span="48-48"];
m4_3 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="46-46"];
m4_5 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", color=green, community=0, file="CompositeAlphaModelFrameworkAlgorithm.cs", label="1: OptionChainCacheEntry entry", span="50-50"];
m4_6 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", color=green, community=0, file="CompositeAlphaModelFrameworkAlgorithm.cs", label="0: !_cache.TryGetValue(symbol, out entry) || date.Date != entry.Date", span="51-51"];
m4_7 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", color=green, community=0, file="CompositeAlphaModelFrameworkAlgorithm.cs", label="1: symbols = _optionChainProvider.GetOptionContractList(symbol, date.Date).ToList()", span="53-53"];
m4_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="symbols = entry.Symbols", span="58-58"];
m4_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="return symbols;", span="61-61"];
m4_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.GetOptionContractList(QuantConnect.Symbol, System.DateTime)", span="46-46"];
m4_18 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", span="70-70"];
m4_15 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", span="70-70"];
m4_16 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Date = date", span="72-72"];
m4_17 [cluster="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry.OptionChainCacheEntry(System.DateTime, System.Collections.Generic.List<QuantConnect.Symbol>)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Symbols = symbols", span="73-73"];
m4_12 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="CompositeAlphaModelFrameworkAlgorithm.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m4_19 [file="CompositeAlphaModelFrameworkAlgorithm.cs", label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", span=""];
m4_20 [file="CompositeAlphaModelFrameworkAlgorithm.cs", label="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry", span=""];
m9_13 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52"];
m9_14 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="52-52"];
m9_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197"];
m9_7 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOpenOrders(QuantConnect.Symbol)", span="269-269"];
m9_0 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="ImmediateExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", span="33-33"];
m9_1 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="ImmediateExecutionModel.cs", label=targets, span="35-35"];
m9_2 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="ImmediateExecutionModel.cs", label="var existing = algorithm.Securities[target.Symbol].Holdings.Quantity\r\n                    + algorithm.Transactions.GetOpenOrders(target.Symbol).Sum(o => o.Quantity)", span="37-38"];
m9_5 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="ImmediateExecutionModel.cs", label="algorithm.MarketOrder(target.Symbol, quantity)", span="42-42"];
m9_3 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="ImmediateExecutionModel.cs", label="var quantity = target.Quantity - existing", span="39-39"];
m9_4 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="ImmediateExecutionModel.cs", label="quantity != 0", span="40-40"];
m9_6 [cluster="QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", file="ImmediateExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.ImmediateExecutionModel.Execute(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Algorithm.Framework.Portfolio.IPortfolioTarget[])", span="33-33"];
m9_8 [cluster="System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", file="ImmediateExecutionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Sum<TSource>(System.Func<TSource, decimal>)", span="0-0"];
m9_10 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Entry lambda expression", span="38-38"];
m9_11 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="o.Quantity", span="38-38"];
m9_12 [cluster="lambda expression", file="ImmediateExecutionModel.cs", label="Exit lambda expression", span="38-38"];
m10_37 [cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="Insight.cs", label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127"];
m10_41 [cluster="System.Guid.Parse(string)", file="Insight.cs", label="Entry System.Guid.Parse(string)", span="0-0"];
m10_2 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="124-124"];
m10_3 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Id = Guid.NewGuid()", span="126-126"];
m10_5 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="SourceModel = sourceModel", span="128-128"];
m10_6 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Symbol = symbol", span="130-130"];
m10_7 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Type = type", span="131-131"];
m10_8 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Direction = direction", span="132-132"];
m10_9 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Period = period", span="133-133"];
m10_10 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Magnitude = magnitude", span="136-136"];
m10_11 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Confidence = confidence", span="137-137"];
m10_4 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Score = new InsightScore()", span="127-127"];
m10_12 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="124-124"];
m10_0 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection)", span="109-109"];
m10_1 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection)", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection)", span="109-109"];
m10_15 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="153-153"];
m10_16 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="GeneratedTimeUtc = generatedTimeUtc", span="156-156"];
m10_17 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="CloseTimeUtc = generatedTimeUtc + period", span="157-157"];
m10_18 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Insight(System.DateTime, QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightType, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="153-153"];
m10_25 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", span="198-198"];
m10_26 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", color=red, community=0, file="Insight.cs", label="0: var insight = new Insight(\r\n                Time.UnixTimeStampToDateTime(serializedInsight.GeneratedTime),\r\n                new Symbol(SecurityIdentifier.Parse(serializedInsight.Symbol), serializedInsight.Ticker),\r\n                TimeSpan.FromSeconds(serializedInsight.Period),\r\n                serializedInsight.Type,\r\n                serializedInsight.Direction,\r\n                serializedInsight.Magnitude,\r\n                serializedInsight.Confidence,\r\n                serializedInsight.SourceModel\r\n            )\r\n            {\r\n                Id = Guid.Parse(serializedInsight.Id),\r\n                CloseTimeUtc = Time.UnixTimeStampToDateTime(serializedInsight.CloseTime),\r\n                EstimatedValue = serializedInsight.EstimatedValue,\r\n                ReferenceValue = serializedInsight.ReferenceValue\r\n            }", span="200-215"];
m10_27 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="serializedInsight.ScoreIsFinal", span="218-218"];
m10_28 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.SetScore(InsightScoreType.Magnitude, serializedInsight.ScoreMagnitude, insight.CloseTimeUtc)", span="220-220"];
m10_29 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.SetScore(InsightScoreType.Direction, serializedInsight.ScoreDirection, insight.CloseTimeUtc)", span="221-221"];
m10_31 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="serializedInsight.ScoreMagnitude != 0", span="226-226"];
m10_32 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.SetScore(InsightScoreType.Magnitude, serializedInsight.ScoreMagnitude, insight.CloseTimeUtc)", span="228-228"];
m10_33 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="serializedInsight.ScoreDirection != 0", span="231-231"];
m10_34 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.SetScore(InsightScoreType.Direction, serializedInsight.ScoreDirection, insight.CloseTimeUtc)", span="233-233"];
m10_30 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="insight.Score.Finalize(insight.CloseTimeUtc)", span="222-222"];
m10_35 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="return insight;", span="237-237"];
m10_36 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.FromSerializedInsight(QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight)", span="198-198"];
m10_19 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="164-164"];
m10_20 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", color=red, community=0, file="Insight.cs", label="3: return new Insight(Symbol, Period, Type, Direction, Magnitude, Confidence)\r\n            {\r\n                GeneratedTimeUtc = GeneratedTimeUtc,\r\n                CloseTimeUtc = CloseTimeUtc,\r\n                Score = Score,\r\n                Id = Id,\r\n                EstimatedValue = EstimatedValue,\r\n                ReferenceValue = ReferenceValue,\r\n                SourceModel = SourceModel\r\n            };", span="166-175"];
m10_21 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Clone()", span="164-164"];
m10_38 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="Insight.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="242-242"];
m10_42 [cluster="QuantConnect.Algorithm.Framework.Alphas.InsightScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType, double, System.DateTime)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.InsightScore.SetScore(QuantConnect.Algorithm.Framework.Alphas.InsightScoreType, double, System.DateTime)", span="76-76"];
m10_43 [cluster="QuantConnect.Algorithm.Framework.Alphas.InsightScore.Finalize(System.DateTime)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.InsightScore.Finalize(System.DateTime)", span="101-101"];
m10_44 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", span="243-243"];
m10_45 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="var str = $''{Id}: {Symbol} {Type} {Direction} within {Period}''", span="245-245"];
m10_46 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="Magnitude.HasValue", span="246-246"];
m10_47 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="str += $'' by {Magnitude.Value}%''", span="248-248"];
m10_49 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="str += $'' with {Math.Round(100 * Confidence.Value, 1)}% confidence''", span="252-252"];
m10_50 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="return str;", span="255-255"];
m10_48 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="Confidence.HasValue", span="250-250"];
m10_51 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.ToString()", span="243-243"];
m10_39 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="Insight.cs", label="Entry QuantConnect.SecurityIdentifier.Parse(string)", span="557-557"];
m10_52 [cluster="System.Math.Round(double, int)", file="Insight.cs", label="Entry System.Math.Round(double, int)", span="0-0"];
m10_13 [cluster="System.Guid.NewGuid()", file="Insight.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m10_40 [cluster="System.TimeSpan.FromSeconds(double)", file="Insight.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m10_14 [cluster="QuantConnect.Algorithm.Framework.Alphas.InsightScore.InsightScore()", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.InsightScore.InsightScore()", span="53-53"];
m10_22 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Entry QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="188-188"];
m10_23 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="return new Insight(symbol, period, InsightType.Price, direction, magnitude, confidence, sourceModel);", span="190-190"];
m10_24 [cluster="QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", file="Insight.cs", label="Exit QuantConnect.Algorithm.Framework.Alphas.Insight.Price(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Algorithm.Framework.Alphas.InsightDirection, double?, double?, string)", span="188-188"];
m10_53 [file="Insight.cs", label="QuantConnect.Algorithm.Framework.Alphas.Insight", span=""];
m11_59 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", span="183-183"];
m11_80 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="InsightJsonConverterTests.cs", label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork),\r\n                new SubscriptionDataConfig(typeof(TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, false, false, false),\r\n                new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="185-187"];
m11_81 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CreateSecurity(QuantConnect.Symbol)", span="183-183"];
m11_255 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="55-55"];
m11_79 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.GetOrderById(int)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.GetOrderById(int)", span="53-53"];
m11_143 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="321-321"];
m11_144 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="323-323"];
m11_145 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace(''CLOSE FROM SHORT'')", span="324-324"];
m11_146 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="325-325"];
m11_147 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortMarketOrder(GetDefaultQuantity()), OrderStatus.Filled)", span="327-327"];
m11_148 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="330-330"];
m11_149 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="321-321"];
m11_256 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="91-91"];
m11_219 [cluster="object.Object()", file="InsightJsonConverterTests.cs", label="Entry object.Object()", span="0-0"];
m11_52 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="204-204"];
m11_87 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CreateBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider)", span="204-204"];
m11_78 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392"];
m11_203 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", span="401-401"];
m11_208 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="Brokerage.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                lock (sync)\r\n                {\r\n                    remaining -= orderEvent.FillQuantity;\r\n                    Console.WriteLine(''Remaining: '' + remaining + '' FillQuantity: '' + orderEvent.FillQuantity);\r\n                    if (orderEvent.Status == OrderStatus.Filled)\r\n                    {\r\n                        manualResetEvent.Set();\r\n                    }\r\n                }\r\n            }", span="408-419"];
m11_211 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="Brokerage.PlaceOrder(order)", span="424-424"];
m11_204 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="403-403"];
m11_206 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="var remaining = qty", span="406-406"];
m11_207 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="var sync = new object()", span="407-407"];
m11_209 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="var symbol = Symbols.EURUSD", span="422-422"];
m11_210 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="var order = new MarketOrder(symbol, qty, DateTime.UtcNow) { Id = 1 }", span="423-423"];
m11_212 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="manualResetEvent.WaitOne(2500)", span="427-427"];
m11_216 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(0, remaining)", span="432-432"];
m11_205 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="var qty = 1000000m", span="405-405"];
m11_213 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="manualResetEvent.WaitOne(2500)", span="428-428"];
m11_214 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="manualResetEvent.WaitOne(2500)", span="429-429"];
m11_215 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="Console.WriteLine(''Remaining: '' + remaining)", span="431-431"];
m11_217 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.PartialFills()", span="401-401"];
m11_77 [cluster="QuantConnect.Tests.Brokerages.SecurityProvider.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.SecurityProvider.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="52-52"];
m11_183 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", span="380-380"];
m11_184 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="382-382"];
m11_185 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="Log.Trace(''GET ACCOUNT HOLDINGS'')", span="383-383"];
m11_186 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="384-384"];
m11_187 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="var before = Brokerage.GetAccountHoldings()", span="385-385"];
m11_189 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="var after = Brokerage.GetAccountHoldings()", span="389-389"];
m11_188 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="PlaceOrderWaitForStatus(new MarketOrder(Symbol, GetDefaultQuantity(), DateTime.Now))", span="387-387"];
m11_190 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="var beforeHoldings = before.FirstOrDefault(x => x.Symbol == Symbol)", span="391-391"];
m11_191 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="var afterHoldings = after.FirstOrDefault(x => x.Symbol == Symbol)", span="392-392"];
m11_194 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(GetDefaultQuantity(), afterQuantity - beforeQuantity)", span="397-397"];
m11_192 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="var beforeQuantity = beforeHoldings == null ? 0 : beforeHoldings.Quantity", span="394-394"];
m11_193 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="var afterQuantity = afterHoldings == null ? 0 : afterHoldings.Quantity", span="395-395"];
m11_195 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetAccountHoldings()", span="380-380"];
m11_18 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", span="78-78"];
m11_20 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", color=green, community=0, file="InsightJsonConverterTests.cs", label="1: Log.Trace('''')", span="83-83"];
m11_19 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="82-82"];
m11_21 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="InsightJsonConverterTests.cs", label="Log.Trace(''--- TEARDOWN ---'')", span="84-84"];
m11_22 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="85-85"];
m11_23 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="86-86"];
m11_24 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="InsightJsonConverterTests.cs", label="Thread.Sleep(1000)", span="87-87"];
m11_25 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="InsightJsonConverterTests.cs", label="CancelOpenOrders()", span="88-88"];
m11_26 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="InsightJsonConverterTests.cs", label="LiquidateHoldings()", span="89-89"];
m11_27 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="InsightJsonConverterTests.cs", label="Thread.Sleep(1000)", span="90-90"];
m11_28 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.Teardown()", span="78-78"];
m11_16 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", span="235-235"];
m11_103 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="237-237"];
m11_104 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="InsightJsonConverterTests.cs", label="Log.Trace(''CANCEL OPEN ORDERS'')", span="238-238"];
m11_105 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="239-239"];
m11_108 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="InsightJsonConverterTests.cs", label="Log.Trace(''Canceling: '' + openOrder)", span="243-243"];
m11_106 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="InsightJsonConverterTests.cs", label="var openOrders = Brokerage.GetOpenOrders()", span="240-240"];
m11_107 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="InsightJsonConverterTests.cs", label=openOrders, span="241-241"];
m11_109 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="InsightJsonConverterTests.cs", label="Brokerage.CancelOrder(openOrder)", span="244-244"];
m11_110 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CancelOpenOrders()", span="235-235"];
m11_223 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Entry lambda expression", span="408-419"];
m11_62 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace(''ORDER STATUS CHANGED: '' + args)", span="153-153"];
m11_65 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace(''FILL EVENT: '' + args.FillQuantity + '' units of '' + args.Symbol.ToString())", span="159-159"];
m11_72 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace(''--HOLDINGS: '' + _securityProvider[args.Symbol])", span="173-173"];
m11_61 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="152-152"];
m11_63 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="154-154"];
m11_261 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace(''ModifyOrderUntilFilled(): '' + order)", span="457-457"];
m11_280 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace(''SUBMITTED: '' + args)", span="510-510"];
m11_285 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace(''EXPECTED: '' + args)", span="518-518"];
m11_279 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="509-509"];
m11_281 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="511-511"];
m11_284 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="517-517"];
m11_286 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="519-519"];
m11_64 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="args.Status == OrderStatus.Filled || args.Status == OrderStatus.PartiallyFilled", span="157-157"];
m11_67 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="_securityProvider.TryGetValue(args.Symbol, out security)", span="162-162"];
m11_68 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="var holding = _securityProvider[args.Symbol].Holdings", span="164-164"];
m11_69 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="holding.SetHoldings(args.FillPrice, holding.Quantity + args.FillQuantity)", span="165-165"];
m11_70 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="_securityProvider[args.Symbol] = CreateSecurity(args.Symbol)", span="169-169"];
m11_71 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="_securityProvider[args.Symbol].Holdings.SetHoldings(args.FillPrice, args.FillQuantity)", span="170-170"];
m11_73 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="var order = _orderProvider.GetOrderById(args.OrderId)", span="176-176"];
m11_74 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="order.Status = args.Status", span="177-177"];
m11_60 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Entry lambda expression", span="150-179"];
m11_66 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Security security", span="161-161"];
m11_260 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="args.Status == OrderStatus.Canceled || args.Status == OrderStatus.Invalid", span="455-455"];
m11_262 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Assert.Fail(''Unexpected order status: '' + args.Status)", span="458-458"];
m11_277 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Entry lambda expression", span="504-522"];
m11_278 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="args.Status == OrderStatus.Submitted || args.Status == OrderStatus.Invalid", span="507-507"];
m11_282 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="requiredStatusEvent.Set()", span="512-512"];
m11_283 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="args.Status == expectedStatus", span="515-515"];
m11_287 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="desiredStatusEvent.Set()", span="520-520"];
m11_198 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="x.Symbol == Symbol", span="391-391"];
m11_201 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="x.Symbol == Symbol", span="392-392"];
m11_75 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Exit lambda expression", span="150-179"];
m11_259 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="filledResetEvent.Set()", span="453-453"];
m11_258 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="args.Status == OrderStatus.Filled", span="451-451"];
m11_257 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Entry lambda expression", span="449-460"];
m11_263 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Exit lambda expression", span="449-460"];
m11_288 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Exit lambda expression", span="504-522"];
m11_197 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Entry lambda expression", span="391-391"];
m11_199 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Exit lambda expression", span="391-391"];
m11_200 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Entry lambda expression", span="392-392"];
m11_202 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Exit lambda expression", span="392-392"];
m11_225 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="remaining -= orderEvent.FillQuantity", span="412-412"];
m11_226 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Console.WriteLine(''Remaining: '' + remaining + '' FillQuantity: '' + orderEvent.FillQuantity)", span="413-413"];
m11_227 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="orderEvent.Status == OrderStatus.Filled", span="414-414"];
m11_180 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Entry lambda expression", span="376-376"];
m11_228 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="manualResetEvent.Set()", span="416-416"];
m11_224 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label=sync, span="410-410"];
m11_229 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Exit lambda expression", span="408-419"];
m11_181 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="x.Symbol == ''USD''", span="376-376"];
m11_182 [cluster="lambda expression", file="InsightJsonConverterTests.cs", label="Exit lambda expression", span="376-376"];
m11_58 [cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="71-71"];
m11_76 [cluster="QuantConnect.Symbol.ToString()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m11_127 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(decimal)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongOrder(decimal)", span="51-51"];
m11_150 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(decimal)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortMarketOrder(decimal)", span="39-39"];
m11_137 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="312-312"];
m11_138 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="314-314"];
m11_139 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace(''SHORT FROM ZERO'')", span="315-315"];
m11_140 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="316-316"];
m11_141 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="317-317"];
m11_142 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="312-312"];
m11_84 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m11_222 [cluster="System.Console.WriteLine(string)", file="InsightJsonConverterTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m11_254 [cluster="System.Threading.EventWaitHandle.Reset()", file="InsightJsonConverterTests.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m11_218 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="InsightJsonConverterTests.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m11_161 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="352-352"];
m11_162 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="354-354"];
m11_163 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace(''LONG FROM SHORT'')", span="355-355"];
m11_164 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="356-356"];
m11_165 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortMarketOrder(-GetDefaultQuantity()), OrderStatus.Filled)", span="358-358"];
m11_166 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="var order = PlaceOrderWaitForStatus(parameters.CreateLongOrder(2 * GetDefaultQuantity()), parameters.ExpectedStatus)", span="361-361"];
m11_168 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="ModifyOrderUntilFilled(order, parameters)", span="365-365"];
m11_167 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="parameters.ModifyUntilFilled", span="363-363"];
m11_169 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LongFromShort(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="352-352"];
m11_120 [cluster="Unk.IsTrue", file="InsightJsonConverterTests.cs", label="Entry Unk.IsTrue", span=""];
m11_57 [cluster="QuantConnect.Tests.Brokerages.OrderProvider.Add(QuantConnect.Orders.Order)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.OrderProvider.Add(QuantConnect.Orders.Order)", span="42-42"];
m11_55 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="478-478"];
m11_121 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="290-290"];
m11_122 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="292-292"];
m11_123 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace(''LONG FROM ZERO'')", span="293-293"];
m11_124 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="294-294"];
m11_125 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="295-295"];
m11_126 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LongFromZero(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="290-290"];
m11_220 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="84-84"];
m11_114 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", span="278-278"];
m11_115 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="InsightJsonConverterTests.cs", label="return 1;", span="280-280"];
m11_116 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetDefaultQuantity()", span="278-278"];
m11_102 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", span="500-500"];
m11_266 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="EventHandler<OrderEvent> brokerageOnOrderStatusChanged = (sender, args) =>\r\n            {\r\n                // no matter what, every order should fire at least one of these\r\n                if (args.Status == OrderStatus.Submitted || args.Status == OrderStatus.Invalid)\r\n                {\r\n                    Log.Trace('''');\r\n                    Log.Trace(''SUBMITTED: '' + args);\r\n                    Log.Trace('''');\r\n                    requiredStatusEvent.Set();\r\n                }\r\n                // make sure we fire the status we're expecting\r\n                if (args.Status == expectedStatus)\r\n                {\r\n                    Log.Trace('''');\r\n                    Log.Trace(''EXPECTED: '' + args);\r\n                    Log.Trace('''');\r\n                    desiredStatusEvent.Set();\r\n                }\r\n            }", span="504-522"];
m11_267 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="Brokerage.OrderStatusChanged += brokerageOnOrderStatusChanged", span="524-524"];
m11_268 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="OrderProvider.Add(order)", span="526-526"];
m11_269 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="!Brokerage.PlaceOrder(order) && !allowFailedSubmission", span="527-527"];
m11_273 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="Brokerage.OrderStatusChanged -= brokerageOnOrderStatusChanged", span="534-534"];
m11_270 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="Assert.Fail(''Brokerage failed to place the order: '' + order)", span="529-529"];
m11_264 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="var requiredStatusEvent = new ManualResetEvent(false)", span="502-502"];
m11_265 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="var desiredStatusEvent = new ManualResetEvent(false)", span="503-503"];
m11_271 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="requiredStatusEvent.WaitOneAssertFail((int)(1000 * secondsTimeout), ''Expected every order to fire a submitted or invalid status event'')", span="531-531"];
m11_272 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="desiredStatusEvent.WaitOneAssertFail((int)(1000 * secondsTimeout), ''OrderStatus '' + expectedStatus + '' was not encountered within the timeout. Order Id:'' + order.Id)", span="532-532"];
m11_274 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="return order;", span="536-536"];
m11_275 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.PlaceOrderWaitForStatus(QuantConnect.Orders.Order, QuantConnect.Orders.OrderStatus, double, bool)", span="500-500"];
m11_170 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", span="370-370"];
m11_171 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="372-372"];
m11_172 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="InsightJsonConverterTests.cs", label="Log.Trace(''GET CASH BALANCE'')", span="373-373"];
m11_173 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="374-374"];
m11_174 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="InsightJsonConverterTests.cs", label="var balance = Brokerage.GetCashBalance()", span="375-375"];
m11_175 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="InsightJsonConverterTests.cs", label="Assert.AreEqual(1, balance.Count(x => x.Symbol == ''USD''))", span="376-376"];
m11_176 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetCashBalanceContainsUSD()", span="370-370"];
m11_83 [cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82"];
m11_56 [cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65"];
m11_179 [cluster="Unk.AreEqual", file="InsightJsonConverterTests.cs", label="Entry Unk.AreEqual", span=""];
m11_196 [cluster="Unk.FirstOrDefault", file="InsightJsonConverterTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m11_101 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, decimal, System.DateTime, string, QuantConnect.Interfaces.IOrderProperties)", span="49-49"];
m11_128 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="299-299"];
m11_129 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="301-301"];
m11_130 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace(''CLOSE FROM LONG'')", span="302-302"];
m11_131 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="303-303"];
m11_132 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongMarketOrder(GetDefaultQuantity()), OrderStatus.Filled)", span="305-305"];
m11_133 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="PlaceOrderWaitForStatus(parameters.CreateShortOrder(GetDefaultQuantity()), parameters.ExpectedStatus)", span="308-308"];
m11_134 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.CloseFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="299-299"];
m11_151 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="334-334"];
m11_152 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="336-336"];
m11_153 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace(''SHORT FROM LONG'')", span="337-337"];
m11_154 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="338-338"];
m11_155 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="PlaceOrderWaitForStatus(parameters.CreateLongMarketOrder(GetDefaultQuantity()))", span="340-340"];
m11_156 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="var order = PlaceOrderWaitForStatus(parameters.CreateShortOrder(2 * GetDefaultQuantity()), parameters.ExpectedStatus)", span="343-343"];
m11_158 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="ModifyOrderUntilFilled(order, parameters)", span="347-347"];
m11_157 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="parameters.ModifyUntilFilled", span="345-345"];
m11_159 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ShortFromLong(QuantConnect.Tests.Brokerages.OrderTestParameters)", span="334-334"];
m11_54 [cluster="Unk.Fail", file="InsightJsonConverterTests.cs", label="Entry Unk.Fail", span=""];
m11_15 [cluster="System.Threading.Thread.Sleep(int)", file="InsightJsonConverterTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m11_82 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="317-317"];
m11_253 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="InsightJsonConverterTests.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m11_276 [cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)", file="InsightJsonConverterTests.cs", label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32"];
m11_53 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103"];
m11_17 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", span="217-217"];
m11_90 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="219-219"];
m11_91 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="Log.Trace(''LIQUIDATE HOLDINGS'')", span="220-220"];
m11_92 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="221-221"];
m11_96 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="Log.Trace(''Liquidating: '' + holding)", span="228-228"];
m11_93 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="var holdings = Brokerage.GetAccountHoldings()", span="223-223"];
m11_94 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label=holdings, span="225-225"];
m11_95 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="holding.Quantity == 0", span="227-227"];
m11_97 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="var order = new MarketOrder(holding.Symbol, (int)-holding.Quantity, DateTime.Now)", span="229-229"];
m11_98 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="_orderProvider.Add(order)", span="230-230"];
m11_99 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="PlaceOrderWaitForStatus(order, OrderStatus.Filled)", span="231-231"];
m11_100 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.LiquidateHoldings()", span="217-217"];
m11_86 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m11_160 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", span="441-441"];
m11_237 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="Log.Trace(''MODIFY UNTIL FILLED: '' + order)", span="465-465"];
m11_248 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="Log.Trace(''BrokerageTests.ModifyOrderUntilFilled(): '' + order)", span="481-481"];
m11_236 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="464-464"];
m11_238 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="466-466"];
m11_244 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="Log.Trace(''BrokerageTests.ModifyOrderUntilFilled(): Ask: '' + marketPrice)", span="474-474"];
m11_247 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="order.Status == OrderStatus.Filled", span="479-479"];
m11_249 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="!Brokerage.UpdateOrder(order)", span="482-482"];
m11_235 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="Brokerage.OrderStatusChanged += brokerageOnOrderStatusChanged", span="462-462"];
m11_239 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="var stopwatch = Stopwatch.StartNew()", span="467-467"];
m11_243 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="var marketPrice = GetAskPrice(order.Symbol)", span="473-473"];
m11_245 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="var updateOrder = parameters.ModifyOrderToFill(Brokerage, order, marketPrice)", span="476-476"];
m11_251 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="Brokerage.OrderStatusChanged -= brokerageOnOrderStatusChanged", span="489-489"];
m11_250 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="Assert.Fail(''Brokerage failed to update the order'')", span="484-484"];
m11_231 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="order.Status == OrderStatus.Filled", span="443-443"];
m11_234 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="EventHandler<OrderEvent> brokerageOnOrderStatusChanged = (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filledResetEvent.Set();\r\n                }\r\n                if (args.Status == OrderStatus.Canceled || args.Status == OrderStatus.Invalid)\r\n                {\r\n                    Log.Trace(''ModifyOrderUntilFilled(): '' + order);\r\n                    Assert.Fail(''Unexpected order status: '' + args.Status);\r\n                }\r\n            }", span="449-460"];
m11_240 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="!filledResetEvent.WaitOne(3000) && stopwatch.Elapsed.TotalSeconds < secondsTimeout", span="468-468"];
m11_242 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="order.Status == OrderStatus.PartiallyFilled", span="471-471"];
m11_246 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label=updateOrder, span="477-477"];
m11_232 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="return;", span="445-445"];
m11_233 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="var filledResetEvent = new ManualResetEvent(false)", span="448-448"];
m11_241 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="filledResetEvent.Reset()", span="470-470"];
m11_252 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.ModifyOrderUntilFilled(QuantConnect.Orders.Order, QuantConnect.Tests.Brokerages.OrderTestParameters, double)", span="441-441"];
m11_85 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="65-65"];
m11_111 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="98-98"];
m11_135 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(decimal)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateLongMarketOrder(decimal)", span="35-35"];
m11_29 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", span="113-113"];
m11_37 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", color=green, community=0, file="InsightJsonConverterTests.cs", label="1: brokerage.Name == ''GDAX''", span="128-128"];
m11_33 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="var brokerage = CreateBrokerage(OrderProvider, SecurityProvider)", span="119-119"];
m11_35 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="!brokerage.IsConnected", span="122-122"];
m11_36 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Assert.Fail(''Failed to connect to brokerage'')", span="124-124"];
m11_38 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="((QuantConnect.Brokerages.GDAX.GDAXBrokerage)brokerage).Subscribe(null, new[] { Symbol })", span="130-130"];
m11_39 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="133-133"];
m11_47 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", color=green, community=0, file="InsightJsonConverterTests.cs", label="1: brokerage.GetAccountHoldings()", span="144-144"];
m11_46 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="143-143"];
m11_48 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="SecurityProvider[accountHolding.Symbol] = CreateSecurity(accountHolding.Symbol)", span="148-148"];
m11_49 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="brokerage.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                Log.Trace('''');\r\n                Log.Trace(''ORDER STATUS CHANGED: '' + args);\r\n                Log.Trace('''');\r\n\r\n                // we need to keep this maintained properly\r\n                if (args.Status == OrderStatus.Filled || args.Status == OrderStatus.PartiallyFilled)\r\n                {\r\n                    Log.Trace(''FILL EVENT: '' + args.FillQuantity + '' units of '' + args.Symbol.ToString());\r\n\r\n                    Security security;\r\n                    if (_securityProvider.TryGetValue(args.Symbol, out security))\r\n                    {\r\n                        var holding = _securityProvider[args.Symbol].Holdings;\r\n                        holding.SetHoldings(args.FillPrice, holding.Quantity + args.FillQuantity);\r\n                    }\r\n                    else\r\n                    {\r\n                        _securityProvider[args.Symbol] = CreateSecurity(args.Symbol);\r\n                        _securityProvider[args.Symbol].Holdings.SetHoldings(args.FillPrice, args.FillQuantity);\r\n                    }\r\n\r\n                    Log.Trace(''--HOLDINGS: '' + _securityProvider[args.Symbol]);\r\n\r\n                    // update order mapping\r\n                    var order = _orderProvider.GetOrderById(args.OrderId);\r\n                    order.Status = args.Status;\r\n                }\r\n            }", span="150-179"];
m11_30 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="115-115"];
m11_31 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Log.Trace(''- INITIALIZING BROKERAGE -'')", span="116-116"];
m11_32 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="117-117"];
m11_40 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Log.Trace(''GET OPEN ORDERS'')", span="134-134"];
m11_41 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="135-135"];
m11_44 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="141-141"];
m11_45 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Log.Trace(''GET ACCOUNT HOLDINGS'')", span="142-142"];
m11_34 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="brokerage.Connect()", span="120-120"];
m11_42 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="brokerage.GetOpenOrders()", span="136-136"];
m11_50 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="return brokerage;", span="180-180"];
m11_43 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="OrderProvider.Add(openOrder)", span="138-138"];
m11_51 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.InitializeBrokerage()", span="113-113"];
m11_136 [cluster="QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(decimal)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.OrderTestParameters.CreateShortOrder(decimal)", span="47-47"];
m11_112 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", span="273-273"];
m11_113 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.GetAskPrice(QuantConnect.Symbol)", span="273-273"];
m11_178 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="InsightJsonConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0"];
m11_0 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", span="60-60"];
m11_1 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="62-62"];
m11_2 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="63-63"];
m11_3 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="Log.Trace(''--- SETUP ---'')", span="64-64"];
m11_4 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="65-65"];
m11_5 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="Log.Trace('''')", span="66-66"];
m11_6 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="_brokerage = null", span="68-68"];
m11_7 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="_orderProvider = null", span="69-69"];
m11_8 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="_securityProvider = null", span="70-70"];
m11_10 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="CancelOpenOrders()", span="72-72"];
m11_11 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="LiquidateHoldings()", span="73-73"];
m11_9 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="Thread.Sleep(1000)", span="71-71"];
m11_12 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="Thread.Sleep(1000)", span="74-74"];
m11_13 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.Setup()", span="60-60"];
m11_14 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m11_221 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="InsightJsonConverterTests.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m11_230 [cluster="System.Threading.EventWaitHandle.Set()", file="InsightJsonConverterTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m11_177 [cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77"];
m11_117 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="InsightJsonConverterTests.cs", label="Entry QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", span="284-284"];
m11_118 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="InsightJsonConverterTests.cs", label="Assert.IsTrue(Brokerage.IsConnected)", span="286-286"];
m11_119 [cluster="QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", file="InsightJsonConverterTests.cs", label="Exit QuantConnect.Tests.Brokerages.BrokerageTests.IsConnected()", span="284-284"];
m11_289 [file="InsightJsonConverterTests.cs", label="QuantConnect.Tests.Brokerages.BrokerageTests", span=""];
m11_294 [file="InsightJsonConverterTests.cs", label="QuantConnect.Orders.Order", span=""];
m11_295 [file="InsightJsonConverterTests.cs", label=requiredStatusEvent, span=""];
m11_296 [file="InsightJsonConverterTests.cs", label="QuantConnect.Orders.OrderStatus", span=""];
m11_297 [file="InsightJsonConverterTests.cs", label=desiredStatusEvent, span=""];
m11_293 [file="InsightJsonConverterTests.cs", label=filledResetEvent, span=""];
m11_291 [file="InsightJsonConverterTests.cs", label=remaining, span=""];
m11_292 [file="InsightJsonConverterTests.cs", label=manualResetEvent, span=""];
m11_290 [file="InsightJsonConverterTests.cs", label=sync, span=""];
m12_773 [cluster="QuantConnect.Holding.Holding()", file="InsightTests.cs", label="Entry QuantConnect.Holding.Holding()", span="78-78"];
m12_54 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", span="187-187"];
m12_55 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="T response = default(T)", span="189-189"];
m12_60 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="DateTime.Now < _rateLimitNextRequest[type]", span="199-199"];
m12_62 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="_rateLimitNextRequest[type] = DateTime.Now + _rateLimitPeriod[type]", span="200-200"];
m12_63 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="var raw = client.Execute(request)", span="203-203"];
m12_65 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="rootName != ''''", span="208-208"];
m12_66 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="response = DeserializeRemoveRoot<T>(raw.Content, rootName)", span="210-210"];
m12_75 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="Log.Error(''TradierBrokerage.Execute.'' + request.Resource + ''(): '' + raw.Content)", span="248-248"];
m12_56 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label=_lockAccessCredentials, span="191-191"];
m12_57 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="var client = new RestClient(RequestEndpoint)", span="193-193"];
m12_58 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="client.AddDefaultHeader(''Accept'', ''application/json'')", span="194-194"];
m12_59 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="client.AddDefaultHeader(''Authorization'', ''Bearer '' + AccessToken)", span="195-195"];
m12_61 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="Thread.Sleep(10)", span="199-199"];
m12_64 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="_previousRequestRaw = raw.Content", span="204-204"];
m12_67 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="response = JsonConvert.DeserializeObject<T>(raw.Content)", span="214-214"];
m12_70 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="fault = JsonConvert.DeserializeObject<TradierFaultContainer>(raw.Content)", span="228-228"];
m12_73 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="raw.Content.Contains(''order already in finalized state: filled'')", span="243-243"];
m12_76 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''Unknown'', raw.Content))", span="249-249"];
m12_77 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="raw.ErrorException != null", span="253-253"];
m12_79 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="throw new ApplicationException(message, raw.ErrorException);", span="256-256"];
m12_68 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="response == null", span="223-223"];
m12_80 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="return response;", span="260-260"];
m12_69 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="TradierFaultContainer fault = null", span="225-225"];
m12_71 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="fault != null", span="235-235"];
m12_72 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''JsonError'', fault.Fault.Description))", span="238-238"];
m12_74 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="return default(T);", span="245-245"];
m12_78 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="string message = ''Error retrieving response.  Check inner details for more info.''", span="255-255"];
m12_81 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string)", span="187-187"];
m12_364 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", span="790-790"];
m12_365 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="InsightTests.cs", label="var handler = SessionRefreshed", span="792-792"];
m12_367 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="InsightTests.cs", label="handler(this, e)", span="793-793"];
m12_366 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="InsightTests.cs", label="handler != null", span="793-793"];
m12_368 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", span="790-790"];
m12_840 [cluster="System.Collections.Generic.Queue<T>.Queue(System.Collections.Generic.IEnumerable<T>)", file="InsightTests.cs", label="Entry System.Collections.Generic.Queue<T>.Queue(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m12_122 [cluster="int.ToString()", file="InsightTests.cs", label="Entry int.ToString()", span="0-0"];
m12_334 [cluster="System.Net.WebHeaderCollection.Add(string, string)", file="InsightTests.cs", label="Entry System.Net.WebHeaderCollection.Add(string, string)", span="0-0"];
m12_502 [cluster="Unk.SingleOrDefault", file="InsightTests.cs", label="Entry Unk.SingleOrDefault", span=""];
m12_583 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="InsightTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m12_455 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", span="1748-1748"];
m12_846 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="QCOrder = order", span="1750-1750"];
m12_847 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="Classification = classification", span="1751-1751"];
m12_848 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="Symbol = order.Symbol", span="1752-1752"];
m12_849 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="Direction = ConvertDirection(order.Direction, holdingQuantity)", span="1753-1753"];
m12_850 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="Quantity = Math.Abs(order.Quantity)", span="1754-1754"];
m12_851 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="Price = GetLimitPrice(order)", span="1755-1755"];
m12_852 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="Stop = GetStopPrice(order)", span="1756-1756"];
m12_853 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="Type = ConvertOrderType(order)", span="1757-1757"];
m12_854 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="Duration = GetOrderDuration(order.Duration)", span="1758-1758"];
m12_855 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", span="1748-1748"];
m12_9 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="_rateLimitNextRequest.Add(requestType, new DateTime())", span="138-138"];
m12_10 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", color=green, community=0, file="InsightTests.cs", label="0: _rateLimitPeriod[TradierApiRequestType.Standard] = TimeSpan.FromMilliseconds(500)", span="142-142"];
m12_11 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="_rateLimitPeriod[TradierApiRequestType.Data] = TimeSpan.FromMilliseconds(500)", span="143-143"];
m12_337 [cluster="System.IO.Stream.Write(byte[], int, int)", file="InsightTests.cs", label="Entry System.IO.Stream.Write(byte[], int, int)", span="0-0"];
m12_17 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="InsightTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m12_274 [cluster="bool.ToString()", file="InsightTests.cs", label="Entry bool.ToString()", span="0-0"];
m12_121 [cluster="RestRequest.cstr", file="InsightTests.cs", label="Entry RestRequest.cstr", span=""];
m12_363 [cluster="Unk.ToString", file="InsightTests.cs", label="Entry Unk.ToString", span=""];
m12_456 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", span="1607-1607"];
m12_795 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var holdingQuantity = _holdingsProvider.GetHoldingsQuantity(order.Symbol)", span="1609-1609"];
m12_796 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="InsightTests.cs", label="holdingQuantity > 0 && order.Quantity < 0", span="1612-1612"];
m12_797 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="InsightTests.cs", label="(holdingQuantity + order.Quantity) < 0", span="1614-1614"];
m12_799 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="InsightTests.cs", label="holdingQuantity < 0 && order.Quantity > 0", span="1620-1620"];
m12_800 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="InsightTests.cs", label="(holdingQuantity + order.Quantity) > 0", span="1622-1622"];
m12_798 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return true;", span="1617-1617"];
m12_802 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return false;", span="1628-1628"];
m12_801 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return true;", span="1625-1625"];
m12_803 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", span="1607-1607"];
m12_544 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", span="1086-1086"];
m12_545 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", span="1086-1086"];
m12_601 [cluster="Unk.ContainsKey", file="InsightTests.cs", label="Entry Unk.ContainsKey", span=""];
m12_246 [cluster="System.DateTime.ToString(string)", file="InsightTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m12_204 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", span="750-750"];
m12_344 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="InsightTests.cs", label="var fi = value.GetType().GetField(value.ToString())", span="753-753"];
m12_348 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="InsightTests.cs", label="return value.ToString();", span="762-762"];
m12_345 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="InsightTests.cs", label="var attributes = (EnumMemberAttribute[]) fi.GetCustomAttributes(typeof (EnumMemberAttribute), false)", span="754-754"];
m12_346 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="InsightTests.cs", label="attributes.Length > 0", span="756-756"];
m12_347 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="InsightTests.cs", label="return attributes[0].Value;", span="758-758"];
m12_349 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", span="750-750"];
m12_597 [cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="InsightTests.cs", label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0"];
m12_399 [cluster="Unk.ToList", file="InsightTests.cs", label="Entry Unk.ToList", span=""];
m12_87 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56"];
m12_370 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", span="813-813"];
m12_371 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="var orders = new List<Order>()", span="815-815"];
m12_372 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="var openOrders = GetIntradayAndPendingOrders().Where(OrderIsOpen)", span="816-816"];
m12_377 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="orders.Add(ConvertOrder(openOrder, out task))", span="824-824"];
m12_381 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="return orders;", span="834-834"];
m12_373 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="var tasks = new List<Task>()", span="818-818"];
m12_374 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label=openOrders, span="819-819"];
m12_379 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="tasks.Add(task)", span="827-827"];
m12_380 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="Task.WaitAll(tasks.ToArray())", span="832-832"];
m12_375 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="_cachedOpenOrdersByTradierOrderID[openOrder.Id] = openOrder", span="822-822"];
m12_376 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="Task task", span="823-823"];
m12_378 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="task != null", span="825-825"];
m12_382 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", span="813-813"];
m12_339 [cluster="System.Net.HttpWebResponse.GetResponseStream()", file="InsightTests.cs", label="Entry System.Net.HttpWebResponse.GetResponseStream()", span="0-0"];
m12_20 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", span="156-156"];
m12_21 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="AccessToken = accessToken", span="158-158"];
m12_22 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="RefreshToken = refreshToken", span="159-159"];
m12_23 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="_issuedAt = issuedAt", span="160-160"];
m12_24 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="_lifeSpan = lifeSpan", span="161-161"];
m12_25 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="UserId = userId", span="162-162"];
m12_26 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="_refreshTimer != null", span="164-164"];
m12_27 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="_refreshTimer.Dispose()", span="166-166"];
m12_28 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="_orderFillTimer != null", span="168-168"];
m12_29 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="_orderFillTimer.Dispose()", span="170-170"];
m12_30 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="var dueTime = ExpectedExpiry - DateTime.Now", span="173-173"];
m12_31 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="dueTime < TimeSpan.Zero", span="174-174"];
m12_34 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="_refreshTimer = new Timer(state => RefreshSession(), null, dueTime, period)", span="176-176"];
m12_32 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="dueTime = TimeSpan.Zero", span="174-174"];
m12_33 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="var period = TimeSpan.FromDays(1).Subtract(TimeSpan.FromMinutes(-1))", span="175-175"];
m12_35 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="double orderPollingIntervalInSeconds = Config.GetDouble(''tradier-order-poll-interval'', 1.0)", span="179-179"];
m12_36 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="var interval = (int)(1000*orderPollingIntervalInSeconds)", span="180-180"];
m12_37 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="_orderFillTimer = new Timer(state => CheckForFills(), null, interval, interval)", span="181-181"];
m12_38 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", span="156-156"];
m12_409 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", span="861-861"];
m12_410 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", file="InsightTests.cs", label="return new List<Cash>\r\n            {\r\n                new Cash(''USD'', GetBalanceDetails(_accountID).TotalCash, 1.0m)\r\n            };", span="863-866"];
m12_411 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", span="861-861"];
m12_596 [cluster="string.Format(string, object)", file="InsightTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m12_460 [cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="InsightTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="124-124"];
m12_501 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InsightTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m12_585 [cluster="Unk.Join", file="InsightTests.cs", label="Entry Unk.Join", span=""];
m12_85 [cluster="Unk.Execute", file="InsightTests.cs", label="Entry Unk.Execute", span=""];
m12_513 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="InsightTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m12_340 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="InsightTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m12_774 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", span="1561-1561"];
m12_775 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="holdingQuantity == 0", span="1566-1566"];
m12_776 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label=direction, span="1569-1569"];
m12_781 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="holdingQuantity > 0", span="1577-1577"];
m12_782 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label=direction, span="1579-1579"];
m12_787 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="holdingQuantity < 0", span="1589-1589"];
m12_788 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label=direction, span="1591-1591"];
m12_777 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="OrderDirection.Buy", span="1571-1571"];
m12_779 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="OrderDirection.Sell", span="1573-1573"];
m12_778 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="return TradierOrderDirection.Buy;", span="1572-1572"];
m12_780 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="return TradierOrderDirection.SellShort;", span="1574-1574"];
m12_783 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="OrderDirection.Buy", span="1581-1581"];
m12_785 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="OrderDirection.Sell", span="1584-1584"];
m12_784 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="return TradierOrderDirection.Buy;", span="1583-1583"];
m12_786 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="return TradierOrderDirection.Sell;", span="1586-1586"];
m12_793 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="return TradierOrderDirection.None;", span="1601-1601"];
m12_789 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="OrderDirection.Buy", span="1593-1593"];
m12_791 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="OrderDirection.Sell", span="1596-1596"];
m12_790 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="return TradierOrderDirection.BuyToCover;", span="1595-1595"];
m12_792 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="return TradierOrderDirection.SellShort;", span="1598-1598"];
m12_794 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", span="1561-1561"];
m12_563 [cluster="string.Format(string, params object[])", file="InsightTests.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m12_335 [cluster="System.Text.Encoding.GetBytes(string)", file="InsightTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m12_171 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", span="423-423"];
m12_172 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="InsightTests.cs", label="var request = new RestRequest(''accounts/{accountId}/orders'')", span="425-425"];
m12_173 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="InsightTests.cs", label="request.AddUrlSegment(''accountId'', _accountID.ToString())", span="426-426"];
m12_174 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="InsightTests.cs", label="var ordersContainer = Execute<TradierOrdersContainer>(request, TradierApiRequestType.Standard)", span="427-427"];
m12_175 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="InsightTests.cs", label="ordersContainer.Orders == null", span="429-429"];
m12_178 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="InsightTests.cs", label="return ordersContainer.Orders.Orders;", span="436-436"];
m12_176 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="InsightTests.cs", label="Log.Trace(''Tradier.FetchOrders(): No orders found'')", span="432-432"];
m12_177 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="InsightTests.cs", label="return new List<TradierOrder>();", span="433-433"];
m12_179 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", span="423-423"];
m12_385 [cluster="System.Collections.Generic.List<T>.Add(T)", file="InsightTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m12_384 [cluster="Unk.ConvertOrder", file="InsightTests.cs", label="Entry Unk.ConvertOrder", span=""];
m12_627 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1329-1329"];
m12_642 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="return !OrderIsOpen(order);", span="1331-1331"];
m12_643 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1329-1329"];
m12_413 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="874-874"];
m12_414 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var cachedOpenOrder = _cachedOpenOrdersByTradierOrderID.FirstOrDefault(x => x.Value.Symbol == order.Symbol).Value", span="877-877"];
m12_424 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var holdingQuantity = _holdingsProvider.GetHoldingsQuantity(order.Symbol)", span="900-900"];
m12_425 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var orderRequest = new TradierPlaceOrderRequest(order, TradierOrderClass.Equity,  holdingQuantity)", span="902-902"];
m12_426 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="bool crossesZero = OrderCrossesZero(order)", span="905-905"];
m12_429 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var secondOrderQuantity = order.Quantity - firstOrderQuantity", span="910-910"];
m12_431 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var restOfOrder = new TradierPlaceOrderRequest(order, TradierOrderClass.Equity, 0) {Quantity = Math.Abs(secondOrderQuantity)}", span="917-917"];
m12_433 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="_contingentOrdersByQCOrderID.AddOrUpdate(order.Id, new ContingentOrderQueue(order, restOfOrder))", span="920-920"];
m12_438 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="_contingentOrdersByQCOrderID.TryRemove(order.Id, out contingent)", span="929-929"];
m12_441 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="order.BrokerId.Add(closingOrderID)", span="934-934"];
m12_446 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="order.BrokerId.Add(response.Order.Id)", span="944-944"];
m12_415 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="cachedOpenOrder != null", span="878-878"];
m12_416 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var qcOrder = _orderMapping.GetOrderByBrokerageId((int) cachedOpenOrder.Id)", span="880-880"];
m12_420 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="_cachedOpenOrdersByTradierOrderID.TryRemove(cachedOpenOrder.Id, out tradierOrder)", span="886-886"];
m12_417 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="qcOrder == null", span="881-881"];
m12_422 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="_contingentOrdersByQCOrderID.TryRemove(qcOrder.Id, out contingent)", span="892-892"];
m12_423 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="CancelOrder(qcOrder)", span="896-896"];
m12_418 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="TradierOrder tradierOrder", span="884-884"];
m12_421 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="ContingentOrderQueue contingent", span="891-891"];
m12_419 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Log.Error(''TradierBrokerage.PlaceOrder(): Unable to locate existing QC Order when verifying single outstanding order per symbol.'')", span="885-885"];
m12_428 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var firstOrderQuantity = -holdingQuantity", span="909-909"];
m12_430 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="orderRequest.Quantity = Math.Abs(firstOrderQuantity)", span="912-912"];
m12_434 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var response = TradierPlaceOrder(orderRequest)", span="923-923"];
m12_443 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var response = TradierPlaceOrder(orderRequest)", span="939-939"];
m12_427 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label=crossesZero, span="906-906"];
m12_432 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="restOfOrder.ConvertStopOrderTypes()", span="918-918"];
m12_435 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="bool success = response.Errors.Errors.IsNullOrEmpty()", span="924-924"];
m12_440 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var closingOrderID = response.Order.Id", span="933-933"];
m12_436 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="!success", span="925-925"];
m12_437 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="ContingentOrderQueue contingent", span="928-928"];
m12_439 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return false;", span="930-930"];
m12_442 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return true;", span="935-935"];
m12_444 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="!response.Errors.Errors.IsNullOrEmpty()", span="940-940"];
m12_445 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return false;", span="942-942"];
m12_447 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return true;", span="945-945"];
m12_448 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="874-874"];
m12_19 [cluster="System.TimeSpan.FromMilliseconds(double)", file="InsightTests.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m12_180 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", span="442-442"];
m12_181 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="InsightTests.cs", label="var request = new RestRequest(''accounts/{accountId}/orders/'' + orderId)", span="444-444"];
m12_182 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="InsightTests.cs", label="request.AddUrlSegment(''accountId'', _accountID.ToString())", span="445-445"];
m12_183 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="InsightTests.cs", label="var detailsParent = Execute<TradierOrderDetailedContainer>(request, TradierApiRequestType.Standard)", span="446-446"];
m12_184 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="InsightTests.cs", label="return detailsParent.DetailedOrder;", span="447-447"];
m12_185 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", span="442-442"];
m12_856 [cluster="System.Math.Abs(int)", file="InsightTests.cs", label="Entry System.Math.Abs(int)", span="0-0"];
m12_123 [cluster="Unk.AddParameter", file="InsightTests.cs", label="Entry Unk.AddParameter", span=""];
m12_8 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="_rateLimitPeriod.Add(requestType, TimeSpan.FromSeconds(1))", span="137-137"];
m12_457 [cluster="System.Math.Abs(decimal)", file="InsightTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m12_383 [cluster="Unk.Where", file="InsightTests.cs", label="Entry Unk.Where", span=""];
m12_83 [cluster="Unk.AddDefaultHeader", file="InsightTests.cs", label="Entry Unk.AddDefaultHeader", span=""];
m12_532 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="110-110"];
m12_539 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", span="1077-1077"];
m12_540 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="InsightTests.cs", label=IsConnected, span="1079-1079"];
m12_541 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="InsightTests.cs", label="return;", span="1079-1079"];
m12_542 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="InsightTests.cs", label="RefreshSession()", span="1080-1080"];
m12_543 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", span="1077-1077"];
m12_150 [cluster="System.Collections.Generic.List<T>.List()", file="InsightTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_505 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1407-1407"];
m12_700 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label=type, span="1409-1409"];
m12_709 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="throw new ArgumentOutOfRangeException(''type'', type, null);", span="1424-1424"];
m12_701 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="OrderType.Market", span="1411-1411"];
m12_703 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="OrderType.Limit", span="1414-1414"];
m12_705 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="OrderType.StopMarket", span="1417-1417"];
m12_707 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="OrderType.StopLimit", span="1420-1420"];
m12_702 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="return TradierOrderType.Market;", span="1412-1412"];
m12_704 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="return TradierOrderType.Limit;", span="1415-1415"];
m12_706 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="return TradierOrderType.StopMarket;", span="1418-1418"];
m12_708 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="return TradierOrderType.StopLimit;", span="1421-1421"];
m12_710 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1407-1407"];
m12_686 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="InsightTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="41-41"];
m12_626 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", span="1725-1725"];
m12_841 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="InsightTests.cs", label="Contingents.Count == 0", span="1727-1727"];
m12_842 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="InsightTests.cs", label="return null;", span="1729-1729"];
m12_843 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="InsightTests.cs", label="return Contingents.Dequeue();", span="1731-1731"];
m12_844 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", span="1725-1725"];
m12_282 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", span="628-628"];
m12_283 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", file="InsightTests.cs", label="var request = new RestRequest(''markets/events/session'', Method.POST)", span="630-630"];
m12_284 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", file="InsightTests.cs", label="return Execute<TradierStreamSession>(request, TradierApiRequestType.Data, ''stream'');", span="631-631"];
m12_285 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CreateStreamSession()", span="628-628"];
m12_694 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="1375-1375"];
m12_46 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="176-176"];
m12_47 [cluster="lambda expression", file="InsightTests.cs", label="RefreshSession()", span="176-176"];
m12_48 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="176-176"];
m12_50 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="181-181"];
m12_51 [cluster="lambda expression", file="InsightTests.cs", label="CheckForFills()", span="181-181"];
m12_52 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="181-181"];
m12_403 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="844-844"];
m12_406 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="845-845"];
m12_404 [cluster="lambda expression", file="InsightTests.cs", label="x.Symbol", span="844-844"];
m12_405 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="844-844"];
m12_407 [cluster="lambda expression", file="InsightTests.cs", label="x.Symbol", span="845-845"];
m12_408 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="845-845"];
m12_464 [cluster="lambda expression", file="InsightTests.cs", label="x.Value.Symbol == order.Symbol", span="877-877"];
m12_463 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="877-877"];
m12_465 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="877-877"];
m12_510 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="966-966"];
m12_514 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="966-966"];
m12_511 [cluster="lambda expression", file="InsightTests.cs", label="_cachedOpenOrdersByTradierOrderID.ContainsKey(x)", span="966-966"];
m12_512 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="966-966"];
m12_515 [cluster="lambda expression", file="InsightTests.cs", label="_cachedOpenOrdersByTradierOrderID[x]", span="966-966"];
m12_516 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="966-966"];
m12_586 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="1180-1180"];
m12_589 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="1202-1216"];
m12_590 [cluster="lambda expression", file="InsightTests.cs", label="var updatedOrderLocal = GetOrder(cachedOrderLocal.Key)", span="1204-1204"];
m12_598 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="1220-1220"];
m12_603 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="1223-1223"];
m12_587 [cluster="lambda expression", file="InsightTests.cs", label="x.Id", span="1180-1180"];
m12_588 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="1180-1180"];
m12_591 [cluster="lambda expression", file="InsightTests.cs", label="updatedOrderLocal == null", span="1205-1205"];
m12_592 [cluster="lambda expression", file="InsightTests.cs", label="Log.Error(string.Format(''TradierBrokerage.CheckForFills(): Unable to locate order {0} in cached open orders.'', cachedOrderLocal.Key))", span="1207-1207"];
m12_593 [cluster="lambda expression", file="InsightTests.cs", label="ProcessPotentiallyUpdatedOrder(cachedOrderLocal.Value, updatedOrderLocal)", span="1211-1211"];
m12_594 [cluster="lambda expression", file="InsightTests.cs", label="_reentranceGuardByTradierOrderID.Remove(cachedOrderLocal.Key)", span="1215-1215"];
m12_595 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="1202-1216"];
m12_599 [cluster="lambda expression", file="InsightTests.cs", label="!_cachedOpenOrdersByTradierOrderID.ContainsKey(x.Key) && OrderIsOpen(x.Value)", span="1220-1220"];
m12_600 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="1220-1220"];
m12_604 [cluster="lambda expression", file="InsightTests.cs", label="x.Key", span="1223-1223"];
m12_605 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="1223-1223"];
m12_634 [cluster="lambda expression", file="InsightTests.cs", label="var message = string.Format(''{0} Failed submitting contingent order for QC id: {1} Filled Tradier Order id: {2}'', qcOrder.Symbol, qcOrder.Id, updatedOrder.Id)", span="1292-1292"];
m12_629 [cluster="lambda expression", file="InsightTests.cs", label="Log.Trace(''TradierBrokerage.SubmitContingentOrder(): Submitting contingent order for QC id: '' + qcOrder.Id)", span="1279-1279"];
m12_632 [cluster="lambda expression", file="InsightTests.cs", label="qcOrder.BrokerId.Add(response.Order.Id)", span="1285-1285"];
m12_636 [cluster="lambda expression", file="InsightTests.cs", label="_contingentReentranceGuardByQCOrderID.Remove(qcOrder.Id)", span="1295-1295"];
m12_630 [cluster="lambda expression", file="InsightTests.cs", label="var response = TradierPlaceOrder(order)", span="1281-1281"];
m12_628 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="1277-1296"];
m12_631 [cluster="lambda expression", file="InsightTests.cs", label="response.Errors.Errors.IsNullOrEmpty()", span="1282-1282"];
m12_633 [cluster="lambda expression", file="InsightTests.cs", label="Log.Error(''TradierBrokerage.SubmitContingentOrder(): Failed to submit contingent order.'')", span="1291-1291"];
m12_635 [cluster="lambda expression", file="InsightTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ContingentOrderFailed'', message))", span="1293-1293"];
m12_637 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="1277-1296"];
m12_695 [cluster="lambda expression", file="InsightTests.cs", label="((StopMarketOrder)qcOrder).StopPrice = GetOrder(order.Id).StopPrice", span="1375-1375"];
m12_698 [cluster="lambda expression", file="InsightTests.cs", label="((StopLimitOrder) qcOrder).StopPrice = GetOrder(order.Id).StopPrice", span="1379-1379"];
m12_697 [cluster="lambda expression", file="InsightTests.cs", label="Entry lambda expression", span="1379-1379"];
m12_696 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="1375-1375"];
m12_699 [cluster="lambda expression", file="InsightTests.cs", label="Exit lambda expression", span="1379-1379"];
m12_658 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="InsightTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0"];
m12_237 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", span="551-551"];
m12_238 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="InsightTests.cs", label="var request = new RestRequest(''markets/timesales'', Method.GET)", span="554-554"];
m12_239 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="InsightTests.cs", label="request.AddParameter(''symbol'', symbol, ParameterType.QueryString)", span="555-555"];
m12_240 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="InsightTests.cs", label="request.AddParameter(''interval'', GetEnumDescription(interval), ParameterType.QueryString)", span="556-556"];
m12_241 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="InsightTests.cs", label="request.AddParameter(''start'', start.ToString(''yyyy-MM-dd HH:mm''), ParameterType.QueryString)", span="557-557"];
m12_242 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="InsightTests.cs", label="request.AddParameter(''end'', end.ToString(''yyyy-MM-dd HH:mm''), ParameterType.QueryString)", span="558-558"];
m12_243 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="InsightTests.cs", label="var dataContainer = Execute<TradierTimeSeriesContainer>(request, TradierApiRequestType.Data, ''series'')", span="559-559"];
m12_244 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="InsightTests.cs", label="return dataContainer.TimeSeries;", span="560-560"];
m12_245 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", span="551-551"];
m12_531 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", file="InsightTests.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", span="103-103"];
m12_354 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", span="769-769"];
m12_355 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="InsightTests.cs", label="var obj = default(T)", span="771-771"];
m12_356 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="InsightTests.cs", label="dynamic dynDeserialized = JsonConvert.DeserializeObject(json)", span="776-776"];
m12_357 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="InsightTests.cs", label="obj = JsonConvert.DeserializeObject<T>(dynDeserialized[rootName].ToString())", span="777-777"];
m12_359 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="InsightTests.cs", label="Log.Error(''Tradier.DeserializeRemoveRoot(): Root Name ('' + rootName + ''): '' + err.Message)", span="781-781"];
m12_358 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="InsightTests.cs", label=Exception, span="779-779"];
m12_360 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="InsightTests.cs", label="return obj;", span="784-784"];
m12_361 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", span="769-769"];
m12_91 [cluster="BrokerageMessageEvent.cstr", file="InsightTests.cs", label="Entry BrokerageMessageEvent.cstr", span=""];
m12_687 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="InsightTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="27-27"];
m12_161 [cluster="Unk.AddUrlSegment", file="InsightTests.cs", label="Entry Unk.AddUrlSegment", span=""];
m12_127 [cluster="Unk.BuildUri", file="InsightTests.cs", label="Entry Unk.BuildUri", span=""];
m12_351 [cluster="System.Enum.ToString()", file="InsightTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m12_343 [cluster="Unk.Read", file="InsightTests.cs", label="Entry Unk.Read", span=""];
m12_584 [cluster="System.Threading.Tasks.Task.Run(System.Action)", file="InsightTests.cs", label="Entry System.Threading.Tasks.Task.Run(System.Action)", span="0-0"];
m12_336 [cluster="System.Net.HttpWebRequest.GetRequestStream()", file="InsightTests.cs", label="Entry System.Net.HttpWebRequest.GetRequestStream()", span="0-0"];
m12_186 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="454-454"];
m12_187 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="var request = new RestRequest(''accounts/{accountId}/orders'')", span="466-466"];
m12_188 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="467-467"];
m12_189 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.AddParameter(''class'', GetEnumDescription(classification))", span="470-470"];
m12_190 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.AddParameter(''symbol'', symbol)", span="471-471"];
m12_191 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.AddParameter(''duration'', GetEnumDescription(duration))", span="472-472"];
m12_192 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.AddParameter(''type'', GetEnumDescription(type))", span="473-473"];
m12_193 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.AddParameter(''quantity'', quantity)", span="474-474"];
m12_194 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.AddParameter(''side'', GetEnumDescription(direction))", span="475-475"];
m12_195 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="price > 0", span="478-478"];
m12_196 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.AddParameter(''price'', Math.Round(price, 2))", span="478-478"];
m12_197 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="stop > 0", span="479-479"];
m12_198 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.AddParameter(''stop'', Math.Round(stop, 2))", span="479-479"];
m12_199 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="optionSymbol != ''''", span="480-480"];
m12_200 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.AddParameter(''option_symbol'', optionSymbol)", span="480-480"];
m12_201 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="request.Method = Method.POST", span="483-483"];
m12_202 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="return Execute<TradierOrderResponse>(request, TradierApiRequestType.Orders);", span="485-485"];
m12_203 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(long, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="454-454"];
m12_458 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", span="1761-1761"];
m12_857 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="InsightTests.cs", label="Type == TradierOrderType.StopMarket", span="1764-1764"];
m12_858 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="InsightTests.cs", label="Type = TradierOrderType.Market", span="1766-1766"];
m12_860 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="InsightTests.cs", label="Type == TradierOrderType.StopLimit", span="1769-1769"];
m12_859 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="InsightTests.cs", label="Stop = 0m", span="1767-1767"];
m12_861 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="InsightTests.cs", label="Type = TradierOrderType.Limit", span="1771-1771"];
m12_862 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="InsightTests.cs", label="Stop = 0m", span="1772-1772"];
m12_863 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", span="1761-1761"];
m12_462 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="InsightTests.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="43-43"];
m12_92 [cluster="ApplicationException.cstr", file="InsightTests.cs", label="Entry ApplicationException.cstr", span=""];
m12_638 [cluster="string.Format(string, object, object, object)", file="InsightTests.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m12_412 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="InsightTests.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="61-61"];
m12_4 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="_cachedOpenOrdersByTradierOrderID = new ConcurrentDictionary<long, TradierOrder>()", span="127-127"];
m12_5 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="_rateLimitPeriod = new Dictionary<TradierApiRequestType, TimeSpan>()", span="130-130"];
m12_6 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="_rateLimitNextRequest = new Dictionary<TradierApiRequestType, DateTime>()", span="131-131"];
m12_44 [cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="InsightTests.cs", label="Entry QuantConnect.Configuration.Config.GetDouble(string, double)", span="145-145"];
m12_149 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="InsightTests.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="129-129"];
m12_538 [cluster="QuantConnect.Securities.Equity.EquityExchange.DateTimeIsOpen(System.DateTime)", file="InsightTests.cs", label="Entry QuantConnect.Securities.Equity.EquityExchange.DateTimeIsOpen(System.DateTime)", span="93-93"];
m12_18 [cluster="System.DateTime.DateTime()", file="InsightTests.cs", label="QuantConnect.Tests.Brokerages.OrderTestParameters", span=""];
m12_398 [cluster="Unk.Select", file="InsightTests.cs", label="Entry Unk.Select", span=""];
m12_401 [cluster="Unk.ToDictionary", file="InsightTests.cs", label="Entry Unk.ToDictionary", span=""];
m12_639 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1318-1318"];
m12_640 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="return order.Status != TradierOrderStatus.Filled\r\n                && order.Status != TradierOrderStatus.Canceled\r\n                && order.Status != TradierOrderStatus.Expired\r\n                && order.Status != TradierOrderStatus.Rejected;", span="1320-1323"];
m12_641 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1318-1318"];
m12_450 [cluster="QuantConnect.Securities.IOrderMapping.GetOrderByBrokerageId(int)", file="InsightTests.cs", label="Entry QuantConnect.Securities.IOrderMapping.GetOrderByBrokerageId(int)", span="35-35"];
m12_466 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="954-954"];
m12_467 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Log.Trace(''TradierBrokerage.UpdateOrder(): '' + order)", span="956-956"];
m12_468 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="!order.BrokerId.Any()", span="958-958"];
m12_471 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var activeOrder = order.BrokerId.Where(x => _cachedOpenOrdersByTradierOrderID.ContainsKey(x)).Select(x => _cachedOpenOrdersByTradierOrderID[x]).SingleOrDefault()", span="966-966"];
m12_473 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Log.Trace(''Unable to locate active Tradier order for QC order id: '' + order.Id + '' with Tradier ids: '' + string.Join('', '', order.BrokerId))", span="969-969"];
m12_477 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="_contingentOrdersByQCOrderID.TryGetValue(order.Id, out contingent)", span="977-977"];
m12_479 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="quantity != order.AbsoluteQuantity", span="982-982"];
m12_483 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var orderType = ConvertOrderType(order.Type)", span="991-991"];
m12_484 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var orderDuration = GetOrderDuration(order.Duration)", span="992-992"];
m12_485 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var limitPrice = GetLimitPrice(order)", span="993-993"];
m12_486 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var stopPrice = GetStopPrice(order)", span="994-994"];
m12_469 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Log.Trace(''TradierBrokerage.UpdateOrder(): Unable to update order without BrokerId.'')", span="961-961"];
m12_470 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return false;", span="962-962"];
m12_472 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="activeOrder == null", span="967-967"];
m12_475 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="decimal quantity = activeOrder.Quantity", span="973-973"];
m12_487 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var response = ChangeOrder(_accountID, activeOrder.Id,\r\n                orderType,\r\n                orderDuration,\r\n                limitPrice,\r\n                stopPrice\r\n                )", span="995-1000"];
m12_490 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''UpdateFailed'', ''Failed to update Tradier order id: '' + activeOrder.Id + ''. '' + errors))", span="1005-1005"];
m12_474 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return false;", span="970-970"];
m12_476 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="ContingentOrderQueue contingent", span="976-976"];
m12_478 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="quantity = contingent.QCOrder.AbsoluteQuantity", span="979-979"];
m12_492 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="contingent != null", span="1010-1010"];
m12_493 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="contingent.Contingents", span="1012-1012"];
m12_480 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Log.Trace(''TradierBrokerage.UpdateOrder(): Unable to update order quantity.'')", span="984-984"];
m12_481 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''UpdateRejected'', ''Unable to modify Tradier order quantities.''))", span="985-985"];
m12_482 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return false;", span="986-986"];
m12_494 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="orderRequest.Type = orderType", span="1014-1014"];
m12_495 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="orderRequest.Duration = orderDuration", span="1015-1015"];
m12_496 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="orderRequest.Price = limitPrice", span="1016-1016"];
m12_497 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="orderRequest.Stop = stopPrice", span="1017-1017"];
m12_488 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="!response.Errors.Errors.IsNullOrEmpty()", span="1002-1002"];
m12_489 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="string errors = string.Join('', '', response.Errors.Errors)", span="1004-1004"];
m12_491 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return false;", span="1006-1006"];
m12_499 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return true;", span="1022-1022"];
m12_498 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="orderRequest.ConvertStopOrderTypes()", span="1018-1018"];
m12_500 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="954-954"];
m12_736 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", span="1479-1479"];
m12_737 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label=status, span="1481-1481"];
m12_753 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="throw new ArgumentOutOfRangeException(''status'', status, null);", span="1506-1506"];
m12_738 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="OrderStatus.New", span="1483-1483"];
m12_740 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="OrderStatus.Update", span="1486-1486"];
m12_743 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="OrderStatus.PartiallyFilled", span="1490-1490"];
m12_745 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="OrderStatus.Filled", span="1493-1493"];
m12_747 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="OrderStatus.Canceled", span="1496-1496"];
m12_749 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="OrderStatus.None", span="1499-1499"];
m12_751 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="OrderStatus.Invalid", span="1502-1502"];
m12_739 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="return TradierOrderStatus.Pending;", span="1484-1484"];
m12_741 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="OrderStatus.Submitted", span="1487-1487"];
m12_742 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="return TradierOrderStatus.Submitted;", span="1488-1488"];
m12_744 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="return TradierOrderStatus.PartiallyFilled;", span="1491-1491"];
m12_746 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="return TradierOrderStatus.Filled;", span="1494-1494"];
m12_748 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="return TradierOrderStatus.Canceled;", span="1497-1497"];
m12_750 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="return TradierOrderStatus.Pending;", span="1500-1500"];
m12_752 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="return TradierOrderStatus.Rejected;", span="1503-1503"];
m12_754 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", span="1479-1479"];
m12_453 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="1030-1030"];
m12_517 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Log.Trace(''TradierBrokerage.CancelOrder(): '' + order)", span="1032-1032"];
m12_518 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="!order.BrokerId.Any()", span="1034-1034"];
m12_521 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="order.BrokerId", span="1040-1040"];
m12_528 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="OnOrderEvent(new OrderEvent(order, ''Tradier Fill Event''){Status = OrderStatus.Canceled})", span="1052-1052"];
m12_519 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Log.Trace(''TradierBrokerage.CancelOrder(): Unable to cancel order without BrokerId.'')", span="1036-1036"];
m12_520 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return false;", span="1037-1037"];
m12_522 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var response = CancelOrder(_accountID, orderID)", span="1042-1042"];
m12_529 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return true;", span="1056-1056"];
m12_527 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="_cachedOpenOrdersByTradierOrderID.TryRemove(orderID, out tradierOrder)", span="1051-1051"];
m12_523 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="response == null", span="1043-1043"];
m12_525 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="response.Errors.Errors.IsNullOrEmpty() && response.Order.Status == ''ok''", span="1048-1048"];
m12_524 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return false;", span="1046-1046"];
m12_526 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="TradierOrder tradierOrder", span="1050-1050"];
m12_530 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="1030-1030"];
m12_90 [cluster="Unk.Error", file="InsightTests.cs", label="Entry Unk.Error", span=""];
m12_125 [cluster="Unk.Trace", file="InsightTests.cs", label="Entry Unk.Trace", span=""];
m12_624 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", span="1447-1447"];
m12_719 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label=status, span="1449-1449"];
m12_720 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="TradierOrderStatus.Filled", span="1451-1451"];
m12_722 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="TradierOrderStatus.Canceled", span="1454-1454"];
m12_724 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="TradierOrderStatus.Open", span="1457-1457"];
m12_727 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="TradierOrderStatus.Expired", span="1461-1461"];
m12_730 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="TradierOrderStatus.Pending", span="1465-1465"];
m12_732 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="TradierOrderStatus.PartiallyFilled", span="1468-1468"];
m12_734 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="throw new ArgumentOutOfRangeException();", span="1472-1472"];
m12_721 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="return OrderStatus.Filled;", span="1452-1452"];
m12_723 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="return OrderStatus.Canceled;", span="1455-1455"];
m12_725 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="TradierOrderStatus.Submitted", span="1458-1458"];
m12_726 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="return OrderStatus.Submitted;", span="1459-1459"];
m12_728 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="TradierOrderStatus.Rejected", span="1462-1462"];
m12_729 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="return OrderStatus.Invalid;", span="1463-1463"];
m12_731 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="return OrderStatus.New;", span="1466-1466"];
m12_733 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="return OrderStatus.PartiallyFilled;", span="1469-1469"];
m12_735 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", span="1447-1447"];
m12_387 [cluster="System.Threading.Tasks.Task.WaitAll(params System.Threading.Tasks.Task[])", file="InsightTests.cs", label="Entry System.Threading.Tasks.Task.WaitAll(params System.Threading.Tasks.Task[])", span="0-0"];
m12_260 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", span="592-592"];
m12_261 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="InsightTests.cs", label="var request = new RestRequest(''markets/calendar'', Method.GET)", span="594-594"];
m12_262 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="InsightTests.cs", label="request.AddParameter(''month'', month.ToString())", span="595-595"];
m12_263 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="InsightTests.cs", label="request.AddParameter(''year'', year.ToString())", span="596-596"];
m12_264 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="InsightTests.cs", label="var calendarContainer = Execute<TradierCalendarStatus>(request, TradierApiRequestType.Data, ''calendar'')", span="597-597"];
m12_265 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="InsightTests.cs", label="return calendarContainer.Days.Days;", span="598-598"];
m12_266 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", span="592-592"];
m12_286 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", span="639-639"];
m12_287 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="bool success", span="641-641"];
m12_292 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="yield break;", span="648-648"];
m12_314 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="yield break;", span="696-696"];
m12_325 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="yield break;", span="723-723"];
m12_331 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="yield return tsd;", span="741-741"];
m12_288 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var symbolJoined = String.Join('','', symbols)", span="642-642"];
m12_289 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var session = CreateStreamSession()", span="643-643"];
m12_299 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var postData = ''symbols='' + symbolJoined + ''&sessionid='' + session.SessionId", span="665-665"];
m12_290 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="session == null || session.SessionId == null || session.Url == null", span="645-645"];
m12_293 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="Log.Trace(''Tradier.Stream(): Created Stream Session Id: '' + session.SessionId + '' Url:'' + session.Url, true)", span="650-650"];
m12_296 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="request = (HttpWebRequest) WebRequest.Create(session.Url)", span="658-658"];
m12_291 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="Log.Error(''Tradier.Stream(): Failed to Created Stream Session'', true)", span="647-647"];
m12_294 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="HttpWebRequest request", span="653-653"];
m12_295 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="success = true", span="657-657"];
m12_297 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="request.Accept = ''application/json''", span="661-661"];
m12_298 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="request.Headers.Add(''Authorization'', ''Bearer '' + AccessToken)", span="662-662"];
m12_301 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="request.Method = ''POST''", span="670-670"];
m12_302 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="request.ContentType = ''application/x-www-form-urlencoded''", span="671-671"];
m12_303 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="request.ContentLength = encodedData.Length", span="672-672"];
m12_304 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var postStream = request.GetRequestStream()", span="677-677"];
m12_311 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var response = (HttpWebResponse) request.GetResponse()", span="692-692"];
m12_300 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var encodedData = Encoding.ASCII.GetBytes(postData)", span="667-667"];
m12_305 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="postStream.Write(encodedData, 0, encodedData.Length)", span="679-679"];
m12_306 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label=Exception, span="682-682"];
m12_309 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="!success", span="688-688"];
m12_307 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="Log.Error(''Tradier.Stream(): Failed to write session parameters to URL: '' + err.Message + '' >>  ST >>'' + err.StackTrace, true)", span="684-684"];
m12_308 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="success = false", span="685-685"];
m12_310 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="Log.Trace(''Tradier.Stream(): Session Created, Reading Stream...'', true)", span="691-691"];
m12_312 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var tradierStream = response.GetResponseStream()", span="693-693"];
m12_313 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="tradierStream == null", span="694-694"];
m12_315 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var sr = new StreamReader(tradierStream)", span="699-699"];
m12_316 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var jsonReader = new JsonTextReader(sr)", span="700-700"];
m12_317 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var serializer = new JsonSerializer()", span="702-702"];
m12_318 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="jsonReader.SupportMultipleContent = true", span="703-703"];
m12_327 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="tsd = serializer.Deserialize<TradierStreamData>(jsonReader)", span="730-730"];
m12_319 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label=true, span="706-706"];
m12_321 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="successfulRead = jsonReader.Read()", span="712-712"];
m12_320 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="bool successfulRead", span="708-708"];
m12_322 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label=Exception, span="714-714"];
m12_324 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="!successfulRead", span="720-720"];
m12_323 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="Log.Error(''TradierBrokerage.Stream(): '' + err.Message)", span="716-716"];
m12_326 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="TradierStreamData tsd = null", span="727-727"];
m12_328 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label=Exception, span="732-732"];
m12_330 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="tsd != null", span="739-739"];
m12_329 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="Log.Error(''TradierBrokerage.Stream(): '' + err.Message)", span="735-735"];
m12_332 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Stream(System.Collections.Generic.List<string>)", span="639-639"];
m12_503 [cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="InsightTests.cs", label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m12_124 [cluster="Unk.FromSeconds", file="InsightTests.cs", label="Entry Unk.FromSeconds", span=""];
m12_691 [cluster="System.NotImplementedException.NotImplementedException(string)", file="InsightTests.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m12_402 [cluster="Unk.TryGetValue", file="InsightTests.cs", label="Entry Unk.TryGetValue", span=""];
m12_43 [cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", file="InsightTests.cs", label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0"];
m12_508 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", span="1668-1668"];
m12_821 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var stopm = order as StopMarketOrder", span="1670-1670"];
m12_824 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var stopl = order as StopLimitOrder", span="1675-1675"];
m12_822 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="stopm != null", span="1671-1671"];
m12_823 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return stopm.StopPrice;", span="1673-1673"];
m12_825 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="stopl != null", span="1676-1676"];
m12_826 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return stopl.StopPrice;", span="1678-1678"];
m12_827 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return 0;", span="1680-1680"];
m12_828 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", span="1668-1668"];
m12_845 [cluster="System.Collections.Generic.Queue<T>.Dequeue()", file="InsightTests.cs", label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0"];
m12_126 [cluster="Unk.OnSessionRefreshed", file="InsightTests.cs", label="Entry Unk.OnSessionRefreshed", span=""];
m12_582 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", span="1233-1233"];
m12_606 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="updatedOrder.RemainingQuantity != cachedOrder.RemainingQuantity \r\n             || ConvertStatus(updatedOrder.Status) != ConvertStatus(cachedOrder.Status)", span="1236-1237"];
m12_607 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="var qcOrder = _orderMapping.GetOrderByBrokerageId((int)updatedOrder.Id)", span="1239-1239"];
m12_608 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="var fill = new OrderEvent(qcOrder, ''Tradier Fill Event'')\r\n                {\r\n                    Status = ConvertStatus(updatedOrder.Status),\r\n                    // this is guaranteed to be wrong in the event we have multiple fills within our polling interval,\r\n                    // we're able to partially cope with the fill quantity by diffing the previous info vs current info\r\n                    // but the fill price will always be the most recent fill, so if we have two fills with 1/10 of a second\r\n                    // we'll get the latter fill price, so for large orders this can lead to inconsistent state\r\n                    FillPrice = updatedOrder.LastFillPrice,\r\n                    FillQuantity = (int)(updatedOrder.QuantityExecuted - cachedOrder.QuantityExecuted)\r\n                }", span="1240-1249"];
m12_609 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="IsShort(updatedOrder.Direction)", span="1252-1252"];
m12_619 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="Task.Run(() =>\r\n                            {\r\n                                Log.Trace(''TradierBrokerage.SubmitContingentOrder(): Submitting contingent order for QC id: '' + qcOrder.Id);\r\n                                \r\n                                var response = TradierPlaceOrder(order);\r\n                                if (response.Errors.Errors.IsNullOrEmpty())\r\n                                {\r\n                                    // add the new brokerage id for retrieval later\r\n                                    qcOrder.BrokerId.Add(response.Order.Id);\r\n                                }\r\n                                else\r\n                                {\r\n                                    // if we failed to place this order I don't know what to do, we've filled the first part\r\n                                    // and failed to place the second... strange.\r\n                                    Log.Error(''TradierBrokerage.SubmitContingentOrder(): Failed to submit contingent order.'');\r\n                                    var message = string.Format(''{0} Failed submitting contingent order for QC id: {1} Filled Tradier Order id: {2}'', qcOrder.Symbol, qcOrder.Id, updatedOrder.Id);\r\n                                    OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ContingentOrderFailed'', message));\r\n                                }\r\n                                _contingentReentranceGuardByQCOrderID.Remove(qcOrder.Id);\r\n                            })", span="1277-1296"];
m12_621 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="OrderIsClosed(updatedOrder)", span="1305-1305"];
m12_622 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="_cachedOpenOrdersByTradierOrderID.TryRemove(updatedOrder.Id, out cachedOrder)", span="1307-1307"];
m12_612 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="fill.Status == OrderStatus.Filled && _contingentOrdersByQCOrderID.TryGetValue(qcOrder.Id, out contingent)", span="1259-1259"];
m12_613 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="_contingentReentranceGuardByQCOrderID.Add(qcOrder.Id)", span="1262-1262"];
m12_616 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="_contingentOrdersByQCOrderID.TryRemove(qcOrder.Id, out contingent)", span="1268-1268"];
m12_610 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="fill.FillQuantity *= -1", span="1254-1254"];
m12_618 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="fill.Status = OrderStatus.PartiallyFilled", span="1275-1275"];
m12_620 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="OnOrderEvent(fill)", span="1301-1301"];
m12_611 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="ContingentOrderQueue contingent", span="1258-1258"];
m12_614 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="var order = contingent.Next()", span="1264-1264"];
m12_615 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="order == null || contingent.Contingents.Count == 0", span="1265-1265"];
m12_617 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="order != null", span="1271-1271"];
m12_623 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", span="1233-1233"];
m12_353 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="InsightTests.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m12_452 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="InsightTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0"];
m12_388 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", span="841-841"];
m12_389 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="InsightTests.cs", label="var holdings = GetPositions().Select(ConvertHolding).ToList()", span="843-843"];
m12_390 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="InsightTests.cs", label="var symbols = holdings.Select(x => x.Symbol).ToList()", span="844-844"];
m12_392 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="InsightTests.cs", label=holdings, span="846-846"];
m12_396 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="InsightTests.cs", label="return holdings;", span="854-854"];
m12_391 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="InsightTests.cs", label="var quotes = GetQuotes(symbols).ToDictionary(x => x.Symbol)", span="845-845"];
m12_394 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="InsightTests.cs", label="quotes.TryGetValue(holding.Symbol, out quote)", span="849-849"];
m12_393 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="InsightTests.cs", label="TradierQuote quote", span="848-848"];
m12_395 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="InsightTests.cs", label="holding.MarketPrice = quote.Last", span="851-851"];
m12_397 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", span="841-841"];
m12_659 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", span="1361-1361"];
m12_660 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="task = null", span="1363-1363"];
m12_662 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="order.Type", span="1365-1365"];
m12_664 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder = new LimitOrder {LimitPrice = order.Price}", span="1368-1368"];
m12_669 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="task = Task.Run(() => ((StopMarketOrder)qcOrder).StopPrice = GetOrder(order.Id).StopPrice)", span="1375-1375"];
m12_671 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder = new StopLimitOrder {LimitPrice = order.Price}", span="1378-1378"];
m12_672 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="task = Task.Run(() => ((StopLimitOrder) qcOrder).StopPrice = GetOrder(order.Id).StopPrice)", span="1379-1379"];
m12_673 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="throw new NotImplementedException(''The Tradier order type '' + order.Type + '' is not implemented.'');", span="1386-1386"];
m12_674 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder.Symbol = order.Symbol", span="1388-1388"];
m12_675 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder.Quantity = ConvertQuantity(order)", span="1389-1389"];
m12_677 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder.Status = ConvertStatus(order.Status)", span="1391-1391"];
m12_678 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder.BrokerId.Add(order.Id)", span="1392-1392"];
m12_679 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder.Duration = ConvertDuration(order.Duration)", span="1394-1394"];
m12_680 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="var orderByBrokerageId = _orderMapping.GetOrderByBrokerageId((int) order.Id)", span="1395-1395"];
m12_683 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder.Time = order.TransactionDate", span="1400-1400"];
m12_661 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="Order qcOrder", span="1364-1364"];
m12_663 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="TradierOrderType.Limit", span="1367-1367"];
m12_665 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="TradierOrderType.Market", span="1370-1370"];
m12_667 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="TradierOrderType.StopMarket", span="1373-1373"];
m12_670 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="TradierOrderType.StopLimit", span="1377-1377"];
m12_666 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder = new MarketOrder()", span="1371-1371"];
m12_668 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder = new StopMarketOrder()", span="1374-1374"];
m12_676 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder.SecurityType = SecurityType.Equity", span="1390-1390"];
m12_682 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="qcOrder.Id = orderByBrokerageId.Id", span="1398-1398"];
m12_684 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="return qcOrder;", span="1401-1401"];
m12_681 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="orderByBrokerageId != null", span="1396-1396"];
m12_685 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder, out System.Threading.Tasks.Task)", span="1361-1361"];
m12_13 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="InsightTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m12_219 [cluster="decimal.ToString(System.IFormatProvider)", file="InsightTests.cs", label="Entry decimal.ToString(System.IFormatProvider)", span="0-0"];
m12_459 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", span="1716-1716"];
m12_837 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="InsightTests.cs", label="QCOrder = qcOrder", span="1718-1718"];
m12_838 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="InsightTests.cs", label="Contingents = new Queue<TradierPlaceOrderRequest>(contingents)", span="1719-1719"];
m12_839 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", span="1716-1716"];
m12_602 [cluster="Unk.OrderIsOpen", file="InsightTests.cs", label="Entry Unk.OrderIsOpen", span=""];
m12_247 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", span="566-566"];
m12_248 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="InsightTests.cs", label="var request = new RestRequest(''markets/history'', Method.GET)", span="571-571"];
m12_249 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="InsightTests.cs", label="request.AddParameter(''symbol'', symbol, ParameterType.QueryString)", span="572-572"];
m12_250 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="InsightTests.cs", label="request.AddParameter(''start'', start.ToString(''yyyy-MM-dd''), ParameterType.QueryString)", span="573-573"];
m12_251 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="InsightTests.cs", label="request.AddParameter(''end'', end.ToString(''yyyy-MM-dd''), ParameterType.QueryString)", span="574-574"];
m12_252 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="InsightTests.cs", label="request.AddParameter(''interval'', GetEnumDescription(interval))", span="575-575"];
m12_253 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="InsightTests.cs", label="var dataContainer = Execute<TradierHistoryDataContainer>(request, TradierApiRequestType.Data, ''history'')", span="576-576"];
m12_254 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="InsightTests.cs", label="return dataContainer.Data;", span="577-577"];
m12_255 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", span="566-566"];
m12_40 [cluster="System.TimeSpan.FromDays(double)", file="InsightTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m12_449 [cluster="Unk.FirstOrDefault", file="InsightTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m12_88 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="167-167"];
m12_581 [cluster="System.Threading.Monitor.TryEnter(object)", file="InsightTests.cs", label="Entry System.Threading.Monitor.TryEnter(object)", span="0-0"];
m12_809 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", span="1648-1648"];
m12_810 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="order.Type", span="1650-1650"];
m12_811 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="OrderType.Market", span="1652-1652"];
m12_813 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="OrderType.Limit", span="1654-1654"];
m12_815 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="OrderType.StopMarket", span="1656-1656"];
m12_817 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="OrderType.StopLimit", span="1658-1658"];
m12_819 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="throw new ArgumentOutOfRangeException();", span="1661-1661"];
m12_812 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return TradierOrderType.Market;", span="1653-1653"];
m12_814 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return TradierOrderType.Limit;", span="1655-1655"];
m12_816 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return TradierOrderType.StopMarket;", span="1657-1657"];
m12_818 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return TradierOrderType.StopLimit;", span="1659-1659"];
m12_820 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", span="1648-1648"];
m12_205 [cluster="System.Math.Round(decimal, int)", file="InsightTests.cs", label="Entry System.Math.Round(decimal, int)", span="0-0"];
m12_49 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", span="266-266"];
m12_93 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="var raw = ''''", span="271-271"];
m12_94 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="bool success", span="272-272"];
m12_95 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label=_lockAccessCredentials, span="273-273"];
m12_96 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="var client = new RestClient(''https://www.quantconnect.com/terminal/'')", span="278-278"];
m12_97 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="var request = new RestRequest(''processTradier'', Method.GET)", span="281-281"];
m12_101 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="var result = client.Execute(request)", span="287-287"];
m12_112 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="Log.Error(''Tradier.RefreshSession(): Error Refreshing Session: URL: '' + client.BuildUri(request) + '' Response: '' + result.Content)", span="305-305"];
m12_98 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="request.AddParameter(''uid'', UserId.ToString(), ParameterType.GetOrPost)", span="282-282"];
m12_99 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="request.AddParameter(''accessToken'', AccessToken, ParameterType.GetOrPost)", span="283-283"];
m12_100 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="request.AddParameter(''refreshToken'', RefreshToken, ParameterType.GetOrPost)", span="284-284"];
m12_102 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="raw = result.Content", span="288-288"];
m12_103 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="var newTokens = JsonConvert.DeserializeObject<TokenResponse>(result.Content)", span="291-291"];
m12_109 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="Log.Trace(''SESSION REFRESHED: Access: '' + AccessToken + '' Refresh: '' + RefreshToken + '' Issued At: '' + _lifeSpan + '' JSON>>''\r\n                            + result.Content)", span="298-299"];
m12_115 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="Log.Error(''Tradier.RefreshSession(): '' + err.Message + '' >> '' + raw)", span="311-311"];
m12_104 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="newTokens != null && newTokens.Success", span="292-292"];
m12_105 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="AccessToken = newTokens.AccessToken", span="294-294"];
m12_106 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="RefreshToken = newTokens.RefreshToken", span="295-295"];
m12_107 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="_issuedAt = newTokens.IssuedAt", span="296-296"];
m12_108 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="_lifeSpan = TimeSpan.FromSeconds(newTokens.ExpiresIn)", span="297-297"];
m12_110 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="OnSessionRefreshed(newTokens)", span="300-300"];
m12_111 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="success = true", span="301-301"];
m12_113 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="success = false", span="306-306"];
m12_114 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label=Exception, span="309-309"];
m12_117 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="!success", span="316-316"];
m12_116 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="success = false", span="312-312"];
m12_119 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="return success;", span="322-322"];
m12_118 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''RefreshSession'', ''Failed to refresh access token.''))", span="319-319"];
m12_120 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", span="266-266"];
m12_151 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", span="383-383"];
m12_152 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="InsightTests.cs", label="var request = new RestRequest(''accounts/{accountId}/history'', Method.GET)", span="385-385"];
m12_153 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="InsightTests.cs", label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="386-386"];
m12_154 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="InsightTests.cs", label="var eventContainer = Execute<TradierEventContainer>(request, TradierApiRequestType.Standard)", span="388-388"];
m12_155 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="InsightTests.cs", label="eventContainer.TradierEvents == null || eventContainer.TradierEvents.Events == null", span="390-390"];
m12_158 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="InsightTests.cs", label="return eventContainer.TradierEvents.Events;", span="397-397"];
m12_156 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="InsightTests.cs", label="Log.Trace(''Tradier.GetAccountEvents(): No events found'')", span="393-393"];
m12_157 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="InsightTests.cs", label="return new List<TradierEvent>();", span="394-394"];
m12_159 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", span="383-383"];
m12_369 [cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="InsightTests.cs", label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0"];
m12_506 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", span="1634-1634"];
m12_804 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="InsightTests.cs", label=duration, span="1636-1636"];
m12_805 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="InsightTests.cs", label="OrderDuration.GTC", span="1638-1638"];
m12_807 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="InsightTests.cs", label="throw new ArgumentOutOfRangeException();", span="1641-1641"];
m12_806 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="InsightTests.cs", label="return TradierOrderDuration.GTC;", span="1639-1639"];
m12_808 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.OrderDuration)", span="1634-1634"];
m12_256 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", span="583-583"];
m12_257 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="InsightTests.cs", label="var request = new RestRequest(''markets/clock'', Method.GET)", span="585-585"];
m12_258 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="InsightTests.cs", label="return Execute<TradierMarketStatus>(request, TradierApiRequestType.Data, ''clock'');", span="586-586"];
m12_259 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", span="583-583"];
m12_15 [cluster="System.Enum.GetValues(System.Type)", file="InsightTests.cs", label="Entry System.Enum.GetValues(System.Type)", span="0-0"];
m12_45 [cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, int, int)", file="InsightTests.cs", label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, int, int)", span="0-0"];
m12_507 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", span="1688-1688"];
m12_829 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var limit = order as LimitOrder", span="1690-1690"];
m12_832 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="var stopl = order as StopLimitOrder", span="1695-1695"];
m12_830 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="limit != null", span="1691-1691"];
m12_831 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return limit.LimitPrice;", span="1693-1693"];
m12_833 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="stopl != null", span="1696-1696"];
m12_834 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return stopl.LimitPrice;", span="1698-1698"];
m12_835 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return 0;", span="1700-1700"];
m12_836 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", span="1688-1688"];
m12_362 [cluster="Unk.DeserializeObject", file="InsightTests.cs", label="Entry Unk.DeserializeObject", span=""];
m12_692 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1517-1517"];
m12_755 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="order.Direction", span="1519-1519"];
m12_760 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="return (int) order.Quantity;", span="1525-1525"];
m12_765 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="return -(int) order.Quantity;", span="1531-1531"];
m12_756 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="TradierOrderDirection.Buy", span="1521-1521"];
m12_761 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="TradierOrderDirection.SellShort", span="1527-1527"];
m12_766 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="TradierOrderDirection.None", span="1533-1533"];
m12_768 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="throw new ArgumentOutOfRangeException();", span="1537-1537"];
m12_757 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="TradierOrderDirection.BuyToCover", span="1522-1522"];
m12_758 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="TradierOrderDirection.BuyToClose", span="1523-1523"];
m12_759 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="TradierOrderDirection.BuyToOpen", span="1524-1524"];
m12_762 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="TradierOrderDirection.Sell", span="1528-1528"];
m12_763 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="TradierOrderDirection.SellToOpen", span="1529-1529"];
m12_764 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="TradierOrderDirection.SellToClose", span="1530-1530"];
m12_767 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="return 0;", span="1534-1534"];
m12_769 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1517-1517"];
m12_718 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="InsightTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m12_562 [cluster="string.Format(string, object, object)", file="InsightTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m12_689 [cluster="System.Threading.Tasks.Task.Run<TResult>(System.Func<TResult>)", file="InsightTests.cs", label="Entry System.Threading.Tasks.Task.Run<TResult>(System.Func<TResult>)", span="0-0"];
m12_461 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", span="1091-1091"];
m12_546 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="TradierOrderClass classification = TradierOrderClass.Equity", span="1093-1093"];
m12_548 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="order.Price != 0 || order.Stop != 0", span="1096-1096"];
m12_549 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="stopLimit = string.Format('' at{0}{1}'', \r\n                    order.Stop == 0 ? '''' : '' stop '' + order.Stop, \r\n                    order.Price == 0 ? '''' : '' limit '' + order.Price\r\n                    )", span="1098-1101"];
m12_550 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="Log.Trace(string.Format(''TradierBrokerage.TradierPlaceOrder(): {0} to {1} {2} units of {3}{4}'', \r\n                order.Type, order.Direction, order.Quantity, order.Symbol, stopLimit)\r\n                )", span="1104-1106"];
m12_551 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="var response = PlaceOrder(_accountID, \r\n                order.Classification,\r\n                order.Direction,\r\n                order.Symbol,\r\n                order.Quantity,\r\n                order.Price,\r\n                order.Stop,\r\n                order.OptionSymbol,\r\n                order.Type,\r\n                order.Duration\r\n                )", span="1108-1118"];
m12_553 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="OnOrderEvent(new OrderEvent(order.QCOrder){Status = OrderStatus.Submitted})", span="1124-1124"];
m12_554 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="_cachedOpenOrdersByTradierOrderID.AddOrUpdate(response.Order.Id, new TradierOrderDetailed\r\n                {\r\n                    Id = response.Order.Id,\r\n                    Quantity = order.Quantity,\r\n                    Status = TradierOrderStatus.Submitted,\r\n                    Symbol = order.Symbol,\r\n                    Type = order.Type,\r\n                    TransactionDate = DateTime.Now,\r\n                    AverageFillPrice = 0m,\r\n                    Class = classification,\r\n                    CreatedDate = DateTime.Now,\r\n                    Direction = order.Direction,\r\n                    Duration = order.Duration,\r\n                    LastFillPrice = 0m,\r\n                    LastFillQuantity = 0m,\r\n                    Legs = new List<TradierOrderLeg>(),\r\n                    NumberOfLegs = 0,\r\n                    Price = order.Price,\r\n                    QuantityExecuted = 0m,\r\n                    RemainingQuantity = order.Quantity,\r\n                    StopPrice = order.Stop\r\n                })", span="1127-1148"];
m12_555 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="OnOrderEvent(new OrderEvent(order.QCOrder) {Status = OrderStatus.Invalid})", span="1153-1153"];
m12_556 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="var message = ''Order '' + order.QCOrder.Id + '': '' + string.Join(Environment.NewLine, response.Errors.Errors)", span="1155-1155"];
m12_557 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="string.IsNullOrEmpty(order.QCOrder.Tag)", span="1156-1156"];
m12_558 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="order.QCOrder.Tag = message", span="1158-1158"];
m12_547 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="string stopLimit = string.Empty", span="1095-1095"];
m12_552 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="response.Errors.Errors.IsNullOrEmpty()", span="1121-1121"];
m12_560 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="return response;", span="1164-1164"];
m12_559 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''OrderError'', message))", span="1161-1161"];
m12_561 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", span="1091-1091"];
m12_220 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", span="517-517"];
m12_221 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="InsightTests.cs", label="var request = new RestRequest(''accounts/{accountId}/orders/{orderId}'')", span="520-520"];
m12_222 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="InsightTests.cs", label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="521-521"];
m12_223 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="InsightTests.cs", label="request.AddUrlSegment(''orderId'', orderId.ToString())", span="522-522"];
m12_224 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="InsightTests.cs", label="request.Method = Method.DELETE", span="523-523"];
m12_225 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="InsightTests.cs", label="return Execute<TradierOrderResponse>(request, TradierApiRequestType.Orders);", span="526-526"];
m12_226 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(long, long)", span="517-517"];
m12_454 [cluster="QuantConnect.Securities.IHoldingsProvider.GetHoldingsQuantity(string)", file="InsightTests.cs", label="Entry QuantConnect.Securities.IHoldingsProvider.GetHoldingsQuantity(string)", span="41-41"];
m12_16 [cluster="System.TimeSpan.FromSeconds(double)", file="InsightTests.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m12_533 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="1064-1064"];
m12_534 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="!Exchange.DateTimeIsOpen(DateTime.Now)", span="1067-1067"];
m12_536 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="return order.SecurityType == SecurityType.Equity;", span="1071-1071"];
m12_535 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ExtendedMarket'', ''Tradier does not support extended market hours trading.  Your order will be processed at market open.''))", span="1069-1069"];
m12_537 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CanProcessOrder(QuantConnect.Orders.Order)", span="1064-1064"];
m12_7 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="Enum.GetValues(typeof(TradierApiRequestType))", span="134-134"];
m12_206 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", span="491-491"];
m12_207 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="var request = new RestRequest(''accounts/{accountId}/orders/{orderId}'')", span="499-499"];
m12_208 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="500-500"];
m12_209 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="request.AddUrlSegment(''orderId'', orderId.ToString())", span="501-501"];
m12_211 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="request.AddParameter(''type'', GetEnumDescription(type))", span="505-505"];
m12_212 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="request.AddParameter(''duration'', GetEnumDescription(duration))", span="506-506"];
m12_213 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="price != 0", span="507-507"];
m12_214 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="request.AddParameter(''price'', Math.Round(price, 2).ToString(CultureInfo.InvariantCulture))", span="507-507"];
m12_215 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="stop != 0", span="508-508"];
m12_216 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="request.AddParameter(''stop'', Math.Round(stop, 2).ToString(CultureInfo.InvariantCulture))", span="508-508"];
m12_210 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="request.Method = Method.PUT", span="502-502"];
m12_217 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="return Execute<TradierOrderResponse>(request, TradierApiRequestType.Orders);", span="511-511"];
m12_218 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(long, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", span="491-491"];
m12_333 [cluster="System.Net.WebRequest.Create(string)", file="InsightTests.cs", label="Entry System.Net.WebRequest.Create(string)", span="0-0"];
m12_564 [cluster="QuantConnect.Brokerages.Tradier.TradierOrderDetailed.TradierOrderDetailed()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierOrderDetailed.TradierOrderDetailed()", span="198-198"];
m12_341 [cluster="JsonTextReader.cstr", file="InsightTests.cs", label="Entry JsonTextReader.cstr", span=""];
m12_342 [cluster="JsonSerializer.cstr", file="InsightTests.cs", label="Entry JsonSerializer.cstr", span=""];
m12_236 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="InsightTests.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m12_770 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", span="1544-1544"];
m12_771 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", file="InsightTests.cs", label="return new Holding\r\n            {\r\n                Symbol = position.Symbol,\r\n                Type = SecurityType.Equity,\r\n                AveragePrice = position.CostBasis/position.Quantity,\r\n                ConversionRate = 1.0m,\r\n                CurrencySymbol = ''$'',\r\n                MarketPrice = 0m, //--> GetAccountHoldings does a call to GetQuotes to fill this data in\r\n                Quantity = position.Quantity\r\n            };", span="1546-1555"];
m12_772 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", span="1544-1544"];
m12_509 [cluster="Unk.ChangeOrder", file="InsightTests.cs", label="Entry Unk.ChangeOrder", span=""];
m12_400 [cluster="Unk.GetQuotes", file="InsightTests.cs", label="Entry Unk.GetQuotes", span=""];
m12_128 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="InsightTests.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m12_129 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", span="332-332"];
m12_130 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="InsightTests.cs", label="var request = new RestRequest(''user/profile'', Method.GET)", span="334-334"];
m12_131 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="InsightTests.cs", label="var userContainer = Execute<TradierUserContainer>(request, TradierApiRequestType.Standard)", span="335-335"];
m12_132 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="InsightTests.cs", label="return userContainer.Profile;", span="336-336"];
m12_133 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", span="332-332"];
m12_134 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", span="346-346"];
m12_135 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="InsightTests.cs", label="var request = new RestRequest(''accounts/{accountId}/balances'', Method.GET)", span="348-348"];
m12_136 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="InsightTests.cs", label="request.AddParameter(''accountId'', accountId, ParameterType.UrlSegment)", span="349-349"];
m12_137 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="InsightTests.cs", label="var balContainer = Execute<TradierBalance>(request, TradierApiRequestType.Standard)", span="350-350"];
m12_138 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="InsightTests.cs", label="return balContainer.Balances;", span="351-351"];
m12_139 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(long)", span="346-346"];
m12_41 [cluster="System.TimeSpan.FromMinutes(double)", file="InsightTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m12_82 [cluster="RestClient.cstr", file="InsightTests.cs", label="Entry RestClient.cstr", span=""];
m12_162 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", span="403-403"];
m12_163 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="InsightTests.cs", label="var request = new RestRequest(''accounts/{accountId}/gainloss'')", span="405-405"];
m12_164 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="InsightTests.cs", label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="406-406"];
m12_165 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="InsightTests.cs", label="var gainLossContainer = Execute<TradierGainLossContainer>(request, TradierApiRequestType.Standard)", span="408-408"];
m12_166 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="InsightTests.cs", label="gainLossContainer.GainLossClosed == null || gainLossContainer.GainLossClosed.ClosedPositions == null", span="410-410"];
m12_169 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="InsightTests.cs", label="return gainLossContainer.GainLossClosed.ClosedPositions;", span="417-417"];
m12_167 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="InsightTests.cs", label="Log.Trace(''Tradier.GetGainLoss(): No gain loss found'')", span="413-413"];
m12_168 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="InsightTests.cs", label="return new List<TradierGainLoss>();", span="414-414"];
m12_170 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", span="403-403"];
m12_338 [cluster="System.Net.HttpWebRequest.GetResponse()", file="InsightTests.cs", label="Entry System.Net.HttpWebRequest.GetResponse()", span="0-0"];
m12_160 [cluster="long.ToString()", file="InsightTests.cs", label="Entry long.ToString()", span="0-0"];
m12_451 [cluster="Unk.TryRemove", file="InsightTests.cs", label="Entry Unk.TryRemove", span=""];
m12_86 [cluster="Unk.>", file="InsightTests.cs", label="Entry Unk.>", span=""];
m12_504 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="InsightTests.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m12_53 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", span="1170-1170"];
m12_566 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="!Monitor.TryEnter(_fillLock)", span="1173-1173"];
m12_567 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="return;", span="1175-1175"];
m12_568 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="var updatedOrders = GetIntradayAndPendingOrders().ToDictionary(x => x.Id)", span="1180-1180"];
m12_569 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label=_cachedOpenOrdersByTradierOrderID, span="1183-1183"];
m12_571 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="updatedOrders.TryGetValue(cachedOrder.Key, out updatedOrder)", span="1186-1186"];
m12_576 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="var unknownOrderIDs = updatedOrders.Where(x => !_cachedOpenOrdersByTradierOrderID.ContainsKey(x.Key) && OrderIsOpen(x.Value)).ToList()", span="1220-1220"];
m12_570 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="TradierOrder updatedOrder", span="1185-1185"];
m12_572 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="ProcessPotentiallyUpdatedOrder(cachedOrder.Value, updatedOrder)", span="1189-1189"];
m12_573 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="!_reentranceGuardByTradierOrderID.Add(cachedOrder.Key)", span="1195-1195"];
m12_574 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="var cachedOrderLocal = cachedOrder", span="1201-1201"];
m12_575 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="Task.Run(() =>\r\n                    {\r\n                        var updatedOrderLocal = GetOrder(cachedOrderLocal.Key);\r\n                        if (updatedOrderLocal == null)\r\n                        {\r\n                            Log.Error(string.Format(''TradierBrokerage.CheckForFills(): Unable to locate order {0} in cached open orders.'', cachedOrderLocal.Key));\r\n                        }\r\n                        else\r\n                        {\r\n                            ProcessPotentiallyUpdatedOrder(cachedOrderLocal.Value, updatedOrderLocal);\r\n                        }\r\n\r\n                        // signal that we've left the task\r\n                        _reentranceGuardByTradierOrderID.Remove(cachedOrderLocal.Key);\r\n                    })", span="1202-1216"];
m12_577 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="unknownOrderIDs.Count != 0", span="1221-1221"];
m12_578 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="var ids = string.Join('', '', unknownOrderIDs.Select(x => x.Key))", span="1223-1223"];
m12_579 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''UnknownOrder'', ''Received unknown Tradier order id(s): '' + ids))", span="1224-1224"];
m12_580 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", span="1170-1170"];
m12_42 [cluster="System.TimeSpan.Subtract(System.TimeSpan)", file="InsightTests.cs", label="Entry System.TimeSpan.Subtract(System.TimeSpan)", span="0-0"];
m12_625 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", span="1337-1337"];
m12_644 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label=direction, span="1339-1339"];
m12_656 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="throw new ArgumentOutOfRangeException(''direction'', direction, null);", span="1353-1353"];
m12_645 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="TradierOrderDirection.Sell", span="1341-1341"];
m12_650 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="TradierOrderDirection.Buy", span="1346-1346"];
m12_646 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="TradierOrderDirection.SellShort", span="1342-1342"];
m12_647 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="TradierOrderDirection.SellToOpen", span="1343-1343"];
m12_648 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="TradierOrderDirection.SellToClose", span="1344-1344"];
m12_649 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="return true;", span="1345-1345"];
m12_651 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="TradierOrderDirection.BuyToCover", span="1347-1347"];
m12_652 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="TradierOrderDirection.BuyToClose", span="1348-1348"];
m12_653 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="TradierOrderDirection.BuyToOpen", span="1349-1349"];
m12_654 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="TradierOrderDirection.None", span="1350-1350"];
m12_655 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="return false;", span="1351-1351"];
m12_657 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", span="1337-1337"];
m12_267 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", span="604-604"];
m12_268 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="InsightTests.cs", label="var request = new RestRequest(''markets/search'', Method.GET)", span="606-606"];
m12_269 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="InsightTests.cs", label="request.AddParameter(''q'', query)", span="607-607"];
m12_270 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="InsightTests.cs", label="request.AddParameter(''indexes'', includeIndexes.ToString())", span="608-608"];
m12_271 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="InsightTests.cs", label="var searchContainer = Execute<TradierSearchContainer>(request, TradierApiRequestType.Data, ''securities'')", span="609-609"];
m12_272 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="InsightTests.cs", label="return searchContainer.Results;", span="610-610"];
m12_273 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", span="604-604"];
m12_275 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", span="616-616"];
m12_276 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="InsightTests.cs", label="var request = new RestRequest(''markets/lookup'', Method.GET)", span="618-618"];
m12_277 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="InsightTests.cs", label="request.AddParameter(''q'', query)", span="619-619"];
m12_278 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="InsightTests.cs", label="request.AddParameter(''indexes'', includeIndexes.ToString())", span="620-620"];
m12_279 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="InsightTests.cs", label="var searchContainer = Execute<TradierSearchContainer>(request, TradierApiRequestType.Data, ''securities'')", span="621-621"];
m12_280 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="InsightTests.cs", label="return searchContainer.Results;", span="622-622"];
m12_281 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", span="616-616"];
m12_84 [cluster="System.Threading.Thread.Sleep(int)", file="InsightTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m12_690 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="InsightTests.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="50-50"];
m12_688 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="InsightTests.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="40-40"];
m12_14 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="InsightTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m12_693 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="1431-1431"];
m12_711 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label=duration, span="1433-1433"];
m12_712 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="TradierOrderDuration.GTC", span="1435-1435"];
m12_714 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="TradierOrderDuration.Day", span="1437-1437"];
m12_716 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="throw new ArgumentOutOfRangeException();", span="1440-1440"];
m12_713 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="return OrderDuration.GTC;", span="1436-1436"];
m12_715 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="return (OrderDuration) 1;", span="1438-1438"];
m12_717 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDuration(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="1431-1431"];
m12_140 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", span="361-361"];
m12_141 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="InsightTests.cs", label="var request = new RestRequest(''accounts/{accountId}/positions'', Method.GET)", span="363-363"];
m12_142 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="InsightTests.cs", label="request.AddParameter(''accountId'', _accountID, ParameterType.UrlSegment)", span="364-364"];
m12_143 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="InsightTests.cs", label="var positionContainer = Execute<TradierPositionsContainer>(request, TradierApiRequestType.Standard)", span="365-365"];
m12_144 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="InsightTests.cs", label="positionContainer.TradierPositions == null || positionContainer.TradierPositions.Positions == null", span="367-367"];
m12_147 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="InsightTests.cs", label="return positionContainer.TradierPositions.Positions;", span="374-374"];
m12_145 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="InsightTests.cs", label="Log.Trace(''Tradier.Positions(): No positions found'')", span="370-370"];
m12_146 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="InsightTests.cs", label="return new List<TradierPosition>();", span="371-371"];
m12_148 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", span="361-361"];
m12_0 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", span="120-120"];
m12_1 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="_orderMapping = orderMapping", span="123-123"];
m12_2 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="_holdingsProvider = holdingsProvider", span="124-124"];
m12_3 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="_accountID = accountID", span="125-125"];
m12_89 [cluster="Unk.Contains", file="InsightTests.cs", label="Entry Unk.Contains", span=""];
m12_12 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderMapping, QuantConnect.Securities.IHoldingsProvider, long)", span="120-120"];
m12_565 [cluster="string.IsNullOrEmpty(string)", file="InsightTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m12_386 [cluster="System.Collections.Generic.List<T>.ToArray()", file="InsightTests.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m12_39 [cluster="System.Threading.Timer.Dispose()", file="InsightTests.cs", label="Entry System.Threading.Timer.Dispose()", span="0-0"];
m12_227 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", span="532-532"];
m12_228 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="symbols.Count == 0", span="534-534"];
m12_231 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var csvSymbols = String.Join('','', symbols)", span="541-541"];
m12_229 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="return new List<TradierQuote>();", span="536-536"];
m12_230 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var request = new RestRequest(''markets/quotes'', Method.GET)", span="540-540"];
m12_232 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="request.AddParameter(''symbols'', csvSymbols, ParameterType.QueryString)", span="542-542"];
m12_233 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="var dataContainer = Execute<TradierQuoteContainer>(request, TradierApiRequestType.Data, ''quotes'')", span="544-544"];
m12_234 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="return dataContainer.Quotes;", span="545-545"];
m12_235 [cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="InsightTests.cs", label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", span="532-532"];
m12_352 [cluster="System.Type.GetField(string)", file="InsightTests.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m12_864 [file="InsightTests.cs", label="QuantConnect.Brokerages.Tradier.TradierBrokerage", span=""];
m12_865 [file="InsightTests.cs", label="QuantConnect.Orders.Order", span=""];
m12_866 [file="InsightTests.cs", label=cachedOrderLocal, span=""];
m12_867 [file="InsightTests.cs", label=qcOrder, span=""];
m12_868 [file="InsightTests.cs", label=order, span=""];
m12_869 [file="InsightTests.cs", label="QuantConnect.Brokerages.Tradier.TradierOrder", span=""];
m12_870 [file="InsightTests.cs", label="QuantConnect.Brokerages.Tradier.TradierOrder", span=""];
m12_871 [file="InsightTests.cs", label=qcOrder, span=""];
m12_872 [file="InsightTests.cs", label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", span=""];
m12_873 [file="InsightTests.cs", label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", span=""];
m13_23 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="Loader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m13_34 [cluster="QuantConnect.Market.Decode(int)", file="Loader.cs", label="Exit QuantConnect.Market.Decode(int)", span="176-176"];
m13_56 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="Loader.cs", label="1: StartingPortfolioValue = algorithm.Portfolio.Cash", span="159-159"];
m13_55 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="Loader.cs", label="1: StartingDate = DateTime.Now", span="158-158"];
m13_57 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="Loader.cs", label="0: Exception", span="162-162"];
m13_60 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="Errors.Count == 0", span="168-168"];
m13_54 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="setup.Setup(algorithm, out brokerage, baseJob)", span="155-155"];
m13_49 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="StartingPortfolioValue = algorithm.Portfolio.Cash", span="143-143"];
m13_58 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="Loader.cs", label="1: Log.Error(''ConsoleSetupHandler().Setup(): '' + err.Message)", span="164-164"];
m13_59 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="Loader.cs", label="1: Errors.Add(''Failed to initialize algorithm: Initialize(): '' + err.Message)", span="165-165"];
m13_48 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="StartingDate = backtestJob.PeriodStart", span="142-142"];
m13_35 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="var initializeComplete = false", span="114-114"];
m13_36 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="brokerage = new BacktestingBrokerage(algorithm)", span="115-115"];
m13_37 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="baseJob.Type == PacketType.BacktestNode", span="121-121"];
m13_38 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="var backtestJob = baseJob as BacktestNodePacket", span="123-123"];
m13_39 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="algorithm.SetAssetLimits(999, 999, 999)", span="126-126"];
m13_40 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="algorithm.SetMaximumOrders(int.MaxValue)", span="127-127"];
m13_41 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="algorithm.Initialize()", span="130-130"];
m13_42 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(algorithm.Securities, algorithm.SubscriptionManager)", span="132-132"];
m13_43 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="backtestJob.PeriodStart = algorithm.StartDate", span="135-135"];
m13_44 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="backtestJob.PeriodFinish = algorithm.EndDate", span="136-136"];
m13_50 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="var liveJob = baseJob as LiveNodePacket", span="147-147"];
m13_61 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="initializeComplete = true", span="170-170"];
m13_62 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="return initializeComplete;", span="173-173"];
m13_53 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="var setup = new BrokerageSetupHandler()", span="154-154"];
m13_47 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="backtestJob.Type = PacketType.BacktestNode", span="139-139"];
m13_45 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="backtestJob.BacktestId = ''LOCALHOST''", span="137-137"];
m13_46 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="backtestJob.UserId = 1001", span="138-138"];
m13_51 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="liveJob.DeployId = ''LOCALHOST''", span="150-150"];
m13_52 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="liveJob.Type = PacketType.LiveNode", span="151-151"];
m13_63 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="112-112"];
m13_9 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="market = market.ToLower()", span="134-134"];
m13_70 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Loader.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="113-113"];
m13_71 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Loader.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="83-83"];
m13_25 [cluster="QuantConnect.Market.Encode(string)", file="Loader.cs", label="Entry QuantConnect.Market.Encode(string)", span="162-162"];
m13_26 [cluster="QuantConnect.Market.Encode(string)", file="Loader.cs", label=_lock, span="164-164"];
m13_28 [cluster="QuantConnect.Market.Encode(string)", file="Loader.cs", label="return !Markets.TryGetValue(market, out code) ? (int?) null : code;", span="167-167"];
m13_27 [cluster="QuantConnect.Market.Encode(string)", file="Loader.cs", label="int code", span="166-166"];
m13_29 [cluster="QuantConnect.Market.Encode(string)", file="Loader.cs", label="Exit QuantConnect.Market.Encode(string)", span="162-162"];
m13_7 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="var message = string.Format(''The market identifier is limited to positive values less than {0}.'', MaxMarketIdentifier)", span="130-130"];
m13_30 [cluster="QuantConnect.Market.Decode(int)", file="Loader.cs", label="Entry QuantConnect.Market.Decode(int)", span="176-176"];
m13_31 [cluster="QuantConnect.Market.Decode(int)", file="Loader.cs", label=_lock, span="178-178"];
m13_33 [cluster="QuantConnect.Market.Decode(int)", file="Loader.cs", label="return !ReverseMarkets.TryGetValue(code, out market) ? null : market;", span="181-181"];
m13_32 [cluster="QuantConnect.Market.Decode(int)", file="Loader.cs", label="string market", span="180-180"];
m13_66 [cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="Loader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="427-427"];
m13_69 [cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="Loader.cs", label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="68-68"];
m13_22 [cluster="string.ToLower()", file="Loader.cs", label="Entry string.ToLower()", span="0-0"];
m13_0 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Loader.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="69-69"];
m13_1 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Loader.cs", label="MaxOrders = int.MaxValue", span="71-71"];
m13_2 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Loader.cs", label="StartingPortfolioValue = 0", span="72-72"];
m13_3 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Loader.cs", label="StartingDate = new DateTime(1998, 01, 01)", span="73-73"];
m13_4 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Loader.cs", label="MaximumRuntime = TimeSpan.FromDays(10 * 365)", span="74-74"];
m13_24 [cluster="System.ArgumentException.ArgumentException(string)", file="Loader.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m13_5 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Loader.cs", label="Errors = new List<string>()", span="75-75"];
m13_6 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Loader.cs", label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="69-69"];
m13_12 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="Markets.TryGetValue(market, out marketIdentifier) && identifier != marketIdentifier", span="140-140"];
m13_15 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="ReverseMarkets.TryGetValue(identifier, out existingMarket)", span="146-146"];
m13_17 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="Markets[market] = identifier", span="152-152"];
m13_18 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="ReverseMarkets[identifier] = market", span="153-153"];
m13_8 [cluster="System.TimeSpan.FromDays(double)", file="Loader.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m13_10 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label=_lock, span="137-137"];
m13_13 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="throw new ArgumentException(''Attempted to add an already added market with a different identifier. Market: '' + market);", span="142-142"];
m13_16 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="throw new ArgumentException(''Attempted to add a market identifier that is already in use. New Market: '' + market + '' Existing Market: '' + existingMarket);", span="148-148"];
m13_11 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="int marketIdentifier", span="139-139"];
m13_14 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="string existingMarket", span="145-145"];
m13_19 [cluster="QuantConnect.Market.Add(string, int)", file="Loader.cs", label="Exit QuantConnect.Market.Add(string, int)", span="126-126"];
m13_64 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="Loader.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="41-41"];
m13_20 [cluster="string.Format(string, object)", file="Loader.cs", label="Entry string.Format(string, object)", span="0-0"];
m13_21 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="Loader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m13_68 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="Loader.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="85-85"];
m13_72 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Loader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m13_65 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="Loader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="436-436"];
m13_67 [cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="Loader.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="217-217"];
m13_85 [file="Loader.cs", label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", span=""];
m14_96 [cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, string)", span="134-134"];
m14_11 [cluster="QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Series.AddPoint(System.DateTime, decimal, bool)", span="148-148"];
m14_83 [cluster="System.Collections.Generic.IEnumerable<TFirst>.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", file="LogInDialog.xaml.cs", label="Entry System.Collections.Generic.IEnumerable<TFirst>.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", span="0-0"];
m14_68 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", span="114-114"];
m14_69 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="var series = new Series()", span="116-116"];
m14_70 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="series.Values.Add(new ChartPoint(DateTime.Today, 1m))", span="117-117"];
m14_71 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="series.Values.Add(new ChartPoint(DateTime.Today, 2m))", span="118-118"];
m14_72 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="series.Values.Add(new ChartPoint(DateTime.Today.AddDays(1), 3m))", span="119-119"];
m14_74 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="var sampled = sampler.Sample(series, DateTime.Today, DateTime.Today.AddDays(1))", span="122-122"];
m14_76 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="series.Values.Skip(1).Zip(sampled.Values, Tuple.Create)", span="128-128"];
m14_73 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="var sampler = new SeriesSampler(TimeSpan.FromDays(1))", span="121-121"];
m14_75 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(2, sampled.Values.Count)", span="127-127"];
m14_77 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(pair.Item1.x, pair.Item2.x)", span="130-130"];
m14_78 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(pair.Item1.y, pair.Item2.y)", span="131-131"];
m14_79 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.Tests.Common.SeriesSamplerTests.HandlesDuplicateTimes()", span="114-114"];
m14_50 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", span="88-88"];
m14_51 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="var series = new Series { Name = ''name'' }", span="90-90"];
m14_52 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="var reference = DateTime.UtcNow.Date", span="91-91"];
m14_53 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference, 1m)", span="92-92"];
m14_54 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(1), 2m)", span="93-93"];
m14_55 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(2), 3m)", span="94-94"];
m14_56 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(3), 4m)", span="95-95"];
m14_57 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(4), 5m)", span="96-96"];
m14_59 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="var sampled = sampler.Sample(series, reference.AddDays(-1), reference.AddDays(2))", span="100-100"];
m14_61 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[0].x, sampled.Values[0].x)", span="103-103"];
m14_62 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[0].y, sampled.Values[0].y)", span="104-104"];
m14_63 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[1].x, sampled.Values[1].x)", span="106-106"];
m14_64 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[1].y, sampled.Values[1].y)", span="107-107"];
m14_65 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[2].x, sampled.Values[2].x)", span="109-109"];
m14_66 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[2].y, sampled.Values[2].y)", span="110-110"];
m14_58 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="var sampler = new SeriesSampler(TimeSpan.FromDays(1))", span="98-98"];
m14_60 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(3, sampled.Values.Count)", span="101-101"];
m14_67 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleBeforeStart()", span="88-88"];
m14_10 [cluster="QuantConnect.Series.Series()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Series.Series()", span="126-126"];
m14_16 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", span="40-40"];
m14_17 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="var series = new Series {Name = ''name''}", span="42-42"];
m14_18 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="var reference = DateTime.UtcNow.Date", span="43-43"];
m14_19 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference, 1m)", span="44-44"];
m14_20 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(1), 2m)", span="45-45"];
m14_21 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(2), 3m)", span="46-46"];
m14_22 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(3), 4m)", span="47-47"];
m14_24 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="var sampled = sampler.Sample(series, reference, reference.AddDays(3))", span="51-51"];
m14_26 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[0].x, sampled.Values[0].x)", span="54-54"];
m14_27 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[0].y, sampled.Values[0].y)", span="55-55"];
m14_28 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual((series.Values[1].x + series.Values[2].x)/2, sampled.Values[1].x)", span="57-57"];
m14_29 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual((series.Values[1].y + series.Values[2].y)/2, sampled.Values[1].y)", span="58-58"];
m14_30 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[3].x, sampled.Values[2].x)", span="60-60"];
m14_31 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[3].y, sampled.Values[2].y)", span="61-61"];
m14_23 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="var sampler = new SeriesSampler(TimeSpan.FromDays(1.5))", span="49-49"];
m14_25 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(3, sampled.Values.Count)", span="52-52"];
m14_32 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.Tests.Common.SeriesSamplerTests.DownSamples()", span="40-40"];
m14_15 [cluster="Unk.AreEqual", file="LogInDialog.xaml.cs", label="Entry Unk.AreEqual", span=""];
m14_13 [cluster="System.TimeSpan.FromDays(double)", file="LogInDialog.xaml.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m14_99 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.EmitsEmptySeriesWithSinglePointOutsideOfStartStop()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Tests.Common.SeriesSamplerTests.EmitsEmptySeriesWithSinglePointOutsideOfStartStop()", span="154-154"];
m14_100 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.EmitsEmptySeriesWithSinglePointOutsideOfStartStop()", file="LogInDialog.xaml.cs", label="var series = new Series { Name = ''name'' }", span="156-156"];
m14_101 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.EmitsEmptySeriesWithSinglePointOutsideOfStartStop()", file="LogInDialog.xaml.cs", label="var reference = DateTime.Now", span="157-157"];
m14_102 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.EmitsEmptySeriesWithSinglePointOutsideOfStartStop()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddSeconds(-1), 1m)", span="158-158"];
m14_104 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.EmitsEmptySeriesWithSinglePointOutsideOfStartStop()", file="LogInDialog.xaml.cs", label="var sampled = sampler.Sample(series, reference, reference)", span="162-162"];
m14_103 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.EmitsEmptySeriesWithSinglePointOutsideOfStartStop()", file="LogInDialog.xaml.cs", label="var sampler = new SeriesSampler(TimeSpan.FromDays(1))", span="160-160"];
m14_105 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.EmitsEmptySeriesWithSinglePointOutsideOfStartStop()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(0, sampled.Values.Count)", span="163-163"];
m14_106 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.EmitsEmptySeriesWithSinglePointOutsideOfStartStop()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.Tests.Common.SeriesSamplerTests.EmitsEmptySeriesWithSinglePointOutsideOfStartStop()", span="154-154"];
m14_34 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", span="65-65"];
m14_35 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="var series = new Series {Name = ''name''}", span="67-67"];
m14_36 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="var reference = DateTime.UtcNow.Date", span="68-68"];
m14_37 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference, 1m)", span="69-69"];
m14_38 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(1), 2m)", span="70-70"];
m14_39 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(2), 3m)", span="71-71"];
m14_40 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(3), 4m)", span="72-72"];
m14_41 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference.AddDays(4), 5m)", span="73-73"];
m14_43 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="var sampled = sampler.Sample(series, reference.AddDays(1), reference.AddDays(2))", span="77-77"];
m14_45 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[1].x, sampled.Values[0].x)", span="80-80"];
m14_46 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[1].y, sampled.Values[0].y)", span="81-81"];
m14_47 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[2].x, sampled.Values[1].x)", span="83-83"];
m14_48 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[2].y, sampled.Values[1].y)", span="84-84"];
m14_42 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="var sampler = new SeriesSampler(TimeSpan.FromDays(1))", span="75-75"];
m14_44 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(2, sampled.Values.Count)", span="78-78"];
m14_49 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.Tests.Common.SeriesSamplerTests.SubSamples()", span="65-65"];
m14_97 [cluster="System.DateTime.AddSeconds(double)", file="LogInDialog.xaml.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m14_82 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="LogInDialog.xaml.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m14_12 [cluster="QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.SeriesSampler.SeriesSampler(System.TimeSpan)", span="30-30"];
m14_81 [cluster="System.Collections.Generic.List<T>.Add(T)", file="LogInDialog.xaml.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m14_14 [cluster="QuantConnect.SeriesSampler.Sample(QuantConnect.Series, System.DateTime, System.DateTime)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.SeriesSampler.Sample(QuantConnect.Series, System.DateTime, System.DateTime)", span="42-42"];
m14_84 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", span="136-136"];
m14_85 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="var scatter = new Series(''scatter'', SeriesType.Scatter)", span="138-138"];
m14_86 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="scatter.AddPoint(DateTime.Today, 1m)", span="139-139"];
m14_87 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="scatter.AddPoint(DateTime.Today, 3m)", span="140-140"];
m14_88 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="scatter.AddPoint(DateTime.Today.AddSeconds(1), 1.5m)", span="141-141"];
m14_89 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="scatter.AddPoint(DateTime.Today.AddSeconds(0.5), 1.5m)", span="142-142"];
m14_91 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="var sampled = sampler.Sample(scatter, DateTime.Today, DateTime.Today.AddDays(1))", span="145-145"];
m14_92 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="scatter.Values.Zip(sampled.Values, Tuple.Create)", span="146-146"];
m14_90 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="var sampler = new SeriesSampler(TimeSpan.FromMilliseconds(1))", span="144-144"];
m14_93 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(pair.Item1.x, pair.Item2.x)", span="148-148"];
m14_94 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(pair.Item1.y, pair.Item2.y)", span="149-149"];
m14_95 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.Tests.Common.SeriesSamplerTests.DoesNotSampleScatterPlots()", span="136-136"];
m14_80 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="LogInDialog.xaml.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="215-215"];
m14_0 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", file="LogInDialog.xaml.cs", label="Entry QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", span="25-25"];
m14_1 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", file="LogInDialog.xaml.cs", label="var series = new Series {Name = ''name''}", span="27-27"];
m14_2 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", file="LogInDialog.xaml.cs", label="var reference = DateTime.Now", span="28-28"];
m14_3 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", file="LogInDialog.xaml.cs", label="series.AddPoint(reference, 1m)", span="29-29"];
m14_5 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", file="LogInDialog.xaml.cs", label="var sampled = sampler.Sample(series, reference, reference)", span="33-33"];
m14_7 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[0].x, sampled.Values[0].x)", span="35-35"];
m14_8 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(series.Values[0].y, sampled.Values[0].y)", span="36-36"];
m14_4 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", file="LogInDialog.xaml.cs", label="var sampler = new SeriesSampler(TimeSpan.FromDays(1))", span="31-31"];
m14_6 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", file="LogInDialog.xaml.cs", label="Assert.AreEqual(1, sampled.Values.Count)", span="34-34"];
m14_9 [cluster="QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", file="LogInDialog.xaml.cs", label="Exit QuantConnect.Tests.Common.SeriesSamplerTests.ReturnsIdentityOnSinglePoint()", span="25-25"];
m14_33 [cluster="System.DateTime.AddDays(double)", file="LogInDialog.xaml.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m14_98 [cluster="System.TimeSpan.FromMilliseconds(double)", file="LogInDialog.xaml.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m15_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="ManualUniverseSelectionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m15_17 [cluster="System.Collections.Generic.List<T>.List()", file="ManualUniverseSelectionModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m15_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="262-262"];
m15_19 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", span="71-71"];
m15_20 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="ManualUniverseSelectionModel.cs", label="var sortedByPeRatio = fine.OrderByDescending(x => x.ValuationRatios.PERatio)", span="74-74"];
m15_21 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="ManualUniverseSelectionModel.cs", label="var topFine = sortedByPeRatio.Take(NumberOfSymbolsFine)", span="77-77"];
m15_22 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="ManualUniverseSelectionModel.cs", label="return topFine.Select(x => x.Symbol);", span="80-80"];
m15_23 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="ManualUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", span="71-71"];
m15_60 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="Entry lambda expression", span="120-120"];
m15_27 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="Entry lambda expression", span="74-74"];
m15_30 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="Entry lambda expression", span="80-80"];
m15_28 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="x.ValuationRatios.PERatio", span="74-74"];
m15_29 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="Exit lambda expression", span="74-74"];
m15_31 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="x.Symbol", span="80-80"];
m15_32 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="Exit lambda expression", span="80-80"];
m15_57 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="Entry lambda expression", span="116-116"];
m15_58 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="x.Symbol.Value", span="116-116"];
m15_59 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="Exit lambda expression", span="116-116"];
m15_61 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="x.Symbol.Value", span="120-120"];
m15_62 [cluster="lambda expression", file="ManualUniverseSelectionModel.cs", label="Exit lambda expression", span="120-120"];
m15_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876"];
m15_25 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ManualUniverseSelectionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m15_16 [cluster="System.DateTime.DateTime(int, int, int)", file="ManualUniverseSelectionModel.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m15_11 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", span="50-50"];
m15_12 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="ManualUniverseSelectionModel.cs", label="Time.Date < new DateTime(2014, 4, 5)", span="52-52"];
m15_13 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="ManualUniverseSelectionModel.cs", label="return new List<Symbol>\r\n                {\r\n                    QuantConnect.Symbol.Create(''AAPL'', SecurityType.Equity, ''usa''),\r\n                    QuantConnect.Symbol.Create(''AIG'', SecurityType.Equity, ''usa''),\r\n                    QuantConnect.Symbol.Create(''IBM'', SecurityType.Equity, ''usa'')\r\n                };", span="54-59"];
m15_14 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="ManualUniverseSelectionModel.cs", label="return new List<Symbol>\r\n            {\r\n                QuantConnect.Symbol.Create(''BAC'', SecurityType.Equity, ''usa''),\r\n                QuantConnect.Symbol.Create(''GOOG'', SecurityType.Equity, ''usa''),\r\n                QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, ''usa'')\r\n            };", span="62-67"];
m15_15 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="ManualUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", span="50-50"];
m15_18 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m15_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070"];
m15_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623"];
m15_48 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
m15_49 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ManualUniverseSelectionModel.cs", label="_changes = changes", span="112-112"];
m15_50 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ManualUniverseSelectionModel.cs", label="changes.AddedSecurities.Count > 0", span="114-114"];
m15_51 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ManualUniverseSelectionModel.cs", label="Debug(''Securities added: '' + string.Join('','', changes.AddedSecurities.Select(x => x.Symbol.Value)))", span="116-116"];
m15_52 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ManualUniverseSelectionModel.cs", label="changes.RemovedSecurities.Count > 0", span="118-118"];
m15_53 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ManualUniverseSelectionModel.cs", label="Debug(''Securities removed: '' + string.Join('','', changes.RemovedSecurities.Select(x => x.Symbol.Value)))", span="120-120"];
m15_54 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ManualUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110"];
m15_33 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="84-84"];
m15_34 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="_changes == SecurityChanges.None", span="87-87"];
m15_35 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="return;", span="87-87"];
m15_36 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="_changes.RemovedSecurities", span="90-90"];
m15_37 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="security.Invested", span="92-92"];
m15_40 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="_changes.AddedSecurities", span="100-100"];
m15_38 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="Liquidate(security.Symbol)", span="94-94"];
m15_39 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="Debug(''Liquidated Stock: '' + security.Symbol.Value)", span="95-95"];
m15_41 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="SetHoldings(security.Symbol, 0.5m)", span="102-102"];
m15_43 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="_changes = SecurityChanges.None", span="106-106"];
m15_42 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="Debug(''Purchased Stock: '' + security.Symbol.Value)", span="103-103"];
m15_44 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="ManualUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="84-84"];
m15_0 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", span="35-35"];
m15_1 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="ManualUniverseSelectionModel.cs", label="UniverseSettings.Resolution = Resolution.Daily", span="37-37"];
m15_2 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="ManualUniverseSelectionModel.cs", label="SetStartDate(2014, 04, 01)", span="39-39"];
m15_3 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="ManualUniverseSelectionModel.cs", label="SetEndDate(2014, 04, 30)", span="40-40"];
m15_4 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="ManualUniverseSelectionModel.cs", label="SetCash(50000)", span="41-41"];
m15_5 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="ManualUniverseSelectionModel.cs", label="AddUniverse(CoarseSelectionFunction, FineSelectionFunction)", span="46-46"];
m15_6 [cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="ManualUniverseSelectionModel.cs", label="Exit QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", span="35-35"];
m15_56 [cluster="Unk.Debug", file="ManualUniverseSelectionModel.cs", label="Entry Unk.Debug", span=""];
m15_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095"];
m15_55 [cluster="Unk.Join", file="ManualUniverseSelectionModel.cs", label="Entry Unk.Join", span=""];
m15_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m15_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="ManualUniverseSelectionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019"];
m15_26 [cluster="Unk.Select", file="ManualUniverseSelectionModel.cs", label="Entry Unk.Select", span=""];
m15_63 [file="ManualUniverseSelectionModel.cs", label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", span=""];
m17_5 [cluster="QuantConnect.Brokerages.IBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", file="OptionFilterTests.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.GetTransactionModel(QuantConnect.Securities.Security)", span="57-57"];
m17_0 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="OptionFilterTests.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="38-38"];
m17_1 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="OptionFilterTests.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="38-38"];
m17_2 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OptionFilterTests.cs", label="Entry QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="50-50"];
m17_3 [cluster="QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="OptionFilterTests.cs", label="Exit QuantConnect.Brokerages.IBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="50-50"];
m18_109 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.Clear()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.Clear()", span="70-70"];
m18_180 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.TotalQuantity()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.TotalQuantity()", span="78-78"];
m18_35 [cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156"];
m18_254 [cluster="Unk.ToArray", file="OptionFilterUniverse.cs", label="Entry Unk.ToArray", span=""];
m18_113 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", span="449-449"];
m18_224 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="OptionFilterUniverse.cs", label=_tickLocker, span="451-451"];
m18_225 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="OptionFilterUniverse.cs", label="Ticks.Add(new Tick\r\n                {\r\n                    AskPrice = askPrice,\r\n                    BidPrice = bidPrice,\r\n                    Value = (askPrice + bidPrice) / 2m,\r\n                    Time = DateTime.UtcNow,\r\n                    Symbol = symbol,\r\n                    TickType = TickType.Quote,\r\n                    AskSize = askSize,\r\n                    BidSize = bidSize\r\n                })", span="453-463"];
m18_226 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitQuoteTick(QuantConnect.Symbol, decimal, decimal, decimal, decimal)", span="449-449"];
m18_235 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="490-490"];
m18_238 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="!IsSubscribeAvailable(item)", span="500-500"];
m18_239 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="PollTick(item)", span="504-504"];
m18_240 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="this.ChannelList[item.Value] = new Channel { Name = item.Value, Symbol = item.Value }", span="508-508"];
m18_241 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="var products = ChannelList.Select(s => s.Value.Symbol.Substring(0, 3) + ''-'' + s.Value.Symbol.Substring(3)).ToArray()", span="512-512"];
m18_242 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="var payload = new\r\n            {\r\n                type = ''subscribe'',\r\n                product_ids = products,\r\n                channels = ChannelNames\r\n            }", span="514-519"];
m18_245 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="var token = GetAuthenticationToken(JsonConvert.SerializeObject(payload), ''GET'', ''/users/self/verify'')", span="526-526"];
m18_246 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="var json = JsonConvert.SerializeObject(new\r\n            {\r\n                type = payload.type,\r\n                channels = payload.channels,\r\n                product_ids = payload.product_ids,\r\n                SignHeader = token.Signature,\r\n                KeyHeader = ApiKey,\r\n                PassHeader = _passPhrase,\r\n                TimeHeader = token.Timestamp\r\n            })", span="528-537"];
m18_247 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="WebSocket.Send(json)", span="539-539"];
m18_248 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''GDAXBrokerage.Subscribe: Sent subscribe.''))", span="542-542"];
m18_236 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label=symbols, span="492-492"];
m18_237 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="item.Value.Contains(''UNIVERSE'') ||\r\n                    item.SecurityType != SecurityType.Forex && item.SecurityType != SecurityType.Crypto", span="494-495"];
m18_243 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="payload.product_ids.Length == 0", span="521-521"];
m18_244 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="return;", span="523-523"];
m18_249 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Subscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="490-490"];
m18_219 [cluster="RestRequest.cstr", file="OptionFilterUniverse.cs", label="Entry RestRequest.cstr", span=""];
m18_175 [cluster="Unk.ContainsKey", file="OptionFilterUniverse.cs", label="Entry Unk.ContainsKey", span=""];
m18_174 [cluster="Unk.ToList", file="OptionFilterUniverse.cs", label="Entry Unk.ToList", span=""];
m18_112 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.UpdateAskRow(decimal, decimal)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.UpdateAskRow(decimal, decimal)", span="110-110"];
m18_16 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="83-83"];
m18_34 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="57-57"];
m18_221 [cluster="Unk.Execute", file="OptionFilterUniverse.cs", label="Entry Unk.Execute", span=""];
m18_17 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Symbol.Create(ticker, SecurityType.Crypto, Market.GDAX)", span="83-83"];
m18_228 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m18_0 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", span="34-34"];
m18_1 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="SetStartDate(2009, 1, 1)", span="36-36"];
m18_2 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="SetEndDate(2015, 1, 1)", span="37-37"];
m18_3 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="SetCash(100000)", span="38-38"];
m18_4 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="var equity = AddEquity(_spy, Resolution.Minute)", span="40-40"];
m18_5 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="_holdings = equity.Holdings", span="41-41"];
m18_6 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="_rc = RC(_spy, 30, 2, Resolution.Daily)", span="42-42"];
m18_7 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="var stockPlot = new Chart(''Trade Plot'')", span="44-44"];
m18_220 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertSymbol(QuantConnect.Symbol)", span="127-127"];
m18_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="OptionFilterUniverse.cs", label="_streamLocked = true", span="95-95"];
m18_110 [cluster="Unk.Parse", file="OptionFilterUniverse.cs", label="Entry Unk.Parse", span=""];
m18_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="92-92"];
m18_38 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label=_streamLocked, span="126-126"];
m18_39 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="_messageBuffer.Enqueue(e)", span="128-128"];
m18_40 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="return;", span="129-129"];
m18_41 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label=Exception, span="132-132"];
m18_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="Log.Error(err)", span="134-134"];
m18_252 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="550-550"];
m18_264 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="var token = _canceller.Token", span="554-554"];
m18_265 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="var listener = Task.Factory.StartNew(() =>\r\n            {\r\n                OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''GDAXBrokerage.PollLatestTick: started polling for ticks: {symbol.Value.ToString()}''));\r\n                while (true)\r\n                {\r\n                    var rate = GetConversionRate(symbol.Value.Replace(''USD'', ''''));\r\n\r\n                    lock (_tickLocker)\r\n                    {\r\n                        var latest = new Tick\r\n                        {\r\n                            Value = rate,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = symbol\r\n                        };\r\n                        Ticks.Add(latest);\r\n                    }\r\n\r\n                    Thread.Sleep(delay);\r\n                    if (token.IsCancellationRequested) break;\r\n                }\r\n                OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''PollLatestTick: stopped polling for ticks: {symbol.Value.ToString()}''));\r\n            }, token, TaskCreationOptions.LongRunning, TaskScheduler.Default)", span="555-577"];
m18_263 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="int delay = 36000000", span="553-553"];
m18_266 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.PollTick(QuantConnect.Symbol)", span="550-550"];
m18_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", span="145-145"];
m18_46 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m18_179 [cluster="System.Math.Abs(decimal)", file="OptionFilterUniverse.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m18_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="92-92"];
m18_173 [cluster="Unk.Where", file="OptionFilterUniverse.cs", label="Entry Unk.Where", span=""];
m18_185 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113"];
m18_10 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="stockPlot.AddSeries(new Series(''UpperChannel'', SeriesType.Line, 0))", span="47-47"];
m18_12 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="stockPlot.AddSeries(new Series(''Regression'', SeriesType.Line, 0))", span="49-49"];
m18_269 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''GDAXBrokerage.PollLatestTick: started polling for ticks: {symbol.Value.ToString()}''))", span="557-557"];
m18_271 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="var rate = GetConversionRate(symbol.Value.Replace(''USD'', ''''))", span="560-560"];
m18_272 [cluster="lambda expression", file="OptionFilterUniverse.cs", label=_tickLocker, span="562-562"];
m18_274 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Ticks.Add(latest)", span="570-570"];
m18_277 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, $''PollLatestTick: stopped polling for ticks: {symbol.Value.ToString()}''))", span="576-576"];
m18_11 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="stockPlot.AddSeries(new Series(''LowerChannel'', SeriesType.Line, 0))", span="48-48"];
m18_13 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="AddChart(stockPlot)", span="50-50"];
m18_187 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="o.Value.BrokerId.Contains(message.MakerOrderId) || o.Value.BrokerId.Contains(message.TakerOrderId)", span="311-311"];
m18_186 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="311-311"];
m18_209 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="o.Value.BrokerId.Contains(message.OrderId)", span="392-392"];
m18_208 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="392-392"];
m18_258 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="512-512"];
m18_268 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Entry lambda expression", span="555-577"];
m18_276 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="token.IsCancellationRequested", span="574-574"];
m18_278 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="555-577"];
m18_270 [cluster="lambda expression", file="OptionFilterUniverse.cs", label=true, span="558-558"];
m18_273 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="var latest = new Tick\r\n                        {\r\n                            Value = rate,\r\n                            Time = DateTime.UtcNow,\r\n                            Symbol = symbol\r\n                        }", span="564-569"];
m18_275 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Thread.Sleep(delay)", span="573-573"];
m18_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1344-1344"];
m18_188 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="311-311"];
m18_210 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="392-392"];
m18_259 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="s.Value.Symbol.Substring(0, 3) + ''-'' + s.Value.Symbol.Substring(3)", span="512-512"];
m18_260 [cluster="lambda expression", file="OptionFilterUniverse.cs", label="Exit lambda expression", span="512-512"];
m18_295 [cluster="Unk.SelectToken", file="OptionFilterUniverse.cs", label="Entry Unk.SelectToken", span=""];
m18_176 [cluster="GDAXFill.cstr", file="OptionFilterUniverse.cs", label="Entry GDAXFill.cstr", span=""];
m18_256 [cluster="Unk.GetAuthenticationToken", file="OptionFilterUniverse.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m18_178 [cluster="Unk.Abs", file="OptionFilterUniverse.cs", label="Entry Unk.Abs", span=""];
m18_177 [cluster="Unk.Add", file="OptionFilterUniverse.cs", label="Entry Unk.Add", span=""];
m18_21 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="OptionFilterUniverse.cs", label="Log.Trace(''GDAXBrokerage.Messaging.LockStream(): Locking Stream'')", span="94-94"];
m18_257 [cluster="Unk.Send", file="OptionFilterUniverse.cs", label="Entry Unk.Send", span=""];
m18_253 [cluster="QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel.Channel()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel.Channel()", span="313-313"];
m18_25 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="!_rc.IsReady || !data.ContainsKey(_spy)", span="59-59"];
m18_27 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="var value = data[_spy].Value", span="60-60"];
m18_29 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="SetHoldings(_spy, 1)", span="64-64"];
m18_30 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="Plot(''Trade Plot'', ''Buy'', value)", span="65-65"];
m18_32 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="SetHoldings(_spy, -1)", span="70-70"];
m18_26 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="return;", span="59-59"];
m18_28 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="_holdings.Quantity <= 0 && value < _rc.LowerChannel", span="62-62"];
m18_31 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="_holdings.Quantity >= 0 && value > _rc.UpperChannel", span="68-68"];
m18_33 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="Plot(''Trade Plot'', ''Sell'', value)", span="71-71"];
m18_37 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="120-120"];
m18_182 [cluster="Unk.GetFee", file="OptionFilterUniverse.cs", label="Entry Unk.GetFee", span=""];
m18_24 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="57-57"];
m18_14 [cluster="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm.Initialize()", span="34-34"];
m18_172 [cluster="Unk.EmitTradeTick", file="OptionFilterUniverse.cs", label="Entry Unk.EmitTradeTick", span=""];
m18_250 [cluster="string.Contains(string)", file="OptionFilterUniverse.cs", label="Entry string.Contains(string)", span="0-0"];
m18_108 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.OrderBook(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.OrderBook(QuantConnect.Symbol)", span="62-62"];
m18_181 [cluster="Unk.TryGetValue", file="OptionFilterUniverse.cs", label="Entry Unk.TryGetValue", span=""];
m18_211 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="428-428"];
m18_213 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="var response = RestClient.Execute(req)", span="431-431"];
m18_216 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="var tick = JsonConvert.DeserializeObject<Messages.Tick>(response.Content)", span="437-437"];
m18_212 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="var req = new RestRequest($''/products/{ConvertSymbol(symbol)}/ticker'', Method.GET)", span="430-430"];
m18_214 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="432-432"];
m18_215 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="throw new Exception($''GDAXBrokerage.GetTick: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="434-434"];
m18_217 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="return new Tick(tick.Time, symbol, tick.Bid, tick.Ask) { Quantity = tick.Volume };", span="438-438"];
m18_218 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="428-428"];
m18_8 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="OptionFilterUniverse.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0"];
m18_9 [cluster="RestClient.cstr", file="OptionFilterUniverse.cs", label="Entry RestClient.cstr", span=""];
m18_267 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", file="OptionFilterUniverse.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action, System.Threading.CancellationToken, System.Threading.Tasks.TaskCreationOptions, System.Threading.Tasks.TaskScheduler)", span="0-0"];
m18_222 [cluster="System.Exception.Exception(string)", file="OptionFilterUniverse.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m18_47 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="var raw = JsonConvert.DeserializeObject<Messages.BaseMessage>(e.Message, JsonSettings)", span="149-149"];
m18_48 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="LastHeartbeatUtcTime = DateTime.UtcNow", span="151-151"];
m18_52 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="OnSnapshot(e.Message)", span="159-159"];
m18_55 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="OnL2Update(e.Message)", span="164-164"];
m18_59 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="var error = JsonConvert.DeserializeObject<Messages.Error>(e.Message, JsonSettings)", span="170-170"];
m18_60 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, $''GDAXBrokerage.OnMessage: {error.Message} {error.Reason}''))", span="171-171"];
m18_63 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="OrderDone(e.Message)", span="176-176"];
m18_66 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="OrderMatch(e.Message)", span="181-181"];
m18_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, (''GDAXWebsocketsBrokerage.OnMessage: Unexpected message format: '' + e.Message)))", span="190-190"];
m18_72 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, -1, $''Parsing wss message failed. Data: {e.Message} Exception: {exception}''))", span="194-194"];
m18_49 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="raw.Type == ''heartbeat''", span="153-153"];
m18_51 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="raw.Type == ''snapshot''", span="157-157"];
m18_54 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="raw.Type == ''l2update''", span="162-162"];
m18_57 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="raw.Type == ''error''", span="167-167"];
m18_62 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="raw.Type == ''done''", span="174-174"];
m18_65 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="raw.Type == ''match''", span="179-179"];
m18_68 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="raw.Type == ''open'' || raw.Type == ''change'' || raw.Type == ''received'' || raw.Type == ''subscriptions'' || raw.Type == ''last_match''", span="184-184"];
m18_53 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="return;", span="160-160"];
m18_56 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="return;", span="165-165"];
m18_58 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="Log.Error($''GDAXBrokerage.OnMessage.error(): Data: {Environment.NewLine}{e.Message}'')", span="169-169"];
m18_61 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="return;", span="172-172"];
m18_64 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="return;", span="177-177"];
m18_67 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="return;", span="182-182"];
m18_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label=Exception, span="192-192"];
m18_73 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="throw;", span="195-195"];
m18_50 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="return;", span="155-155"];
m18_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="return;", span="187-187"];
m18_74 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessageImpl(object, QuantConnect.Brokerages.WebSocketMessage)", span="145-145"];
m18_298 [cluster="System.Text.RegularExpressions.Regex.IsMatch(string, string)", file="OptionFilterUniverse.cs", label="Entry System.Text.RegularExpressions.Regex.IsMatch(string, string)", span="0-0"];
m18_15 [cluster="Unk.Subscribe", file="OptionFilterUniverse.cs", label="Entry Unk.Subscribe", span=""];
m18_80 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m18_262 [cluster="string.Substring(int)", file="OptionFilterUniverse.cs", label="Entry string.Substring(int)", span="0-0"];
m18_229 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", span="470-470"];
m18_231 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="OptionFilterUniverse.cs", label=_tickLocker, span="474-474"];
m18_232 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="OptionFilterUniverse.cs", label="Ticks.Add(new Tick\r\n                {\r\n                    Value = message.Price,\r\n                    Time = DateTime.UtcNow,\r\n                    Symbol = symbol,\r\n                    TickType = TickType.Trade,\r\n                    Quantity = message.Size\r\n                })", span="476-483"];
m18_230 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="OptionFilterUniverse.cs", label="var symbol = ConvertProductId(message.ProductId)", span="472-472"];
m18_233 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.EmitTradeTick(QuantConnect.Brokerages.GDAX.Messages.Matched)", span="470-470"];
m18_234 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.ConvertProductId(string)", span="117-117"];
m18_294 [cluster="RestSharp.RestRequest.cstr", file="OptionFilterUniverse.cs", label="Entry RestSharp.RestRequest.cstr", span=""];
m18_138 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.RemoveBidRow(decimal)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.RemoveBidRow(decimal)", span="130-130"];
m18_279 [cluster="string.ToString()", file="OptionFilterUniverse.cs", label="Entry string.ToString()", span="0-0"];
m18_227 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98"];
m18_106 [cluster="Unk.ConvertProductId", file="OptionFilterUniverse.cs", label="Entry Unk.ConvertProductId", span=""];
m18_114 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", span="246-246"];
m18_115 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", color=green, community=0, file="OptionFilterUniverse.cs", label="1: _isDataQueueHandler", span="248-248"];
m18_116 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: EmitQuoteTick(e.Symbol, e.BestBidPrice, e.BestBidSize, e.BestAskPrice, e.BestAskSize)", span="250-250"];
m18_117 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnBestBidAskUpdated(object, QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs)", span="246-246"];
m18_19 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m18_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", span=""];
m18_44 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnMessage(object, QuantConnect.Brokerages.WebSocketMessage)", span="120-120"];
m18_183 [cluster="OrderEvent.cstr", file="OptionFilterUniverse.cs", label="Entry OrderEvent.cstr", span=""];
m18_255 [cluster="Unk.SerializeObject", file="OptionFilterUniverse.cs", label="Entry Unk.SerializeObject", span=""];
m18_81 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", span="379-379"];
m18_191 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="var message = JsonConvert.DeserializeObject<Messages.Done>(data, JsonSettings)", span="382-382"];
m18_195 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="var cached = CachedOrderIDs.Where(o => o.Value.BrokerId.Contains(message.OrderId)).ToList()", span="392-392"];
m18_201 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1,\r\n                $''GDAXWebsocketsBrokerage.OrderDone: Encountered done message prior to match filling order brokerId: {message.OrderId} orderId: {orderId}''))", span="403-404"];
m18_202 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="var split = FillSplit[orderId]", span="406-406"];
m18_203 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="var orderEvent = new OrderEvent\r\n            (\r\n                orderId, ConvertProductId(message.ProductId), message.Time, OrderStatus.Filled,\r\n                message.Side == ''sell'' ? OrderDirection.Sell : OrderDirection.Buy,\r\n                message.Price, message.Side == ''sell'' ? -split.TotalQuantity() : split.TotalQuantity(),\r\n                GetFee(order), ''GDAX Fill Event''\r\n            )", span="409-415"];
m18_205 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="CachedOrderIDs.TryRemove(orderId, out outOrder)", span="418-418"];
m18_206 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="OnOrderEvent(orderEvent)", span="420-420"];
m18_190 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order completed with data {data}'')", span="381-381"];
m18_192 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="message.Reason == ''canceled'' || message.RemainingSize > 0", span="385-385"];
m18_193 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order cancelled. Remaining {message.RemainingSize}'')", span="387-387"];
m18_197 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="Log.Trace($''GDAXBrokerage.Messaging.OrderDone(): Order could not locate order in cache with order id {message.OrderId}'')", span="396-396"];
m18_196 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="cached.Count == 0 || cached[0].Value.Status == OrderStatus.Filled", span="394-394"];
m18_199 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="var orderId = cached[0].Key", span="400-400"];
m18_200 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="var order = cached[0].Value", span="401-401"];
m18_204 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="Order outOrder", span="417-417"];
m18_194 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="return;", span="388-388"];
m18_198 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="return;", span="397-397"];
m18_207 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderDone(string)", span="379-379"];
m18_261 [cluster="string.Substring(int, int)", file="OptionFilterUniverse.cs", label="Entry string.Substring(int, int)", span="0-0"];
m18_78 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m18_77 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", span="254-254"];
m18_118 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: var message = JsonConvert.DeserializeObject<Messages.L2Update>(data)", span="258-258"];
m18_119 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="var symbol = ConvertProductId(message.ProductId)", span="260-260"];
m18_121 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: message.Changes", span="264-264"];
m18_120 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="var orderBook = _orderBooks[symbol]", span="262-262"];
m18_127 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: orderBook.RemoveBidRow(price)", span="273-273"];
m18_128 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="orderBook.UpdateBidRow(price, size)", span="277-277"];
m18_131 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="orderBook.RemoveAskRow(price)", span="284-284"];
m18_132 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="orderBook.UpdateAskRow(price, size)", span="288-288"];
m18_129 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="side == ''sell''", span="280-280"];
m18_122 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: var side = row[0]", span="266-266"];
m18_133 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label=Exception, span="294-294"];
m18_123 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: var price = Convert.ToDecimal(row[1], CultureInfo.InvariantCulture)", span="267-267"];
m18_124 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: var size = decimal.Parse(row[2], NumberStyles.Float, CultureInfo.InvariantCulture)", span="268-268"];
m18_126 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: size == 0", span="271-271"];
m18_125 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: side == ''buy''", span="269-269"];
m18_130 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="size == 0", span="282-282"];
m18_134 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="Log.Error(e, ''Data: '' + data)", span="296-296"];
m18_135 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="throw;", span="297-297"];
m18_136 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnL2Update(string)", span="254-254"];
m18_82 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", span="301-301"];
m18_140 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="var message = JsonConvert.DeserializeObject<Messages.Matched>(data, JsonSettings)", span="303-303"];
m18_141 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label=_isDataQueueHandler, span="305-305"];
m18_142 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="EmitTradeTick(message)", span="307-307"];
m18_143 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="var cached = CachedOrderIDs\r\n                .Where(o => o.Value.BrokerId.Contains(message.MakerOrderId) || o.Value.BrokerId.Contains(message.TakerOrderId))\r\n                .ToList()", span="310-312"];
m18_144 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="var symbol = ConvertProductId(message.ProductId)", span="314-314"];
m18_150 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="!FillSplit.ContainsKey(orderId)", span="325-325"];
m18_151 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="FillSplit[orderId] = new GDAXFill(order)", span="327-327"];
m18_152 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="var split = FillSplit[orderId]", span="330-330"];
m18_160 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="!_orderFees.TryGetValue(orderId, out totalOrderFee)", span="349-349"];
m18_161 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="totalOrderFee = GetFee(order)", span="351-351"];
m18_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="_orderFees[orderId] = totalOrderFee", span="352-352"];
m18_167 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="CachedOrderIDs.TryRemove(orderId, out outOrder)", span="370-370"];
m18_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="_orderFees.TryRemove(orderId, out outOrderFee)", span="373-373"];
m18_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="OnOrderEvent(orderEvent)", span="376-376"];
m18_147 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="Log.Trace($''GDAXBrokerage.OrderMatch(): Match: {message.ProductId} {data}'')", span="321-321"];
m18_153 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="split.Add(message)", span="331-331"];
m18_154 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="var status = Math.Abs(message.Size) == Math.Abs(order.Quantity) || Math.Abs(split.OrderQuantity) == Math.Abs(split.TotalQuantity())\r\n                ? OrderStatus.Filled : OrderStatus.PartiallyFilled", span="334-335"];
m18_157 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="direction = message.Side == ''sell'' ? OrderDirection.Buy : OrderDirection.Sell", span="341-341"];
m18_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="direction = message.Side == ''sell'' ? OrderDirection.Sell : OrderDirection.Buy", span="345-345"];
m18_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="var orderFee = totalOrderFee * Math.Abs(message.Size) / Math.Abs(order.Quantity)", span="356-356"];
m18_164 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="var orderEvent = new OrderEvent\r\n            (\r\n                orderId, symbol, message.Time, status,\r\n                direction,\r\n                message.Price, direction == OrderDirection.Sell ? -message.Size : message.Size,\r\n                orderFee, $''GDAX Match Event {direction}''\r\n            )", span="358-364"];
m18_145 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="cached.Count == 0", span="316-316"];
m18_148 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="var orderId = cached[0].Key", span="322-322"];
m18_149 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="var order = cached[0].Value", span="323-323"];
m18_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="decimal totalOrderFee", span="348-348"];
m18_166 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="Order outOrder", span="369-369"];
m18_168 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="decimal outOrderFee", span="372-372"];
m18_165 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="orderEvent.Status == OrderStatus.Filled", span="367-367"];
m18_155 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="OrderDirection direction", span="337-337"];
m18_156 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="order.Type == OrderType.Market", span="339-339"];
m18_146 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="return;", span="318-318"];
m18_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OrderMatch(string)", span="301-301"];
m18_137 [cluster="Unk.ToDecimal", file="OptionFilterUniverse.cs", label="Entry Unk.ToDecimal", span=""];
m18_281 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", span="580-580"];
m18_283 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="var response = RateClient.Execute(new RestSharp.RestRequest(Method.GET))", span="582-582"];
m18_285 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GetConversionRate: error returned from conversion rate service.''))", span="585-585"];
m18_290 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, (int)response.StatusCode, ''GetConversionRate: zero value returned from conversion rate service.''))", span="593-593"];
m18_288 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="var rate = raw.SelectToken(''rates.'' + currency).Value<decimal>()", span="590-590"];
m18_287 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="var raw = JsonConvert.DeserializeObject<JObject>(response.Content)", span="589-589"];
m18_284 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="response.StatusCode != System.Net.HttpStatusCode.OK", span="583-583"];
m18_286 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="return 0;", span="586-586"];
m18_289 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="rate == 0", span="591-591"];
m18_291 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="return 0;", span="594-594"];
m18_292 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="return 1m / rate;", span="597-597"];
m18_293 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetConversionRate(string)", span="580-580"];
m18_184 [cluster="Unk.TryRemove", file="OptionFilterUniverse.cs", label="Entry Unk.TryRemove", span=""];
m18_75 [cluster="Unk.>", file="OptionFilterUniverse.cs", label="Entry Unk.>", span=""];
m18_107 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m18_280 [cluster="string.Replace(string, string)", file="OptionFilterUniverse.cs", label="Entry string.Replace(string, string)", span="0-0"];
m18_76 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", span="199-199"];
m18_95 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: message.Asks", span="225-225"];
m18_83 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="var message = JsonConvert.DeserializeObject<Messages.Snapshot>(data)", span="203-203"];
m18_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="message.Bids", span="219-219"];
m18_98 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="orderBook.UpdateAskRow(price, size)", span="229-229"];
m18_96 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: var price = decimal.Parse(row[0], NumberStyles.Float, CultureInfo.InvariantCulture)", span="227-227"];
m18_99 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="1: orderBook.BestBidAskUpdated += OnBestBidAskUpdated", span="232-232"];
m18_97 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: var size = decimal.Parse(row[1], NumberStyles.Float, CultureInfo.InvariantCulture)", span="228-228"];
m18_101 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="1: EmitQuoteTick(symbol, orderBook.BestBidPrice, orderBook.BestBidSize, orderBook.BestAskPrice, orderBook.BestAskSize)", span="236-236"];
m18_84 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="var symbol = ConvertProductId(message.ProductId)", span="205-205"];
m18_86 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="!_orderBooks.TryGetValue(symbol, out orderBook)", span="208-208"];
m18_87 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="orderBook = new OrderBook(symbol)", span="210-210"];
m18_100 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="1: _isDataQueueHandler", span="234-234"];
m18_102 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label=Exception, span="239-239"];
m18_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="0: var size = decimal.Parse(row[1], NumberStyles.Float, CultureInfo.InvariantCulture)", span="222-222"];
m18_92 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="var price = decimal.Parse(row[0], NumberStyles.Float, CultureInfo.InvariantCulture)", span="221-221"];
m18_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="orderBook.UpdateBidRow(price, size)", span="223-223"];
m18_103 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", color=green, community=0, file="OptionFilterUniverse.cs", label="1: Log.Error(e)", span="241-241"];
m18_104 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="throw;", span="242-242"];
m18_88 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="_orderBooks[symbol] = orderBook", span="211-211"];
m18_90 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="orderBook.Clear()", span="216-216"];
m18_89 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="orderBook.BestBidAskUpdated -= OnBestBidAskUpdated", span="215-215"];
m18_85 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="OrderBook orderBook", span="207-207"];
m18_105 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.OnSnapshot(string)", span="199-199"];
m18_282 [cluster="System.Threading.Thread.Sleep(int)", file="OptionFilterUniverse.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m18_111 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.UpdateBidRow(decimal, decimal)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.UpdateBidRow(decimal, decimal)", span="89-89"];
m18_79 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m18_251 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", span="600-600"];
m18_296 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="return Regex.IsMatch(symbol.Value, SymbolMatching);", span="602-602"];
m18_297 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.IsSubscribeAvailable(QuantConnect.Symbol)", span="600-600"];
m18_45 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="OptionFilterUniverse.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m18_299 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="608-608"];
m18_300 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="WebSocket.IsOpen", span="610-610"];
m18_301 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="WebSocket.Send(JsonConvert.SerializeObject(new {type = ''unsubscribe'', channels = ChannelNames}))", span="612-612"];
m18_302 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", file="OptionFilterUniverse.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Unsubscribe(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>)", span="608-608"];
m18_189 [cluster="Unk.Contains", file="OptionFilterUniverse.cs", label="Entry Unk.Contains", span=""];
m18_223 [cluster="Tick.cstr", file="OptionFilterUniverse.cs", label="Entry Tick.cstr", span=""];
m18_139 [cluster="QuantConnect.Brokerages.GDAX.OrderBook.RemoveAskRow(decimal)", file="OptionFilterUniverse.cs", label="Entry QuantConnect.Brokerages.GDAX.OrderBook.RemoveAskRow(decimal)", span="153-153"];
m18_303 [file="OptionFilterUniverse.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m18_306 [file="OptionFilterUniverse.cs", label="QuantConnect.Symbol", span=""];
m18_304 [file="OptionFilterUniverse.cs", label=message, span=""];
m18_305 [file="OptionFilterUniverse.cs", label=message, span=""];
m18_308 [file="OptionFilterUniverse.cs", label=token, span=""];
m18_307 [file="OptionFilterUniverse.cs", label=delay, span=""];
m23_6 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", span="54-54"];
m23_8 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", file="ProjectNameDialog.xaml.cs", label="projects.ForEach(p => projectNameBox.Items.Add(new ComboboxItem(p.Item1, p.Item2)))", span="56-56"];
m23_9 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", span="54-54"];
m23_15 [cluster="Unk.Add", file="ProjectNameDialog.xaml.cs", label="Entry Unk.Add", span=""];
m23_10 [cluster="Unk.ForEach", file="ProjectNameDialog.xaml.cs", label="Entry Unk.ForEach", span=""];
m23_41 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", span="99-99"];
m23_42 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Close()", span="101-101"];
m23_43 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", span="99-99"];
m23_5 [cluster="Unk.InitializeComponent", file="ProjectNameDialog.xaml.cs", label="Entry Unk.InitializeComponent", span=""];
m23_33 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", span="86-86"];
m23_34 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="ProjectNameDialog.xaml.cs", label="projectNameBox.BorderBrush = System.Windows.Media.Brushes.Red", span="88-88"];
m23_35 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="ProjectNameDialog.xaml.cs", label="projectNameBox.ToolTip = ''Error occurred with the data of the control.''", span="89-89"];
m23_36 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", span="86-86"];
m23_30 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", span="92-92"];
m23_37 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", file="ProjectNameDialog.xaml.cs", label="ProjectNameProvided = true", span="94-94"];
m23_38 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", file="ProjectNameDialog.xaml.cs", label="SelectedProjectName = projectName", span="95-95"];
m23_39 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", file="ProjectNameDialog.xaml.cs", label="SelectedProjectId = projectId", span="96-96"];
m23_40 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int?, string)", span="92-92"];
m23_31 [cluster="Unk.Close", file="ProjectNameDialog.xaml.cs", label="Entry Unk.Close", span=""];
m23_7 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", span="59-59"];
m23_16 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", file="ProjectNameDialog.xaml.cs", label="projectNameBox.Text = suggestedProjectName", span="61-61"];
m23_17 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", span="59-59"];
m23_18 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", span="64-64"];
m23_19 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="var selectedItem = projectNameBox.SelectedItem as ComboboxItem", span="66-66"];
m23_20 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="selectedItem != null", span="68-68"];
m23_21 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="var projectId = selectedItem.ProjectId", span="70-70"];
m23_22 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="var projectName = selectedItem.ProjectName", span="71-71"];
m23_25 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="projectNameBox.Text.Length != 0", span="75-75"];
m23_23 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="SaveSelectedProjectName(projectId, projectName)", span="72-72"];
m23_24 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Close()", span="73-73"];
m23_26 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="SaveSelectedProjectName(null, projectNameBox.Text)", span="77-77"];
m23_28 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="DisplayProjectNameError()", span="82-82"];
m23_27 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Close()", span="78-78"];
m23_29 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", span="64-64"];
m23_14 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", span="111-111"];
m23_44 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", file="ProjectNameDialog.xaml.cs", label="ProjectId = projectId", span="113-113"];
m23_45 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", file="ProjectNameDialog.xaml.cs", label="ProjectName = projectName", span="114-114"];
m23_46 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(int, string)", span="111-111"];
m23_0 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", span="47-47"];
m23_1 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="ProjectNameDialog.xaml.cs", label="InitializeComponent()", span="49-49"];
m23_2 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="ProjectNameDialog.xaml.cs", label="SetProjectNames(projects)", span="50-50"];
m23_3 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="ProjectNameDialog.xaml.cs", label="SetSuggestedProjectName(suggestedProjectName)", span="51-51"];
m23_4 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", span="47-47"];
m23_47 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", file="ProjectNameDialog.xaml.cs", label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", span="117-117"];
m23_48 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", file="ProjectNameDialog.xaml.cs", label="return ProjectName;", span="119-119"];
m23_49 [cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", file="ProjectNameDialog.xaml.cs", label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", span="117-117"];
m23_32 [cluster="Unk.SaveSelectedProjectName", file="ProjectNameDialog.xaml.cs", label="Entry Unk.SaveSelectedProjectName", span=""];
m23_11 [cluster="lambda expression", file="ProjectNameDialog.xaml.cs", label="Entry lambda expression", span="56-56"];
m23_12 [cluster="lambda expression", file="ProjectNameDialog.xaml.cs", label="projectNameBox.Items.Add(new ComboboxItem(p.Item1, p.Item2))", span="56-56"];
m23_13 [cluster="lambda expression", file="ProjectNameDialog.xaml.cs", label="Exit lambda expression", span="56-56"];
m23_50 [file="ProjectNameDialog.xaml.cs", label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", span=""];
m23_51 [file="ProjectNameDialog.xaml.cs", label="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem", span=""];
m24_2 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", file="QuantConnectPackage.cs", label="Entry QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", span="68-68"];
m24_3 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", color=red, community=0, file="QuantConnectPackage.cs", label="0: SolutionExplorerMenuCommand.Initialize(this)", span="70-70"];
m24_4 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", color=red, community=0, file="QuantConnectPackage.cs", label="1: base.Initialize()", span="71-71"];
m24_5 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", color=green, community=0, file="QuantConnectPackage.cs", label="1: ToolMenuCommand.Initialize(this)", span="72-72"];
m24_6 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", file="QuantConnectPackage.cs", label="Exit QuantConnect.VisualStudioPlugin.QuantConnectPackage.Initialize()", span="68-68"];
m24_0 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", file="QuantConnectPackage.cs", label="Entry QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", span="54-54"];
m24_1 [cluster="QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", file="QuantConnectPackage.cs", label="Exit QuantConnect.VisualStudioPlugin.QuantConnectPackage.QuantConnectPackage()", span="54-54"];
m24_7 [cluster="Unk.Initialize", file="QuantConnectPackage.cs", label="Entry Unk.Initialize", span=""];
m24_8 [file="QuantConnectPackage.cs", label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", span=""];
m25_8 [cluster="System.Math.Abs(decimal)", file="RegressionTests.cs", label="Entry System.Math.Abs(decimal)", span="0-0"];
m25_7 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", file="RegressionTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(QuantConnect.Symbol, decimal, decimal, System.DateTime, string)", span="53-53"];
m25_12 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43"];
m25_13 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="RegressionTests.cs", label="var limit = (LimitOrder) order", span="47-47"];
m25_14 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="RegressionTests.cs", label="order.Quantity > 0", span="48-48"];
m25_15 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="RegressionTests.cs", label="limit.LimitPrice *= 2", span="51-51"];
m25_16 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="RegressionTests.cs", label="limit.LimitPrice /= 2", span="56-56"];
m25_17 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="RegressionTests.cs", label="return true;", span="58-58"];
m25_18 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Brokerages.LimitOrderTestParameters.ModifyOrderToFill(QuantConnect.Interfaces.IBrokerage, QuantConnect.Orders.Order, decimal)", span="43-43"];
m25_0 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26"];
m25_1 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="RegressionTests.cs", label="_highLimit = highLimit", span="29-29"];
m25_2 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="RegressionTests.cs", label="_lowLimit = lowLimit", span="30-30"];
m25_3 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Brokerages.LimitOrderTestParameters.LimitOrderTestParameters(QuantConnect.Symbol, decimal, decimal)", span="26-26"];
m25_9 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(decimal)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(decimal)", span="38-38"];
m25_10 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(decimal)", file="RegressionTests.cs", label="return new LimitOrder(Symbol, Math.Abs(quantity), _lowLimit, DateTime.Now);", span="40-40"];
m25_11 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(decimal)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateLongOrder(decimal)", span="38-38"];
m25_4 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateShortOrder(decimal)", file="RegressionTests.cs", label="Entry QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateShortOrder(decimal)", span="33-33"];
m25_5 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateShortOrder(decimal)", file="RegressionTests.cs", label="return new LimitOrder(Symbol, -Math.Abs(quantity), _highLimit, DateTime.Now);", span="35-35"];
m25_6 [cluster="QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateShortOrder(decimal)", file="RegressionTests.cs", label="Exit QuantConnect.Tests.Brokerages.LimitOrderTestParameters.CreateShortOrder(decimal)", span="33-33"];
m25_19 [file="RegressionTests.cs", label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", span=""];
m26_15 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Data.SubscriptionDataConfig, decimal, bool)", file="RenkoConsolidator.cs", label="QuantConnect.Orders.StopLimitOrder", span=""];
m26_50 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="55-55"];
m26_95 [cluster="QuantConnect.Securities.SecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="177-177"];
m26_14 [cluster="string.Format(string, params object[])", file="RenkoConsolidator.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m26_3 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillBuy()", file="RenkoConsolidator.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, ''SPY'', Resolution.Minute, true, true, true, true, false, 0)", span="34-34"];
m26_94 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder(string, int, decimal, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="65-65"];
m26_4 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillBuy()", color=green, community=0, file="RenkoConsolidator.cs", label="0: var security = new Security(config, 1)", span="35-35"];
m26_5 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillBuy()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 101.123m))", span="37-37"];
m26_6 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillBuy()", file="RenkoConsolidator.cs", label="var fill = model.MarketFill(security, order)", span="39-39"];
m26_8 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(security.Price, fill.FillPrice)", span="41-41"];
m26_7 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="40-40"];
m26_9 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="42-42"];
m26_13 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Orders.StopLimitOrder.ToString()", span="86-86"];
m26_20 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", span="46-46"];
m26_21 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="var model = new EquityTransactionModel()", span="48-48"];
m26_22 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="var order = new MarketOrder(''SPY'', -100, DateTime.Now, type: SecurityType.Equity)", span="49-49"];
m26_26 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="var fill = model.MarketFill(security, order)", span="55-55"];
m26_23 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, ''SPY'', Resolution.Minute, true, true, true, true, false, 0)", span="50-50"];
m26_27 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="56-56"];
m26_30 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="59-59"];
m26_24 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="var security = new Security(config, 1)", span="51-51"];
m26_25 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 101.123m))", span="53-53"];
m26_28 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(security.Price, fill.FillPrice)", span="57-57"];
m26_29 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="58-58"];
m26_31 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsMarketFillSell()", span="46-46"];
m26_0 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="50-50"];
m26_1 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="RenkoConsolidator.cs", label="Type = OrderType.StopLimit", span="52-52"];
m26_2 [cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="50-50"];
m26_10 [cluster="decimal.ToString(string)", file="RenkoConsolidator.cs", label="Entry decimal.ToString(string)", span="0-0"];
m26_11 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Orders.StopLimitOrder.ToString()", span="86-86"];
m26_16 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(string, System.DateTime, decimal)", span="52-52"];
m26_138 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="54-54"];
m26_120 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", span="189-189"];
m26_121 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="var model = new EquityTransactionModel()", span="191-191"];
m26_122 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: var order = new StopMarketOrder(''SPY'', 100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="192-192"];
m26_126 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="var fill = model.StopMarketFill(security, order)", span="197-197"];
m26_132 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="fill = model.StopMarketFill(security, order)", span="206-206"];
m26_123 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, ''SPY'', Resolution.Minute, true, true, true, true, false, 0)", span="193-193"];
m26_130 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="202-202"];
m26_133 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="209-209"];
m26_134 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(Math.Max(security.Price, order.StopPrice), fill.FillPrice)", span="210-210"];
m26_136 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="212-212"];
m26_124 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="0: var security = new Security(config, 1)", span="194-194"];
m26_125 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 101m))", span="195-195"];
m26_131 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 102.5m))", span="204-204"];
m26_127 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="199-199"];
m26_128 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="200-200"];
m26_129 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="201-201"];
m26_135 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="211-211"];
m26_137 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillBuy()", span="189-189"];
m26_96 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", span="153-153"];
m26_97 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="0: var model = new EquityTransactionModel()", span="155-155"];
m26_98 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="0: var order = new StopLimitOrder(''SPY'', -100, 101.75m, 101.50m, DateTime.Now, type: SecurityType.Equity)", span="156-156"];
m26_102 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="0: var fill = model.StopLimitFill(security, order)", span="161-161"];
m26_108 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="fill = model.StopLimitFill(security, order)", span="170-170"];
m26_114 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="fill = model.StopLimitFill(security, order)", span="179-179"];
m26_99 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="1: var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, ''SPY'', Resolution.Minute, true, true, true, true, false, 0)", span="157-157"];
m26_106 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="1: Assert.AreEqual(OrderStatus.None, order.Status)", span="166-166"];
m26_112 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="1: Assert.AreEqual(OrderStatus.None, order.Status)", span="175-175"];
m26_115 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="182-182"];
m26_116 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(order.LimitPrice, fill.FillPrice)", span="183-183"];
m26_118 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="185-185"];
m26_100 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="var security = new Security(config, 1)", span="158-158"];
m26_101 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 102m))", span="159-159"];
m26_107 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 101m))", span="168-168"];
m26_113 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 101.66m))", span="177-177"];
m26_103 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="1: Assert.AreEqual(0, fill.FillQuantity)", span="163-163"];
m26_104 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="0: Assert.AreEqual(0, fill.FillPrice)", span="164-164"];
m26_105 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="0: Assert.AreEqual(OrderStatus.None, fill.Status)", span="165-165"];
m26_109 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="172-172"];
m26_110 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="0: Assert.AreEqual(0, fill.FillPrice)", span="173-173"];
m26_111 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="174-174"];
m26_117 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="184-184"];
m26_119 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillSell()", span="153-153"];
m26_32 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", span="63-63"];
m26_33 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="0: var model = new EquityTransactionModel()", span="65-65"];
m26_34 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="var order = new LimitOrder(''SPY'', 100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="66-66"];
m26_38 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="var fill = model.LimitFill(security, order)", span="71-71"];
m26_44 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="fill = model.LimitFill(security, order)", span="80-80"];
m26_35 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, ''SPY'', Resolution.Minute, true, true, true, true, false, 0)", span="67-67"];
m26_42 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="76-76"];
m26_45 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="83-83"];
m26_46 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(order.LimitPrice, fill.FillPrice)", span="84-84"];
m26_48 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="86-86"];
m26_36 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="0: var security = new Security(config, 1)", span="68-68"];
m26_37 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 102m))", span="69-69"];
m26_43 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 1.123m))", span="78-78"];
m26_39 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="73-73"];
m26_40 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="74-74"];
m26_41 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="75-75"];
m26_47 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="85-85"];
m26_49 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillBuy()", span="63-63"];
m26_19 [cluster="Unk.AreEqual", file="RenkoConsolidator.cs", label="Entry Unk.AreEqual", span=""];
m26_12 [cluster="QuantConnect.Orders.StopLimitOrder.ToString()", file="RenkoConsolidator.cs", label="return string.Format(''{0} order for {1} unit{2} of {3} at stop {4} limit {5}'', Type, Quantity, Quantity == 1 ? '''' : ''s'', Symbol, StopPrice, LimitPrice);", span="88-88"];
m26_17 [cluster="QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(System.DateTime, QuantConnect.Data.BaseData)", span="395-395"];
m26_18 [cluster="QuantConnect.Securities.SecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="60-60"];
m26_51 [cluster="QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="251-251"];
m26_139 [cluster="QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="RenkoConsolidator.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="105-105"];
m26_52 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", span="90-90"];
m26_53 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="var model = new EquityTransactionModel()", span="92-92"];
m26_54 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="var order = new LimitOrder(''SPY'', -100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="93-93"];
m26_58 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="var fill = model.LimitFill(security, order)", span="98-98"];
m26_64 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="fill = model.LimitFill(security, order)", span="107-107"];
m26_55 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, ''SPY'', Resolution.Minute, true, true, true, true, false, 0)", span="94-94"];
m26_62 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="103-103"];
m26_65 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="110-110"];
m26_66 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(order.LimitPrice, fill.FillPrice)", span="111-111"];
m26_68 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, order.Status)", span="113-113"];
m26_56 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="var security = new Security(config, 1)", span="95-95"];
m26_57 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 101m))", span="96-96"];
m26_63 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 101.623m))", span="105-105"];
m26_59 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="100-100"];
m26_60 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="101-101"];
m26_61 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="102-102"];
m26_67 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="112-112"];
m26_69 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsLimitFillSell()", span="90-90"];
m26_140 [cluster="System.Math.Max(decimal, decimal)", file="RenkoConsolidator.cs", label="Entry System.Math.Max(decimal, decimal)", span="0-0"];
m26_159 [cluster="System.Math.Min(decimal, decimal)", file="RenkoConsolidator.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m26_70 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", span="117-117"];
m26_71 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="var model = new EquityTransactionModel()", span="119-119"];
m26_72 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="var order = new StopLimitOrder(''SPY'', 100, 101.5m, 101.75m, DateTime.Now, type: SecurityType.Equity)", span="120-120"];
m26_76 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="var fill = model.StopLimitFill(security, order)", span="125-125"];
m26_82 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="fill = model.StopLimitFill(security, order)", span="134-134"];
m26_88 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="fill = model.StopLimitFill(security, order)", span="143-143"];
m26_73 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, ''SPY'', Resolution.Minute, true, true, true, true, false, 0)", span="121-121"];
m26_80 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: Assert.AreEqual(OrderStatus.None, order.Status)", span="130-130"];
m26_86 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: Assert.AreEqual(OrderStatus.None, order.Status)", span="139-139"];
m26_89 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="146-146"];
m26_90 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="0: Assert.AreEqual(order.LimitPrice, fill.FillPrice)", span="147-147"];
m26_92 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: Assert.AreEqual(OrderStatus.Filled, order.Status)", span="149-149"];
m26_74 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: var security = new Security(config, 1)", span="122-122"];
m26_75 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 100m))", span="123-123"];
m26_81 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 102m))", span="132-132"];
m26_87 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="0: security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 101.66m))", span="141-141"];
m26_77 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="127-127"];
m26_78 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="128-128"];
m26_79 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="129-129"];
m26_83 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="136-136"];
m26_84 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="137-137"];
m26_85 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: Assert.AreEqual(OrderStatus.None, fill.Status)", span="138-138"];
m26_91 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", color=red, community=0, file="RenkoConsolidator.cs", label="1: Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="148-148"];
m26_93 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopLimitFillBuy()", span="117-117"];
m26_141 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="Entry QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", span="216-216"];
m26_142 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="var model = new EquityTransactionModel()", span="218-218"];
m26_143 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="var order = new StopMarketOrder(''SPY'', -100, 101.5m, DateTime.Now, type: SecurityType.Equity)", span="219-219"];
m26_147 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="var fill = model.StopMarketFill(security, order)", span="224-224"];
m26_153 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="fill = model.StopMarketFill(security, order)", span="233-233"];
m26_144 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="var config = new SubscriptionDataConfig(typeof(TradeBar), SecurityType.Equity, ''SPY'', Resolution.Minute, true, true, true, true, false, 0)", span="220-220"];
m26_151 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.None, order.Status)", span="229-229"];
m26_154 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(order.Quantity, fill.FillQuantity)", span="236-236"];
m26_155 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(Math.Min(security.Price, order.StopPrice), fill.FillPrice)", span="237-237"];
m26_157 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", color=red, community=0, file="RenkoConsolidator.cs", label="1: Assert.AreEqual(OrderStatus.Filled, order.Status)", span="239-239"];
m26_145 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="var security = new Security(config, 1)", span="221-221"];
m26_146 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 102m))", span="222-222"];
m26_152 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="security.SetMarketPrice(DateTime.Now, new IndicatorDataPoint(''SPY'', DateTime.Now, 101m))", span="231-231"];
m26_148 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillQuantity)", span="226-226"];
m26_149 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(0, fill.FillPrice)", span="227-227"];
m26_150 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.None, fill.Status)", span="228-228"];
m26_156 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="Assert.AreEqual(OrderStatus.Filled, fill.Status)", span="238-238"];
m26_158 [cluster="QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", file="RenkoConsolidator.cs", label="Exit QuantConnect.Tests.Common.Securities.Equity.EquityTransactionModelTests.PerformsStopMarketFillSell()", span="216-216"];
m27_58 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData<T>()", span="190-190"];
m27_59 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="BaseData data", span="193-193"];
m27_60 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="_dataByType.TryGetValue(typeof(T), out data)", span="194-194"];
m27_61 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="return data as T;", span="195-195"];
m27_62 [cluster="QuantConnect.Securities.SecurityCache.GetData<T>()", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.GetData<T>()", span="190-190"];
m27_64 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="201-201"];
m27_65 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="SecurityCache.cs", label="_dataByType.Clear()", span="203-203"];
m27_66 [cluster="QuantConnect.Securities.SecurityCache.Reset()", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.Reset()", span="201-201"];
m27_67 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", file="SecurityCache.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()", span="0-0"];
m27_55 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.GetData()", span="180-180"];
m27_56 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="SecurityCache.cs", label="return _lastData;", span="182-182"];
m27_57 [cluster="QuantConnect.Securities.SecurityCache.GetData()", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.GetData()", span="180-180"];
m27_0 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Entry QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="99-99"];
m27_1 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var openInterest = data as OpenInterest", span="101-101"];
m27_5 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="1: data.IsFillForward", span="109-109"];
m27_7 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="1: _dataByType[data.GetType()] = data", span="112-112"];
m27_8 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="_lastData == null\r\n              || _lastQuoteBarUpdate != data.EndTime\r\n              || data.DataType != MarketDataType.TradeBar", span="117-119"];
m27_9 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="_lastData = data", span="121-121"];
m27_10 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=red, community=0, file="SecurityCache.cs", label="1: var tick = data as Tick", span="125-125"];
m27_25 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var bar = data as IBar", span="140-140"];
m27_27 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="_lastQuoteBarUpdate != data.EndTime", span="143-143"];
m27_52 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Price = data.Price", span="172-172"];
m27_2 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="openInterest != null", span="102-102"];
m27_3 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="OpenInterest = (long)openInterest.Value", span="104-104"];
m27_4 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="return;", span="105-105"];
m27_6 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="1: return;", span="109-109"];
m27_11 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick != null", span="126-126"];
m27_12 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.Value != 0", span="128-128"];
m27_13 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Price = tick.Value", span="128-128"];
m27_14 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.BidPrice != 0", span="130-130"];
m27_15 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="BidPrice = tick.BidPrice", span="130-130"];
m27_16 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.BidSize != 0", span="131-131"];
m27_17 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="BidSize = tick.BidSize", span="131-131"];
m27_18 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.AskPrice != 0", span="133-133"];
m27_19 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskPrice = tick.AskPrice", span="133-133"];
m27_20 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.AskSize != 0", span="134-134"];
m27_21 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskSize = tick.AskSize", span="134-134"];
m27_22 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tick.Quantity != 0", span="136-136"];
m27_23 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Volume = tick.Quantity", span="136-136"];
m27_24 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="return;", span="138-138"];
m27_26 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar != null", span="141-141"];
m27_28 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.Open != 0", span="145-145"];
m27_29 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Open = bar.Open", span="145-145"];
m27_30 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.High != 0", span="146-146"];
m27_31 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="High = bar.High", span="146-146"];
m27_32 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.Low != 0", span="147-147"];
m27_33 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Low = bar.Low", span="147-147"];
m27_34 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="bar.Close != 0", span="148-148"];
m27_35 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Price = bar.Close", span="150-150"];
m27_36 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Close = bar.Close", span="151-151"];
m27_37 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var tradeBar = bar as TradeBar", span="155-155"];
m27_41 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="var quoteBar = bar as QuoteBar", span="160-160"];
m27_38 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tradeBar != null", span="156-156"];
m27_39 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="tradeBar.Volume != 0", span="158-158"];
m27_40 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Volume = tradeBar.Volume", span="158-158"];
m27_42 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar != null", span="161-161"];
m27_43 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="_lastQuoteBarUpdate = quoteBar.EndTime", span="163-163"];
m27_44 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar.Ask != null && quoteBar.Ask.Close != 0", span="164-164"];
m27_45 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskPrice = quoteBar.Ask.Close", span="164-164"];
m27_46 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="1: quoteBar.Bid != null && quoteBar.Bid.Close != 0", span="165-165"];
m27_47 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", color=green, community=0, file="SecurityCache.cs", label="0: BidPrice = quoteBar.Bid.Close", span="165-165"];
m27_48 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar.LastBidSize != 0", span="166-166"];
m27_49 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="BidSize = quoteBar.LastBidSize", span="166-166"];
m27_50 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="quoteBar.LastAskSize != 0", span="167-167"];
m27_51 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="AskSize = quoteBar.LastAskSize", span="167-167"];
m27_53 [cluster="QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", file="SecurityCache.cs", label="Exit QuantConnect.Securities.SecurityCache.AddData(QuantConnect.Data.BaseData)", span="99-99"];
m27_63 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SecurityCache.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m27_68 [file="SecurityCache.cs", label="QuantConnect.Securities.SecurityCache", span=""];
m30_25 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", span="103-103"];
m30_26 [cluster="System.ComponentModel.Design.CommandID.CommandID(System.Guid, int)", file="SolutionExplorerMenuCommand.cs", label="Entry System.ComponentModel.Design.CommandID.CommandID(System.Guid, int)", span="0-0"];
m30_27 [cluster="OleMenuCommand.cstr", file="SolutionExplorerMenuCommand.cs", label="Entry OleMenuCommand.cstr", span=""];
m30_44 [cluster="lambda expression", color=red, community=1, file="SolutionExplorerMenuCommand.cs", label="0: var compilationResult = await System.Threading.Tasks.Task.Run(() =>\r\n                    CompileProjectOnServer(selectedProjectId))", span="137-138"];
m30_45 [cluster="lambda expression", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: !compilationResult.Item1", span="139-139"];
m30_46 [cluster="lambda expression", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: var errorDialog = new ErrorDialog(''Compilation Error'', compilationResult.Item2)", span="141-141"];
m30_17 [cluster="Unk.nameof", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.nameof", span=""];
m30_28 [cluster="Unk.AddCommand", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.AddCommand", span=""];
m30_103 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="VsUtils.DisplayInStatusBar(_serviceProvider, message)", span="215-215"];
m30_43 [cluster="lambda expression", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: return;", span="134-134"];
m30_40 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="128-161"];
m30_41 [cluster="lambda expression", color=red, community=1, file="SolutionExplorerMenuCommand.cs", label="0: var uploadResult = await System.Threading.Tasks.Task.Run(() =>\r\n                    UploadFilesToServer(selectedProjectId, files))", span="130-131"];
m30_42 [cluster="lambda expression", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: !uploadResult", span="132-132"];
m30_60 [cluster="string.Format(System.IFormatProvider, string, object)", file="SolutionExplorerMenuCommand.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m30_222 [cluster="Unk.ToString", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.ToString", span=""];
m30_180 [cluster="Unk.ToList", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.ToList", span=""];
m30_0 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateProjectFinder()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateProjectFinder()", span="74-74"];
m30_3 [cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ProjectFinder(string)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Entry QuantConnect.VisualStudioPlugin.ProjectFinder.ProjectFinder(string)", span="37-37"];
m30_2 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateProjectFinder()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateProjectFinder()", span="74-74"];
m30_1 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateProjectFinder()", file="SolutionExplorerMenuCommand.cs", label="return new ProjectFinder(PathUtils.GetSolutionFolder(_dte2));", span="76-76"];
m30_4 [cluster="QuantConnect.VisualStudioPlugin.PathUtils.GetSolutionFolder(DTE2)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.PathUtils.GetSolutionFolder(DTE2)", span="27-27"];
m30_69 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", span="149-149"];
m30_117 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="VsUtils.DisplayInStatusBar(_serviceProvider, ''Compiling project...'')", span="234-234"];
m30_119 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: var compileStatus = api.CreateCompile(projectId)", span="236-236"];
m30_123 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: compileStatus = api.ReadCompile(projectId, compileId)", span="242-242"];
m30_118 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="var api = AuthorizationManager.GetInstance().GetApi()", span="235-235"];
m30_120 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="var compileId = compileStatus.CompileId", span="237-237"];
m30_121 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="compileStatus.State == Api.CompileState.InQueue", span="239-239"];
m30_124 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="compileStatus.State == Api.CompileState.BuildError", span="245-245"];
m30_125 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="var error = compileStatus.Errors.Count == 0 ?\r\n                    compileStatus.Logs.FirstOrDefault() : compileStatus.Errors.FirstOrDefault()", span="248-249"];
m30_129 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="return new Tuple<bool, string>(true, compileStatus.CompileId);", span="254-254"];
m30_122 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Thread.Sleep(2000)", span="241-241"];
m30_128 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="VsUtils.DisplayInStatusBar(_serviceProvider, ''Compilation completed successfully'')", span="253-253"];
m30_126 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="VsUtils.DisplayInStatusBar(_serviceProvider, ''Error when compiling project'')", span="250-250"];
m30_127 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="return new Tuple<bool, string>(false, error);", span="251-251"];
m30_130 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CompileProjectOnServer(int)", span="232-232"];
m30_150 [cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Api.Api.CreateBacktest(int, string, string)", span="307-307"];
m30_18 [cluster="System.Action<T>.Invoke(T)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m30_20 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="77-77"];
m30_22 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="77-77"];
m30_24 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", file="SolutionExplorerMenuCommand.cs", label="commandService.AddCommand(oleMenuItem)", span="107-107"];
m30_23 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSendForBacktesting(OleMenuCommandService)", file="SolutionExplorerMenuCommand.cs", label="var oleMenuItem = new OleMenuCommand(SendForBacktestingCallback, menuCommandId)", span="106-106"];
m30_110 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", file="SolutionExplorerMenuCommand.cs", label="QuantConnect.Tests.Engine.TestResultHandler", span=""];
m30_151 [cluster="QuantConnect.Api.Api.ReadBacktest(int, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Api.Api.ReadBacktest(int, string)", span="325-325"];
m30_63 [cluster="lambda expression", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: UploadFilesToServer(selectedProjectId, files)", span="131-131"];
m30_64 [cluster="lambda expression", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Exit lambda expression", span="130-131"];
m30_65 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", span="181-181"];
m30_85 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m30_89 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label=files, span="188-188"];
m30_90 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="api.DeleteProjectFile(selectedProjectId, file.FileName)", span="190-190"];
m30_92 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="var response = api.AddProjectFile(selectedProjectId, file.FileName, fileContent)", span="194-194"];
m30_86 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="var api = AuthorizationManager.GetInstance().GetApi()", span="184-184"];
m30_87 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="var filesUploaded = 0", span="186-186"];
m30_88 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="var filesNotUploaded = 0", span="187-187"];
m30_94 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="filesUploaded++", span="197-197"];
m30_101 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="_cancellationTokenSource.Cancel()", span="219-219"];
m30_96 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="filesNotUploaded++", span="202-202"];
m30_99 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="filesNotUploaded++", span="208-208"];
m30_102 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.Exit()", span="217-217"];
m30_104 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", span="222-222"];
m30_100 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Exit()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.Exit()", span="217-217"];
m30_91 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="var fileContent = File.ReadAllText(file.FilePath)", span="193-193"];
m30_95 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="VSActivityLog.Error(''Failed to add project file '' + file.FileName)", span="201-201"];
m30_98 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="VSActivityLog.Error(''Exception adding project file '' + file.FileName + ''. Exception '' + exception)", span="207-207"];
m30_93 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="response.Success", span="195-195"];
m30_97 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label=Exception, span="205-205"];
m30_106 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", span="222-222"];
m30_105 [cluster="QuantConnect.Tests.Engine.TestResultHandler.PurgeQueue()", file="SolutionExplorerMenuCommand.cs", label="Messages.Clear()", span="224-224"];
m30_107 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="71-71"];
m30_108 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.UploadFilesToServer(int, System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>)", span="181-181"];
m30_57 [cluster="System.Threading.Tasks.Task.Run<TResult>(System.Func<TResult>)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Threading.Tasks.Task.Run<TResult>(System.Func<TResult>)", span="0-0"];
m30_109 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="32-32"];
m30_55 [cluster="lambda expression", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Process.Start(projectUrl)", span="160-160"];
m30_33 [cluster="QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Packets.SystemDebugPacket.SystemDebugPacket(int, string, string, string, bool)", span="17-17"];
m30_34 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Instance = new SolutionExplorerMenuCommand(package)", span="123-123"];
m30_35 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.Initialize(Package)", span="121-121"];
m30_224 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m30_115 [cluster="QuantConnect.VisualStudioPlugin.VSActivityLog.Error(string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.VSActivityLog.Error(string, string)", span="30-30"];
m30_135 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m30_225 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m30_5 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", span="84-84"];
m30_56 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="128-161"];
m30_61 [cluster="QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.ChartPoint.ChartPoint(System.DateTime, decimal)", span="370-370"];
m30_185 [cluster="Unk.DetermineProjectLanguage", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.DetermineProjectLanguage", span=""];
m30_220 [cluster="System.Collections.Generic.List<T>.List()", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m30_77 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: !Charts.ContainsKey(update.Name)", span="164-164"];
m30_153 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _authenticationCommand.Login(_serviceProvider, false)", span="289-289"];
m30_157 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="var files = GetSelectedFiles(sender)", span="295-295"];
m30_174 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="onProject.Invoke(selectedProjectId.Value, selectedProjectName, files)", span="322-322"];
m30_175 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="onProject.Invoke(selectedProjectId.Value, selectedProjectName, files)", span="326-326"];
m30_154 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: var api = AuthorizationManager.GetInstance().GetApi()", span="291-291"];
m30_155 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: var projects = api.ListProjects().Projects", span="292-292"];
m30_156 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="var projectNames = projects.Select(p => Tuple.Create(p.ProjectId, p.Name)).ToList()", span="293-293"];
m30_160 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="var projectNameDialog = new ProjectNameDialog(projectNames, suggestedProjectName)", span="298-298"];
m30_158 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="var fileNames = files.Select(tuple => tuple.FileName).ToList()", span="296-296"];
m30_167 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="var newProjectLanguage = PathUtils.DetermineProjectLanguage(files.Select(f => f.FilePath).ToList())", span="309-309"];
m30_159 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="var suggestedProjectName = _lazyProjectFinder.ProjectNameForFiles(fileNames)", span="297-297"];
m30_165 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="_lazyProjectFinder.AssociateProjectWith(selectedProjectName, fileNames)", span="305-305"];
m30_161 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="VsUtils.DisplayDialogWindow(projectNameDialog)", span="299-299"];
m30_162 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="projectNameDialog.ProjectNameProvided", span="301-301"];
m30_163 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="var selectedProjectName = projectNameDialog.SelectedProjectName", span="303-303"];
m30_164 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="var selectedProjectId = projectNameDialog.SelectedProjectId", span="304-304"];
m30_171 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="selectedProjectId = CreateQuantConnectProject(selectedProjectName, newProjectLanguage.Value)", span="317-317"];
m30_173 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="VsUtils.ShowMessageBox(_serviceProvider, ''Failed to create a project'', $''Failed to create a project {selectedProjectName}'')", span="320-320"];
m30_166 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="!selectedProjectId.HasValue", span="307-307"];
m30_168 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="!newProjectLanguage.HasValue", span="310-310"];
m30_169 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="VsUtils.ShowMessageBox(_serviceProvider, ''Failed to determine project language'',\r\n                                $''Failed to determine programming laguage for a project'')", span="312-313"];
m30_170 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="return;", span="314-314"];
m30_172 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="!selectedProjectId.HasValue", span="318-318"];
m30_176 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.ExecuteOnProject(object, System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>)", span="287-287"];
m30_228 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="370-374"];
m30_67 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Sample(''Strategy Equity'', ''Daily Performance'', 1, SeriesType.Line, time, value, ''%'')", span="146-146"];
m30_49 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", color=red, community=1, file="SolutionExplorerMenuCommand.cs", label="0: !Charts.ContainsKey(chartName)", span="124-124"];
m30_71 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Exit QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", span="149-149"];
m30_54 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", color=red, community=1, file="SolutionExplorerMenuCommand.cs", label="0: Exit QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="121-121"];
m30_62 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="130-131"];
m30_66 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", span="144-144"];
m30_47 [cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60"];
m30_48 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Entry QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", span="121-121"];
m30_50 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Charts.AddOrUpdate(chartName, new Chart(chartName))", span="126-126"];
m30_70 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleBenchmark(System.DateTime, decimal)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Sample(''Benchmark'', ''Benchmark'', 0, SeriesType.Line, time, value)", span="151-151"];
m30_51 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: !Charts[chartName].Series.ContainsKey(seriesName)", span="130-130"];
m30_52 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Charts[chartName].Series.Add(seriesName, new Series(seriesName, seriesType, seriesIndex, unit))", span="132-132"];
m30_53 [cluster="QuantConnect.Tests.Engine.TestResultHandler.Sample(string, string, int, QuantConnect.SeriesType, System.DateTime, decimal, string)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Charts[chartName].Series[seriesName].Values.Add(new ChartPoint(time, value))", span="136-136"];
m30_68 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SamplePerformance(System.DateTime, decimal)", span="144-144"];
m30_72 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SampleAssetPrices(QuantConnect.Symbol, System.DateTime, decimal)", span="154-154"];
m30_78 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Charts.AddOrUpdate(update.Name, new Chart(update.Name, update.ChartType))", span="166-166"];
m30_79 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: update.Series.Values", span="170-170"];
m30_83 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Exit QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="159-159"];
m30_80 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="!Charts[update.Name].Series.ContainsKey(series.Name)", span="173-173"];
m30_82 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Charts[update.Name].Series[series.Name].Values.AddRange(series.Values)", span="179-179"];
m30_84 [cluster="QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Chart.Chart(string, QuantConnect.ChartType)", span="53-53"];
m30_189 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="293-293"];
m30_193 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="296-296"];
m30_196 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Entry lambda expression", span="309-309"];
m30_190 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Tuple.Create(p.ProjectId, p.Name)", span="293-293"];
m30_191 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="293-293"];
m30_194 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="tuple.FileName", span="296-296"];
m30_195 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="296-296"];
m30_197 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="f.FilePath", span="309-309"];
m30_198 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="309-309"];
m30_229 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="new SelectedItem\r\n                {\r\n                    FileName = ''/'' + c.Replace(basePath, string.Empty).Replace(''\\'', ''/''),\r\n                    FilePath = c\r\n                }", span="370-374"];
m30_10 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: _authenticationCommand = new AuthenticationCommand()", span="93-93"];
m30_11 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: var commandService = _serviceProvider.GetService(typeof(IMenuCommandService)) as OleMenuCommandService", span="95-95"];
m30_15 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", span="84-84"];
m30_12 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="SolutionExplorerMenuCommand.cs", label="commandService != null", span="96-96"];
m30_13 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="SolutionExplorerMenuCommand.cs", label="RegisterSendForBacktesting(commandService)", span="98-98"];
m30_14 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="SolutionExplorerMenuCommand.cs", label="RegisterSaveToQuantConnect(commandService)", span="99-99"];
m30_230 [cluster="lambda expression", file="SolutionExplorerMenuCommand.cs", label="Exit lambda expression", span="370-374"];
m30_182 [cluster="Unk.ProjectNameForFiles", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.ProjectNameForFiles", span=""];
m30_111 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetApi()", span="44-44"];
m30_181 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", span="343-343"];
m30_206 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="var selectedFiles = new List<SelectedItem>()", span="345-345"];
m30_207 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="var selectedItems = (object[])_dte2.ToolWindows.SolutionExplorer.SelectedItems", span="346-346"];
m30_213 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="selectedFiles.Add(selectedItem)", span="358-358"];
m30_214 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="selectedFiles.Count == 1 &&\r\n                string.IsNullOrEmpty(Path.GetExtension(selectedFiles.First().FilePath))", span="364-365"];
m30_215 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="var basePath = selectedFiles.First().FilePath", span="367-367"];
m30_216 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="var nonFolders = Directory.GetFiles(selectedFiles.First().FilePath, ''*'', SearchOption.AllDirectories)", span="368-368"];
m30_218 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="return selectedFiles;", span="377-377"];
m30_208 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label=selectedItems, span="347-347"];
m30_209 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="selectedUIHierarchyItem.Object is EnvDTE.ProjectItem", span="349-349"];
m30_210 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="var item = selectedUIHierarchyItem.Object as EnvDTE.ProjectItem", span="351-351"];
m30_211 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="var filePath = item.Properties.Item(''FullPath'').Value.ToString()", span="352-352"];
m30_212 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="var selectedItem = new SelectedItem\r\n                    {\r\n                        FileName = item.Name,\r\n                        FilePath = filePath\r\n                    }", span="353-357"];
m30_217 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="selectedFiles = nonFolders.Select(c => new SelectedItem\r\n                {\r\n                    FileName = ''/'' + c.Replace(basePath, string.Empty).Replace(''\\'', ''/''),\r\n                    FilePath = c\r\n                }).ToList()", span="370-374"];
m30_219 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.GetSelectedFiles(object)", span="343-343"];
m30_73 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", span="264-264"];
m30_74 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", span="164-164"];
m30_188 [cluster="System.Action<T1, T2, T3>.Invoke(T1, T2, T3)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Action<T1, T2, T3>.Invoke(T1, T2, T3)", span="0-0"];
m30_39 [cluster="Unk.ExecuteOnProject", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.ExecuteOnProject", span=""];
m30_6 [cluster="System.Threading.Tasks.Task.Run(System.Action)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Threading.Tasks.Task.Run(System.Action)", span="0-0"];
m30_7 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="SolutionExplorerMenuCommand.cs", label="throw new ArgumentNullException(nameof(package));", span="88-88"];
m30_8 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="SolutionExplorerMenuCommand.cs", label="_package = package as QuantConnectPackage", span="91-91"];
m30_9 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SolutionExplorerMenuCommand(Package)", file="SolutionExplorerMenuCommand.cs", label="_dte2 = _serviceProvider.GetService(typeof(SDTE)) as DTE2", span="92-92"];
m30_184 [cluster="Unk.AssociateProjectWith", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.AssociateProjectWith", span=""];
m30_136 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", file="SolutionExplorerMenuCommand.cs", label="VsUtils.DisplayInStatusBar(_serviceProvider, ''Backtesting project...'')", span="266-266"];
m30_138 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: var backtestStatus = api.CreateBacktest(projectId, compileId, ''My New Backtest'')", span="268-268"];
m30_142 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: backtestStatus = api.ReadBacktest(projectId, backtestId)", span="274-274"];
m30_137 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", file="SolutionExplorerMenuCommand.cs", label="var api = AuthorizationManager.GetInstance().GetApi()", span="267-267"];
m30_139 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", file="SolutionExplorerMenuCommand.cs", label="var backtestId = backtestStatus.BacktestId", span="269-269"];
m30_140 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: !backtestStatus.Completed", span="271-271"];
m30_143 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: !string.IsNullOrEmpty(backtestStatus.Error)", span="277-277"];
m30_145 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", file="SolutionExplorerMenuCommand.cs", label="return new Tuple<bool, string>(false, backtestStatus.Error);", span="280-280"];
m30_141 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", color=red, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Thread.Sleep(5000)", span="273-273"];
m30_144 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", file="SolutionExplorerMenuCommand.cs", label="VsUtils.DisplayInStatusBar(_serviceProvider, ''Error when backtesting project'')", span="279-279"];
m30_146 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", file="SolutionExplorerMenuCommand.cs", label="var successMessage = ''Backtest completed successfully''", span="282-282"];
m30_147 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", file="SolutionExplorerMenuCommand.cs", label="VsUtils.DisplayInStatusBar(_serviceProvider, successMessage)", span="283-283"];
m30_148 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", file="SolutionExplorerMenuCommand.cs", label="return new Tuple<bool, string>(true, successMessage);", span="284-284"];
m30_149 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.BacktestProjectOnServer(int, string)", span="264-264"];
m30_116 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.ShowErrorMessageBox(System.IServiceProvider, string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.ShowErrorMessageBox(System.IServiceProvider, string, string)", span="79-79"];
m30_179 [cluster="Unk.Select", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.Select", span=""];
m30_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m30_21 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.RegisterSaveToQuantConnect(OleMenuCommandService)", span="110-110"];
m30_36 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", span="106-106"];
m30_37 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", color=red, community=1, file="SolutionExplorerMenuCommand.cs", label="0: Messages.Enqueue(new LogPacket(_job.AlgorithmId, message))", span="108-108"];
m30_38 [cluster="QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.LogMessage(string)", span="106-106"];
m30_227 [cluster="System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", file="SolutionExplorerMenuCommand.cs", label="Entry System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", span="0-0"];
m30_183 [cluster="ProjectNameDialog.cstr", file="SolutionExplorerMenuCommand.cs", label="Entry ProjectNameDialog.cstr", span=""];
m30_81 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", file="SolutionExplorerMenuCommand.cs", label="Charts[update.Name].Series.Add(series.Name, new Series(series.Name, series.SeriesType, series.Index, series.Unit))", span="175-175"];
m30_29 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m30_31 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Messages.Enqueue(new SystemDebugPacket(_job.ProjectId, _job.AlgorithmId, _job.CompileId, message))", span="98-98"];
m30_30 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", span="96-96"];
m30_32 [cluster="QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.Tests.Engine.TestResultHandler.SystemDebugMessage(string)", span="96-96"];
m30_133 [cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Api.Api.ReadCompile(int, string)", span="287-287"];
m30_112 [cluster="QuantConnect.Api.Api.DeleteProjectFile(int, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Api.Api.DeleteProjectFile(int, string)", span="231-231"];
m30_192 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m30_205 [cluster="QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", span="72-72"];
m30_113 [cluster="System.IO.File.ReadAllText(string)", file="SolutionExplorerMenuCommand.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m30_19 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.AuthenticationCommand()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.AuthenticationCommand()", span="22-22"];
m30_187 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateQuantConnectProject(string, QuantConnect.Language)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateQuantConnectProject(string, QuantConnect.Language)", span="332-332"];
m30_199 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateQuantConnectProject(string, QuantConnect.Language)", file="SolutionExplorerMenuCommand.cs", label="var api = AuthorizationManager.GetInstance().GetApi()", span="334-334"];
m30_200 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateQuantConnectProject(string, QuantConnect.Language)", file="SolutionExplorerMenuCommand.cs", label="var projectResponse = api.CreateProject(projectName, projectLanguage)", span="335-335"];
m30_201 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateQuantConnectProject(string, QuantConnect.Language)", file="SolutionExplorerMenuCommand.cs", label="!projectResponse.Success", span="336-336"];
m30_203 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateQuantConnectProject(string, QuantConnect.Language)", file="SolutionExplorerMenuCommand.cs", label="return projectResponse.Projects[0].ProjectId;", span="340-340"];
m30_202 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateQuantConnectProject(string, QuantConnect.Language)", file="SolutionExplorerMenuCommand.cs", label="return null;", span="338-338"];
m30_204 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateQuantConnectProject(string, QuantConnect.Language)", file="SolutionExplorerMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.CreateQuantConnectProject(string, QuantConnect.Language)", span="332-332"];
m30_221 [cluster="Unk.Item", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.Item", span=""];
m30_59 [cluster="Unk.DisplayDialogWindow", file="SolutionExplorerMenuCommand.cs", label="Entry Unk.DisplayDialogWindow", span=""];
m30_114 [cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Api.Api.AddProjectFile(int, string, string)", span="129-129"];
m30_75 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", color=red, community=1, file="SolutionExplorerMenuCommand.cs", label="0: ExecuteOnProject(sender, (selectedProjectId, selectedProjectName, files) =>\r\n            {\r\n                System.Threading.Tasks.Task.Factory.StartNew(() =>\r\n                {\r\n                    UploadFilesToServer(selectedProjectId, files);\r\n                }, CancellationToken.None, TaskCreationOptions.AttachedToParent, TaskScheduler.Default);\r\n            })", span="166-172"];
m30_76 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", color=green, community=0, file="SolutionExplorerMenuCommand.cs", label="0: Exit QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SaveToQuantConnectCallback(object, System.EventArgs)", span="164-164"];
m30_16 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SolutionExplorerMenuCommand.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m30_134 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="SolutionExplorerMenuCommand.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m30_226 [cluster="System.IO.Path.GetExtension(string)", file="SolutionExplorerMenuCommand.cs", label="Entry System.IO.Path.GetExtension(string)", span="0-0"];
m30_231 [cluster="string.Replace(string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry string.Replace(string, string)", span="0-0"];
m30_132 [cluster="System.Threading.Thread.Sleep(int)", file="SolutionExplorerMenuCommand.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m30_131 [cluster="QuantConnect.Api.Api.CreateCompile(int)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Api.Api.CreateCompile(int)", span="268-268"];
m30_186 [cluster="QuantConnect.VisualStudioPlugin.VsUtils.ShowMessageBox(System.IServiceProvider, string, string)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.VsUtils.ShowMessageBox(System.IServiceProvider, string, string)", span="61-61"];
m30_223 [cluster="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem.SelectedItem()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem.SelectedItem()", span="380-380"];
m30_178 [cluster="QuantConnect.Api.Api.ListProjects()", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.Api.Api.ListProjects()", span="111-111"];
m30_152 [cluster="string.IsNullOrEmpty(string)", file="SolutionExplorerMenuCommand.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m30_177 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="SolutionExplorerMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", span="30-30"];
m30_232 [file="SolutionExplorerMenuCommand.cs", label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", span=""];
m30_233 [file="SolutionExplorerMenuCommand.cs", label=int, span=""];
m30_234 [file="SolutionExplorerMenuCommand.cs", label="System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>", span=""];
m30_235 [file="SolutionExplorerMenuCommand.cs", label=compilationResult, span=""];
m30_236 [file="SolutionExplorerMenuCommand.cs", label=int, span=""];
m30_237 [file="SolutionExplorerMenuCommand.cs", label="System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>", span=""];
m30_238 [file="SolutionExplorerMenuCommand.cs", label=basePath, span=""];
m32_34 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Entry lambda expression", span="100-103"];
m32_25 [cluster="lambda expression", file="ToolMenuCommand.cs", label="loginMenuItem.Enabled = !AuthorizationManager.GetInstance().IsLoggedIn()", span="90-90"];
m32_24 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Entry lambda expression", span="88-91"];
m32_26 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Exit lambda expression", span="88-91"];
m32_35 [cluster="lambda expression", file="ToolMenuCommand.cs", label="logoutMenuItem.Enabled = AuthorizationManager.GetInstance().IsLoggedIn()", span="102-102"];
m32_36 [cluster="lambda expression", file="ToolMenuCommand.cs", label="Exit lambda expression", span="100-103"];
m32_27 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.GetInstance()", span="34-34"];
m32_37 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.Initialize(Package)", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolMenuCommand.Initialize(Package)", span="111-111"];
m32_38 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.Initialize(Package)", file="ToolMenuCommand.cs", label="_instance = new ToolMenuCommand(package)", span="113-113"];
m32_39 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.Initialize(Package)", file="ToolMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolMenuCommand.Initialize(Package)", span="111-111"];
m32_14 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLoginCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLoginCommand(OleMenuCommandService)", span="84-84"];
m32_16 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLoginCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="var menuCommandId = new CommandID(_commandSet, _loginCommandId)", span="86-86"];
m32_19 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLoginCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="commandService.AddCommand(loginMenuItem)", span="93-93"];
m32_17 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLoginCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="var loginMenuItem = new OleMenuCommand(LoginCallback, menuCommandId)", span="87-87"];
m32_18 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLoginCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="loginMenuItem.BeforeQueryStatus += (sender, evt) =>\r\n            {\r\n                loginMenuItem.Enabled = !AuthorizationManager.GetInstance().IsLoggedIn();\r\n            }", span="88-91"];
m32_20 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLoginCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLoginCommand(OleMenuCommandService)", span="84-84"];
m32_21 [cluster="System.ComponentModel.Design.CommandID.CommandID(System.Guid, int)", file="ToolMenuCommand.cs", label="Entry System.ComponentModel.Design.CommandID.CommandID(System.Guid, int)", span="0-0"];
m32_12 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.AuthenticationCommand()", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.AuthenticationCommand()", span="22-22"];
m32_23 [cluster="Unk.AddCommand", file="ToolMenuCommand.cs", label="Entry Unk.AddCommand", span=""];
m32_28 [cluster="QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthorizationManager.IsLoggedIn()", span="58-58"];
m32_47 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.Logout(System.IServiceProvider)", span="86-86"];
m32_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ToolMenuCommand.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m32_0 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", span="66-66"];
m32_1 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", file="ToolMenuCommand.cs", label="package == null", span="68-68"];
m32_2 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", file="ToolMenuCommand.cs", label="throw new ArgumentNullException(nameof(package));", span="70-70"];
m32_3 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", file="ToolMenuCommand.cs", label="_package = package as QuantConnectPackage", span="73-73"];
m32_4 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", file="ToolMenuCommand.cs", label="_authenticationCommand = new AuthenticationCommand()", span="74-74"];
m32_5 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", file="ToolMenuCommand.cs", label="var commandService = _serviceProvider.GetService(typeof(IMenuCommandService)) as OleMenuCommandService", span="76-76"];
m32_6 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", file="ToolMenuCommand.cs", label="commandService != null", span="77-77"];
m32_7 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", file="ToolMenuCommand.cs", label="RegisterLoginCommand(commandService)", span="79-79"];
m32_8 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", file="ToolMenuCommand.cs", label="RegisterLogoutCommand(commandService)", span="80-80"];
m32_9 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", file="ToolMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolMenuCommand.ToolMenuCommand(Package)", span="66-66"];
m32_40 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.LoginCallback(object, System.EventArgs)", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolMenuCommand.LoginCallback(object, System.EventArgs)", span="121-121"];
m32_41 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.LoginCallback(object, System.EventArgs)", color=green, community=0, file="ToolMenuCommand.cs", label="0: _authenticationCommand.Login(_serviceProvider, true)", span="123-123"];
m32_42 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.LoginCallback(object, System.EventArgs)", file="ToolMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolMenuCommand.LoginCallback(object, System.EventArgs)", span="121-121"];
m32_43 [cluster="QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.AuthenticationCommand.Login(System.IServiceProvider, bool)", span="30-30"];
m32_22 [cluster="OleMenuCommand.cstr", file="ToolMenuCommand.cs", label="Entry OleMenuCommand.cstr", span=""];
m32_44 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.LogoutCallback(object, System.EventArgs)", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolMenuCommand.LogoutCallback(object, System.EventArgs)", span="131-131"];
m32_45 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.LogoutCallback(object, System.EventArgs)", file="ToolMenuCommand.cs", label="_authenticationCommand.Logout(_serviceProvider)", span="133-133"];
m32_46 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.LogoutCallback(object, System.EventArgs)", file="ToolMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolMenuCommand.LogoutCallback(object, System.EventArgs)", span="131-131"];
m32_11 [cluster="Unk.nameof", file="ToolMenuCommand.cs", label="Entry Unk.nameof", span=""];
m32_15 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLogoutCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="Entry QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLogoutCommand(OleMenuCommandService)", span="96-96"];
m32_29 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLogoutCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="var menuCommandId = new CommandID(_commandSet, _logoutCommandId)", span="98-98"];
m32_32 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLogoutCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="commandService.AddCommand(logoutMenuItem)", span="104-104"];
m32_30 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLogoutCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="var logoutMenuItem = new OleMenuCommand(LogoutCallback, menuCommandId)", span="99-99"];
m32_31 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLogoutCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="logoutMenuItem.BeforeQueryStatus += (sender, evt) =>\r\n            {\r\n                logoutMenuItem.Enabled = AuthorizationManager.GetInstance().IsLoggedIn();\r\n            }", span="100-103"];
m32_33 [cluster="QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLogoutCommand(OleMenuCommandService)", file="ToolMenuCommand.cs", label="Exit QuantConnect.VisualStudioPlugin.ToolMenuCommand.RegisterLogoutCommand(OleMenuCommandService)", span="96-96"];
m32_13 [cluster="System.IServiceProvider.GetService(System.Type)", file="ToolMenuCommand.cs", label="Entry System.IServiceProvider.GetService(System.Type)", span="0-0"];
m32_48 [file="ToolMenuCommand.cs", label="QuantConnect.VisualStudioPlugin.ToolMenuCommand", span=""];
m32_49 [file="ToolMenuCommand.cs", label=loginMenuItem, span=""];
m32_50 [file="ToolMenuCommand.cs", label=logoutMenuItem, span=""];
m36_43 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="new DateTime(x.Year, x.Month, x.Day, x.Hour, 0, 0)", span="85-85"];
m36_23 [cluster="Unk.ToList", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.ToList", span=""];
m36_19 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", span="57-57"];
m36_20 [cluster="Unk.Where", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.Where", span=""];
m36_50 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="x.AddMinutes(_rand.NextDouble() * _assignmentScanPeriod.TotalMinutes)", span="87-87"];
m36_31 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_symbolData[added.Symbol] = new SymbolData(algorithm, added)", span="109-109"];
m36_69 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit lambda expression", span="139-140"];
m36_74 [cluster="lambda expression", color=green, community=0, file="VolumeWeightedAveragePriceExecutionModel.cs", label="0: deepITM(x.Key)", span="144-144"];
m36_39 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry lambda expression", span="67-67"];
m36_89 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var orderFee1 = option.FeeModel.GetOrderFee(option, marketOrder1)", span="175-175"];
m36_96 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return altPnL - basePnL;", span="192-192"];
m36_101 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m36_97 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", span="153-153"];
m36_98 [cluster="QuantConnect.Securities.Option.Option.GetExerciseQuantity(int)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Securities.Option.Option.GetExerciseQuantity(int)", span="155-155"];
m36_99 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47"];
m36_100 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="526-526"];
m36_102 [cluster="QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Orders.OptionExerciseOrder.OptionExerciseOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="41-41"];
m36_103 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", span=""];
m36_104 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m36_106 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label=deepITM, span=""];
m36_105 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Interfaces.IAlgorithm", span=""];
m36_107 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label=backtestingBrokerage, span=""];
m36_108 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return false;", span="277-277"];
m36_109 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.TryGetVolumeAndAveragePrice(QuantConnect.Data.BaseData, out decimal, out decimal)", span="256-256"];
m36_76 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="decimal volume, averagePrice", span="214-214"];
m36_21 [cluster="Unk.Select", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.Select", span=""];
m36_51 [cluster="lambda expression", color=red, community=0, file="VolumeWeightedAveragePriceExecutionModel.cs", label="0: Exit lambda expression", span="87-87"];
m36_52 [cluster="System.Random.NextDouble()", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Random.NextDouble()", span="0-0"];
m36_53 [cluster="System.DateTime.AddMinutes(double)", color=red, community=2, file="VolumeWeightedAveragePriceExecutionModel.cs", label="0: Entry System.DateTime.AddMinutes(double)", span="0-0"];
m36_56 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", color=red, community=2, file="VolumeWeightedAveragePriceExecutionModel.cs", label="0: return;", span="121-121"];
m36_54 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", color=red, community=0, file="VolumeWeightedAveragePriceExecutionModel.cs", label="0: Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="119-119"];
m36_57 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", color=red, community=0, file="VolumeWeightedAveragePriceExecutionModel.cs", label="0: var backtestingBrokerage = (BacktestingBrokerage)brokerage", span="123-123"];
m36_55 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="!IsReadyToSimulate(algorithm)", span="121-121"];
m36_59 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", color=green, community=0, file="VolumeWeightedAveragePriceExecutionModel.cs", label="0: algorithm.Securities\r\n                // we take only options that expire soon\r\n                .Where(x => x.Key.ID.SecurityType == SecurityType.Option &&\r\n                            x.Key.ID.Date - algorithm.UtcTime <= _priorExpiration)\r\n                // we look into short positions only (short for user means long for us)\r\n                .Where(x => x.Value.Holdings.IsShort)\r\n                // we take only deep ITM strikes\r\n                .Where(x => deepITM(x.Key))\r\n                // we estimate P/L\r\n                .Where(x => EstimateArbitragePnL((Option)x.Value, (OptionHolding)x.Value.Holdings, algorithm.Securities[x.Value.Symbol.Underlying]) > 0.0m)\r\n                .ToList()\r\n                // we exercise options with positive expected P/L (over basic sale of option)\r\n                .ForEach(x => backtestingBrokerage.ActivateOptionAssignment((Option)x.Value, (int)((OptionHolding)x.Value.Holdings).AbsoluteQuantity))", span="137-149"];
m36_58 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Func<Symbol, bool> deepITM = symbol =>\r\n            {\r\n                var undelyingPrice = algorithm.Securities[symbol.Underlying].Close;\r\n\r\n                var result =\r\n                    symbol.ID.OptionRight == OptionRight.Call ?\r\n                        (undelyingPrice - symbol.ID.StrikePrice) / undelyingPrice > _deepITM :\r\n                        (symbol.ID.StrikePrice - undelyingPrice) / undelyingPrice > _deepITM;\r\n\r\n                return result;\r\n            }", span="125-135"];
m36_60 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.SimulateMarketConditions(QuantConnect.Interfaces.IBrokerage, QuantConnect.Interfaces.IAlgorithm)", span="119-119"];
m36_24 [cluster="System.Math.Min(decimal, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Math.Min(decimal, decimal)", span="0-0"];
m36_42 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry lambda expression", span="85-85"];
m36_94 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var undelyingOrderFee2 = underlying.FeeModel.GetOrderFee(underlying, undelyingMarketOrder2)", span="184-184"];
m36_95 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var altPnL = (underlyingPrice - option.StrikePrice) * underlyingQuantity * underlying.QuoteCurrency.ConversionRate * option.ContractUnitOfTrade\r\n                        - undelyingOrderFee2 \r\n                        - holding.AveragePrice * holding.AbsoluteQuantity * option.SymbolProperties.ContractMultiplier * option.QuoteCurrency.ConversionRate\r\n                        - optionOrderFee2", span="187-190"];
m36_27 [cluster="Unk.Add", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.Add", span=""];
m36_0 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", span="57-57"];
m36_1 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_lastUpdate == DateTime.MinValue ||\r\n                algorithm.UtcTime - _lastUpdate > _securitiesRescanPeriod", span="59-60"];
m36_4 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var scans = new List<DateTime>()", span="73-73"];
m36_13 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="algorithm.UtcTime >= _assignmentScans.Peek()", span="98-98"];
m36_14 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_assignmentScans.Count > 0 && \r\n                            algorithm.UtcTime >= _assignmentScans.Peek()", span="100-101"];
m36_2 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var expirations = algorithm.Securities.Keys\r\n                            .Where(x => x.ID.SecurityType == SecurityType.Option &&\r\n                                        x.ID.Date > algorithm.UtcTime &&\r\n                                        x.ID.Date - algorithm.UtcTime <= _securitiesRescanPeriod)\r\n                            .Select(x => x.ID.Date)\r\n                            .OrderBy(x => x)\r\n                            .ToList()", span="62-68"];
m36_3 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var scansCount = _priorExpiration.TotalMinutes / _assignmentScanPeriod.TotalMinutes", span="70-70"];
m36_16 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return true;", span="106-106"];
m36_6 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var startDate = expirationDate - _priorExpiration", span="77-77"];
m36_5 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label=expirations, span="75-75"];
m36_8 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="scans.Add(startDate.AddMinutes(count * _assignmentScanPeriod.TotalMinutes))", span="81-81"];
m36_10 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_assignmentScans = new Queue<DateTime>(randomizedScans)", span="89-89"];
m36_7 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Enumerable.Range(0, (int)scansCount)", span="79-79"];
m36_9 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var randomizedScans = scans\r\n                                    .DistinctBy(x => new DateTime(x.Year, x.Month, x.Day, x.Hour, 0, 0)) // DistinctBy hour \r\n                                    .OrderBy(x => x)\r\n                                    .Select(x => x.AddMinutes(_rand.NextDouble() * _assignmentScanPeriod.TotalMinutes))", span="84-87"];
m36_11 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_lastUpdate = algorithm.UtcTime", span="91-91"];
m36_12 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_assignmentScans.Count > 0", span="94-94"];
m36_15 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_assignmentScans.Dequeue()", span="103-103"];
m36_17 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return false;", span="109-109"];
m36_62 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Consolidator = algorithm.ResolveConsolidator(security.Symbol, security.Resolution)", span="178-178"];
m36_48 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit lambda expression", span="86-86"];
m36_47 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label=x, span="86-86"];
m36_49 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry lambda expression", span="87-87"];
m36_71 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="x.Value.Holdings.IsShort", span="142-142"];
m36_72 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit lambda expression", span="142-142"];
m36_73 [cluster="lambda expression", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry lambda expression", span="144-144"];
m36_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1464-1464"];
m36_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1431-1431"];
m36_77 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="!TryGetVolumeAndAveragePrice(input, out volume, out averagePrice)", span="215-215"];
m36_81 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfPriceTimesVolume = 0m", span="224-224"];
m36_34 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_symbolData.TryGetValue(removed.Symbol, out data)", span="117-117"];
m36_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1270-1270"];
m36_78 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return new IndicatorResult(0, IndicatorStatus.InvalidInput);", span="217-217"];
m36_63 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var name = algorithm.CreateIndicatorName(security.Symbol, ''VWAP'', security.Resolution)", span="179-179"];
m36_82 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_lastDate = input.EndTime.Date", span="225-225"];
m36_64 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="VWAP = new IntradayVwap(name)", span="180-180"];
m36_79 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_lastDate != input.EndTime.Date", span="221-221"];
m36_83 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_sumOfVolume += volume", span="229-229"];
m36_33 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="SymbolData data", span="116-116"];
m36_36 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="_symbolData.Remove(removed.Symbol)", span="121-121"];
m36_35 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="IsSafeToRemove(algorithm, removed.Symbol)", span="119-119"];
m36_46 [cluster="Unk.Any", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.Any", span=""];
m36_65 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="algorithm.RegisterIndicator(security.Symbol, VWAP, Consolidator, bd => (BaseData) bd)", span="182-182"];
m36_38 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="103-103"];
m36_37 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="algorithm.SubscriptionManager.RemoveConsolidator(removed.Symbol, data.Consolidator)", span="122-122"];
m36_41 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", span="131-131"];
m36_40 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", span="175-175"];
m36_44 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IsSafeToRemove(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Symbol)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return !algorithm.UniverseManager.Any(kvp => kvp.Value.ContainsMember(symbol));", span="134-134"];
m36_66 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Exit QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", span="175-175"];
m36_61 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData.SymbolData(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Security = security", span="177-177"];
m36_25 [cluster="System.Linq.Enumerable.Range(int, int)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m36_26 [cluster="Unk.AddMinutes", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry Unk.AddMinutes", span=""];
m36_91 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var optionExerciseOrder2 = new OptionExerciseOrder(option.Symbol, (int)holding.AbsoluteQuantity, option.LocalTime.ConvertToUtc(option.Exchange.TimeZone))", span="180-180"];
m36_92 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var optionOrderFee2 = option.FeeModel.GetOrderFee(option, optionExerciseOrder2)", span="181-181"];
m36_93 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var undelyingMarketOrder2 = new MarketOrder(underlying.Symbol, -underlyingQuantity, underlying.LocalTime.ConvertToUtc(underlying.Exchange.TimeZone))", span="183-183"];
m36_32 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="changes.RemovedSecurities", span="113-113"];
m36_22 [cluster="QuantConnect.Algorithm.Framework.Execution.OrderSizing.PercentVolume(QuantConnect.Securities.Security, decimal)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.OrderSizing.PercentVolume(QuantConnect.Securities.Security, decimal)", span="33-33"];
m36_75 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap.ValidateAndComputeNextValue(QuantConnect.Data.BaseData)", span="212-212"];
m36_86 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var underlyingPrice = option.Symbol.ID.OptionRight == OptionRight.Call ?\r\n                                   underlying.BidPrice :\r\n                                    underlying.AskPrice", span="165-167"];
m36_84 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.ActivateOptionAssignment(QuantConnect.Securities.Option.Option, int)", span="374-374"];
m36_80 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", span="153-153"];
m36_85 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var optionPrice = option.BidPrice", span="161-161"];
m36_87 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var underlyingQuantity = option.Symbol.ID.OptionRight == OptionRight.Call ?\r\n                                        option.GetExerciseQuantity((int)holding.AbsoluteQuantity) :\r\n                                        -option.GetExerciseQuantity((int)holding.AbsoluteQuantity)", span="169-171"];
m36_88 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.EstimateArbitragePnL(QuantConnect.Securities.Option.Option, QuantConnect.Securities.Option.OptionHolding, QuantConnect.Securities.Security)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="var marketOrder1 = new MarketOrder(option.Symbol, -holding.Quantity, option.LocalTime.ConvertToUtc(option.Exchange.TimeZone))", span="174-174"];
m36_28 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="103-103"];
m36_30 [cluster="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.OnSecuritiesChanged(QuantConnect.Algorithm.Framework.QCAlgorithmFramework, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="!_symbolData.ContainsKey(added.Symbol)", span="107-107"];
m36_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m36_45 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m36_90 [cluster="QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="Entry QuantConnect.Indicators.IndicatorResult.IndicatorResult(decimal, QuantConnect.Indicators.IndicatorStatus)", span="45-45"];
m36_18 [cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.IsReadyToSimulate(QuantConnect.Interfaces.IAlgorithm)", file="VolumeWeightedAveragePriceExecutionModel.cs", label="return false;", span="112-112"];
m36_110 [file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", span=""];
m36_111 [file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Symbol", span=""];
m36_112 [file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", span=""];
m36_113 [file="VolumeWeightedAveragePriceExecutionModel.cs", label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", span=""];
m37_41 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="175-175"];
m37_42 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History<T>(symbols, Time - span, Time, resolution).Memoize();", span="178-178"];
m37_43 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="175-175"];
m37_267 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="VsUtils.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="139-139"];
m37_50 [cluster="Unk.Where", file="VsUtils.cs", label="Entry Unk.Where", span=""];
m37_198 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", file="VsUtils.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", span="105-105"];
m37_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
m37_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="VsUtils.cs", label="_warmupBarCount = null", span="53-53"];
m37_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="VsUtils.cs", label="_warmupTimeSpan = timeSpan", span="54-54"];
m37_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
m37_200 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="VsUtils.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="108-108"];
m37_273 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="VsUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m37_203 [cluster="System.Collections.Generic.List<T>.List()", file="VsUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m37_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
m37_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="VsUtils.cs", label="SetWarmup(barCount)", span="88-88"];
m37_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="86-86"];
m37_196 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="VsUtils.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m37_33 [cluster="System.Collections.Generic.IEnumerable<T>.Memoize<T>()", file="VsUtils.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Memoize<T>()", span="218-218"];
m37_134 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="423-423"];
m37_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="VsUtils.cs", label="return History(new[] {request}).Memoize();", span="425-425"];
m37_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="423-423"];
m37_199 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="VsUtils.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m37_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1663-1663"];
m37_193 [cluster="QuantConnect.Symbol.IsCanonical()", file="VsUtils.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m37_202 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="VsUtils.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="751-751"];
m37_275 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="609-609"];
m37_59 [cluster="lambda expression", file="VsUtils.cs", label="Resolution? res = resolution ?? security.Resolution", span="200-200"];
m37_60 [cluster="lambda expression", file="VsUtils.cs", label="var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone)", span="201-201"];
m37_61 [cluster="lambda expression", file="VsUtils.cs", label="return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);", span="202-202"];
m37_54 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="194-203"];
m37_69 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="205-205"];
m37_55 [cluster="lambda expression", file="VsUtils.cs", label="var security = Securities[x]", span="196-196"];
m37_56 [cluster="lambda expression", file="VsUtils.cs", label="var config = GetMatchingSubscription(security, typeof(T))", span="197-197"];
m37_57 [cluster="lambda expression", file="VsUtils.cs", label="config == null", span="198-198"];
m37_58 [cluster="lambda expression", file="VsUtils.cs", label="return null;", span="198-198"];
m37_62 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="194-203"];
m37_70 [cluster="lambda expression", file="VsUtils.cs", label="x != null", span="205-205"];
m37_71 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="205-205"];
m37_80 [cluster="lambda expression", file="VsUtils.cs", label="return CreateHistoryRequest(security, config, start, end, resolution);", span="226-226"];
m37_75 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="220-227"];
m37_82 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="229-229"];
m37_76 [cluster="lambda expression", file="VsUtils.cs", label="var security = Securities[x]", span="222-222"];
m37_77 [cluster="lambda expression", file="VsUtils.cs", label="var config = GetMatchingSubscription(security, typeof(T))", span="223-223"];
m37_78 [cluster="lambda expression", file="VsUtils.cs", label="config == null", span="224-224"];
m37_79 [cluster="lambda expression", file="VsUtils.cs", label="return null;", span="224-224"];
m37_81 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="220-227"];
m37_83 [cluster="lambda expression", file="VsUtils.cs", label="x != null", span="229-229"];
m37_84 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="229-229"];
m37_120 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="290-290"];
m37_121 [cluster="lambda expression", file="VsUtils.cs", label="x.Type.Name", span="290-290"];
m37_122 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="290-290"];
m37_136 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="316-316"];
m37_137 [cluster="lambda expression", file="VsUtils.cs", label="x.Type.Name", span="316-316"];
m37_138 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="316-316"];
m37_236 [cluster="lambda expression", file="VsUtils.cs", label="var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution)", span="552-552"];
m37_237 [cluster="lambda expression", file="VsUtils.cs", label="Resolution? res = resolution ?? security.Resolution", span="555-555"];
m37_238 [cluster="lambda expression", file="VsUtils.cs", label="fillForward.HasValue", span="556-556"];
m37_239 [cluster="lambda expression", file="VsUtils.cs", label="request.FillForwardResolution = fillForward.Value ? res : null", span="556-556"];
m37_240 [cluster="lambda expression", file="VsUtils.cs", label="extendedMarket.HasValue", span="557-557"];
m37_241 [cluster="lambda expression", file="VsUtils.cs", label="request.IncludeExtendedMarketHours = extendedMarket.Value", span="557-557"];
m37_229 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="545-545"];
m37_232 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="545-563"];
m37_230 [cluster="lambda expression", file="VsUtils.cs", label="!x.IsCanonical()", span="545-545"];
m37_231 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="545-545"];
m37_233 [cluster="lambda expression", file="VsUtils.cs", label="var requests = new List<HistoryRequest>()", span="547-547"];
m37_234 [cluster="lambda expression", file="VsUtils.cs", label="var security = Securities[x]", span="549-549"];
m37_242 [cluster="lambda expression", file="VsUtils.cs", label="requests.Add(request)", span="559-559"];
m37_243 [cluster="lambda expression", file="VsUtils.cs", label="return requests;", span="562-562"];
m37_235 [cluster="lambda expression", file="VsUtils.cs", label="GetMatchingSubscriptions(security, typeof(BaseData))", span="550-550"];
m37_244 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="545-563"];
m37_254 [cluster="lambda expression", file="VsUtils.cs", label="Resolution? res = resolution ?? security.Resolution", span="574-574"];
m37_255 [cluster="lambda expression", file="VsUtils.cs", label="var start = GetStartTimeAlgoTz(x, periods, res)", span="575-575"];
m37_257 [cluster="lambda expression", file="VsUtils.cs", label="return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));", span="578-579"];
m37_260 [cluster="lambda expression", file="VsUtils.cs", label="CreateHistoryRequest(security, config, start, end, resolution)", span="579-579"];
m37_249 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="571-571"];
m37_252 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="571-580"];
m37_250 [cluster="lambda expression", file="VsUtils.cs", label="!x.IsCanonical()", span="571-571"];
m37_251 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="571-571"];
m37_253 [cluster="lambda expression", file="VsUtils.cs", label="var security = Securities[x]", span="573-573"];
m37_256 [cluster="lambda expression", file="VsUtils.cs", label="var end = Time.RoundDown(res.Value.ToTimeSpan())", span="576-576"];
m37_258 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="571-580"];
m37_259 [cluster="lambda expression", file="VsUtils.cs", label="Entry lambda expression", span="579-579"];
m37_261 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="579-579"];
m37_276 [cluster="lambda expression", file="VsUtils.cs", label="s.Resolution", span="609-609"];
m37_277 [cluster="lambda expression", file="VsUtils.cs", label="Exit lambda expression", span="609-609"];
m37_51 [cluster="Unk.History", file="VsUtils.cs", label="Entry Unk.History", span=""];
m37_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="600-600"];
m37_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="VsUtils.cs", label="return GetMatchingSubscriptions(security, type).FirstOrDefault();", span="603-603"];
m37_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="600-600"];
m37_119 [cluster="QuantConnect.Symbol.ToString()", file="VsUtils.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m37_201 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="VsUtils.cs", label="Entry QuantConnect.Securities.Security.IsCustomData()", span="640-640"];
m37_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="408-408"];
m37_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var security = Securities[symbol]", span="410-410"];
m37_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="411-411"];
m37_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="414-414"];
m37_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="415-415"];
m37_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="413-413"];
m37_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="408-408"];
m37_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="278-278"];
m37_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="resolution == Resolution.Tick", span="281-281"];
m37_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="symbol == QuantConnect.Symbol.Empty", span="282-282"];
m37_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var security = Securities[symbol]", span="284-284"];
m37_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="291-291"];
m37_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="294-294"];
m37_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History<T>(symbol, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Memoize();", span="295-295"];
m37_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="281-281"];
m37_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="282-282"];
m37_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var requestedType = typeof(T)", span="286-286"];
m37_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="287-287"];
m37_111 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="290-290"];
m37_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="config == null", span="288-288"];
m37_115 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="278-278"];
m37_194 [cluster="System.Math.Max(int, int)", file="VsUtils.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m37_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m37_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="VsUtils.cs", label="IsWarmingUp = false", span="96-96"];
m37_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="94-94"];
m37_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
m37_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="VsUtils.cs", label="_warmupTimeSpan = null", span="75-75"];
m37_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="VsUtils.cs", label="_warmupBarCount = barCount", span="76-76"];
m37_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(int)", span="73-73"];
m37_101 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", file="VsUtils.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", span="55-55"];
m37_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="147-147"];
m37_35 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History(Securities.Keys, periods, resolution).Memoize();", span="149-149"];
m37_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="147-147"];
m37_67 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="VsUtils.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m37_118 [cluster="ArgumentException.cstr", file="VsUtils.cs", label="Entry ArgumentException.cstr", span=""];
m37_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="503-503"];
m37_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="505-505"];
m37_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="510-510"];
m37_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="511-511"];
m37_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="508-508"];
m37_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="503-503"];
m37_52 [cluster="Unk.>", file="VsUtils.cs", label="Entry Unk.>", span=""];
m37_270 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="VsUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m37_99 [cluster="System.ArgumentException.ArgumentException(string)", file="VsUtils.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m37_274 [cluster="System.Type.IsAssignableFrom(System.Type)", file="VsUtils.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m37_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="370-370"];
m37_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History(symbols, Time - span, Time, resolution).Memoize();", span="372-372"];
m37_153 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="370-370"];
m37_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1638-1638"];
m37_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="606-606"];
m37_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="VsUtils.cs", label="return from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                where type.IsAssignableFrom(sub.Type)\r\n                select sub;", span="609-611"];
m37_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Securities.Security, System.Type)", span="606-606"];
m37_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="191-191"];
m37_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, resolution).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(security, config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), resolution);\r\n            })", span="194-203"];
m37_47 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="205-205"];
m37_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="191-191"];
m37_135 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="VsUtils.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
m37_29 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="134-134"];
m37_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History(Securities.Keys, Time - span, Time, resolution).Memoize();", span="136-136"];
m37_31 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="134-134"];
m37_117 [cluster="Unk.FirstOrDefault", file="VsUtils.cs", label="Entry Unk.FirstOrDefault", span=""];
m37_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="254-254"];
m37_90 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="symbol == QuantConnect.Symbol.Empty", span="256-256"];
m37_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var security = Securities[symbol]", span="257-257"];
m37_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var start = GetStartTimeAlgoTz(symbol, periods, resolution)", span="258-258"];
m37_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="var securityType = symbol.ID.SecurityType", span="260-260"];
m37_97 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History(new[] {symbol}, start, Time.RoundDown((resolution ?? security.Resolution).ToTimeSpan()), resolution).Get(symbol).Memoize();", span="266-266"];
m37_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="256-256"];
m37_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="261-261"];
m37_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Error(''Calling this method on a Forex or CFD or Crypto security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="263-263"];
m37_98 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="254-254"];
m37_139 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="331-331"];
m37_140 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="var securityType = symbol.ID.SecurityType", span="333-333"];
m37_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History(new[] {symbol}, span, resolution).Get(symbol).Memoize();", span="339-339"];
m37_141 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="334-334"];
m37_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Error(''Calling this method on a Forex or CFD or crypto security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="336-336"];
m37_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="331-331"];
m37_204 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="VsUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m37_168 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="VsUtils.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="585-585"];
m37_28 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="VsUtils.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m37_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="350-350"];
m37_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="var securityType = symbol.ID.SecurityType", span="352-352"];
m37_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History(new[] {symbol}, start, end, resolution).Get(symbol).Memoize();", span="358-358"];
m37_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd || securityType == SecurityType.Crypto", span="353-353"];
m37_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="Error(''Calling this method on a Forex or CFD or cyrpto security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="355-355"];
m37_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="350-350"];
m37_38 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="160-160"];
m37_39 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History<T>(Securities.Keys, span, resolution).Memoize();", span="163-163"];
m37_40 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="160-160"];
m37_85 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="240-240"];
m37_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="243-243"];
m37_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="240-240"];
m37_205 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="VsUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m37_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="400-400"];
m37_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="VsUtils.cs", label="return History(CreateDateRangeHistoryRequests(symbols, start, end, resolution, fillForward, extendedMarket)).Memoize();", span="402-402"];
m37_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="400-400"];
m37_27 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="543-543"];
m37_226 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="VsUtils.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var requests = new List<HistoryRequest>();\r\n\r\n                var security = Securities[x];\r\n                foreach (var config in GetMatchingSubscriptions(security, typeof(BaseData)))\r\n                {\r\n                    var request = CreateHistoryRequest(security, config, startAlgoTz, endAlgoTz, resolution);\r\n\r\n                    // apply overrides\r\n                    Resolution? res = resolution ?? security.Resolution;\r\n                    if (fillForward.HasValue) request.FillForwardResolution = fillForward.Value ? res : null;\r\n                    if (extendedMarket.HasValue) request.IncludeExtendedMarketHours = extendedMarket.Value;\r\n\r\n                    requests.Add(request);\r\n                }\r\n\r\n                return requests;\r\n            });", span="545-563"];
m37_227 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="543-543"];
m37_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="110-110"];
m37_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="VsUtils.cs", label="_warmupBarCount.HasValue", span="112-112"];
m37_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="VsUtils.cs", label="return CreateBarCountHistoryRequests(Securities.Keys, _warmupBarCount.Value);", span="114-114"];
m37_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="VsUtils.cs", label="_warmupTimeSpan.HasValue", span="116-116"];
m37_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="VsUtils.cs", label="var end = UtcTime.ConvertFromUtc(TimeZone)", span="118-118"];
m37_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="VsUtils.cs", label="return Enumerable.Empty<HistoryRequest>();", span="123-123"];
m37_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="VsUtils.cs", label="return CreateDateRangeHistoryRequests(Securities.Keys, end - _warmupTimeSpan.Value, end);", span="119-119"];
m37_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetWarmupHistoryRequests()", span="110-110"];
m37_225 [cluster="QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="53-53"];
m37_65 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="VsUtils.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="616-616"];
m37_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="433-433"];
m37_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="VsUtils.cs", label="return History(requests, TimeZone).Memoize();", span="435-435"];
m37_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="433-433"];
m37_37 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="384-384"];
m37_154 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="resolution == Resolution.Tick", span="386-386"];
m37_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History(CreateBarCountHistoryRequests(symbols, periods, resolution)).Memoize();", span="387-387"];
m37_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="386-386"];
m37_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="384-384"];
m37_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="514-514"];
m37_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="var sentMessage = false", span="516-516"];
m37_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="var reqs = requests.ToList()", span="517-517"];
m37_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="return ((IAlgorithm) this).HistoryProvider.GetHistory(reqs, timeZone);", span="537-537"];
m37_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="!sentMessage", span="528-528"];
m37_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label=reqs, span="518-518"];
m37_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="request.EndTimeUtc > UtcTime", span="521-521"];
m37_216 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="request.EndTimeUtc = UtcTime", span="523-523"];
m37_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="request.StartTimeUtc > request.EndTimeUtc", span="524-524"];
m37_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="request.StartTimeUtc = request.EndTimeUtc", span="526-526"];
m37_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="sentMessage = true", span="530-530"];
m37_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="Debug(''Request for future history modified to end now.'')", span="531-531"];
m37_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="514-514"];
m37_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="444-444"];
m37_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="security.Symbol.IsCanonical() || HistoryProvider == null", span="446-446"];
m37_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="452-452"];
m37_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="454-454"];
m37_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="security.Type == SecurityType.Option || security.Type == SecurityType.Future", span="459-459"];
m37_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="var subscriptionDataConfig = GetMatchingSubscription(security, dataType)", span="465-465"];
m37_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="var request = new HistoryRequest(\r\n                startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                subscriptionDataConfig == null ? typeof(TradeBar) : subscriptionDataConfig.Type,\r\n                security.Symbol,\r\n                resolution,\r\n                security.Exchange.Hours,\r\n                MarketHoursDatabase.FromDataFolder().GetDataTimeZone(security.Symbol.ID.Market, security.Symbol, security.Symbol.SecurityType),\r\n                resolution,\r\n                security.IsExtendedMarketHours,\r\n                security.IsCustomData(),\r\n                security.DataNormalizationMode,\r\n                subscriptionDataConfig == null ? LeanData.GetCommonTickTypeForCommonDataTypes(typeof(TradeBar), security.Type) : subscriptionDataConfig.TickType\r\n            )", span="474-487"];
m37_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="return null;", span="448-448"];
m37_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="455-455"];
m37_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="dataType = LeanData.GetDataType(resolution, TickType.Quote)", span="461-461"];
m37_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="dataType = LeanData.GetDataType(resolution, subscriptionDataConfig.TickType)", span="470-470"];
m37_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="subscriptionDataConfig = new SubscriptionDataConfig(subscriptionDataConfig, dataType, resolution: resolution)", span="471-471"];
m37_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="var dataType = typeof(BaseData)", span="458-458"];
m37_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="subscriptionDataConfig != null && subscriptionDataConfig.Resolution == Resolution.Tick", span="468-468"];
m37_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="var history = History(new List<HistoryRequest> { request }).ToList()", span="489-489"];
m37_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="history.Any() && history.First().Values.Any()", span="491-491"];
m37_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="return history.First().Values.First();", span="493-493"];
m37_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="return null;", span="496-496"];
m37_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="444-444"];
m37_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="569-569"];
m37_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var security = Securities[x];\r\n                Resolution? res = resolution ?? security.Resolution;\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var end = Time.RoundDown(res.Value.ToTimeSpan());\r\n\r\n                return GetMatchingSubscriptions(security, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(security, config, start, end, resolution));\r\n            });", span="571-580"];
m37_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="569-569"];
m37_246 [cluster="System.Collections.Generic.List<T>.Add(T)", file="VsUtils.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m37_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
m37_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="VsUtils.cs", label="SetWarmup(timeSpan)", span="63-63"];
m37_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="61-61"];
m37_53 [cluster="Unk.Memoize", file="VsUtils.cs", label="Entry Unk.Memoize", span=""];
m37_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="306-306"];
m37_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="symbol == QuantConnect.Symbol.Empty", span="309-309"];
m37_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="var security = Securities[symbol]", span="310-310"];
m37_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="317-317"];
m37_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="var request = CreateHistoryRequest(security, config, start, end, resolution)", span="320-320"];
m37_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History(request).Get<T>(symbol).Memoize();", span="321-321"];
m37_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="309-309"];
m37_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="var requestedType = typeof(T)", span="312-312"];
m37_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="var config = GetMatchingSubscription(security, requestedType)", span="313-313"];
m37_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="var actualType = security.Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="316-316"];
m37_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="config == null", span="314-314"];
m37_133 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="306-306"];
m37_228 [cluster="Unk.SelectMany", file="VsUtils.cs", label="Entry Unk.SelectMany", span=""];
m37_44 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="217-217"];
m37_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var security = Securities[x];\r\n                var config = GetMatchingSubscription(security, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                return CreateHistoryRequest(security, config, start, end, resolution);\r\n            })", span="220-227"];
m37_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="return History(requests.Where(x => x != null)).Get<T>().Memoize();", span="229-229"];
m37_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="217-217"];
m37_197 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="VsUtils.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m37_167 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="VsUtils.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="427-427"];
m37_66 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="VsUtils.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="722-722"];
m37_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="583-583"];
m37_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="resolution = resolution ?? security.Resolution", span="585-585"];
m37_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="var dataType = subscription.IsCustomData ? subscription.Type : LeanData.GetDataType(resolution.Value, subscription.TickType)", span="588-588"];
m37_264 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="var request = new HistoryRequest(subscription, security.Exchange.Hours, startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = dataType,\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null\r\n            }", span="590-595"];
m37_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="return request;", span="597-597"];
m37_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="VsUtils.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="583-583"];
m37_49 [cluster="Unk.Select", file="VsUtils.cs", label="Entry Unk.Select", span=""];
m37_206 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="VsUtils.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m37_116 [cluster="Unk.DefaultIfEmpty", file="VsUtils.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m37_26 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="VsUtils.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="604-604"];
m37_278 [file="VsUtils.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m37_279 [file="VsUtils.cs", label="QuantConnect.Resolution?", span=""];
m37_280 [file="VsUtils.cs", label=int, span=""];
m37_281 [file="VsUtils.cs", label="System.DateTime", span=""];
m37_282 [file="VsUtils.cs", label="System.DateTime", span=""];
m37_283 [file="VsUtils.cs", label="QuantConnect.Resolution?", span=""];
m37_284 [file="VsUtils.cs", label="System.DateTime", span=""];
m37_285 [file="VsUtils.cs", label="System.DateTime", span=""];
m37_286 [file="VsUtils.cs", label="QuantConnect.Resolution?", span=""];
m37_287 [file="VsUtils.cs", label="bool?", span=""];
m37_288 [file="VsUtils.cs", label="bool?", span=""];
m37_289 [file="VsUtils.cs", label="QuantConnect.Resolution?", span=""];
m37_290 [file="VsUtils.cs", label=int, span=""];
m37_291 [file="VsUtils.cs", label=security, span=""];
m37_292 [file="VsUtils.cs", label=start, span=""];
m37_293 [file="VsUtils.cs", label=end, span=""];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.IBrokerageModel", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n1 -> n6  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n4 -> n3  [key=0, style=solid];
n4 -> n7  [key=2, style=dotted];
n2 -> n5  [key=0, style=solid];
n5 -> n0  [color=blue, key=0, style=bold];
m1_14 -> m1_23  [color=green, key=3, label="method methodReturn bool Login", style=bold];
m1_14 -> m1_20  [color=darkorchid, key=3, label="method methodReturn bool Login", style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_17  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.Credentials", style=dashed];
m1_19 -> m1_20  [color=green, key=0, style=solid];
m1_16 -> m1_19  [color=green, key=1, label=api, style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_26  [key=2, style=dotted];
m1_16 -> m1_18  [color=darkseagreen4, key=1, label=api, style=dashed];
m1_18 -> m1_19  [color=green, key=0, style=solid];
m1_18 -> m1_23  [color=green, key=0, style=solid];
m1_18 -> m1_21  [key=0, style=solid];
m1_20 -> m1_24  [key=0, style=solid];
m1_23 -> m1_24  [color=green, key=0, style=solid];
m1_22 -> m1_23  [color=green, key=0, style=solid];
m1_22 -> m1_9  [color=green, key=2, style=dotted];
m1_21 -> m1_22  [color=green, key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_25  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_27  [key=2, style=dotted];
m1_17 -> m1_28  [key=2, style=dotted];
m1_24 -> m1_14  [color=blue, key=0, style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_5 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_8  [key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_8 -> m1_3  [color=blue, key=0, style=bold];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_11  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_29  [color=blue, key=0, style=bold];
m1_32 -> m1_19  [color=green, key=1, label="QuantConnect.VisualStudioPlugin.AuthorizationManager", style=dashed];
m1_32 -> m1_4  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.AuthorizationManager", style=dashed];
m1_32 -> m1_7  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.AuthorizationManager", style=dashed];
m1_32 -> m1_12  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.AuthorizationManager", style=dashed];
m1_32 -> m1_30  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.AuthorizationManager", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label="params QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[]", style=dashed];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_1 -> m3_3  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_7 -> m3_10  [color=green, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m3_7 -> m3_13  [color=crimson, key=0, style=bold];
m3_7 -> m3_9  [key=0, style=solid];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_8 -> m3_14  [color=green, key=0, style=solid];
m3_8 -> m3_10  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_8 -> m3_22  [key=2, style=dotted];
m3_8 -> m3_16  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_10 -> m3_8  [color=green, key=0, style=solid];
m3_10 -> m3_11  [color=green, key=0, style=solid];
m3_10 -> m3_16  [color=green, key=2, style=dotted];
m3_10 -> m3_12  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m3_10 -> m3_13  [color=green, key=1, label=insight, style=dashed];
m3_10 -> m3_23  [key=2, style=dotted];
m3_10 -> m3_24  [key=2, style=dotted];
m3_10 -> m3_21  [key=2, style=dotted];
m3_10 -> m3_30  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m3_10 -> m3_14  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m3_10 -> m3_15  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m3_9 -> m3_10  [color=green, key=0, style=solid];
m3_9 -> m3_15  [color=green, key=2, style=dotted];
m3_9 -> m3_12  [color=green, key=1, label=name, style=dashed];
m3_9 -> m3_16  [key=0, style=solid];
m3_13 -> m3_10  [color=green, key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_11 -> m3_12  [color=green, key=0, style=solid];
m3_11 -> m3_13  [color=green, key=0, style=solid];
m3_11 -> m3_17  [color=green, key=2, style=dotted];
m3_11 -> m3_25  [key=2, style=dotted];
m3_11 -> m3_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_12 -> m3_13  [color=green, key=0, style=solid];
m3_12 -> m3_15  [key=0, style=solid];
m3_14 -> m3_7  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_26  [key=2, style=dotted];
m3_14 -> m3_27  [key=2, style=dotted];
m3_23 -> m3_8  [color=green, key=1, label="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel", style=dashed];
m3_23 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel", style=dashed];
m3_23 -> m3_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.CompositeAlphaModel", style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_28  [key=2, style=dotted];
m3_16 -> m3_24  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_32  [key=2, style=dotted];
m3_31 -> m3_29  [color=blue, key=0, style=bold];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_10  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Packets.AlgorithmNodePacket NextJob", style=bold];
m3_2 -> m3_16  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Packets.AlgorithmNodePacket NextJob", style=bold];
m3_2 -> m3_4  [key=0, style=solid];
m3_2 -> m3_6  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_18  [color=darkseagreen4, key=1, label="out string", style=dashed];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_19  [key=2, style=dotted];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_20  [key=2, style=dotted];
m3_5 -> m3_10  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_5 -> m3_16  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_21  [key=2, style=dotted];
m3_6 -> m3_8  [color=darkseagreen4, key=1, label=parametersConfigString, style=dashed];
m3_15 -> m3_18  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_18 -> m3_2  [color=blue, key=0, style=bold];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m3_22 -> m3_0  [color=darkorchid, key=3, label="Field variable QuantConnect.Algorithm.Framework.Alphas.IAlphaModel[] _alphaModels", style=bold];
m3_33 -> m3_34  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_37  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_38  [key=2, style=dotted];
m3_36 -> m3_33  [color=blue, key=0, style=bold];
m3_20 -> m3_19  [key=0, style=solid];
m3_20 -> m3_22  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=0, style=solid];
m3_21 -> m3_18  [color=blue, key=0, style=bold];
m3_39 -> m3_3  [color=darkseagreen4, key=1, label="QuantConnect.Queues.JobQueue", style=dashed];
m3_39 -> m3_9  [color=darkseagreen4, key=1, label="QuantConnect.Queues.JobQueue", style=dashed];
m3_39 -> m3_10  [color=darkseagreen4, key=1, label="QuantConnect.Queues.JobQueue", style=dashed];
m3_39 -> m3_16  [color=darkseagreen4, key=1, label="QuantConnect.Queues.JobQueue", style=dashed];
m3_40 -> m3_30  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_8 -> m4_10  [color=green, key=0, style=solid];
m4_8 -> m4_15  [color=green, key=2, style=dotted];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_6  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m4_3 -> m4_7  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m4_3 -> m4_8  [color=green, key=1, label="QuantConnect.Symbol", style=dashed];
m4_5 -> m4_6  [color=green, key=0, style=solid];
m4_6 -> m4_6  [color=green, key=1, label=entry, style=dashed];
m4_6 -> m4_7  [color=green, key=0, style=solid];
m4_6 -> m4_9  [color=green, key=0, style=solid];
m4_6 -> m4_12  [color=green, key=2, style=dotted];
m4_6 -> m4_10  [color=green, key=3, label="Parameter variable System.TimeSpan timeSpan", style=bold];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_7 -> m4_13  [color=green, key=2, style=dotted];
m4_7 -> m4_14  [color=green, key=2, style=dotted];
m4_7 -> m4_10  [color=green, key=1, label=symbols, style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_3  [color=blue, key=0, style=bold];
m4_18 -> m4_15  [color=blue, key=0, style=bold];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Symbol>", style=dashed];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_19 -> m4_1  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m4_19 -> m4_6  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m4_19 -> m4_7  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m4_19 -> m4_8  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider", style=dashed];
m4_20 -> m4_16  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry", style=dashed];
m4_20 -> m4_17  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.OptionChainCacheEntry", style=dashed];
m9_13 -> m9_14  [key=0, style=solid];
m9_14 -> m9_13  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m9_0 -> m9_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_6  [key=0, style=solid];
m9_1 -> m9_3  [color=darkseagreen4, key=1, label=target, style=dashed];
m9_1 -> m9_5  [color=darkseagreen4, key=1, label=target, style=dashed];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_7  [key=2, style=dotted];
m9_2 -> m9_8  [key=2, style=dotted];
m9_2 -> m9_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_5 -> m9_1  [key=0, style=solid];
m9_5 -> m9_9  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_1  [key=0, style=solid];
m9_6 -> m9_0  [color=blue, key=0, style=bold];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_10  [color=blue, key=0, style=bold];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_2 -> m10_6  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m10_2 -> m10_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.InsightType", style=dashed];
m10_2 -> m10_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.InsightDirection", style=dashed];
m10_2 -> m10_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m10_2 -> m10_10  [color=darkseagreen4, key=1, label="double?", style=dashed];
m10_2 -> m10_11  [color=darkseagreen4, key=1, label="double?", style=dashed];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_13  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_11 -> m10_12  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_14  [key=2, style=dotted];
m10_12 -> m10_2  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [color=blue, key=0, style=bold];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m10_16 -> m10_17  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_18 -> m10_15  [color=blue, key=0, style=bold];
m10_25 -> m10_26  [color=red, key=0, style=solid];
m10_25 -> m10_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m10_25 -> m10_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m10_25 -> m10_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m10_25 -> m10_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m10_25 -> m10_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m10_25 -> m10_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m10_25 -> m10_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Serialization.SerializedInsight", style=dashed];
m10_26 -> m10_27  [color=red, key=0, style=solid];
m10_26 -> m10_15  [color=red, key=2, style=dotted];
m10_26 -> m10_37  [color=red, key=2, style=dotted];
m10_26 -> m10_38  [color=red, key=2, style=dotted];
m10_26 -> m10_39  [color=red, key=2, style=dotted];
m10_26 -> m10_40  [color=red, key=2, style=dotted];
m10_26 -> m10_41  [color=red, key=2, style=dotted];
m10_26 -> m10_28  [color=red, key=1, label=insight, style=dashed];
m10_26 -> m10_29  [color=red, key=1, label=insight, style=dashed];
m10_26 -> m10_30  [color=red, key=1, label=insight, style=dashed];
m10_26 -> m10_32  [color=red, key=1, label=insight, style=dashed];
m10_26 -> m10_34  [color=red, key=1, label=insight, style=dashed];
m10_26 -> m10_35  [color=red, key=1, label=insight, style=dashed];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_31  [key=0, style=solid];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_42  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_42  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_33  [key=0, style=solid];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_42  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_35  [key=0, style=solid];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_42  [key=2, style=dotted];
m10_30 -> m10_35  [key=0, style=solid];
m10_30 -> m10_43  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_36 -> m10_25  [color=blue, key=0, style=bold];
m10_19 -> m10_20  [color=red, key=0, style=solid];
m10_20 -> m10_21  [color=red, key=0, style=solid];
m10_20 -> m10_2  [color=red, key=2, style=dotted];
m10_21 -> m10_19  [color=blue, key=0, style=bold];
m10_44 -> m10_45  [key=0, style=solid];
m10_45 -> m10_46  [key=0, style=solid];
m10_45 -> m10_47  [color=darkseagreen4, key=1, label=str, style=dashed];
m10_45 -> m10_49  [color=darkseagreen4, key=1, label=str, style=dashed];
m10_45 -> m10_50  [color=darkseagreen4, key=1, label=str, style=dashed];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_48  [key=0, style=solid];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_47  [color=darkseagreen4, key=1, label=str, style=dashed];
m10_47 -> m10_49  [color=darkseagreen4, key=1, label=str, style=dashed];
m10_47 -> m10_50  [color=darkseagreen4, key=1, label=str, style=dashed];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_52  [key=2, style=dotted];
m10_49 -> m10_49  [color=darkseagreen4, key=1, label=str, style=dashed];
m10_50 -> m10_51  [key=0, style=solid];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_50  [key=0, style=solid];
m10_51 -> m10_44  [color=blue, key=0, style=bold];
m10_22 -> m10_23  [key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_2  [key=2, style=dotted];
m10_24 -> m10_22  [color=blue, key=0, style=bold];
m10_53 -> m10_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_20  [color=red, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_48  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m10_53 -> m10_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Alphas.Insight", style=dashed];
m11_59 -> m11_80  [key=0, style=solid];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_82  [key=2, style=dotted];
m11_80 -> m11_83  [key=2, style=dotted];
m11_80 -> m11_84  [key=2, style=dotted];
m11_80 -> m11_85  [key=2, style=dotted];
m11_80 -> m11_86  [key=2, style=dotted];
m11_81 -> m11_59  [color=blue, key=0, style=bold];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_147  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_143 -> m11_148  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_144 -> m11_14  [key=2, style=dotted];
m11_144 -> m11_145  [key=0, style=solid];
m11_145 -> m11_14  [key=2, style=dotted];
m11_145 -> m11_146  [key=0, style=solid];
m11_146 -> m11_14  [key=2, style=dotted];
m11_146 -> m11_147  [key=0, style=solid];
m11_147 -> m11_148  [key=0, style=solid];
m11_147 -> m11_114  [key=2, style=dotted];
m11_147 -> m11_150  [key=2, style=dotted];
m11_147 -> m11_102  [key=2, style=dotted];
m11_148 -> m11_149  [key=0, style=solid];
m11_148 -> m11_114  [key=2, style=dotted];
m11_148 -> m11_127  [key=2, style=dotted];
m11_148 -> m11_102  [key=2, style=dotted];
m11_149 -> m11_143  [color=blue, key=0, style=bold];
m11_52 -> m11_87  [key=0, style=solid];
m11_87 -> m11_52  [color=blue, key=0, style=bold];
m11_203 -> m11_204  [key=0, style=solid];
m11_208 -> m11_208  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m11_208 -> m11_209  [key=0, style=solid];
m11_208 -> m11_225  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m11_208 -> m11_226  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_208 -> m11_227  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_211 -> m11_212  [key=0, style=solid];
m11_211 -> m11_220  [key=2, style=dotted];
m11_204 -> m11_208  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m11_204 -> m11_205  [key=0, style=solid];
m11_204 -> m11_218  [key=2, style=dotted];
m11_204 -> m11_228  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m11_204 -> m11_212  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m11_204 -> m11_213  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m11_204 -> m11_214  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m11_206 -> m11_208  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m11_206 -> m11_207  [key=0, style=solid];
m11_207 -> m11_208  [key=0, style=solid];
m11_207 -> m11_219  [key=2, style=dotted];
m11_207 -> m11_224  [color=darkseagreen4, key=1, label=sync, style=dashed];
m11_209 -> m11_210  [key=0, style=solid];
m11_210 -> m11_211  [key=0, style=solid];
m11_210 -> m11_101  [key=2, style=dotted];
m11_212 -> m11_213  [key=0, style=solid];
m11_212 -> m11_221  [key=2, style=dotted];
m11_216 -> m11_179  [key=2, style=dotted];
m11_216 -> m11_217  [key=0, style=solid];
m11_205 -> m11_206  [key=0, style=solid];
m11_205 -> m11_210  [color=darkseagreen4, key=1, label=qty, style=dashed];
m11_213 -> m11_221  [key=2, style=dotted];
m11_213 -> m11_214  [key=0, style=solid];
m11_214 -> m11_221  [key=2, style=dotted];
m11_214 -> m11_215  [key=0, style=solid];
m11_215 -> m11_216  [key=0, style=solid];
m11_215 -> m11_222  [key=2, style=dotted];
m11_217 -> m11_203  [color=blue, key=0, style=bold];
m11_183 -> m11_184  [key=0, style=solid];
m11_184 -> m11_14  [key=2, style=dotted];
m11_184 -> m11_185  [key=0, style=solid];
m11_185 -> m11_14  [key=2, style=dotted];
m11_185 -> m11_186  [key=0, style=solid];
m11_186 -> m11_14  [key=2, style=dotted];
m11_186 -> m11_187  [key=0, style=solid];
m11_187 -> m11_58  [key=2, style=dotted];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_190  [color=darkseagreen4, key=1, label=before, style=dashed];
m11_189 -> m11_58  [key=2, style=dotted];
m11_189 -> m11_190  [key=0, style=solid];
m11_189 -> m11_191  [color=darkseagreen4, key=1, label=after, style=dashed];
m11_188 -> m11_189  [key=0, style=solid];
m11_188 -> m11_101  [key=2, style=dotted];
m11_188 -> m11_114  [key=2, style=dotted];
m11_188 -> m11_102  [key=2, style=dotted];
m11_190 -> m11_191  [key=0, style=solid];
m11_190 -> m11_196  [key=2, style=dotted];
m11_190 -> m11_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_190 -> m11_192  [color=darkseagreen4, key=1, label=beforeHoldings, style=dashed];
m11_191 -> m11_192  [key=0, style=solid];
m11_191 -> m11_196  [key=2, style=dotted];
m11_191 -> m11_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_191 -> m11_193  [color=darkseagreen4, key=1, label=afterHoldings, style=dashed];
m11_194 -> m11_195  [key=0, style=solid];
m11_194 -> m11_114  [key=2, style=dotted];
m11_194 -> m11_179  [key=2, style=dotted];
m11_192 -> m11_194  [color=darkseagreen4, key=1, label=beforeQuantity, style=dashed];
m11_192 -> m11_193  [key=0, style=solid];
m11_193 -> m11_194  [key=0, style=solid];
m11_195 -> m11_183  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_20 -> m11_21  [color=green, key=0, style=solid];
m11_20 -> m11_14  [color=green, key=2, style=dotted];
m11_19 -> m11_20  [color=green, key=0, style=solid];
m11_19 -> m11_14  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_14  [key=2, style=dotted];
m11_22 -> m11_14  [key=2, style=dotted];
m11_22 -> m11_23  [key=0, style=solid];
m11_23 -> m11_14  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_15  [key=2, style=dotted];
m11_25 -> m11_16  [key=2, style=dotted];
m11_25 -> m11_26  [key=0, style=solid];
m11_26 -> m11_17  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_15  [key=2, style=dotted];
m11_28 -> m11_18  [color=blue, key=0, style=bold];
m11_16 -> m11_103  [key=0, style=solid];
m11_103 -> m11_14  [key=2, style=dotted];
m11_103 -> m11_104  [key=0, style=solid];
m11_104 -> m11_14  [key=2, style=dotted];
m11_104 -> m11_105  [key=0, style=solid];
m11_105 -> m11_14  [key=2, style=dotted];
m11_105 -> m11_106  [key=0, style=solid];
m11_108 -> m11_14  [key=2, style=dotted];
m11_108 -> m11_109  [key=0, style=solid];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_56  [key=2, style=dotted];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_110  [key=0, style=solid];
m11_107 -> m11_109  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m11_109 -> m11_107  [key=0, style=solid];
m11_109 -> m11_111  [key=2, style=dotted];
m11_110 -> m11_16  [color=blue, key=0, style=bold];
m11_223 -> m11_225  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_223 -> m11_226  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_223 -> m11_227  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_223 -> m11_224  [key=0, style=solid];
m11_62 -> m11_14  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid];
m11_65 -> m11_14  [key=2, style=dotted];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_76  [key=2, style=dotted];
m11_72 -> m11_14  [key=2, style=dotted];
m11_72 -> m11_73  [key=0, style=solid];
m11_61 -> m11_14  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_63 -> m11_14  [key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid];
m11_261 -> m11_14  [key=2, style=dotted];
m11_261 -> m11_262  [key=0, style=solid];
m11_280 -> m11_14  [key=2, style=dotted];
m11_280 -> m11_281  [key=0, style=solid];
m11_285 -> m11_14  [key=2, style=dotted];
m11_285 -> m11_286  [key=0, style=solid];
m11_279 -> m11_14  [key=2, style=dotted];
m11_279 -> m11_280  [key=0, style=solid];
m11_281 -> m11_14  [key=2, style=dotted];
m11_281 -> m11_282  [key=0, style=solid];
m11_284 -> m11_14  [key=2, style=dotted];
m11_284 -> m11_285  [key=0, style=solid];
m11_286 -> m11_14  [key=2, style=dotted];
m11_286 -> m11_287  [key=0, style=solid];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_75  [key=0, style=solid];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_70  [key=0, style=solid];
m11_67 -> m11_77  [key=2, style=dotted];
m11_68 -> m11_69  [key=0, style=solid];
m11_69 -> m11_72  [key=0, style=solid];
m11_69 -> m11_78  [key=2, style=dotted];
m11_70 -> m11_59  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_78  [key=2, style=dotted];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_79  [key=2, style=dotted];
m11_74 -> m11_75  [key=0, style=solid];
m11_60 -> m11_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_60 -> m11_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_60 -> m11_72  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_60 -> m11_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_60 -> m11_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_60 -> m11_69  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_60 -> m11_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_60 -> m11_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_60 -> m11_73  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_60 -> m11_74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_66 -> m11_67  [key=0, style=solid];
m11_260 -> m11_261  [key=0, style=solid];
m11_260 -> m11_263  [key=0, style=solid];
m11_262 -> m11_54  [key=2, style=dotted];
m11_262 -> m11_263  [key=0, style=solid];
m11_277 -> m11_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_277 -> m11_285  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_277 -> m11_278  [key=0, style=solid];
m11_277 -> m11_283  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_278 -> m11_279  [key=0, style=solid];
m11_278 -> m11_283  [key=0, style=solid];
m11_282 -> m11_283  [key=0, style=solid];
m11_282 -> m11_230  [key=2, style=dotted];
m11_283 -> m11_284  [key=0, style=solid];
m11_283 -> m11_288  [key=0, style=solid];
m11_287 -> m11_288  [key=0, style=solid];
m11_287 -> m11_230  [key=2, style=dotted];
m11_198 -> m11_199  [key=0, style=solid];
m11_201 -> m11_202  [key=0, style=solid];
m11_75 -> m11_60  [color=blue, key=0, style=bold];
m11_259 -> m11_260  [key=0, style=solid];
m11_259 -> m11_230  [key=2, style=dotted];
m11_258 -> m11_260  [key=0, style=solid];
m11_258 -> m11_259  [key=0, style=solid];
m11_257 -> m11_260  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_257 -> m11_262  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_257 -> m11_258  [key=0, style=solid];
m11_263 -> m11_257  [color=blue, key=0, style=bold];
m11_288 -> m11_277  [color=blue, key=0, style=bold];
m11_197 -> m11_198  [key=0, style=solid];
m11_199 -> m11_197  [color=blue, key=0, style=bold];
m11_200 -> m11_201  [key=0, style=solid];
m11_202 -> m11_200  [color=blue, key=0, style=bold];
m11_225 -> m11_225  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m11_225 -> m11_226  [key=0, style=solid];
m11_225 -> m11_215  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m11_225 -> m11_216  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m11_225 -> m11_229  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m11_226 -> m11_227  [key=0, style=solid];
m11_226 -> m11_222  [key=2, style=dotted];
m11_227 -> m11_228  [key=0, style=solid];
m11_227 -> m11_229  [key=0, style=solid];
m11_180 -> m11_181  [key=0, style=solid];
m11_228 -> m11_230  [key=2, style=dotted];
m11_228 -> m11_229  [key=0, style=solid];
m11_224 -> m11_225  [key=0, style=solid];
m11_229 -> m11_223  [color=blue, key=0, style=bold];
m11_181 -> m11_182  [key=0, style=solid];
m11_182 -> m11_180  [color=blue, key=0, style=bold];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_138 -> m11_14  [key=2, style=dotted];
m11_138 -> m11_139  [key=0, style=solid];
m11_139 -> m11_14  [key=2, style=dotted];
m11_139 -> m11_140  [key=0, style=solid];
m11_140 -> m11_14  [key=2, style=dotted];
m11_140 -> m11_141  [key=0, style=solid];
m11_141 -> m11_142  [key=0, style=solid];
m11_141 -> m11_114  [key=2, style=dotted];
m11_141 -> m11_136  [key=2, style=dotted];
m11_141 -> m11_102  [key=2, style=dotted];
m11_142 -> m11_137  [color=blue, key=0, style=bold];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_165  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_161 -> m11_166  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_161 -> m11_167  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_161 -> m11_168  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_162 -> m11_14  [key=2, style=dotted];
m11_162 -> m11_163  [key=0, style=solid];
m11_163 -> m11_14  [key=2, style=dotted];
m11_163 -> m11_164  [key=0, style=solid];
m11_164 -> m11_14  [key=2, style=dotted];
m11_164 -> m11_165  [key=0, style=solid];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_114  [key=2, style=dotted];
m11_165 -> m11_150  [key=2, style=dotted];
m11_165 -> m11_102  [key=2, style=dotted];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_114  [key=2, style=dotted];
m11_166 -> m11_127  [key=2, style=dotted];
m11_166 -> m11_102  [key=2, style=dotted];
m11_166 -> m11_168  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_168 -> m11_160  [key=2, style=dotted];
m11_168 -> m11_169  [key=0, style=solid];
m11_167 -> m11_168  [key=0, style=solid];
m11_167 -> m11_169  [key=0, style=solid];
m11_169 -> m11_161  [color=blue, key=0, style=bold];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_125  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_122 -> m11_14  [key=2, style=dotted];
m11_122 -> m11_123  [key=0, style=solid];
m11_123 -> m11_14  [key=2, style=dotted];
m11_123 -> m11_124  [key=0, style=solid];
m11_124 -> m11_14  [key=2, style=dotted];
m11_124 -> m11_125  [key=0, style=solid];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_114  [key=2, style=dotted];
m11_125 -> m11_127  [key=2, style=dotted];
m11_125 -> m11_102  [key=2, style=dotted];
m11_126 -> m11_121  [color=blue, key=0, style=bold];
m11_114 -> m11_115  [key=0, style=solid];
m11_115 -> m11_116  [key=0, style=solid];
m11_116 -> m11_114  [color=blue, key=0, style=bold];
m11_102 -> m11_266  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m11_102 -> m11_283  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m11_102 -> m11_268  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_102 -> m11_269  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_102 -> m11_270  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_102 -> m11_264  [key=0, style=solid];
m11_102 -> m11_271  [color=darkseagreen4, key=1, label=double, style=dashed];
m11_102 -> m11_272  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_102 -> m11_274  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_266 -> m11_280  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_266 -> m11_285  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_266 -> m11_267  [key=0, style=solid];
m11_266 -> m11_278  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_266 -> m11_283  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_266 -> m11_273  [color=darkseagreen4, key=1, label=brokerageOnOrderStatusChanged, style=dashed];
m11_267 -> m11_268  [key=0, style=solid];
m11_268 -> m11_269  [key=0, style=solid];
m11_268 -> m11_57  [key=2, style=dotted];
m11_269 -> m11_270  [key=0, style=solid];
m11_269 -> m11_271  [key=0, style=solid];
m11_269 -> m11_220  [key=2, style=dotted];
m11_273 -> m11_274  [key=0, style=solid];
m11_270 -> m11_54  [key=2, style=dotted];
m11_270 -> m11_271  [key=0, style=solid];
m11_264 -> m11_266  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m11_264 -> m11_282  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m11_264 -> m11_265  [key=0, style=solid];
m11_264 -> m11_218  [key=2, style=dotted];
m11_264 -> m11_271  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m11_265 -> m11_266  [key=0, style=solid];
m11_265 -> m11_287  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m11_265 -> m11_218  [key=2, style=dotted];
m11_265 -> m11_272  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m11_271 -> m11_272  [key=0, style=solid];
m11_271 -> m11_276  [key=2, style=dotted];
m11_272 -> m11_273  [key=0, style=solid];
m11_272 -> m11_276  [key=2, style=dotted];
m11_274 -> m11_275  [key=0, style=solid];
m11_275 -> m11_102  [color=blue, key=0, style=bold];
m11_170 -> m11_171  [key=0, style=solid];
m11_171 -> m11_14  [key=2, style=dotted];
m11_171 -> m11_172  [key=0, style=solid];
m11_172 -> m11_14  [key=2, style=dotted];
m11_172 -> m11_173  [key=0, style=solid];
m11_173 -> m11_14  [key=2, style=dotted];
m11_173 -> m11_174  [key=0, style=solid];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_177  [key=2, style=dotted];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_178  [key=2, style=dotted];
m11_175 -> m11_179  [key=2, style=dotted];
m11_175 -> m11_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_176 -> m11_170  [color=blue, key=0, style=bold];
m11_128 -> m11_129  [key=0, style=solid];
m11_128 -> m11_132  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_128 -> m11_133  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_129 -> m11_14  [key=2, style=dotted];
m11_129 -> m11_130  [key=0, style=solid];
m11_130 -> m11_14  [key=2, style=dotted];
m11_130 -> m11_131  [key=0, style=solid];
m11_131 -> m11_14  [key=2, style=dotted];
m11_131 -> m11_132  [key=0, style=solid];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_114  [key=2, style=dotted];
m11_132 -> m11_135  [key=2, style=dotted];
m11_132 -> m11_102  [key=2, style=dotted];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_114  [key=2, style=dotted];
m11_133 -> m11_136  [key=2, style=dotted];
m11_133 -> m11_102  [key=2, style=dotted];
m11_134 -> m11_128  [color=blue, key=0, style=bold];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_155  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_151 -> m11_156  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_151 -> m11_157  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_151 -> m11_158  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m11_152 -> m11_14  [key=2, style=dotted];
m11_152 -> m11_153  [key=0, style=solid];
m11_153 -> m11_14  [key=2, style=dotted];
m11_153 -> m11_154  [key=0, style=solid];
m11_154 -> m11_14  [key=2, style=dotted];
m11_154 -> m11_155  [key=0, style=solid];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_114  [key=2, style=dotted];
m11_155 -> m11_135  [key=2, style=dotted];
m11_155 -> m11_102  [key=2, style=dotted];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_114  [key=2, style=dotted];
m11_156 -> m11_136  [key=2, style=dotted];
m11_156 -> m11_102  [key=2, style=dotted];
m11_156 -> m11_158  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_158 -> m11_160  [key=2, style=dotted];
m11_158 -> m11_159  [key=0, style=solid];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_159  [key=0, style=solid];
m11_159 -> m11_151  [color=blue, key=0, style=bold];
m11_17 -> m11_90  [key=0, style=solid];
m11_90 -> m11_14  [key=2, style=dotted];
m11_90 -> m11_91  [key=0, style=solid];
m11_91 -> m11_14  [key=2, style=dotted];
m11_91 -> m11_92  [key=0, style=solid];
m11_92 -> m11_14  [key=2, style=dotted];
m11_92 -> m11_93  [key=0, style=solid];
m11_96 -> m11_14  [key=2, style=dotted];
m11_96 -> m11_97  [key=0, style=solid];
m11_93 -> m11_58  [key=2, style=dotted];
m11_93 -> m11_94  [key=0, style=solid];
m11_94 -> m11_96  [color=darkseagreen4, key=1, label=holding, style=dashed];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_100  [key=0, style=solid];
m11_94 -> m11_97  [color=darkseagreen4, key=1, label=holding, style=dashed];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_94  [key=0, style=solid];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_101  [key=2, style=dotted];
m11_97 -> m11_99  [color=darkseagreen4, key=1, label=order, style=dashed];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_57  [key=2, style=dotted];
m11_99 -> m11_94  [key=0, style=solid];
m11_99 -> m11_102  [key=2, style=dotted];
m11_100 -> m11_17  [color=blue, key=0, style=bold];
m11_160 -> m11_261  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_160 -> m11_237  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_160 -> m11_248  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_160 -> m11_231  [key=0, style=solid];
m11_160 -> m11_234  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_160 -> m11_240  [color=darkseagreen4, key=1, label=double, style=dashed];
m11_160 -> m11_242  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_160 -> m11_243  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_160 -> m11_245  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_160 -> m11_247  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_160 -> m11_249  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_237 -> m11_14  [key=2, style=dotted];
m11_237 -> m11_238  [key=0, style=solid];
m11_248 -> m11_14  [key=2, style=dotted];
m11_248 -> m11_249  [key=0, style=solid];
m11_236 -> m11_14  [key=2, style=dotted];
m11_236 -> m11_237  [key=0, style=solid];
m11_238 -> m11_14  [key=2, style=dotted];
m11_238 -> m11_239  [key=0, style=solid];
m11_244 -> m11_14  [key=2, style=dotted];
m11_244 -> m11_245  [key=0, style=solid];
m11_247 -> m11_248  [key=0, style=solid];
m11_247 -> m11_251  [key=0, style=solid];
m11_249 -> m11_250  [key=0, style=solid];
m11_249 -> m11_240  [key=0, style=solid];
m11_249 -> m11_256  [key=2, style=dotted];
m11_235 -> m11_236  [key=0, style=solid];
m11_239 -> m11_240  [key=0, style=solid];
m11_239 -> m11_253  [key=2, style=dotted];
m11_243 -> m11_244  [key=0, style=solid];
m11_243 -> m11_112  [key=2, style=dotted];
m11_243 -> m11_245  [color=darkseagreen4, key=1, label=marketPrice, style=dashed];
m11_245 -> m11_246  [key=0, style=solid];
m11_245 -> m11_255  [key=2, style=dotted];
m11_251 -> m11_252  [key=0, style=solid];
m11_250 -> m11_54  [key=2, style=dotted];
m11_250 -> m11_240  [key=0, style=solid];
m11_231 -> m11_232  [key=0, style=solid];
m11_231 -> m11_233  [key=0, style=solid];
m11_234 -> m11_260  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_234 -> m11_262  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_234 -> m11_235  [key=0, style=solid];
m11_234 -> m11_251  [color=darkseagreen4, key=1, label=brokerageOnOrderStatusChanged, style=dashed];
m11_234 -> m11_258  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_240 -> m11_251  [key=0, style=solid];
m11_240 -> m11_241  [key=0, style=solid];
m11_240 -> m11_221  [key=2, style=dotted];
m11_242 -> m11_243  [key=0, style=solid];
m11_242 -> m11_240  [key=0, style=solid];
m11_246 -> m11_247  [key=0, style=solid];
m11_246 -> m11_240  [key=0, style=solid];
m11_232 -> m11_252  [key=0, style=solid];
m11_233 -> m11_234  [key=0, style=solid];
m11_233 -> m11_240  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m11_233 -> m11_259  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m11_233 -> m11_218  [key=2, style=dotted];
m11_233 -> m11_241  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m11_241 -> m11_242  [key=0, style=solid];
m11_241 -> m11_254  [key=2, style=dotted];
m11_252 -> m11_160  [color=blue, key=0, style=bold];
m11_29 -> m11_30  [key=0, style=solid];
m11_37 -> m11_38  [color=green, key=0, style=solid];
m11_37 -> m11_39  [color=green, key=0, style=solid];
m11_33 -> m11_37  [color=green, key=1, label=brokerage, style=dashed];
m11_33 -> m11_47  [color=green, key=1, label=brokerage, style=dashed];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_52  [key=2, style=dotted];
m11_33 -> m11_35  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m11_33 -> m11_38  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m11_33 -> m11_42  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m11_33 -> m11_49  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m11_33 -> m11_50  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m11_35 -> m11_37  [color=green, key=0, style=solid];
m11_35 -> m11_36  [key=0, style=solid];
m11_36 -> m11_37  [color=green, key=0, style=solid];
m11_36 -> m11_54  [key=2, style=dotted];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_55  [key=2, style=dotted];
m11_39 -> m11_14  [key=2, style=dotted];
m11_39 -> m11_40  [key=0, style=solid];
m11_47 -> m11_48  [color=green, key=0, style=solid];
m11_47 -> m11_49  [color=green, key=0, style=solid];
m11_47 -> m11_58  [color=green, key=2, style=dotted];
m11_46 -> m11_47  [color=green, key=0, style=solid];
m11_46 -> m11_14  [key=2, style=dotted];
m11_48 -> m11_47  [color=green, key=0, style=solid];
m11_48 -> m11_59  [key=2, style=dotted];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_62  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_49 -> m11_64  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_49 -> m11_65  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_49 -> m11_67  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_49 -> m11_68  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_49 -> m11_69  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_49 -> m11_70  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_49 -> m11_71  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_49 -> m11_72  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_49 -> m11_73  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_49 -> m11_74  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m11_30 -> m11_14  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_14  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_32 -> m11_14  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_40 -> m11_14  [key=2, style=dotted];
m11_40 -> m11_41  [key=0, style=solid];
m11_41 -> m11_14  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_44 -> m11_14  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_45 -> m11_14  [key=2, style=dotted];
m11_45 -> m11_46  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_53  [key=2, style=dotted];
m11_42 -> m11_44  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_56  [key=2, style=dotted];
m11_50 -> m11_51  [key=0, style=solid];
m11_43 -> m11_42  [key=0, style=solid];
m11_43 -> m11_57  [key=2, style=dotted];
m11_51 -> m11_29  [color=blue, key=0, style=bold];
m11_112 -> m11_113  [key=0, style=solid];
m11_113 -> m11_112  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_14  [key=2, style=dotted];
m11_1 -> m11_2  [key=0, style=solid];
m11_2 -> m11_14  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_14  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_4 -> m11_14  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_14  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_10 -> m11_16  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_17  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_15  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_15  [key=2, style=dotted];
m11_13 -> m11_0  [color=blue, key=0, style=bold];
m11_117 -> m11_118  [key=0, style=solid];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_120  [key=2, style=dotted];
m11_119 -> m11_117  [color=blue, key=0, style=bold];
m11_289 -> m11_33  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_38  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_48  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_72  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_6  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_7  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_11  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_25  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_43  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_67  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_68  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_71  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_73  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_93  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_98  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_99  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_106  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_109  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_118  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_125  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_132  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_133  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_141  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_147  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_148  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_155  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_156  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_158  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_165  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_166  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_168  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_174  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_187  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_188  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_189  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_190  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_198  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_191  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_201  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_194  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_208  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_211  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_235  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_243  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_245  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_249  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_251  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_267  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_268  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_269  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_289 -> m11_273  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.BrokerageTests", style=dashed];
m11_294 -> m11_261  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m11_295 -> m11_282  [color=darkseagreen4, key=1, label=requiredStatusEvent, style=dashed];
m11_296 -> m11_283  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m11_297 -> m11_287  [color=darkseagreen4, key=1, label=desiredStatusEvent, style=dashed];
m11_293 -> m11_259  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m11_291 -> m11_225  [color=darkseagreen4, key=1, label=remaining, style=dashed];
m11_292 -> m11_228  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m11_290 -> m11_224  [color=darkseagreen4, key=1, label=sync, style=dashed];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierApiRequestType", style=dashed];
m12_54 -> m12_62  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierApiRequestType", style=dashed];
m12_54 -> m12_63  [color=darkseagreen4, key=1, label=RestRequest, style=dashed];
m12_54 -> m12_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_54 -> m12_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_54 -> m12_75  [color=darkseagreen4, key=1, label=RestRequest, style=dashed];
m12_55 -> m12_56  [key=0, style=solid];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_62  [key=0, style=solid];
m12_62 -> m12_63  [key=0, style=solid];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_85  [key=2, style=dotted];
m12_63 -> m12_66  [color=darkseagreen4, key=1, label=raw, style=dashed];
m12_63 -> m12_67  [color=darkseagreen4, key=1, label=raw, style=dashed];
m12_63 -> m12_70  [color=darkseagreen4, key=1, label=raw, style=dashed];
m12_63 -> m12_73  [color=darkseagreen4, key=1, label=raw, style=dashed];
m12_63 -> m12_75  [color=darkseagreen4, key=1, label=raw, style=dashed];
m12_63 -> m12_76  [color=darkseagreen4, key=1, label=raw, style=dashed];
m12_63 -> m12_77  [color=darkseagreen4, key=1, label=raw, style=dashed];
m12_63 -> m12_79  [color=darkseagreen4, key=1, label=raw, style=dashed];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_67  [key=0, style=solid];
m12_66 -> m12_68  [key=0, style=solid];
m12_66 -> m12_86  [key=2, style=dotted];
m12_66 -> m12_80  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_90  [key=2, style=dotted];
m12_56 -> m12_57  [key=0, style=solid];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_82  [key=2, style=dotted];
m12_57 -> m12_59  [color=darkseagreen4, key=1, label=client, style=dashed];
m12_57 -> m12_63  [color=darkseagreen4, key=1, label=client, style=dashed];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_83  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_83  [key=2, style=dotted];
m12_61 -> m12_60  [key=0, style=solid];
m12_61 -> m12_84  [key=2, style=dotted];
m12_64 -> m12_65  [key=0, style=solid];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_86  [key=2, style=dotted];
m12_67 -> m12_80  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_86  [key=2, style=dotted];
m12_70 -> m12_72  [color=darkseagreen4, key=1, label=fault, style=dashed];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_75  [key=0, style=solid];
m12_73 -> m12_89  [key=2, style=dotted];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_91  [key=2, style=dotted];
m12_76 -> m12_88  [key=2, style=dotted];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_80  [key=0, style=solid];
m12_79 -> m12_81  [key=0, style=solid];
m12_79 -> m12_92  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_77  [key=0, style=solid];
m12_80 -> m12_81  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_73  [key=0, style=solid];
m12_72 -> m12_77  [key=0, style=solid];
m12_72 -> m12_87  [key=2, style=dotted];
m12_72 -> m12_88  [key=2, style=dotted];
m12_74 -> m12_81  [key=0, style=solid];
m12_78 -> m12_79  [key=0, style=solid];
m12_81 -> m12_54  [color=blue, key=0, style=bold];
m12_364 -> m12_365  [key=0, style=solid];
m12_364 -> m12_367  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TokenResponse", style=dashed];
m12_365 -> m12_366  [key=0, style=solid];
m12_365 -> m12_367  [color=darkseagreen4, key=1, label=handler, style=dashed];
m12_367 -> m12_368  [key=0, style=solid];
m12_367 -> m12_369  [key=2, style=dotted];
m12_366 -> m12_367  [key=0, style=solid];
m12_366 -> m12_368  [key=0, style=solid];
m12_368 -> m12_364  [color=blue, key=0, style=bold];
m12_455 -> m12_846  [key=0, style=solid];
m12_455 -> m12_847  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderClass", style=dashed];
m12_455 -> m12_848  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_455 -> m12_849  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_455 -> m12_850  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_455 -> m12_851  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_455 -> m12_852  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_455 -> m12_853  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_455 -> m12_854  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_846 -> m12_847  [key=0, style=solid];
m12_847 -> m12_848  [key=0, style=solid];
m12_848 -> m12_849  [key=0, style=solid];
m12_849 -> m12_850  [key=0, style=solid];
m12_849 -> m12_774  [key=2, style=dotted];
m12_850 -> m12_851  [key=0, style=solid];
m12_850 -> m12_856  [key=2, style=dotted];
m12_851 -> m12_852  [key=0, style=solid];
m12_851 -> m12_507  [key=2, style=dotted];
m12_852 -> m12_853  [key=0, style=solid];
m12_852 -> m12_508  [key=2, style=dotted];
m12_853 -> m12_854  [key=0, style=solid];
m12_853 -> m12_809  [key=2, style=dotted];
m12_854 -> m12_855  [key=0, style=solid];
m12_854 -> m12_506  [key=2, style=dotted];
m12_855 -> m12_455  [color=blue, key=0, style=bold];
m12_9 -> m12_10  [color=green, key=0, style=solid];
m12_9 -> m12_7  [key=0, style=solid];
m12_9 -> m12_18  [key=2, style=dotted];
m12_9 -> m12_17  [key=2, style=dotted];
m12_10 -> m12_11  [color=green, key=0, style=solid];
m12_10 -> m12_7  [color=green, key=2, style=dotted];
m12_10 -> m12_8  [color=green, key=2, style=dotted];
m12_10 -> m12_19  [key=2, style=dotted];
m12_11 -> m12_9  [color=blue, key=0, style=bold];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_19  [key=2, style=dotted];
m12_456 -> m12_795  [key=0, style=solid];
m12_456 -> m12_796  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_456 -> m12_797  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_456 -> m12_799  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_456 -> m12_800  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_795 -> m12_796  [key=0, style=solid];
m12_795 -> m12_454  [key=2, style=dotted];
m12_795 -> m12_797  [color=darkseagreen4, key=1, label=holdingQuantity, style=dashed];
m12_795 -> m12_799  [color=darkseagreen4, key=1, label=holdingQuantity, style=dashed];
m12_795 -> m12_800  [color=darkseagreen4, key=1, label=holdingQuantity, style=dashed];
m12_796 -> m12_797  [key=0, style=solid];
m12_796 -> m12_799  [key=0, style=solid];
m12_797 -> m12_798  [key=0, style=solid];
m12_797 -> m12_802  [key=0, style=solid];
m12_799 -> m12_800  [key=0, style=solid];
m12_799 -> m12_802  [key=0, style=solid];
m12_800 -> m12_801  [key=0, style=solid];
m12_800 -> m12_802  [key=0, style=solid];
m12_798 -> m12_803  [key=0, style=solid];
m12_802 -> m12_803  [key=0, style=solid];
m12_801 -> m12_803  [key=0, style=solid];
m12_803 -> m12_456  [color=blue, key=0, style=bold];
m12_544 -> m12_545  [key=0, style=solid];
m12_545 -> m12_544  [color=blue, key=0, style=bold];
m12_204 -> m12_344  [key=0, style=solid];
m12_204 -> m12_348  [color=darkseagreen4, key=1, label="System.Enum", style=dashed];
m12_344 -> m12_345  [key=0, style=solid];
m12_344 -> n6  [key=2, style=dotted];
m12_344 -> m12_351  [key=2, style=dotted];
m12_344 -> m12_352  [key=2, style=dotted];
m12_348 -> m12_349  [key=0, style=solid];
m12_348 -> m12_351  [key=2, style=dotted];
m12_345 -> m12_346  [key=0, style=solid];
m12_345 -> m12_353  [key=2, style=dotted];
m12_345 -> m12_347  [color=darkseagreen4, key=1, label=attributes, style=dashed];
m12_346 -> m12_347  [key=0, style=solid];
m12_346 -> m12_348  [key=0, style=solid];
m12_347 -> m12_349  [key=0, style=solid];
m12_349 -> m12_204  [color=blue, key=0, style=bold];
m12_370 -> m12_371  [key=0, style=solid];
m12_371 -> m12_372  [key=0, style=solid];
m12_371 -> m12_150  [key=2, style=dotted];
m12_371 -> m12_377  [color=darkseagreen4, key=1, label=orders, style=dashed];
m12_371 -> m12_381  [color=darkseagreen4, key=1, label=orders, style=dashed];
m12_372 -> m12_373  [key=0, style=solid];
m12_372 -> m12_171  [key=2, style=dotted];
m12_372 -> m12_383  [key=2, style=dotted];
m12_372 -> m12_374  [color=darkseagreen4, key=1, label=openOrders, style=dashed];
m12_377 -> m12_378  [key=0, style=solid];
m12_377 -> m12_384  [key=2, style=dotted];
m12_377 -> m12_385  [key=2, style=dotted];
m12_377 -> m12_379  [color=darkseagreen4, key=1, label=task, style=dashed];
m12_381 -> m12_382  [key=0, style=solid];
m12_373 -> m12_374  [key=0, style=solid];
m12_373 -> m12_150  [key=2, style=dotted];
m12_373 -> m12_379  [color=darkseagreen4, key=1, label=tasks, style=dashed];
m12_373 -> m12_380  [color=darkseagreen4, key=1, label=tasks, style=dashed];
m12_374 -> m12_375  [key=0, style=solid];
m12_374 -> m12_380  [key=0, style=solid];
m12_374 -> m12_377  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m12_379 -> m12_374  [key=0, style=solid];
m12_379 -> m12_385  [key=2, style=dotted];
m12_380 -> m12_381  [key=0, style=solid];
m12_380 -> m12_386  [key=2, style=dotted];
m12_380 -> m12_387  [key=2, style=dotted];
m12_375 -> m12_376  [key=0, style=solid];
m12_376 -> m12_377  [key=0, style=solid];
m12_378 -> m12_379  [key=0, style=solid];
m12_378 -> m12_374  [key=0, style=solid];
m12_382 -> m12_370  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_20 -> m12_23  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_20 -> m12_24  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m12_20 -> m12_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_21 -> m12_22  [key=0, style=solid];
m12_22 -> m12_23  [key=0, style=solid];
m12_23 -> m12_24  [key=0, style=solid];
m12_24 -> m12_25  [key=0, style=solid];
m12_25 -> m12_26  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_28  [key=0, style=solid];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_39  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_30  [key=0, style=solid];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_39  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_34  [color=darkseagreen4, key=1, label=dueTime, style=dashed];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_33  [key=0, style=solid];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_43  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_34  [color=darkseagreen4, key=1, label=dueTime, style=dashed];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_40  [key=2, style=dotted];
m12_33 -> m12_41  [key=2, style=dotted];
m12_33 -> m12_42  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_44  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_45  [key=2, style=dotted];
m12_38 -> m12_20  [color=blue, key=0, style=bold];
m12_409 -> m12_410  [key=0, style=solid];
m12_410 -> m12_411  [key=0, style=solid];
m12_410 -> m12_150  [key=2, style=dotted];
m12_410 -> m12_412  [key=2, style=dotted];
m12_410 -> m12_134  [key=2, style=dotted];
m12_411 -> m12_409  [color=blue, key=0, style=bold];
m12_774 -> m12_775  [key=0, style=solid];
m12_774 -> m12_776  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m12_774 -> m12_781  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_774 -> m12_782  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m12_774 -> m12_787  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_774 -> m12_788  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderDirection", style=dashed];
m12_775 -> m12_776  [key=0, style=solid];
m12_775 -> m12_781  [key=0, style=solid];
m12_776 -> m12_777  [key=0, style=solid];
m12_776 -> m12_779  [key=0, style=solid];
m12_781 -> m12_782  [key=0, style=solid];
m12_781 -> m12_787  [key=0, style=solid];
m12_782 -> m12_783  [key=0, style=solid];
m12_782 -> m12_785  [key=0, style=solid];
m12_787 -> m12_788  [key=0, style=solid];
m12_787 -> m12_793  [key=0, style=solid];
m12_788 -> m12_789  [key=0, style=solid];
m12_788 -> m12_791  [key=0, style=solid];
m12_777 -> m12_778  [key=0, style=solid];
m12_779 -> m12_780  [key=0, style=solid];
m12_778 -> m12_794  [key=0, style=solid];
m12_780 -> m12_794  [key=0, style=solid];
m12_783 -> m12_784  [key=0, style=solid];
m12_785 -> m12_786  [key=0, style=solid];
m12_784 -> m12_794  [key=0, style=solid];
m12_786 -> m12_794  [key=0, style=solid];
m12_793 -> m12_794  [key=0, style=solid];
m12_789 -> m12_790  [key=0, style=solid];
m12_791 -> m12_792  [key=0, style=solid];
m12_790 -> m12_794  [key=0, style=solid];
m12_792 -> m12_794  [key=0, style=solid];
m12_794 -> m12_774  [color=blue, key=0, style=bold];
m12_171 -> m12_172  [key=0, style=solid];
m12_172 -> m12_173  [key=0, style=solid];
m12_172 -> m12_121  [key=2, style=dotted];
m12_172 -> m12_174  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_173 -> m12_174  [key=0, style=solid];
m12_173 -> m12_160  [key=2, style=dotted];
m12_173 -> m12_161  [key=2, style=dotted];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_54  [key=2, style=dotted];
m12_174 -> m12_178  [color=darkseagreen4, key=1, label=ordersContainer, style=dashed];
m12_175 -> m12_176  [key=0, style=solid];
m12_175 -> m12_178  [key=0, style=solid];
m12_178 -> m12_179  [key=0, style=solid];
m12_176 -> m12_177  [key=0, style=solid];
m12_176 -> m12_149  [key=2, style=dotted];
m12_177 -> m12_179  [key=0, style=solid];
m12_177 -> m12_150  [key=2, style=dotted];
m12_179 -> m12_171  [color=blue, key=0, style=bold];
m12_627 -> m12_642  [key=0, style=solid];
m12_642 -> m12_643  [key=0, style=solid];
m12_642 -> m12_639  [key=2, style=dotted];
m12_643 -> m12_627  [color=blue, key=0, style=bold];
m12_413 -> m12_414  [key=0, style=solid];
m12_413 -> m12_464  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_413 -> m12_424  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_413 -> m12_425  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_413 -> m12_426  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_413 -> m12_429  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_413 -> m12_431  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_413 -> m12_433  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_413 -> m12_438  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_413 -> m12_441  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_413 -> m12_446  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_414 -> m12_415  [key=0, style=solid];
m12_414 -> m12_449  [key=2, style=dotted];
m12_414 -> m12_463  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_414 -> m12_416  [color=darkseagreen4, key=1, label=cachedOpenOrder, style=dashed];
m12_414 -> m12_420  [color=darkseagreen4, key=1, label=cachedOpenOrder, style=dashed];
m12_424 -> m12_425  [key=0, style=solid];
m12_424 -> m12_454  [key=2, style=dotted];
m12_424 -> m12_428  [color=darkseagreen4, key=1, label=holdingQuantity, style=dashed];
m12_425 -> m12_426  [key=0, style=solid];
m12_425 -> m12_455  [key=2, style=dotted];
m12_425 -> m12_430  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m12_425 -> m12_434  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m12_425 -> m12_443  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m12_426 -> m12_427  [key=0, style=solid];
m12_426 -> m12_456  [key=2, style=dotted];
m12_429 -> m12_430  [key=0, style=solid];
m12_429 -> m12_431  [color=darkseagreen4, key=1, label=secondOrderQuantity, style=dashed];
m12_431 -> m12_432  [key=0, style=solid];
m12_431 -> m12_455  [key=2, style=dotted];
m12_431 -> m12_457  [key=2, style=dotted];
m12_431 -> m12_433  [color=darkseagreen4, key=1, label=restOfOrder, style=dashed];
m12_433 -> m12_434  [key=0, style=solid];
m12_433 -> m12_459  [key=2, style=dotted];
m12_433 -> m12_460  [key=2, style=dotted];
m12_438 -> m12_439  [key=0, style=solid];
m12_438 -> m12_452  [key=2, style=dotted];
m12_441 -> m12_442  [key=0, style=solid];
m12_441 -> m12_385  [key=2, style=dotted];
m12_446 -> m12_447  [key=0, style=solid];
m12_446 -> m12_385  [key=2, style=dotted];
m12_415 -> m12_416  [key=0, style=solid];
m12_415 -> m12_424  [key=0, style=solid];
m12_416 -> m12_417  [key=0, style=solid];
m12_416 -> m12_450  [key=2, style=dotted];
m12_416 -> m12_422  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_416 -> m12_423  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_420 -> m12_424  [key=0, style=solid];
m12_420 -> m12_451  [key=2, style=dotted];
m12_417 -> m12_418  [key=0, style=solid];
m12_417 -> m12_421  [key=0, style=solid];
m12_422 -> m12_423  [key=0, style=solid];
m12_422 -> m12_452  [key=2, style=dotted];
m12_423 -> m12_424  [key=0, style=solid];
m12_423 -> m12_453  [key=2, style=dotted];
m12_418 -> m12_419  [key=0, style=solid];
m12_421 -> m12_422  [key=0, style=solid];
m12_419 -> m12_420  [key=0, style=solid];
m12_419 -> m12_128  [key=2, style=dotted];
m12_428 -> m12_429  [key=0, style=solid];
m12_428 -> m12_430  [color=darkseagreen4, key=1, label=firstOrderQuantity, style=dashed];
m12_430 -> m12_431  [key=0, style=solid];
m12_430 -> m12_457  [key=2, style=dotted];
m12_434 -> m12_435  [key=0, style=solid];
m12_434 -> m12_461  [key=2, style=dotted];
m12_434 -> m12_440  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_443 -> m12_444  [key=0, style=solid];
m12_443 -> m12_461  [key=2, style=dotted];
m12_443 -> m12_446  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_427 -> m12_428  [key=0, style=solid];
m12_427 -> m12_443  [key=0, style=solid];
m12_432 -> m12_433  [key=0, style=solid];
m12_432 -> m12_458  [key=2, style=dotted];
m12_435 -> m12_436  [key=0, style=solid];
m12_435 -> m12_462  [key=2, style=dotted];
m12_440 -> m12_441  [key=0, style=solid];
m12_436 -> m12_437  [key=0, style=solid];
m12_436 -> m12_440  [key=0, style=solid];
m12_437 -> m12_438  [key=0, style=solid];
m12_439 -> m12_448  [key=0, style=solid];
m12_442 -> m12_448  [key=0, style=solid];
m12_444 -> m12_445  [key=0, style=solid];
m12_444 -> m12_446  [key=0, style=solid];
m12_444 -> m12_462  [key=2, style=dotted];
m12_445 -> m12_448  [key=0, style=solid];
m12_447 -> m12_448  [key=0, style=solid];
m12_448 -> m12_413  [color=blue, key=0, style=bold];
m12_180 -> m12_181  [key=0, style=solid];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_121  [key=2, style=dotted];
m12_181 -> m12_183  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_182 -> m12_183  [key=0, style=solid];
m12_182 -> m12_160  [key=2, style=dotted];
m12_182 -> m12_161  [key=2, style=dotted];
m12_183 -> m12_184  [key=0, style=solid];
m12_183 -> m12_54  [key=2, style=dotted];
m12_184 -> m12_185  [key=0, style=solid];
m12_185 -> m12_180  [color=blue, key=0, style=bold];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_16  [key=2, style=dotted];
m12_8 -> m12_17  [key=2, style=dotted];
m12_539 -> m12_540  [key=0, style=solid];
m12_540 -> m12_541  [key=0, style=solid];
m12_540 -> m12_542  [key=0, style=solid];
m12_541 -> m12_543  [key=0, style=solid];
m12_542 -> m12_543  [key=0, style=solid];
m12_542 -> m12_49  [key=2, style=dotted];
m12_543 -> m12_539  [color=blue, key=0, style=bold];
m12_505 -> m12_700  [key=0, style=solid];
m12_505 -> m12_709  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderType", style=dashed];
m12_700 -> m12_701  [key=0, style=solid];
m12_700 -> m12_703  [key=0, style=solid];
m12_700 -> m12_705  [key=0, style=solid];
m12_700 -> m12_707  [key=0, style=solid];
m12_700 -> m12_709  [key=0, style=solid];
m12_709 -> m12_710  [key=0, style=solid];
m12_709 -> m12_658  [key=2, style=dotted];
m12_701 -> m12_702  [key=0, style=solid];
m12_703 -> m12_704  [key=0, style=solid];
m12_705 -> m12_706  [key=0, style=solid];
m12_707 -> m12_708  [key=0, style=solid];
m12_702 -> m12_710  [key=0, style=solid];
m12_704 -> m12_710  [key=0, style=solid];
m12_706 -> m12_710  [key=0, style=solid];
m12_708 -> m12_710  [key=0, style=solid];
m12_710 -> m12_505  [color=blue, key=0, style=bold];
m12_626 -> m12_841  [key=0, style=solid];
m12_841 -> m12_842  [key=0, style=solid];
m12_841 -> m12_843  [key=0, style=solid];
m12_842 -> m12_844  [key=0, style=solid];
m12_843 -> m12_844  [key=0, style=solid];
m12_843 -> m12_845  [key=2, style=dotted];
m12_844 -> m12_626  [color=blue, key=0, style=bold];
m12_282 -> m12_283  [key=0, style=solid];
m12_283 -> m12_284  [key=0, style=solid];
m12_283 -> m12_121  [key=2, style=dotted];
m12_284 -> m12_285  [key=0, style=solid];
m12_284 -> m12_54  [key=2, style=dotted];
m12_285 -> m12_282  [color=blue, key=0, style=bold];
m12_694 -> m12_695  [key=0, style=solid];
m12_46 -> m12_47  [key=0, style=solid];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_49  [key=2, style=dotted];
m12_48 -> m12_46  [color=blue, key=0, style=bold];
m12_50 -> m12_51  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_53  [key=2, style=dotted];
m12_52 -> m12_50  [color=blue, key=0, style=bold];
m12_403 -> m12_404  [key=0, style=solid];
m12_406 -> m12_407  [key=0, style=solid];
m12_404 -> m12_405  [key=0, style=solid];
m12_405 -> m12_403  [color=blue, key=0, style=bold];
m12_407 -> m12_408  [key=0, style=solid];
m12_408 -> m12_406  [color=blue, key=0, style=bold];
m12_464 -> m12_465  [key=0, style=solid];
m12_464 -> m12_464  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<long, QuantConnect.Brokerages.Tradier.TradierOrder>", style=dashed];
m12_463 -> m12_464  [key=0, style=solid];
m12_465 -> m12_463  [color=blue, key=0, style=bold];
m12_510 -> m12_511  [key=0, style=solid];
m12_514 -> m12_515  [key=0, style=solid];
m12_511 -> m12_512  [key=0, style=solid];
m12_511 -> m12_513  [key=2, style=dotted];
m12_512 -> m12_510  [color=blue, key=0, style=bold];
m12_515 -> m12_516  [key=0, style=solid];
m12_516 -> m12_514  [color=blue, key=0, style=bold];
m12_586 -> m12_587  [key=0, style=solid];
m12_589 -> m12_590  [key=0, style=solid];
m12_590 -> m12_591  [key=0, style=solid];
m12_590 -> m12_180  [key=2, style=dotted];
m12_590 -> m12_590  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m12_590 -> m12_592  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m12_590 -> m12_593  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m12_598 -> m12_599  [key=0, style=solid];
m12_603 -> m12_604  [key=0, style=solid];
m12_587 -> m12_588  [key=0, style=solid];
m12_588 -> m12_586  [color=blue, key=0, style=bold];
m12_591 -> m12_592  [key=0, style=solid];
m12_591 -> m12_593  [key=0, style=solid];
m12_592 -> m12_594  [key=0, style=solid];
m12_592 -> m12_596  [key=2, style=dotted];
m12_592 -> m12_128  [key=2, style=dotted];
m12_592 -> m12_592  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m12_593 -> m12_594  [key=0, style=solid];
m12_593 -> m12_582  [key=2, style=dotted];
m12_593 -> m12_593  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m12_594 -> m12_595  [key=0, style=solid];
m12_594 -> m12_597  [key=2, style=dotted];
m12_594 -> m12_594  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m12_595 -> m12_589  [color=blue, key=0, style=bold];
m12_599 -> m12_600  [key=0, style=solid];
m12_599 -> m12_601  [key=2, style=dotted];
m12_599 -> m12_602  [key=2, style=dotted];
m12_600 -> m12_598  [color=blue, key=0, style=bold];
m12_604 -> m12_605  [key=0, style=solid];
m12_605 -> m12_603  [color=blue, key=0, style=bold];
m12_634 -> m12_635  [key=0, style=solid];
m12_634 -> m12_638  [key=2, style=dotted];
m12_629 -> m12_630  [key=0, style=solid];
m12_629 -> m12_149  [key=2, style=dotted];
m12_632 -> m12_636  [key=0, style=solid];
m12_632 -> m12_385  [key=2, style=dotted];
m12_636 -> m12_637  [key=0, style=solid];
m12_636 -> m12_597  [key=2, style=dotted];
m12_630 -> m12_631  [key=0, style=solid];
m12_630 -> m12_461  [key=2, style=dotted];
m12_630 -> m12_632  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_628 -> m12_629  [key=0, style=solid];
m12_631 -> m12_632  [key=0, style=solid];
m12_631 -> m12_633  [key=0, style=solid];
m12_631 -> m12_462  [key=2, style=dotted];
m12_633 -> m12_634  [key=0, style=solid];
m12_633 -> m12_128  [key=2, style=dotted];
m12_635 -> m12_636  [key=0, style=solid];
m12_635 -> m12_87  [key=2, style=dotted];
m12_635 -> m12_88  [key=2, style=dotted];
m12_637 -> m12_628  [color=blue, key=0, style=bold];
m12_695 -> m12_696  [key=0, style=solid];
m12_695 -> m12_180  [key=2, style=dotted];
m12_698 -> m12_699  [key=0, style=solid];
m12_698 -> m12_180  [key=2, style=dotted];
m12_697 -> m12_698  [key=0, style=solid];
m12_696 -> m12_694  [color=blue, key=0, style=bold];
m12_699 -> m12_697  [color=blue, key=0, style=bold];
m12_237 -> m12_238  [key=0, style=solid];
m12_237 -> m12_239  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_237 -> m12_240  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals", style=dashed];
m12_237 -> m12_241  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_237 -> m12_242  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_238 -> m12_239  [key=0, style=solid];
m12_238 -> m12_121  [key=2, style=dotted];
m12_238 -> m12_240  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_238 -> m12_241  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_238 -> m12_242  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_238 -> m12_243  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_239 -> m12_240  [key=0, style=solid];
m12_239 -> m12_123  [key=2, style=dotted];
m12_240 -> m12_241  [key=0, style=solid];
m12_240 -> m12_204  [key=2, style=dotted];
m12_240 -> m12_123  [key=2, style=dotted];
m12_241 -> m12_242  [key=0, style=solid];
m12_241 -> m12_246  [key=2, style=dotted];
m12_241 -> m12_123  [key=2, style=dotted];
m12_242 -> m12_243  [key=0, style=solid];
m12_242 -> m12_246  [key=2, style=dotted];
m12_242 -> m12_123  [key=2, style=dotted];
m12_243 -> m12_244  [key=0, style=solid];
m12_243 -> m12_54  [key=2, style=dotted];
m12_244 -> m12_245  [key=0, style=solid];
m12_245 -> m12_237  [color=blue, key=0, style=bold];
m12_354 -> m12_355  [key=0, style=solid];
m12_354 -> m12_356  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_354 -> m12_357  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_354 -> m12_359  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_355 -> m12_356  [key=0, style=solid];
m12_356 -> m12_357  [key=0, style=solid];
m12_356 -> m12_362  [key=2, style=dotted];
m12_357 -> m12_358  [key=0, style=solid];
m12_357 -> m12_360  [key=0, style=solid];
m12_357 -> m12_363  [key=2, style=dotted];
m12_357 -> m12_86  [key=2, style=dotted];
m12_359 -> m12_360  [key=0, style=solid];
m12_359 -> m12_128  [key=2, style=dotted];
m12_358 -> m12_359  [key=0, style=solid];
m12_360 -> m12_361  [key=0, style=solid];
m12_361 -> m12_354  [color=blue, key=0, style=bold];
m12_186 -> m12_187  [key=0, style=solid];
m12_186 -> m12_188  [color=darkseagreen4, key=1, label=long, style=dashed];
m12_186 -> m12_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderClass", style=dashed];
m12_186 -> m12_190  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_186 -> m12_191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderDuration", style=dashed];
m12_186 -> m12_192  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderType", style=dashed];
m12_186 -> m12_193  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_186 -> m12_194  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderDirection", style=dashed];
m12_186 -> m12_195  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_186 -> m12_196  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_186 -> m12_197  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_186 -> m12_198  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_186 -> m12_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_186 -> m12_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_121  [key=2, style=dotted];
m12_187 -> m12_189  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_187 -> m12_190  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_187 -> m12_191  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_187 -> m12_192  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_187 -> m12_193  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_187 -> m12_194  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_187 -> m12_196  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_187 -> m12_198  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_187 -> m12_200  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_187 -> m12_201  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_160  [key=2, style=dotted];
m12_188 -> m12_161  [key=2, style=dotted];
m12_189 -> m12_190  [key=0, style=solid];
m12_189 -> m12_204  [key=2, style=dotted];
m12_189 -> m12_123  [key=2, style=dotted];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_123  [key=2, style=dotted];
m12_191 -> m12_192  [key=0, style=solid];
m12_191 -> m12_204  [key=2, style=dotted];
m12_191 -> m12_123  [key=2, style=dotted];
m12_192 -> m12_193  [key=0, style=solid];
m12_192 -> m12_204  [key=2, style=dotted];
m12_192 -> m12_123  [key=2, style=dotted];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_123  [key=2, style=dotted];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_204  [key=2, style=dotted];
m12_194 -> m12_123  [key=2, style=dotted];
m12_195 -> m12_196  [key=0, style=solid];
m12_195 -> m12_197  [key=0, style=solid];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_205  [key=2, style=dotted];
m12_196 -> m12_123  [key=2, style=dotted];
m12_197 -> m12_198  [key=0, style=solid];
m12_197 -> m12_199  [key=0, style=solid];
m12_198 -> m12_199  [key=0, style=solid];
m12_198 -> m12_205  [key=2, style=dotted];
m12_198 -> m12_123  [key=2, style=dotted];
m12_199 -> m12_200  [key=0, style=solid];
m12_199 -> m12_201  [key=0, style=solid];
m12_200 -> m12_201  [key=0, style=solid];
m12_200 -> m12_123  [key=2, style=dotted];
m12_201 -> m12_202  [key=0, style=solid];
m12_201 -> m12_201  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_202 -> m12_203  [key=0, style=solid];
m12_202 -> m12_54  [key=2, style=dotted];
m12_203 -> m12_186  [color=blue, key=0, style=bold];
m12_458 -> m12_857  [key=0, style=solid];
m12_857 -> m12_858  [key=0, style=solid];
m12_857 -> m12_860  [key=0, style=solid];
m12_858 -> m12_859  [key=0, style=solid];
m12_860 -> m12_861  [key=0, style=solid];
m12_860 -> m12_863  [key=0, style=solid];
m12_859 -> m12_863  [key=0, style=solid];
m12_861 -> m12_862  [key=0, style=solid];
m12_862 -> m12_863  [key=0, style=solid];
m12_863 -> m12_458  [color=blue, key=0, style=bold];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_13  [key=2, style=dotted];
m12_5 -> m12_7  [key=2, style=dotted];
m12_5 -> m12_8  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_14  [key=2, style=dotted];
m12_6 -> m12_4  [color=blue, key=0, style=bold];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_14  [key=2, style=dotted];
m12_18 -> m12_10  [color=green, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m12_18 -> m12_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m12_18 -> m12_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m12_18 -> m12_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.OrderTestParameters", style=dashed];
m12_639 -> m12_640  [key=0, style=solid];
m12_640 -> m12_641  [key=0, style=solid];
m12_641 -> m12_639  [color=blue, key=0, style=bold];
m12_466 -> m12_467  [key=0, style=solid];
m12_466 -> m12_468  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_466 -> m12_471  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_466 -> m12_473  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_466 -> m12_477  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_466 -> m12_479  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_466 -> m12_483  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_466 -> m12_484  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_466 -> m12_485  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_466 -> m12_486  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_467 -> m12_468  [key=0, style=solid];
m12_467 -> m12_149  [key=2, style=dotted];
m12_468 -> m12_469  [key=0, style=solid];
m12_468 -> m12_471  [key=0, style=solid];
m12_468 -> m12_501  [key=2, style=dotted];
m12_471 -> m12_472  [key=0, style=solid];
m12_471 -> m12_383  [key=2, style=dotted];
m12_471 -> m12_398  [key=2, style=dotted];
m12_471 -> m12_502  [key=2, style=dotted];
m12_471 -> m12_510  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_471 -> m12_514  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_471 -> m12_475  [color=darkseagreen4, key=1, label=activeOrder, style=dashed];
m12_471 -> m12_487  [color=darkseagreen4, key=1, label=activeOrder, style=dashed];
m12_471 -> m12_490  [color=darkseagreen4, key=1, label=activeOrder, style=dashed];
m12_473 -> m12_474  [key=0, style=solid];
m12_473 -> m12_503  [key=2, style=dotted];
m12_473 -> m12_149  [key=2, style=dotted];
m12_477 -> m12_478  [key=0, style=solid];
m12_477 -> m12_479  [key=0, style=solid];
m12_477 -> m12_504  [key=2, style=dotted];
m12_477 -> m12_492  [color=darkseagreen4, key=1, label=contingent, style=dashed];
m12_477 -> m12_493  [color=darkseagreen4, key=1, label=contingent, style=dashed];
m12_479 -> m12_480  [key=0, style=solid];
m12_479 -> m12_483  [key=0, style=solid];
m12_483 -> m12_484  [key=0, style=solid];
m12_483 -> m12_505  [key=2, style=dotted];
m12_483 -> m12_487  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m12_483 -> m12_494  [color=darkseagreen4, key=1, label=orderType, style=dashed];
m12_484 -> m12_485  [key=0, style=solid];
m12_484 -> m12_506  [key=2, style=dotted];
m12_484 -> m12_487  [color=darkseagreen4, key=1, label=orderDuration, style=dashed];
m12_484 -> m12_495  [color=darkseagreen4, key=1, label=orderDuration, style=dashed];
m12_485 -> m12_486  [key=0, style=solid];
m12_485 -> m12_507  [key=2, style=dotted];
m12_485 -> m12_487  [color=darkseagreen4, key=1, label=limitPrice, style=dashed];
m12_485 -> m12_496  [color=darkseagreen4, key=1, label=limitPrice, style=dashed];
m12_486 -> m12_487  [key=0, style=solid];
m12_486 -> m12_508  [key=2, style=dotted];
m12_486 -> m12_497  [color=darkseagreen4, key=1, label=stopPrice, style=dashed];
m12_469 -> m12_470  [key=0, style=solid];
m12_469 -> m12_149  [key=2, style=dotted];
m12_470 -> m12_500  [key=0, style=solid];
m12_472 -> m12_473  [key=0, style=solid];
m12_472 -> m12_475  [key=0, style=solid];
m12_475 -> m12_476  [key=0, style=solid];
m12_475 -> m12_479  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m12_487 -> m12_488  [key=0, style=solid];
m12_487 -> m12_509  [key=2, style=dotted];
m12_487 -> m12_489  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_490 -> m12_491  [key=0, style=solid];
m12_490 -> m12_91  [key=2, style=dotted];
m12_490 -> m12_88  [key=2, style=dotted];
m12_474 -> m12_500  [key=0, style=solid];
m12_476 -> m12_477  [key=0, style=solid];
m12_478 -> m12_479  [key=0, style=solid];
m12_492 -> m12_493  [key=0, style=solid];
m12_492 -> m12_499  [key=0, style=solid];
m12_493 -> m12_494  [key=0, style=solid];
m12_493 -> m12_499  [key=0, style=solid];
m12_493 -> m12_495  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m12_493 -> m12_496  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m12_493 -> m12_497  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m12_493 -> m12_498  [color=darkseagreen4, key=1, label=orderRequest, style=dashed];
m12_480 -> m12_481  [key=0, style=solid];
m12_480 -> m12_149  [key=2, style=dotted];
m12_481 -> m12_482  [key=0, style=solid];
m12_481 -> m12_87  [key=2, style=dotted];
m12_481 -> m12_88  [key=2, style=dotted];
m12_482 -> m12_500  [key=0, style=solid];
m12_494 -> m12_495  [key=0, style=solid];
m12_495 -> m12_496  [key=0, style=solid];
m12_496 -> m12_497  [key=0, style=solid];
m12_497 -> m12_498  [key=0, style=solid];
m12_488 -> m12_489  [key=0, style=solid];
m12_488 -> m12_492  [key=0, style=solid];
m12_488 -> m12_462  [key=2, style=dotted];
m12_489 -> m12_490  [key=0, style=solid];
m12_489 -> m12_236  [key=2, style=dotted];
m12_491 -> m12_500  [key=0, style=solid];
m12_499 -> m12_500  [key=0, style=solid];
m12_498 -> m12_493  [key=0, style=solid];
m12_498 -> m12_458  [key=2, style=dotted];
m12_500 -> m12_466  [color=blue, key=0, style=bold];
m12_736 -> m12_737  [key=0, style=solid];
m12_736 -> m12_753  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderStatus", style=dashed];
m12_737 -> m12_738  [key=0, style=solid];
m12_737 -> m12_740  [key=0, style=solid];
m12_737 -> m12_743  [key=0, style=solid];
m12_737 -> m12_745  [key=0, style=solid];
m12_737 -> m12_747  [key=0, style=solid];
m12_737 -> m12_749  [key=0, style=solid];
m12_737 -> m12_751  [key=0, style=solid];
m12_737 -> m12_753  [key=0, style=solid];
m12_753 -> m12_754  [key=0, style=solid];
m12_753 -> m12_658  [key=2, style=dotted];
m12_738 -> m12_739  [key=0, style=solid];
m12_740 -> m12_741  [key=0, style=solid];
m12_743 -> m12_744  [key=0, style=solid];
m12_745 -> m12_746  [key=0, style=solid];
m12_747 -> m12_748  [key=0, style=solid];
m12_749 -> m12_750  [key=0, style=solid];
m12_751 -> m12_752  [key=0, style=solid];
m12_739 -> m12_754  [key=0, style=solid];
m12_741 -> m12_742  [key=0, style=solid];
m12_742 -> m12_754  [key=0, style=solid];
m12_744 -> m12_754  [key=0, style=solid];
m12_746 -> m12_754  [key=0, style=solid];
m12_748 -> m12_754  [key=0, style=solid];
m12_750 -> m12_754  [key=0, style=solid];
m12_752 -> m12_754  [key=0, style=solid];
m12_754 -> m12_736  [color=blue, key=0, style=bold];
m12_453 -> m12_517  [key=0, style=solid];
m12_453 -> m12_518  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_453 -> m12_521  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_453 -> m12_528  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_517 -> m12_518  [key=0, style=solid];
m12_517 -> m12_149  [key=2, style=dotted];
m12_518 -> m12_519  [key=0, style=solid];
m12_518 -> m12_521  [key=0, style=solid];
m12_518 -> m12_501  [key=2, style=dotted];
m12_521 -> m12_522  [key=0, style=solid];
m12_521 -> m12_529  [key=0, style=solid];
m12_521 -> m12_527  [color=darkseagreen4, key=1, label=orderID, style=dashed];
m12_528 -> m12_521  [key=0, style=solid];
m12_528 -> m12_531  [key=2, style=dotted];
m12_528 -> m12_532  [key=2, style=dotted];
m12_519 -> m12_520  [key=0, style=solid];
m12_519 -> m12_149  [key=2, style=dotted];
m12_520 -> m12_530  [key=0, style=solid];
m12_522 -> m12_523  [key=0, style=solid];
m12_522 -> m12_220  [key=2, style=dotted];
m12_522 -> m12_525  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_529 -> m12_530  [key=0, style=solid];
m12_527 -> m12_528  [key=0, style=solid];
m12_527 -> m12_452  [key=2, style=dotted];
m12_523 -> m12_524  [key=0, style=solid];
m12_523 -> m12_525  [key=0, style=solid];
m12_525 -> m12_526  [key=0, style=solid];
m12_525 -> m12_521  [key=0, style=solid];
m12_525 -> m12_462  [key=2, style=dotted];
m12_524 -> m12_530  [key=0, style=solid];
m12_526 -> m12_527  [key=0, style=solid];
m12_530 -> m12_453  [color=blue, key=0, style=bold];
m12_624 -> m12_719  [key=0, style=solid];
m12_719 -> m12_720  [key=0, style=solid];
m12_719 -> m12_722  [key=0, style=solid];
m12_719 -> m12_724  [key=0, style=solid];
m12_719 -> m12_727  [key=0, style=solid];
m12_719 -> m12_730  [key=0, style=solid];
m12_719 -> m12_732  [key=0, style=solid];
m12_719 -> m12_734  [key=0, style=solid];
m12_720 -> m12_721  [key=0, style=solid];
m12_722 -> m12_723  [key=0, style=solid];
m12_724 -> m12_725  [key=0, style=solid];
m12_727 -> m12_728  [key=0, style=solid];
m12_730 -> m12_731  [key=0, style=solid];
m12_732 -> m12_733  [key=0, style=solid];
m12_734 -> m12_735  [key=0, style=solid];
m12_734 -> m12_718  [key=2, style=dotted];
m12_721 -> m12_735  [key=0, style=solid];
m12_723 -> m12_735  [key=0, style=solid];
m12_725 -> m12_726  [key=0, style=solid];
m12_726 -> m12_735  [key=0, style=solid];
m12_728 -> m12_729  [key=0, style=solid];
m12_729 -> m12_735  [key=0, style=solid];
m12_731 -> m12_735  [key=0, style=solid];
m12_733 -> m12_735  [key=0, style=solid];
m12_735 -> m12_624  [color=blue, key=0, style=bold];
m12_260 -> m12_261  [key=0, style=solid];
m12_260 -> m12_262  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_260 -> m12_263  [color=darkseagreen4, key=1, label=int, style=dashed];
m12_261 -> m12_262  [key=0, style=solid];
m12_261 -> m12_121  [key=2, style=dotted];
m12_261 -> m12_263  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_261 -> m12_264  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_262 -> m12_263  [key=0, style=solid];
m12_262 -> m12_122  [key=2, style=dotted];
m12_262 -> m12_123  [key=2, style=dotted];
m12_263 -> m12_264  [key=0, style=solid];
m12_263 -> m12_122  [key=2, style=dotted];
m12_263 -> m12_123  [key=2, style=dotted];
m12_264 -> m12_265  [key=0, style=solid];
m12_264 -> m12_54  [key=2, style=dotted];
m12_265 -> m12_266  [key=0, style=solid];
m12_266 -> m12_260  [color=blue, key=0, style=bold];
m12_286 -> m12_287  [key=0, style=solid];
m12_286 -> m12_292  [color=crimson, key=0, style=bold];
m12_286 -> m12_314  [color=crimson, key=0, style=bold];
m12_286 -> m12_325  [color=crimson, key=0, style=bold];
m12_286 -> m12_331  [color=crimson, key=0, style=bold];
m12_286 -> m12_288  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m12_287 -> m12_288  [key=0, style=solid];
m12_292 -> m12_293  [key=0, style=solid];
m12_314 -> m12_315  [key=0, style=solid];
m12_325 -> m12_326  [key=0, style=solid];
m12_331 -> m12_319  [key=0, style=solid];
m12_288 -> m12_289  [key=0, style=solid];
m12_288 -> m12_236  [key=2, style=dotted];
m12_288 -> m12_299  [color=darkseagreen4, key=1, label=symbolJoined, style=dashed];
m12_289 -> m12_290  [key=0, style=solid];
m12_289 -> m12_282  [key=2, style=dotted];
m12_289 -> m12_293  [color=darkseagreen4, key=1, label=session, style=dashed];
m12_289 -> m12_296  [color=darkseagreen4, key=1, label=session, style=dashed];
m12_289 -> m12_299  [color=darkseagreen4, key=1, label=session, style=dashed];
m12_299 -> m12_300  [key=0, style=solid];
m12_290 -> m12_291  [key=0, style=solid];
m12_290 -> m12_293  [key=0, style=solid];
m12_293 -> m12_294  [key=0, style=solid];
m12_293 -> m12_149  [key=2, style=dotted];
m12_296 -> m12_297  [key=0, style=solid];
m12_296 -> m12_333  [key=2, style=dotted];
m12_296 -> m12_298  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_296 -> m12_301  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_296 -> m12_302  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_296 -> m12_303  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_296 -> m12_304  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_296 -> m12_311  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_291 -> m12_292  [key=0, style=solid];
m12_291 -> m12_128  [key=2, style=dotted];
m12_294 -> m12_295  [key=0, style=solid];
m12_295 -> m12_296  [key=0, style=solid];
m12_297 -> m12_298  [key=0, style=solid];
m12_298 -> m12_299  [key=0, style=solid];
m12_298 -> m12_334  [key=2, style=dotted];
m12_301 -> m12_302  [key=0, style=solid];
m12_302 -> m12_303  [key=0, style=solid];
m12_303 -> m12_304  [key=0, style=solid];
m12_304 -> m12_305  [key=0, style=solid];
m12_304 -> m12_336  [key=2, style=dotted];
m12_311 -> m12_312  [key=0, style=solid];
m12_311 -> m12_338  [key=2, style=dotted];
m12_300 -> m12_301  [key=0, style=solid];
m12_300 -> m12_335  [key=2, style=dotted];
m12_300 -> m12_303  [color=darkseagreen4, key=1, label=encodedData, style=dashed];
m12_300 -> m12_305  [color=darkseagreen4, key=1, label=encodedData, style=dashed];
m12_305 -> m12_306  [key=0, style=solid];
m12_305 -> m12_309  [key=0, style=solid];
m12_305 -> m12_337  [key=2, style=dotted];
m12_306 -> m12_307  [key=0, style=solid];
m12_309 -> m12_294  [key=0, style=solid];
m12_309 -> m12_310  [key=0, style=solid];
m12_307 -> m12_308  [key=0, style=solid];
m12_307 -> m12_128  [key=2, style=dotted];
m12_308 -> m12_309  [key=0, style=solid];
m12_310 -> m12_311  [key=0, style=solid];
m12_310 -> m12_149  [key=2, style=dotted];
m12_312 -> m12_313  [key=0, style=solid];
m12_312 -> m12_339  [key=2, style=dotted];
m12_312 -> m12_315  [color=darkseagreen4, key=1, label=tradierStream, style=dashed];
m12_313 -> m12_314  [key=0, style=solid];
m12_313 -> m12_315  [key=0, style=solid];
m12_315 -> m12_316  [key=0, style=solid];
m12_315 -> m12_340  [key=2, style=dotted];
m12_316 -> m12_317  [key=0, style=solid];
m12_316 -> m12_341  [key=2, style=dotted];
m12_316 -> m12_318  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_317 -> m12_318  [key=0, style=solid];
m12_317 -> m12_342  [key=2, style=dotted];
m12_317 -> m12_327  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m12_318 -> m12_319  [key=0, style=solid];
m12_318 -> m12_318  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_318 -> m12_321  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_318 -> m12_327  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_327 -> m12_328  [key=0, style=solid];
m12_327 -> m12_330  [key=0, style=solid];
m12_327 -> m12_86  [key=2, style=dotted];
m12_327 -> m12_331  [color=darkseagreen4, key=1, label=tsd, style=dashed];
m12_319 -> m12_320  [key=0, style=solid];
m12_319 -> m12_332  [key=0, style=solid];
m12_321 -> m12_322  [key=0, style=solid];
m12_321 -> m12_324  [key=0, style=solid];
m12_321 -> m12_343  [key=2, style=dotted];
m12_320 -> m12_321  [key=0, style=solid];
m12_322 -> m12_323  [key=0, style=solid];
m12_324 -> m12_325  [key=0, style=solid];
m12_324 -> m12_326  [key=0, style=solid];
m12_323 -> m12_332  [key=0, style=solid];
m12_323 -> m12_128  [key=2, style=dotted];
m12_326 -> m12_327  [key=0, style=solid];
m12_328 -> m12_329  [key=0, style=solid];
m12_330 -> m12_331  [key=0, style=solid];
m12_330 -> m12_319  [key=0, style=solid];
m12_329 -> m12_330  [key=0, style=solid];
m12_329 -> m12_128  [key=2, style=dotted];
m12_332 -> m12_286  [color=blue, key=0, style=bold];
m12_508 -> m12_821  [key=0, style=solid];
m12_508 -> m12_824  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_821 -> m12_822  [key=0, style=solid];
m12_821 -> m12_823  [color=darkseagreen4, key=1, label=stopm, style=dashed];
m12_824 -> m12_825  [key=0, style=solid];
m12_824 -> m12_826  [color=darkseagreen4, key=1, label=stopl, style=dashed];
m12_822 -> m12_823  [key=0, style=solid];
m12_822 -> m12_824  [key=0, style=solid];
m12_823 -> m12_828  [key=0, style=solid];
m12_825 -> m12_826  [key=0, style=solid];
m12_825 -> m12_827  [key=0, style=solid];
m12_826 -> m12_828  [key=0, style=solid];
m12_827 -> m12_828  [key=0, style=solid];
m12_828 -> m12_508  [color=blue, key=0, style=bold];
m12_582 -> m12_606  [key=0, style=solid];
m12_582 -> m12_607  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_582 -> m12_608  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_582 -> m12_609  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_582 -> m12_619  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_582 -> m12_634  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_582 -> m12_621  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_582 -> m12_622  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_606 -> m12_607  [key=0, style=solid];
m12_606 -> m12_621  [key=0, style=solid];
m12_606 -> m12_624  [key=2, style=dotted];
m12_607 -> m12_608  [key=0, style=solid];
m12_607 -> m12_450  [key=2, style=dotted];
m12_607 -> m12_612  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_607 -> m12_613  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_607 -> m12_616  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_607 -> m12_619  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_607 -> m12_629  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_607 -> m12_632  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_607 -> m12_634  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_607 -> m12_636  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_608 -> m12_609  [key=0, style=solid];
m12_608 -> m12_531  [key=2, style=dotted];
m12_608 -> m12_624  [key=2, style=dotted];
m12_608 -> m12_610  [color=darkseagreen4, key=1, label=fill, style=dashed];
m12_608 -> m12_612  [color=darkseagreen4, key=1, label=fill, style=dashed];
m12_608 -> m12_618  [color=darkseagreen4, key=1, label=fill, style=dashed];
m12_608 -> m12_620  [color=darkseagreen4, key=1, label=fill, style=dashed];
m12_609 -> m12_610  [key=0, style=solid];
m12_609 -> m12_611  [key=0, style=solid];
m12_609 -> m12_625  [key=2, style=dotted];
m12_619 -> m12_620  [key=0, style=solid];
m12_619 -> m12_584  [key=2, style=dotted];
m12_619 -> m12_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_621 -> m12_622  [key=0, style=solid];
m12_621 -> m12_623  [key=0, style=solid];
m12_621 -> m12_627  [key=2, style=dotted];
m12_622 -> m12_623  [key=0, style=solid];
m12_622 -> m12_452  [key=2, style=dotted];
m12_612 -> m12_613  [key=0, style=solid];
m12_612 -> m12_620  [key=0, style=solid];
m12_612 -> m12_504  [key=2, style=dotted];
m12_612 -> m12_614  [color=darkseagreen4, key=1, label=contingent, style=dashed];
m12_612 -> m12_615  [color=darkseagreen4, key=1, label=contingent, style=dashed];
m12_613 -> m12_614  [key=0, style=solid];
m12_613 -> m12_620  [key=0, style=solid];
m12_613 -> m12_583  [key=2, style=dotted];
m12_616 -> m12_617  [key=0, style=solid];
m12_616 -> m12_452  [key=2, style=dotted];
m12_610 -> m12_611  [key=0, style=solid];
m12_618 -> m12_619  [key=0, style=solid];
m12_620 -> m12_621  [key=0, style=solid];
m12_620 -> m12_532  [key=2, style=dotted];
m12_611 -> m12_612  [key=0, style=solid];
m12_614 -> m12_615  [key=0, style=solid];
m12_614 -> m12_626  [key=2, style=dotted];
m12_614 -> m12_617  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_614 -> m12_619  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_614 -> m12_630  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_615 -> m12_616  [key=0, style=solid];
m12_615 -> m12_617  [key=0, style=solid];
m12_617 -> m12_618  [key=0, style=solid];
m12_617 -> m12_620  [key=0, style=solid];
m12_623 -> m12_582  [color=blue, key=0, style=bold];
m12_388 -> m12_389  [key=0, style=solid];
m12_389 -> m12_390  [key=0, style=solid];
m12_389 -> m12_140  [key=2, style=dotted];
m12_389 -> m12_398  [key=2, style=dotted];
m12_389 -> m12_399  [key=2, style=dotted];
m12_389 -> m12_392  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m12_389 -> m12_396  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m12_390 -> m12_391  [key=0, style=solid];
m12_390 -> m12_398  [key=2, style=dotted];
m12_390 -> m12_399  [key=2, style=dotted];
m12_390 -> m12_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_392 -> m12_393  [key=0, style=solid];
m12_392 -> m12_396  [key=0, style=solid];
m12_392 -> m12_394  [color=darkseagreen4, key=1, label=holding, style=dashed];
m12_392 -> m12_395  [color=darkseagreen4, key=1, label=holding, style=dashed];
m12_396 -> m12_397  [key=0, style=solid];
m12_391 -> m12_392  [key=0, style=solid];
m12_391 -> m12_400  [key=2, style=dotted];
m12_391 -> m12_401  [key=2, style=dotted];
m12_391 -> m12_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_391 -> m12_394  [color=darkseagreen4, key=1, label=quotes, style=dashed];
m12_394 -> m12_395  [key=0, style=solid];
m12_394 -> m12_392  [key=0, style=solid];
m12_394 -> m12_402  [key=2, style=dotted];
m12_393 -> m12_394  [key=0, style=solid];
m12_395 -> m12_392  [key=0, style=solid];
m12_395 -> m12_395  [color=darkseagreen4, key=1, label=holding, style=dashed];
m12_397 -> m12_388  [color=blue, key=0, style=bold];
m12_659 -> m12_660  [key=0, style=solid];
m12_659 -> m12_662  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_664  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_669  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_695  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_671  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_672  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_698  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_673  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_674  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_675  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_677  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_678  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_679  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_680  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_659 -> m12_683  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_660 -> m12_661  [key=0, style=solid];
m12_662 -> m12_663  [key=0, style=solid];
m12_662 -> m12_665  [key=0, style=solid];
m12_662 -> m12_667  [key=0, style=solid];
m12_662 -> m12_670  [key=0, style=solid];
m12_662 -> m12_673  [key=0, style=solid];
m12_664 -> m12_674  [key=0, style=solid];
m12_664 -> m12_686  [key=2, style=dotted];
m12_669 -> m12_674  [key=0, style=solid];
m12_669 -> m12_689  [key=2, style=dotted];
m12_669 -> m12_694  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_671 -> m12_672  [key=0, style=solid];
m12_671 -> m12_690  [key=2, style=dotted];
m12_671 -> m12_698  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_671 -> m12_674  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_671 -> m12_675  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_671 -> m12_676  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_671 -> m12_677  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_671 -> m12_678  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_671 -> m12_679  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_671 -> m12_682  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_671 -> m12_683  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_671 -> m12_684  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_672 -> m12_674  [key=0, style=solid];
m12_672 -> m12_689  [key=2, style=dotted];
m12_672 -> m12_697  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_672 -> m12_685  [color=darkseagreen4, key=1, label="out System.Threading.Tasks.Task", style=dashed];
m12_673 -> m12_685  [key=0, style=solid];
m12_673 -> m12_691  [key=2, style=dotted];
m12_674 -> m12_675  [key=0, style=solid];
m12_675 -> m12_676  [key=0, style=solid];
m12_675 -> m12_692  [key=2, style=dotted];
m12_677 -> m12_678  [key=0, style=solid];
m12_677 -> m12_624  [key=2, style=dotted];
m12_678 -> m12_679  [key=0, style=solid];
m12_678 -> m12_385  [key=2, style=dotted];
m12_679 -> m12_680  [key=0, style=solid];
m12_679 -> m12_693  [key=2, style=dotted];
m12_680 -> m12_681  [key=0, style=solid];
m12_680 -> m12_450  [key=2, style=dotted];
m12_680 -> m12_682  [color=darkseagreen4, key=1, label=orderByBrokerageId, style=dashed];
m12_683 -> m12_684  [key=0, style=solid];
m12_661 -> m12_662  [key=0, style=solid];
m12_663 -> m12_664  [key=0, style=solid];
m12_665 -> m12_666  [key=0, style=solid];
m12_667 -> m12_668  [key=0, style=solid];
m12_670 -> m12_671  [key=0, style=solid];
m12_666 -> m12_674  [key=0, style=solid];
m12_666 -> m12_687  [key=2, style=dotted];
m12_668 -> m12_669  [key=0, style=solid];
m12_668 -> m12_688  [key=2, style=dotted];
m12_668 -> m12_695  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_676 -> m12_677  [key=0, style=solid];
m12_682 -> m12_683  [key=0, style=solid];
m12_684 -> m12_685  [key=0, style=solid];
m12_681 -> m12_682  [key=0, style=solid];
m12_681 -> m12_683  [key=0, style=solid];
m12_685 -> m12_659  [color=blue, key=0, style=bold];
m12_459 -> m12_837  [key=0, style=solid];
m12_459 -> m12_838  [color=darkseagreen4, key=1, label="params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[]", style=dashed];
m12_837 -> m12_838  [key=0, style=solid];
m12_838 -> m12_839  [key=0, style=solid];
m12_838 -> m12_840  [key=2, style=dotted];
m12_839 -> m12_459  [color=blue, key=0, style=bold];
m12_247 -> m12_248  [key=0, style=solid];
m12_247 -> m12_249  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_247 -> m12_250  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_247 -> m12_251  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m12_247 -> m12_252  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals", style=dashed];
m12_248 -> m12_249  [key=0, style=solid];
m12_248 -> m12_121  [key=2, style=dotted];
m12_248 -> m12_250  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_248 -> m12_251  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_248 -> m12_252  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_248 -> m12_253  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_249 -> m12_250  [key=0, style=solid];
m12_249 -> m12_123  [key=2, style=dotted];
m12_250 -> m12_251  [key=0, style=solid];
m12_250 -> m12_246  [key=2, style=dotted];
m12_250 -> m12_123  [key=2, style=dotted];
m12_251 -> m12_252  [key=0, style=solid];
m12_251 -> m12_246  [key=2, style=dotted];
m12_251 -> m12_123  [key=2, style=dotted];
m12_252 -> m12_253  [key=0, style=solid];
m12_252 -> m12_204  [key=2, style=dotted];
m12_252 -> m12_123  [key=2, style=dotted];
m12_253 -> m12_254  [key=0, style=solid];
m12_253 -> m12_54  [key=2, style=dotted];
m12_254 -> m12_255  [key=0, style=solid];
m12_255 -> m12_247  [color=blue, key=0, style=bold];
m12_809 -> m12_810  [key=0, style=solid];
m12_810 -> m12_811  [key=0, style=solid];
m12_810 -> m12_813  [key=0, style=solid];
m12_810 -> m12_815  [key=0, style=solid];
m12_810 -> m12_817  [key=0, style=solid];
m12_810 -> m12_819  [key=0, style=solid];
m12_811 -> m12_812  [key=0, style=solid];
m12_813 -> m12_814  [key=0, style=solid];
m12_815 -> m12_816  [key=0, style=solid];
m12_817 -> m12_818  [key=0, style=solid];
m12_819 -> m12_820  [key=0, style=solid];
m12_819 -> m12_718  [key=2, style=dotted];
m12_812 -> m12_820  [key=0, style=solid];
m12_814 -> m12_820  [key=0, style=solid];
m12_816 -> m12_820  [key=0, style=solid];
m12_818 -> m12_820  [key=0, style=solid];
m12_820 -> m12_809  [color=blue, key=0, style=bold];
m12_49 -> m12_93  [key=0, style=solid];
m12_93 -> m12_94  [key=0, style=solid];
m12_94 -> m12_95  [key=0, style=solid];
m12_95 -> m12_96  [key=0, style=solid];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_82  [key=2, style=dotted];
m12_96 -> m12_101  [color=darkseagreen4, key=1, label=client, style=dashed];
m12_96 -> m12_112  [color=darkseagreen4, key=1, label=client, style=dashed];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_121  [key=2, style=dotted];
m12_97 -> m12_99  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_97 -> m12_100  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_97 -> m12_101  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_97 -> m12_112  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_85  [key=2, style=dotted];
m12_101 -> m12_103  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_101 -> m12_109  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_101 -> m12_112  [color=darkseagreen4, key=1, label=result, style=dashed];
m12_112 -> m12_113  [key=0, style=solid];
m12_112 -> m12_127  [key=2, style=dotted];
m12_112 -> m12_90  [key=2, style=dotted];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_122  [key=2, style=dotted];
m12_98 -> m12_123  [key=2, style=dotted];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_123  [key=2, style=dotted];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_123  [key=2, style=dotted];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_115  [color=darkseagreen4, key=1, label=raw, style=dashed];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_86  [key=2, style=dotted];
m12_103 -> m12_105  [color=darkseagreen4, key=1, label=newTokens, style=dashed];
m12_103 -> m12_106  [color=darkseagreen4, key=1, label=newTokens, style=dashed];
m12_103 -> m12_107  [color=darkseagreen4, key=1, label=newTokens, style=dashed];
m12_103 -> m12_108  [color=darkseagreen4, key=1, label=newTokens, style=dashed];
m12_103 -> m12_110  [color=darkseagreen4, key=1, label=newTokens, style=dashed];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_125  [key=2, style=dotted];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_128  [key=2, style=dotted];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_112  [key=0, style=solid];
m12_105 -> m12_106  [key=0, style=solid];
m12_106 -> m12_107  [key=0, style=solid];
m12_107 -> m12_108  [key=0, style=solid];
m12_108 -> m12_109  [key=0, style=solid];
m12_108 -> m12_124  [key=2, style=dotted];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_126  [key=2, style=dotted];
m12_111 -> m12_114  [key=0, style=solid];
m12_111 -> m12_117  [key=0, style=solid];
m12_113 -> m12_114  [key=0, style=solid];
m12_113 -> m12_117  [key=0, style=solid];
m12_114 -> m12_115  [key=0, style=solid];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_119  [key=0, style=solid];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_119  [color=darkseagreen4, key=1, label=success, style=dashed];
m12_119 -> m12_120  [key=0, style=solid];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_87  [key=2, style=dotted];
m12_118 -> m12_88  [key=2, style=dotted];
m12_120 -> m12_49  [color=blue, key=0, style=bold];
m12_151 -> m12_152  [key=0, style=solid];
m12_151 -> m12_153  [color=darkseagreen4, key=1, label=long, style=dashed];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_121  [key=2, style=dotted];
m12_152 -> m12_154  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_160  [key=2, style=dotted];
m12_153 -> m12_161  [key=2, style=dotted];
m12_154 -> m12_155  [key=0, style=solid];
m12_154 -> m12_54  [key=2, style=dotted];
m12_154 -> m12_158  [color=darkseagreen4, key=1, label=eventContainer, style=dashed];
m12_155 -> m12_156  [key=0, style=solid];
m12_155 -> m12_158  [key=0, style=solid];
m12_158 -> m12_159  [key=0, style=solid];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_149  [key=2, style=dotted];
m12_157 -> m12_159  [key=0, style=solid];
m12_157 -> m12_150  [key=2, style=dotted];
m12_159 -> m12_151  [color=blue, key=0, style=bold];
m12_506 -> m12_804  [key=0, style=solid];
m12_804 -> m12_805  [key=0, style=solid];
m12_804 -> m12_807  [key=0, style=solid];
m12_805 -> m12_806  [key=0, style=solid];
m12_807 -> m12_808  [key=0, style=solid];
m12_807 -> m12_718  [key=2, style=dotted];
m12_806 -> m12_808  [key=0, style=solid];
m12_808 -> m12_506  [color=blue, key=0, style=bold];
m12_256 -> m12_257  [key=0, style=solid];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_121  [key=2, style=dotted];
m12_258 -> m12_259  [key=0, style=solid];
m12_258 -> m12_54  [key=2, style=dotted];
m12_259 -> m12_256  [color=blue, key=0, style=bold];
m12_507 -> m12_829  [key=0, style=solid];
m12_507 -> m12_832  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_829 -> m12_830  [key=0, style=solid];
m12_829 -> m12_831  [color=darkseagreen4, key=1, label=limit, style=dashed];
m12_832 -> m12_833  [key=0, style=solid];
m12_832 -> m12_834  [color=darkseagreen4, key=1, label=stopl, style=dashed];
m12_830 -> m12_831  [key=0, style=solid];
m12_830 -> m12_832  [key=0, style=solid];
m12_831 -> m12_836  [key=0, style=solid];
m12_833 -> m12_834  [key=0, style=solid];
m12_833 -> m12_835  [key=0, style=solid];
m12_834 -> m12_836  [key=0, style=solid];
m12_835 -> m12_836  [key=0, style=solid];
m12_836 -> m12_507  [color=blue, key=0, style=bold];
m12_692 -> m12_755  [key=0, style=solid];
m12_692 -> m12_760  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_692 -> m12_765  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_755 -> m12_756  [key=0, style=solid];
m12_755 -> m12_761  [key=0, style=solid];
m12_755 -> m12_766  [key=0, style=solid];
m12_755 -> m12_768  [key=0, style=solid];
m12_760 -> m12_769  [key=0, style=solid];
m12_765 -> m12_769  [key=0, style=solid];
m12_756 -> m12_757  [key=0, style=solid];
m12_761 -> m12_762  [key=0, style=solid];
m12_766 -> m12_767  [key=0, style=solid];
m12_768 -> m12_769  [key=0, style=solid];
m12_768 -> m12_718  [key=2, style=dotted];
m12_757 -> m12_758  [key=0, style=solid];
m12_758 -> m12_759  [key=0, style=solid];
m12_759 -> m12_760  [key=0, style=solid];
m12_762 -> m12_763  [key=0, style=solid];
m12_763 -> m12_764  [key=0, style=solid];
m12_764 -> m12_765  [key=0, style=solid];
m12_767 -> m12_769  [key=0, style=solid];
m12_769 -> m12_692  [color=blue, key=0, style=bold];
m12_461 -> m12_546  [key=0, style=solid];
m12_461 -> m12_548  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_461 -> m12_549  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_461 -> m12_550  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_461 -> m12_551  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_461 -> m12_553  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_461 -> m12_554  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_461 -> m12_555  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_461 -> m12_556  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_461 -> m12_557  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_461 -> m12_558  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_546 -> m12_547  [key=0, style=solid];
m12_546 -> m12_554  [color=darkseagreen4, key=1, label=classification, style=dashed];
m12_548 -> m12_549  [key=0, style=solid];
m12_548 -> m12_550  [key=0, style=solid];
m12_549 -> m12_550  [key=0, style=solid];
m12_549 -> m12_562  [key=2, style=dotted];
m12_550 -> m12_551  [key=0, style=solid];
m12_550 -> m12_563  [key=2, style=dotted];
m12_550 -> m12_149  [key=2, style=dotted];
m12_551 -> m12_552  [key=0, style=solid];
m12_551 -> m12_186  [key=2, style=dotted];
m12_551 -> m12_554  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_551 -> m12_556  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_551 -> m12_560  [color=darkseagreen4, key=1, label=response, style=dashed];
m12_553 -> m12_554  [key=0, style=solid];
m12_553 -> m12_531  [key=2, style=dotted];
m12_553 -> m12_532  [key=2, style=dotted];
m12_554 -> m12_560  [key=0, style=solid];
m12_554 -> m12_564  [key=2, style=dotted];
m12_554 -> m12_150  [key=2, style=dotted];
m12_554 -> m12_460  [key=2, style=dotted];
m12_555 -> m12_556  [key=0, style=solid];
m12_555 -> m12_531  [key=2, style=dotted];
m12_555 -> m12_532  [key=2, style=dotted];
m12_556 -> m12_557  [key=0, style=solid];
m12_556 -> m12_236  [key=2, style=dotted];
m12_556 -> m12_558  [color=darkseagreen4, key=1, label=message, style=dashed];
m12_556 -> m12_559  [color=darkseagreen4, key=1, label=message, style=dashed];
m12_557 -> m12_558  [key=0, style=solid];
m12_557 -> m12_559  [key=0, style=solid];
m12_557 -> m12_565  [key=2, style=dotted];
m12_558 -> m12_559  [key=0, style=solid];
m12_547 -> m12_548  [key=0, style=solid];
m12_547 -> m12_550  [color=darkseagreen4, key=1, label=stopLimit, style=dashed];
m12_552 -> m12_553  [key=0, style=solid];
m12_552 -> m12_555  [key=0, style=solid];
m12_552 -> m12_462  [key=2, style=dotted];
m12_560 -> m12_561  [key=0, style=solid];
m12_559 -> m12_560  [key=0, style=solid];
m12_559 -> m12_87  [key=2, style=dotted];
m12_559 -> m12_88  [key=2, style=dotted];
m12_561 -> m12_461  [color=blue, key=0, style=bold];
m12_220 -> m12_221  [key=0, style=solid];
m12_220 -> m12_222  [color=darkseagreen4, key=1, label=long, style=dashed];
m12_220 -> m12_223  [color=darkseagreen4, key=1, label=long, style=dashed];
m12_221 -> m12_222  [key=0, style=solid];
m12_221 -> m12_121  [key=2, style=dotted];
m12_221 -> m12_223  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_221 -> m12_224  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_160  [key=2, style=dotted];
m12_222 -> m12_161  [key=2, style=dotted];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_160  [key=2, style=dotted];
m12_223 -> m12_161  [key=2, style=dotted];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_224  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_225 -> m12_226  [key=0, style=solid];
m12_225 -> m12_54  [key=2, style=dotted];
m12_226 -> m12_220  [color=blue, key=0, style=bold];
m12_533 -> m12_534  [key=0, style=solid];
m12_533 -> m12_536  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_534 -> m12_535  [key=0, style=solid];
m12_534 -> m12_536  [key=0, style=solid];
m12_534 -> m12_538  [key=2, style=dotted];
m12_536 -> m12_537  [key=0, style=solid];
m12_535 -> m12_536  [key=0, style=solid];
m12_535 -> m12_87  [key=2, style=dotted];
m12_535 -> m12_88  [key=2, style=dotted];
m12_537 -> m12_533  [color=blue, key=0, style=bold];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_10  [key=0, style=solid];
m12_7 -> m12_15  [key=2, style=dotted];
m12_7 -> m12_9  [color=darkseagreen4, key=1, label=requestType, style=dashed];
m12_206 -> m12_207  [key=0, style=solid];
m12_206 -> m12_208  [color=darkseagreen4, key=1, label=long, style=dashed];
m12_206 -> m12_209  [color=darkseagreen4, key=1, label=long, style=dashed];
m12_206 -> m12_211  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderType", style=dashed];
m12_206 -> m12_212  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderDuration", style=dashed];
m12_206 -> m12_213  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_206 -> m12_214  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_206 -> m12_215  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_206 -> m12_216  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_121  [key=2, style=dotted];
m12_207 -> m12_209  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_207 -> m12_210  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> m12_160  [key=2, style=dotted];
m12_208 -> m12_161  [key=2, style=dotted];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> m12_160  [key=2, style=dotted];
m12_209 -> m12_161  [key=2, style=dotted];
m12_211 -> m12_212  [key=0, style=solid];
m12_211 -> m12_204  [key=2, style=dotted];
m12_211 -> m12_123  [key=2, style=dotted];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_204  [key=2, style=dotted];
m12_212 -> m12_123  [key=2, style=dotted];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_215  [key=0, style=solid];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_205  [key=2, style=dotted];
m12_214 -> m12_219  [key=2, style=dotted];
m12_214 -> m12_123  [key=2, style=dotted];
m12_215 -> m12_216  [key=0, style=solid];
m12_215 -> m12_217  [key=0, style=solid];
m12_216 -> m12_217  [key=0, style=solid];
m12_216 -> m12_205  [key=2, style=dotted];
m12_216 -> m12_219  [key=2, style=dotted];
m12_216 -> m12_123  [key=2, style=dotted];
m12_210 -> m12_211  [key=0, style=solid];
m12_210 -> m12_210  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_210 -> m12_212  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_210 -> m12_214  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_210 -> m12_216  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_210 -> m12_217  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_217 -> m12_218  [key=0, style=solid];
m12_217 -> m12_54  [key=2, style=dotted];
m12_218 -> m12_206  [color=blue, key=0, style=bold];
m12_770 -> m12_771  [key=0, style=solid];
m12_771 -> m12_772  [key=0, style=solid];
m12_771 -> m12_773  [key=2, style=dotted];
m12_772 -> m12_770  [color=blue, key=0, style=bold];
m12_129 -> m12_130  [key=0, style=solid];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_121  [key=2, style=dotted];
m12_131 -> m12_132  [key=0, style=solid];
m12_131 -> m12_54  [key=2, style=dotted];
m12_132 -> m12_133  [key=0, style=solid];
m12_133 -> m12_129  [color=blue, key=0, style=bold];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_136  [color=darkseagreen4, key=1, label=long, style=dashed];
m12_135 -> m12_136  [key=0, style=solid];
m12_135 -> m12_121  [key=2, style=dotted];
m12_135 -> m12_137  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_123  [key=2, style=dotted];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_54  [key=2, style=dotted];
m12_138 -> m12_139  [key=0, style=solid];
m12_139 -> m12_134  [color=blue, key=0, style=bold];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_164  [color=darkseagreen4, key=1, label=long, style=dashed];
m12_163 -> m12_164  [key=0, style=solid];
m12_163 -> m12_121  [key=2, style=dotted];
m12_163 -> m12_165  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_164 -> m12_165  [key=0, style=solid];
m12_164 -> m12_160  [key=2, style=dotted];
m12_164 -> m12_161  [key=2, style=dotted];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_54  [key=2, style=dotted];
m12_165 -> m12_169  [color=darkseagreen4, key=1, label=gainLossContainer, style=dashed];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> m12_169  [key=0, style=solid];
m12_169 -> m12_170  [key=0, style=solid];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_149  [key=2, style=dotted];
m12_168 -> m12_170  [key=0, style=solid];
m12_168 -> m12_150  [key=2, style=dotted];
m12_170 -> m12_162  [color=blue, key=0, style=bold];
m12_53 -> m12_566  [key=0, style=solid];
m12_566 -> m12_567  [key=0, style=solid];
m12_566 -> m12_568  [key=0, style=solid];
m12_566 -> m12_581  [key=2, style=dotted];
m12_567 -> m12_580  [key=0, style=solid];
m12_568 -> m12_569  [key=0, style=solid];
m12_568 -> m12_171  [key=2, style=dotted];
m12_568 -> m12_401  [key=2, style=dotted];
m12_568 -> m12_586  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_568 -> m12_571  [color=darkseagreen4, key=1, label=updatedOrders, style=dashed];
m12_568 -> m12_576  [color=darkseagreen4, key=1, label=updatedOrders, style=dashed];
m12_569 -> m12_570  [key=0, style=solid];
m12_569 -> m12_576  [key=0, style=solid];
m12_569 -> m12_571  [color=darkseagreen4, key=1, label=cachedOrder, style=dashed];
m12_571 -> m12_572  [key=0, style=solid];
m12_571 -> m12_573  [key=0, style=solid];
m12_571 -> m12_402  [key=2, style=dotted];
m12_571 -> m12_571  [color=darkseagreen4, key=1, label=cachedOrder, style=dashed];
m12_576 -> m12_577  [key=0, style=solid];
m12_576 -> m12_383  [key=2, style=dotted];
m12_576 -> m12_399  [key=2, style=dotted];
m12_576 -> m12_598  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_576 -> m12_578  [color=darkseagreen4, key=1, label=unknownOrderIDs, style=dashed];
m12_570 -> m12_571  [key=0, style=solid];
m12_572 -> m12_569  [key=0, style=solid];
m12_572 -> m12_582  [key=2, style=dotted];
m12_572 -> m12_572  [color=darkseagreen4, key=1, label=cachedOrder, style=dashed];
m12_572 -> m12_573  [color=darkseagreen4, key=1, label=cachedOrder, style=dashed];
m12_573 -> m12_574  [key=0, style=solid];
m12_573 -> m12_569  [key=0, style=solid];
m12_573 -> m12_583  [key=2, style=dotted];
m12_573 -> m12_573  [color=darkseagreen4, key=1, label=cachedOrder, style=dashed];
m12_574 -> m12_575  [key=0, style=solid];
m12_575 -> m12_569  [key=0, style=solid];
m12_575 -> m12_584  [key=2, style=dotted];
m12_575 -> m12_589  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_575 -> m12_590  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m12_577 -> m12_578  [key=0, style=solid];
m12_577 -> m12_580  [key=0, style=solid];
m12_578 -> m12_579  [key=0, style=solid];
m12_578 -> m12_398  [key=2, style=dotted];
m12_578 -> m12_585  [key=2, style=dotted];
m12_578 -> m12_603  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_579 -> m12_580  [key=0, style=solid];
m12_579 -> m12_87  [key=2, style=dotted];
m12_579 -> m12_88  [key=2, style=dotted];
m12_580 -> m12_53  [color=blue, key=0, style=bold];
m12_625 -> m12_644  [key=0, style=solid];
m12_625 -> m12_656  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrderDirection", style=dashed];
m12_644 -> m12_645  [key=0, style=solid];
m12_644 -> m12_650  [key=0, style=solid];
m12_644 -> m12_656  [key=0, style=solid];
m12_656 -> m12_657  [key=0, style=solid];
m12_656 -> m12_658  [key=2, style=dotted];
m12_645 -> m12_646  [key=0, style=solid];
m12_650 -> m12_651  [key=0, style=solid];
m12_646 -> m12_647  [key=0, style=solid];
m12_647 -> m12_648  [key=0, style=solid];
m12_648 -> m12_649  [key=0, style=solid];
m12_649 -> m12_657  [key=0, style=solid];
m12_651 -> m12_652  [key=0, style=solid];
m12_652 -> m12_653  [key=0, style=solid];
m12_653 -> m12_654  [key=0, style=solid];
m12_654 -> m12_655  [key=0, style=solid];
m12_655 -> m12_657  [key=0, style=solid];
m12_657 -> m12_625  [color=blue, key=0, style=bold];
m12_267 -> m12_268  [key=0, style=solid];
m12_267 -> m12_269  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_267 -> m12_270  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_268 -> m12_269  [key=0, style=solid];
m12_268 -> m12_121  [key=2, style=dotted];
m12_268 -> m12_270  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_268 -> m12_271  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_269 -> m12_270  [key=0, style=solid];
m12_269 -> m12_123  [key=2, style=dotted];
m12_270 -> m12_271  [key=0, style=solid];
m12_270 -> m12_274  [key=2, style=dotted];
m12_270 -> m12_123  [key=2, style=dotted];
m12_271 -> m12_272  [key=0, style=solid];
m12_271 -> m12_54  [key=2, style=dotted];
m12_272 -> m12_273  [key=0, style=solid];
m12_273 -> m12_267  [color=blue, key=0, style=bold];
m12_275 -> m12_276  [key=0, style=solid];
m12_275 -> m12_277  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_275 -> m12_278  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_276 -> m12_277  [key=0, style=solid];
m12_276 -> m12_121  [key=2, style=dotted];
m12_276 -> m12_278  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_276 -> m12_279  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_277 -> m12_278  [key=0, style=solid];
m12_277 -> m12_123  [key=2, style=dotted];
m12_278 -> m12_279  [key=0, style=solid];
m12_278 -> m12_274  [key=2, style=dotted];
m12_278 -> m12_123  [key=2, style=dotted];
m12_279 -> m12_280  [key=0, style=solid];
m12_279 -> m12_54  [key=2, style=dotted];
m12_280 -> m12_281  [key=0, style=solid];
m12_281 -> m12_275  [color=blue, key=0, style=bold];
m12_693 -> m12_711  [key=0, style=solid];
m12_711 -> m12_712  [key=0, style=solid];
m12_711 -> m12_714  [key=0, style=solid];
m12_711 -> m12_716  [key=0, style=solid];
m12_712 -> m12_713  [key=0, style=solid];
m12_714 -> m12_715  [key=0, style=solid];
m12_716 -> m12_717  [key=0, style=solid];
m12_716 -> m12_718  [key=2, style=dotted];
m12_713 -> m12_717  [key=0, style=solid];
m12_715 -> m12_717  [key=0, style=solid];
m12_717 -> m12_693  [color=blue, key=0, style=bold];
m12_140 -> m12_141  [key=0, style=solid];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_121  [key=2, style=dotted];
m12_141 -> m12_143  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_142 -> m12_143  [key=0, style=solid];
m12_142 -> m12_123  [key=2, style=dotted];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_54  [key=2, style=dotted];
m12_143 -> m12_147  [color=darkseagreen4, key=1, label=positionContainer, style=dashed];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_147  [key=0, style=solid];
m12_147 -> m12_148  [key=0, style=solid];
m12_145 -> m12_146  [key=0, style=solid];
m12_145 -> m12_149  [key=2, style=dotted];
m12_146 -> m12_148  [key=0, style=solid];
m12_146 -> m12_150  [key=2, style=dotted];
m12_148 -> m12_140  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [color=darkseagreen4, key=1, label="QuantConnect.Securities.IHoldingsProvider", style=dashed];
m12_0 -> m12_3  [color=darkseagreen4, key=1, label=long, style=dashed];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_0  [color=blue, key=0, style=bold];
m12_3 -> m12_4  [key=0, style=solid];
m12_12 -> m12_0  [color=blue, key=0, style=bold];
m12_227 -> m12_228  [key=0, style=solid];
m12_227 -> m12_231  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<string>", style=dashed];
m12_228 -> m12_229  [key=0, style=solid];
m12_228 -> m12_230  [key=0, style=solid];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_236  [key=2, style=dotted];
m12_229 -> m12_235  [key=0, style=solid];
m12_229 -> m12_150  [key=2, style=dotted];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> m12_121  [key=2, style=dotted];
m12_230 -> m12_232  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_230 -> m12_233  [color=darkseagreen4, key=1, label=request, style=dashed];
m12_232 -> m12_233  [key=0, style=solid];
m12_232 -> m12_123  [key=2, style=dotted];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_54  [key=2, style=dotted];
m12_234 -> m12_235  [key=0, style=solid];
m12_235 -> m12_227  [color=blue, key=0, style=bold];
m12_864 -> m12_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_8  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_21  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_23  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_25  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_34  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_47  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_37  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_51  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_56  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_59  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_62  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_64  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_76  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_95  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_98  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_99  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_105  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_106  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_107  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_108  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_109  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_110  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_118  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_131  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_143  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_154  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_165  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_173  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_174  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_182  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_183  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_189  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_192  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_194  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_202  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_211  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_212  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_217  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_225  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_233  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_240  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_243  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_252  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_253  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_258  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_264  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_271  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_279  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_284  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_289  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_298  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_365  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_367  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_372  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_375  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_377  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_389  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_391  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_410  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_414  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_416  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_420  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_422  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_423  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_424  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_426  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_433  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_434  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_438  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_443  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_471  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_511  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_515  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_477  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_481  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_483  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_487  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_490  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_522  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_527  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_528  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_535  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_540  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_542  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_551  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_553  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_554  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_555  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_559  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_566  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_568  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_569  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_572  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_573  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_575  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_590  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_593  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_594  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_576  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_599  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_579  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_606  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_607  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_608  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_612  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_613  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_616  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_619  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_630  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_635  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_636  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_620  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_622  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_669  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_695  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_672  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_698  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_675  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_677  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_679  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_680  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_864 -> m12_795  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage", style=dashed];
m12_865 -> m12_464  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m12_866 -> m12_590  [color=darkseagreen4, key=1, label=cachedOrderLocal, style=dashed];
m12_867 -> m12_629  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_867 -> m12_632  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_867 -> m12_634  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_867 -> m12_636  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_868 -> m12_630  [color=darkseagreen4, key=1, label=order, style=dashed];
m12_869 -> m12_634  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_870 -> m12_695  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_870 -> m12_698  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierOrder", style=dashed];
m12_871 -> m12_695  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_871 -> m12_698  [color=darkseagreen4, key=1, label=qcOrder, style=dashed];
m12_872 -> m12_837  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", style=dashed];
m12_872 -> m12_838  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", style=dashed];
m12_872 -> m12_841  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", style=dashed];
m12_872 -> m12_843  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", style=dashed];
m12_873 -> m12_846  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_847  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_848  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_849  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_850  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_851  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_852  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_853  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_854  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_857  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_858  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_859  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_860  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_861  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m12_873 -> m12_862  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", style=dashed];
m13_34 -> m13_56  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_36  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_37  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m13_34 -> m13_38  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m13_34 -> m13_39  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_40  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_41  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_42  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_43  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_44  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_49  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_50  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m13_34 -> m13_54  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_34 -> m13_30  [color=blue, key=0, style=bold];
m13_56 -> m13_57  [color=green, key=0, style=solid];
m13_56 -> m13_60  [color=green, key=0, style=solid];
m13_55 -> m13_56  [color=green, key=0, style=solid];
m13_57 -> m13_58  [color=green, key=0, style=solid];
m13_60 -> m13_61  [key=0, style=solid];
m13_60 -> m13_62  [key=0, style=solid];
m13_54 -> m13_55  [color=green, key=0, style=solid];
m13_54 -> m13_70  [key=2, style=dotted];
m13_54 -> m13_63  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerage", style=dashed];
m13_49 -> m13_57  [color=green, key=0, style=solid];
m13_49 -> m13_60  [key=0, style=solid];
m13_58 -> m13_59  [color=green, key=0, style=solid];
m13_58 -> m13_71  [color=green, key=2, style=dotted];
m13_59 -> m13_60  [color=green, key=0, style=solid];
m13_59 -> m13_72  [color=green, key=2, style=dotted];
m13_48 -> m13_49  [key=0, style=solid];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_62  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m13_36 -> m13_63  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IBrokerage", style=dashed];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_64  [key=2, style=dotted];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_50  [key=0, style=solid];
m13_38 -> m13_48  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_43  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m13_38 -> m13_44  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m13_38 -> m13_45  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m13_38 -> m13_46  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m13_38 -> m13_47  [color=darkseagreen4, key=1, label=backtestJob, style=dashed];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_65  [key=2, style=dotted];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_66  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_67  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_68  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_44 -> m13_45  [key=0, style=solid];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_52  [color=darkseagreen4, key=1, label=liveJob, style=dashed];
m13_61 -> m13_62  [key=0, style=solid];
m13_62 -> m13_63  [key=0, style=solid];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_69  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_45 -> m13_46  [key=0, style=solid];
m13_46 -> m13_47  [key=0, style=solid];
m13_51 -> m13_52  [key=0, style=solid];
m13_52 -> m13_53  [key=0, style=solid];
m13_63 -> m13_34  [color=blue, key=0, style=bold];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_22  [key=2, style=dotted];
m13_9 -> m13_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_9 -> m13_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_9 -> m13_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_9 -> m13_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_9 -> m13_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_9 -> m13_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_26 -> m13_27  [key=0, style=solid];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_23  [key=2, style=dotted];
m13_28 -> m13_28  [color=darkseagreen4, key=1, label=code, style=dashed];
m13_27 -> m13_28  [key=0, style=solid];
m13_29 -> m13_25  [color=blue, key=0, style=bold];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_20  [key=2, style=dotted];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_33  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_31 -> m13_32  [key=0, style=solid];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_23  [key=2, style=dotted];
m13_33 -> m13_33  [color=darkseagreen4, key=1, label=market, style=dashed];
m13_32 -> m13_33  [key=0, style=solid];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_4  [key=0, style=solid];
m13_1 -> m13_3  [color=darkseagreen4, key=1, label=market, style=dashed];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_1  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_7  [key=2, style=dotted];
m13_4 -> m13_0  [color=blue, key=0, style=bold];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_8  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_5 -> m13_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_5 -> m13_15  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_5 -> m13_17  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_5 -> m13_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_9  [key=0, style=solid];
m13_6 -> m13_0  [color=blue, key=0, style=bold];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_14  [key=0, style=solid];
m13_12 -> m13_23  [key=2, style=dotted];
m13_12 -> m13_12  [color=darkseagreen4, key=1, label=marketIdentifier, style=dashed];
m13_15 -> m13_16  [key=0, style=solid];
m13_15 -> m13_17  [key=0, style=solid];
m13_15 -> m13_23  [key=2, style=dotted];
m13_17 -> m13_18  [key=0, style=solid];
m13_18 -> m13_19  [key=0, style=solid];
m13_8 -> m13_19  [key=0, style=solid];
m13_8 -> m13_21  [key=2, style=dotted];
m13_10 -> m13_11  [key=0, style=solid];
m13_13 -> m13_19  [key=0, style=solid];
m13_13 -> m13_24  [key=2, style=dotted];
m13_16 -> m13_19  [key=0, style=solid];
m13_16 -> m13_24  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_14 -> m13_15  [key=0, style=solid];
m13_19 -> m13_5  [color=blue, key=0, style=bold];
m13_85 -> m13_56  [color=green, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_85 -> m13_55  [color=green, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_85 -> m13_59  [color=green, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_85 -> m13_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_85 -> m13_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_85 -> m13_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_85 -> m13_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_85 -> m13_5  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_85 -> m13_48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_85 -> m13_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m13_85 -> m13_60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", style=dashed];
m14_68 -> m14_69  [key=0, style=solid];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_10  [key=2, style=dotted];
m14_69 -> m14_71  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_69 -> m14_72  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_69 -> m14_74  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_69 -> m14_76  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_80  [key=2, style=dotted];
m14_70 -> m14_81  [key=2, style=dotted];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_80  [key=2, style=dotted];
m14_71 -> m14_81  [key=2, style=dotted];
m14_72 -> m14_73  [key=0, style=solid];
m14_72 -> m14_80  [key=2, style=dotted];
m14_72 -> m14_33  [key=2, style=dotted];
m14_72 -> m14_81  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_33  [key=2, style=dotted];
m14_74 -> m14_14  [key=2, style=dotted];
m14_74 -> m14_76  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_79  [key=0, style=solid];
m14_76 -> m14_82  [key=2, style=dotted];
m14_76 -> m14_83  [key=2, style=dotted];
m14_76 -> m14_78  [color=darkseagreen4, key=1, label=pair, style=dashed];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_12  [key=2, style=dotted];
m14_73 -> m14_13  [key=2, style=dotted];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_15  [key=2, style=dotted];
m14_77 -> m14_78  [key=0, style=solid];
m14_77 -> m14_15  [key=2, style=dotted];
m14_78 -> m14_76  [key=0, style=solid];
m14_78 -> m14_15  [key=2, style=dotted];
m14_79 -> m14_68  [color=blue, key=0, style=bold];
m14_50 -> m14_51  [key=0, style=solid];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_10  [key=2, style=dotted];
m14_51 -> m14_53  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_54  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_55  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_56  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_57  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_59  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_61  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_62  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_63  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_64  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_65  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_51 -> m14_66  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_54  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_52 -> m14_55  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_52 -> m14_56  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_52 -> m14_57  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_52 -> m14_59  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_11  [key=2, style=dotted];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_33  [key=2, style=dotted];
m14_54 -> m14_11  [key=2, style=dotted];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_33  [key=2, style=dotted];
m14_55 -> m14_11  [key=2, style=dotted];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_33  [key=2, style=dotted];
m14_56 -> m14_11  [key=2, style=dotted];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_33  [key=2, style=dotted];
m14_57 -> m14_11  [key=2, style=dotted];
m14_59 -> m14_60  [key=0, style=solid];
m14_59 -> m14_33  [key=2, style=dotted];
m14_59 -> m14_14  [key=2, style=dotted];
m14_59 -> m14_61  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_59 -> m14_62  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_59 -> m14_63  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_59 -> m14_64  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_59 -> m14_65  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_59 -> m14_66  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_15  [key=2, style=dotted];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_15  [key=2, style=dotted];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_15  [key=2, style=dotted];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_15  [key=2, style=dotted];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_15  [key=2, style=dotted];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_15  [key=2, style=dotted];
m14_58 -> m14_59  [key=0, style=solid];
m14_58 -> m14_12  [key=2, style=dotted];
m14_58 -> m14_13  [key=2, style=dotted];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_15  [key=2, style=dotted];
m14_67 -> m14_50  [color=blue, key=0, style=bold];
m14_16 -> m14_17  [key=0, style=solid];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_10  [key=2, style=dotted];
m14_17 -> m14_19  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_17 -> m14_20  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_17 -> m14_21  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_17 -> m14_22  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_17 -> m14_24  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_17 -> m14_26  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_17 -> m14_27  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_17 -> m14_28  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_17 -> m14_29  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_17 -> m14_30  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_17 -> m14_31  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_20  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_18 -> m14_21  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_18 -> m14_22  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_18 -> m14_24  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_11  [key=2, style=dotted];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_33  [key=2, style=dotted];
m14_20 -> m14_11  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_33  [key=2, style=dotted];
m14_21 -> m14_11  [key=2, style=dotted];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_33  [key=2, style=dotted];
m14_22 -> m14_11  [key=2, style=dotted];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_33  [key=2, style=dotted];
m14_24 -> m14_14  [key=2, style=dotted];
m14_24 -> m14_26  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_24 -> m14_27  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_24 -> m14_28  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_24 -> m14_29  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_24 -> m14_30  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_24 -> m14_31  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_15  [key=2, style=dotted];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_15  [key=2, style=dotted];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_15  [key=2, style=dotted];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_15  [key=2, style=dotted];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_15  [key=2, style=dotted];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_15  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_12  [key=2, style=dotted];
m14_23 -> m14_13  [key=2, style=dotted];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_15  [key=2, style=dotted];
m14_32 -> m14_16  [color=blue, key=0, style=bold];
m14_99 -> m14_100  [key=0, style=solid];
m14_100 -> m14_101  [key=0, style=solid];
m14_100 -> m14_10  [key=2, style=dotted];
m14_100 -> m14_102  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_100 -> m14_104  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_101 -> m14_102  [key=0, style=solid];
m14_101 -> m14_104  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_97  [key=2, style=dotted];
m14_102 -> m14_11  [key=2, style=dotted];
m14_104 -> m14_105  [key=0, style=solid];
m14_104 -> m14_14  [key=2, style=dotted];
m14_103 -> m14_104  [key=0, style=solid];
m14_103 -> m14_12  [key=2, style=dotted];
m14_103 -> m14_13  [key=2, style=dotted];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_15  [key=2, style=dotted];
m14_106 -> m14_99  [color=blue, key=0, style=bold];
m14_34 -> m14_35  [key=0, style=solid];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_10  [key=2, style=dotted];
m14_35 -> m14_37  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_35 -> m14_38  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_35 -> m14_39  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_35 -> m14_40  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_35 -> m14_41  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_35 -> m14_43  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_35 -> m14_45  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_35 -> m14_46  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_35 -> m14_47  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_35 -> m14_48  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_38  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_36 -> m14_39  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_36 -> m14_40  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_36 -> m14_41  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_36 -> m14_43  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_11  [key=2, style=dotted];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_33  [key=2, style=dotted];
m14_38 -> m14_11  [key=2, style=dotted];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_33  [key=2, style=dotted];
m14_39 -> m14_11  [key=2, style=dotted];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_33  [key=2, style=dotted];
m14_40 -> m14_11  [key=2, style=dotted];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_33  [key=2, style=dotted];
m14_41 -> m14_11  [key=2, style=dotted];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_33  [key=2, style=dotted];
m14_43 -> m14_14  [key=2, style=dotted];
m14_43 -> m14_45  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_43 -> m14_46  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_43 -> m14_47  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_43 -> m14_48  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_15  [key=2, style=dotted];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_15  [key=2, style=dotted];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_15  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_15  [key=2, style=dotted];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_12  [key=2, style=dotted];
m14_42 -> m14_13  [key=2, style=dotted];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_15  [key=2, style=dotted];
m14_49 -> m14_34  [color=blue, key=0, style=bold];
m14_84 -> m14_85  [key=0, style=solid];
m14_85 -> m14_86  [key=0, style=solid];
m14_85 -> m14_96  [key=2, style=dotted];
m14_85 -> m14_87  [color=darkseagreen4, key=1, label=scatter, style=dashed];
m14_85 -> m14_88  [color=darkseagreen4, key=1, label=scatter, style=dashed];
m14_85 -> m14_89  [color=darkseagreen4, key=1, label=scatter, style=dashed];
m14_85 -> m14_91  [color=darkseagreen4, key=1, label=scatter, style=dashed];
m14_85 -> m14_92  [color=darkseagreen4, key=1, label=scatter, style=dashed];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_11  [key=2, style=dotted];
m14_87 -> m14_88  [key=0, style=solid];
m14_87 -> m14_11  [key=2, style=dotted];
m14_88 -> m14_89  [key=0, style=solid];
m14_88 -> m14_97  [key=2, style=dotted];
m14_88 -> m14_11  [key=2, style=dotted];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_97  [key=2, style=dotted];
m14_89 -> m14_11  [key=2, style=dotted];
m14_91 -> m14_92  [key=0, style=solid];
m14_91 -> m14_33  [key=2, style=dotted];
m14_91 -> m14_14  [key=2, style=dotted];
m14_92 -> m14_93  [key=0, style=solid];
m14_92 -> m14_95  [key=0, style=solid];
m14_92 -> m14_83  [key=2, style=dotted];
m14_92 -> m14_94  [color=darkseagreen4, key=1, label=pair, style=dashed];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_12  [key=2, style=dotted];
m14_90 -> m14_98  [key=2, style=dotted];
m14_93 -> m14_94  [key=0, style=solid];
m14_93 -> m14_15  [key=2, style=dotted];
m14_94 -> m14_92  [key=0, style=solid];
m14_94 -> m14_15  [key=2, style=dotted];
m14_95 -> m14_84  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_10  [key=2, style=dotted];
m14_1 -> m14_3  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_1 -> m14_5  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_1 -> m14_7  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_1 -> m14_8  [color=darkseagreen4, key=1, label=series, style=dashed];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_5  [color=darkseagreen4, key=1, label=reference, style=dashed];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_11  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_14  [key=2, style=dotted];
m14_5 -> m14_7  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_5 -> m14_8  [color=darkseagreen4, key=1, label=sampled, style=dashed];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_15  [key=2, style=dotted];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_15  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_12  [key=2, style=dotted];
m14_4 -> m14_13  [key=2, style=dotted];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_15  [key=2, style=dotted];
m14_9 -> m14_0  [color=blue, key=0, style=bold];
m15_19 -> m15_20  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_24  [key=2, style=dotted];
m15_20 -> m15_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_25  [key=2, style=dotted];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_26  [key=2, style=dotted];
m15_22 -> m15_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_23 -> m15_19  [color=blue, key=0, style=bold];
m15_60 -> m15_61  [key=0, style=solid];
m15_27 -> m15_28  [key=0, style=solid];
m15_30 -> m15_31  [key=0, style=solid];
m15_28 -> m15_29  [key=0, style=solid];
m15_29 -> m15_27  [color=blue, key=0, style=bold];
m15_31 -> m15_32  [key=0, style=solid];
m15_32 -> m15_30  [color=blue, key=0, style=bold];
m15_57 -> m15_58  [key=0, style=solid];
m15_58 -> m15_59  [key=0, style=solid];
m15_59 -> m15_57  [color=blue, key=0, style=bold];
m15_61 -> m15_62  [key=0, style=solid];
m15_62 -> m15_60  [color=blue, key=0, style=bold];
m15_11 -> m15_12  [key=0, style=solid];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_14  [key=0, style=solid];
m15_12 -> m15_16  [key=2, style=dotted];
m15_13 -> m15_15  [key=0, style=solid];
m15_13 -> m15_17  [key=2, style=dotted];
m15_13 -> m15_18  [key=2, style=dotted];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_17  [key=2, style=dotted];
m15_14 -> m15_18  [key=2, style=dotted];
m15_15 -> m15_11  [color=blue, key=0, style=bold];
m15_48 -> m15_49  [key=0, style=solid];
m15_48 -> m15_50  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m15_48 -> m15_51  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m15_48 -> m15_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m15_48 -> m15_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m15_49 -> m15_50  [key=0, style=solid];
m15_50 -> m15_51  [key=0, style=solid];
m15_50 -> m15_52  [key=0, style=solid];
m15_51 -> m15_52  [key=0, style=solid];
m15_51 -> m15_26  [key=2, style=dotted];
m15_51 -> m15_55  [key=2, style=dotted];
m15_51 -> m15_56  [key=2, style=dotted];
m15_51 -> m15_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_54  [key=0, style=solid];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_26  [key=2, style=dotted];
m15_53 -> m15_55  [key=2, style=dotted];
m15_53 -> m15_56  [key=2, style=dotted];
m15_53 -> m15_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_54 -> m15_48  [color=blue, key=0, style=bold];
m15_33 -> m15_34  [key=0, style=solid];
m15_34 -> m15_35  [key=0, style=solid];
m15_34 -> m15_36  [key=0, style=solid];
m15_35 -> m15_44  [key=0, style=solid];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_40  [key=0, style=solid];
m15_36 -> m15_38  [color=darkseagreen4, key=1, label=security, style=dashed];
m15_36 -> m15_39  [color=darkseagreen4, key=1, label=security, style=dashed];
m15_37 -> m15_38  [key=0, style=solid];
m15_37 -> m15_36  [key=0, style=solid];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_43  [key=0, style=solid];
m15_40 -> m15_42  [color=darkseagreen4, key=1, label=security, style=dashed];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_45  [key=2, style=dotted];
m15_39 -> m15_36  [key=0, style=solid];
m15_39 -> m15_46  [key=2, style=dotted];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_47  [key=2, style=dotted];
m15_43 -> m15_44  [key=0, style=solid];
m15_42 -> m15_40  [key=0, style=solid];
m15_42 -> m15_46  [key=2, style=dotted];
m15_44 -> m15_33  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_7  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_8  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_9  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_10  [key=2, style=dotted];
m15_6 -> m15_0  [color=blue, key=0, style=bold];
m15_63 -> m15_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_51  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m15_63 -> m15_53  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", style=dashed];
m17_5 -> n7  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [color=blue, key=0, style=bold];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_2  [color=blue, key=0, style=bold];
m18_113 -> m18_224  [key=0, style=solid];
m18_113 -> m18_225  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_224 -> m18_225  [key=0, style=solid];
m18_225 -> m18_226  [key=0, style=solid];
m18_225 -> m18_227  [key=2, style=dotted];
m18_225 -> m18_228  [key=2, style=dotted];
m18_226 -> m18_113  [color=blue, key=0, style=bold];
m18_235 -> m18_236  [key=0, style=solid];
m18_238 -> m18_239  [key=0, style=solid];
m18_238 -> m18_240  [key=0, style=solid];
m18_238 -> m18_251  [key=2, style=dotted];
m18_239 -> m18_236  [key=0, style=solid];
m18_239 -> m18_252  [key=2, style=dotted];
m18_240 -> m18_236  [key=0, style=solid];
m18_240 -> m18_253  [key=2, style=dotted];
m18_241 -> m18_242  [key=0, style=solid];
m18_241 -> m18_14  [key=2, style=dotted];
m18_241 -> m18_254  [key=2, style=dotted];
m18_241 -> m18_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_242 -> m18_243  [key=0, style=solid];
m18_242 -> m18_245  [color=darkseagreen4, key=1, label=payload, style=dashed];
m18_242 -> m18_246  [color=darkseagreen4, key=1, label=payload, style=dashed];
m18_245 -> m18_246  [key=0, style=solid];
m18_245 -> m18_255  [key=2, style=dotted];
m18_245 -> m18_256  [key=2, style=dotted];
m18_246 -> m18_247  [key=0, style=solid];
m18_246 -> m18_255  [key=2, style=dotted];
m18_247 -> m18_248  [key=0, style=solid];
m18_247 -> m18_257  [key=2, style=dotted];
m18_248 -> m18_249  [key=0, style=solid];
m18_248 -> m18_79  [key=2, style=dotted];
m18_248 -> m18_80  [key=2, style=dotted];
m18_236 -> m18_238  [color=darkseagreen4, key=1, label=item, style=dashed];
m18_236 -> m18_239  [color=darkseagreen4, key=1, label=item, style=dashed];
m18_236 -> m18_240  [color=darkseagreen4, key=1, label=item, style=dashed];
m18_236 -> m18_241  [key=0, style=solid];
m18_236 -> m18_237  [key=0, style=solid];
m18_237 -> m18_238  [key=0, style=solid];
m18_237 -> m18_236  [key=0, style=solid];
m18_237 -> m18_250  [key=2, style=dotted];
m18_243 -> m18_245  [key=0, style=solid];
m18_243 -> m18_244  [key=0, style=solid];
m18_244 -> m18_249  [key=0, style=solid];
m18_249 -> m18_235  [color=blue, key=0, style=bold];
m18_16 -> m18_17  [key=0, style=solid];
m18_34 -> m18_24  [color=blue, key=0, style=bold];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_19  [key=2, style=dotted];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_0 -> m18_3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_8  [key=2, style=dotted];
m18_1 -> m18_15  [key=2, style=dotted];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_16  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_17  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_9  [key=2, style=dotted];
m18_4 -> m18_18  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_19  [key=2, style=dotted];
m18_7 -> m18_0  [color=blue, key=0, style=bold];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_20  [key=2, style=dotted];
m18_7 -> m18_9  [color=darkseagreen4, key=1, label=stockPlot, style=dashed];
m18_7 -> m18_10  [color=darkseagreen4, key=1, label=stockPlot, style=dashed];
m18_7 -> m18_11  [color=darkseagreen4, key=1, label=stockPlot, style=dashed];
m18_7 -> m18_12  [color=darkseagreen4, key=1, label=stockPlot, style=dashed];
m18_7 -> m18_13  [color=darkseagreen4, key=1, label=stockPlot, style=dashed];
m18_22 -> m18_23  [key=0, style=solid];
m18_23 -> m18_20  [color=blue, key=0, style=bold];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_41  [key=0, style=solid];
m18_38 -> m18_43  [key=0, style=solid];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_37  [key=2, style=dotted];
m18_39 -> m18_8  [color=darkorchid, key=3, label="Field variable QuantConnect.Securities.OptionFilterUniverse.Type _type", style=bold];
m18_39 -> m18_45  [key=2, style=dotted];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_37  [key=2, style=dotted];
m18_40 -> m18_44  [key=0, style=solid];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_37  [key=2, style=dotted];
m18_42 -> m18_38  [color=blue, key=0, style=bold];
m18_42 -> m18_46  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid];
m18_252 -> m18_265  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_252 -> m18_269  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_252 -> m18_271  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_252 -> m18_277  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_252 -> m18_263  [key=0, style=solid];
m18_252 -> m18_273  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_264 -> m18_265  [key=0, style=solid];
m18_265 -> m18_265  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_265 -> m18_266  [key=0, style=solid];
m18_265 -> m18_267  [key=2, style=dotted];
m18_265 -> m18_268  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_265 -> m18_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_265 -> m18_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_263 -> m18_264  [key=0, style=solid];
m18_263 -> m18_265  [color=darkseagreen4, key=1, label=delay, style=dashed];
m18_263 -> m18_275  [color=darkseagreen4, key=1, label=delay, style=dashed];
m18_266 -> m18_252  [color=blue, key=0, style=bold];
m18_36 -> m18_47  [key=0, style=solid];
m18_36 -> m18_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m18_36 -> m18_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m18_36 -> m18_59  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m18_36 -> m18_63  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m18_36 -> m18_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m18_36 -> m18_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m18_36 -> m18_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m18_36 -> m18_58  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m18_20 -> m18_21  [key=0, style=solid];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_21  [key=2, style=dotted];
m18_10 -> m18_22  [key=2, style=dotted];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_14  [key=2, style=dotted];
m18_12 -> m18_15  [key=2, style=dotted];
m18_12 -> m18_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_12 -> m18_21  [key=2, style=dotted];
m18_12 -> m18_22  [key=2, style=dotted];
m18_269 -> m18_270  [key=0, style=solid];
m18_269 -> m18_79  [key=2, style=dotted];
m18_269 -> m18_279  [key=2, style=dotted];
m18_269 -> m18_80  [key=2, style=dotted];
m18_271 -> m18_272  [key=0, style=solid];
m18_271 -> m18_280  [key=2, style=dotted];
m18_271 -> m18_281  [key=2, style=dotted];
m18_271 -> m18_273  [color=darkseagreen4, key=1, label=rate, style=dashed];
m18_272 -> m18_273  [key=0, style=solid];
m18_274 -> m18_275  [key=0, style=solid];
m18_274 -> m18_228  [key=2, style=dotted];
m18_277 -> m18_278  [key=0, style=solid];
m18_277 -> m18_79  [key=2, style=dotted];
m18_277 -> m18_279  [key=2, style=dotted];
m18_277 -> m18_80  [key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_21  [key=2, style=dotted];
m18_11 -> m18_22  [key=2, style=dotted];
m18_13 -> m18_10  [color=blue, key=0, style=bold];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_23  [key=2, style=dotted];
m18_187 -> m18_187  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m18_187 -> m18_188  [key=0, style=solid];
m18_187 -> m18_189  [key=2, style=dotted];
m18_186 -> m18_187  [key=0, style=solid];
m18_209 -> m18_209  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m18_209 -> m18_210  [key=0, style=solid];
m18_209 -> m18_189  [key=2, style=dotted];
m18_208 -> m18_209  [key=0, style=solid];
m18_258 -> m18_259  [key=0, style=solid];
m18_268 -> m18_269  [key=0, style=solid];
m18_276 -> m18_277  [key=0, style=solid];
m18_276 -> m18_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_276 -> m18_270  [key=0, style=solid];
m18_276 -> m18_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_278 -> m18_268  [color=blue, key=0, style=bold];
m18_270 -> m18_271  [key=0, style=solid];
m18_270 -> m18_277  [key=0, style=solid];
m18_273 -> m18_274  [key=0, style=solid];
m18_273 -> m18_227  [key=2, style=dotted];
m18_275 -> m18_276  [key=0, style=solid];
m18_275 -> m18_282  [key=2, style=dotted];
m18_18 -> m18_16  [color=blue, key=0, style=bold];
m18_188 -> m18_186  [color=blue, key=0, style=bold];
m18_210 -> m18_208  [color=blue, key=0, style=bold];
m18_259 -> m18_260  [key=0, style=solid];
m18_259 -> m18_259  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Brokerages.BaseWebsocketsBrokerage.Channel>", style=dashed];
m18_259 -> m18_261  [key=2, style=dotted];
m18_259 -> m18_262  [key=2, style=dotted];
m18_260 -> m18_258  [color=blue, key=0, style=bold];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_24  [key=2, style=dotted];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_27  [key=0, style=solid];
m18_25 -> m18_35  [key=2, style=dotted];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_31  [key=0, style=solid];
m18_27 -> m18_34  [key=2, style=dotted];
m18_27 -> m18_30  [color=darkseagreen4, key=1, label=value, style=dashed];
m18_27 -> m18_33  [color=darkseagreen4, key=1, label=value, style=dashed];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_35  [key=2, style=dotted];
m18_29 -> m18_36  [key=2, style=dotted];
m18_30 -> m18_27  [key=0, style=solid];
m18_30 -> m18_36  [key=2, style=dotted];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_37  [key=2, style=dotted];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_36  [key=2, style=dotted];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_24  [key=2, style=dotted];
m18_26 -> m18_34  [key=0, style=solid];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_31  [key=0, style=solid];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_24  [key=2, style=dotted];
m18_31 -> m18_34  [key=0, style=solid];
m18_33 -> m18_25  [color=blue, key=0, style=bold];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_37  [key=2, style=dotted];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.WebSocketMessage", style=dashed];
m18_37 -> m18_43  [color=darkseagreen4, key=1, label=object, style=dashed];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m18_14 -> m18_0  [color=blue, key=0, style=bold];
m18_211 -> m18_212  [key=0, style=solid];
m18_211 -> m18_217  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_213 -> m18_214  [key=0, style=solid];
m18_213 -> m18_221  [key=2, style=dotted];
m18_213 -> m18_215  [color=darkseagreen4, key=1, label=response, style=dashed];
m18_213 -> m18_216  [color=darkseagreen4, key=1, label=response, style=dashed];
m18_216 -> m18_75  [key=2, style=dotted];
m18_216 -> m18_217  [key=0, style=solid];
m18_212 -> m18_213  [key=0, style=solid];
m18_212 -> m18_219  [key=2, style=dotted];
m18_212 -> m18_220  [key=2, style=dotted];
m18_214 -> m18_216  [key=0, style=solid];
m18_214 -> m18_215  [key=0, style=solid];
m18_215 -> m18_218  [key=0, style=solid];
m18_215 -> m18_222  [key=2, style=dotted];
m18_217 -> m18_218  [key=0, style=solid];
m18_217 -> m18_223  [key=2, style=dotted];
m18_218 -> m18_211  [color=blue, key=0, style=bold];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_21  [key=2, style=dotted];
m18_8 -> m18_22  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_21  [key=2, style=dotted];
m18_9 -> m18_22  [key=2, style=dotted];
m18_47 -> m18_75  [key=2, style=dotted];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_49  [color=darkseagreen4, key=1, label=raw, style=dashed];
m18_47 -> m18_51  [color=darkseagreen4, key=1, label=raw, style=dashed];
m18_47 -> m18_54  [color=darkseagreen4, key=1, label=raw, style=dashed];
m18_47 -> m18_57  [color=darkseagreen4, key=1, label=raw, style=dashed];
m18_47 -> m18_62  [color=darkseagreen4, key=1, label=raw, style=dashed];
m18_47 -> m18_65  [color=darkseagreen4, key=1, label=raw, style=dashed];
m18_47 -> m18_68  [color=darkseagreen4, key=1, label=raw, style=dashed];
m18_48 -> m18_49  [key=0, style=solid];
m18_52 -> m18_76  [key=2, style=dotted];
m18_52 -> m18_53  [key=0, style=solid];
m18_55 -> m18_77  [key=2, style=dotted];
m18_55 -> m18_56  [key=0, style=solid];
m18_59 -> m18_75  [key=2, style=dotted];
m18_59 -> m18_60  [key=0, style=solid];
m18_60 -> m18_61  [key=0, style=solid];
m18_60 -> m18_79  [key=2, style=dotted];
m18_60 -> m18_80  [key=2, style=dotted];
m18_63 -> m18_64  [key=0, style=solid];
m18_63 -> m18_81  [key=2, style=dotted];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_82  [key=2, style=dotted];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_74  [key=0, style=solid];
m18_70 -> m18_79  [key=2, style=dotted];
m18_70 -> m18_80  [key=2, style=dotted];
m18_72 -> m18_73  [key=0, style=solid];
m18_72 -> m18_79  [key=2, style=dotted];
m18_72 -> m18_80  [key=2, style=dotted];
m18_49 -> m18_50  [key=0, style=solid];
m18_49 -> m18_51  [key=0, style=solid];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_54  [key=0, style=solid];
m18_54 -> m18_55  [key=0, style=solid];
m18_54 -> m18_57  [key=0, style=solid];
m18_57 -> m18_58  [key=0, style=solid];
m18_57 -> m18_62  [key=0, style=solid];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_65  [key=0, style=solid];
m18_65 -> m18_66  [key=0, style=solid];
m18_65 -> m18_68  [key=0, style=solid];
m18_68 -> m18_70  [key=0, style=solid];
m18_68 -> m18_69  [key=0, style=solid];
m18_53 -> m18_74  [key=0, style=solid];
m18_56 -> m18_74  [key=0, style=solid];
m18_58 -> m18_59  [key=0, style=solid];
m18_58 -> m18_78  [key=2, style=dotted];
m18_61 -> m18_74  [key=0, style=solid];
m18_64 -> m18_74  [key=0, style=solid];
m18_67 -> m18_74  [key=0, style=solid];
m18_71 -> m18_72  [key=0, style=solid];
m18_73 -> m18_74  [key=0, style=solid];
m18_50 -> m18_74  [key=0, style=solid];
m18_69 -> m18_74  [key=0, style=solid];
m18_74 -> m18_36  [color=blue, key=0, style=bold];
m18_229 -> m18_232  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.Messages.Matched", style=dashed];
m18_229 -> m18_230  [key=0, style=solid];
m18_231 -> m18_232  [key=0, style=solid];
m18_232 -> m18_233  [key=0, style=solid];
m18_232 -> m18_227  [key=2, style=dotted];
m18_232 -> m18_228  [key=2, style=dotted];
m18_230 -> m18_231  [key=0, style=solid];
m18_230 -> m18_232  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_230 -> m18_234  [key=2, style=dotted];
m18_233 -> m18_229  [color=blue, key=0, style=bold];
m18_114 -> m18_115  [color=green, key=0, style=solid];
m18_114 -> m18_116  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.BestBidAskUpdatedEventArgs", style=dashed];
m18_115 -> m18_116  [color=green, key=0, style=solid];
m18_115 -> m18_117  [color=green, key=0, style=solid];
m18_116 -> m18_117  [color=green, key=0, style=solid];
m18_116 -> m18_113  [color=green, key=2, style=dotted];
m18_117 -> m18_114  [color=blue, key=0, style=bold];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_36  [key=2, style=dotted];
m18_43 -> m18_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_28  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_29  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_32  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_43 -> m18_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.RegressionChannelAlgorithm", style=dashed];
m18_44 -> m18_37  [color=blue, key=0, style=bold];
m18_81 -> m18_191  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_81 -> m18_190  [key=0, style=solid];
m18_191 -> m18_75  [key=2, style=dotted];
m18_191 -> m18_192  [key=0, style=solid];
m18_191 -> m18_193  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_191 -> m18_195  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_191 -> m18_209  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_191 -> m18_197  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_191 -> m18_201  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_191 -> m18_203  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_195 -> m18_196  [key=0, style=solid];
m18_195 -> m18_173  [key=2, style=dotted];
m18_195 -> m18_174  [key=2, style=dotted];
m18_195 -> m18_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_195 -> m18_199  [color=darkseagreen4, key=1, label=cached, style=dashed];
m18_195 -> m18_200  [color=darkseagreen4, key=1, label=cached, style=dashed];
m18_201 -> m18_202  [key=0, style=solid];
m18_201 -> m18_79  [key=2, style=dotted];
m18_201 -> m18_80  [key=2, style=dotted];
m18_202 -> m18_203  [key=0, style=solid];
m18_203 -> m18_204  [key=0, style=solid];
m18_203 -> m18_183  [key=2, style=dotted];
m18_203 -> m18_106  [key=2, style=dotted];
m18_203 -> m18_180  [key=2, style=dotted];
m18_203 -> m18_182  [key=2, style=dotted];
m18_203 -> m18_206  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m18_205 -> m18_206  [key=0, style=solid];
m18_205 -> m18_184  [key=2, style=dotted];
m18_206 -> m18_207  [key=0, style=solid];
m18_206 -> m18_185  [key=2, style=dotted];
m18_190 -> m18_191  [key=0, style=solid];
m18_190 -> m18_24  [key=2, style=dotted];
m18_192 -> m18_195  [key=0, style=solid];
m18_192 -> m18_193  [key=0, style=solid];
m18_193 -> m18_194  [key=0, style=solid];
m18_193 -> m18_24  [key=2, style=dotted];
m18_197 -> m18_198  [key=0, style=solid];
m18_197 -> m18_24  [key=2, style=dotted];
m18_196 -> m18_197  [key=0, style=solid];
m18_196 -> m18_199  [key=0, style=solid];
m18_199 -> m18_201  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_199 -> m18_202  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_199 -> m18_203  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_199 -> m18_205  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_199 -> m18_200  [key=0, style=solid];
m18_200 -> m18_201  [key=0, style=solid];
m18_200 -> m18_203  [color=darkseagreen4, key=1, label=order, style=dashed];
m18_204 -> m18_205  [key=0, style=solid];
m18_194 -> m18_207  [key=0, style=solid];
m18_198 -> m18_207  [key=0, style=solid];
m18_207 -> m18_81  [color=blue, key=0, style=bold];
m18_77 -> m18_118  [color=green, key=0, style=solid];
m18_77 -> m18_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_118 -> m18_119  [color=green, key=0, style=solid];
m18_118 -> m18_75  [color=green, key=2, style=dotted];
m18_118 -> m18_121  [color=green, key=1, label=message, style=dashed];
m18_119 -> m18_120  [key=0, style=solid];
m18_119 -> m18_106  [key=2, style=dotted];
m18_121 -> m18_122  [color=green, key=0, style=solid];
m18_121 -> m18_133  [color=green, key=0, style=solid];
m18_121 -> m18_136  [color=green, key=0, style=solid];
m18_121 -> m18_123  [color=green, key=1, label=row, style=dashed];
m18_121 -> m18_124  [color=green, key=1, label=row, style=dashed];
m18_120 -> m18_121  [color=green, key=0, style=solid];
m18_120 -> m18_127  [color=green, key=1, label=orderBook, style=dashed];
m18_120 -> m18_128  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m18_120 -> m18_131  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m18_120 -> m18_132  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m18_127 -> m18_121  [color=green, key=0, style=solid];
m18_127 -> m18_138  [color=green, key=2, style=dotted];
m18_128 -> m18_121  [color=green, key=0, style=solid];
m18_128 -> m18_111  [key=2, style=dotted];
m18_131 -> m18_121  [color=green, key=0, style=solid];
m18_131 -> m18_139  [key=2, style=dotted];
m18_132 -> m18_121  [color=green, key=0, style=solid];
m18_132 -> m18_112  [key=2, style=dotted];
m18_129 -> m18_121  [color=green, key=0, style=solid];
m18_129 -> m18_130  [key=0, style=solid];
m18_122 -> m18_123  [color=green, key=0, style=solid];
m18_122 -> m18_125  [color=green, key=1, label=side, style=dashed];
m18_122 -> m18_129  [color=green, key=1, label=side, style=dashed];
m18_133 -> m18_134  [key=0, style=solid];
m18_123 -> m18_127  [color=green, key=1, label=price, style=dashed];
m18_123 -> m18_124  [color=green, key=0, style=solid];
m18_123 -> m18_137  [color=green, key=2, style=dotted];
m18_123 -> m18_128  [color=green, key=1, label=price, style=dashed];
m18_123 -> m18_131  [color=green, key=1, label=price, style=dashed];
m18_123 -> m18_132  [color=green, key=1, label=price, style=dashed];
m18_124 -> m18_125  [color=green, key=0, style=solid];
m18_124 -> m18_110  [color=green, key=2, style=dotted];
m18_124 -> m18_126  [color=green, key=1, label=size, style=dashed];
m18_124 -> m18_128  [color=green, key=1, label=size, style=dashed];
m18_124 -> m18_130  [color=green, key=1, label=size, style=dashed];
m18_124 -> m18_132  [color=green, key=1, label=size, style=dashed];
m18_126 -> m18_127  [color=green, key=0, style=solid];
m18_126 -> m18_128  [color=green, key=0, style=solid];
m18_125 -> m18_126  [color=green, key=0, style=solid];
m18_125 -> m18_129  [color=green, key=0, style=solid];
m18_130 -> m18_131  [key=0, style=solid];
m18_130 -> m18_132  [key=0, style=solid];
m18_134 -> m18_46  [key=2, style=dotted];
m18_134 -> m18_135  [key=0, style=solid];
m18_135 -> m18_136  [key=0, style=solid];
m18_136 -> m18_77  [color=blue, key=0, style=bold];
m18_82 -> m18_140  [key=0, style=solid];
m18_82 -> m18_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_140 -> m18_75  [key=2, style=dotted];
m18_140 -> m18_141  [key=0, style=solid];
m18_140 -> m18_142  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_140 -> m18_143  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_140 -> m18_187  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_140 -> m18_144  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_140 -> m18_147  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_140 -> m18_153  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_140 -> m18_154  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_140 -> m18_157  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_140 -> m18_158  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_140 -> m18_163  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_140 -> m18_164  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_141 -> m18_142  [key=0, style=solid];
m18_141 -> m18_143  [key=0, style=solid];
m18_142 -> m18_143  [key=0, style=solid];
m18_142 -> m18_172  [key=2, style=dotted];
m18_143 -> m18_144  [key=0, style=solid];
m18_143 -> m18_173  [key=2, style=dotted];
m18_143 -> m18_174  [key=2, style=dotted];
m18_143 -> m18_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_143 -> m18_145  [color=darkseagreen4, key=1, label=cached, style=dashed];
m18_143 -> m18_148  [color=darkseagreen4, key=1, label=cached, style=dashed];
m18_143 -> m18_149  [color=darkseagreen4, key=1, label=cached, style=dashed];
m18_144 -> m18_145  [key=0, style=solid];
m18_144 -> m18_106  [key=2, style=dotted];
m18_144 -> m18_164  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_150 -> m18_151  [key=0, style=solid];
m18_150 -> m18_152  [key=0, style=solid];
m18_150 -> m18_175  [key=2, style=dotted];
m18_151 -> m18_152  [key=0, style=solid];
m18_151 -> m18_176  [key=2, style=dotted];
m18_152 -> m18_153  [key=0, style=solid];
m18_152 -> m18_154  [color=darkseagreen4, key=1, label=split, style=dashed];
m18_160 -> m18_161  [key=0, style=solid];
m18_160 -> m18_163  [key=0, style=solid];
m18_160 -> m18_181  [key=2, style=dotted];
m18_161 -> m18_162  [key=0, style=solid];
m18_161 -> m18_182  [key=2, style=dotted];
m18_161 -> m18_163  [color=darkseagreen4, key=1, label=totalOrderFee, style=dashed];
m18_162 -> m18_163  [key=0, style=solid];
m18_167 -> m18_168  [key=0, style=solid];
m18_167 -> m18_184  [key=2, style=dotted];
m18_169 -> m18_170  [key=0, style=solid];
m18_169 -> m18_184  [key=2, style=dotted];
m18_170 -> m18_171  [key=0, style=solid];
m18_170 -> m18_185  [key=2, style=dotted];
m18_147 -> m18_148  [key=0, style=solid];
m18_147 -> m18_24  [key=2, style=dotted];
m18_153 -> m18_154  [key=0, style=solid];
m18_153 -> m18_177  [key=2, style=dotted];
m18_154 -> m18_155  [key=0, style=solid];
m18_154 -> m18_178  [key=2, style=dotted];
m18_154 -> m18_179  [key=2, style=dotted];
m18_154 -> m18_180  [key=2, style=dotted];
m18_154 -> m18_164  [color=darkseagreen4, key=1, label=status, style=dashed];
m18_157 -> m18_159  [key=0, style=solid];
m18_157 -> m18_164  [color=darkseagreen4, key=1, label=direction, style=dashed];
m18_158 -> m18_159  [key=0, style=solid];
m18_158 -> m18_164  [color=darkseagreen4, key=1, label=direction, style=dashed];
m18_163 -> m18_164  [key=0, style=solid];
m18_163 -> m18_178  [key=2, style=dotted];
m18_164 -> m18_170  [color=darkseagreen4, key=1, label=orderEvent, style=dashed];
m18_164 -> m18_165  [key=0, style=solid];
m18_164 -> m18_183  [key=2, style=dotted];
m18_145 -> m18_147  [key=0, style=solid];
m18_145 -> m18_146  [key=0, style=solid];
m18_148 -> m18_150  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_148 -> m18_151  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_148 -> m18_152  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_148 -> m18_160  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_148 -> m18_162  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_148 -> m18_167  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_148 -> m18_169  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_148 -> m18_164  [color=darkseagreen4, key=1, label=orderId, style=dashed];
m18_148 -> m18_149  [key=0, style=solid];
m18_149 -> m18_150  [key=0, style=solid];
m18_149 -> m18_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m18_149 -> m18_161  [color=darkseagreen4, key=1, label=order, style=dashed];
m18_149 -> m18_154  [color=darkseagreen4, key=1, label=order, style=dashed];
m18_149 -> m18_163  [color=darkseagreen4, key=1, label=order, style=dashed];
m18_149 -> m18_156  [color=darkseagreen4, key=1, label=order, style=dashed];
m18_159 -> m18_160  [key=0, style=solid];
m18_166 -> m18_167  [key=0, style=solid];
m18_168 -> m18_169  [key=0, style=solid];
m18_165 -> m18_170  [key=0, style=solid];
m18_165 -> m18_166  [key=0, style=solid];
m18_155 -> m18_156  [key=0, style=solid];
m18_156 -> m18_157  [key=0, style=solid];
m18_156 -> m18_158  [key=0, style=solid];
m18_146 -> m18_171  [key=0, style=solid];
m18_171 -> m18_82  [color=blue, key=0, style=bold];
m18_281 -> m18_283  [key=0, style=solid];
m18_281 -> m18_288  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_283 -> m18_284  [key=0, style=solid];
m18_283 -> m18_294  [key=2, style=dotted];
m18_283 -> m18_221  [key=2, style=dotted];
m18_283 -> m18_285  [color=darkseagreen4, key=1, label=response, style=dashed];
m18_283 -> m18_287  [color=darkseagreen4, key=1, label=response, style=dashed];
m18_283 -> m18_290  [color=darkseagreen4, key=1, label=response, style=dashed];
m18_285 -> m18_286  [key=0, style=solid];
m18_285 -> m18_79  [key=2, style=dotted];
m18_285 -> m18_80  [key=2, style=dotted];
m18_290 -> m18_291  [key=0, style=solid];
m18_290 -> m18_79  [key=2, style=dotted];
m18_290 -> m18_80  [key=2, style=dotted];
m18_288 -> m18_75  [key=2, style=dotted];
m18_288 -> m18_289  [key=0, style=solid];
m18_288 -> m18_295  [key=2, style=dotted];
m18_288 -> m18_292  [color=darkseagreen4, key=1, label=rate, style=dashed];
m18_287 -> m18_75  [key=2, style=dotted];
m18_287 -> m18_288  [key=0, style=solid];
m18_284 -> m18_285  [key=0, style=solid];
m18_284 -> m18_287  [key=0, style=solid];
m18_286 -> m18_293  [key=0, style=solid];
m18_289 -> m18_290  [key=0, style=solid];
m18_289 -> m18_292  [key=0, style=solid];
m18_291 -> m18_293  [key=0, style=solid];
m18_292 -> m18_293  [key=0, style=solid];
m18_293 -> m18_281  [color=blue, key=0, style=bold];
m18_76 -> m18_83  [key=0, style=solid];
m18_95 -> m18_96  [color=green, key=0, style=solid];
m18_95 -> m18_99  [color=green, key=0, style=solid];
m18_95 -> m18_97  [color=green, key=1, label=row, style=dashed];
m18_83 -> m18_95  [color=green, key=1, label=message, style=dashed];
m18_83 -> m18_84  [key=0, style=solid];
m18_83 -> m18_75  [key=2, style=dotted];
m18_83 -> m18_91  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_91 -> m18_95  [color=green, key=0, style=solid];
m18_91 -> m18_93  [color=green, key=1, label=row, style=dashed];
m18_91 -> m18_92  [key=0, style=solid];
m18_98 -> m18_95  [color=green, key=0, style=solid];
m18_98 -> m18_112  [key=2, style=dotted];
m18_96 -> m18_97  [color=green, key=0, style=solid];
m18_96 -> m18_110  [color=green, key=2, style=dotted];
m18_96 -> m18_98  [color=green, key=1, label=price, style=dashed];
m18_99 -> m18_100  [color=green, key=0, style=solid];
m18_97 -> m18_98  [color=green, key=0, style=solid];
m18_97 -> m18_110  [color=green, key=2, style=dotted];
m18_101 -> m18_102  [color=green, key=0, style=solid];
m18_101 -> m18_105  [color=green, key=0, style=solid];
m18_101 -> m18_113  [color=green, key=2, style=dotted];
m18_84 -> m18_101  [color=green, key=1, label=symbol, style=dashed];
m18_84 -> m18_85  [key=0, style=solid];
m18_84 -> m18_106  [key=2, style=dotted];
m18_84 -> m18_86  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_84 -> m18_87  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_84 -> m18_88  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m18_86 -> m18_101  [color=green, key=1, label=orderBook, style=dashed];
m18_86 -> m18_99  [color=green, key=1, label=orderBook, style=dashed];
m18_86 -> m18_98  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m18_86 -> m18_87  [key=0, style=solid];
m18_86 -> m18_89  [key=0, style=solid];
m18_86 -> m18_107  [key=2, style=dotted];
m18_86 -> m18_90  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m18_86 -> m18_94  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m18_87 -> m18_101  [color=green, key=1, label=orderBook, style=dashed];
m18_87 -> m18_99  [color=green, key=1, label=orderBook, style=dashed];
m18_87 -> m18_98  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m18_87 -> m18_88  [key=0, style=solid];
m18_87 -> m18_108  [key=2, style=dotted];
m18_87 -> m18_94  [color=darkseagreen4, key=1, label=orderBook, style=dashed];
m18_100 -> m18_101  [color=green, key=0, style=solid];
m18_100 -> m18_102  [color=green, key=0, style=solid];
m18_100 -> m18_105  [color=green, key=0, style=solid];
m18_102 -> m18_103  [color=green, key=0, style=solid];
m18_93 -> m18_94  [color=green, key=0, style=solid];
m18_93 -> m18_110  [color=green, key=2, style=dotted];
m18_92 -> m18_93  [color=green, key=0, style=solid];
m18_92 -> m18_110  [key=2, style=dotted];
m18_92 -> m18_94  [color=darkseagreen4, key=1, label=price, style=dashed];
m18_94 -> m18_91  [key=0, style=solid];
m18_94 -> m18_111  [key=2, style=dotted];
m18_103 -> m18_104  [color=green, key=0, style=solid];
m18_103 -> m18_46  [color=green, key=2, style=dotted];
m18_104 -> m18_105  [key=0, style=solid];
m18_88 -> m18_91  [key=0, style=solid];
m18_90 -> m18_91  [key=0, style=solid];
m18_90 -> m18_109  [key=2, style=dotted];
m18_89 -> m18_90  [key=0, style=solid];
m18_85 -> m18_86  [key=0, style=solid];
m18_105 -> m18_76  [color=blue, key=0, style=bold];
m18_251 -> m18_296  [key=0, style=solid];
m18_296 -> m18_297  [key=0, style=solid];
m18_296 -> m18_298  [key=2, style=dotted];
m18_297 -> m18_251  [color=blue, key=0, style=bold];
m18_299 -> m18_300  [key=0, style=solid];
m18_300 -> m18_301  [key=0, style=solid];
m18_300 -> m18_302  [key=0, style=solid];
m18_301 -> m18_302  [key=0, style=solid];
m18_301 -> m18_255  [key=2, style=dotted];
m18_301 -> m18_257  [key=2, style=dotted];
m18_302 -> m18_299  [color=blue, key=0, style=bold];
m18_303 -> m18_101  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_99  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_100  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_115  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_116  [color=green, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_4  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_27  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_32  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_43  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_47  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_48  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_52  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_59  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_60  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_63  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_66  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_70  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_72  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_84  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_86  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_88  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_89  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_119  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_120  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_140  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_141  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_142  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_143  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_144  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_150  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_151  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_152  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_161  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_162  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_167  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_169  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_170  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_191  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_195  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_201  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_202  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_203  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_205  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_206  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_213  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_224  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_225  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_231  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_232  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_238  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_239  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_240  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_241  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_242  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_245  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_246  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_247  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_248  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_264  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_265  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_269  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_271  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_272  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_274  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_277  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_283  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_285  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_290  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_300  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_303 -> m18_301  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m18_306 -> m18_269  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_306 -> m18_271  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_306 -> m18_277  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_306 -> m18_273  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_304 -> m18_187  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_305 -> m18_209  [color=darkseagreen4, key=1, label=message, style=dashed];
m18_308 -> m18_276  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_308 -> m18_278  [color=darkseagreen4, key=1, label=token, style=dashed];
m18_307 -> m18_275  [color=darkseagreen4, key=1, label=delay, style=dashed];
m23_6 -> m23_8  [key=0, style=solid];
m23_6 -> m23_0  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.List<System.Tuple<int, string>> projects", style=bold];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_10  [key=2, style=dotted];
m23_8 -> m23_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_9 -> m23_6  [color=blue, key=0, style=bold];
m23_41 -> m23_42  [key=0, style=solid];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_31  [key=2, style=dotted];
m23_43 -> m23_41  [color=blue, key=0, style=bold];
m23_33 -> m23_34  [key=0, style=solid];
m23_34 -> m23_35  [key=0, style=solid];
m23_35 -> m23_36  [key=0, style=solid];
m23_36 -> m23_33  [color=blue, key=0, style=bold];
m23_30 -> m23_37  [key=0, style=solid];
m23_30 -> m23_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_30 -> m23_39  [color=darkseagreen4, key=1, label="int?", style=dashed];
m23_30 -> m23_21  [color=darkorchid, key=3, label="Parameter variable int? projectId", style=bold];
m23_30 -> m23_22  [color=darkorchid, key=3, label="Parameter variable string projectName", style=bold];
m23_37 -> m23_38  [key=0, style=solid];
m23_38 -> m23_39  [key=0, style=solid];
m23_39 -> m23_40  [key=0, style=solid];
m23_40 -> m23_30  [color=blue, key=0, style=bold];
m23_7 -> m23_16  [key=0, style=solid];
m23_7 -> m23_0  [color=darkorchid, key=3, label="Parameter variable string suggestedProjectName", style=bold];
m23_16 -> m23_17  [key=0, style=solid];
m23_17 -> m23_7  [color=blue, key=0, style=bold];
m23_18 -> m23_19  [key=0, style=solid];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_21  [color=darkseagreen4, key=1, label=selectedItem, style=dashed];
m23_19 -> m23_22  [color=darkseagreen4, key=1, label=selectedItem, style=dashed];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_25  [key=0, style=solid];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_23  [color=darkseagreen4, key=1, label=projectId, style=dashed];
m23_22 -> m23_23  [key=0, style=solid];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_28  [key=0, style=solid];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_30  [key=2, style=dotted];
m23_24 -> m23_29  [key=0, style=solid];
m23_24 -> m23_31  [key=2, style=dotted];
m23_26 -> m23_27  [key=0, style=solid];
m23_26 -> m23_32  [key=2, style=dotted];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_33  [key=2, style=dotted];
m23_27 -> m23_29  [key=0, style=solid];
m23_27 -> m23_31  [key=2, style=dotted];
m23_29 -> m23_18  [color=blue, key=0, style=bold];
m23_14 -> m23_44  [key=0, style=solid];
m23_14 -> m23_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_44 -> m23_45  [key=0, style=solid];
m23_45 -> m23_46  [key=0, style=solid];
m23_46 -> m23_14  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_0 -> m23_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<System.Tuple<int, string>>", style=dashed];
m23_0 -> m23_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_5  [key=2, style=dotted];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_6  [key=2, style=dotted];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_7  [key=2, style=dotted];
m23_3 -> m23_3  [color=green, key=3, label="Field variable bool Suspicious", style=bold];
m23_4 -> m23_0  [color=blue, key=0, style=bold];
m23_47 -> m23_48  [key=0, style=solid];
m23_48 -> m23_49  [key=0, style=solid];
m23_49 -> m23_47  [color=blue, key=0, style=bold];
m23_11 -> m23_12  [key=0, style=solid];
m23_12 -> m23_13  [key=0, style=solid];
m23_12 -> m23_14  [key=2, style=dotted];
m23_12 -> m23_15  [key=2, style=dotted];
m23_13 -> m23_11  [color=blue, key=0, style=bold];
m23_50 -> m23_2  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m23_50 -> m23_3  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m23_50 -> m23_23  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m23_50 -> m23_26  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m23_50 -> m23_28  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m23_50 -> m23_37  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m23_50 -> m23_38  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m23_50 -> m23_39  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", style=dashed];
m23_51 -> m23_44  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem", style=dashed];
m23_51 -> m23_45  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem", style=dashed];
m23_51 -> m23_48  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem", style=dashed];
m24_2 -> m24_3  [color=red, key=0, style=solid];
m24_3 -> m24_4  [color=red, key=0, style=solid];
m24_3 -> m24_7  [color=red, key=2, style=dotted];
m24_4 -> m24_5  [color=green, key=0, style=solid];
m24_4 -> m24_7  [color=red, key=2, style=dotted];
m24_5 -> m24_6  [color=green, key=0, style=solid];
m24_5 -> m24_7  [color=green, key=2, style=dotted];
m24_6 -> m24_2  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_0  [color=blue, key=0, style=bold];
m24_8 -> m24_3  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", style=dashed];
m24_8 -> m24_4  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", style=dashed];
m24_8 -> m24_5  [color=green, key=1, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", style=dashed];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_14  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_15  [color=darkseagreen4, key=1, label=limit, style=dashed];
m25_13 -> m25_16  [color=darkseagreen4, key=1, label=limit, style=dashed];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_16  [key=0, style=solid];
m25_15 -> m25_17  [key=0, style=solid];
m25_16 -> m25_17  [key=0, style=solid];
m25_17 -> m25_18  [key=0, style=solid];
m25_18 -> m25_12  [color=blue, key=0, style=bold];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_2  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m25_1 -> m25_2  [key=0, style=solid];
m25_2 -> m25_3  [key=0, style=solid];
m25_3 -> m25_0  [color=blue, key=0, style=bold];
m25_9 -> m25_10  [key=0, style=solid];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_7  [key=2, style=dotted];
m25_10 -> m25_8  [key=2, style=dotted];
m25_11 -> m25_9  [color=blue, key=0, style=bold];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_7  [key=2, style=dotted];
m25_5 -> m25_8  [key=2, style=dotted];
m25_6 -> m25_4  [color=blue, key=0, style=bold];
m25_19 -> m25_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", style=dashed];
m25_19 -> m25_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", style=dashed];
m25_19 -> m25_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", style=dashed];
m25_19 -> m25_10  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.LimitOrderTestParameters", style=dashed];
m26_15 -> m26_4  [color=green, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m26_15 -> m26_1  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m26_15 -> m26_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m26_15 -> m26_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m26_15 -> m26_8  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m26_15 -> m26_12  [color=darkseagreen4, key=1, label="QuantConnect.Orders.StopLimitOrder", style=dashed];
m26_3 -> m26_4  [color=green, key=0, style=solid];
m26_3 -> m26_5  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m26_3 -> m26_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_3 -> m26_8  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m26_3 -> m26_14  [key=2, style=dotted];
m26_4 -> m26_5  [color=green, key=0, style=solid];
m26_4 -> m26_15  [key=2, style=dotted];
m26_4 -> m26_6  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_4 -> m26_8  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_16  [key=2, style=dotted];
m26_5 -> m26_17  [key=2, style=dotted];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_18  [key=2, style=dotted];
m26_6 -> m26_8  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_6 -> m26_9  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_10  [key=2, style=dotted];
m26_8 -> m26_19  [key=2, style=dotted];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_9  [key=0, style=solid];
m26_7 -> m26_19  [key=2, style=dotted];
m26_9 -> m26_3  [color=blue, key=0, style=bold];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_19  [key=2, style=dotted];
m26_13 -> m26_11  [color=blue, key=0, style=bold];
m26_20 -> m26_21  [key=0, style=solid];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_12  [key=2, style=dotted];
m26_21 -> m26_26  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_13  [key=2, style=dotted];
m26_22 -> m26_26  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_22 -> m26_27  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_22 -> m26_30  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_18  [key=2, style=dotted];
m26_26 -> m26_28  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_26 -> m26_29  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_14  [key=2, style=dotted];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_19  [key=2, style=dotted];
m26_30 -> m26_31  [key=0, style=solid];
m26_30 -> m26_19  [key=2, style=dotted];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_15  [key=2, style=dotted];
m26_24 -> m26_26  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_24 -> m26_28  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_16  [key=2, style=dotted];
m26_25 -> m26_17  [key=2, style=dotted];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_19  [key=2, style=dotted];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_19  [key=2, style=dotted];
m26_31 -> m26_20  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_12  [key=2, style=dotted];
m26_1 -> m26_6  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_13  [key=2, style=dotted];
m26_2 -> m26_6  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_2 -> m26_7  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_2 -> m26_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_2 -> m26_0  [color=blue, key=0, style=bold];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_19  [key=2, style=dotted];
m26_11 -> m26_0  [color=blue, key=0, style=bold];
m26_11 -> m26_12  [key=0, style=solid];
m26_120 -> m26_121  [key=0, style=solid];
m26_121 -> m26_122  [color=red, key=0, style=solid];
m26_121 -> m26_12  [key=2, style=dotted];
m26_121 -> m26_126  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_121 -> m26_132  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_122 -> m26_123  [color=red, key=0, style=solid];
m26_122 -> m26_138  [color=red, key=2, style=dotted];
m26_122 -> m26_126  [color=red, key=1, label=order, style=dashed];
m26_122 -> m26_130  [color=red, key=1, label=order, style=dashed];
m26_122 -> m26_132  [color=red, key=1, label=order, style=dashed];
m26_122 -> m26_133  [color=red, key=1, label=order, style=dashed];
m26_122 -> m26_134  [color=red, key=1, label=order, style=dashed];
m26_122 -> m26_136  [color=red, key=1, label=order, style=dashed];
m26_126 -> m26_127  [key=0, style=solid];
m26_126 -> m26_139  [key=2, style=dotted];
m26_126 -> m26_128  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_126 -> m26_129  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_132 -> m26_133  [key=0, style=solid];
m26_132 -> m26_139  [key=2, style=dotted];
m26_132 -> m26_134  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_132 -> m26_135  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_123 -> m26_124  [color=red, key=0, style=solid];
m26_123 -> m26_14  [key=2, style=dotted];
m26_130 -> m26_131  [key=0, style=solid];
m26_130 -> m26_19  [key=2, style=dotted];
m26_133 -> m26_134  [key=0, style=solid];
m26_133 -> m26_19  [key=2, style=dotted];
m26_134 -> m26_135  [key=0, style=solid];
m26_134 -> m26_140  [key=2, style=dotted];
m26_134 -> m26_19  [key=2, style=dotted];
m26_136 -> m26_137  [key=0, style=solid];
m26_136 -> m26_19  [key=2, style=dotted];
m26_124 -> m26_125  [color=red, key=0, style=solid];
m26_124 -> m26_15  [color=red, key=2, style=dotted];
m26_124 -> m26_126  [color=red, key=1, label=security, style=dashed];
m26_124 -> m26_131  [color=red, key=1, label=security, style=dashed];
m26_124 -> m26_132  [color=red, key=1, label=security, style=dashed];
m26_124 -> m26_134  [color=red, key=1, label=security, style=dashed];
m26_125 -> m26_126  [color=red, key=0, style=solid];
m26_125 -> m26_16  [color=red, key=2, style=dotted];
m26_125 -> m26_17  [color=red, key=2, style=dotted];
m26_131 -> m26_132  [key=0, style=solid];
m26_131 -> m26_16  [key=2, style=dotted];
m26_131 -> m26_17  [key=2, style=dotted];
m26_127 -> m26_128  [key=0, style=solid];
m26_127 -> m26_19  [key=2, style=dotted];
m26_128 -> m26_129  [key=0, style=solid];
m26_128 -> m26_19  [key=2, style=dotted];
m26_129 -> m26_130  [key=0, style=solid];
m26_129 -> m26_19  [key=2, style=dotted];
m26_135 -> m26_136  [key=0, style=solid];
m26_135 -> m26_19  [key=2, style=dotted];
m26_137 -> m26_120  [color=blue, key=0, style=bold];
m26_96 -> m26_97  [color=red, key=0, style=solid];
m26_97 -> m26_98  [color=red, key=0, style=solid];
m26_97 -> m26_12  [color=red, key=2, style=dotted];
m26_97 -> m26_102  [color=red, key=1, label=model, style=dashed];
m26_97 -> m26_108  [color=red, key=1, label=model, style=dashed];
m26_97 -> m26_114  [color=red, key=1, label=model, style=dashed];
m26_98 -> m26_99  [color=red, key=0, style=solid];
m26_98 -> m26_94  [color=red, key=2, style=dotted];
m26_98 -> m26_102  [color=red, key=1, label=order, style=dashed];
m26_98 -> m26_106  [color=red, key=1, label=order, style=dashed];
m26_98 -> m26_108  [color=red, key=1, label=order, style=dashed];
m26_98 -> m26_112  [color=red, key=1, label=order, style=dashed];
m26_98 -> m26_114  [color=red, key=1, label=order, style=dashed];
m26_98 -> m26_115  [color=red, key=1, label=order, style=dashed];
m26_98 -> m26_116  [color=red, key=1, label=order, style=dashed];
m26_98 -> m26_118  [color=red, key=1, label=order, style=dashed];
m26_102 -> m26_103  [color=red, key=0, style=solid];
m26_102 -> m26_95  [color=red, key=2, style=dotted];
m26_102 -> m26_104  [color=red, key=1, label=fill, style=dashed];
m26_102 -> m26_105  [color=red, key=1, label=fill, style=dashed];
m26_108 -> m26_109  [key=0, style=solid];
m26_108 -> m26_95  [key=2, style=dotted];
m26_108 -> m26_110  [color=red, key=1, label=fill, style=dashed];
m26_108 -> m26_111  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_114 -> m26_115  [key=0, style=solid];
m26_114 -> m26_95  [key=2, style=dotted];
m26_114 -> m26_116  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_114 -> m26_117  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_99 -> m26_100  [color=red, key=0, style=solid];
m26_99 -> m26_14  [color=red, key=2, style=dotted];
m26_106 -> m26_107  [color=red, key=0, style=solid];
m26_106 -> m26_19  [color=red, key=2, style=dotted];
m26_112 -> m26_113  [color=red, key=0, style=solid];
m26_112 -> m26_19  [color=red, key=2, style=dotted];
m26_115 -> m26_116  [key=0, style=solid];
m26_115 -> m26_19  [key=2, style=dotted];
m26_116 -> m26_117  [key=0, style=solid];
m26_116 -> m26_19  [key=2, style=dotted];
m26_118 -> m26_119  [key=0, style=solid];
m26_118 -> m26_19  [key=2, style=dotted];
m26_100 -> m26_101  [key=0, style=solid];
m26_100 -> m26_15  [key=2, style=dotted];
m26_100 -> m26_102  [color=red, key=1, label=security, style=dashed];
m26_100 -> m26_107  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_100 -> m26_108  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_100 -> m26_113  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_100 -> m26_114  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_101 -> m26_102  [color=red, key=0, style=solid];
m26_101 -> m26_16  [key=2, style=dotted];
m26_101 -> m26_17  [key=2, style=dotted];
m26_107 -> m26_108  [key=0, style=solid];
m26_107 -> m26_16  [key=2, style=dotted];
m26_107 -> m26_17  [key=2, style=dotted];
m26_113 -> m26_114  [key=0, style=solid];
m26_113 -> m26_16  [key=2, style=dotted];
m26_113 -> m26_17  [key=2, style=dotted];
m26_103 -> m26_104  [color=red, key=0, style=solid];
m26_103 -> m26_19  [color=red, key=2, style=dotted];
m26_104 -> m26_105  [color=red, key=0, style=solid];
m26_104 -> m26_19  [color=red, key=2, style=dotted];
m26_105 -> m26_106  [color=red, key=0, style=solid];
m26_105 -> m26_19  [color=red, key=2, style=dotted];
m26_109 -> m26_110  [color=red, key=0, style=solid];
m26_109 -> m26_19  [key=2, style=dotted];
m26_110 -> m26_111  [color=red, key=0, style=solid];
m26_110 -> m26_19  [color=red, key=2, style=dotted];
m26_111 -> m26_112  [color=red, key=0, style=solid];
m26_111 -> m26_19  [key=2, style=dotted];
m26_117 -> m26_118  [key=0, style=solid];
m26_117 -> m26_19  [key=2, style=dotted];
m26_119 -> m26_96  [color=blue, key=0, style=bold];
m26_32 -> m26_33  [color=red, key=0, style=solid];
m26_33 -> m26_34  [color=red, key=0, style=solid];
m26_33 -> m26_12  [color=red, key=2, style=dotted];
m26_33 -> m26_38  [color=red, key=1, label=model, style=dashed];
m26_33 -> m26_44  [color=red, key=1, label=model, style=dashed];
m26_34 -> m26_35  [key=0, style=solid];
m26_34 -> m26_50  [key=2, style=dotted];
m26_34 -> m26_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_34 -> m26_42  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_34 -> m26_44  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_34 -> m26_45  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_34 -> m26_46  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_34 -> m26_48  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_38 -> m26_39  [key=0, style=solid];
m26_38 -> m26_51  [key=2, style=dotted];
m26_38 -> m26_40  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_38 -> m26_41  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_44 -> m26_45  [key=0, style=solid];
m26_44 -> m26_51  [key=2, style=dotted];
m26_44 -> m26_46  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_44 -> m26_47  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_35 -> m26_36  [color=red, key=0, style=solid];
m26_35 -> m26_14  [key=2, style=dotted];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_19  [key=2, style=dotted];
m26_45 -> m26_46  [key=0, style=solid];
m26_45 -> m26_19  [key=2, style=dotted];
m26_46 -> m26_47  [key=0, style=solid];
m26_46 -> m26_19  [key=2, style=dotted];
m26_48 -> m26_49  [key=0, style=solid];
m26_48 -> m26_19  [key=2, style=dotted];
m26_36 -> m26_37  [color=red, key=0, style=solid];
m26_36 -> m26_15  [color=red, key=2, style=dotted];
m26_36 -> m26_38  [color=red, key=1, label=security, style=dashed];
m26_36 -> m26_43  [color=red, key=1, label=security, style=dashed];
m26_36 -> m26_44  [color=red, key=1, label=security, style=dashed];
m26_37 -> m26_38  [key=0, style=solid];
m26_37 -> m26_16  [key=2, style=dotted];
m26_37 -> m26_17  [key=2, style=dotted];
m26_43 -> m26_44  [key=0, style=solid];
m26_43 -> m26_16  [key=2, style=dotted];
m26_43 -> m26_17  [key=2, style=dotted];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_19  [key=2, style=dotted];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_19  [key=2, style=dotted];
m26_41 -> m26_42  [key=0, style=solid];
m26_41 -> m26_19  [key=2, style=dotted];
m26_47 -> m26_48  [key=0, style=solid];
m26_47 -> m26_19  [key=2, style=dotted];
m26_49 -> m26_32  [color=blue, key=0, style=bold];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_14  [key=2, style=dotted];
m26_52 -> m26_53  [key=0, style=solid];
m26_53 -> m26_54  [key=0, style=solid];
m26_53 -> m26_12  [key=2, style=dotted];
m26_53 -> m26_58  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_53 -> m26_64  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_54 -> m26_55  [key=0, style=solid];
m26_54 -> m26_50  [key=2, style=dotted];
m26_54 -> m26_58  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_54 -> m26_62  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_54 -> m26_64  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_54 -> m26_65  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_54 -> m26_66  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_54 -> m26_68  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_58 -> m26_59  [key=0, style=solid];
m26_58 -> m26_51  [key=2, style=dotted];
m26_58 -> m26_60  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_58 -> m26_61  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_64 -> m26_65  [key=0, style=solid];
m26_64 -> m26_51  [key=2, style=dotted];
m26_64 -> m26_66  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_64 -> m26_67  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_55 -> m26_56  [key=0, style=solid];
m26_55 -> m26_14  [key=2, style=dotted];
m26_62 -> m26_63  [key=0, style=solid];
m26_62 -> m26_19  [key=2, style=dotted];
m26_65 -> m26_66  [key=0, style=solid];
m26_65 -> m26_19  [key=2, style=dotted];
m26_66 -> m26_67  [key=0, style=solid];
m26_66 -> m26_19  [key=2, style=dotted];
m26_68 -> m26_69  [key=0, style=solid];
m26_68 -> m26_19  [key=2, style=dotted];
m26_56 -> m26_57  [key=0, style=solid];
m26_56 -> m26_15  [key=2, style=dotted];
m26_56 -> m26_58  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_56 -> m26_63  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_56 -> m26_64  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_57 -> m26_58  [key=0, style=solid];
m26_57 -> m26_16  [key=2, style=dotted];
m26_57 -> m26_17  [key=2, style=dotted];
m26_63 -> m26_64  [key=0, style=solid];
m26_63 -> m26_16  [key=2, style=dotted];
m26_63 -> m26_17  [key=2, style=dotted];
m26_59 -> m26_60  [key=0, style=solid];
m26_59 -> m26_19  [key=2, style=dotted];
m26_60 -> m26_61  [key=0, style=solid];
m26_60 -> m26_19  [key=2, style=dotted];
m26_61 -> m26_62  [key=0, style=solid];
m26_61 -> m26_19  [key=2, style=dotted];
m26_67 -> m26_68  [key=0, style=solid];
m26_67 -> m26_19  [key=2, style=dotted];
m26_69 -> m26_52  [color=blue, key=0, style=bold];
m26_70 -> m26_71  [key=0, style=solid];
m26_71 -> m26_72  [key=0, style=solid];
m26_71 -> m26_12  [key=2, style=dotted];
m26_71 -> m26_76  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_71 -> m26_82  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_71 -> m26_88  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_72 -> m26_73  [color=red, key=0, style=solid];
m26_72 -> m26_94  [key=2, style=dotted];
m26_72 -> m26_76  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_72 -> m26_80  [color=red, key=1, label=order, style=dashed];
m26_72 -> m26_82  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_72 -> m26_86  [color=red, key=1, label=order, style=dashed];
m26_72 -> m26_88  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_72 -> m26_89  [color=red, key=1, label=order, style=dashed];
m26_72 -> m26_90  [color=red, key=1, label=order, style=dashed];
m26_72 -> m26_92  [color=red, key=1, label=order, style=dashed];
m26_76 -> m26_77  [key=0, style=solid];
m26_76 -> m26_95  [key=2, style=dotted];
m26_76 -> m26_78  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_76 -> m26_79  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_82 -> m26_83  [key=0, style=solid];
m26_82 -> m26_95  [key=2, style=dotted];
m26_82 -> m26_84  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_82 -> m26_85  [color=red, key=1, label=fill, style=dashed];
m26_88 -> m26_89  [color=red, key=0, style=solid];
m26_88 -> m26_95  [key=2, style=dotted];
m26_88 -> m26_90  [color=red, key=1, label=fill, style=dashed];
m26_88 -> m26_91  [color=red, key=1, label=fill, style=dashed];
m26_73 -> m26_74  [color=red, key=0, style=solid];
m26_73 -> m26_14  [color=red, key=2, style=dotted];
m26_80 -> m26_81  [color=red, key=0, style=solid];
m26_80 -> m26_19  [color=red, key=2, style=dotted];
m26_86 -> m26_87  [color=red, key=0, style=solid];
m26_86 -> m26_19  [color=red, key=2, style=dotted];
m26_89 -> m26_90  [color=red, key=0, style=solid];
m26_89 -> m26_19  [color=red, key=2, style=dotted];
m26_90 -> m26_91  [color=red, key=0, style=solid];
m26_90 -> m26_19  [color=red, key=2, style=dotted];
m26_92 -> m26_93  [color=red, key=0, style=solid];
m26_92 -> m26_19  [color=red, key=2, style=dotted];
m26_74 -> m26_75  [color=red, key=0, style=solid];
m26_74 -> m26_15  [color=red, key=2, style=dotted];
m26_74 -> m26_76  [color=red, key=1, label=security, style=dashed];
m26_74 -> m26_81  [color=red, key=1, label=security, style=dashed];
m26_74 -> m26_82  [color=red, key=1, label=security, style=dashed];
m26_74 -> m26_87  [color=red, key=1, label=security, style=dashed];
m26_74 -> m26_88  [color=red, key=1, label=security, style=dashed];
m26_75 -> m26_76  [color=red, key=0, style=solid];
m26_75 -> m26_16  [color=red, key=2, style=dotted];
m26_75 -> m26_17  [color=red, key=2, style=dotted];
m26_81 -> m26_82  [color=red, key=0, style=solid];
m26_81 -> m26_16  [color=red, key=2, style=dotted];
m26_81 -> m26_17  [color=red, key=2, style=dotted];
m26_87 -> m26_88  [color=red, key=0, style=solid];
m26_87 -> m26_16  [color=red, key=2, style=dotted];
m26_87 -> m26_17  [color=red, key=2, style=dotted];
m26_77 -> m26_78  [key=0, style=solid];
m26_77 -> m26_19  [key=2, style=dotted];
m26_78 -> m26_79  [key=0, style=solid];
m26_78 -> m26_19  [key=2, style=dotted];
m26_79 -> m26_80  [color=red, key=0, style=solid];
m26_79 -> m26_19  [key=2, style=dotted];
m26_83 -> m26_84  [key=0, style=solid];
m26_83 -> m26_19  [key=2, style=dotted];
m26_84 -> m26_85  [color=red, key=0, style=solid];
m26_84 -> m26_19  [key=2, style=dotted];
m26_85 -> m26_86  [color=red, key=0, style=solid];
m26_85 -> m26_19  [color=red, key=2, style=dotted];
m26_91 -> m26_92  [color=red, key=0, style=solid];
m26_91 -> m26_19  [color=red, key=2, style=dotted];
m26_93 -> m26_70  [color=blue, key=0, style=bold];
m26_141 -> m26_142  [key=0, style=solid];
m26_142 -> m26_143  [key=0, style=solid];
m26_142 -> m26_12  [key=2, style=dotted];
m26_142 -> m26_147  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_142 -> m26_153  [color=darkseagreen4, key=1, label=model, style=dashed];
m26_143 -> m26_144  [key=0, style=solid];
m26_143 -> m26_138  [key=2, style=dotted];
m26_143 -> m26_147  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_143 -> m26_151  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_143 -> m26_153  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_143 -> m26_154  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_143 -> m26_155  [color=darkseagreen4, key=1, label=order, style=dashed];
m26_143 -> m26_157  [color=red, key=1, label=order, style=dashed];
m26_147 -> m26_148  [key=0, style=solid];
m26_147 -> m26_139  [key=2, style=dotted];
m26_147 -> m26_149  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_147 -> m26_150  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_153 -> m26_154  [key=0, style=solid];
m26_153 -> m26_139  [key=2, style=dotted];
m26_153 -> m26_155  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_153 -> m26_156  [color=darkseagreen4, key=1, label=fill, style=dashed];
m26_144 -> m26_145  [key=0, style=solid];
m26_144 -> m26_14  [key=2, style=dotted];
m26_151 -> m26_152  [key=0, style=solid];
m26_151 -> m26_19  [key=2, style=dotted];
m26_154 -> m26_155  [key=0, style=solid];
m26_154 -> m26_19  [key=2, style=dotted];
m26_155 -> m26_156  [key=0, style=solid];
m26_155 -> m26_159  [key=2, style=dotted];
m26_155 -> m26_19  [key=2, style=dotted];
m26_157 -> m26_158  [color=red, key=0, style=solid];
m26_157 -> m26_19  [color=red, key=2, style=dotted];
m26_145 -> m26_146  [key=0, style=solid];
m26_145 -> m26_15  [key=2, style=dotted];
m26_145 -> m26_147  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_145 -> m26_152  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_145 -> m26_153  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_145 -> m26_155  [color=darkseagreen4, key=1, label=security, style=dashed];
m26_146 -> m26_147  [key=0, style=solid];
m26_146 -> m26_16  [key=2, style=dotted];
m26_146 -> m26_17  [key=2, style=dotted];
m26_152 -> m26_153  [key=0, style=solid];
m26_152 -> m26_16  [key=2, style=dotted];
m26_152 -> m26_17  [key=2, style=dotted];
m26_148 -> m26_149  [key=0, style=solid];
m26_148 -> m26_19  [key=2, style=dotted];
m26_149 -> m26_150  [key=0, style=solid];
m26_149 -> m26_19  [key=2, style=dotted];
m26_150 -> m26_151  [key=0, style=solid];
m26_150 -> m26_19  [key=2, style=dotted];
m26_156 -> m26_157  [color=red, key=0, style=solid];
m26_156 -> m26_19  [key=2, style=dotted];
m26_158 -> m26_141  [color=blue, key=0, style=bold];
m27_58 -> m27_59  [key=0, style=solid];
m27_59 -> m27_60  [key=0, style=solid];
m27_60 -> m27_61  [key=0, style=solid];
m27_60 -> m27_63  [key=2, style=dotted];
m27_61 -> m27_62  [key=0, style=solid];
m27_62 -> m27_58  [color=blue, key=0, style=bold];
m27_64 -> m27_65  [key=0, style=solid];
m27_65 -> m27_66  [key=0, style=solid];
m27_65 -> m27_67  [key=2, style=dotted];
m27_66 -> m27_64  [color=blue, key=0, style=bold];
m27_55 -> m27_56  [key=0, style=solid];
m27_56 -> m27_57  [key=0, style=solid];
m27_57 -> m27_55  [color=blue, key=0, style=bold];
m27_0 -> m27_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_0 -> m27_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_0 -> m27_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_0 -> m27_10  [color=red, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_0 -> m27_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_0 -> m27_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_0 -> m27_52  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [color=darkseagreen4, key=1, label=openInterest, style=dashed];
m27_5 -> m27_6  [color=green, key=0, style=solid];
m27_5 -> m27_7  [color=green, key=0, style=solid];
m27_7 -> m27_8  [color=green, key=0, style=solid];
m27_7 -> n6  [color=green, key=2, style=dotted];
m27_8 -> m27_9  [key=0, style=solid];
m27_8 -> m27_10  [color=red, key=0, style=solid];
m27_9 -> m27_10  [color=red, key=0, style=solid];
m27_10 -> m27_11  [color=red, key=0, style=solid];
m27_10 -> m27_12  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_13  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_14  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_15  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_16  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_17  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_18  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_19  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_20  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_21  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_22  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_10 -> m27_23  [color=darkseagreen4, key=1, label=tick, style=dashed];
m27_25 -> m27_26  [key=0, style=solid];
m27_25 -> m27_28  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_25 -> m27_29  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_25 -> m27_30  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_25 -> m27_31  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_25 -> m27_32  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_25 -> m27_33  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_25 -> m27_34  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_25 -> m27_35  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_25 -> m27_36  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_25 -> m27_37  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_25 -> m27_41  [color=darkseagreen4, key=1, label=bar, style=dashed];
m27_27 -> m27_28  [key=0, style=solid];
m27_27 -> m27_37  [key=0, style=solid];
m27_52 -> m27_53  [key=0, style=solid];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_5  [color=green, key=0, style=solid];
m27_3 -> m27_4  [key=0, style=solid];
m27_4 -> m27_53  [key=0, style=solid];
m27_6 -> m27_53  [color=green, key=0, style=solid];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_25  [key=0, style=solid];
m27_12 -> m27_13  [key=0, style=solid];
m27_12 -> m27_14  [key=0, style=solid];
m27_13 -> m27_14  [key=0, style=solid];
m27_14 -> m27_15  [key=0, style=solid];
m27_14 -> m27_16  [key=0, style=solid];
m27_15 -> m27_16  [key=0, style=solid];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_18  [key=0, style=solid];
m27_17 -> m27_18  [key=0, style=solid];
m27_18 -> m27_19  [key=0, style=solid];
m27_18 -> m27_20  [key=0, style=solid];
m27_19 -> m27_20  [key=0, style=solid];
m27_20 -> m27_21  [key=0, style=solid];
m27_20 -> m27_22  [key=0, style=solid];
m27_21 -> m27_22  [key=0, style=solid];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_24  [key=0, style=solid];
m27_23 -> m27_24  [key=0, style=solid];
m27_24 -> m27_53  [key=0, style=solid];
m27_26 -> m27_27  [key=0, style=solid];
m27_26 -> m27_52  [key=0, style=solid];
m27_28 -> m27_29  [key=0, style=solid];
m27_28 -> m27_30  [key=0, style=solid];
m27_29 -> m27_30  [key=0, style=solid];
m27_30 -> m27_31  [key=0, style=solid];
m27_30 -> m27_32  [key=0, style=solid];
m27_31 -> m27_32  [key=0, style=solid];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_34  [key=0, style=solid];
m27_33 -> m27_34  [key=0, style=solid];
m27_34 -> m27_35  [key=0, style=solid];
m27_34 -> m27_37  [key=0, style=solid];
m27_35 -> m27_36  [key=0, style=solid];
m27_36 -> m27_37  [key=0, style=solid];
m27_37 -> m27_38  [key=0, style=solid];
m27_37 -> m27_39  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m27_37 -> m27_40  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_43  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m27_41 -> m27_44  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m27_41 -> m27_45  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m27_41 -> m27_46  [color=green, key=1, label=quoteBar, style=dashed];
m27_41 -> m27_47  [color=green, key=1, label=quoteBar, style=dashed];
m27_41 -> m27_48  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m27_41 -> m27_49  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m27_41 -> m27_50  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m27_41 -> m27_51  [color=darkseagreen4, key=1, label=quoteBar, style=dashed];
m27_38 -> m27_39  [key=0, style=solid];
m27_38 -> m27_41  [key=0, style=solid];
m27_39 -> m27_40  [key=0, style=solid];
m27_39 -> m27_41  [key=0, style=solid];
m27_40 -> m27_41  [key=0, style=solid];
m27_42 -> m27_43  [key=0, style=solid];
m27_42 -> m27_53  [key=0, style=solid];
m27_43 -> m27_44  [key=0, style=solid];
m27_44 -> m27_45  [key=0, style=solid];
m27_44 -> m27_46  [color=green, key=0, style=solid];
m27_45 -> m27_46  [color=green, key=0, style=solid];
m27_46 -> m27_47  [color=green, key=0, style=solid];
m27_46 -> m27_48  [color=green, key=0, style=solid];
m27_47 -> m27_48  [color=green, key=0, style=solid];
m27_48 -> m27_49  [key=0, style=solid];
m27_48 -> m27_50  [key=0, style=solid];
m27_49 -> m27_50  [key=0, style=solid];
m27_50 -> m27_51  [key=0, style=solid];
m27_50 -> m27_53  [key=0, style=solid];
m27_51 -> m27_53  [key=0, style=solid];
m27_53 -> m27_0  [color=blue, key=0, style=bold];
m27_68 -> m27_3  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_7  [color=green, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_8  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_9  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_13  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_15  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_17  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_19  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_21  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_23  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_27  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_29  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_31  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_33  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_35  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_36  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_40  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_43  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_45  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_47  [color=green, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_49  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_51  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_52  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_56  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_60  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m27_68 -> m27_65  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityCache", style=dashed];
m30_25 -> m30_26  [key=0, style=solid];
m30_25 -> m30_20  [color=blue, key=0, style=bold];
m30_26 -> m30_27  [key=0, style=solid];
m30_26 -> m30_28  [key=2, style=dotted];
m30_26 -> m30_29  [key=2, style=dotted];
m30_27 -> m30_25  [color=blue, key=0, style=bold];
m30_44 -> m30_45  [color=red, key=0, style=solid];
m30_44 -> m30_57  [color=red, key=2, style=dotted];
m30_44 -> m30_66  [color=red, key=1, label="lambda expression", style=dashed];
m30_44 -> m30_46  [color=red, key=1, label=compilationResult, style=dashed];
m30_44 -> m30_49  [color=red, key=1, label=compilationResult, style=dashed];
m30_44 -> m30_71  [color=red, key=1, label=compilationResult, style=dashed];
m30_45 -> m30_46  [color=red, key=0, style=solid];
m30_45 -> m30_47  [key=2, style=dotted];
m30_45 -> m30_29  [key=2, style=dotted];
m30_45 -> m30_49  [color=red, key=0, style=solid];
m30_46 -> m30_44  [color=blue, key=0, style=bold];
m30_46 -> m30_47  [color=red, key=0, style=solid];
m30_46 -> m30_58  [color=red, key=2, style=dotted];
m30_103 -> m30_104  [key=0, style=solid];
m30_103 -> m30_109  [key=2, style=dotted];
m30_43 -> m30_56  [color=red, key=0, style=solid];
m30_40 -> m30_41  [color=red, key=0, style=solid];
m30_40 -> m30_63  [color=red, key=1, label=int, style=dashed];
m30_40 -> m30_44  [color=red, key=1, label=int, style=dashed];
m30_40 -> m30_67  [color=red, key=1, label=int, style=dashed];
m30_40 -> m30_49  [color=red, key=1, label=int, style=dashed];
m30_40 -> m30_71  [color=red, key=1, label=int, style=dashed];
m30_40 -> m30_54  [color=red, key=1, label=int, style=dashed];
m30_40 -> m30_10  [color=green, key=0, style=solid];
m30_41 -> m30_42  [color=red, key=0, style=solid];
m30_41 -> m30_43  [key=2, style=dotted];
m30_41 -> m30_29  [key=2, style=dotted];
m30_41 -> m30_57  [color=red, key=2, style=dotted];
m30_41 -> m30_62  [color=red, key=1, label="lambda expression", style=dashed];
m30_42 -> m30_40  [color=blue, key=0, style=bold];
m30_42 -> m30_43  [color=red, key=0, style=solid];
m30_42 -> m30_44  [color=red, key=0, style=solid];
m30_0 -> m30_1  [key=0, style=solid];
m30_3 -> m30_4  [color=green, key=0, style=solid];
m30_3 -> m30_6  [color=green, key=2, style=dotted];
m30_3 -> m30_40  [color=green, key=1, label="lambda expression", style=dashed];
m30_2 -> m30_3  [color=green, key=0, style=solid];
m30_2 -> m30_5  [key=2, style=dotted];
m30_2 -> m30_0  [color=blue, key=0, style=bold];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_3  [key=2, style=dotted];
m30_1 -> m30_4  [key=2, style=dotted];
m30_4 -> m30_0  [color=blue, key=0, style=bold];
m30_69 -> m30_117  [key=0, style=solid];
m30_69 -> m30_119  [color=red, key=1, label=int, style=dashed];
m30_69 -> m30_123  [color=red, key=1, label=int, style=dashed];
m30_69 -> m30_37  [color=red, key=3, label="Parameter variable int projectId", style=bold];
m30_69 -> m30_70  [color=green, key=0, style=solid];
m30_117 -> m30_118  [key=0, style=solid];
m30_117 -> m30_109  [key=2, style=dotted];
m30_119 -> m30_120  [color=red, key=0, style=solid];
m30_119 -> m30_131  [color=red, key=2, style=dotted];
m30_119 -> m30_121  [color=red, key=1, label=compileStatus, style=dashed];
m30_119 -> m30_124  [color=red, key=1, label=compileStatus, style=dashed];
m30_119 -> m30_125  [color=red, key=1, label=compileStatus, style=dashed];
m30_119 -> m30_129  [color=red, key=1, label=compileStatus, style=dashed];
m30_123 -> m30_121  [color=red, key=0, style=solid];
m30_123 -> m30_133  [color=red, key=2, style=dotted];
m30_123 -> m30_124  [color=red, key=1, label=compileStatus, style=dashed];
m30_123 -> m30_125  [color=red, key=1, label=compileStatus, style=dashed];
m30_123 -> m30_129  [color=red, key=1, label=compileStatus, style=dashed];
m30_118 -> m30_119  [color=red, key=0, style=solid];
m30_118 -> m30_110  [key=2, style=dotted];
m30_118 -> m30_111  [key=2, style=dotted];
m30_118 -> m30_123  [color=red, key=1, label=api, style=dashed];
m30_120 -> m30_121  [key=0, style=solid];
m30_120 -> m30_123  [color=red, key=1, label=compileId, style=dashed];
m30_121 -> m30_122  [color=red, key=0, style=solid];
m30_121 -> m30_124  [key=0, style=solid];
m30_124 -> m30_125  [key=0, style=solid];
m30_124 -> m30_128  [key=0, style=solid];
m30_125 -> m30_126  [key=0, style=solid];
m30_125 -> m30_134  [key=2, style=dotted];
m30_125 -> m30_127  [color=darkseagreen4, key=1, label=error, style=dashed];
m30_129 -> m30_130  [key=0, style=solid];
m30_129 -> m30_135  [key=2, style=dotted];
m30_122 -> m30_123  [color=red, key=0, style=solid];
m30_122 -> m30_132  [color=red, key=2, style=dotted];
m30_128 -> m30_129  [key=0, style=solid];
m30_128 -> m30_109  [key=2, style=dotted];
m30_126 -> m30_127  [key=0, style=solid];
m30_126 -> m30_109  [key=2, style=dotted];
m30_127 -> m30_130  [key=0, style=solid];
m30_127 -> m30_135  [key=2, style=dotted];
m30_130 -> m30_69  [color=blue, key=0, style=bold];
m30_20 -> m30_22  [key=0, style=solid];
m30_20 -> m30_24  [color=darkseagreen4, key=1, label=OleMenuCommandService, style=dashed];
m30_20 -> m30_11  [color=darkorchid, key=3, label="Parameter variable OleMenuCommandService commandService", style=bold];
m30_20 -> m30_21  [key=0, style=solid];
m30_22 -> m30_23  [key=0, style=solid];
m30_22 -> m30_26  [key=2, style=dotted];
m30_22 -> m30_20  [color=blue, key=0, style=bold];
m30_24 -> m30_25  [key=0, style=solid];
m30_24 -> m30_28  [key=2, style=dotted];
m30_23 -> m30_24  [key=0, style=solid];
m30_23 -> m30_27  [key=2, style=dotted];
m30_110 -> m30_3  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_10  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_11  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_53  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_64  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_67  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_70  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_73  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_77  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_78  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_82  [color=green, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_13  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_14  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_31  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_37  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_41  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_49  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_50  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_51  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_52  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_80  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_81  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_101  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_110 -> m30_105  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Engine.TestResultHandler", style=dashed];
m30_63 -> m30_64  [color=red, key=0, style=solid];
m30_63 -> m30_65  [color=red, key=2, style=dotted];
m30_64 -> m30_65  [color=green, key=0, style=solid];
m30_64 -> m30_48  [color=green, key=2, style=dotted];
m30_64 -> m30_62  [color=blue, key=0, style=bold];
m30_64 -> m30_40  [color=green, key=0, style=bold];
m30_65 -> m30_63  [color=blue, key=0, style=bold];
m30_65 -> m30_85  [key=0, style=solid];
m30_65 -> m30_89  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>", style=dashed];
m30_65 -> m30_90  [color=darkseagreen4, key=1, label=int, style=dashed];
m30_65 -> m30_92  [color=darkseagreen4, key=1, label=int, style=dashed];
m30_65 -> m30_37  [color=red, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem> files", style=bold];
m30_65 -> m30_75  [color=red, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem> files", style=bold];
m30_65 -> m30_104  [color=darkorchid, key=3, label="method methodReturn bool UploadFilesToServer", style=bold];
m30_85 -> m30_86  [key=0, style=solid];
m30_85 -> m30_109  [key=2, style=dotted];
m30_89 -> m30_90  [key=0, style=solid];
m30_89 -> m30_100  [key=0, style=solid];
m30_89 -> m30_91  [color=darkseagreen4, key=1, label=file, style=dashed];
m30_89 -> m30_92  [color=darkseagreen4, key=1, label=file, style=dashed];
m30_89 -> m30_95  [color=darkseagreen4, key=1, label=file, style=dashed];
m30_89 -> m30_98  [color=darkseagreen4, key=1, label=file, style=dashed];
m30_90 -> m30_91  [key=0, style=solid];
m30_90 -> m30_112  [key=2, style=dotted];
m30_92 -> m30_93  [key=0, style=solid];
m30_92 -> m30_114  [key=2, style=dotted];
m30_86 -> m30_87  [key=0, style=solid];
m30_86 -> m30_110  [key=2, style=dotted];
m30_86 -> m30_111  [key=2, style=dotted];
m30_86 -> m30_90  [color=darkseagreen4, key=1, label=api, style=dashed];
m30_86 -> m30_92  [color=darkseagreen4, key=1, label=api, style=dashed];
m30_87 -> m30_88  [key=0, style=solid];
m30_87 -> m30_94  [color=darkseagreen4, key=1, label=filesUploaded, style=dashed];
m30_87 -> m30_101  [color=darkseagreen4, key=1, label=filesUploaded, style=dashed];
m30_87 -> m30_87  [color=darkorchid, key=3, label="Local variable int filesUploaded", style=bold];
m30_88 -> m30_89  [key=0, style=solid];
m30_88 -> m30_96  [color=darkseagreen4, key=1, label=filesNotUploaded, style=dashed];
m30_88 -> m30_99  [color=darkseagreen4, key=1, label=filesNotUploaded, style=dashed];
m30_88 -> m30_102  [color=darkseagreen4, key=1, label=filesNotUploaded, style=dashed];
m30_88 -> m30_104  [color=darkseagreen4, key=1, label=filesNotUploaded, style=dashed];
m30_88 -> m30_87  [color=darkorchid, key=3, label="Local variable int filesNotUploaded", style=bold];
m30_94 -> m30_97  [key=0, style=solid];
m30_94 -> m30_89  [key=0, style=solid];
m30_94 -> m30_94  [color=darkseagreen4, key=1, label=filesUploaded, style=dashed];
m30_94 -> m30_101  [color=darkseagreen4, key=1, label=filesUploaded, style=dashed];
m30_101 -> m30_102  [key=0, style=solid];
m30_101 -> m30_101  [color=darkseagreen4, key=1, label=message, style=dashed];
m30_101 -> m30_103  [key=2, style=dotted];
m30_96 -> m30_97  [key=0, style=solid];
m30_96 -> m30_89  [key=0, style=solid];
m30_96 -> m30_96  [color=darkseagreen4, key=1, label=filesNotUploaded, style=dashed];
m30_96 -> m30_99  [color=darkseagreen4, key=1, label=filesNotUploaded, style=dashed];
m30_99 -> m30_89  [key=0, style=solid];
m30_99 -> m30_99  [color=darkseagreen4, key=1, label=filesNotUploaded, style=dashed];
m30_99 -> m30_102  [color=darkseagreen4, key=1, label=filesNotUploaded, style=dashed];
m30_99 -> m30_104  [color=darkseagreen4, key=1, label=filesNotUploaded, style=dashed];
m30_102 -> m30_103  [key=0, style=solid];
m30_102 -> m30_102  [color=darkseagreen4, key=1, label=message, style=dashed];
m30_102 -> m30_106  [color=darkseagreen4, key=1, label=message, style=dashed];
m30_102 -> m30_100  [color=blue, key=0, style=bold];
m30_104 -> m30_105  [key=0, style=solid];
m30_104 -> m30_107  [color=darkseagreen4, key=1, label=result, style=dashed];
m30_100 -> m30_101  [key=0, style=solid];
m30_100 -> m30_100  [color=darkorchid, key=3, label="Local variable string message", style=bold];
m30_91 -> m30_92  [key=0, style=solid];
m30_91 -> m30_113  [key=2, style=dotted];
m30_95 -> m30_96  [key=0, style=solid];
m30_95 -> m30_115  [key=2, style=dotted];
m30_98 -> m30_99  [key=0, style=solid];
m30_98 -> m30_115  [key=2, style=dotted];
m30_93 -> m30_94  [key=0, style=solid];
m30_93 -> m30_95  [key=0, style=solid];
m30_97 -> m30_98  [key=0, style=solid];
m30_106 -> m30_107  [key=0, style=solid];
m30_106 -> m30_116  [key=2, style=dotted];
m30_106 -> m30_104  [color=blue, key=0, style=bold];
m30_105 -> m30_106  [key=0, style=solid];
m30_105 -> m30_107  [key=0, style=solid];
m30_107 -> m30_108  [key=0, style=solid];
m30_108 -> m30_65  [color=blue, key=0, style=bold];
m30_55 -> m30_56  [color=red, key=0, style=solid];
m30_55 -> m30_61  [color=red, key=2, style=dotted];
m30_33 -> m30_34  [color=red, key=0, style=solid];
m30_34 -> m30_35  [color=red, key=0, style=solid];
m30_34 -> m30_5  [color=red, key=2, style=dotted];
m30_35 -> m30_33  [color=blue, key=0, style=bold];
m30_5 -> m30_6  [key=0, style=solid];
m30_5 -> m30_7  [color=darkseagreen4, key=1, label=Package, style=dashed];
m30_5 -> m30_8  [color=darkseagreen4, key=1, label=Package, style=dashed];
m30_56 -> m30_40  [color=blue, key=0, style=bold];
m30_56 -> m30_62  [color=green, key=0, style=bold];
m30_77 -> m30_153  [color=red, key=0, style=solid];
m30_77 -> m30_157  [color=darkseagreen4, key=1, label=object, style=dashed];
m30_77 -> m30_174  [color=darkseagreen4, key=1, label="System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>", style=dashed];
m30_77 -> m30_175  [color=darkseagreen4, key=1, label="System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>>", style=dashed];
m30_77 -> m30_74  [color=darkorchid, key=3, label="Parameter variable object sender", style=bold];
m30_77 -> m30_75  [color=red, key=3, label="Parameter variable System.Action<int, string, System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>> onProject", style=bold];
m30_77 -> m30_78  [color=green, key=0, style=solid];
m30_77 -> m30_79  [color=green, key=0, style=solid];
m30_77 -> m30_55  [color=green, key=2, style=dotted];
m30_153 -> m30_154  [color=red, key=0, style=solid];
m30_153 -> m30_176  [color=red, key=0, style=solid];
m30_153 -> m30_177  [color=red, key=2, style=dotted];
m30_157 -> m30_158  [key=0, style=solid];
m30_157 -> m30_181  [key=2, style=dotted];
m30_157 -> m30_167  [color=darkseagreen4, key=1, label=files, style=dashed];
m30_157 -> m30_174  [color=darkseagreen4, key=1, label=files, style=dashed];
m30_157 -> m30_175  [color=darkseagreen4, key=1, label=files, style=dashed];
m30_174 -> m30_176  [key=0, style=solid];
m30_174 -> m30_188  [key=2, style=dotted];
m30_175 -> m30_176  [key=0, style=solid];
m30_175 -> m30_188  [key=2, style=dotted];
m30_154 -> m30_155  [color=red, key=0, style=solid];
m30_154 -> m30_110  [color=red, key=2, style=dotted];
m30_154 -> m30_111  [color=red, key=2, style=dotted];
m30_155 -> m30_156  [color=red, key=0, style=solid];
m30_155 -> m30_178  [color=red, key=2, style=dotted];
m30_156 -> m30_157  [key=0, style=solid];
m30_156 -> m30_179  [key=2, style=dotted];
m30_156 -> m30_180  [key=2, style=dotted];
m30_156 -> m30_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_156 -> m30_160  [color=darkseagreen4, key=1, label=projectNames, style=dashed];
m30_160 -> m30_161  [key=0, style=solid];
m30_160 -> m30_183  [key=2, style=dotted];
m30_160 -> m30_162  [color=darkseagreen4, key=1, label=projectNameDialog, style=dashed];
m30_160 -> m30_163  [color=darkseagreen4, key=1, label=projectNameDialog, style=dashed];
m30_160 -> m30_164  [color=darkseagreen4, key=1, label=projectNameDialog, style=dashed];
m30_158 -> m30_159  [key=0, style=solid];
m30_158 -> m30_179  [key=2, style=dotted];
m30_158 -> m30_180  [key=2, style=dotted];
m30_158 -> m30_193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_158 -> m30_165  [color=darkseagreen4, key=1, label=fileNames, style=dashed];
m30_167 -> m30_168  [key=0, style=solid];
m30_167 -> m30_179  [key=2, style=dotted];
m30_167 -> m30_180  [key=2, style=dotted];
m30_167 -> m30_185  [key=2, style=dotted];
m30_167 -> m30_196  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_167 -> m30_171  [color=darkseagreen4, key=1, label=newProjectLanguage, style=dashed];
m30_159 -> m30_160  [key=0, style=solid];
m30_159 -> m30_182  [key=2, style=dotted];
m30_165 -> m30_166  [key=0, style=solid];
m30_165 -> m30_184  [key=2, style=dotted];
m30_161 -> m30_162  [key=0, style=solid];
m30_161 -> m30_59  [key=2, style=dotted];
m30_162 -> m30_163  [key=0, style=solid];
m30_162 -> m30_176  [key=0, style=solid];
m30_163 -> m30_164  [key=0, style=solid];
m30_163 -> m30_165  [color=darkseagreen4, key=1, label=selectedProjectName, style=dashed];
m30_163 -> m30_171  [color=darkseagreen4, key=1, label=selectedProjectName, style=dashed];
m30_163 -> m30_173  [color=darkseagreen4, key=1, label=selectedProjectName, style=dashed];
m30_163 -> m30_174  [color=darkseagreen4, key=1, label=selectedProjectName, style=dashed];
m30_163 -> m30_175  [color=darkseagreen4, key=1, label=selectedProjectName, style=dashed];
m30_164 -> m30_165  [key=0, style=solid];
m30_164 -> m30_166  [color=darkseagreen4, key=1, label=selectedProjectId, style=dashed];
m30_164 -> m30_175  [color=darkseagreen4, key=1, label=selectedProjectId, style=dashed];
m30_164 -> m30_187  [color=darkorchid, key=3, label="Local variable int? selectedProjectId", style=bold];
m30_171 -> m30_172  [key=0, style=solid];
m30_171 -> m30_187  [key=2, style=dotted];
m30_171 -> m30_174  [color=darkseagreen4, key=1, label=selectedProjectId, style=dashed];
m30_173 -> m30_174  [key=0, style=solid];
m30_173 -> m30_186  [key=2, style=dotted];
m30_166 -> m30_167  [key=0, style=solid];
m30_166 -> m30_175  [key=0, style=solid];
m30_168 -> m30_169  [key=0, style=solid];
m30_168 -> m30_171  [key=0, style=solid];
m30_169 -> m30_170  [key=0, style=solid];
m30_169 -> m30_186  [key=2, style=dotted];
m30_170 -> m30_176  [key=0, style=solid];
m30_172 -> m30_173  [key=0, style=solid];
m30_172 -> m30_174  [key=0, style=solid];
m30_176 -> m30_77  [color=blue, key=0, style=bold];
m30_228 -> m30_229  [key=0, style=solid];
m30_67 -> m30_68  [color=green, key=0, style=solid];
m30_67 -> m30_69  [color=red, key=2, style=dotted];
m30_67 -> m30_48  [color=green, key=2, style=dotted];
m30_49 -> m30_50  [color=red, key=0, style=solid];
m30_49 -> m30_57  [color=red, key=2, style=dotted];
m30_49 -> m30_70  [color=red, key=1, label="lambda expression", style=dashed];
m30_49 -> m30_51  [color=red, key=1, label=backtestResult, style=dashed];
m30_49 -> m30_55  [key=2, style=dotted];
m30_71 -> m30_72  [color=red, key=0, style=solid];
m30_71 -> m30_73  [color=red, key=2, style=dotted];
m30_71 -> m30_69  [color=blue, key=0, style=bold];
m30_54 -> m30_55  [color=red, key=0, style=solid];
m30_54 -> m30_60  [color=red, key=2, style=dotted];
m30_54 -> m30_48  [color=blue, key=0, style=bold];
m30_62 -> m30_63  [color=red, key=0, style=solid];
m30_62 -> m30_56  [color=green, key=0, style=solid];
m30_66 -> m30_67  [color=green, key=0, style=solid];
m30_47 -> m30_48  [color=red, key=0, style=solid];
m30_47 -> m30_59  [color=red, key=2, style=dotted];
m30_48 -> m30_56  [color=red, key=0, style=solid];
m30_48 -> m30_53  [color=green, key=1, label=string, style=dashed];
m30_48 -> m30_49  [key=0, style=solid];
m30_48 -> m30_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_48 -> m30_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_48 -> m30_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_50 -> m30_51  [color=red, key=0, style=solid];
m30_50 -> m30_54  [color=red, key=0, style=solid];
m30_50 -> m30_57  [key=2, style=dotted];
m30_50 -> m30_56  [key=2, style=dotted];
m30_70 -> m30_71  [color=green, key=0, style=solid];
m30_70 -> m30_48  [color=green, key=2, style=dotted];
m30_51 -> m30_52  [color=red, key=0, style=solid];
m30_51 -> m30_58  [color=red, key=2, style=dotted];
m30_51 -> m30_53  [color=green, key=0, style=solid];
m30_52 -> m30_53  [color=green, key=0, style=solid];
m30_52 -> m30_59  [color=red, key=2, style=dotted];
m30_52 -> m30_60  [key=2, style=dotted];
m30_53 -> m30_56  [color=red, key=0, style=solid];
m30_53 -> m30_54  [color=green, key=0, style=solid];
m30_53 -> m30_61  [color=green, key=2, style=dotted];
m30_53 -> m30_224  [color=green, key=2, style=dotted];
m30_68 -> m30_66  [color=blue, key=0, style=bold];
m30_72 -> m30_70  [color=blue, key=0, style=bold];
m30_72 -> m30_73  [color=green, key=0, style=solid];
m30_78 -> m30_79  [color=green, key=0, style=solid];
m30_78 -> m30_83  [color=red, key=1, label=int, style=dashed];
m30_78 -> m30_84  [color=green, key=2, style=dotted];
m30_78 -> m30_57  [color=green, key=2, style=dotted];
m30_79 -> m30_80  [color=green, key=0, style=solid];
m30_79 -> m30_81  [color=red, key=2, style=dotted];
m30_79 -> m30_82  [color=green, key=1, label=series, style=dashed];
m30_79 -> m30_76  [color=green, key=0, style=solid];
m30_83 -> m30_84  [color=red, key=0, style=solid];
m30_83 -> m30_65  [color=red, key=2, style=dotted];
m30_83 -> m30_75  [color=blue, key=0, style=bold];
m30_80 -> m30_78  [color=blue, key=0, style=bold];
m30_80 -> m30_82  [color=green, key=0, style=solid];
m30_80 -> m30_81  [key=0, style=solid];
m30_80 -> m30_58  [key=2, style=dotted];
m30_82 -> m30_83  [color=red, key=0, style=solid];
m30_82 -> m30_79  [color=green, key=0, style=solid];
m30_82 -> m30_85  [color=green, key=2, style=dotted];
m30_84 -> m30_82  [color=blue, key=0, style=bold];
m30_189 -> m30_190  [key=0, style=solid];
m30_193 -> m30_194  [key=0, style=solid];
m30_196 -> m30_197  [key=0, style=solid];
m30_190 -> m30_191  [key=0, style=solid];
m30_190 -> m30_192  [key=2, style=dotted];
m30_191 -> m30_189  [color=blue, key=0, style=bold];
m30_194 -> m30_195  [key=0, style=solid];
m30_195 -> m30_193  [color=blue, key=0, style=bold];
m30_197 -> m30_198  [key=0, style=solid];
m30_198 -> m30_196  [color=blue, key=0, style=bold];
m30_229 -> m30_230  [key=0, style=solid];
m30_229 -> m30_223  [key=2, style=dotted];
m30_229 -> m30_231  [key=2, style=dotted];
m30_10 -> m30_11  [color=green, key=0, style=solid];
m30_10 -> m30_19  [key=2, style=dotted];
m30_11 -> m30_12  [color=green, key=0, style=solid];
m30_11 -> m30_64  [color=green, key=0, style=solid];
m30_11 -> m30_18  [key=2, style=dotted];
m30_11 -> m30_13  [color=darkseagreen4, key=1, label=commandService, style=dashed];
m30_11 -> m30_14  [color=darkseagreen4, key=1, label=commandService, style=dashed];
m30_15 -> m30_11  [color=green, key=0, style=solid];
m30_15 -> m30_132  [key=2, style=dotted];
m30_15 -> m30_5  [color=blue, key=0, style=bold];
m30_12 -> m30_13  [key=0, style=solid];
m30_12 -> m30_15  [key=0, style=solid];
m30_13 -> m30_15  [key=0, style=solid];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_17  [key=2, style=dotted];
m30_13 -> m30_20  [key=2, style=dotted];
m30_14 -> m30_15  [key=0, style=solid];
m30_14 -> m30_18  [key=2, style=dotted];
m30_14 -> m30_21  [key=2, style=dotted];
m30_230 -> m30_228  [color=blue, key=0, style=bold];
m30_181 -> m30_206  [key=0, style=solid];
m30_181 -> m30_77  [color=darkorchid, key=3, label="Parameter variable object sender", style=bold];
m30_206 -> m30_207  [key=0, style=solid];
m30_206 -> m30_220  [key=2, style=dotted];
m30_206 -> m30_213  [color=darkseagreen4, key=1, label=selectedFiles, style=dashed];
m30_206 -> m30_214  [color=darkseagreen4, key=1, label=selectedFiles, style=dashed];
m30_206 -> m30_215  [color=darkseagreen4, key=1, label=selectedFiles, style=dashed];
m30_206 -> m30_216  [color=darkseagreen4, key=1, label=selectedFiles, style=dashed];
m30_206 -> m30_218  [color=darkseagreen4, key=1, label=selectedFiles, style=dashed];
m30_207 -> m30_208  [key=0, style=solid];
m30_213 -> m30_208  [key=0, style=solid];
m30_213 -> m30_224  [key=2, style=dotted];
m30_214 -> m30_215  [key=0, style=solid];
m30_214 -> m30_218  [key=0, style=solid];
m30_214 -> m30_225  [key=2, style=dotted];
m30_214 -> m30_226  [key=2, style=dotted];
m30_214 -> m30_152  [key=2, style=dotted];
m30_215 -> m30_216  [key=0, style=solid];
m30_215 -> m30_225  [key=2, style=dotted];
m30_215 -> m30_217  [color=darkseagreen4, key=1, label=basePath, style=dashed];
m30_215 -> m30_229  [color=darkseagreen4, key=1, label=basePath, style=dashed];
m30_216 -> m30_217  [key=0, style=solid];
m30_216 -> m30_225  [key=2, style=dotted];
m30_216 -> m30_227  [key=2, style=dotted];
m30_218 -> m30_219  [key=0, style=solid];
m30_208 -> m30_209  [key=0, style=solid];
m30_208 -> m30_214  [key=0, style=solid];
m30_208 -> m30_210  [color=darkseagreen4, key=1, label=selectedUIHierarchyItem, style=dashed];
m30_209 -> m30_210  [key=0, style=solid];
m30_209 -> m30_208  [key=0, style=solid];
m30_210 -> m30_211  [key=0, style=solid];
m30_210 -> m30_212  [color=darkseagreen4, key=1, label=item, style=dashed];
m30_211 -> m30_212  [key=0, style=solid];
m30_211 -> m30_221  [key=2, style=dotted];
m30_211 -> m30_222  [key=2, style=dotted];
m30_212 -> m30_213  [key=0, style=solid];
m30_212 -> m30_223  [key=2, style=dotted];
m30_217 -> m30_218  [key=0, style=solid];
m30_217 -> m30_179  [key=2, style=dotted];
m30_217 -> m30_180  [key=2, style=dotted];
m30_217 -> m30_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_219 -> m30_181  [color=blue, key=0, style=bold];
m30_73 -> m30_74  [color=green, key=0, style=solid];
m30_73 -> m30_48  [color=green, key=2, style=dotted];
m30_73 -> m30_136  [key=0, style=solid];
m30_73 -> m30_138  [color=red, key=1, label=int, style=dashed];
m30_73 -> m30_142  [color=red, key=1, label=int, style=dashed];
m30_73 -> m30_37  [color=red, key=3, label="Parameter variable int projectId", style=bold];
m30_74 -> m30_72  [color=blue, key=0, style=bold];
m30_74 -> m30_75  [color=red, key=0, style=solid];
m30_6 -> m30_7  [key=0, style=solid];
m30_6 -> m30_8  [key=0, style=solid];
m30_7 -> m30_15  [key=0, style=solid];
m30_7 -> m30_16  [key=2, style=dotted];
m30_7 -> m30_17  [key=2, style=dotted];
m30_8 -> m30_9  [key=0, style=solid];
m30_9 -> m30_10  [key=0, style=solid];
m30_9 -> m30_18  [key=2, style=dotted];
m30_136 -> m30_137  [key=0, style=solid];
m30_136 -> m30_109  [key=2, style=dotted];
m30_138 -> m30_139  [color=red, key=0, style=solid];
m30_138 -> m30_150  [color=red, key=2, style=dotted];
m30_138 -> m30_140  [color=red, key=1, label=backtestStatus, style=dashed];
m30_138 -> m30_143  [color=red, key=1, label=backtestStatus, style=dashed];
m30_138 -> m30_145  [color=red, key=1, label=backtestStatus, style=dashed];
m30_142 -> m30_140  [color=red, key=0, style=solid];
m30_142 -> m30_151  [color=red, key=2, style=dotted];
m30_142 -> m30_143  [color=red, key=1, label=backtestStatus, style=dashed];
m30_142 -> m30_145  [color=red, key=1, label=backtestStatus, style=dashed];
m30_137 -> m30_138  [color=red, key=0, style=solid];
m30_137 -> m30_110  [key=2, style=dotted];
m30_137 -> m30_111  [key=2, style=dotted];
m30_137 -> m30_142  [color=red, key=1, label=api, style=dashed];
m30_139 -> m30_140  [color=red, key=0, style=solid];
m30_139 -> m30_142  [color=red, key=1, label=backtestId, style=dashed];
m30_140 -> m30_141  [color=red, key=0, style=solid];
m30_140 -> m30_143  [color=red, key=0, style=solid];
m30_143 -> m30_144  [color=red, key=0, style=solid];
m30_143 -> m30_146  [color=red, key=0, style=solid];
m30_143 -> m30_152  [color=red, key=2, style=dotted];
m30_145 -> m30_149  [key=0, style=solid];
m30_145 -> m30_135  [key=2, style=dotted];
m30_141 -> m30_142  [color=red, key=0, style=solid];
m30_141 -> m30_132  [color=red, key=2, style=dotted];
m30_144 -> m30_145  [key=0, style=solid];
m30_144 -> m30_109  [key=2, style=dotted];
m30_146 -> m30_147  [key=0, style=solid];
m30_146 -> m30_148  [color=darkseagreen4, key=1, label=successMessage, style=dashed];
m30_146 -> m30_146  [color=darkorchid, key=3, label="Local variable string successMessage", style=bold];
m30_147 -> m30_148  [key=0, style=solid];
m30_147 -> m30_109  [key=2, style=dotted];
m30_148 -> m30_149  [key=0, style=solid];
m30_148 -> m30_135  [key=2, style=dotted];
m30_149 -> m30_73  [color=blue, key=0, style=bold];
m30_21 -> m30_22  [key=0, style=solid];
m30_21 -> m30_29  [key=0, style=solid];
m30_21 -> m30_31  [color=darkseagreen4, key=1, label=OleMenuCommandService, style=dashed];
m30_21 -> m30_11  [color=darkorchid, key=3, label="Parameter variable OleMenuCommandService commandService", style=bold];
m30_36 -> m30_37  [color=red, key=0, style=solid];
m30_37 -> m30_38  [color=red, key=0, style=solid];
m30_37 -> m30_39  [color=red, key=2, style=dotted];
m30_37 -> m30_40  [color=red, key=1, label="lambda expression", style=dashed];
m30_37 -> m30_29  [key=2, style=dotted];
m30_38 -> m30_36  [color=blue, key=0, style=bold];
m30_81 -> m30_82  [color=green, key=0, style=solid];
m30_81 -> m30_59  [key=2, style=dotted];
m30_81 -> m30_60  [key=2, style=dotted];
m30_29 -> m30_30  [key=0, style=solid];
m30_29 -> m30_26  [key=2, style=dotted];
m30_31 -> m30_32  [key=0, style=solid];
m30_31 -> m30_28  [key=2, style=dotted];
m30_31 -> m30_33  [key=2, style=dotted];
m30_31 -> m30_29  [key=2, style=dotted];
m30_30 -> m30_31  [key=0, style=solid];
m30_30 -> m30_27  [key=2, style=dotted];
m30_32 -> m30_21  [color=blue, key=0, style=bold];
m30_32 -> m30_30  [color=blue, key=0, style=bold];
m30_187 -> m30_199  [key=0, style=solid];
m30_187 -> m30_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_187 -> m30_163  [color=darkorchid, key=3, label="Parameter variable string projectName", style=bold];
m30_187 -> m30_202  [color=darkorchid, key=3, label="method methodReturn int? CreateQuantConnectProject", style=bold];
m30_199 -> m30_200  [key=0, style=solid];
m30_199 -> m30_110  [key=2, style=dotted];
m30_199 -> m30_111  [key=2, style=dotted];
m30_200 -> m30_201  [key=0, style=solid];
m30_200 -> m30_205  [key=2, style=dotted];
m30_200 -> m30_203  [color=darkseagreen4, key=1, label=projectResponse, style=dashed];
m30_201 -> m30_202  [key=0, style=solid];
m30_201 -> m30_203  [key=0, style=solid];
m30_203 -> m30_204  [key=0, style=solid];
m30_202 -> m30_204  [key=0, style=solid];
m30_204 -> m30_187  [color=blue, key=0, style=bold];
m30_75 -> m30_76  [color=red, key=0, style=solid];
m30_75 -> m30_77  [color=red, key=2, style=dotted];
m30_75 -> m30_78  [color=red, key=1, label="lambda expression", style=dashed];
m30_76 -> m30_77  [color=green, key=0, style=solid];
m30_76 -> m30_83  [color=green, key=0, style=solid];
m30_76 -> m30_78  [color=green, key=1, label=update, style=dashed];
m30_76 -> m30_79  [color=green, key=1, label=update, style=dashed];
m30_76 -> m30_80  [color=green, key=1, label=update, style=dashed];
m30_76 -> m30_81  [color=green, key=1, label=update, style=dashed];
m30_76 -> m30_82  [color=green, key=1, label=update, style=dashed];
m30_76 -> m30_74  [color=blue, key=0, style=bold];
m30_232 -> m30_1  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_8  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_9  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_10  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_11  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_13  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_14  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_23  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_30  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_37  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_41  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_63  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_44  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_67  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_49  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_71  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_75  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_79  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_83  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_85  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_103  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_106  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_117  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_126  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_128  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_136  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_144  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_147  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_153  [color=red, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_157  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_159  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_165  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_169  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_171  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_173  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_232 -> m30_207  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand", style=dashed];
m30_233 -> m30_63  [color=red, key=1, label=int, style=dashed];
m30_233 -> m30_67  [color=red, key=1, label=int, style=dashed];
m30_233 -> m30_71  [color=red, key=1, label=int, style=dashed];
m30_234 -> m30_63  [color=red, key=1, label="System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>", style=dashed];
m30_235 -> m30_71  [color=red, key=1, label=compilationResult, style=dashed];
m30_236 -> m30_83  [color=red, key=1, label=int, style=dashed];
m30_237 -> m30_83  [color=red, key=1, label="System.Collections.Generic.List<QuantConnect.VisualStudioPlugin.SolutionExplorerMenuCommand.SelectedItem>", style=dashed];
m30_238 -> m30_229  [color=darkseagreen4, key=1, label=basePath, style=dashed];
m32_34 -> m32_35  [key=0, style=solid];
m32_25 -> m32_26  [key=0, style=solid];
m32_25 -> m32_27  [key=2, style=dotted];
m32_25 -> m32_28  [key=2, style=dotted];
m32_25 -> m32_25  [color=darkseagreen4, key=1, label=loginMenuItem, style=dashed];
m32_25 -> m32_19  [color=darkseagreen4, key=1, label=loginMenuItem, style=dashed];
m32_24 -> m32_25  [key=0, style=solid];
m32_26 -> m32_24  [color=blue, key=0, style=bold];
m32_35 -> m32_36  [key=0, style=solid];
m32_35 -> m32_27  [key=2, style=dotted];
m32_35 -> m32_28  [key=2, style=dotted];
m32_35 -> m32_35  [color=darkseagreen4, key=1, label=logoutMenuItem, style=dashed];
m32_35 -> m32_32  [color=darkseagreen4, key=1, label=logoutMenuItem, style=dashed];
m32_36 -> m32_34  [color=blue, key=0, style=bold];
m32_27 -> m32_27  [color=darkorchid, key=3, label="Field variable int _logoutCommandId", style=bold];
m32_37 -> m32_38  [key=0, style=solid];
m32_38 -> m32_39  [key=0, style=solid];
m32_38 -> m32_0  [key=2, style=dotted];
m32_39 -> m32_37  [color=blue, key=0, style=bold];
m32_14 -> m32_16  [key=0, style=solid];
m32_14 -> m32_19  [color=darkseagreen4, key=1, label=OleMenuCommandService, style=dashed];
m32_14 -> m32_5  [color=darkorchid, key=3, label="Parameter variable OleMenuCommandService commandService", style=bold];
m32_16 -> m32_17  [key=0, style=solid];
m32_16 -> m32_21  [key=2, style=dotted];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_23  [key=2, style=dotted];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_22  [key=2, style=dotted];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_18  [color=darkseagreen4, key=1, label=loginMenuItem, style=dashed];
m32_18 -> m32_25  [color=darkseagreen4, key=1, label=loginMenuItem, style=dashed];
m32_20 -> m32_14  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_2  [color=darkseagreen4, key=1, label=Package, style=dashed];
m32_0 -> m32_3  [color=darkseagreen4, key=1, label=Package, style=dashed];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=0, style=solid];
m32_2 -> m32_9  [key=0, style=solid];
m32_2 -> m32_10  [key=2, style=dotted];
m32_2 -> m32_11  [key=2, style=dotted];
m32_3 -> m32_4  [key=0, style=solid];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_12  [key=2, style=dotted];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_13  [key=2, style=dotted];
m32_5 -> m32_7  [color=darkseagreen4, key=1, label=commandService, style=dashed];
m32_5 -> m32_8  [color=darkseagreen4, key=1, label=commandService, style=dashed];
m32_6 -> m32_7  [key=0, style=solid];
m32_6 -> m32_9  [key=0, style=solid];
m32_7 -> m32_8  [key=0, style=solid];
m32_7 -> m32_14  [key=2, style=dotted];
m32_8 -> m32_9  [key=0, style=solid];
m32_8 -> m32_15  [key=2, style=dotted];
m32_9 -> m32_0  [color=blue, key=0, style=bold];
m32_40 -> m32_41  [color=green, key=0, style=solid];
m32_41 -> m32_42  [color=green, key=0, style=solid];
m32_41 -> m32_43  [color=green, key=2, style=dotted];
m32_42 -> m32_40  [color=blue, key=0, style=bold];
m32_44 -> m32_45  [key=0, style=solid];
m32_45 -> m32_46  [key=0, style=solid];
m32_45 -> m32_47  [key=2, style=dotted];
m32_46 -> m32_44  [color=blue, key=0, style=bold];
m32_15 -> m32_29  [key=0, style=solid];
m32_15 -> m32_32  [color=darkseagreen4, key=1, label=OleMenuCommandService, style=dashed];
m32_15 -> m32_5  [color=darkorchid, key=3, label="Parameter variable OleMenuCommandService commandService", style=bold];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_21  [key=2, style=dotted];
m32_32 -> m32_33  [key=0, style=solid];
m32_32 -> m32_23  [key=2, style=dotted];
m32_30 -> m32_31  [key=0, style=solid];
m32_30 -> m32_22  [key=2, style=dotted];
m32_31 -> m32_32  [key=0, style=solid];
m32_31 -> m32_31  [color=darkseagreen4, key=1, label=logoutMenuItem, style=dashed];
m32_31 -> m32_35  [color=darkseagreen4, key=1, label=logoutMenuItem, style=dashed];
m32_33 -> m32_15  [color=blue, key=0, style=bold];
m32_48 -> m32_3  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolMenuCommand", style=dashed];
m32_48 -> m32_4  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolMenuCommand", style=dashed];
m32_48 -> m32_5  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolMenuCommand", style=dashed];
m32_48 -> m32_7  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolMenuCommand", style=dashed];
m32_48 -> m32_8  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolMenuCommand", style=dashed];
m32_48 -> m32_17  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolMenuCommand", style=dashed];
m32_48 -> m32_30  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolMenuCommand", style=dashed];
m32_48 -> m32_41  [color=green, key=1, label="QuantConnect.VisualStudioPlugin.ToolMenuCommand", style=dashed];
m32_48 -> m32_45  [color=darkseagreen4, key=1, label="QuantConnect.VisualStudioPlugin.ToolMenuCommand", style=dashed];
m32_49 -> m32_25  [color=darkseagreen4, key=1, label=loginMenuItem, style=dashed];
m32_50 -> m32_35  [color=darkseagreen4, key=1, label=logoutMenuItem, style=dashed];
m36_43 -> m36_44  [key=0, style=solid];
m36_43 -> m36_45  [key=2, style=dotted];
m36_19 -> m36_0  [color=blue, key=0, style=bold];
m36_50 -> m36_51  [key=0, style=solid];
m36_50 -> m36_52  [key=2, style=dotted];
m36_50 -> m36_53  [key=2, style=dotted];
m36_31 -> m36_29  [key=0, style=solid];
m36_31 -> m36_40  [key=2, style=dotted];
m36_69 -> m36_74  [key=0, style=solid];
m36_69 -> m36_67  [color=blue, key=0, style=bold];
m36_74 -> m36_69  [color=blue, key=0, style=bold];
m36_74 -> m36_49  [color=green, key=0, style=solid];
m36_74 -> m36_76  [color=green, key=2, style=dotted];
m36_39 -> m36_40  [key=0, style=solid];
m36_89 -> m36_96  [key=0, style=solid];
m36_89 -> m36_101  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m36_89 -> m36_75  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.BaseData input", style=bold];
m36_89 -> m36_76  [color=darkorchid, key=3, label="Parameter variable decimal averagePrice", style=bold];
m36_89 -> m36_55  [color=darkorchid, key=3, label="method methodReturn bool TryGetVolumeAndAveragePrice", style=bold];
m36_89 -> m36_59  [color=darkorchid, key=3, label="method methodReturn bool TryGetVolumeAndAveragePrice", style=bold];
m36_89 -> m36_90  [key=0, style=solid];
m36_96 -> m36_97  [key=0, style=solid];
m36_96 -> m36_98  [color=darkseagreen4, key=1, label=tick, style=dashed];
m36_96 -> m36_99  [color=darkseagreen4, key=1, label=tick, style=dashed];
m36_101 -> m36_102  [key=0, style=solid];
m36_101 -> m36_103  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m36_101 -> m36_104  [color=darkseagreen4, key=1, label=tradeBar, style=dashed];
m36_97 -> m36_98  [key=0, style=solid];
m36_97 -> m36_101  [key=0, style=solid];
m36_97 -> m36_80  [color=blue, key=0, style=bold];
m36_98 -> m36_99  [key=0, style=solid];
m36_99 -> m36_100  [key=0, style=solid];
m36_100 -> m36_109  [key=0, style=solid];
m36_102 -> m36_103  [key=0, style=solid];
m36_102 -> m36_106  [key=0, style=solid];
m36_103 -> m36_104  [key=0, style=solid];
m36_103 -> m36_59  [color=green, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_34  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_3  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_8  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_50  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_10  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_11  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_12  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_13  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_14  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_15  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_55  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_68  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_103 -> m36_78  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation", style=dashed];
m36_104 -> m36_105  [key=0, style=solid];
m36_104 -> m36_34  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_106 -> m36_107  [key=0, style=solid];
m36_106 -> m36_109  [color=darkseagreen4, key=1, label="out decimal", style=dashed];
m36_106 -> m36_74  [color=green, key=1, label=deepITM, style=dashed];
m36_105 -> m36_109  [key=0, style=solid];
m36_105 -> m36_68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_105 -> m36_78  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_105 -> m36_63  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_107 -> m36_108  [key=0, style=solid];
m36_107 -> m36_109  [color=darkseagreen4, key=1, label="out decimal", style=dashed];
m36_107 -> m36_82  [color=darkseagreen4, key=1, label=backtestingBrokerage, style=dashed];
m36_108 -> m36_109  [key=0, style=solid];
m36_109 -> m36_89  [color=blue, key=0, style=bold];
m36_76 -> m36_77  [key=0, style=solid];
m36_21 -> m36_51  [color=red, key=0, style=solid];
m36_21 -> m36_52  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m36_21 -> m36_53  [color=red, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m36_21 -> m36_56  [color=red, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m36_21 -> m36_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData data", style=bold];
m36_21 -> m36_4  [color=darkorchid, key=3, label="Parameter variable decimal unorderedQuantity", style=bold];
m36_21 -> m36_55  [color=darkorchid, key=3, label="method methodReturn bool PriceIsFavorable", style=bold];
m36_21 -> m36_59  [color=darkorchid, key=3, label="method methodReturn bool PriceIsFavorable", style=bold];
m36_51 -> m36_52  [color=red, key=0, style=solid];
m36_51 -> m36_54  [color=red, key=1, label=vwap, style=dashed];
m36_51 -> m36_57  [color=red, key=1, label=vwap, style=dashed];
m36_51 -> m36_49  [color=blue, key=0, style=bold];
m36_52 -> m36_53  [color=red, key=0, style=solid];
m36_52 -> m36_56  [color=red, key=0, style=solid];
m36_53 -> m36_54  [color=red, key=0, style=solid];
m36_56 -> m36_57  [color=red, key=0, style=solid];
m36_56 -> m36_60  [key=0, style=solid];
m36_54 -> m36_55  [color=red, key=0, style=solid];
m36_54 -> m36_59  [color=red, key=0, style=solid];
m36_54 -> m36_57  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IBrokerage", style=dashed];
m36_54 -> m36_58  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_54 -> m36_63  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_54 -> m36_68  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_54 -> m36_78  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_57 -> m36_58  [color=red, key=0, style=solid];
m36_57 -> m36_59  [color=red, key=0, style=solid];
m36_57 -> m36_82  [color=darkseagreen4, key=1, label=backtestingBrokerage, style=dashed];
m36_55 -> m36_60  [key=0, style=solid];
m36_55 -> m36_57  [key=0, style=solid];
m36_55 -> m36_56  [key=0, style=solid];
m36_55 -> m36_0  [key=2, style=dotted];
m36_59 -> m36_60  [color=green, key=0, style=solid];
m36_59 -> m36_20  [color=green, key=2, style=dotted];
m36_59 -> m36_23  [color=green, key=2, style=dotted];
m36_59 -> m36_61  [color=green, key=2, style=dotted];
m36_59 -> m36_67  [color=green, key=1, label="lambda expression", style=dashed];
m36_59 -> m36_70  [color=green, key=1, label="lambda expression", style=dashed];
m36_59 -> m36_73  [color=green, key=1, label="lambda expression", style=dashed];
m36_59 -> m36_77  [color=green, key=1, label="lambda expression", style=dashed];
m36_59 -> m36_81  [color=green, key=1, label="lambda expression", style=dashed];
m36_58 -> m36_60  [key=0, style=solid];
m36_58 -> m36_59  [color=green, key=0, style=solid];
m36_58 -> m36_74  [color=green, key=1, label=deepITM, style=dashed];
m36_58 -> m36_63  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_58 -> m36_64  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_60 -> m36_21  [color=blue, key=0, style=bold];
m36_60 -> m36_54  [color=blue, key=0, style=bold];
m36_42 -> m36_43  [key=0, style=solid];
m36_94 -> m36_95  [key=0, style=solid];
m36_94 -> m36_101  [key=2, style=dotted];
m36_95 -> m36_96  [key=0, style=solid];
m36_0 -> m36_1  [key=0, style=solid];
m36_0 -> m36_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m36_0 -> m36_13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_0 -> m36_14  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_0 -> m36_2  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_0 -> m36_34  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_0 -> m36_11  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_18  [key=2, style=dotted];
m36_1 -> m36_12  [key=0, style=solid];
m36_4 -> m36_5  [key=0, style=solid];
m36_4 -> m36_19  [key=2, style=dotted];
m36_4 -> m36_8  [color=darkseagreen4, key=1, label=scans, style=dashed];
m36_4 -> m36_10  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m36_4 -> m36_13  [color=darkseagreen4, key=1, label=unorderedQuantity, style=dashed];
m36_4 -> m36_9  [color=darkseagreen4, key=1, label=scans, style=dashed];
m36_4 -> m36_24  [key=2, style=dotted];
m36_13 -> m36_14  [key=0, style=solid];
m36_13 -> m36_25  [key=2, style=dotted];
m36_13 -> m36_26  [key=2, style=dotted];
m36_13 -> m36_17  [key=0, style=solid];
m36_13 -> m36_31  [key=2, style=dotted];
m36_14 -> m36_15  [key=0, style=solid];
m36_14 -> m36_19  [key=2, style=dotted];
m36_14 -> m36_16  [key=0, style=solid];
m36_14 -> m36_31  [key=2, style=dotted];
m36_2 -> m36_3  [key=0, style=solid];
m36_2 -> m36_17  [key=0, style=solid];
m36_2 -> m36_4  [color=darkseagreen4, key=1, label=target, style=dashed];
m36_2 -> m36_14  [color=darkseagreen4, key=1, label=target, style=dashed];
m36_2 -> m36_16  [color=darkseagreen4, key=1, label=target, style=dashed];
m36_2 -> m36_20  [key=2, style=dotted];
m36_2 -> m36_23  [key=2, style=dotted];
m36_2 -> m36_21  [key=2, style=dotted];
m36_2 -> m36_22  [key=2, style=dotted];
m36_2 -> m36_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_2 -> m36_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_2 -> m36_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_2 -> m36_5  [color=darkseagreen4, key=1, label=expirations, style=dashed];
m36_3 -> m36_4  [key=0, style=solid];
m36_3 -> m36_6  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m36_3 -> m36_7  [color=darkseagreen4, key=1, label=scansCount, style=dashed];
m36_16 -> m36_2  [key=0, style=solid];
m36_16 -> m36_27  [key=2, style=dotted];
m36_16 -> m36_19  [key=0, style=solid];
m36_6 -> m36_7  [key=0, style=solid];
m36_6 -> m36_2  [key=0, style=solid];
m36_6 -> m36_20  [key=2, style=dotted];
m36_6 -> m36_8  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m36_6 -> m36_9  [color=darkseagreen4, key=1, label=data, style=dashed];
m36_6 -> m36_11  [color=darkseagreen4, key=1, label=data, style=dashed];
m36_6 -> m36_13  [color=darkseagreen4, key=1, label=data, style=dashed];
m36_5 -> m36_6  [key=0, style=solid];
m36_5 -> m36_9  [key=0, style=solid];
m36_8 -> m36_9  [key=0, style=solid];
m36_8 -> m36_14  [key=0, style=solid];
m36_8 -> m36_21  [key=2, style=dotted];
m36_8 -> m36_7  [key=0, style=solid];
m36_8 -> m36_26  [key=2, style=dotted];
m36_8 -> m36_27  [key=2, style=dotted];
m36_10 -> m36_11  [key=0, style=solid];
m36_10 -> m36_23  [key=2, style=dotted];
m36_10 -> m36_24  [key=2, style=dotted];
m36_10 -> m36_30  [key=2, style=dotted];
m36_7 -> m36_8  [key=0, style=solid];
m36_7 -> m36_2  [key=0, style=solid];
m36_7 -> m36_5  [key=0, style=solid];
m36_7 -> m36_25  [key=2, style=dotted];
m36_9 -> m36_10  [key=0, style=solid];
m36_9 -> m36_22  [key=2, style=dotted];
m36_9 -> m36_28  [key=2, style=dotted];
m36_9 -> m36_29  [key=2, style=dotted];
m36_9 -> m36_21  [key=2, style=dotted];
m36_9 -> m36_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_9 -> m36_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_9 -> m36_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_11 -> m36_12  [key=0, style=solid];
m36_11 -> m36_11  [color=darkseagreen4, key=1, label=orderSize, style=dashed];
m36_11 -> m36_13  [color=darkseagreen4, key=1, label=orderSize, style=dashed];
m36_12 -> m36_13  [key=0, style=solid];
m36_12 -> m36_14  [key=0, style=solid];
m36_12 -> m36_18  [key=0, style=solid];
m36_15 -> m36_16  [key=0, style=solid];
m36_15 -> m36_2  [key=0, style=solid];
m36_15 -> m36_14  [key=0, style=solid];
m36_15 -> m36_32  [key=2, style=dotted];
m36_17 -> m36_0  [color=blue, key=0, style=bold];
m36_17 -> m36_19  [key=0, style=solid];
m36_62 -> m36_63  [key=0, style=solid];
m36_62 -> m36_64  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_62 -> m36_67  [key=2, style=dotted];
m36_48 -> m36_49  [key=0, style=solid];
m36_48 -> m36_50  [key=2, style=dotted];
m36_48 -> m36_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe>", style=dashed];
m36_48 -> m36_46  [color=blue, key=0, style=bold];
m36_47 -> m36_48  [key=0, style=solid];
m36_49 -> m36_47  [color=blue, key=0, style=bold];
m36_49 -> m36_73  [color=blue, key=0, style=bold];
m36_49 -> m36_50  [key=0, style=solid];
m36_71 -> m36_72  [key=0, style=solid];
m36_72 -> m36_73  [key=0, style=solid];
m36_72 -> m36_70  [color=blue, key=0, style=bold];
m36_73 -> m36_71  [color=blue, key=0, style=bold];
m36_73 -> m36_74  [color=green, key=0, style=solid];
m36_67 -> m36_68  [key=0, style=solid];
m36_70 -> m36_71  [key=0, style=solid];
m36_77 -> m36_78  [key=0, style=solid];
m36_77 -> m36_79  [key=0, style=solid];
m36_77 -> m36_89  [key=2, style=dotted];
m36_77 -> m36_83  [color=darkseagreen4, key=1, label=volume, style=dashed];
m36_77 -> m36_84  [color=darkseagreen4, key=1, label=volume, style=dashed];
m36_81 -> m36_82  [key=0, style=solid];
m36_34 -> m36_35  [key=0, style=solid];
m36_34 -> m36_32  [key=0, style=solid];
m36_34 -> m36_20  [key=2, style=dotted];
m36_34 -> m36_37  [color=darkseagreen4, key=1, label=data, style=dashed];
m36_68 -> m36_68  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m36_68 -> m36_69  [key=0, style=solid];
m36_78 -> m36_79  [key=0, style=solid];
m36_78 -> m36_80  [key=2, style=dotted];
m36_78 -> m36_88  [key=0, style=solid];
m36_78 -> m36_90  [key=2, style=dotted];
m36_63 -> m36_64  [key=0, style=solid];
m36_63 -> m36_68  [key=2, style=dotted];
m36_82 -> m36_83  [key=0, style=solid];
m36_82 -> m36_84  [key=2, style=dotted];
m36_64 -> m36_65  [key=0, style=solid];
m36_64 -> m36_69  [key=2, style=dotted];
m36_79 -> m36_77  [color=blue, key=0, style=bold];
m36_79 -> m36_80  [key=0, style=solid];
m36_79 -> m36_83  [key=0, style=solid];
m36_83 -> m36_81  [color=blue, key=0, style=bold];
m36_83 -> m36_84  [key=0, style=solid];
m36_33 -> m36_34  [key=0, style=solid];
m36_36 -> m36_37  [key=0, style=solid];
m36_36 -> m36_42  [key=2, style=dotted];
m36_35 -> m36_33  [color=blue, key=0, style=bold];
m36_35 -> m36_36  [key=0, style=solid];
m36_35 -> m36_32  [key=0, style=solid];
m36_35 -> m36_41  [key=2, style=dotted];
m36_46 -> m36_47  [key=0, style=solid];
m36_65 -> m36_66  [key=0, style=solid];
m36_65 -> m36_70  [key=2, style=dotted];
m36_65 -> m36_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_38 -> m36_36  [color=blue, key=0, style=bold];
m36_38 -> m36_28  [color=blue, key=0, style=bold];
m36_37 -> m36_38  [key=0, style=solid];
m36_37 -> m36_32  [key=0, style=solid];
m36_37 -> m36_43  [key=2, style=dotted];
m36_41 -> m36_39  [color=blue, key=0, style=bold];
m36_41 -> m36_44  [key=0, style=solid];
m36_41 -> m36_48  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_41 -> m36_28  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Algorithm.Framework.QCAlgorithmFramework algorithm", style=bold];
m36_40 -> m36_41  [key=0, style=solid];
m36_40 -> m36_61  [key=0, style=solid];
m36_40 -> m36_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m36_40 -> m36_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m36_40 -> m36_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m36_44 -> m36_42  [color=blue, key=0, style=bold];
m36_44 -> m36_45  [key=0, style=solid];
m36_44 -> m36_46  [key=2, style=dotted];
m36_44 -> m36_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_66 -> m36_62  [color=blue, key=0, style=bold];
m36_66 -> m36_40  [color=blue, key=0, style=bold];
m36_61 -> m36_62  [key=0, style=solid];
m36_91 -> m36_92  [key=0, style=solid];
m36_91 -> m36_102  [key=2, style=dotted];
m36_91 -> m36_100  [key=2, style=dotted];
m36_92 -> m36_93  [key=0, style=solid];
m36_92 -> m36_94  [key=2, style=dotted];
m36_92 -> m36_95  [key=2, style=dotted];
m36_92 -> m36_101  [key=2, style=dotted];
m36_93 -> m36_91  [color=blue, key=0, style=bold];
m36_93 -> m36_94  [key=0, style=solid];
m36_93 -> m36_99  [key=2, style=dotted];
m36_93 -> m36_100  [key=2, style=dotted];
m36_32 -> m36_33  [key=0, style=solid];
m36_32 -> m36_38  [key=0, style=solid];
m36_32 -> m36_34  [color=darkseagreen4, key=1, label=removed, style=dashed];
m36_32 -> m36_35  [color=darkseagreen4, key=1, label=removed, style=dashed];
m36_32 -> m36_36  [color=darkseagreen4, key=1, label=removed, style=dashed];
m36_32 -> m36_37  [color=darkseagreen4, key=1, label=removed, style=dashed];
m36_75 -> m36_76  [key=0, style=solid];
m36_75 -> m36_77  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m36_75 -> m36_79  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m36_75 -> m36_82  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m36_75 -> m36_86  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m36_86 -> m36_88  [key=0, style=solid];
m36_86 -> m36_87  [key=0, style=solid];
m36_86 -> m36_95  [color=darkseagreen4, key=1, label=underlyingPrice, style=dashed];
m36_84 -> m36_85  [key=0, style=solid];
m36_80 -> m36_81  [key=0, style=solid];
m36_80 -> m36_85  [key=0, style=solid];
m36_80 -> m36_86  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m36_80 -> m36_87  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m36_80 -> m36_88  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m36_80 -> m36_89  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m36_80 -> m36_90  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m36_80 -> m36_91  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m36_80 -> m36_92  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m36_80 -> m36_93  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m36_80 -> m36_94  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m36_80 -> m36_95  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Option.Option", style=dashed];
m36_85 -> m36_86  [key=0, style=solid];
m36_85 -> m36_87  [key=0, style=solid];
m36_85 -> m36_90  [color=darkseagreen4, key=1, label=optionPrice, style=dashed];
m36_87 -> m36_88  [key=0, style=solid];
m36_87 -> m36_98  [key=2, style=dotted];
m36_87 -> m36_93  [color=darkseagreen4, key=1, label=underlyingQuantity, style=dashed];
m36_87 -> m36_95  [color=darkseagreen4, key=1, label=underlyingQuantity, style=dashed];
m36_88 -> m36_75  [color=blue, key=0, style=bold];
m36_88 -> m36_89  [key=0, style=solid];
m36_88 -> m36_99  [key=2, style=dotted];
m36_88 -> m36_100  [key=2, style=dotted];
m36_28 -> m36_29  [key=0, style=solid];
m36_28 -> m36_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m36_28 -> m36_32  [color=darkseagreen4, key=1, label="QuantConnect.Data.UniverseSelection.SecurityChanges", style=dashed];
m36_28 -> m36_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m36_28 -> m36_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.QCAlgorithmFramework", style=dashed];
m36_30 -> m36_31  [key=0, style=solid];
m36_30 -> m36_29  [key=0, style=solid];
m36_30 -> m36_39  [key=2, style=dotted];
m36_29 -> m36_30  [key=0, style=solid];
m36_29 -> m36_32  [key=0, style=solid];
m36_29 -> m36_31  [color=darkseagreen4, key=1, label=added, style=dashed];
m36_45 -> m36_41  [color=blue, key=0, style=bold];
m36_90 -> m36_91  [key=0, style=solid];
m36_90 -> m36_96  [color=darkseagreen4, key=1, label=basePnL, style=dashed];
m36_18 -> m36_19  [key=0, style=solid];
m36_110 -> m36_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_110 -> m36_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_110 -> m36_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_110 -> m36_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_110 -> m36_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_110 -> m36_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_110 -> m36_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_110 -> m36_31  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_110 -> m36_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_110 -> m36_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_110 -> m36_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel", style=dashed];
m36_111 -> m36_48  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m36_112 -> m36_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m36_112 -> m36_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m36_112 -> m36_64  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m36_112 -> m36_65  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.SymbolData", style=dashed];
m36_113 -> m36_77  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m36_113 -> m36_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m36_113 -> m36_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m36_113 -> m36_81  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m36_113 -> m36_82  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m36_113 -> m36_83  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m36_113 -> m36_84  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m36_113 -> m36_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m36_113 -> m36_87  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.Framework.Execution.VolumeWeightedAveragePriceExecutionModel.IntradayVwap", style=dashed];
m37_41 -> m37_42  [key=0, style=solid];
m37_42 -> m37_43  [key=0, style=solid];
m37_42 -> m37_44  [key=2, style=dotted];
m37_42 -> m37_33  [key=2, style=dotted];
m37_43 -> m37_41  [color=blue, key=0, style=bold];
m37_0 -> m37_1  [key=0, style=solid];
m37_0 -> m37_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m37_1 -> m37_2  [key=0, style=solid];
m37_2 -> m37_3  [key=0, style=solid];
m37_3 -> m37_0  [color=blue, key=0, style=bold];
m37_11 -> m37_12  [key=0, style=solid];
m37_12 -> m37_13  [key=0, style=solid];
m37_12 -> m37_7  [key=2, style=dotted];
m37_13 -> m37_11  [color=blue, key=0, style=bold];
m37_134 -> m37_169  [key=0, style=solid];
m37_169 -> m37_170  [key=0, style=solid];
m37_169 -> m37_158  [key=2, style=dotted];
m37_169 -> m37_33  [key=2, style=dotted];
m37_170 -> m37_134  [color=blue, key=0, style=bold];
m37_275 -> m37_276  [key=0, style=solid];
m37_59 -> m37_60  [key=0, style=solid];
m37_59 -> m37_61  [color=darkseagreen4, key=1, label=res, style=dashed];
m37_60 -> m37_61  [key=0, style=solid];
m37_60 -> m37_64  [key=2, style=dotted];
m37_60 -> m37_65  [key=2, style=dotted];
m37_61 -> m37_62  [key=0, style=solid];
m37_61 -> m37_66  [key=2, style=dotted];
m37_61 -> m37_67  [key=2, style=dotted];
m37_61 -> m37_68  [key=2, style=dotted];
m37_54 -> m37_55  [key=0, style=solid];
m37_54 -> m37_60  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_69 -> m37_70  [key=0, style=solid];
m37_55 -> m37_56  [key=0, style=solid];
m37_55 -> m37_59  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_55 -> m37_61  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_56 -> m37_57  [key=0, style=solid];
m37_56 -> m37_63  [key=2, style=dotted];
m37_56 -> m37_61  [color=darkseagreen4, key=1, label=config, style=dashed];
m37_57 -> m37_58  [key=0, style=solid];
m37_57 -> m37_59  [key=0, style=solid];
m37_58 -> m37_62  [key=0, style=solid];
m37_62 -> m37_54  [color=blue, key=0, style=bold];
m37_70 -> m37_71  [key=0, style=solid];
m37_71 -> m37_69  [color=blue, key=0, style=bold];
m37_80 -> m37_81  [key=0, style=solid];
m37_80 -> m37_68  [key=2, style=dotted];
m37_75 -> m37_76  [key=0, style=solid];
m37_82 -> m37_83  [key=0, style=solid];
m37_76 -> m37_77  [key=0, style=solid];
m37_76 -> m37_80  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_77 -> m37_78  [key=0, style=solid];
m37_77 -> m37_63  [key=2, style=dotted];
m37_77 -> m37_80  [color=darkseagreen4, key=1, label=config, style=dashed];
m37_78 -> m37_79  [key=0, style=solid];
m37_78 -> m37_80  [key=0, style=solid];
m37_79 -> m37_81  [key=0, style=solid];
m37_81 -> m37_75  [color=blue, key=0, style=bold];
m37_83 -> m37_84  [key=0, style=solid];
m37_84 -> m37_82  [color=blue, key=0, style=bold];
m37_120 -> m37_121  [key=0, style=solid];
m37_121 -> m37_122  [key=0, style=solid];
m37_122 -> m37_120  [color=blue, key=0, style=bold];
m37_136 -> m37_137  [key=0, style=solid];
m37_137 -> m37_138  [key=0, style=solid];
m37_138 -> m37_136  [color=blue, key=0, style=bold];
m37_236 -> m37_237  [key=0, style=solid];
m37_236 -> m37_68  [key=2, style=dotted];
m37_236 -> m37_239  [color=darkseagreen4, key=1, label=request, style=dashed];
m37_236 -> m37_241  [color=darkseagreen4, key=1, label=request, style=dashed];
m37_236 -> m37_242  [color=darkseagreen4, key=1, label=request, style=dashed];
m37_237 -> m37_238  [key=0, style=solid];
m37_237 -> m37_239  [color=darkseagreen4, key=1, label=res, style=dashed];
m37_238 -> m37_239  [key=0, style=solid];
m37_238 -> m37_240  [key=0, style=solid];
m37_239 -> m37_240  [key=0, style=solid];
m37_240 -> m37_241  [key=0, style=solid];
m37_240 -> m37_242  [key=0, style=solid];
m37_241 -> m37_242  [key=0, style=solid];
m37_229 -> m37_230  [key=0, style=solid];
m37_232 -> m37_233  [key=0, style=solid];
m37_232 -> m37_234  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_230 -> m37_231  [key=0, style=solid];
m37_230 -> m37_193  [key=2, style=dotted];
m37_231 -> m37_229  [color=blue, key=0, style=bold];
m37_233 -> m37_234  [key=0, style=solid];
m37_233 -> m37_203  [key=2, style=dotted];
m37_233 -> m37_242  [color=darkseagreen4, key=1, label=requests, style=dashed];
m37_233 -> m37_243  [color=darkseagreen4, key=1, label=requests, style=dashed];
m37_234 -> m37_235  [key=0, style=solid];
m37_234 -> m37_236  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_234 -> m37_237  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_242 -> m37_235  [key=0, style=solid];
m37_242 -> m37_246  [key=2, style=dotted];
m37_243 -> m37_244  [key=0, style=solid];
m37_235 -> m37_236  [key=0, style=solid];
m37_235 -> m37_243  [key=0, style=solid];
m37_235 -> m37_245  [key=2, style=dotted];
m37_244 -> m37_232  [color=blue, key=0, style=bold];
m37_254 -> m37_255  [key=0, style=solid];
m37_254 -> m37_256  [color=darkseagreen4, key=1, label=res, style=dashed];
m37_255 -> m37_256  [key=0, style=solid];
m37_255 -> m37_64  [key=2, style=dotted];
m37_255 -> m37_257  [color=darkseagreen4, key=1, label=start, style=dashed];
m37_255 -> m37_260  [color=darkseagreen4, key=1, label=start, style=dashed];
m37_257 -> m37_258  [key=0, style=solid];
m37_257 -> m37_245  [key=2, style=dotted];
m37_257 -> m37_49  [key=2, style=dotted];
m37_257 -> m37_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_260 -> m37_261  [key=0, style=solid];
m37_260 -> m37_68  [key=2, style=dotted];
m37_249 -> m37_250  [key=0, style=solid];
m37_252 -> m37_253  [key=0, style=solid];
m37_252 -> m37_255  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_250 -> m37_251  [key=0, style=solid];
m37_250 -> m37_193  [key=2, style=dotted];
m37_251 -> m37_249  [color=blue, key=0, style=bold];
m37_253 -> m37_254  [key=0, style=solid];
m37_253 -> m37_257  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_253 -> m37_260  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_256 -> m37_257  [key=0, style=solid];
m37_256 -> m37_66  [key=2, style=dotted];
m37_256 -> m37_67  [key=2, style=dotted];
m37_256 -> m37_260  [color=darkseagreen4, key=1, label=end, style=dashed];
m37_258 -> m37_252  [color=blue, key=0, style=bold];
m37_259 -> m37_260  [key=0, style=solid];
m37_261 -> m37_259  [color=blue, key=0, style=bold];
m37_276 -> m37_277  [key=0, style=solid];
m37_277 -> m37_275  [color=blue, key=0, style=bold];
m37_63 -> m37_268  [key=0, style=solid];
m37_268 -> m37_269  [key=0, style=solid];
m37_268 -> m37_245  [key=2, style=dotted];
m37_268 -> m37_270  [key=2, style=dotted];
m37_269 -> m37_63  [color=blue, key=0, style=bold];
m37_64 -> m37_161  [key=0, style=solid];
m37_64 -> m37_162  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_64 -> m37_164  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_161 -> m37_162  [key=0, style=solid];
m37_161 -> m37_164  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_161 -> m37_165  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_162 -> m37_163  [key=0, style=solid];
m37_162 -> m37_66  [key=2, style=dotted];
m37_164 -> m37_165  [key=0, style=solid];
m37_164 -> m37_26  [key=2, style=dotted];
m37_164 -> m37_167  [key=2, style=dotted];
m37_165 -> m37_166  [key=0, style=solid];
m37_165 -> m37_168  [key=2, style=dotted];
m37_163 -> m37_164  [key=0, style=solid];
m37_163 -> m37_163  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m37_166 -> m37_64  [color=blue, key=0, style=bold];
m37_102 -> m37_103  [key=0, style=solid];
m37_102 -> m37_105  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_102 -> m37_107  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_102 -> m37_112  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_102 -> m37_113  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_102 -> m37_114  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_103 -> m37_104  [key=0, style=solid];
m37_103 -> m37_105  [key=0, style=solid];
m37_105 -> m37_106  [key=0, style=solid];
m37_105 -> m37_107  [key=0, style=solid];
m37_107 -> m37_108  [key=0, style=solid];
m37_107 -> m37_109  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_107 -> m37_111  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_107 -> m37_114  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_112 -> m37_115  [key=0, style=solid];
m37_112 -> m37_118  [key=2, style=dotted];
m37_112 -> m37_119  [key=2, style=dotted];
m37_113 -> m37_114  [key=0, style=solid];
m37_113 -> m37_64  [key=2, style=dotted];
m37_114 -> m37_115  [key=0, style=solid];
m37_114 -> m37_66  [key=2, style=dotted];
m37_114 -> m37_67  [key=2, style=dotted];
m37_114 -> m37_88  [key=2, style=dotted];
m37_114 -> m37_33  [key=2, style=dotted];
m37_104 -> m37_115  [key=0, style=solid];
m37_104 -> m37_99  [key=2, style=dotted];
m37_106 -> m37_115  [key=0, style=solid];
m37_106 -> m37_99  [key=2, style=dotted];
m37_108 -> m37_109  [key=0, style=solid];
m37_108 -> m37_112  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m37_109 -> m37_110  [key=0, style=solid];
m37_109 -> m37_63  [key=2, style=dotted];
m37_111 -> m37_112  [key=0, style=solid];
m37_111 -> m37_49  [key=2, style=dotted];
m37_111 -> m37_116  [key=2, style=dotted];
m37_111 -> m37_117  [key=2, style=dotted];
m37_111 -> m37_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_110 -> m37_111  [key=0, style=solid];
m37_110 -> m37_113  [key=0, style=solid];
m37_115 -> m37_102  [color=blue, key=0, style=bold];
m37_14 -> m37_15  [key=0, style=solid];
m37_15 -> m37_16  [key=0, style=solid];
m37_16 -> m37_14  [color=blue, key=0, style=bold];
m37_7 -> m37_8  [key=0, style=solid];
m37_7 -> m37_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_8 -> m37_9  [key=0, style=solid];
m37_9 -> m37_10  [key=0, style=solid];
m37_10 -> m37_7  [color=blue, key=0, style=bold];
m37_34 -> m37_35  [key=0, style=solid];
m37_35 -> m37_36  [key=0, style=solid];
m37_35 -> m37_37  [key=2, style=dotted];
m37_35 -> m37_33  [key=2, style=dotted];
m37_36 -> m37_34  [color=blue, key=0, style=bold];
m37_195 -> m37_207  [key=0, style=solid];
m37_195 -> m37_209  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m37_195 -> m37_210  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m37_207 -> m37_208  [key=0, style=solid];
m37_207 -> m37_66  [key=2, style=dotted];
m37_209 -> m37_210  [key=0, style=solid];
m37_209 -> m37_26  [key=2, style=dotted];
m37_209 -> m37_167  [key=2, style=dotted];
m37_210 -> m37_211  [key=0, style=solid];
m37_210 -> m37_168  [key=2, style=dotted];
m37_208 -> m37_209  [key=0, style=solid];
m37_208 -> m37_208  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m37_211 -> m37_195  [color=blue, key=0, style=bold];
m37_145 -> m37_152  [key=0, style=solid];
m37_152 -> m37_153  [key=0, style=solid];
m37_152 -> m37_32  [key=2, style=dotted];
m37_152 -> m37_33  [key=2, style=dotted];
m37_153 -> m37_145  [color=blue, key=0, style=bold];
m37_245 -> m37_271  [key=0, style=solid];
m37_271 -> m37_272  [key=0, style=solid];
m37_271 -> m37_273  [key=2, style=dotted];
m37_271 -> m37_274  [key=2, style=dotted];
m37_271 -> m37_275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_271 -> m37_271  [color=darkseagreen4, key=1, label=sub, style=dashed];
m37_272 -> m37_245  [color=blue, key=0, style=bold];
m37_45 -> m37_46  [key=0, style=solid];
m37_45 -> m37_59  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_45 -> m37_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_45 -> m37_61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_46 -> m37_47  [key=0, style=solid];
m37_46 -> m37_49  [key=2, style=dotted];
m37_46 -> m37_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_47 -> m37_48  [key=0, style=solid];
m37_47 -> m37_50  [key=2, style=dotted];
m37_47 -> m37_51  [key=2, style=dotted];
m37_47 -> m37_52  [key=2, style=dotted];
m37_47 -> m37_53  [key=2, style=dotted];
m37_47 -> m37_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_48 -> m37_45  [color=blue, key=0, style=bold];
m37_29 -> m37_30  [key=0, style=solid];
m37_30 -> m37_31  [key=0, style=solid];
m37_30 -> m37_32  [key=2, style=dotted];
m37_30 -> m37_33  [key=2, style=dotted];
m37_31 -> m37_29  [color=blue, key=0, style=bold];
m37_89 -> m37_90  [key=0, style=solid];
m37_89 -> m37_92  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_89 -> m37_93  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_89 -> m37_94  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_89 -> m37_97  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_90 -> m37_91  [key=0, style=solid];
m37_90 -> m37_92  [key=0, style=solid];
m37_92 -> m37_93  [key=0, style=solid];
m37_92 -> m37_97  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_93 -> m37_94  [key=0, style=solid];
m37_93 -> m37_64  [key=2, style=dotted];
m37_93 -> m37_97  [color=darkseagreen4, key=1, label=start, style=dashed];
m37_94 -> m37_95  [key=0, style=solid];
m37_97 -> m37_98  [key=0, style=solid];
m37_97 -> m37_66  [key=2, style=dotted];
m37_97 -> m37_67  [key=2, style=dotted];
m37_97 -> m37_32  [key=2, style=dotted];
m37_97 -> m37_101  [key=2, style=dotted];
m37_97 -> m37_33  [key=2, style=dotted];
m37_91 -> m37_98  [key=0, style=solid];
m37_91 -> m37_99  [key=2, style=dotted];
m37_95 -> m37_96  [key=0, style=solid];
m37_95 -> m37_97  [key=0, style=solid];
m37_96 -> m37_97  [key=0, style=solid];
m37_96 -> m37_100  [key=2, style=dotted];
m37_98 -> m37_89  [color=blue, key=0, style=bold];
m37_139 -> m37_140  [key=0, style=solid];
m37_139 -> m37_143  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_140 -> m37_141  [key=0, style=solid];
m37_143 -> m37_144  [key=0, style=solid];
m37_143 -> m37_145  [key=2, style=dotted];
m37_143 -> m37_101  [key=2, style=dotted];
m37_143 -> m37_33  [key=2, style=dotted];
m37_141 -> m37_142  [key=0, style=solid];
m37_141 -> m37_143  [key=0, style=solid];
m37_142 -> m37_143  [key=0, style=solid];
m37_142 -> m37_100  [key=2, style=dotted];
m37_144 -> m37_139  [color=blue, key=0, style=bold];
m37_146 -> m37_147  [key=0, style=solid];
m37_146 -> m37_150  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_147 -> m37_148  [key=0, style=solid];
m37_150 -> m37_151  [key=0, style=solid];
m37_150 -> m37_32  [key=2, style=dotted];
m37_150 -> m37_101  [key=2, style=dotted];
m37_150 -> m37_33  [key=2, style=dotted];
m37_148 -> m37_149  [key=0, style=solid];
m37_148 -> m37_150  [key=0, style=solid];
m37_149 -> m37_150  [key=0, style=solid];
m37_149 -> m37_100  [key=2, style=dotted];
m37_151 -> m37_146  [color=blue, key=0, style=bold];
m37_38 -> m37_39  [key=0, style=solid];
m37_39 -> m37_40  [key=0, style=solid];
m37_39 -> m37_41  [key=2, style=dotted];
m37_39 -> m37_33  [key=2, style=dotted];
m37_40 -> m37_38  [color=blue, key=0, style=bold];
m37_85 -> m37_86  [key=0, style=solid];
m37_86 -> m37_87  [key=0, style=solid];
m37_86 -> m37_88  [key=2, style=dotted];
m37_86 -> m37_33  [key=2, style=dotted];
m37_87 -> m37_85  [color=blue, key=0, style=bold];
m37_32 -> m37_159  [key=0, style=solid];
m37_159 -> m37_160  [key=0, style=solid];
m37_159 -> m37_27  [key=2, style=dotted];
m37_159 -> m37_158  [key=2, style=dotted];
m37_159 -> m37_33  [key=2, style=dotted];
m37_160 -> m37_32  [color=blue, key=0, style=bold];
m37_27 -> m37_226  [key=0, style=solid];
m37_27 -> m37_236  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m37_27 -> m37_237  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_27 -> m37_238  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m37_27 -> m37_239  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m37_27 -> m37_240  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m37_27 -> m37_241  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m37_226 -> m37_227  [key=0, style=solid];
m37_226 -> m37_50  [key=2, style=dotted];
m37_226 -> m37_228  [key=2, style=dotted];
m37_226 -> m37_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_226 -> m37_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_227 -> m37_27  [color=blue, key=0, style=bold];
m37_17 -> m37_18  [key=0, style=solid];
m37_18 -> m37_19  [key=0, style=solid];
m37_18 -> m37_20  [key=0, style=solid];
m37_19 -> m37_24  [key=0, style=solid];
m37_19 -> m37_25  [key=2, style=dotted];
m37_20 -> m37_21  [key=0, style=solid];
m37_20 -> m37_23  [key=0, style=solid];
m37_21 -> m37_22  [key=0, style=solid];
m37_21 -> m37_26  [key=2, style=dotted];
m37_23 -> m37_24  [key=0, style=solid];
m37_23 -> m37_28  [key=2, style=dotted];
m37_22 -> m37_24  [key=0, style=solid];
m37_22 -> m37_27  [key=2, style=dotted];
m37_24 -> m37_17  [color=blue, key=0, style=bold];
m37_158 -> m37_171  [key=0, style=solid];
m37_171 -> m37_172  [key=0, style=solid];
m37_171 -> m37_173  [key=2, style=dotted];
m37_171 -> m37_33  [key=2, style=dotted];
m37_172 -> m37_158  [color=blue, key=0, style=bold];
m37_37 -> m37_154  [key=0, style=solid];
m37_37 -> m37_156  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
m37_154 -> m37_155  [key=0, style=solid];
m37_154 -> m37_156  [key=0, style=solid];
m37_156 -> m37_157  [key=0, style=solid];
m37_156 -> m37_25  [key=2, style=dotted];
m37_156 -> m37_158  [key=2, style=dotted];
m37_156 -> m37_33  [key=2, style=dotted];
m37_155 -> m37_157  [key=0, style=solid];
m37_155 -> m37_99  [key=2, style=dotted];
m37_157 -> m37_37  [color=blue, key=0, style=bold];
m37_173 -> m37_212  [key=0, style=solid];
m37_173 -> m37_213  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>", style=dashed];
m37_173 -> m37_222  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m37_212 -> m37_213  [key=0, style=solid];
m37_212 -> m37_219  [color=darkseagreen4, key=1, label=sentMessage, style=dashed];
m37_213 -> m37_214  [key=0, style=solid];
m37_213 -> m37_204  [key=2, style=dotted];
m37_213 -> m37_222  [color=darkseagreen4, key=1, label=reqs, style=dashed];
m37_222 -> m37_223  [key=0, style=solid];
m37_222 -> m37_225  [key=2, style=dotted];
m37_219 -> m37_220  [key=0, style=solid];
m37_219 -> m37_214  [key=0, style=solid];
m37_214 -> m37_215  [key=0, style=solid];
m37_214 -> m37_222  [key=0, style=solid];
m37_214 -> m37_216  [color=darkseagreen4, key=1, label=request, style=dashed];
m37_214 -> m37_217  [color=darkseagreen4, key=1, label=request, style=dashed];
m37_214 -> m37_218  [color=darkseagreen4, key=1, label=request, style=dashed];
m37_215 -> m37_216  [key=0, style=solid];
m37_215 -> m37_214  [key=0, style=solid];
m37_216 -> m37_217  [key=0, style=solid];
m37_217 -> m37_218  [key=0, style=solid];
m37_217 -> m37_219  [key=0, style=solid];
m37_218 -> m37_219  [key=0, style=solid];
m37_220 -> m37_221  [key=0, style=solid];
m37_221 -> m37_214  [key=0, style=solid];
m37_221 -> m37_224  [key=2, style=dotted];
m37_223 -> m37_173  [color=blue, key=0, style=bold];
m37_174 -> m37_175  [key=0, style=solid];
m37_174 -> m37_177  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m37_174 -> m37_178  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m37_174 -> m37_181  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m37_174 -> m37_183  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m37_174 -> m37_187  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m37_175 -> m37_176  [key=0, style=solid];
m37_175 -> m37_177  [key=0, style=solid];
m37_175 -> m37_193  [key=2, style=dotted];
m37_177 -> m37_178  [key=0, style=solid];
m37_177 -> m37_194  [key=2, style=dotted];
m37_177 -> m37_179  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m37_177 -> m37_182  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m37_177 -> m37_185  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m37_177 -> m37_186  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m37_177 -> m37_187  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m37_178 -> m37_179  [key=0, style=solid];
m37_178 -> m37_195  [key=2, style=dotted];
m37_178 -> m37_187  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m37_181 -> m37_182  [key=0, style=solid];
m37_181 -> m37_183  [key=0, style=solid];
m37_183 -> m37_184  [key=0, style=solid];
m37_183 -> m37_63  [key=2, style=dotted];
m37_183 -> m37_185  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m37_183 -> m37_186  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m37_183 -> m37_187  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m37_187 -> m37_188  [key=0, style=solid];
m37_187 -> m37_198  [key=2, style=dotted];
m37_187 -> m37_65  [key=2, style=dotted];
m37_187 -> m37_199  [key=2, style=dotted];
m37_187 -> m37_200  [key=2, style=dotted];
m37_187 -> m37_201  [key=2, style=dotted];
m37_187 -> m37_202  [key=2, style=dotted];
m37_176 -> m37_192  [key=0, style=solid];
m37_179 -> m37_180  [key=0, style=solid];
m37_179 -> m37_66  [key=2, style=dotted];
m37_179 -> m37_67  [key=2, style=dotted];
m37_179 -> m37_187  [color=darkseagreen4, key=1, label=endTime, style=dashed];
m37_182 -> m37_183  [key=0, style=solid];
m37_182 -> m37_196  [key=2, style=dotted];
m37_185 -> m37_186  [key=0, style=solid];
m37_185 -> m37_196  [key=2, style=dotted];
m37_186 -> m37_187  [key=0, style=solid];
m37_186 -> m37_197  [key=2, style=dotted];
m37_186 -> m37_186  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m37_180 -> m37_181  [key=0, style=solid];
m37_180 -> m37_183  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m37_184 -> m37_185  [key=0, style=solid];
m37_184 -> m37_187  [key=0, style=solid];
m37_188 -> m37_189  [key=0, style=solid];
m37_188 -> m37_203  [key=2, style=dotted];
m37_188 -> m37_158  [key=2, style=dotted];
m37_188 -> m37_204  [key=2, style=dotted];
m37_188 -> m37_190  [color=darkseagreen4, key=1, label=history, style=dashed];
m37_189 -> m37_190  [key=0, style=solid];
m37_189 -> m37_191  [key=0, style=solid];
m37_189 -> m37_205  [key=2, style=dotted];
m37_189 -> m37_206  [key=2, style=dotted];
m37_190 -> m37_192  [key=0, style=solid];
m37_190 -> m37_206  [key=2, style=dotted];
m37_191 -> m37_192  [key=0, style=solid];
m37_192 -> m37_174  [color=blue, key=0, style=bold];
m37_25 -> m37_247  [key=0, style=solid];
m37_25 -> m37_254  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_25 -> m37_255  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_25 -> m37_257  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_25 -> m37_260  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_247 -> m37_248  [key=0, style=solid];
m37_247 -> m37_50  [key=2, style=dotted];
m37_247 -> m37_228  [key=2, style=dotted];
m37_247 -> m37_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_247 -> m37_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_248 -> m37_25  [color=blue, key=0, style=bold];
m37_4 -> m37_5  [key=0, style=solid];
m37_5 -> m37_6  [key=0, style=solid];
m37_5 -> m37_0  [key=2, style=dotted];
m37_6 -> m37_4  [color=blue, key=0, style=bold];
m37_88 -> m37_123  [key=0, style=solid];
m37_88 -> m37_125  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_88 -> m37_130  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_88 -> m37_131  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m37_88 -> m37_132  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m37_123 -> m37_124  [key=0, style=solid];
m37_123 -> m37_125  [key=0, style=solid];
m37_125 -> m37_126  [key=0, style=solid];
m37_125 -> m37_127  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_125 -> m37_129  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_125 -> m37_131  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_130 -> m37_133  [key=0, style=solid];
m37_130 -> m37_118  [key=2, style=dotted];
m37_130 -> m37_119  [key=2, style=dotted];
m37_131 -> m37_132  [key=0, style=solid];
m37_131 -> m37_68  [key=2, style=dotted];
m37_132 -> m37_133  [key=0, style=solid];
m37_132 -> m37_134  [key=2, style=dotted];
m37_132 -> m37_135  [key=2, style=dotted];
m37_132 -> m37_33  [key=2, style=dotted];
m37_124 -> m37_133  [key=0, style=solid];
m37_124 -> m37_99  [key=2, style=dotted];
m37_126 -> m37_127  [key=0, style=solid];
m37_126 -> m37_130  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m37_127 -> m37_128  [key=0, style=solid];
m37_127 -> m37_63  [key=2, style=dotted];
m37_127 -> m37_131  [color=darkseagreen4, key=1, label=config, style=dashed];
m37_129 -> m37_130  [key=0, style=solid];
m37_129 -> m37_49  [key=2, style=dotted];
m37_129 -> m37_116  [key=2, style=dotted];
m37_129 -> m37_117  [key=2, style=dotted];
m37_129 -> m37_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_128 -> m37_129  [key=0, style=solid];
m37_128 -> m37_131  [key=0, style=solid];
m37_133 -> m37_88  [color=blue, key=0, style=bold];
m37_44 -> m37_72  [key=0, style=solid];
m37_44 -> m37_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m37_72 -> m37_73  [key=0, style=solid];
m37_72 -> m37_49  [key=2, style=dotted];
m37_72 -> m37_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_73 -> m37_74  [key=0, style=solid];
m37_73 -> m37_50  [key=2, style=dotted];
m37_73 -> m37_51  [key=2, style=dotted];
m37_73 -> m37_52  [key=2, style=dotted];
m37_73 -> m37_53  [key=2, style=dotted];
m37_73 -> m37_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m37_74 -> m37_44  [color=blue, key=0, style=bold];
m37_68 -> m37_262  [key=0, style=solid];
m37_68 -> m37_263  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m37_68 -> m37_264  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m37_262 -> m37_263  [key=0, style=solid];
m37_262 -> m37_262  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_262 -> m37_264  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_263 -> m37_264  [key=0, style=solid];
m37_263 -> m37_196  [key=2, style=dotted];
m37_264 -> m37_265  [key=0, style=solid];
m37_264 -> m37_267  [key=2, style=dotted];
m37_264 -> m37_65  [key=2, style=dotted];
m37_265 -> m37_266  [key=0, style=solid];
m37_266 -> m37_68  [color=blue, key=0, style=bold];
m37_278 -> m37_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_46  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_72  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_76  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_73  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_91  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_97  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_107  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_114  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_124  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_131  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_142  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_152  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_156  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_159  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_161  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_164  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_165  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_169  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_171  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_175  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_178  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_179  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_187  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_188  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_209  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_210  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_215  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_216  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_221  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_222  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_226  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_234  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_236  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_247  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_253  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_255  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_256  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_257  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_260  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_278 -> m37_264  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m37_279 -> m37_59  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_279 -> m37_60  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_279 -> m37_61  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_280 -> m37_60  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_281 -> m37_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m37_282 -> m37_80  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m37_283 -> m37_80  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_284 -> m37_236  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m37_285 -> m37_236  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m37_286 -> m37_236  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_286 -> m37_237  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_287 -> m37_238  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m37_287 -> m37_239  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m37_288 -> m37_240  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m37_288 -> m37_241  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m37_289 -> m37_254  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_289 -> m37_257  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_289 -> m37_260  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m37_290 -> m37_255  [color=darkseagreen4, key=1, label=int, style=dashed];
m37_291 -> m37_260  [color=darkseagreen4, key=1, label=security, style=dashed];
m37_292 -> m37_260  [color=darkseagreen4, key=1, label=start, style=dashed];
m37_293 -> m37_260  [color=darkseagreen4, key=1, label=end, style=dashed];
}
