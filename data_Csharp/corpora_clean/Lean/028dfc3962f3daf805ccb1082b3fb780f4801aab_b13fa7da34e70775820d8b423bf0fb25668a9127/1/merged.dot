digraph  {
n355 [label=V, span=""];
n0 [label="Entry QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="45-45", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)"];
n1 [label="var oItem = list[oldIndex]", span="47-47", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)"];
n2 [label="list.RemoveAt(oldIndex)", span="48-48", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)"];
n3 [label="newIndex > oldIndex", span="49-49", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)"];
n4 [label="newIndex--", span="49-49", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)"];
n5 [label="list.Insert(newIndex, oItem)", span="50-50", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)"];
n7 [label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0", cluster="System.Collections.Generic.List<T>.RemoveAt(int)"];
n6 [label="Exit QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)", span="45-45", cluster="QuantConnect.Extensions.Move<T>(System.Collections.Generic.List<T>, int, int)"];
n8 [label="Entry System.Collections.Generic.List<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.List<T>.Insert(int, T)"];
n9 [label="Entry QuantConnect.Extensions.GetBytes(string)", span="58-58", cluster="QuantConnect.Extensions.GetBytes(string)"];
n10 [label="var bytes = new byte[str.Length * sizeof(char)]", span="60-60", cluster="QuantConnect.Extensions.GetBytes(string)"];
n11 [label="Buffer.BlockCopy(str.ToCharArray(), 0, bytes, 0, bytes.Length)", span="61-61", cluster="QuantConnect.Extensions.GetBytes(string)"];
n12 [label="return bytes;", span="62-62", cluster="QuantConnect.Extensions.GetBytes(string)"];
n14 [label="Entry string.ToCharArray()", span="0-0", cluster="string.ToCharArray()"];
n15 [label="Entry System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Buffer.BlockCopy(System.Array, int, System.Array, int, int)"];
n13 [label="Exit QuantConnect.Extensions.GetBytes(string)", span="58-58", cluster="QuantConnect.Extensions.GetBytes(string)"];
n16 [label="Entry QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="71-71", cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)"];
n17 [label="T item", span="73-73", cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)"];
n18 [label="queue.TryDequeue(out item)", span="74-74", cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)"];
n19 [label="Exit QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)", span="71-71", cluster="QuantConnect.Extensions.Clear<T>(System.Collections.Concurrent.ConcurrentQueue<T>)"];
n20 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.TryDequeue(out T)"];
n21 [label="Entry QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="85-85", cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)"];
n22 [label="encoding == null", span="87-87", cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)"];
n24 [label="return encoding.GetString(bytes);", span="89-89", cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)"];
n23 [label="encoding = Encoding.ASCII", span="87-87", cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)"];
n25 [label="Exit QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)", span="85-85", cluster="QuantConnect.Extensions.GetString(byte[], System.Text.Encoding)"];
n26 [label="Entry System.Text.Encoding.GetString(byte[])", span="0-0", cluster="System.Text.Encoding.GetString(byte[])"];
n27 [label="Entry QuantConnect.Extensions.ToMD5(string)", span="97-97", cluster="QuantConnect.Extensions.ToMD5(string)"];
n28 [label="var builder = new StringBuilder()", span="99-99", cluster="QuantConnect.Extensions.ToMD5(string)"];
n30 [label="var data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(str))", span="102-102", cluster="QuantConnect.Extensions.ToMD5(string)"];
n29 [label="var md5Hash = MD5.Create()", span="100-100", cluster="QuantConnect.Extensions.ToMD5(string)"];
n35 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()"];
n32 [label="builder.Append(t.ToString(''x2''))", span="103-103", cluster="QuantConnect.Extensions.ToMD5(string)"];
n33 [label="return builder.ToString();", span="105-105", cluster="QuantConnect.Extensions.ToMD5(string)"];
n36 [label="Entry System.Security.Cryptography.MD5.Create()", span="0-0", cluster="System.Security.Cryptography.MD5.Create()"];
n31 [label=data, span="103-103", cluster="QuantConnect.Extensions.ToMD5(string)"];
n37 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)"];
n38 [label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])", span="0-0", cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(byte[])"];
n39 [label="Entry byte.ToString(string)", span="0-0", cluster="byte.ToString(string)"];
n40 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)"];
n34 [label="Exit QuantConnect.Extensions.ToMD5(string)", span="97-97", cluster="QuantConnect.Extensions.ToMD5(string)"];
n41 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
n42 [label="Entry QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="117-117", cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)"];
n43 [label="dictionary.AddOrUpdate(key, value, (oldkey, oldvalue) => value)", span="119-119", cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)"];
n47 [label=value, span="119-119", cluster="lambda expression"];
n44 [label="Exit QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)", span="117-117", cluster="QuantConnect.Extensions.AddOrUpdate<K, V>(System.Collections.Concurrent.ConcurrentDictionary<K, V>, K, V)"];
n45 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)"];
n46 [label="Entry lambda expression", span="119-119", cluster="lambda expression"];
n48 [label="Exit lambda expression", span="119-119", cluster="lambda expression"];
n49 [label="Entry QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="132-132", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)"];
n50 [label="TCollection list", span="135-135", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)"];
n51 [label="!dictionary.TryGetValue(key, out list)", span="136-136", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)"];
n53 [label="dictionary.Add(key, list)", span="139-139", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)"];
n54 [label="list.Add(element)", span="141-141", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)"];
n52 [label="list = new TCollection()", span="138-138", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)"];
n56 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
n57 [label="Entry TCollection.cstr", span="", cluster="TCollection.cstr"];
n58 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)"];
n55 [label="Exit QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="132-132", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)"];
n59 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
n60 [label="Entry QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="150-150", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)"];
n61 [label="d == 0", span="152-152", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)"];
n63 [label="var scale = Math.Pow(10, Math.Floor(Math.Log10(Math.Abs(d))) + 1)", span="153-153", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)"];
n64 [label="return scale * Math.Round(d / scale, digits);", span="154-154", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)"];
n62 [label="return 0;", span="152-152", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)"];
n66 [label="Entry System.Math.Abs(double)", span="0-0", cluster="System.Math.Abs(double)"];
n67 [label="Entry System.Math.Log10(double)", span="0-0", cluster="System.Math.Log10(double)"];
n68 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)"];
n69 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)"];
n65 [label="Exit QuantConnect.Extensions.RoundToSignificantDigits(double, int)", span="150-150", cluster="QuantConnect.Extensions.RoundToSignificantDigits(double, int)"];
n70 [label="Entry System.Math.Round(double, int)", span="0-0", cluster="System.Math.Round(double, int)"];
n71 [label="Entry QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", span="163-163", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)"];
n72 [label="d == 0", span="165-165", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)"];
n74 [label="var scale = (decimal)Math.Pow(10, Math.Floor(Math.Log10((double) Math.Abs(d))) + 1)", span="166-166", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)"];
n75 [label="return scale * Math.Round(d / scale, digits);", span="167-167", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)"];
n73 [label="return 0;", span="165-165", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)"];
n77 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)"];
n76 [label="Exit QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)", span="163-163", cluster="QuantConnect.Extensions.RoundToSignificantDigits(decimal, int)"];
n78 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)"];
n79 [label="Entry QuantConnect.Extensions.SmartRounding(decimal)", span="174-174", cluster="QuantConnect.Extensions.SmartRounding(decimal)"];
n80 [label="input = Normalize(input)", span="176-176", cluster="QuantConnect.Extensions.SmartRounding(decimal)"];
n81 [label="input > 1000", span="179-179", cluster="QuantConnect.Extensions.SmartRounding(decimal)"];
n86 [label="Entry QuantConnect.Extensions.Normalize(decimal)", span="202-202", cluster="QuantConnect.Extensions.Normalize(decimal)"];
n82 [label="return Math.Round(input, 4);", span="181-181", cluster="QuantConnect.Extensions.SmartRounding(decimal)"];
n83 [label="var d = (double)input", span="185-185", cluster="QuantConnect.Extensions.SmartRounding(decimal)"];
n84 [label="return (decimal)d.RoundToSignificantDigits(7);", span="186-186", cluster="QuantConnect.Extensions.SmartRounding(decimal)"];
n85 [label="Exit QuantConnect.Extensions.SmartRounding(decimal)", span="174-174", cluster="QuantConnect.Extensions.SmartRounding(decimal)"];
n87 [label="Entry double.RoundToSignificantDigits(int)", span="150-150", cluster="double.RoundToSignificantDigits(int)"];
n88 [label="Entry QuantConnect.Extensions.SafeDecimalCast(double)", span="195-195", cluster="QuantConnect.Extensions.SafeDecimalCast(double)"];
n89 [label="input <= (double) decimal.MinValue", span="197-197", cluster="QuantConnect.Extensions.SafeDecimalCast(double)"];
n91 [label="input >= (double) decimal.MaxValue", span="198-198", cluster="QuantConnect.Extensions.SafeDecimalCast(double)"];
n93 [label="return (decimal) input;", span="199-199", cluster="QuantConnect.Extensions.SafeDecimalCast(double)"];
n90 [label="return decimal.MinValue;", span="197-197", cluster="QuantConnect.Extensions.SafeDecimalCast(double)"];
n92 [label="return decimal.MaxValue;", span="198-198", cluster="QuantConnect.Extensions.SafeDecimalCast(double)"];
n94 [label="Exit QuantConnect.Extensions.SafeDecimalCast(double)", span="195-195", cluster="QuantConnect.Extensions.SafeDecimalCast(double)"];
n95 [label="return input / 1.000000000000000000000000000000000m;", span="205-205", cluster="QuantConnect.Extensions.Normalize(decimal)"];
n96 [label="Exit QuantConnect.Extensions.Normalize(decimal)", span="202-202", cluster="QuantConnect.Extensions.Normalize(decimal)"];
n97 [label="Entry QuantConnect.Extensions.ToDecimal(string)", span="214-214", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n98 [label="long value = 0", span="216-216", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n102 [label="i < str.Length", span="220-220", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n103 [label="var ch = str[i]", span="222-222", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n99 [label="var decimalPlaces = 0", span="217-217", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n107 [label="value = value * 10 + (ch - '0')", span="230-230", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n110 [label="var lo = (int)value", span="235-235", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n111 [label="var mid = (int)(value >> 32)", span="236-236", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n100 [label="bool hasDecimals = false", span="218-218", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n108 [label="decimalPlaces++", span="231-231", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n112 [label="return new decimal(lo, mid, 0, false, (byte)(hasDecimals ? decimalPlaces : 0));", span="237-237", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n101 [label="var i = 0", span="220-220", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n109 [label="i++", span="220-220", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n104 [label="ch == '.'", span="223-223", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n105 [label="hasDecimals = true", span="225-225", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n106 [label="decimalPlaces = 0", span="226-226", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n113 [label="Exit QuantConnect.Extensions.ToDecimal(string)", span="214-214", cluster="QuantConnect.Extensions.ToDecimal(string)"];
n114 [label="Entry decimal.Decimal(int, int, int, bool, byte)", span="0-0", cluster="decimal.Decimal(int, int, int, bool, byte)"];
n115 [label="Entry QuantConnect.Extensions.ToInt32(string)", span="246-246", cluster="QuantConnect.Extensions.ToInt32(string)"];
n116 [label="int value = 0", span="248-248", cluster="QuantConnect.Extensions.ToInt32(string)"];
n118 [label="i < str.Length", span="249-249", cluster="QuantConnect.Extensions.ToInt32(string)"];
n119 [label="value = value * 10 + (str[i] - '0')", span="251-251", cluster="QuantConnect.Extensions.ToInt32(string)"];
n117 [label="var i = 0", span="249-249", cluster="QuantConnect.Extensions.ToInt32(string)"];
n121 [label="return value;", span="253-253", cluster="QuantConnect.Extensions.ToInt32(string)"];
n120 [label="i++", span="249-249", cluster="QuantConnect.Extensions.ToInt32(string)"];
n122 [label="Exit QuantConnect.Extensions.ToInt32(string)", span="246-246", cluster="QuantConnect.Extensions.ToInt32(string)"];
n123 [label="Entry QuantConnect.Extensions.ToInt64(string)", span="262-262", cluster="QuantConnect.Extensions.ToInt64(string)"];
n124 [label="long value = 0", span="264-264", cluster="QuantConnect.Extensions.ToInt64(string)"];
n126 [label="i < str.Length", span="265-265", cluster="QuantConnect.Extensions.ToInt64(string)"];
n127 [label="value = value * 10 + (str[i] - '0')", span="267-267", cluster="QuantConnect.Extensions.ToInt64(string)"];
n125 [label="var i = 0", span="265-265", cluster="QuantConnect.Extensions.ToInt64(string)"];
n129 [label="return value;", span="269-269", cluster="QuantConnect.Extensions.ToInt64(string)"];
n128 [label="i++", span="265-265", cluster="QuantConnect.Extensions.ToInt64(string)"];
n130 [label="Exit QuantConnect.Extensions.ToInt64(string)", span="262-262", cluster="QuantConnect.Extensions.ToInt64(string)"];
n131 [label="Entry QuantConnect.Extensions.ToCsv(string, int)", span="278-278", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n132 [label="int last = 0", span="280-280", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n133 [label="var csv = new List<string>(size)", span="281-281", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n135 [label="i < str.Length", span="282-282", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n136 [label="str[i] == ','", span="284-284", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n139 [label="csv.Add(str.Substring(last, i - last))", span="287-287", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n144 [label="csv.Add(str.Substring(last))", span="292-292", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n137 [label="last != 0", span="286-286", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n138 [label="last = last + 1", span="286-286", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n142 [label="last != 0", span="291-291", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n143 [label="last = last + 1", span="291-291", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n134 [label="int i = 0", span="282-282", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n147 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)"];
n145 [label="return csv;", span="293-293", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n140 [label="last = i", span="288-288", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n141 [label="i++", span="282-282", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n148 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
n149 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n150 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
n146 [label="Exit QuantConnect.Extensions.ToCsv(string, int)", span="278-278", cluster="QuantConnect.Extensions.ToCsv(string, int)"];
n151 [label="Entry QuantConnect.Extensions.IsNaNOrZero(double)", span="300-300", cluster="QuantConnect.Extensions.IsNaNOrZero(double)"];
n152 [label="return double.IsNaN(value) || Math.Abs(value) < double.Epsilon;", span="302-302", cluster="QuantConnect.Extensions.IsNaNOrZero(double)"];
n153 [label="Exit QuantConnect.Extensions.IsNaNOrZero(double)", span="300-300", cluster="QuantConnect.Extensions.IsNaNOrZero(double)"];
n154 [label="Entry double.IsNaN(double)", span="0-0", cluster="double.IsNaN(double)"];
n155 [label="Entry QuantConnect.Extensions.GetDecimalEpsilon()", span="309-309", cluster="QuantConnect.Extensions.GetDecimalEpsilon()"];
n156 [label="return new decimal(1, 0, 0, false, 27);", span="311-311", cluster="QuantConnect.Extensions.GetDecimalEpsilon()"];
n157 [label="Exit QuantConnect.Extensions.GetDecimalEpsilon()", span="309-309", cluster="QuantConnect.Extensions.GetDecimalEpsilon()"];
n158 [label="Entry QuantConnect.Extensions.GetExtension(string)", span="319-319", cluster="QuantConnect.Extensions.GetExtension(string)"];
n159 [label="var ext = str.Substring(Math.Max(0, str.Length - 4))", span="320-320", cluster="QuantConnect.Extensions.GetExtension(string)"];
n160 [label="var allowedExt = new List<string>() { ''.zip'', ''.csv'', ''.json'' }", span="321-321", cluster="QuantConnect.Extensions.GetExtension(string)"];
n165 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)"];
n161 [label="!allowedExt.Contains(ext)", span="322-322", cluster="QuantConnect.Extensions.GetExtension(string)"];
n163 [label="return ext;", span="326-326", cluster="QuantConnect.Extensions.GetExtension(string)"];
n166 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n162 [label="ext = ''.custom''", span="324-324", cluster="QuantConnect.Extensions.GetExtension(string)"];
n167 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)"];
n164 [label="Exit QuantConnect.Extensions.GetExtension(string)", span="319-319", cluster="QuantConnect.Extensions.GetExtension(string)"];
n168 [label="Entry QuantConnect.Extensions.ToStream(string)", span="334-334", cluster="QuantConnect.Extensions.ToStream(string)"];
n169 [label="var stream = new MemoryStream()", span="336-336", cluster="QuantConnect.Extensions.ToStream(string)"];
n171 [label="writer.Write(str)", span="338-338", cluster="QuantConnect.Extensions.ToStream(string)"];
n170 [label="var writer = new StreamWriter(stream)", span="337-337", cluster="QuantConnect.Extensions.ToStream(string)"];
n176 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()"];
n173 [label="stream.Position = 0", span="340-340", cluster="QuantConnect.Extensions.ToStream(string)"];
n174 [label="return stream;", span="341-341", cluster="QuantConnect.Extensions.ToStream(string)"];
n177 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)"];
n172 [label="writer.Flush()", span="339-339", cluster="QuantConnect.Extensions.ToStream(string)"];
n178 [label="Entry System.IO.StreamWriter.Write(string)", span="0-0", cluster="System.IO.StreamWriter.Write(string)"];
n179 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()"];
n175 [label="Exit QuantConnect.Extensions.ToStream(string)", span="334-334", cluster="QuantConnect.Extensions.ToStream(string)"];
n180 [label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="351-351", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)"];
n181 [label="roundingInterval == TimeSpan.Zero", span="353-353", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)"];
n182 [label="return time;", span="356-356", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)"];
n183 [label="return new TimeSpan(\r\n                Convert.ToInt64(Math.Round(\r\n                    time.Ticks / (decimal)roundingInterval.Ticks,\r\n                    roundingType\r\n                )) * roundingInterval.Ticks\r\n            );", span="359-364", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)"];
n184 [label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)", span="351-351", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan, System.MidpointRounding)"];
n185 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)"];
n186 [label="Entry System.Math.Round(decimal, System.MidpointRounding)", span="0-0", cluster="System.Math.Round(decimal, System.MidpointRounding)"];
n187 [label="Entry System.Convert.ToInt64(decimal)", span="0-0", cluster="System.Convert.ToInt64(decimal)"];
n188 [label="Entry QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="374-374", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)"];
n189 [label="return Round(time, roundingInterval, MidpointRounding.ToEven);", span="376-376", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)"];
n190 [label="Exit QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)", span="374-374", cluster="QuantConnect.Extensions.Round(System.TimeSpan, System.TimeSpan)"];
n191 [label="Entry QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="385-385", cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)"];
n192 [label="interval == TimeSpan.Zero", span="387-387", cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)"];
n193 [label="return dateTime;", span="390-390", cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)"];
n194 [label="return dateTime.AddTicks(-(dateTime.Ticks % interval.Ticks));", span="392-392", cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)"];
n195 [label="Exit QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)", span="385-385", cluster="QuantConnect.Extensions.RoundDown(System.DateTime, System.TimeSpan)"];
n196 [label="Entry System.DateTime.AddTicks(long)", span="0-0", cluster="System.DateTime.AddTicks(long)"];
n197 [label="Entry QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="407-407", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)"];
n198 [label="interval == TimeSpan.Zero", span="410-410", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)"];
n199 [label="return dateTime;", span="410-410", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)"];
n200 [label="var rounded = dateTime.RoundDown(interval)", span="412-412", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)"];
n201 [label="!exchangeHours.IsOpen(rounded, rounded + interval, extendedMarket)", span="413-413", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)"];
n202 [label="rounded -= interval", span="415-415", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)"];
n205 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="385-385", cluster="System.DateTime.RoundDown(System.TimeSpan)"];
n203 [label="return rounded;", span="417-417", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)"];
n206 [label="Entry QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)", span="127-127", cluster="QuantConnect.Securities.SecurityExchangeHours.IsOpen(System.DateTime, System.DateTime, bool)"];
n204 [label="Exit QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="407-407", cluster="QuantConnect.Extensions.ExchangeRoundDown(System.DateTime, System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)"];
n207 [label="Entry QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="426-426", cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)"];
n208 [label="return new DateTime((datetime - DateTime.MinValue).Round(roundingInterval).Ticks);", span="428-428", cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)"];
n209 [label="Exit QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)", span="426-426", cluster="QuantConnect.Extensions.Round(System.DateTime, System.TimeSpan)"];
n210 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)"];
n211 [label="Entry System.TimeSpan.Round(System.TimeSpan)", span="374-374", cluster="System.TimeSpan.Round(System.TimeSpan)"];
n212 [label="Entry QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="437-437", cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)"];
n213 [label="d == TimeSpan.Zero", span="439-439", cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)"];
n214 [label="return time;", span="442-442", cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)"];
n215 [label="return new DateTime(((time.Ticks + d.Ticks - 1) / d.Ticks) * d.Ticks);", span="444-444", cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)"];
n216 [label="Exit QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)", span="437-437", cluster="QuantConnect.Extensions.RoundUp(System.DateTime, System.TimeSpan)"];
n217 [label="Entry QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", span="455-455", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)"];
n218 [label="ReferenceEquals(from, to)", span="457-457", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)"];
n219 [label="return time;", span="457-457", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)"];
n220 [label=strict, span="459-459", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)"];
n221 [label="return from.AtStrictly(LocalDateTime.FromDateTime(time)).WithZone(to).ToDateTimeUnspecified();", span="461-461", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)"];
n222 [label="return from.AtLeniently(LocalDateTime.FromDateTime(time)).WithZone(to).ToDateTimeUnspecified();", span="464-464", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)"];
n224 [label="Entry Unk.ReferenceEquals", span="", cluster="Unk.ReferenceEquals"];
n223 [label="Exit QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)", span="455-455", cluster="QuantConnect.Extensions.ConvertTo(System.DateTime, DateTimeZone, DateTimeZone, bool)"];
n225 [label="Entry Unk.FromDateTime", span="", cluster="Unk.FromDateTime"];
n226 [label="Entry Unk.AtStrictly", span="", cluster="Unk.AtStrictly"];
n227 [label="Entry Unk.WithZone", span="", cluster="Unk.WithZone"];
n228 [label="Entry Unk.ToDateTimeUnspecified", span="", cluster="Unk.ToDateTimeUnspecified"];
n229 [label="Entry Unk.AtLeniently", span="", cluster="Unk.AtLeniently"];
n230 [label="Entry QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", span="474-474", cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)"];
n231 [label="return time.ConvertTo(TimeZones.Utc, to, strict);", span="476-476", cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)"];
n232 [label="Exit QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)", span="474-474", cluster="QuantConnect.Extensions.ConvertFromUtc(System.DateTime, DateTimeZone, bool)"];
n233 [label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="455-455", cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)"];
n234 [label="Entry QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", span="486-486", cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)"];
n235 [label=strict, span="488-488", cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)"];
n236 [label="return from.AtStrictly(LocalDateTime.FromDateTime(time)).ToDateTimeUtc();", span="490-490", cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)"];
n237 [label="return from.AtLeniently(LocalDateTime.FromDateTime(time)).ToDateTimeUtc();", span="493-493", cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)"];
n238 [label="Exit QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)", span="486-486", cluster="QuantConnect.Extensions.ConvertToUtc(System.DateTime, DateTimeZone, bool)"];
n239 [label="Entry Unk.ToDateTimeUtc", span="", cluster="Unk.ToDateTimeUtc"];
n240 [label="Entry QuantConnect.Extensions.Reset(System.Timers.Timer)", span="500-500", cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)"];
n241 [label="timer.Stop()", span="502-502", cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)"];
n242 [label="timer.Start()", span="503-503", cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)"];
n244 [label="Entry System.Timers.Timer.Stop()", span="0-0", cluster="System.Timers.Timer.Stop()"];
n243 [label="Exit QuantConnect.Extensions.Reset(System.Timers.Timer)", span="500-500", cluster="QuantConnect.Extensions.Reset(System.Timers.Timer)"];
n245 [label="Entry System.Timers.Timer.Start()", span="0-0", cluster="System.Timers.Timer.Start()"];
n246 [label="Entry QuantConnect.Extensions.MatchesTypeName(System.Type, string)", span="513-513", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)"];
n247 [label="type.AssemblyQualifiedName == typeName", span="515-515", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)"];
n249 [label="type.FullName == typeName", span="519-519", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)"];
n251 [label="type.Name == typeName", span="523-523", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)"];
n248 [label="return true;", span="517-517", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)"];
n250 [label="return true;", span="521-521", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)"];
n252 [label="return true;", span="525-525", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)"];
n253 [label="return false;", span="527-527", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)"];
n254 [label="Exit QuantConnect.Extensions.MatchesTypeName(System.Type, string)", span="513-513", cluster="QuantConnect.Extensions.MatchesTypeName(System.Type, string)"];
n255 [label="Entry QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", span="537-537", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n256 [label="type != null && type != typeof(object)", span="539-539", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n258 [label="type.IsGenericType && possibleSuperType.IsGenericTypeDefinition", span="542-542", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n259 [label="cur = type.GetGenericTypeDefinition()", span="544-544", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n260 [label="cur = type", span="548-548", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n261 [label="possibleSuperType == cur", span="550-550", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n263 [label="type = type.BaseType", span="554-554", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n257 [label="Type cur", span="541-541", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n264 [label="return false;", span="556-556", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n266 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()"];
n262 [label="return true;", span="552-552", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n265 [label="Exit QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)", span="537-537", cluster="QuantConnect.Extensions.IsSubclassOfGeneric(System.Type, System.Type)"];
n267 [label="Entry QuantConnect.Extensions.GetBetterTypeName(System.Type)", span="565-565", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)"];
n268 [label="string name = type.Name", span="567-567", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)"];
n269 [label="type.IsGenericType", span="568-568", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)"];
n270 [label="var genericArguments = type.GetGenericArguments()", span="570-570", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)"];
n272 [label="name = name.Replace(toBeReplaced, ''<'' + string.Join('', '', genericArguments.Select(x => x.GetBetterTypeName())) + ''>'')", span="572-572", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)"];
n273 [label="return name;", span="574-574", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)"];
n271 [label="var toBeReplaced = ''`'' + (genericArguments.Length)", span="571-571", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)"];
n275 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()"];
n276 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n277 [label="Entry Unk.Join", span="", cluster="Unk.Join"];
n278 [label="Entry Unk.Replace", span="", cluster="Unk.Replace"];
n279 [label="Entry lambda expression", span="572-572", cluster="lambda expression"];
n274 [label="Exit QuantConnect.Extensions.GetBetterTypeName(System.Type)", span="565-565", cluster="QuantConnect.Extensions.GetBetterTypeName(System.Type)"];
n280 [label="x.GetBetterTypeName()", span="572-572", cluster="lambda expression"];
n281 [label="Exit lambda expression", span="572-572", cluster="lambda expression"];
n282 [label="Entry System.Type.GetBetterTypeName()", span="565-565", cluster="System.Type.GetBetterTypeName()"];
n283 [label="Entry QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", span="582-582", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n284 [label=resolution, span="584-584", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n285 [label="Resolution.Tick", span="586-586", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n287 [label="Resolution.Second", span="589-589", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n289 [label="Resolution.Minute", span="591-591", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n291 [label="Resolution.Hour", span="593-593", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n293 [label="Resolution.Daily", span="595-595", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n295 [label="throw new ArgumentOutOfRangeException(''resolution'');", span="598-598", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n286 [label="return TimeSpan.FromTicks(0);", span="588-588", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n288 [label="return TimeSpan.FromSeconds(1);", span="590-590", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n290 [label="return TimeSpan.FromMinutes(1);", span="592-592", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n292 [label="return TimeSpan.FromHours(1);", span="594-594", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n294 [label="return TimeSpan.FromDays(1);", span="596-596", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n296 [label="Exit QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)", span="582-582", cluster="QuantConnect.Extensions.ToTimeSpan(QuantConnect.Resolution)"];
n302 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)"];
n298 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n301 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)"];
n300 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)"];
n299 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)"];
n297 [label="Entry System.TimeSpan.FromTicks(long)", span="0-0", cluster="System.TimeSpan.FromTicks(long)"];
n303 [label="Entry QuantConnect.Extensions.ConvertTo<T>(string)", span="608-608", cluster="QuantConnect.Extensions.ConvertTo<T>(string)"];
n304 [label="return (T) value.ConvertTo(typeof (T));", span="610-610", cluster="QuantConnect.Extensions.ConvertTo<T>(string)"];
n305 [label="Exit QuantConnect.Extensions.ConvertTo<T>(string)", span="608-608", cluster="QuantConnect.Extensions.ConvertTo<T>(string)"];
n306 [label="Entry string.ConvertTo(System.Type)", span="619-619", cluster="string.ConvertTo(System.Type)"];
n307 [label="Entry QuantConnect.Extensions.ConvertTo(string, System.Type)", span="619-619", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n308 [label="type.IsEnum", span="621-621", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n309 [label="return Enum.Parse(type, value);", span="623-623", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n310 [label="typeof (IConvertible).IsAssignableFrom(type)", span="626-626", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n311 [label="return Convert.ChangeType(value, type, CultureInfo.InvariantCulture);", span="628-628", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n312 [label="var parse = type.GetMethod(''Parse'', new[] {typeof (string)})", span="632-632", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n314 [label="var result = parse.Invoke(null, new object[] {value})", span="635-635", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n316 [label="return JsonConvert.DeserializeObject(value, type);", span="639-639", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n319 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
n313 [label="parse != null", span="633-633", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n321 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])"];
n315 [label="return result;", span="636-636", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n322 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])"];
n317 [label="Exit QuantConnect.Extensions.ConvertTo(string, System.Type)", span="619-619", cluster="QuantConnect.Extensions.ConvertTo(string, System.Type)"];
n323 [label="Entry Unk.DeserializeObject", span="", cluster="Unk.DeserializeObject"];
n320 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)"];
n318 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)"];
n324 [label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", span="650-650", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)"];
n325 [label="return waitHandle.WaitOne(Timeout.Infinite, cancellationToken);", span="652-652", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)"];
n326 [label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)", span="650-650", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.Threading.CancellationToken)"];
n327 [label="Entry System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)", span="687-687", cluster="System.Threading.WaitHandle.WaitOne(int, System.Threading.CancellationToken)"];
n328 [label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", span="668-668", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)"];
n329 [label="return waitHandle.WaitOne((int) timeout.TotalMilliseconds, cancellationToken);", span="670-670", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)"];
n330 [label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)", span="668-668", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, System.TimeSpan, System.Threading.CancellationToken)"];
n331 [label="Entry QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", span="687-687", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)"];
n332 [label="return WaitHandle.WaitAny(new[] { waitHandle, cancellationToken.WaitHandle }, millisecondsTimeout) == 0;", span="689-689", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)"];
n333 [label="Exit QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)", span="687-687", cluster="QuantConnect.Extensions.WaitOne(System.Threading.WaitHandle, int, System.Threading.CancellationToken)"];
n334 [label="Entry System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)", span="0-0", cluster="System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[], int)"];
n335 [label="Entry QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="697-697", cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)"];
n336 [label="var md5 = MD5.Create()", span="699-699", cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)"];
n337 [label="return md5.ComputeHash(stream);", span="701-701", cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)"];
n338 [label="Exit QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)", span="697-697", cluster="QuantConnect.Extensions.GetMD5Hash(System.IO.Stream)"];
n339 [label="Entry System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)", span="0-0", cluster="System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)"];
n340 [label="Entry QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", span="710-710", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)"];
n341 [label="var regx = new Regex(''http(s)?://([\\w+?\\.\\w+])+([a-zA-Z0-9\\~\\!\\@\\#\\$\\%\\^\\&amp;\\*\\(\\)_\\-\\=\\+\\\\\\/\\?\\.\\:\\;\\'\\,]*([a-zA-Z0-9\\?\\#\\=\\/]){1})?'', RegexOptions.IgnoreCase)", span="712-712", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)"];
n342 [label="var matches = regx.Matches(source)", span="713-713", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)"];
n344 [label="source = source.Replace(match.Value, ''<a href=''' + match.Value + ''' target='blank'>'' + match.Value + ''</a>'')", span="716-716", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)"];
n345 [label="return source;", span="718-718", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)"];
n347 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)"];
n343 [label=matches, span="714-714", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)"];
n348 [label="Entry System.Text.RegularExpressions.Regex.Matches(string)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Matches(string)"];
n349 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)"];
n346 [label="Exit QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)", span="710-710", cluster="QuantConnect.Extensions.WithEmbeddedHtmlAnchors(string)"];
n350 [label="Entry QuantConnect.Extensions.ToLower(System.Enum)", span="726-726", cluster="QuantConnect.Extensions.ToLower(System.Enum)"];
n351 [label="return @enum.ToString().ToLower();", span="728-728", cluster="QuantConnect.Extensions.ToLower(System.Enum)"];
n352 [label="Exit QuantConnect.Extensions.ToLower(System.Enum)", span="726-726", cluster="QuantConnect.Extensions.ToLower(System.Enum)"];
n353 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()"];
n354 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()"];
d4 [label="message = null", span="88-88", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", color=green, community=0];
d3 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="86-86", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)"];
d5 [label="return true;", span="89-89", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)"];
d6 [label="Exit QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="86-86", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)"];
m0_0 [label="Entry QuantConnect.VisualStudioPlugin.Log.Info(string)", span="26-26", cluster="QuantConnect.VisualStudioPlugin.Log.Info(string)", file="AlgorithmAddDataTests.cs"];
m0_1 [label="ActivityLog.LogInformation(QUANT_CONNECT, message)", span="28-28", cluster="QuantConnect.VisualStudioPlugin.Log.Info(string)", file="AlgorithmAddDataTests.cs"];
m0_2 [label="Exit QuantConnect.VisualStudioPlugin.Log.Info(string)", span="26-26", cluster="QuantConnect.VisualStudioPlugin.Log.Info(string)", file="AlgorithmAddDataTests.cs"];
m0_3 [label="Entry Unk.LogInformation", span="", cluster="Unk.LogInformation", file="AlgorithmAddDataTests.cs"];
m1_16 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="BasicTemplateAlgorithm.cs"];
m1_10 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.OnData(QuantConnect.Data.Slice)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateAlgorithm.cs"];
m1_11 [label="!Portfolio.Invested", span="44-44", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateAlgorithm.cs"];
m1_12 [label="SetHoldings(_spy, 1)", span="46-46", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateAlgorithm.cs"];
m1_13 [label="Debug(''Purchased Stock'')", span="47-47", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateAlgorithm.cs"];
m1_14 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.OnData(QuantConnect.Data.Slice)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateAlgorithm.cs"];
m1_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1344-1344", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BasicTemplateAlgorithm.cs"];
m1_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BasicTemplateAlgorithm.cs"];
m1_0 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.Initialize()", span="29-29", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.Initialize()", file="BasicTemplateAlgorithm.cs"];
m1_1 [label="SetStartDate(2013, 10, 07)", span="31-31", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.Initialize()", file="BasicTemplateAlgorithm.cs"];
m1_2 [label="SetEndDate(2013, 10, 11)", span="32-32", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.Initialize()", file="BasicTemplateAlgorithm.cs"];
m1_3 [label="SetCash(100000)", span="33-33", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.Initialize()", file="BasicTemplateAlgorithm.cs"];
m1_4 [label="AddEquity(''SPY'', Resolution.Second)", span="35-35", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.Initialize()", color=red, community=0, file="BasicTemplateAlgorithm.cs"];
m1_5 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.Initialize()", span="29-29", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm.Initialize()", file="BasicTemplateAlgorithm.cs"];
m1_6 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BasicTemplateAlgorithm.cs"];
m1_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BasicTemplateAlgorithm.cs"];
m1_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="BasicTemplateAlgorithm.cs"];
m1_17 [label="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm", span="", file="BasicTemplateAlgorithm.cs"];
m2_20 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", span="151-151", cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="BasicTemplateDailyAlgorithm.cs"];
m2_37 [label="var handler = Updated", span="153-153", cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="BasicTemplateDailyAlgorithm.cs"];
m2_39 [label="handler(this, consolidated)", span="154-154", cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="BasicTemplateDailyAlgorithm.cs"];
m2_38 [label="handler != null", span="154-154", cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="BasicTemplateDailyAlgorithm.cs"];
m2_40 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", span="151-151", cluster="QuantConnect.Indicators.IndicatorBase<T>.OnUpdated(QuantConnect.Indicators.IndicatorDataPoint)", file="BasicTemplateDailyAlgorithm.cs"];
m2_19 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.ComputeNextValue(T)", span="145-145", cluster="QuantConnect.Indicators.IndicatorBase<T>.ComputeNextValue(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_36 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.ComputeNextValue(T)", span="145-145", cluster="QuantConnect.Indicators.IndicatorBase<T>.ComputeNextValue(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_4 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", file="BasicTemplateDailyAlgorithm.cs"];
m2_32 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", span="135-135", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", file="BasicTemplateDailyAlgorithm.cs"];
m2_33 [label="return string.Format(''{0} - {1}'', Name, this);", span="137-137", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", file="BasicTemplateDailyAlgorithm.cs"];
m2_34 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", span="135-135", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToDetailedString()", file="BasicTemplateDailyAlgorithm.cs"];
m2_35 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BasicTemplateDailyAlgorithm.cs"];
m2_5 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="82-82", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_6 [label="_previousInput != null && input.Time < _previousInput.Time", span="84-84", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_7 [label="throw new ArgumentException(''This is a forward only indicator: Input: '' + input.Time.ToString(''u'') + '' Previous: '' + _previousInput.Time.ToString(''u''));", span="87-87", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_8 [label="!ReferenceEquals(input, _previousInput)", span="89-89", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_10 [label="_previousInput = input", span="93-93", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_11 [label="var nextValue = ComputeNextValue(input)", span="94-94", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_12 [label="Current = new IndicatorDataPoint(input.Time, nextValue)", span="95-95", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_9 [label="Samples++", span="92-92", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_14 [label="return IsReady;", span="100-100", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_13 [label="OnUpdated(Current)", span="98-98", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_15 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="82-82", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateDailyAlgorithm.cs"];
m2_17 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="BasicTemplateDailyAlgorithm.cs"];
m2_25 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.implicit operator decimal(QuantConnect.Indicators.IndicatorBase<T>)", span="117-117", cluster="QuantConnect.Indicators.IndicatorBase<T>.implicit operator decimal(QuantConnect.Indicators.IndicatorBase<T>)", file="BasicTemplateDailyAlgorithm.cs"];
m2_26 [label="return instance.Current;", span="119-119", cluster="QuantConnect.Indicators.IndicatorBase<T>.implicit operator decimal(QuantConnect.Indicators.IndicatorBase<T>)", file="BasicTemplateDailyAlgorithm.cs"];
m2_27 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.implicit operator decimal(QuantConnect.Indicators.IndicatorBase<T>)", span="117-117", cluster="QuantConnect.Indicators.IndicatorBase<T>.implicit operator decimal(QuantConnect.Indicators.IndicatorBase<T>)", file="BasicTemplateDailyAlgorithm.cs"];
m2_41 [label="Entry QuantConnect.Indicators.IndicatorUpdatedHandler.Invoke(object, QuantConnect.Indicators.IndicatorDataPoint)", span="27-27", cluster="QuantConnect.Indicators.IndicatorUpdatedHandler.Invoke(object, QuantConnect.Indicators.IndicatorDataPoint)", file="BasicTemplateDailyAlgorithm.cs"];
m2_28 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.ToString()", span="126-126", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToString()", file="BasicTemplateDailyAlgorithm.cs"];
m2_29 [label="return Current.Value.ToString(''#######0.0####'');", span="128-128", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToString()", file="BasicTemplateDailyAlgorithm.cs"];
m2_30 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.ToString()", span="126-126", cluster="QuantConnect.Indicators.IndicatorBase<T>.ToString()", file="BasicTemplateDailyAlgorithm.cs"];
m2_0 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", span="49-49", cluster="QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", file="BasicTemplateDailyAlgorithm.cs"];
m2_1 [label="Name = name", span="51-51", cluster="QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", file="BasicTemplateDailyAlgorithm.cs"];
m2_2 [label="Current = new IndicatorDataPoint(DateTime.MinValue, 0m)", span="52-52", cluster="QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", file="BasicTemplateDailyAlgorithm.cs"];
m2_3 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", span="49-49", cluster="QuantConnect.Indicators.IndicatorBase<T>.IndicatorBase(string)", file="BasicTemplateDailyAlgorithm.cs"];
m2_18 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="BasicTemplateDailyAlgorithm.cs"];
m2_31 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="BasicTemplateDailyAlgorithm.cs"];
m2_16 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="BasicTemplateDailyAlgorithm.cs"];
m2_21 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="106-106", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="BasicTemplateDailyAlgorithm.cs"];
m2_22 [label="Samples = 0", span="108-108", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="BasicTemplateDailyAlgorithm.cs"];
m2_23 [label="Current = new IndicatorDataPoint(DateTime.MinValue, default(decimal))", span="109-109", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="BasicTemplateDailyAlgorithm.cs"];
m2_24 [label="Exit QuantConnect.Indicators.IndicatorBase<T>.Reset()", span="106-106", cluster="QuantConnect.Indicators.IndicatorBase<T>.Reset()", file="BasicTemplateDailyAlgorithm.cs"];
m2_42 [label="QuantConnect.Indicators.IndicatorBase<T>", span="", file="BasicTemplateDailyAlgorithm.cs"];
m3_16 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_10 [label="Entry QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_11 [label="!Portfolio.Invested", span="44-44", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_12 [label="SetHoldings(_asur, 1)", span="46-46", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_13 [label="Debug(''Purchased Stock'')", span="47-47", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_14 [label="Exit QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_0 [label="Entry QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.Initialize()", span="29-29", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.Initialize()", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_1 [label="SetStartDate(2013, 10, 01)", span="31-31", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.Initialize()", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_2 [label="SetEndDate(2013, 11, 30)", span="32-32", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.Initialize()", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_3 [label="SetCash(100000)", span="33-33", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.Initialize()", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_4 [label="AddSecurity(SecurityType.Equity, ''ASUR'', Resolution.Second)", span="35-35", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.Initialize()", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_5 [label="Exit QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.Initialize()", span="29-29", cluster="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm.Initialize()", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_6 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="BasicTemplateFillForwardAlgorithm.cs"];
m3_17 [label="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm", span="", file="BasicTemplateFillForwardAlgorithm.cs"];
m4_50 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="BasicTemplateForexAlgorithm.cs"];
m4_57 [label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="147-147", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="BasicTemplateForexAlgorithm.cs"];
m4_68 [label="var writer = new LeanDataWriter(resolution, symbol, Globals.DataFolder, tickType)", span="149-149", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="BasicTemplateForexAlgorithm.cs"];
m4_69 [label="writer.Write(bars)", span="150-150", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="BasicTemplateForexAlgorithm.cs"];
m4_70 [label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="147-147", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.WriteTradeTicksForResolution(QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.TickType, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="BasicTemplateForexAlgorithm.cs"];
m4_151 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="BasicTemplateForexAlgorithm.cs"];
m4_122 [label="Entry QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", span="148-148", cluster="QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", file="BasicTemplateForexAlgorithm.cs"];
m4_32 [label="Entry QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="73-73", cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="BasicTemplateForexAlgorithm.cs"];
m4_124 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="BasicTemplateForexAlgorithm.cs"];
m4_29 [label="Log(key.Value + '': '' + data[key].Time + '' > '' + data[key].Value)", span="62-62", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateForexAlgorithm.cs", color=red, community=0];
m4_118 [label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", span="341-341", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="BasicTemplateForexAlgorithm.cs"];
m4_197 [label="value.Contains(''e'')", span="344-344", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="BasicTemplateForexAlgorithm.cs"];
m4_196 [label="var value = lineParts[column]", span="343-343", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="BasicTemplateForexAlgorithm.cs"];
m4_198 [label="return Decimal.Parse(value, NumberStyles.Float, CultureInfo.InvariantCulture);", span="346-346", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="BasicTemplateForexAlgorithm.cs"];
m4_199 [label="return Convert.ToDecimal(lineParts[column], CultureInfo.InvariantCulture);", span="349-349", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="BasicTemplateForexAlgorithm.cs"];
m4_200 [label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", span="341-341", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseScientificNotationToDecimal(string[], int)", file="BasicTemplateForexAlgorithm.cs"];
m4_53 [label="Entry QuantConnect.ToolBox.LeanDataReader.Parse()", span="54-54", cluster="QuantConnect.ToolBox.LeanDataReader.Parse()", file="BasicTemplateForexAlgorithm.cs"];
m4_81 [label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", span="177-177", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_99 [label="price = ParseScientificNotationToDecimal(lineParts, priceColumn)", span="207-207", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_98 [label="quantity = ParseScientificNotationToDecimal(lineParts, quantityColumn)", span="206-206", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_90 [label="var currentEpochTicks = new List<KaikoTick>()", span="189-189", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_87 [label="var priceColumn = headerCsv.FindIndex(x => x == ''price'')", span="185-185", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_94 [label="var lineParts = line.Split(',')", span="197-197", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_100 [label=Exception, span="209-209", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_102 [label="var currentTick = new KaikoTick\r\n                    {\r\n                        TickType = TickType.Quote,\r\n                        Time = Time.UnixMillisecondTimeStampToDateTime(tickEpoch),\r\n                        Quantity = quantity,\r\n                        Value = price,\r\n                        OrderDirection = lineParts[typeColumn]\r\n                    }", span="215-222", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_88 [label="var quantityColumn = headerCsv.FindIndex(x => x == ''amount'')", span="186-186", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_97 [label="decimal price", span="202-202", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_89 [label="long currentEpoch = 0", span="188-188", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_91 [label="sr.Peek() >= 0", span="191-191", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_104 [label="var quoteTick = CreateQuoteTick(symbol, Time.UnixMillisecondTimeStampToDateTime(currentEpoch), currentEpochTicks)", span="226-226", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_107 [label="currentEpochTicks.Clear()", span="230-230", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_109 [label="currentEpochTicks.Add(currentTick)", span="234-234", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_84 [label="var headerCsv = headerLine.ToCsv()", span="182-182", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_86 [label="var dateColumn = headerCsv.FindIndex(x => x == ''date'')", span="184-184", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_92 [label="var line = sr.ReadLine()", span="194-194", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_93 [label="line == null", span="195-195", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_95 [label="var tickEpoch = Convert.ToInt64(lineParts[dateColumn])", span="199-199", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_101 [label="Log.Error($''KaikoDataConverter.ParseKaikoQuoteFile(): Data corrupted in file {unzippedFile}. Line {string.Join('' '', lineParts)}, Exception {ex}'')", span="211-211", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_85 [label="var typeColumn = headerCsv.FindIndex(x => x == ''type'')", span="183-183", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_103 [label="currentEpoch != tickEpoch", span="224-224", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_96 [label="decimal quantity", span="201-201", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_82 [label="var sr = new StreamReader(unzippedFile)", span="179-179", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_105 [label="quoteTick != null", span="228-228", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_106 [label="yield return quoteTick;", span="228-228", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_108 [label="currentEpoch = tickEpoch", span="231-231", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_83 [label="var headerLine = sr.ReadLine()", span="181-181", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_110 [label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", span="177-177", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoQuoteFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_116 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="BasicTemplateForexAlgorithm.cs"];
m4_56 [label="Entry QuantConnect.ToolBox.TickAggregator.Flush()", span="37-37", cluster="QuantConnect.ToolBox.TickAggregator.Flush()", file="BasicTemplateForexAlgorithm.cs"];
m4_165 [label="Entry lambda expression", span="255-255", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_24 [label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", span="48-48", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="BasicTemplateForexAlgorithm.cs"];
m4_25 [label="Entry System.IO.Directory.EnumerateDirectories(string)", span="0-0", cluster="System.IO.Directory.EnumerateDirectories(string)", color=red, community=0, file="BasicTemplateForexAlgorithm.cs"];
m4_26 [label="Entry System.IO.DirectoryInfo.DirectoryInfo(string)", span="0-0", cluster="System.IO.DirectoryInfo.DirectoryInfo(string)", file="BasicTemplateForexAlgorithm.cs"];
m4_132 [label="Entry lambda expression", span="185-185", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_135 [label="Entry lambda expression", span="186-186", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_190 [label="Entry lambda expression", span="299-299", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_193 [label="Entry lambda expression", span="300-300", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_129 [label="Entry lambda expression", span="184-184", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_134 [label="Exit lambda expression", span="185-185", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_133 [label="x == ''price''", span="185-185", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_126 [label="Entry lambda expression", span="183-183", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_137 [label="Exit lambda expression", span="186-186", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_136 [label="x == ''amount''", span="186-186", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_187 [label="Entry lambda expression", span="298-298", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_192 [label="Exit lambda expression", span="299-299", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_191 [label="x == ''price''", span="299-299", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_195 [label="Exit lambda expression", span="300-300", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_194 [label="x == ''amount''", span="300-300", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_131 [label="Exit lambda expression", span="184-184", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_130 [label="x == ''date''", span="184-184", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_128 [label="Exit lambda expression", span="183-183", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_127 [label="x == ''type''", span="183-183", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_189 [label="Exit lambda expression", span="298-298", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_188 [label="x == ''date''", span="298-298", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_156 [label="Entry lambda expression", span="249-249", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_159 [label="Entry lambda expression", span="250-250", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_162 [label="Entry lambda expression", span="254-254", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_158 [label="Exit lambda expression", span="249-249", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_157 [label="x.OrderDirection == ''a''", span="249-249", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_161 [label="Exit lambda expression", span="250-250", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_160 [label="x.Value", span="250-250", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_164 [label="Exit lambda expression", span="254-254", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_163 [label="x.OrderDirection == ''b''", span="254-254", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_166 [label="x.Value", span="255-255", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_167 [label="Exit lambda expression", span="255-255", cluster="lambda expression", file="BasicTemplateForexAlgorithm.cs"];
m4_80 [label="Entry QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", span="42-42", cluster="QuantConnect.ToolBox.LeanDataReader.LeanDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_120 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BasicTemplateForexAlgorithm.cs"];
m4_123 [label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", span="246-246", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_142 [label="var tick = new Tick()\r\n            {\r\n                Symbol = symbol,\r\n                Time = date,\r\n                TickType = TickType.Quote\r\n            }", span="264-269", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_138 [label="var bestAsk = currentEpcohTicks.Where(x => x.OrderDirection == ''a'')\r\n                                        .OrderBy(x => x.Value)\r\n                                        .FirstOrDefault()", span="249-251", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_139 [label="var bestBid = currentEpcohTicks.Where(x => x.OrderDirection == ''b'')\r\n                                        .OrderByDescending(x => x.Value)\r\n                                        .FirstOrDefault()", span="254-256", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_140 [label="bestAsk == null && bestBid == null", span="258-258", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_143 [label="bestBid != null", span="271-271", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_144 [label="tick.BidPrice = bestBid.Price", span="273-273", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_145 [label="tick.BidSize = bestBid.Quantity", span="274-274", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_147 [label="tick.AskPrice = bestAsk.Price", span="279-279", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_148 [label="tick.AskSize = bestAsk.Quantity", span="280-280", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_149 [label="return tick;", span="283-283", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_141 [label="return null;", span="261-261", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_146 [label="bestAsk != null", span="277-277", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_150 [label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", span="246-246", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateQuoteTick(QuantConnect.Symbol, System.DateTime, System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>)", file="BasicTemplateForexAlgorithm.cs"];
m4_121 [label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick.KaikoTick()", span="357-357", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick.KaikoTick()", file="BasicTemplateForexAlgorithm.cs"];
m4_0 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", span="28-28", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", file="BasicTemplateForexAlgorithm.cs"];
m4_3 [label="SetCash(100000)", span="32-32", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", color=green, community=0, file="BasicTemplateForexAlgorithm.cs"];
m4_1 [label="SetStartDate(2013, 10, 07)", span="30-30", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", file="BasicTemplateForexAlgorithm.cs", color=red, community=0];
m4_4 [label="AddForex(''EURUSD'', Resolution.Minute)", span="34-34", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", color=red, community=0, file="BasicTemplateForexAlgorithm.cs"];
m4_7 [label="History(5, Resolution.Daily)", span="38-38", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", file="BasicTemplateForexAlgorithm.cs", color=red, community=0];
m4_8 [label="History(5, Resolution.Hour)", span="39-39", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", file="BasicTemplateForexAlgorithm.cs", color=red, community=0];
m4_9 [label="History(5, Resolution.Minute)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", color=red, community=0, file="BasicTemplateForexAlgorithm.cs"];
m4_10 [label="var history = History(System.TimeSpan.FromSeconds(5), Resolution.Second)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", file="BasicTemplateForexAlgorithm.cs", color=red, community=0];
m4_5 [label="AddForex(''GBPUSD'', Resolution.Minute)", span="35-35", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", color=red, community=0, file="BasicTemplateForexAlgorithm.cs"];
m4_6 [label="AddForex(''EURGBP'', Resolution.Minute)", span="36-36", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", file="BasicTemplateForexAlgorithm.cs", color=red, community=0];
m4_2 [label="SetEndDate(2013, 10, 11)", span="31-31", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", color=red, community=0, file="BasicTemplateForexAlgorithm.cs"];
m4_11 [label="history.OrderBy(x => x.Time)", span="44-44", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", file="BasicTemplateForexAlgorithm.cs", color=red, community=0];
m4_112 [label="Entry System.IO.StreamReader.ReadLine()", span="0-0", cluster="System.IO.StreamReader.ReadLine()", file="BasicTemplateForexAlgorithm.cs"];
m4_79 [label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="786-786", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="BasicTemplateForexAlgorithm.cs"];
m4_14 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", span="28-28", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", file="BasicTemplateForexAlgorithm.cs"];
m4_34 [label="var tickBasePath = Path.Combine(Globals.DataFolder, ''crypto'', market, ''tick'')", span="82-82", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_37 [label="var symbol = Symbol.Create(symbolDirectoryInfo.Name, SecurityType.Crypto, market)", span="87-87", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_39 [label="!tickDateFile.Contains(tickType.ToLower())", span="92-92", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_40 [label="var consolidators = GetDataAggregatorsForTickType(tickType)", span="94-94", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_41 [label="var reader = GetLeanDataTickReader(symbol, tickType, tickDateFile)", span="95-95", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_46 [label="WriteTradeTicksForResolution(symbol, consolidator.Resolution, tickType, consolidator.Flush())", span="107-107", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_35 [label="Directory.EnumerateDirectories(tickBasePath)", span="84-84", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_36 [label="var symbolDirectoryInfo = new DirectoryInfo(tickDirectory)", span="86-86", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_38 [label="Directory.EnumerateFiles(symbolDirectoryInfo.FullName)", span="89-89", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_43 [label=consolidators, span="99-99", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_45 [label=consolidators, span="105-105", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_42 [label="reader.Parse().Select(x => x as Tick)", span="97-97", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_44 [label="consolidator.Consolidator.Update(tickBar)", span="101-101", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_47 [label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", span="80-80", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.AggregateTicksInAllResolutions(string, QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_48 [label="Entry System.IO.Path.Combine(string, string, string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string, string, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_18 [label="Directory.EnumerateDirectories(symbolDirectoryInfo.FullName)", span="57-57", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="BasicTemplateForexAlgorithm.cs"];
m4_201 [label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0", cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="BasicTemplateForexAlgorithm.cs"];
m4_27 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.OnData(QuantConnect.Data.Slice)", span="57-57", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateForexAlgorithm.cs"];
m4_15 [label="Directory.EnumerateDirectories(fileLocation)", span="50-50", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="BasicTemplateForexAlgorithm.cs"];
m4_49 [label="Entry System.Enum.ToLower()", span="929-929", cluster="System.Enum.ToLower()", file="BasicTemplateForexAlgorithm.cs"];
m4_55 [label="Entry Unk.Update", span="", cluster="Unk.Update", file="BasicTemplateForexAlgorithm.cs"];
m4_152 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="BasicTemplateForexAlgorithm.cs"];
m4_12 [label="data.Keys", span="46-46", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.Initialize()", file="BasicTemplateForexAlgorithm.cs"];
m4_30 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.OnData(QuantConnect.Data.Slice)", span="57-57", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateForexAlgorithm.cs"];
m4_31 [label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm", span="", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="BasicTemplateForexAlgorithm.cs"];
m4_28 [label="Entry System.IO.Directory.EnumerateFiles(string)", span="0-0", cluster="System.IO.Directory.EnumerateFiles(string)", color=red, community=0, file="BasicTemplateForexAlgorithm.cs"];
m4_33 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="BasicTemplateForexAlgorithm.cs"];
m4_21 [label="var writer = new LeanDataWriter(Resolution.Tick, symbol, Globals.DataFolder, tickType)", span="65-65", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="BasicTemplateForexAlgorithm.cs", color=green, community=0];
m4_67 [label="Entry QuantConnect.ToolBox.TradeTickAggregator.TradeTickAggregator(QuantConnect.Resolution)", span="65-65", cluster="QuantConnect.ToolBox.TradeTickAggregator.TradeTickAggregator(QuantConnect.Resolution)", file="BasicTemplateForexAlgorithm.cs"];
m4_154 [label="Entry Unk.OrderByDescending", span="", cluster="Unk.OrderByDescending", file="BasicTemplateForexAlgorithm.cs"];
m4_23 [label="File.Delete(unzippedFile)", span="69-69", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="BasicTemplateForexAlgorithm.cs"];
m4_153 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="BasicTemplateForexAlgorithm.cs"];
m4_16 [label="var symbolDirectoryInfo = new DirectoryInfo(symbolFolder)", span="52-52", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="BasicTemplateForexAlgorithm.cs"];
m4_111 [label="Entry System.IO.StreamReader.StreamReader(string)", span="0-0", cluster="System.IO.StreamReader.StreamReader(string)", file="BasicTemplateForexAlgorithm.cs"];
m4_13 [label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", span="48-48", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="BasicTemplateForexAlgorithm.cs"];
m4_22 [label="writer.Write(aggregateFunction(symbol, unzippedFile))", span="66-66", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="BasicTemplateForexAlgorithm.cs", color=green, community=0];
m4_119 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="BasicTemplateForexAlgorithm.cs"];
m4_17 [label="var symbol = Symbol.Create(symbolDirectoryInfo.Name, SecurityType.Crypto, market)", span="55-55", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.CreateCryptoTicks(string, string, QuantConnect.TickType, System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>)", file="BasicTemplateForexAlgorithm.cs"];
m4_78 [label="Entry SubscriptionDataConfig.cstr", span="", cluster="SubscriptionDataConfig.cstr", file="BasicTemplateForexAlgorithm.cs"];
m4_52 [label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", span="160-160", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_71 [label="Symbol sym", span="162-162", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_74 [label="var subscription = new SubscriptionDataConfig(typeof(Tick), symbol, Resolution.Tick,\r\n                DateTimeZone.Utc, DateTimeZone.Utc, false, false, false, false, type)", span="165-166", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_75 [label="LeanData.TryParsePath(tickDateFile, out sym, out date, out res)", span="167-167", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_76 [label="return new LeanDataReader(subscription, symbol, Resolution.Tick, date, Globals.DataFolder);", span="168-168", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_72 [label="DateTime date", span="163-163", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_73 [label="Resolution res", span="164-164", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_77 [label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", span="160-160", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetLeanDataTickReader(QuantConnect.Symbol, QuantConnect.TickType, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_117 [label="Entry System.Convert.ToInt64(string)", span="0-0", cluster="System.Convert.ToInt64(string)", file="BasicTemplateForexAlgorithm.cs"];
m4_125 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BasicTemplateForexAlgorithm.cs"];
m4_20 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="BasicTemplateForexAlgorithm.cs"];
m4_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="140-140", cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="BasicTemplateForexAlgorithm.cs"];
m4_114 [label="Entry System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)", file="BasicTemplateForexAlgorithm.cs"];
m4_54 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="BasicTemplateForexAlgorithm.cs"];
m4_66 [label="Entry QuantConnect.ToolBox.QuoteTickAggregator.QuoteTickAggregator(QuantConnect.Resolution)", span="48-48", cluster="QuantConnect.ToolBox.QuoteTickAggregator.QuoteTickAggregator(QuantConnect.Resolution)", file="BasicTemplateForexAlgorithm.cs"];
m4_113 [label="Entry string.ToCsv(int)", span="330-330", cluster="string.ToCsv(int)", file="BasicTemplateForexAlgorithm.cs"];
m4_51 [label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", span="118-118", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_61 [label="tickType == TickType.Quote", span="120-120", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_62 [label="return new List<TickAggregator>\r\n                {\r\n                    new QuoteTickAggregator(Resolution.Second),\r\n                    new QuoteTickAggregator(Resolution.Minute),\r\n                    new QuoteTickAggregator(Resolution.Hour),\r\n                    new QuoteTickAggregator(Resolution.Daily),\r\n                };", span="122-128", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_63 [label="return new List<TickAggregator>\r\n            {\r\n                new TradeTickAggregator(Resolution.Second),\r\n                new TradeTickAggregator(Resolution.Minute),\r\n                new TradeTickAggregator(Resolution.Hour),\r\n                new TradeTickAggregator(Resolution.Daily),\r\n            };", span="131-137", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_64 [label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", span="118-118", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.GetDataAggregatorsForTickType(QuantConnect.TickType)", file="BasicTemplateForexAlgorithm.cs"];
m4_155 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", file="BasicTemplateForexAlgorithm.cs"];
m4_168 [label="Entry QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", span="292-292", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_182 [label="price = ParseScientificNotationToDecimal(lineParts, priceColumn)", span="315-315", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_181 [label="quantity = ParseScientificNotationToDecimal(lineParts, quantityColumn)", span="314-314", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_173 [label="var priceColumn = headerCsv.FindIndex(x => x == ''price'')", span="299-299", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_178 [label="var lineParts = line.Split(',')", span="307-307", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_183 [label=Exception, span="317-317", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_185 [label="yield return new Tick\r\n                    {\r\n                        Symbol = symbol,\r\n                        TickType = TickType.Trade,\r\n                        Time = Time.UnixMillisecondTimeStampToDateTime(Convert.ToInt64(lineParts[dateColumn])),\r\n                        Quantity = quantity,\r\n                        Value = price\r\n                    };", span="323-330", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_174 [label="var quantityColumn = headerCsv.FindIndex(x => x == ''amount'')", span="300-300", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_180 [label="decimal price", span="310-310", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_171 [label="var headerCsv = headerLine.ToCsv()", span="297-297", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_172 [label="var dateColumn = headerCsv.FindIndex(x => x == ''date'')", span="298-298", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_176 [label="var line = sr.ReadLine()", span="304-304", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_177 [label="line == null", span="305-305", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_179 [label="decimal quantity", span="309-309", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_184 [label="Log.Error($''KaikoDataConverter.ParseKaikoTradeFile(): Data corrupted in file {unzippedFile}. Line {string.Join('' '', lineParts)}, Exception {ex}'')", span="319-319", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_175 [label="sr.Peek() >= 0", span="302-302", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_170 [label="var headerLine = sr.ReadLine()", span="296-296", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_169 [label="var sr = new StreamReader(unzippedFile)", span="294-294", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_186 [label="Exit QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", span="292-292", cluster="QuantConnect.ToolBox.KaikoDataConverter.Program.ParseKaikoTradeFile(QuantConnect.Symbol, string)", file="BasicTemplateForexAlgorithm.cs"];
m4_115 [label="Entry System.IO.StreamReader.Peek()", span="0-0", cluster="System.IO.StreamReader.Peek()", file="BasicTemplateForexAlgorithm.cs"];
m4_202 [label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="BasicTemplateForexAlgorithm.cs"];
m6_25 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_16 [label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", span="153-153", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_17 [label="var i = 0", span="155-155", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_18 [label="i < _subscriptions", span="155-155", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_19 [label="Bridge[i] = new ConcurrentQueue<List<BaseData>>()", span="158-158", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_20 [label="EndOfBridge[i] = false", span="159-159", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_21 [label="SubscriptionReaderManagers[i] = new SubscriptionDataReader(Subscriptions[i], _algorithm.Securities[Subscriptions[i].Symbol], DataFeed, _job.PeriodStart, _job.PeriodFinish)", span="160-160", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_22 [label="FillForwardFrontiers[i] = new DateTime()", span="161-161", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_23 [label="i++", span="155-155", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_24 [label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", span="153-153", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ResetActivators()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_139 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_15 [label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0", cluster="System.Collections.Generic.List<T>.List(int)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_143 [label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", span="414-414", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_148 [label="!Subscriptions[i].FillDataForward || manager.Previous == null", span="417-417", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_150 [label="var previous = manager.Previous", span="420-420", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_151 [label="var current = manager.Current", span="421-421", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_152 [label="FillForwardFrontiers[i].Ticks == 0", span="424-424", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_153 [label="FillForwardFrontiers[i] = previous.Time", span="424-424", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_154 [label="manager.EndOfStream && manager.MarketOpen(current.Time)", span="427-427", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_155 [label="var date = FillForwardFrontiers[i] + increment", span="430-430", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_156 [label="manager.MarketOpen(date)", span="430-430", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_160 [label="FillForwardFrontiers[i] = date", span="435-435", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_162 [label="Bridge[i].Enqueue(cache)", span="437-437", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_163 [label="date = date + increment", span="430-430", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_165 [label="var date = FillForwardFrontiers[i] + increment", span="445-445", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_167 [label="!Subscriptions[i].ExtendedMarketHours", span="448-448", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_168 [label="!manager.MarketOpen(date)", span="450-450", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_170 [label="date = date - increment", span="459-459", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_171 [label="manager.MarketOpen(date)", span="460-460", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_172 [label="!manager.ExtendedMarketOpen(date)", span="467-467", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_176 [label="FillForwardFrontiers[i] = date", span="476-476", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_178 [label="Bridge[i].Enqueue(cache)", span="478-478", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_179 [label="date = date + increment", span="445-445", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_149 [label="return;", span="417-417", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_174 [label="var fillforward = previous.Clone(true)", span="474-474", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_158 [label="var fillforward = current.Clone(true)", span="433-433", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_166 [label="(date < current.Time)", span="445-445", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_169 [label="date = current.Time", span="456-456", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_159 [label="fillforward.Time = date", span="434-434", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_157 [label="var cache = new List<BaseData>(1)", span="432-432", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_164 [label="return;", span="439-439", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_161 [label="cache.Add(fillforward)", span="436-436", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_175 [label="fillforward.Time = date", span="475-475", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_173 [label="var cache = new List<BaseData>(1)", span="473-473", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_177 [label="cache.Add(fillforward)", span="477-477", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_180 [label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", span="414-414", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.ProcessFillForward(QuantConnect.Lean.Engine.SubscriptionDataReader, int, System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_144 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_28 [label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.GetActiveStreams()", span="170-170", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.GetActiveStreams()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_29 [label="var activeStreams = (from stream in EndOfBridge\r\n                                 where stream == false\r\n                                 select stream).Count()", span="173-175", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.GetActiveStreams()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_30 [label="return activeStreams;", span="176-176", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.GetActiveStreams()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_31 [label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.GetActiveStreams()", span="170-170", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.GetActiveStreams()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_147 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", span="641-641", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.Dispose()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_192 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", span="83-83", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Clear<T>()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_141 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", span="241-241", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MoveNext()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_184 [label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", span="486-486", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_185 [label="_exitTriggered = true", span="488-488", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_186 [label="PurgeData()", span="489-489", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_187 [label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", span="486-486", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Exit()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_53 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_135 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_57 [label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", span="234-234", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_58 [label="long earlyBirdTicks = 0", span="237-237", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_59 [label="var subscriptions = SubscriptionReaderManagers.Length", span="238-238", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_60 [label="var frontier = new DateTime()", span="240-240", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_63 [label="var activeStreams = subscriptions", span="243-243", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_69 [label="activeStreams = subscriptions", span="257-257", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_71 [label="i < subscriptions", span="261-261", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_80 [label="bridgeFullCount > 0 && ((subscriptions - active) == bridgeZeroCount) && !_exitTriggered", span="282-282", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_86 [label="var cache = new List<BaseData>[subscriptions]", span="294-294", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_89 [label="i < subscriptions", span="300-300", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_106 [label="i < subscriptions", span="349-349", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_120 [label="i < subscriptions", span="384-384", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_61 [label="var tradeBarIncrements = TimeSpan.FromDays(1)", span="241-241", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_62 [label="var increment = TimeSpan.FromDays(1)", span="242-242", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_64 [label="ResetActivators()", span="246-246", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_65 [label="tradeBarIncrements = CalculateIncrement(includeTick: false)", span="249-249", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_66 [label="increment = CalculateIncrement(includeTick: true)", span="250-250", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_110 [label="ProcessFillForward(SubscriptionReaderManagers[i], i, tradeBarIncrements)", span="356-356", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_67 [label="Time.EachTradeableDay(_algorithm.Securities, _job.PeriodStart, _job.PeriodFinish)", span="253-253", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_68 [label="frontier = date.Add(increment)", span="256-256", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_114 [label="frontier = (new DateTime(earlyBirdTicks)).RoundDown(increment) + increment", span="365-365", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_115 [label="frontier += increment", span="370-370", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_117 [label="Log.Trace(DataFeed + ''.Run(): Data Feed Completed.'')", span="379-379", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_72 [label="var success = SubscriptionReaderManagers[i].RefreshSource(date)", span="265-265", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_85 [label="(frontier.Date == date.Date || frontier == date.Date.AddDays(1)) && !_exitTriggered", span="292-292", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_95 [label="frontier = frontier.Date + TimeSpan.FromDays(1)", span="312-312", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_97 [label="manager.Current.Time < frontier", span="324-324", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_112 [label="LoadedDataFrontier = frontier", span="361-361", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_113 [label="earlyBirdTicks > 0 && earlyBirdTicks > frontier.Ticks", span="363-363", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_70 [label="var i = 0", span="261-261", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_104 [label="activeStreams == 0", span="341-341", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_74 [label="EndOfBridge[i] = false", span="269-269", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_75 [label="EndOfBridge[i] = true", span="271-271", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_76 [label="i++", span="261-261", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_77 [label="var bridgeFullCount = 1", span="276-276", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_73 [label=success, span="268-268", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_78 [label="var bridgeZeroCount = 0", span="277-277", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_79 [label="var active = GetActiveStreams()", span="278-278", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_81 [label="bridgeFullCount = (from bridge in Bridge where bridge.Count >= _bridgeMax select bridge).Count()", span="284-284", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_84 [label=_exitTriggered, span="289-289", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_82 [label="bridgeZeroCount = (from bridge in Bridge where bridge.Count == 0 select bridge).Count()", span="285-285", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_83 [label="Thread.Sleep(5)", span="286-286", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_116 [label=_exitTriggered, span="375-375", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_87 [label="earlyBirdTicks = 0", span="297-297", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_96 [label="cache[i] = new List<BaseData>()", span="320-320", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_98 [label="cache[i].Add(manager.Current)", span="326-326", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_107 [label="cache[i] != null && cache[i].Count > 0", span="351-351", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_108 [label="FillForwardFrontiers[i] = cache[i][0].Time", span="353-353", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_109 [label="Bridge[i].Enqueue(cache[i])", span="354-354", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_88 [label="var i = 0", span="300-300", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_101 [label="earlyBirdTicks == 0 || manager.Current.Time.Ticks < earlyBirdTicks", span="334-334", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_90 [label="var manager = SubscriptionReaderManagers[i]", span="303-303", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_91 [label="manager.EndOfStream || EndOfBridge[i]", span="306-306", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_92 [label="EndOfBridge[i] = true", span="308-308", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_103 [label="i++", span="300-300", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_99 [label="!manager.MoveNext()", span="328-328", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_100 [label="manager.Current != null", span="332-332", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_102 [label="earlyBirdTicks = manager.Current.Time.Ticks", span="336-336", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_93 [label="activeStreams = GetActiveStreams()", span="309-309", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_94 [label="activeStreams == 0", span="310-310", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_105 [label="var i = 0", span="349-349", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_111 [label="i++", span="349-349", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_118 [label="!EndOfBridges && !_exitTriggered", span="382-382", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_119 [label="var i = 0", span="384-384", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_127 [label="var i = 0", span="397-397", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_121 [label="Bridge[i].Count == 0 && SubscriptionReaderManagers[i].EndOfStream", span="386-386", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_122 [label="EndOfBridge[i] = true", span="388-388", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_123 [label="i++", span="384-384", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_124 [label="GetActiveStreams() == 0", span="392-392", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_125 [label="_endOfStreams = true", span="392-392", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_126 [label="Thread.Sleep(100)", span="393-393", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_128 [label="i < Subscriptions.Count", span="397-397", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_129 [label="SubscriptionReaderManagers[i].Dispose()", span="399-399", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_130 [label="i++", span="397-397", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_131 [label="Log.Trace(DataFeed + ''.Run(): Ending Thread... '')", span="402-402", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_132 [label="IsActive = false", span="403-403", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_133 [label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", span="234-234", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.Run()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_145 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="271-271", cluster="System.DateTime.RoundDown(System.TimeSpan)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_136 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", span="439-439", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.RefreshSource(System.DateTime)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_188 [label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", span="496-496", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_189 [label=Bridge, span="498-498", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_190 [label="t.Clear()", span="500-500", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_191 [label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", span="496-496", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.PurgeData()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_32 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_33 [label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", span="185-185", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_34 [label="var increment = TimeSpan.FromDays(1)", span="187-187", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_47 [label="increment > TimeSpan.FromMilliseconds(1) && includeTick", span="218-218", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_35 [label=Subscriptions, span="188-188", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_38 [label="increment > TimeSpan.FromHours(1)", span="194-194", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_41 [label="increment > TimeSpan.FromMinutes(1)", span="202-202", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_44 [label="increment > TimeSpan.FromSeconds(1)", span="210-210", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_49 [label="return increment;", span="225-225", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_36 [label="config.Resolution", span="190-190", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_37 [label="Resolution.Hour", span="193-193", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_40 [label="Resolution.Minute", span="201-201", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_43 [label="Resolution.Second", span="209-209", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_46 [label="Resolution.Tick", span="217-217", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_39 [label="increment = TimeSpan.FromHours(1)", span="196-196", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_42 [label="increment = TimeSpan.FromMinutes(1)", span="204-204", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_45 [label="increment = TimeSpan.FromSeconds(1)", span="212-212", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_48 [label="increment = new TimeSpan(0, 0, 0, 0, 1)", span="220-220", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_50 [label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", span="185-185", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.CalculateIncrement(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_51 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_182 [label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="189-189", cluster="QuantConnect.Data.BaseData.Clone(bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_137 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_183 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", span="420-420", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.ExtendedMarketOpen(System.DateTime)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_26 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", span="165-165", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Security, QuantConnect.DataFeedEndpoint, System.DateTime, System.DateTime)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_134 [label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", span="174-174", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityManager, System.DateTime, System.DateTime)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_140 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_142 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="126-126", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_1 [label="Subscriptions = algorithm.SubscriptionManager.Subscriptions", span="128-128", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_10 [label="_job = job", span="141-141", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_11 [label="_algorithm = algorithm", span="142-142", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_2 [label="_subscriptions = Subscriptions.Count", span="129-129", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_3 [label="DataFeed = DataFeedEndpoint.FileSystem", span="132-132", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_4 [label="IsActive = true", span="133-133", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_5 [label="Bridge = new ConcurrentQueue<List<BaseData>>[_subscriptions]", span="134-134", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_6 [label="EndOfBridge = new bool[_subscriptions]", span="135-135", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_7 [label="SubscriptionReaderManagers = new SubscriptionDataReader[_subscriptions]", span="136-136", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_8 [label="FillForwardFrontiers = new DateTime[_subscriptions]", span="137-137", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_9 [label="RealtimePrices = new List<decimal>(_subscriptions)", span="138-138", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_12 [label="_endOfStreams = false", span="143-143", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_13 [label="_bridgeMax = _bridgeMax / _subscriptions", span="144-144", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_14 [label="Exit QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="126-126", cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_181 [label="Entry QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", span="409-409", cluster="QuantConnect.Lean.Engine.SubscriptionDataReader.MarketOpen(System.DateTime)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_56 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_146 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="122-122", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_27 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_138 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_54 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_55 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m6_193 [label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed", span="", file="BasicTemplateFuturesAlgorithmDaily.cs"];
m8_19 [label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="652-652", cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_18 [label="Entry QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="92-92", cluster="QuantConnect.Brokerages.IBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_25 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_0 [label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="38-38", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_1 [label="_brokerageModel = brokerageModel", span="40-40", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_2 [label="_securitySeeder = securitySeeder", span="41-41", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_3 [label="Exit QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="38-38", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_24 [label="Entry QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", span="30-30", cluster="QuantConnect.Securities.ISecuritySeeder.GetSeedData(QuantConnect.Securities.Security)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_4 [label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="49-49", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_5 [label="security.SetLeverage(_brokerageModel.GetLeverage(security))", span="52-52", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_6 [label="security.FillModel = _brokerageModel.GetFillModel(security)", span="53-53", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_7 [label="security.FeeModel = _brokerageModel.GetFeeModel(security)", span="54-54", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_8 [label="security.SlippageModel = _brokerageModel.GetSlippageModel(security)", span="55-55", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_9 [label="security.SettlementModel = _brokerageModel.GetSettlementModel(security, _brokerageModel.AccountType)", span="56-56", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_10 [label=seedSecurity, span="58-58", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_11 [label="security.Symbol.SecurityType != SecurityType.Option && security.Symbol.SecurityType != SecurityType.Future", span="61-61", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_12 [label="BaseData seedData = _securitySeeder.GetSeedData(security)", span="63-63", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_14 [label="security.SetMarketPrice(seedData)", span="66-66", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_16 [label="Log.Trace(''BrokerageModelSecurityInitializer.Initialize(): Unable to seed security: '' + security.Symbol.Value)", span="71-71", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_13 [label="seedData != null", span="64-64", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_15 [label="Log.Trace(''BrokerageModelSecurityInitializer.Initialize(): Seeded security: '' + seedData.Symbol.Value + '': '' + seedData.Value)", span="67-67", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_17 [label="Exit QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="49-49", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_22 [label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", span="113-113", cluster="QuantConnect.Brokerages.IBrokerageModel.GetSlippageModel(QuantConnect.Securities.Security)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_20 [label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="99-99", cluster="QuantConnect.Brokerages.IBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_26 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_21 [label="Entry QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="106-106", cluster="QuantConnect.Brokerages.IBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_23 [label="Entry QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="121-121", cluster="QuantConnect.Brokerages.IBrokerageModel.GetSettlementModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m8_27 [label="QuantConnect.Securities.BrokerageModelSecurityInitializer", span="", file="BasicTemplateFuturesHistoryAlgorithm.cs"];
m9_17 [label="Log.Error(''Forex.ForexTransactionModel.MarketFill(): '' + err.Message)", span="105-105", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_18 [label="return fill;", span="107-107", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_20 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", span="107-107", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, string)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_21 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="236-236", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_22 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_23 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="119-119", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_24 [label="var fill = new OrderEvent(order)", span="121-121", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_25 [label="order.Status == OrderStatus.Canceled", span="125-125", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_26 [label="return fill;", span="125-125", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_19 [label="Exit QuantConnect.Securities.Forex.ForexTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="72-72", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_27 [label="order.Direction == OrderDirection.Sell", span="128-128", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_69 [label="Entry QuantConnect.Securities.Security.GetLastData()", span="394-394", cluster="QuantConnect.Securities.Security.GetLastData()", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_95 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.StopFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="326-326", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_96 [label="return StopMarketFill(asset, order as StopMarketOrder);", span="328-328", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_97 [label="Exit QuantConnect.Securities.Forex.ForexTransactionModel.StopFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="326-326", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_34 [label="order.Price = asset.Price", span="144-144", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_92 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="311-311", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_93 [label="return MarketFill(security, order as MarketOrder);", span="313-313", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_94 [label="Exit QuantConnect.Securities.Forex.ForexTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="311-311", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_2 [label="SetEndDate(2014, 05, 15)", span="44-44", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", file="BasicTemplateFxcmVolumeAlgorithm.cs", color=green, community=0];
m9_3 [label="SetCash(100000)", span="45-45", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", file="BasicTemplateFxcmVolumeAlgorithm.cs", color=green, community=0];
m9_4 [label="EURUSD = AddForex(''EURUSD'', Resolution.Minute, Market.FXCM).Symbol", span="48-48", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_5 [label="AddData<FxcmVolume>(''EURUSD'', Resolution.Minute, DateTimeZone.Utc)", span="50-50", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_7 [label="fastVWMA = _price.WeightedBy(volume, period: 15)", span="52-52", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_8 [label="slowVWMA = _price.WeightedBy(volume, period: 300)", span="53-53", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1495-1495", cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_14 [label="Entry Unk.>", span="", cluster="Unk.>", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="460-460", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_6 [label="var _price = Identity(EURUSD)", span="51-51", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_9 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", span="41-41", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm.Initialize()", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_16 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.WeightedBy<T, TWeight>(TWeight, int)", span="72-72", cluster="QuantConnect.Indicators.IndicatorBase<T>.WeightedBy<T, TWeight>(TWeight, int)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_29 [label="order.Status = OrderStatus.Filled", span="134-134", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_43 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="172-172", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_44 [label="var fill = new OrderEvent(order)", span="175-175", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_45 [label="order.Status == OrderStatus.Canceled", span="180-180", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_47 [label="var marketData = asset.GetLastData()", span="182-182", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_55 [label="order.Direction == OrderDirection.Buy", span="198-198", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_56 [label="marketDataMinPrice < order.LimitPrice", span="201-201", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_57 [label="order.Status = OrderStatus.Filled", span="203-203", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_58 [label="order.Direction == OrderDirection.Sell", span="206-206", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_59 [label="marketDataMaxPrice > order.LimitPrice", span="209-209", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_60 [label="order.Status = OrderStatus.Filled", span="211-211", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_61 [label="order.Status == OrderStatus.Filled || order.Status == OrderStatus.PartiallyFilled", span="216-216", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_62 [label="fill.FillQuantity = order.Quantity", span="218-218", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_63 [label="fill.FillPrice = order.Price", span="219-219", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_64 [label="fill.Status = order.Status", span="220-220", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_46 [label="return fill;", span="180-180", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_67 [label="return fill;", span="227-227", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_48 [label="decimal marketDataMinPrice", span="184-184", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_50 [label="marketData.DataType == MarketDataType.TradeBar", span="186-186", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_51 [label="marketDataMinPrice = ((TradeBar)marketData).Low", span="188-188", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_52 [label="marketDataMaxPrice = ((TradeBar)marketData).High", span="189-189", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_53 [label="marketDataMinPrice = marketData.Value", span="193-193", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_54 [label="marketDataMaxPrice = marketData.Value", span="194-194", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_49 [label="decimal marketDataMaxPrice", span="185-185", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_65 [label=Exception, span="223-223", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_66 [label="Log.Error(''ForexTransactionModel.LimitFill(): '' + err.Message)", span="225-225", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_68 [label="Exit QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="172-172", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_86 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.GetOrderFee(decimal, decimal)", span="281-281", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetOrderFee(decimal, decimal)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_87 [label="return 0;", span="284-284", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetOrderFee(decimal, decimal)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_88 [label="Exit QuantConnect.Securities.Forex.ForexTransactionModel.GetOrderFee(decimal, decimal)", span="281-281", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetOrderFee(decimal, decimal)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_0 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.ForexTransactionModel()", span="51-51", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.ForexTransactionModel()", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_1 [label="Exit QuantConnect.Securities.Forex.ForexTransactionModel.ForexTransactionModel()", span="51-51", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.ForexTransactionModel()", color=green, community=0, file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_30 [label="order.Price = asset.Price", span="135-135", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_89 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.Fill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="296-296", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.Fill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_90 [label="return new OrderEvent(order);", span="298-298", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.Fill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_91 [label="Exit QuantConnect.Securities.Forex.ForexTransactionModel.Fill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="296-296", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.Fill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_35 [label="order.Status == OrderStatus.Filled || order.Status == OrderStatus.PartiallyFilled", span="149-149", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_31 [label="order.Direction == OrderDirection.Buy", span="138-138", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_32 [label="asset.Price > order.StopPrice", span="141-141", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_33 [label="order.Status = OrderStatus.Filled", span="143-143", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_70 [label="decimal slippage = 0", span="239-239", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_71 [label="security.Resolution", span="241-241", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_74 [label="var lastBar = (TradeBar) security.GetLastData()", span="246-246", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_77 [label="var lastTick = (Tick) security.GetLastData()", span="252-252", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_78 [label="order.Direction", span="253-253", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_80 [label="slippage = Math.Abs(order.Price - lastTick.AskPrice)", span="257-257", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_82 [label="slippage = Math.Abs(order.Price - lastTick.BidPrice)", span="262-262", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_72 [label="Resolution.Minute", span="243-243", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_76 [label="Resolution.Tick", span="251-251", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_73 [label="Resolution.Second", span="244-244", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_75 [label="slippage = lastBar.Value*0.00001m", span="248-248", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_79 [label="OrderDirection.Buy", span="255-255", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_81 [label="OrderDirection.Sell", span="260-260", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_83 [label="return slippage;", span="267-267", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_84 [label="Exit QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="236-236", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_98 [label="Entry QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="341-341", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_99 [label="return LimitFill(security, order as LimitOrder);", span="343-343", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_100 [label="Exit QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="341-341", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_28 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_36 [label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm", span="", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_37 [label="fill.FillPrice = asset.Price", span="152-152", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_38 [label="fill.Status = order.Status", span="153-153", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_41 [label="return fill;", span="160-160", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_39 [label=Exception, span="156-156", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_40 [label="Log.Error(''ForexTransactionModel.StopFill(): '' + err.Message)", span="158-158", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_42 [label="Exit QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="119-119", cluster="QuantConnect.Securities.Forex.ForexTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m9_101 [label="QuantConnect.Securities.Forex.ForexTransactionModel", span="", file="BasicTemplateFxcmVolumeAlgorithm.cs"];
m10_35 [label="Entry System.Linq.IOrderedEnumerable<TSource>.ThenByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Linq.IOrderedEnumerable<TSource>.ThenByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1358-1358", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_22 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", span="56-56", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_23 [label="!Portfolio.Invested && IsMarketOpen(OptionSymbol)", span="58-58", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_25 [label="slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="61-61", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_24 [label="OptionChain chain", span="60-60", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_26 [label="var atmContract = chain\r\n                        .OrderByDescending(x => x.Expiry)\r\n                        .ThenBy(x => Math.Abs(chain.Underlying.Price - x.Strike))\r\n                        .ThenByDescending(x => x.Right)\r\n                        .FirstOrDefault()", span="64-68", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_27 [label="atmContract != null", span="70-70", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_28 [label="MarketOrder(atmContract.Symbol, 1)", span="73-73", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_29 [label="MarketOnCloseOrder(atmContract.Symbol, -1)", span="74-74", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_30 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", span="56-56", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnData(QuantConnect.Data.Slice)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_14 [label="Entry QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="324-324", cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_37 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_34 [label="Entry System.Linq.IOrderedEnumerable<TSource>.ThenBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Linq.IOrderedEnumerable<TSource>.ThenBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_46 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_16 [label="Entry lambda expression", span="45-46", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_17 [label="u.Strikes(-2, +2)\r\n                                   .Expiration(TimeSpan.Zero, TimeSpan.FromDays(180))", span="45-46", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_18 [label="Exit lambda expression", span="45-46", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_43 [label="Math.Abs(chain.Underlying.Price - x.Strike)", span="66-66", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_39 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_42 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_40 [label="x.Expiry", span="65-65", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_41 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_44 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_47 [label="x.Right", span="67-67", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_48 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="BasicTemplateOptionsAlgorithm.cs"];
m10_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1344-1344", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_31 [label="Entry QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", span="1051-1051", cluster="QuantConnect.Algorithm.QCAlgorithm.IsMarketOpen(QuantConnect.Symbol)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_21 [label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="271-271", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_19 [label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="199-199", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_20 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_53 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_32 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189", cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_49 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="85-85", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_50 [label="Log(orderEvent.ToString())", span="87-87", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_51 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="85-85", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_0 [label="Entry QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", span="35-35", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_1 [label="SetStartDate(2015, 12, 24)", span="37-37", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_2 [label="SetEndDate(2015, 12, 24)", span="38-38", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_3 [label="SetCash(100000)", span="39-39", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_4 [label="var equity = AddEquity(UnderlyingTicker)", span="41-41", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_5 [label="var option = AddOption(UnderlyingTicker)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_7 [label="SetBenchmark(equity.Symbol)", span="49-49", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_6 [label="option.SetFilter(u => u.Strikes(-2, +2)\r\n                                   .Expiration(TimeSpan.Zero, TimeSpan.FromDays(180)))", span="45-46", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_8 [label="Exit QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", span="35-35", cluster="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm.Initialize()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="976-976", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_38 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="BasicTemplateOptionsAlgorithm.cs"];
m10_52 [label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153", cluster="QuantConnect.Orders.OrderEvent.ToString()", file="BasicTemplateOptionsAlgorithm.cs"];
m10_54 [label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm", span="", file="BasicTemplateOptionsAlgorithm.cs"];
m10_55 [label=chain, span="", file="BasicTemplateOptionsAlgorithm.cs"];
m11_442 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1097-1097", cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_443 [label="var name = CreateIndicatorName(symbol, string.Format(''ULTOSC({0},{1},{2})'', period1, period2, period3), resolution)", span="1099-1099", cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_444 [label="var ultosc = new UltimateOscillator(name, period1, period2, period3)", span="1100-1100", cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_445 [label="RegisterIndicator(symbol, ultosc, resolution, selector)", span="1101-1101", cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_446 [label="return ultosc;", span="1102-1102", cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_447 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1097-1097", cluster="QuantConnect.Algorithm.QCAlgorithm.ULTOSC(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_0 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="33-33", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_1 [label="var name = CreateIndicatorName(symbol, ''AD'', resolution)", span="35-35", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_3 [label="RegisterIndicator(symbol, ad, resolution, selector)", span="37-37", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_2 [label="var ad = new AccumulationDistribution(name)", span="36-36", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_4 [label="return ad;", span="38-38", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_5 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="33-33", cluster="QuantConnect.Algorithm.QCAlgorithm.AD(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_85 [label="Entry QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="67-67", cluster="QuantConnect.Indicators.CommodityChannelIndex.CommodityChannelIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_177 [label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27", cluster="QuantConnect.Indicators.Identity.Identity(string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_533 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1310-1310", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_534 [label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="1313-1313", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_535 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1310-1310", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_421 [label="Entry QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1047-1047", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_422 [label="var name = CreateIndicatorName(symbol, ''TR'', resolution)", span="1049-1049", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_424 [label="RegisterIndicator(symbol, tr, resolution, selector)", span="1051-1051", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_423 [label="var tr = new TrueRange(name)", span="1050-1050", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_425 [label="return tr;", span="1052-1052", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_426 [label="Exit QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1047-1047", cluster="QuantConnect.Algorithm.QCAlgorithm.TR(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_340 [label="Entry QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", span="69-69", cluster="QuantConnect.Indicators.RegressionChannel.RegressionChannel(string, int, decimal)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_171 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="456-456", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_172 [label="string name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="458-458", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_174 [label="RegisterIndicator(symbol, identity, resolution, selector)", span="460-460", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_173 [label="var identity = new Identity(name)", span="459-459", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_175 [label="return identity;", span="461-461", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_176 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="456-456", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_463 [label="Entry QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1148-1148", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_464 [label="string name = CreateIndicatorName(symbol, ''WILR'' + period, resolution)", span="1150-1150", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_465 [label="var williamspercentr = new WilliamsPercentR(name, period)", span="1151-1151", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_466 [label="RegisterIndicator(symbol, williamspercentr, resolution, selector)", span="1152-1152", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_467 [label="return williamspercentr;", span="1153-1153", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_468 [label="Exit QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="1148-1148", cluster="QuantConnect.Algorithm.QCAlgorithm.WILR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_389 [label="Entry QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", span="54-54", cluster="QuantConnect.Indicators.Stochastic.Stochastic(string, int, int, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_166 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", span="128-128", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_390 [label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="967-967", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_391 [label="return STO(symbol, period, period, 3, resolution);", span="969-969", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_392 [label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="967-967", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_151 [label="Entry QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", span="67-67", cluster="QuantConnect.Indicators.HeikinAshi.HeikinAshi(string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_448 [label="Entry QuantConnect.Indicators.UltimateOscillator.UltimateOscillator(string, int, int, int)", span="55-55", cluster="QuantConnect.Indicators.UltimateOscillator.UltimateOscillator(string, int, int, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_341 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="853-853", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_342 [label="string name = CreateIndicatorName(symbol, ''ROC'' + period, resolution)", span="855-855", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_343 [label="var rateofchange = new RateOfChange(name, period)", span="856-856", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_344 [label="RegisterIndicator(symbol, rateofchange, resolution, selector)", span="857-857", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_345 [label="return rateofchange;", span="858-858", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_346 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="853-853", cluster="QuantConnect.Algorithm.QCAlgorithm.ROC(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_400 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="999-999", cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_401 [label="string name = CreateIndicatorName(symbol, ''SWISS'' + period, resolution)", span="1001-1001", cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_402 [label="var swiss = new SwissArmyKnife(name, period, delta, tool)", span="1002-1002", cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_403 [label="RegisterIndicator(symbol, swiss, resolution, selector)", span="1003-1003", cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_404 [label="return swiss;", span="1004-1004", cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_405 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="999-999", cluster="QuantConnect.Algorithm.QCAlgorithm.SWISS(QuantConnect.Symbol, int, double, QuantConnect.Indicators.SwissArmyKnifeTool, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_399 [label="Entry QuantConnect.Indicators.Sum.Sum(string, int)", span="44-44", cluster="QuantConnect.Indicators.Sum.Sum(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_517 [label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169", cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_299 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="750-750", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_300 [label="string name = CreateIndicatorName(symbol, ''MOMP'' + period, resolution)", span="752-752", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_301 [label="var momentum = new MomentumPercent(name, period)", span="753-753", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_302 [label="RegisterIndicator(symbol, momentum, resolution, selector)", span="754-754", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_303 [label="return momentum;", span="755-755", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_304 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="750-750", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_79 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="223-223", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_80 [label="var name = CreateIndicatorName(symbol, ''CCI'' + period, resolution)", span="225-225", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_81 [label="var cci = new CommodityChannelIndex(name, period, movingAverageType)", span="226-226", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_82 [label="RegisterIndicator(symbol, cci, resolution, selector)", span="227-227", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_83 [label="return cci;", span="228-228", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_84 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="223-223", cluster="QuantConnect.Algorithm.QCAlgorithm.CCI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_525 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_327 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="819-819", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_328 [label="var name = CreateIndicatorName(symbol, string.Format(''PSAR({0},{1},{2})'', afStart, afIncrement, afMax), resolution)", span="821-821", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_329 [label="var psar = new ParabolicStopAndReverse(name, afStart, afIncrement, afMax)", span="822-822", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_330 [label="RegisterIndicator(symbol, psar, resolution, selector)", span="823-823", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_331 [label="return psar;", span="824-824", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_332 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="819-819", cluster="QuantConnect.Algorithm.QCAlgorithm.PSAR(QuantConnect.Symbol, decimal, decimal, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_489 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_589 [label="Entry QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", span="39-39", cluster="QuantConnect.Data.Consolidators.BaseDataConsolidator.BaseDataConsolidator(System.TimeSpan)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_355 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="886-886", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_356 [label="var name = CreateIndicatorName(symbol, ''ROCR'' + period, resolution)", span="888-888", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_357 [label="var rocr = new RateOfChangeRatio(name, period)", span="889-889", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_358 [label="RegisterIndicator(symbol, rocr, resolution, selector)", span="890-890", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_359 [label="return rocr;", span="891-891", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_360 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="886-886", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_57 [label="Entry QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", span="61-61", cluster="QuantConnect.Indicators.AroonOscillator.AroonOscillator(string, int, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_270 [label="Entry QuantConnect.Indicators.MidPrice.MidPrice(string, int)", span="35-35", cluster="QuantConnect.Indicators.MidPrice.MidPrice(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_587 [label="Entry QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", span="30-30", cluster="QuantConnect.Data.Consolidators.TickConsolidator.TickConsolidator(System.TimeSpan)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_16 [label="Entry QuantConnect.Indicators.AccumulationDistributionOscillator.AccumulationDistributionOscillator(string, int, int)", span="48-48", cluster="QuantConnect.Indicators.AccumulationDistributionOscillator.AccumulationDistributionOscillator(string, int, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_144 [label="Entry QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", span="40-40", cluster="QuantConnect.Indicators.FractalAdaptiveMovingAverage.FractalAdaptiveMovingAverage(string, int, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_136 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1388-1388", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_560 [label="var subscription = GetSubscription(symbol)", span="1390-1390", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_561 [label="!timeSpan.HasValue", span="1393-1393", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_563 [label="timeSpan.Value < subscription.Resolution.ToTimeSpan()", span="1400-1400", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_564 [label="throw new ArgumentException(string.Format(''Unable to create {0} consolidator because {0} is registered for {1} data. '' +\r\n                                                          ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, subscription.Resolution)\r\n                );", span="1402-1405", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_566 [label="return new TradeBarConsolidator(timeSpan.Value);", span="1412-1412", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_568 [label="return new QuoteBarConsolidator(timeSpan.Value);", span="1419-1419", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_570 [label="timeSpan.Value.Ticks == 0", span="1427-1427", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_574 [label="return new OpenInterestConsolidator(timeSpan.Value);", span="1435-1435", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_576 [label="return new TickQuoteBarConsolidator(timeSpan.Value);", span="1438-1438", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_577 [label="return new TickConsolidator(timeSpan.Value);", span="1441-1441", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_579 [label="return new DynamicDataConsolidator(timeSpan.Value);", span="1448-1448", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_580 [label="return new BaseDataConsolidator(timeSpan.Value);", span="1452-1452", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_562 [label="timeSpan = subscription.Resolution.ToTimeSpan()", span="1395-1395", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_565 [label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="1410-1410", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_567 [label="typeof(QuoteBar).IsAssignableFrom(subscription.Type)", span="1417-1417", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_569 [label="typeof(Tick).IsAssignableFrom(subscription.Type)", span="1424-1424", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_572 [label="subscription.TickType", span="1432-1432", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_578 [label="typeof(DynamicData).IsAssignableFrom(subscription.Type)", span="1446-1446", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_571 [label="return new IdentityDataConsolidator<Tick>();", span="1429-1429", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_573 [label="TickType.OpenInterest", span="1434-1434", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_575 [label="TickType.Quote", span="1437-1437", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_581 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", span="1388-1388", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, System.TimeSpan?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_51 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="153-153", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_52 [label="var name = CreateIndicatorName(symbol, string.Format(''AROON({0},{1})'', upPeriod, downPeriod), resolution)", span="155-155", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_53 [label="var aroon = new AroonOscillator(name, upPeriod, downPeriod)", span="156-156", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_54 [label="RegisterIndicator(symbol, aroon, resolution, selector)", span="157-157", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_55 [label="return aroon;", span="158-158", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_56 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="153-153", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_585 [label="Entry QuantConnect.Data.Consolidators.OpenInterestConsolidator.OpenInterestConsolidator(System.TimeSpan)", span="43-43", cluster="QuantConnect.Data.Consolidators.OpenInterestConsolidator.OpenInterestConsolidator(System.TimeSpan)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_39 [label="Entry QuantConnect.Indicators.ArnaudLegouxMovingAverage.ArnaudLegouxMovingAverage(string, int, int, decimal)", span="45-45", cluster="QuantConnect.Indicators.ArnaudLegouxMovingAverage.ArnaudLegouxMovingAverage(string, int, int, decimal)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="166-166", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_582 [label="Entry QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", span="44-44", cluster="QuantConnect.Data.Consolidators.TradeBarConsolidator.TradeBarConsolidator(System.TimeSpan)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_213 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="557-557", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_214 [label="string name = CreateIndicatorName(symbol, ''LWMA'' + period, resolution)", span="559-559", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_215 [label="var lwma = new LinearWeightedMovingAverage(name, period)", span="560-560", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_216 [label="RegisterIndicator(symbol, lwma, resolution, selector)", span="561-561", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_217 [label="return lwma;", span="562-562", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_218 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="557-557", cluster="QuantConnect.Algorithm.QCAlgorithm.LWMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_305 [label="Entry QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", span="38-38", cluster="QuantConnect.Indicators.MomentumPercent.MomentumPercent(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_435 [label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1079-1079", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_436 [label="var name = CreateIndicatorName(symbol, ''TRIX'' + period, resolution)", span="1081-1081", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_437 [label="var trix = new Trix(name, period)", span="1082-1082", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_438 [label="RegisterIndicator(symbol, trix, resolution, selector)", span="1083-1083", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_439 [label="return trix;", span="1084-1084", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_440 [label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1079-1079", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_306 [label="Entry QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="766-766", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_307 [label="var name = CreateIndicatorName(symbol, ''NATR'' + period, resolution)", span="768-768", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_308 [label="var natr = new NormalizedAverageTrueRange(name, period)", span="769-769", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_309 [label="RegisterIndicator(symbol, natr, resolution, selector)", span="770-770", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_310 [label="return natr;", span="771-771", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_311 [label="Exit QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="766-766", cluster="QuantConnect.Algorithm.QCAlgorithm.NATR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_547 [label="Entry lambda expression", span="1344-1348", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_248 [label="((TradeBar)x).High", span="621-621", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_247 [label="Entry lambda expression", span="621-621", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_249 [label="Exit lambda expression", span="621-621", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_283 [label="((TradeBar)x).Low", span="699-699", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_282 [label="Entry lambda expression", span="699-699", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_284 [label="Exit lambda expression", span="699-699", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_500 [label="x.Symbol == symbol", span="1215-1215", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_499 [label="Entry lambda expression", span="1215-1215", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_501 [label="Exit lambda expression", span="1215-1215", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_505 [label="x.Value", span="1235-1235", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_504 [label="Entry lambda expression", span="1235-1235", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_506 [label="Exit lambda expression", span="1235-1235", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_511 [label="x.Value", span="1248-1248", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_510 [label="Entry lambda expression", span="1248-1248", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_512 [label="Exit lambda expression", span="1248-1248", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_523 [label="indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value))", span="1271-1271", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_519 [label="x.Value", span="1262-1262", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_522 [label="var value = selector(consolidated)", span="1270-1270", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_518 [label="Entry lambda expression", span="1262-1262", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_520 [label="Exit lambda expression", span="1262-1262", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_521 [label="Entry lambda expression", span="1268-1272", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_524 [label="Exit lambda expression", span="1268-1272", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_549 [label="indicator.Update(value)", span="1347-1347", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_545 [label="(T)x", span="1328-1328", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_548 [label="var value = selector(consolidated)", span="1346-1346", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_544 [label="Entry lambda expression", span="1328-1328", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_546 [label="Exit lambda expression", span="1328-1328", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_550 [label="Exit lambda expression", span="1344-1348", cluster="lambda expression", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_449 [label="Entry QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1113-1113", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_450 [label="var name = CreateIndicatorName(symbol, ''VAR'' + period, resolution)", span="1115-1115", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_451 [label="var variance = new Variance(name, period)", span="1116-1116", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_452 [label="RegisterIndicator(symbol, variance, resolution, selector)", span="1117-1117", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_453 [label="return variance;", span="1118-1118", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_454 [label="Exit QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1113-1113", cluster="QuantConnect.Algorithm.QCAlgorithm.VAR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_191 [label="Entry QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", span="39-39", cluster="QuantConnect.Indicators.KaufmanAdaptiveMovingAverage.KaufmanAdaptiveMovingAverage(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_369 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="921-921", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_370 [label="string name = CreateIndicatorName(symbol, ''SMA'' + period, resolution)", span="923-923", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_371 [label="var sma = new SimpleMovingAverage(name, period)", span="924-924", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_372 [label="RegisterIndicator(symbol, sma, resolution, selector)", span="925-925", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_373 [label="return sma;", span="926-926", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_374 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="921-921", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_206 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="540-540", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_207 [label="var name = CreateIndicatorName(symbol, ''LSMA'' + period, resolution)", span="542-542", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_208 [label="var lsma = new LeastSquaresMovingAverage(name, period)", span="543-543", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_209 [label="RegisterIndicator(symbol, lsma, resolution, selector)", span="544-544", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_210 [label="return lsma;", span="545-545", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_211 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="540-540", cluster="QuantConnect.Algorithm.QCAlgorithm.LSMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_256 [label="Entry QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", span="78-78", cluster="QuantConnect.Indicators.MoneyFlowIndex.MoneyFlowIndex(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_383 [label="Entry QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="952-952", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_384 [label="string name = CreateIndicatorName(symbol, ''STO'', resolution)", span="954-954", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_385 [label="var stoch = new Stochastic(name, period, kPeriod, dPeriod)", span="955-955", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_386 [label="RegisterIndicator(symbol, stoch, resolution)", span="956-956", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_387 [label="return stoch;", span="957-957", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_388 [label="Exit QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", span="952-952", cluster="QuantConnect.Algorithm.QCAlgorithm.STO(QuantConnect.Symbol, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_86 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="239-239", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_87 [label="var name = CreateIndicatorName(symbol, ''CMO'' + period, resolution)", span="241-241", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_88 [label="var cmo = new ChandeMomentumOscillator(name, period)", span="242-242", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_89 [label="RegisterIndicator(symbol, cmo, resolution, selector)", span="243-243", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_90 [label="return cmo;", span="244-244", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_91 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="239-239", cluster="QuantConnect.Algorithm.QCAlgorithm.CMO(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_271 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="687-687", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_272 [label="var name = CreateIndicatorName(symbol, ''MIN'' + period, resolution)", span="689-689", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_273 [label="var min = new Minimum(name, period)", span="690-690", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_274 [label="selector == null", span="693-693", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_275 [label="var subscription = GetSubscription(symbol)", span="695-695", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_278 [label="RegisterIndicator(symbol, min, ResolveConsolidator(symbol, resolution), selector)", span="703-703", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_279 [label="return min;", span="704-704", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_276 [label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="696-696", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_277 [label="selector = x => ((TradeBar)x).Low", span="699-699", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_280 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="687-687", cluster="QuantConnect.Algorithm.QCAlgorithm.MIN(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_382 [label="Entry QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", span="44-44", cluster="QuantConnect.Indicators.StandardDeviation.StandardDeviation(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_167 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="441-441", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_168 [label="var resolution = GetSubscription(symbol).Resolution", span="443-443", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_169 [label="return Identity(symbol, resolution, selector, fieldName);", span="444-444", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_170 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="441-441", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_24 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="153-153", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.IBaseDataBar>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_393 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="980-980", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_394 [label="var name = CreateIndicatorName(symbol, ''SUM'' + period, resolution)", span="982-982", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_395 [label="var sum = new Sum(name, period)", span="983-983", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_396 [label="RegisterIndicator(symbol, sum, resolution, selector)", span="984-984", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_397 [label="return sum;", span="985-985", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_398 [label="Exit QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="980-980", cluster="QuantConnect.Algorithm.QCAlgorithm.SUM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_7 [label="Entry QuantConnect.Indicators.AccumulationDistribution.AccumulationDistribution(string)", span="30-30", cluster="QuantConnect.Indicators.AccumulationDistribution.AccumulationDistribution(string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="50-50", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_10 [label="var name = CreateIndicatorName(symbol, string.Format(''ADOSC({0},{1})'', fastPeriod, slowPeriod), resolution)", span="52-52", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_11 [label="var adOsc = new AccumulationDistributionOscillator(name, fastPeriod, slowPeriod)", span="53-53", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_12 [label="RegisterIndicator(symbol, adOsc, resolution, selector)", span="54-54", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_13 [label="return adOsc;", span="55-55", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_14 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="50-50", cluster="QuantConnect.Algorithm.QCAlgorithm.ADOSC(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_292 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="733-733", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_293 [label="var name = CreateIndicatorName(symbol, string.Format(''MOMERSION({0},{1})'', minPeriod, fullPeriod), resolution)", span="735-735", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_294 [label="var momersion = new MomersionIndicator(name, minPeriod, fullPeriod)", span="736-736", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_295 [label="RegisterIndicator(symbol, momersion, resolution, selector)", span="737-737", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_296 [label="return momersion;", span="738-738", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_297 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="733-733", cluster="QuantConnect.Algorithm.QCAlgorithm.MOMERSION(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_212 [label="Entry QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", span="50-50", cluster="QuantConnect.Indicators.LeastSquaresMovingAverage.LeastSquaresMovingAverage(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_121 [label="Entry QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1209-1209", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_491 [label="SubscriptionDataConfig subscription", span="1211-1211", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_492 [label="subscription = SubscriptionManager.Subscriptions.First(x => x.Symbol == symbol)", span="1215-1215", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_494 [label="throw new Exception(''Please register to receive data for symbol ''' + symbol.ToString() + ''' using the AddSecurity() function.'');", span="1220-1220", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_493 [label=InvalidOperationException, span="1217-1217", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_495 [label="return subscription;", span="1222-1222", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_496 [label="Exit QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", span="1209-1209", cluster="QuantConnect.Algorithm.QCAlgorithm.GetSubscription(QuantConnect.Symbol)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_47 [label="Entry QuantConnect.Indicators.AbsolutePriceOscillator.AbsolutePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", span="34-34", cluster="QuantConnect.Indicators.AbsolutePriceOscillator.AbsolutePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_58 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_59 [label="string name = CreateIndicatorName(symbol, ''ATR'' + period, resolution)", span="173-173", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_60 [label="var atr = new AverageTrueRange(name, period, type)", span="174-174", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_61 [label="RegisterIndicator(symbol, atr, resolution, selector)", span="175-175", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_62 [label="return atr;", span="176-176", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_63 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_233 [label="Entry QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", span="48-48", cluster="QuantConnect.Indicators.MeanAbsoluteDeviation.MeanAbsoluteDeviation(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_64 [label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", span="56-56", cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(string, int, QuantConnect.Indicators.MovingAverageType)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_257 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="654-654", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_258 [label="var name = CreateIndicatorName(symbol, ''MIDPOINT'' + period, resolution)", span="656-656", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_259 [label="var midpoint = new MidPoint(name, period)", span="657-657", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_260 [label="RegisterIndicator(symbol, midpoint, resolution, selector)", span="658-658", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_261 [label="return midpoint;", span="659-659", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_262 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="654-654", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPOINT(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_38 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_226 [label="Entry QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", span="66-66", cluster="QuantConnect.Indicators.MovingAverageConvergenceDivergence.MovingAverageConvergenceDivergence(string, int, int, int, QuantConnect.Indicators.MovingAverageType)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_109 [label="Entry QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", span="38-38", cluster="QuantConnect.Indicators.DoubleExponentialMovingAverage.DoubleExponentialMovingAverage(string, int, decimal)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_376 [label="Entry QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="936-936", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_377 [label="var name = CreateIndicatorName(symbol, ''STD'' + period, resolution)", span="938-938", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_378 [label="var std = new StandardDeviation(name, period)", span="939-939", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_379 [label="RegisterIndicator(symbol, std, resolution, selector)", span="940-940", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_380 [label="return std;", span="941-941", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_381 [label="Exit QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="936-936", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_263 [label="Entry QuantConnect.Indicators.MidPoint.MidPoint(string, int)", span="33-33", cluster="QuantConnect.Indicators.MidPoint.MidPoint(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_407 [label="Entry QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1016-1016", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_408 [label="var name = CreateIndicatorName(symbol, string.Format(''T3({0},{1})'', period, volumeFactor), resolution)", span="1018-1018", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_409 [label="var t3 = new T3MovingAverage(name, period, volumeFactor)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_410 [label="RegisterIndicator(symbol, t3, resolution, selector)", span="1020-1020", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_411 [label="return t3;", span="1021-1021", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_412 [label="Exit QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1016-1016", cluster="QuantConnect.Algorithm.QCAlgorithm.T3(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_198 [label="Entry QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="79-79", cluster="QuantConnect.Indicators.KeltnerChannels.KeltnerChannels(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_281 [label="Entry QuantConnect.Indicators.Minimum.Minimum(string, int)", span="51-51", cluster="QuantConnect.Indicators.Minimum.Minimum(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_320 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="801-801", cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_321 [label="var name = CreateIndicatorName(symbol, string.Format(''PPO({0},{1})'', fastPeriod, slowPeriod), resolution)", span="803-803", cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_322 [label="var ppo = new PercentagePriceOscillator(name, fastPeriod, slowPeriod, movingAverageType)", span="804-804", cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_323 [label="RegisterIndicator(symbol, ppo, resolution, selector)", span="805-805", cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_324 [label="return ppo;", span="806-806", cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_325 [label="Exit QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="801-801", cluster="QuantConnect.Algorithm.QCAlgorithm.PPO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_361 [label="Entry QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", span="29-29", cluster="QuantConnect.Indicators.RateOfChangeRatio.RateOfChangeRatio(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_48 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="139-139", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_49 [label="return AROON(symbol, period, period, resolution, selector);", span="141-141", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_50 [label="Exit QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="139-139", cluster="QuantConnect.Algorithm.QCAlgorithm.AROON(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_434 [label="Entry QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", span="34-34", cluster="QuantConnect.Indicators.TriangularMovingAverage.TriangularMovingAverage(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_220 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="576-576", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_221 [label="var name = CreateIndicatorName(symbol, string.Format(''MACD({0},{1})'', fastPeriod, slowPeriod), resolution)", span="578-578", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_222 [label="var macd = new MovingAverageConvergenceDivergence(name, fastPeriod, slowPeriod, signalPeriod, type)", span="579-579", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_223 [label="RegisterIndicator(symbol, macd, resolution, selector)", span="580-580", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_224 [label="return macd;", span="581-581", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_225 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="576-576", cluster="QuantConnect.Algorithm.QCAlgorithm.MACD(QuantConnect.Symbol, int, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_455 [label="Entry QuantConnect.Indicators.Variance.Variance(string, int)", span="39-39", cluster="QuantConnect.Indicators.Variance.Variance(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_326 [label="Entry QuantConnect.Indicators.PercentagePriceOscillator.PercentagePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", span="31-31", cluster="QuantConnect.Indicators.PercentagePriceOscillator.PercentagePriceOscillator(string, int, int, QuantConnect.Indicators.MovingAverageType)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_490 [label="Entry QuantConnect.Symbol.ToString()", span="350-350", cluster="QuantConnect.Symbol.ToString()", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_78 [label="Entry QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", span="30-30", cluster="QuantConnect.Indicators.BalanceOfPower.BalanceOfPower(string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_138 [label="Entry QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="373-373", cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_139 [label="var name = CreateIndicatorName(symbol, ''FRAMA'' + period, resolution)", span="375-375", cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_140 [label="var frama = new FractalAdaptiveMovingAverage(name, period, longPeriod)", span="376-376", cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_141 [label="RegisterIndicator(symbol, frama, resolution, selector)", span="377-377", cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_142 [label="return frama;", span="378-378", cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_143 [label="Exit QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="373-373", cluster="QuantConnect.Algorithm.QCAlgorithm.FRAMA(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_103 [label="Entry QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="287-287", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_104 [label="var name = CreateIndicatorName(symbol, ''DEMA'' + period, resolution)", span="289-289", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_105 [label="var dema = new DoubleExponentialMovingAverage(name, period)", span="290-290", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_106 [label="RegisterIndicator(symbol, dema, resolution, selector)", span="291-291", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_107 [label="return dema;", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_108 [label="Exit QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="287-287", cluster="QuantConnect.Algorithm.QCAlgorithm.DEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_205 [label="Entry QuantConnect.Indicators.LogReturn.LogReturn(string, int)", span="31-31", cluster="QuantConnect.Indicators.LogReturn.LogReturn(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_498 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_234 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="609-609", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_235 [label="var name = CreateIndicatorName(symbol, ''MAX'' + period, resolution)", span="611-611", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_236 [label="var max = new Maximum(name, period)", span="612-612", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_237 [label="selector == null", span="615-615", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_238 [label="var subscription = GetSubscription(symbol)", span="617-617", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_241 [label="RegisterIndicator(symbol, max, ResolveConsolidator(symbol, resolution), selector)", span="625-625", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_242 [label="return max;", span="626-626", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_239 [label="typeof(TradeBar).IsAssignableFrom(subscription.Type)", span="618-618", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_240 [label="selector = x => ((TradeBar)x).High", span="621-621", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_243 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="609-609", cluster="QuantConnect.Algorithm.QCAlgorithm.MAX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_99 [label="Entry QuantConnect.Indicators.DonchianChannel.DonchianChannel(string, int, int)", span="55-55", cluster="QuantConnect.Indicators.DonchianChannel.DonchianChannel(string, int, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_71 [label="Entry QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", span="53-53", cluster="QuantConnect.Indicators.BollingerBands.BollingerBands(string, int, decimal, QuantConnect.Indicators.MovingAverageType)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_528 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1282-1282", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_529 [label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution))", span="1285-1285", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_530 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", span="1282-1282", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_362 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="904-904", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_363 [label="var name = CreateIndicatorName(symbol, ''RSI'' + period, resolution)", span="906-906", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_364 [label="var rsi = new RelativeStrengthIndex(name, period, movingAverageType)", span="907-907", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_365 [label="RegisterIndicator(symbol, rsi, resolution, selector)", span="908-908", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_366 [label="return rsi;", span="909-909", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_367 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="904-904", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_110 [label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="304-304", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_111 [label="string name = CreateIndicatorName(symbol, ''EMA'' + period, resolution)", span="306-306", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_112 [label="var ema = new ExponentialMovingAverage(name, period)", span="307-307", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_113 [label="RegisterIndicator(symbol, ema, resolution, selector)", span="308-308", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_114 [label="return ema;", span="309-309", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_115 [label="Exit QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="304-304", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_543 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_117 [label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", span="321-321", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_118 [label="var resolution = GetSubscription(symbol).Resolution", span="323-323", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_119 [label="return FilteredIdentity(symbol, resolution, selector, filter, fieldName);", span="324-324", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_120 [label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", span="321-321", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_6 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1163-1163", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_470 [label="!resolution.HasValue", span="1165-1165", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_471 [label="resolution = GetSubscription(symbol).Resolution", span="1167-1167", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_473 [label=resolution, span="1170-1170", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_487 [label="return string.Format(''{0}({1}{2})'', type, symbol.ToString(), res);", span="1200-1200", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_472 [label="string res", span="1169-1169", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_474 [label="Resolution.Tick", span="1172-1172", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_476 [label="Resolution.Second", span="1176-1176", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_478 [label="Resolution.Minute", span="1180-1180", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_480 [label="Resolution.Hour", span="1184-1184", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_482 [label="Resolution.Daily", span="1188-1188", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_484 [label=null, span="1192-1192", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_486 [label="throw new ArgumentOutOfRangeException(''resolution'');", span="1197-1197", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_475 [label="res = ''_tick''", span="1173-1173", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_477 [label="res = ''_sec''", span="1177-1177", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_479 [label="res = ''_min''", span="1181-1181", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_481 [label="res = ''_hr''", span="1185-1185", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_483 [label="res = ''_day''", span="1189-1189", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_485 [label="res = string.Empty", span="1193-1193", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_488 [label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", span="1163-1163", cluster="QuantConnect.Algorithm.QCAlgorithm.CreateIndicatorName(QuantConnect.Symbol, string, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_152 [label="Entry QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="404-404", cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_153 [label="var name = CreateIndicatorName(symbol, ''HMA'' + period, resolution)", span="406-406", cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_154 [label="var hma = new HullMovingAverage(name, period)", span="407-407", cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_155 [label="RegisterIndicator(symbol, hma, resolution, selector)", span="408-408", cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_156 [label="return hma;", span="409-409", cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_157 [label="Exit QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="404-404", cluster="QuantConnect.Algorithm.QCAlgorithm.HMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_25 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="83-83", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_26 [label="var name = CreateIndicatorName(symbol, ''ADXR'' + period, resolution)", span="85-85", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", color=red, community=0, file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_27 [label="var adxr = new AverageDirectionalMovementIndexRating(name, period)", span="86-86", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", color=red, community=0, file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_28 [label="RegisterIndicator(symbol, adxr, resolution, selector)", span="87-87", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", color=red, community=0, file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_29 [label="return adxr;", span="88-88", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", color=red, community=0, file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_30 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="83-83", cluster="QuantConnect.Algorithm.QCAlgorithm.ADXR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_128 [label="Entry QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", span="35-35", cluster="QuantConnect.Indicators.FilteredIdentity.FilteredIdentity(string, System.Func<QuantConnect.Data.IBaseData, bool>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_414 [label="Entry QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1032-1032", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_415 [label="var name = CreateIndicatorName(symbol, ''TEMA'' + period, resolution)", span="1034-1034", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_416 [label="var tema = new TripleExponentialMovingAverage(name, period)", span="1035-1035", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_417 [label="RegisterIndicator(symbol, tema, resolution, selector)", span="1036-1036", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_418 [label="return tema;", span="1037-1037", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_419 [label="Exit QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1032-1032", cluster="QuantConnect.Algorithm.QCAlgorithm.TEMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_527 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_375 [label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", span="46-46", cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_456 [label="Entry QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="1130-1130", cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_457 [label="var name = CreateIndicatorName(symbol, ''VWAP'' + period, resolution)", span="1132-1132", cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_458 [label="var vwap = new VolumeWeightedAveragePriceIndicator(name, period)", span="1133-1133", cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_459 [label="RegisterIndicator(symbol, vwap, resolution, selector)", span="1134-1134", cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_460 [label="return vwap;", span="1135-1135", cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_461 [label="Exit QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="1130-1130", cluster="QuantConnect.Algorithm.QCAlgorithm.VWAP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_333 [label="Entry QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", span="43-43", cluster="QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_250 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="638-638", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_251 [label="var name = CreateIndicatorName(symbol, ''MFI'' + period, resolution)", span="640-640", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_252 [label="var mfi = new MoneyFlowIndex(name, period)", span="641-641", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_253 [label="RegisterIndicator(symbol, mfi, resolution, selector)", span="642-642", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_254 [label="return mfi;", span="643-643", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_255 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="638-638", cluster="QuantConnect.Algorithm.QCAlgorithm.MFI(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_32 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="105-105", cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_33 [label="var name = CreateIndicatorName(symbol, string.Format(''ALMA_{0}_{1}_{2}'', period, sigma, offset), resolution)", span="107-107", cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_34 [label="var alma = new ArnaudLegouxMovingAverage(name, period, sigma, offset)", span="108-108", cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_35 [label="RegisterIndicator(symbol, alma, resolution, selector)", span="109-109", cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_36 [label="return alma;", span="110-110", cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_37 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="105-105", cluster="QuantConnect.Algorithm.QCAlgorithm.ALMA(QuantConnect.Symbol, int, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_137 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1324-1324", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_536 [label="selector = selector ?? (x => (T)x)", span="1328-1328", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_537 [label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="1331-1331", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_539 [label="!type.IsAssignableFrom(consolidator.OutputType)", span="1335-1335", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_540 [label="throw new ArgumentException(string.Format(''Type mismatch found between consolidator and indicator for symbol: {0}.'' +\r\n                                                          ''Consolidator outputs type {1} but indicator expects input type {2}'',\r\n                    symbol, consolidator.OutputType.Name, type.Name)\r\n                );", span="1337-1340", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_541 [label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(value);\r\n            }", span="1344-1348", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_538 [label="var type = typeof(T)", span="1334-1334", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_542 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", span="1324-1324", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_72 [label="Entry QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="205-205", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_73 [label="var name = CreateIndicatorName(symbol, ''BOP'', resolution)", span="207-207", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_75 [label="RegisterIndicator(symbol, bop, resolution, selector)", span="209-209", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_74 [label="var bop = new BalanceOfPower(name)", span="208-208", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_76 [label="return bop;", span="210-210", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_77 [label="Exit QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="205-205", cluster="QuantConnect.Algorithm.QCAlgorithm.BOP(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_462 [label="Entry QuantConnect.Indicators.VolumeWeightedAveragePriceIndicator.VolumeWeightedAveragePriceIndicator(string, int)", span="48-48", cluster="QuantConnect.Indicators.VolumeWeightedAveragePriceIndicator.VolumeWeightedAveragePriceIndicator(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_319 [label="Entry QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", span="34-34", cluster="QuantConnect.Indicators.OnBalanceVolume.OnBalanceVolume(string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_40 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1233-1233", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_502 [label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="1235-1235", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_503 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1233-1233", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_347 [label="Entry QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", span="37-37", cluster="QuantConnect.Indicators.RateOfChange.RateOfChange(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_41 [label="Entry QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="123-123", cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_42 [label="var name = CreateIndicatorName(symbol, string.Format(''APO({0},{1})'', fastPeriod, slowPeriod), resolution)", span="125-125", cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_43 [label="var apo = new AbsolutePriceOscillator(name, fastPeriod, slowPeriod, movingAverageType)", span="126-126", cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_44 [label="RegisterIndicator(symbol, apo, resolution, selector)", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_45 [label="return apo;", span="128-128", cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_46 [label="Exit QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="123-123", cluster="QuantConnect.Algorithm.QCAlgorithm.APO(QuantConnect.Symbol, int, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_291 [label="Entry QuantConnect.Indicators.Momentum.Momentum(string, int)", span="37-37", cluster="QuantConnect.Indicators.Momentum.Momentum(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_15 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_116 [label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", span="30-30", cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_469 [label="Entry QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", span="59-59", cluster="QuantConnect.Indicators.WilliamsPercentR.WilliamsPercentR(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_497 [label="Entry Unk.First", span="", cluster="Unk.First", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_184 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1259-1259", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_513 [label="selector = selector ?? (x => x.Value)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_514 [label="SubscriptionManager.AddConsolidator(symbol, consolidator)", span="1265-1265", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_515 [label="consolidator.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                var value = selector(consolidated);\r\n                indicator.Update(new IndicatorDataPoint(consolidated.Symbol, consolidated.EndTime, value));\r\n            }", span="1268-1272", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_516 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1259-1259", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Data.Consolidators.IDataConsolidator, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_559 [label="Entry QuantConnect.Resolution.ToTimeSpan()", span="682-682", cluster="QuantConnect.Resolution.ToTimeSpan()", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_354 [label="Entry QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", span="37-37", cluster="QuantConnect.Indicators.RateOfChangePercent.RateOfChangePercent(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_199 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="524-524", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_200 [label="string name = CreateIndicatorName(symbol, ''LOGR'', resolution)", span="526-526", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_201 [label="var logr = new LogReturn(name, period)", span="527-527", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_202 [label="RegisterIndicator(symbol, logr, resolution, selector)", span="528-528", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_203 [label="return logr;", span="529-529", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_204 [label="Exit QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="524-524", cluster="QuantConnect.Algorithm.QCAlgorithm.LOGR(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_92 [label="Entry QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", span="44-44", cluster="QuantConnect.Indicators.ChandeMomentumOscillator.ChandeMomentumOscillator(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_413 [label="Entry QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", span="38-38", cluster="QuantConnect.Indicators.T3MovingAverage.T3MovingAverage(string, int, decimal)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_583 [label="Entry QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(System.TimeSpan)", span="29-29", cluster="QuantConnect.Data.Consolidators.QuoteBarConsolidator.QuoteBarConsolidator(System.TimeSpan)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_227 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="592-592", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_228 [label="var name = CreateIndicatorName(symbol, ''MAD'' + period, resolution)", span="594-594", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_229 [label="var mad = new MeanAbsoluteDeviation(name, period)", span="595-595", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_230 [label="RegisterIndicator(symbol, mad, resolution, selector)", span="596-596", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_231 [label="return mad;", span="597-597", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_232 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="592-592", cluster="QuantConnect.Algorithm.QCAlgorithm.MAD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_130 [label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", span="355-355", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_131 [label="string name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="357-357", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_132 [label="var filteredIdentity = new FilteredIdentity(name, filter)", span="358-358", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_133 [label="RegisterIndicator<IBaseData>(symbol, filteredIdentity, ResolveConsolidator(symbol, resolution), selector)", span="359-359", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_134 [label="return filteredIdentity;", span="360-360", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_135 [label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", span="355-355", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_427 [label="Entry QuantConnect.Indicators.TrueRange.TrueRange(string)", span="35-35", cluster="QuantConnect.Indicators.TrueRange.TrueRange(string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_334 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="836-836", cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_335 [label="var name = CreateIndicatorName(symbol, string.Format(''RC({0},{1})'', period, k), resolution)", span="838-838", cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_336 [label="var rc = new RegressionChannel(name, period, k)", span="839-839", cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_337 [label="RegisterIndicator(symbol, rc, resolution, selector)", span="840-840", cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_338 [label="return rc;", span="841-841", cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_339 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="836-836", cluster="QuantConnect.Algorithm.QCAlgorithm.RC(QuantConnect.Symbol, int, decimal, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_264 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="670-670", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_265 [label="var name = CreateIndicatorName(symbol, ''MIDPRICE'' + period, resolution)", span="672-672", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_266 [label="var midprice = new MidPrice(name, period)", span="673-673", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_267 [label="RegisterIndicator(symbol, midprice, resolution, selector)", span="674-674", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_268 [label="return midprice;", span="675-675", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_269 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="670-670", cluster="QuantConnect.Algorithm.QCAlgorithm.MIDPRICE(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_145 [label="Entry QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="388-388", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_146 [label="var name = CreateIndicatorName(symbol, ''HA'', resolution)", span="390-390", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_148 [label="RegisterIndicator(symbol, ha, resolution, selector)", span="392-392", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_147 [label="var ha = new HeikinAshi(name)", span="391-391", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_149 [label="return ha;", span="393-393", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_150 [label="Exit QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="388-388", cluster="QuantConnect.Algorithm.QCAlgorithm.HeikinAshi(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_17 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="67-67", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_18 [label="var name = CreateIndicatorName(symbol, ''ADX'', resolution)", span="69-69", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_19 [label="var averageDirectionalIndex = new AverageDirectionalIndex(name, period)", span="70-70", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_20 [label="RegisterIndicator(symbol, averageDirectionalIndex, resolution, selector)", span="71-71", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_21 [label="return averageDirectionalIndex;", span="72-72", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_22 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="67-67", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_584 [label="Entry QuantConnect.Data.Consolidators.IdentityDataConsolidator<T>.IdentityDataConsolidator()", span="25-25", cluster="QuantConnect.Data.Consolidators.IdentityDataConsolidator<T>.IdentityDataConsolidator()", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_588 [label="Entry QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", span="30-30", cluster="QuantConnect.Data.Consolidators.DynamicDataConsolidator.DynamicDataConsolidator(System.TimeSpan)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_285 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="716-716", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_286 [label="string name = CreateIndicatorName(symbol, ''MOM'' + period, resolution)", span="718-718", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_287 [label="var momentum = new Momentum(name, period)", span="719-719", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_288 [label="RegisterIndicator(symbol, momentum, resolution, selector)", span="720-720", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_289 [label="return momentum;", span="721-721", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_290 [label="Exit QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="716-716", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_368 [label="Entry QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", span="55-55", cluster="QuantConnect.Indicators.RelativeStrengthIndex.RelativeStrengthIndex(string, int, QuantConnect.Indicators.MovingAverageType)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_244 [label="Entry QuantConnect.Indicators.Maximum.Maximum(string, int)", span="51-51", cluster="QuantConnect.Indicators.Maximum.Maximum(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_129 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1296-1296", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_531 [label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector)", span="1299-1299", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_532 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", span="1296-1296", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator<T>(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, T>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_406 [label="Entry QuantConnect.Indicators.SwissArmyKnife.SwissArmyKnife(string, int, double, QuantConnect.Indicators.SwissArmyKnifeTool)", span="86-86", cluster="QuantConnect.Indicators.SwissArmyKnife.SwissArmyKnife(string, int, double, QuantConnect.Indicators.SwissArmyKnifeTool)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_100 [label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="274-274", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_101 [label="return DCH(symbol, period, period, resolution, selector);", span="276-276", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_102 [label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="274-274", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_178 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="473-473", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_179 [label="string name = string.Format(''{0}({1}_{2})'', symbol, fieldName ?? ''close'', resolution)", span="475-475", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_181 [label="RegisterIndicator(symbol, identity, ResolveConsolidator(symbol, resolution), selector)", span="477-477", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_180 [label="var identity = new Identity(name)", span="476-476", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_182 [label="return identity;", span="478-478", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_183 [label="Exit QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", span="473-473", cluster="QuantConnect.Algorithm.QCAlgorithm.Identity(QuantConnect.Symbol, System.TimeSpan, System.Func<QuantConnect.Data.IBaseData, decimal>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_159 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="425-425", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_160 [label="var name = CreateIndicatorName(symbol, string.Format(''ICHIMOKU({0},{1})'', tenkanPeriod, kijunPeriod), resolution)", span="427-427", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_161 [label="var ichimoku = new IchimokuKinkoHyo(name, tenkanPeriod, kijunPeriod, senkouAPeriod, senkouBPeriod, senkouADelayPeriod, senkouBDelayPeriod)", span="428-428", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_162 [label="RegisterIndicator(symbol, ichimoku, resolution)", span="429-429", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_163 [label="return ichimoku;", span="430-430", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_164 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", span="425-425", cluster="QuantConnect.Algorithm.QCAlgorithm.ICHIMOKU(QuantConnect.Symbol, int, int, int, int, int, int, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_441 [label="Entry QuantConnect.Indicators.Trix.Trix(string, int)", span="35-35", cluster="QuantConnect.Indicators.Trix.Trix(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_313 [label="Entry QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="783-783", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_314 [label="var name = CreateIndicatorName(symbol, ''OBV'', resolution)", span="785-785", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_316 [label="RegisterIndicator(symbol, onBalanceVolume, resolution, selector)", span="787-787", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_315 [label="var onBalanceVolume = new OnBalanceVolume(name)", span="786-786", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_317 [label="return onBalanceVolume;", span="788-788", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_318 [label="Exit QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", span="783-783", cluster="QuantConnect.Algorithm.QCAlgorithm.OBV(QuantConnect.Symbol, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.TradeBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_526 [label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52", cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_23 [label="Entry QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", span="66-66", cluster="QuantConnect.Indicators.AverageDirectionalIndex.AverageDirectionalIndex(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_420 [label="Entry QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", span="37-37", cluster="QuantConnect.Indicators.TripleExponentialMovingAverage.TripleExponentialMovingAverage(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_93 [label="Entry QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="257-257", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_94 [label="var name = CreateIndicatorName(symbol, ''DCH'', resolution)", span="259-259", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_95 [label="var donchianChannel = new DonchianChannel(name, upperPeriod, lowerPeriod)", span="260-260", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_96 [label="RegisterIndicator(symbol, donchianChannel, resolution, selector)", span="261-261", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_97 [label="return donchianChannel;", span="262-262", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_98 [label="Exit QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="257-257", cluster="QuantConnect.Algorithm.QCAlgorithm.DCH(QuantConnect.Symbol, int, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_507 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1246-1246", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_508 [label="RegisterIndicator(symbol, indicator, ResolveConsolidator(symbol, resolution), selector ?? (x => x.Value))", span="1248-1248", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_509 [label="Exit QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1246-1246", cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, System.TimeSpan?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_348 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="870-870", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_349 [label="string name = CreateIndicatorName(symbol, ''ROCP'' + period, resolution)", span="872-872", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_350 [label="var rateofchangepercent = new RateOfChangePercent(name, period)", span="873-873", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_351 [label="RegisterIndicator(symbol, rateofchangepercent, resolution, selector)", span="874-874", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_352 [label="return rateofchangepercent;", span="875-875", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_353 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="870-870", cluster="QuantConnect.Algorithm.QCAlgorithm.ROCP(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_185 [label="Entry QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="489-489", cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_186 [label="var name = CreateIndicatorName(symbol, ''KAMA'' + period, resolution)", span="491-491", cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_187 [label="var kama = new KaufmanAdaptiveMovingAverage(name, period)", span="492-492", cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_188 [label="RegisterIndicator(symbol, kama, resolution, selector)", span="493-493", cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_189 [label="return kama;", span="494-494", cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_190 [label="Exit QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="489-489", cluster="QuantConnect.Algorithm.QCAlgorithm.KAMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_219 [label="Entry QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", span="41-41", cluster="QuantConnect.Indicators.LinearWeightedMovingAverage.LinearWeightedMovingAverage(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_192 [label="Entry QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="508-508", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_193 [label="var name = CreateIndicatorName(symbol, ''KCH'', resolution)", span="510-510", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_194 [label="var keltnerChannels = new KeltnerChannels(name, period, k, movingAverageType)", span="511-511", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_195 [label="RegisterIndicator(symbol, keltnerChannels, resolution, selector)", span="512-512", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_196 [label="return keltnerChannels;", span="513-513", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_197 [label="Exit QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="508-508", cluster="QuantConnect.Algorithm.QCAlgorithm.KCH(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_312 [label="Entry QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", span="36-36", cluster="QuantConnect.Indicators.NormalizedAverageTrueRange.NormalizedAverageTrueRange(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_586 [label="Entry QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(System.TimeSpan)", span="30-30", cluster="QuantConnect.Data.Consolidators.TickQuoteBarConsolidator.TickQuoteBarConsolidator(System.TimeSpan)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_122 [label="Entry QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", span="337-337", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_123 [label="string name = CreateIndicatorName(symbol, fieldName ?? ''close'', resolution)", span="339-339", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_124 [label="var filteredIdentity = new FilteredIdentity(name, filter)", span="340-340", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_125 [label="RegisterIndicator<IBaseData>(symbol, filteredIdentity, resolution, selector)", span="341-341", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_126 [label="return filteredIdentity;", span="342-342", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_127 [label="Exit QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", span="337-337", cluster="QuantConnect.Algorithm.QCAlgorithm.FilteredIdentity(QuantConnect.Symbol, QuantConnect.Resolution, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>, System.Func<QuantConnect.Data.IBaseData, bool>, string)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_65 [label="Entry QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="189-189", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_66 [label="var name = CreateIndicatorName(symbol, string.Format(''BB({0},{1})'', period, k), resolution)", span="191-191", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_67 [label="var bb = new BollingerBands(name, period, k, movingAverageType)", span="192-192", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_68 [label="RegisterIndicator(symbol, bb, resolution, selector)", span="193-193", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_69 [label="return bb;", span="194-194", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_70 [label="Exit QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="189-189", cluster="QuantConnect.Algorithm.QCAlgorithm.BB(QuantConnect.Symbol, int, decimal, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_31 [label="Entry QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", span="36-36", cluster="QuantConnect.Indicators.AverageDirectionalMovementIndexRating.AverageDirectionalMovementIndexRating(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_165 [label="Entry QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", span="99-99", cluster="QuantConnect.Indicators.IchimokuKinkoHyo.IchimokuKinkoHyo(string, int, int, int, int, int, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_298 [label="Entry QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", span="52-52", cluster="QuantConnect.Indicators.MomersionIndicator.MomersionIndicator(string, int?, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_246 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1357-1357", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_551 [label="var subscription = GetSubscription(symbol)", span="1359-1359", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_552 [label="!resolution.HasValue", span="1362-1362", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_554 [label="var timeSpan = resolution.Value.ToTimeSpan()", span="1367-1367", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_556 [label="throw new ArgumentException(string.Format(''Unable to create {0} {1} consolidator because {0} is registered for {2} data. '' +\r\n                                                          ''Consolidators require higher resolution data to produce lower resolution data.'',\r\n                    symbol, resolution.Value, subscription.Resolution)\r\n                );", span="1373-1376", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_557 [label="return ResolveConsolidator(symbol, timeSpan);", span="1379-1379", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_553 [label="resolution = subscription.Resolution", span="1364-1364", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_555 [label="timeSpan < subscription.Resolution.ToTimeSpan()", span="1371-1371", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_558 [label="Exit QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", span="1357-1357", cluster="QuantConnect.Algorithm.QCAlgorithm.ResolveConsolidator(QuantConnect.Symbol, QuantConnect.Resolution?)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_158 [label="Entry QuantConnect.Indicators.HullMovingAverage.HullMovingAverage(string, int)", span="34-34", cluster="QuantConnect.Indicators.HullMovingAverage.HullMovingAverage(string, int)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_428 [label="Entry QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1063-1063", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_429 [label="var name = CreateIndicatorName(symbol, ''TRIMA'' + period, resolution)", span="1065-1065", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_430 [label="var trima = new TriangularMovingAverage(name, period)", span="1066-1066", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_431 [label="RegisterIndicator(symbol, trima, resolution, selector)", span="1067-1067", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_432 [label="return trima;", span="1068-1068", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_433 [label="Exit QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1063-1063", cluster="QuantConnect.Algorithm.QCAlgorithm.TRIMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_590 [label="QuantConnect.Algorithm.QCAlgorithm", span="", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_591 [label="QuantConnect.Symbol", span="", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_592 [label="System.Func<QuantConnect.Data.IBaseData, decimal>", span="", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_593 [label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", span="", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_594 [label="System.Func<QuantConnect.Data.IBaseData, T>", span="", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m11_595 [label="QuantConnect.Indicators.IndicatorBase<T>", span="", file="BasicTemplateOptionsFilterUniverseAlgorithm.cs"];
m12_80 [label="Entry QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", span="169-169", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_81 [label="string user = ''''", span="171-171", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_82 [label="string password = ''''", span="172-172", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_83 [label="BrokerageEnvironment environment = BrokerageEnvironment.Paper", span="173-173", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_84 [label="string account = ''''", span="174-174", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_96 [label="settings = new DefaultLiveAlgorithmSettings(user, password, environment, account)", span="195-195", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_101 [label="settings = new FXCMLiveAlgorithmSettings(user, password, environment, account)", span="202-202", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_112 [label="settings = new OandaLiveAlgorithmSettings(accessToken, environment, account)", span="218-218", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_124 [label="Assert.IsTrue(settings.Environment == environment)", span="240-240", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_85 [label="string accessToken = ''''", span="177-177", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_86 [label="var dateIssuedString = ''20160920''", span="178-178", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_87 [label="string dateIssued = ''''", span="181-181", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_88 [label="string refreshToken = ''''", span="182-182", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_89 [label="string lifetime = ''''", span="183-183", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_90 [label="Enum.GetValues(typeof(BrokerageName))", span="186-186", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_91 [label="BaseLiveAlgorithmSettings settings = null", span="188-188", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_92 [label=brokerageName, span="190-190", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_119 [label="throw new Exception(''Settings have not been implemented for this brokerage: '' + brokerageName.ToString());", span="230-230", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_123 [label="brokerageName != BrokerageName.TradierBrokerage", span="239-239", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_125 [label="brokerageName == BrokerageName.OandaBrokerage", span="243-243", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_128 [label="brokerageName == BrokerageName.TradierBrokerage", span="251-251", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_93 [label="BrokerageName.Default", span="192-192", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_98 [label="BrokerageName.FxcmBrokerage", span="199-199", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_103 [label="BrokerageName.InteractiveBrokersBrokerage", span="206-206", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_109 [label="BrokerageName.OandaBrokerage", span="214-214", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_114 [label="BrokerageName.TradierBrokerage", span="221-221", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_94 [label="user     = Config.Get(''default-username'')", span="193-193", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_95 [label="password = Config.Get(''default-password'')", span="194-194", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_97 [label="Assert.IsTrue(settings.Id == BrokerageName.Default.ToString())", span="197-197", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_99 [label="user     = Config.Get(''fxcm-user-name'')", span="200-200", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_100 [label="password = Config.Get(''fxcm-password'')", span="201-201", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_102 [label="Assert.IsTrue(settings.Id == BrokerageName.FxcmBrokerage.ToString())", span="204-204", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_104 [label="user     = Config.Get(''ib-user-name'')", span="207-207", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_105 [label="password = Config.Get(''ib-password'')", span="208-208", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_107 [label="settings = new InteractiveBrokersLiveAlgorithmSettings(user, password, account)", span="210-210", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_122 [label="Assert.IsTrue(settings.User == user)", span="236-236", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_106 [label="account = Config.Get(''ib-account'')", span="209-209", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_121 [label="Assert.IsTrue(settings.Password == password)", span="235-235", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_108 [label="Assert.IsTrue(settings.Id == BrokerageName.InteractiveBrokersBrokerage.ToString())", span="212-212", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_110 [label="accessToken = Config.Get(''oanda-access-token'')", span="215-215", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_111 [label="account     = Config.Get(''oanda-account-id'')", span="216-216", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_127 [label="Assert.IsTrue(oandaSetting.AccessToken == accessToken)", span="247-247", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_113 [label="Assert.IsTrue(settings.Id == BrokerageName.OandaBrokerage.ToString())", span="219-219", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_115 [label="dateIssued   = Config.Get(''tradier-issued-at'')", span="222-222", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_116 [label="refreshToken = Config.Get(''tradier-refresh-token'')", span="223-223", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_118 [label="settings = new TradierLiveAlgorithmSettings(refreshToken, dateIssued, refreshToken, account)", span="226-226", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_130 [label="Assert.IsTrue(tradierLiveAlogrithmSettings.DateIssued == dateIssued)", span="255-255", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_117 [label="account      = Config.Get(''tradier-account-id'')", span="224-224", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_131 [label="Assert.IsTrue(tradierLiveAlogrithmSettings.RefreshToken == refreshToken)", span="256-256", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_120 [label="Assert.IsTrue(settings != null)", span="234-234", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_126 [label="var oandaSetting = settings as OandaLiveAlgorithmSettings", span="245-245", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_129 [label="var tradierLiveAlogrithmSettings = settings as TradierLiveAlgorithmSettings", span="253-253", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_132 [label="Assert.IsTrue(settings.Environment == BrokerageEnvironment.Live)", span="257-257", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_133 [label="user = ''''", span="261-261", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_134 [label="password = ''''", span="262-262", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_135 [label="environment = BrokerageEnvironment.Paper", span="263-263", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_136 [label="account = ''''", span="264-264", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_137 [label="Exit QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", span="169-169", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmSettings_CanBeCreated_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_140 [label="Entry QuantConnect.API.DefaultLiveAlgorithmSettings.DefaultLiveAlgorithmSettings(string, string, QuantConnect.BrokerageEnvironment, string)", span="165-165", cluster="QuantConnect.API.DefaultLiveAlgorithmSettings.DefaultLiveAlgorithmSettings(string, string, QuantConnect.BrokerageEnvironment, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_373 [label="Entry QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", span="742-742", cluster="QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_392 [label="var result = new Backtest()", span="744-744", cluster="QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_395 [label="result = _api.ReadBacktest(projectId, backtestId)", span="748-748", cluster="QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_393 [label="var finish = DateTime.Now.AddSeconds(60)", span="745-745", cluster="QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_399 [label="return result;", span="753-753", cluster="QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_394 [label="DateTime.Now < finish", span="746-746", cluster="QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_396 [label="result.Progress == 1", span="749-749", cluster="QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_397 [label="!result.Success", span="750-750", cluster="QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_398 [label="Thread.Sleep(1000)", span="751-751", cluster="QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_400 [label="Exit QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", span="742-742", cluster="QuantConnect.Tests.API.RestApiTests.WaitForBacktestCompletion(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_73 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_302 [label="Entry QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", span="631-631", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_317 [label="var project = _api.CreateProject(projectName, language)", span="634-634", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_320 [label="Assert.IsTrue(project.Projects.First().Name == projectName)", span="637-637", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_326 [label="Assert.IsTrue(readProject.Projects.First().Name == projectName)", span="647-647", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_327 [label="var file = new ProjectFile { Name = algorithmName, Code = code }", span="650-650", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_318 [label="Assert.IsTrue(project.Success)", span="635-635", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_319 [label="Assert.IsTrue(project.Projects.First().ProjectId > 0)", span="636-636", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_323 [label="Assert.IsTrue(projects.Projects.Any(p => p.ProjectId == project.Projects.First().ProjectId))", span="642-642", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_324 [label="var readProject = _api.ReadProject(project.Projects.First().ProjectId)", span="645-645", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_328 [label="var addProjectFile = _api.AddProjectFile(project.Projects.First().ProjectId, file.Name, file.Code)", span="651-651", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_330 [label="var verifyRead = _api.ReadProject(project.Projects.First().ProjectId)", span="655-655", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_332 [label="var compileCreate = _api.CreateCompile(project.Projects.First().ProjectId)", span="659-659", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_335 [label="var compileSuccess = WaitForCompilerResponse(project.Projects.First().ProjectId, compileCreate.CompileId)", span="664-664", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_339 [label="_api.UpdateProjectFileContent(project.Projects.First().ProjectId, file.Name, file.Code)", span="670-670", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_340 [label="var compileError = _api.CreateCompile(project.Projects.First().ProjectId)", span="671-671", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_341 [label="compileError = WaitForCompilerResponse(project.Projects.First().ProjectId, compileError.CompileId)", span="672-672", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_345 [label="var backtest = _api.CreateBacktest(project.Projects.First().ProjectId, compileSuccess.CompileId, backtestName)", span="678-678", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_347 [label="var backtestRead = WaitForBacktestCompletion(project.Projects.First().ProjectId, backtest.BacktestId)", span="682-682", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_352 [label="var listBacktests = _api.ListBacktests(project.Projects.First().ProjectId)", span="689-689", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_357 [label="var renameBacktest = _api.UpdateBacktest(project.Projects.First().ProjectId, backtest.BacktestId, backtestName)", span="696-696", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_359 [label="backtestRead = _api.ReadBacktest(project.Projects.First().ProjectId, backtest.BacktestId)", span="698-698", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_362 [label="var noteBacktest = _api.UpdateBacktest(project.Projects.First().ProjectId, backtest.BacktestId, note: newNote)", span="703-703", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_364 [label="backtestRead = _api.ReadBacktest(project.Projects.First().ProjectId, backtest.BacktestId)", span="705-705", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_366 [label="var deleteBacktest = _api.DeleteBacktest(project.Projects.First().ProjectId, backtest.BacktestId)", span="709-709", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_368 [label="var deleteProject = _api.DeleteProject(project.Projects.First().ProjectId)", span="713-713", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_321 [label="var projects = _api.ListProjects()", span="640-640", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_322 [label="Assert.IsTrue(projects.Success)", span="641-641", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_325 [label="Assert.IsTrue(readProject.Success)", span="646-646", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_338 [label="file.Code += ''[Jibberish at end of the file to cause a build error]''", span="669-669", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_329 [label="Assert.IsTrue(addProjectFile.Success)", span="652-652", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_331 [label="Assert.IsTrue(verifyRead.Success)", span="656-656", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_333 [label="Assert.IsTrue(compileCreate.Success)", span="660-660", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_334 [label="Assert.IsTrue(compileCreate.State == CompileState.InQueue)", span="661-661", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_336 [label="Assert.IsTrue(compileSuccess.Success)", span="665-665", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_337 [label="Assert.IsTrue(compileSuccess.State == CompileState.BuildSuccess)", span="666-666", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_342 [label="Assert.IsTrue(compileError.Success)", span="673-673", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_343 [label="Assert.IsTrue(compileError.State == CompileState.BuildError)", span="674-674", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_344 [label="var backtestName = DateTime.Now.ToString(''u'') + '' API Backtest''", span="677-677", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_350 [label="Assert.IsTrue(backtestRead.Name == backtestName)", span="685-685", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_355 [label="Assert.IsTrue(listBacktests.Backtests[0].Name == backtestName)", span="692-692", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_356 [label="backtestName += ''-Amendment''", span="695-695", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_346 [label="Assert.IsTrue(backtest.Success)", span="679-679", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_348 [label="Assert.IsTrue(backtestRead.Success)", span="683-683", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_349 [label="Assert.IsTrue(backtestRead.Progress == 1)", span="684-684", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_351 [label="Assert.IsTrue(backtestRead.Result.Statistics[''Total Trades''] == ''1'')", span="686-686", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_353 [label="Assert.IsTrue(listBacktests.Success)", span="690-690", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_354 [label="Assert.IsTrue(listBacktests.Backtests.Count >= 1)", span="691-691", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_360 [label="Assert.IsTrue(backtestRead.Name == backtestName)", span="699-699", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_358 [label="Assert.IsTrue(renameBacktest.Success)", span="697-697", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_361 [label="var newNote = DateTime.Now.ToString(''u'')", span="702-702", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_365 [label="Assert.IsTrue(backtestRead.Note == newNote)", span="706-706", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_363 [label="Assert.IsTrue(noteBacktest.Success)", span="704-704", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_367 [label="Assert.IsTrue(deleteBacktest.Success)", span="710-710", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_369 [label="Assert.IsTrue(deleteProject.Success)", span="714-714", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_370 [label="Exit QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", span="631-631", cluster="QuantConnect.Tests.API.RestApiTests.Perform_CreateCompileBactest_Tests(string, QuantConnect.Language, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_143 [label="Entry QuantConnect.API.InteractiveBrokersLiveAlgorithmSettings.InteractiveBrokersLiveAlgorithmSettings(string, string, string)", span="210-210", cluster="QuantConnect.API.InteractiveBrokersLiveAlgorithmSettings.InteractiveBrokersLiveAlgorithmSettings(string, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_144 [label="Entry QuantConnect.API.OandaLiveAlgorithmSettings.OandaLiveAlgorithmSettings(string, QuantConnect.BrokerageEnvironment, string)", span="232-232", cluster="QuantConnect.API.OandaLiveAlgorithmSettings.OandaLiveAlgorithmSettings(string, QuantConnect.BrokerageEnvironment, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_289 [label="Entry QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", span="584-584", cluster="QuantConnect.Api.Api.DownloadData(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_6 [label="Entry QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", span="50-50", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_7 [label="var name = ''Test Project '' + DateTime.Now", span="52-52", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_8 [label="var project = _api.CreateProject(name, Language.CSharp)", span="55-55", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_11 [label="Assert.IsTrue(project.Projects.First().Name == name)", span="58-58", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_9 [label="Assert.IsTrue(project.Success)", span="56-56", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_10 [label="Assert.IsTrue(project.Projects.First().ProjectId > 0)", span="57-57", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_12 [label="var deleteProject = _api.DeleteProject(project.Projects.First().ProjectId)", span="61-61", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_15 [label="Assert.IsFalse(projectList.Projects.Any(p => p.ProjectId == project.Projects.First().ProjectId))", span="66-66", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_13 [label="Assert.IsTrue(deleteProject.Success)", span="62-62", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_14 [label="var projectList = _api.ListProjects()", span="65-65", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_16 [label="Exit QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", span="50-50", cluster="QuantConnect.Tests.API.RestApiTests.Projects_CanBeCreatedAndDeleted_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_158 [label="Entry QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", span="534-534", cluster="QuantConnect.Api.Api.ReadLiveLogs(int, string, System.DateTime?, System.DateTime?)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_266 [label="Entry QuantConnect.Tests.API.RestApiTests.OandaDataLinks_CanBeRetrieved_Successfully()", span="538-538", cluster="QuantConnect.Tests.API.RestApiTests.OandaDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_267 [label="var minuteDataLink = _api.ReadDataLink(new Symbol(SecurityIdentifier.GenerateForex(''EURUSD'', Market.Oanda), ''EURUSD''),\r\n                Resolution.Minute, new DateTime(2013, 10, 07))", span="540-541", cluster="QuantConnect.Tests.API.RestApiTests.OandaDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_268 [label="var dailyDataLink = _api.ReadDataLink(new Symbol(SecurityIdentifier.GenerateForex(''EURUSD'', Market.Oanda), ''EURUSD''),\r\n                Resolution.Daily, new DateTime(2013, 10, 07))", span="542-543", cluster="QuantConnect.Tests.API.RestApiTests.OandaDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_269 [label="Assert.IsTrue(minuteDataLink.Success)", span="545-545", cluster="QuantConnect.Tests.API.RestApiTests.OandaDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_270 [label="Assert.IsTrue(dailyDataLink.Success)", span="546-546", cluster="QuantConnect.Tests.API.RestApiTests.OandaDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_271 [label="Exit QuantConnect.Tests.API.RestApiTests.OandaDataLinks_CanBeRetrieved_Successfully()", span="538-538", cluster="QuantConnect.Tests.API.RestApiTests.OandaDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_77 [label="Entry QuantConnect.Api.Api.ReadProjectFile(int, string)", span="221-221", cluster="QuantConnect.Api.Api.ReadProjectFile(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_27 [label="Entry QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_ValidCredentials_Successfully()", span="73-73", cluster="QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_ValidCredentials_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_28 [label="var connection = new ApiConnection(_testAccount, _testToken)", span="75-75", cluster="QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_ValidCredentials_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_29 [label="Assert.IsTrue(connection.Connected)", span="76-76", cluster="QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_ValidCredentials_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_30 [label="Exit QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_ValidCredentials_Successfully()", span="73-73", cluster="QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_ValidCredentials_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_256 [label="Entry QuantConnect.Tests.API.RestApiTests.FXCMDataLinks_CanBeRetrieved_Successfully()", span="523-523", cluster="QuantConnect.Tests.API.RestApiTests.FXCMDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_257 [label="var minuteDataLink = _api.ReadDataLink(new Symbol(SecurityIdentifier.GenerateForex(''EURUSD'', Market.FXCM), ''EURUSD''),\r\n                Resolution.Minute, new DateTime(2013, 10, 07))", span="525-526", cluster="QuantConnect.Tests.API.RestApiTests.FXCMDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_258 [label="var dailyDataLink = _api.ReadDataLink(new Symbol(SecurityIdentifier.GenerateForex(''EURUSD'', Market.FXCM), ''EURUSD''),\r\n                Resolution.Daily, new DateTime(2013, 10, 07))", span="527-528", cluster="QuantConnect.Tests.API.RestApiTests.FXCMDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_259 [label="Assert.IsTrue(minuteDataLink.Success)", span="530-530", cluster="QuantConnect.Tests.API.RestApiTests.FXCMDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_260 [label="Assert.IsTrue(dailyDataLink.Success)", span="531-531", cluster="QuantConnect.Tests.API.RestApiTests.FXCMDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_261 [label="Exit QuantConnect.Tests.API.RestApiTests.FXCMDataLinks_CanBeRetrieved_Successfully()", span="523-523", cluster="QuantConnect.Tests.API.RestApiTests.FXCMDataLinks_CanBeRetrieved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_74 [label="Entry QuantConnect.Api.Api.AddProjectFile(int, string, string)", span="138-138", cluster="QuantConnect.Api.Api.AddProjectFile(int, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_263 [label="Entry QuantConnect.SecurityIdentifier.GenerateForex(string, string)", span="383-383", cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_378 [label="Entry lambda expression", span="642-642", cluster="lambda expression", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_25 [label="p.ProjectId == project.Projects.First().ProjectId", span="66-66", cluster="lambda expression", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_24 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_26 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_379 [label="p.ProjectId == project.Projects.First().ProjectId", span="642-642", cluster="lambda expression", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_380 [label="Exit lambda expression", span="642-642", cluster="lambda expression", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_142 [label="Entry QuantConnect.API.FXCMLiveAlgorithmSettings.FXCMLiveAlgorithmSettings(string, string, QuantConnect.BrokerageEnvironment, string)", span="188-188", cluster="QuantConnect.API.FXCMLiveAlgorithmSettings.FXCMLiveAlgorithmSettings(string, string, QuantConnect.BrokerageEnvironment, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_23 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_272 [label="Entry QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", span="553-553", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_273 [label="var minutePath = Path.Combine(_dataFolder, ''forex/oanda/minute/eurusd/20131011_quote.zip'')", span="555-555", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_274 [label="var dailyPath  = Path.Combine(_dataFolder, ''forex/oanda/daily/eurusd.zip'')", span="556-556", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_277 [label="File.Exists(minutePath)", span="561-561", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_278 [label="File.Delete(minutePath)", span="562-562", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_284 [label="Assert.IsTrue(File.Exists(minutePath))", span="573-573", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_275 [label="File.Exists(dailyPath)", span="558-558", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_276 [label="File.Delete(dailyPath)", span="559-559", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_283 [label="Assert.IsTrue(File.Exists(dailyPath))", span="572-572", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_279 [label="var downloadedMinuteData = _api.DownloadData(new Symbol(SecurityIdentifier.GenerateForex(''EURUSD'', Market.Oanda), ''EURUSD''),\r\n                Resolution.Minute, new DateTime(2013, 10, 11))", span="564-565", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_280 [label="var downloadedDailyData = _api.DownloadData(new Symbol(SecurityIdentifier.GenerateForex(''EURUSD'', Market.Oanda), ''EURUSD''),\r\n                Resolution.Daily, new DateTime(2013, 10, 07))", span="566-567", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_281 [label="Assert.IsTrue(downloadedMinuteData)", span="569-569", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_282 [label="Assert.IsTrue(downloadedDailyData)", span="570-570", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_285 [label="Exit QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", span="553-553", cluster="QuantConnect.Tests.API.RestApiTests.BacktestingData_CanBeDownloadedAndSaved_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_71 [label="Entry QuantConnect.Api.ProjectFile.ProjectFile()", span="24-24", cluster="QuantConnect.Api.ProjectFile.ProjectFile()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_156 [label="Entry QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", span="443-443", cluster="QuantConnect.Api.Api.ListLiveAlgorithms(QuantConnect.AlgorithmStatus?, System.DateTime?, System.DateTime?)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_146 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_264 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_18 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_301 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_78 [label="Entry QuantConnect.Api.Api.ReadProjectFiles(int)", span="202-202", cluster="QuantConnect.Api.Api.ReadProjectFiles(int)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_75 [label="Entry QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", span="160-160", cluster="QuantConnect.Api.Api.UpdateProjectFileName(int, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_389 [label="Entry QuantConnect.Api.Compile.Compile()", span="24-24", cluster="QuantConnect.Api.Compile.Compile()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_371 [label="Entry QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", span="723-723", cluster="QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_381 [label="var compile = new Compile()", span="725-725", cluster="QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_384 [label="compile = _api.ReadCompile(projectId, compileId)", span="729-729", cluster="QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_382 [label="var finish = DateTime.Now.AddSeconds(60)", span="726-726", cluster="QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_387 [label="return compile;", span="733-733", cluster="QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_383 [label="DateTime.Now < finish", span="727-727", cluster="QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_385 [label="compile.State == CompileState.BuildSuccess", span="730-730", cluster="QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_386 [label="Thread.Sleep(1000)", span="731-731", cluster="QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_388 [label="Exit QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", span="723-723", cluster="QuantConnect.Tests.API.RestApiTests.WaitForCompilerResponse(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_265 [label="Entry QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", span="560-560", cluster="QuantConnect.Api.Api.ReadDataLink(QuantConnect.Symbol, QuantConnect.Resolution, System.DateTime)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_372 [label="Entry QuantConnect.Api.Api.CreateBacktest(int, string, string)", span="316-316", cluster="QuantConnect.Api.Api.CreateBacktest(int, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_186 [label="Entry QuantConnect.Api.Api.StopLiveAlgorithm(int)", span="515-515", cluster="QuantConnect.Api.Api.StopLiveAlgorithm(int)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_303 [label="Entry QuantConnect.Tests.API.RestApiTests.FSharpProject_CreatedCompiledAndBacktested_Successully()", span="606-606", cluster="QuantConnect.Tests.API.RestApiTests.FSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_304 [label="var language = Language.FSharp", span="608-608", cluster="QuantConnect.Tests.API.RestApiTests.FSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_305 [label="var code = File.ReadAllText(''../../../Algorithm.FSharp/BasicTemplateAlgorithm.fs'')", span="609-609", cluster="QuantConnect.Tests.API.RestApiTests.FSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_307 [label="var projectName = DateTime.UtcNow.ToString(''u'') + '' Test '' + _testAccount + '' Lang '' + language", span="611-611", cluster="QuantConnect.Tests.API.RestApiTests.FSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_308 [label="Perform_CreateCompileBactest_Tests(projectName, language, algorithmName, code)", span="613-613", cluster="QuantConnect.Tests.API.RestApiTests.FSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_306 [label="var algorithmName = ''main.fs''", span="610-610", cluster="QuantConnect.Tests.API.RestApiTests.FSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_309 [label="Exit QuantConnect.Tests.API.RestApiTests.FSharpProject_CreatedCompiledAndBacktested_Successully()", span="606-606", cluster="QuantConnect.Tests.API.RestApiTests.FSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_374 [label="Entry QuantConnect.Api.Api.ListBacktests(int)", span="375-375", cluster="QuantConnect.Api.Api.ListBacktests(int)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_5 [label="Entry QuantConnect.Api.Api.Initialize(int, string, string)", span="49-49", cluster="QuantConnect.Api.Api.Initialize(int, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_255 [label="Entry QuantConnect.Api.Api.ReadProject(int)", span="103-103", cluster="QuantConnect.Api.Api.ReadProject(int)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_375 [label="Entry QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", span="353-353", cluster="QuantConnect.Api.Api.UpdateBacktest(int, string, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_288 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_0 [label="Entry QuantConnect.Tests.API.RestApiTests.Setup()", span="40-40", cluster="QuantConnect.Tests.API.RestApiTests.Setup()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_1 [label="_api = new Api.Api()", span="42-42", cluster="QuantConnect.Tests.API.RestApiTests.Setup()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_2 [label="_api.Initialize(_testAccount, _testToken, _dataFolder)", span="43-43", cluster="QuantConnect.Tests.API.RestApiTests.Setup()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_3 [label="Exit QuantConnect.Tests.API.RestApiTests.Setup()", span="40-40", cluster="QuantConnect.Tests.API.RestApiTests.Setup()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_376 [label="Entry QuantConnect.Api.Api.ReadBacktest(int, string)", span="334-334", cluster="QuantConnect.Api.Api.ReadBacktest(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_287 [label="Entry System.IO.File.Exists(string)", span="0-0", cluster="System.IO.File.Exists(string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_159 [label="Entry QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", span="297-297", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_160 [label="var user     = Config.Get(''fxcm-user-name'')", span="299-299", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_161 [label="var password = Config.Get(''fxcm-password'')", span="300-300", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_170 [label="var settings = new FXCMLiveAlgorithmSettings(user,\r\n                                                         password,\r\n                                                         BrokerageEnvironment.Paper,\r\n                                                         account)", span="321-324", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_162 [label="var account  = Config.Get(''fxcm-account-id'')", span="301-301", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_163 [label="var file = new ProjectFile\r\n            {\r\n                Name = ''main.cs'',\r\n                Code = File.ReadAllText(''../../../Algorithm.CSharp/BasicTemplateForexAlgorithm.cs'')\r\n            }", span="302-306", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_164 [label="var project = _api.CreateProject(''Test project - '' + DateTime.Now, Language.CSharp)", span="309-309", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_166 [label="var addProjectFile = _api.AddProjectFile(project.Projects.First().ProjectId, file.Name, file.Code)", span="313-313", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_165 [label="Assert.IsTrue(project.Success)", span="310-310", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_168 [label="var compile = _api.CreateCompile(project.Projects.First().ProjectId)", span="317-317", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_172 [label="var createLiveAlgorithm = _api.CreateLiveAlgorithm(project.Projects.First().ProjectId, compile.CompileId, ''server512'', settings)", span="330-330", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_175 [label="var liquidateLive = _api.LiquidateLiveAlgorithm(project.Projects.First().ProjectId)", span="336-336", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_177 [label="var stopLive = _api.StopLiveAlgorithm(project.Projects.First().ProjectId)", span="340-340", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_179 [label="var deleteProject = _api.DeleteProject(project.Projects.First().ProjectId)", span="344-344", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_167 [label="Assert.IsTrue(addProjectFile.Success)", span="314-314", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_169 [label="Assert.IsTrue(compile.Success)", span="318-318", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_171 [label="Thread.Sleep(10000)", span="327-327", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_173 [label="Assert.IsTrue(createLiveAlgorithm.Success)", span="331-331", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_174 [label=stopLiveAlgos, span="333-333", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_176 [label="Assert.IsTrue(liquidateLive.Success)", span="337-337", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_178 [label="Assert.IsTrue(stopLive.Success)", span="341-341", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_180 [label="Assert.IsTrue(deleteProject.Success)", span="345-345", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_181 [label="Exit QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", span="297-297", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithFXCM_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_145 [label="Entry QuantConnect.API.TradierLiveAlgorithmSettings.TradierLiveAlgorithmSettings(string, string, string, string)", span="270-270", cluster="QuantConnect.API.TradierLiveAlgorithmSettings.TradierLiveAlgorithmSettings(string, string, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_182 [label="Entry QuantConnect.Api.Api.CreateCompile(int)", span="277-277", cluster="QuantConnect.Api.Api.CreateCompile(int)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_183 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_184 [label="Entry QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", span="414-414", cluster="QuantConnect.Api.Api.CreateLiveAlgorithm(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_22 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_32 [label="Entry QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_InvalidCredentials_Unsuccessfully()", span="83-83", cluster="QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_InvalidCredentials_Unsuccessfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_33 [label="var connection = new ApiConnection(_testAccount, '''')", span="85-85", cluster="QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_InvalidCredentials_Unsuccessfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_34 [label="Assert.IsFalse(connection.Connected)", span="86-86", cluster="QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_InvalidCredentials_Unsuccessfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_35 [label="Exit QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_InvalidCredentials_Unsuccessfully()", span="83-83", cluster="QuantConnect.Tests.API.RestApiTests.ApiWillAuthenticate_InvalidCredentials_Unsuccessfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_157 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_185 [label="Entry QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", span="499-499", cluster="QuantConnect.Api.Api.LiquidateLiveAlgorithm(int)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_230 [label="Entry QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", span="463-463", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_231 [label="var refreshToken    = Config.Get(''tradier-refresh-token'')", span="465-465", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_232 [label="var account         = Config.Get(''tradier-account-id'')", span="466-466", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_243 [label="var settings = new TradierLiveAlgorithmSettings(accessToken,\r\n                                                            dateIssued,\r\n                                                            refreshToken,\r\n                                                            account)", span="491-494", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_233 [label="var accessToken     = Config.Get(''tradier-access-token'')", span="467-467", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_234 [label="var dateIssued      = Config.Get(''tradier-issued-at'')", span="468-468", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_235 [label="var file = new ProjectFile\r\n            {\r\n                Name = ''main.cs'',\r\n                Code = File.ReadAllText(''../../../Algorithm.CSharp/BasicTemplateAlgorithm.cs'')\r\n            }", span="470-474", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_236 [label="var project = _api.CreateProject(''Test project - '' + DateTime.Now, Language.CSharp)", span="477-477", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_237 [label="var addProjectFile = _api.AddProjectFile(project.Projects.First().ProjectId, file.Name, file.Code)", span="480-480", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_239 [label="var readProject = _api.ReadProject(project.Projects.First().ProjectId)", span="483-483", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_241 [label="var compile = _api.CreateCompile(project.Projects.First().ProjectId)", span="487-487", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_245 [label="var createLiveAlgorithm = _api.CreateLiveAlgorithm(project.Projects.First().ProjectId, compile.CompileId, ''server512'', settings)", span="500-500", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_248 [label="var liquidateLive = _api.LiquidateLiveAlgorithm(project.Projects.First().ProjectId)", span="506-506", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_250 [label="var stopLive = _api.StopLiveAlgorithm(project.Projects.First().ProjectId)", span="510-510", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_252 [label="var deleteProject = _api.DeleteProject(project.Projects.First().ProjectId)", span="514-514", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_238 [label="Assert.IsTrue(addProjectFile.Success)", span="481-481", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_240 [label="Assert.IsTrue(readProject.Success)", span="484-484", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_242 [label="Assert.IsTrue(compile.Success)", span="488-488", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_244 [label="Thread.Sleep(10000)", span="497-497", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_246 [label="Assert.IsTrue(createLiveAlgorithm.Success)", span="501-501", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_247 [label=stopLiveAlgos, span="503-503", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_249 [label="Assert.IsTrue(liquidateLive.Success)", span="507-507", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_251 [label="Assert.IsTrue(stopLive.Success)", span="511-511", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_253 [label="Assert.IsTrue(deleteProject.Success)", span="515-515", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_254 [label="Exit QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", span="463-463", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithTradier_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_286 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_390 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_187 [label="Entry QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", span="353-353", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_188 [label="var user     = Config.Get(''ib-user-name'')", span="355-355", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_189 [label="var password = Config.Get(''ib-password'')", span="356-356", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_197 [label="var settings = new InteractiveBrokersLiveAlgorithmSettings(user,\r\n                                                                       password,\r\n                                                                       account)", span="378-380", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_190 [label="var account  = Config.Get(''ib-account'')", span="357-357", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_191 [label="var file = new ProjectFile\r\n            {\r\n                Name = ''main.cs'',\r\n                Code = File.ReadAllText(''../../../Algorithm.CSharp/BasicTemplateAlgorithm.cs'')\r\n            }", span="359-363", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_192 [label="var project = _api.CreateProject(''Test project - '' + DateTime.Now, Language.CSharp)", span="367-367", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_193 [label="var addProjectFile = _api.AddProjectFile(project.Projects.First().ProjectId, file.Name, file.Code)", span="370-370", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_195 [label="var compile = _api.CreateCompile(project.Projects.First().ProjectId)", span="374-374", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_199 [label="var createLiveAlgorithm = _api.CreateLiveAlgorithm(project.Projects.First().ProjectId, compile.CompileId, ''server512'', settings)", span="386-386", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_202 [label="var liquidateLive = _api.LiquidateLiveAlgorithm(project.Projects.First().ProjectId)", span="392-392", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_204 [label="var stopLive = _api.StopLiveAlgorithm(project.Projects.First().ProjectId)", span="396-396", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_206 [label="var deleteProject = _api.DeleteProject(project.Projects.First().ProjectId)", span="400-400", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_194 [label="Assert.IsTrue(addProjectFile.Success)", span="371-371", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_196 [label="Assert.IsTrue(compile.Success)", span="375-375", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_198 [label="Thread.Sleep(10000)", span="383-383", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_200 [label="Assert.IsTrue(createLiveAlgorithm.Success)", span="387-387", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_201 [label=stopLiveAlgos, span="389-389", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_203 [label="Assert.IsTrue(liquidateLive.Success)", span="393-393", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_205 [label="Assert.IsTrue(stopLive.Success)", span="397-397", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_207 [label="Assert.IsTrue(deleteProject.Success)", span="401-401", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_208 [label="Exit QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", span="353-353", cluster="QuantConnect.Tests.API.RestApiTests.LiveEquityAlgorithms_CanBeUsedWithInteractiveBrokers_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_401 [label="Entry QuantConnect.Api.Backtest.Backtest()", span="24-24", cluster="QuantConnect.Api.Backtest.Backtest()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_290 [label="Entry QuantConnect.Tests.API.RestApiTests.NonExistantData_WillBeDownloaded_Unsuccessfully()", span="580-580", cluster="QuantConnect.Tests.API.RestApiTests.NonExistantData_WillBeDownloaded_Unsuccessfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_291 [label="var nonExistentData = _api.DownloadData(new Symbol(SecurityIdentifier.GenerateForex(''EURUSD'', Market.Oanda), ''EURUSD''),\r\n               Resolution.Minute, new DateTime(1989, 10, 11))", span="582-583", cluster="QuantConnect.Tests.API.RestApiTests.NonExistantData_WillBeDownloaded_Unsuccessfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_292 [label="Assert.IsFalse(nonExistentData)", span="585-585", cluster="QuantConnect.Tests.API.RestApiTests.NonExistantData_WillBeDownloaded_Unsuccessfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_293 [label="Exit QuantConnect.Tests.API.RestApiTests.NonExistantData_WillBeDownloaded_Unsuccessfully()", span="580-580", cluster="QuantConnect.Tests.API.RestApiTests.NonExistantData_WillBeDownloaded_Unsuccessfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_294 [label="Entry QuantConnect.Tests.API.RestApiTests.CSharpProject_CreatedCompiledAndBacktested_Successully()", span="592-592", cluster="QuantConnect.Tests.API.RestApiTests.CSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_295 [label="var language = Language.CSharp", span="594-594", cluster="QuantConnect.Tests.API.RestApiTests.CSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_296 [label="var code = File.ReadAllText(''../../../Algorithm.CSharp/BasicTemplateAlgorithm.cs'')", span="595-595", cluster="QuantConnect.Tests.API.RestApiTests.CSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_298 [label="var projectName = DateTime.UtcNow.ToString(''u'') + '' Test '' + _testAccount + '' Lang '' + language", span="597-597", cluster="QuantConnect.Tests.API.RestApiTests.CSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_299 [label="Perform_CreateCompileBactest_Tests(projectName, language, algorithmName, code)", span="599-599", cluster="QuantConnect.Tests.API.RestApiTests.CSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_297 [label="var algorithmName = ''main.cs''", span="596-596", cluster="QuantConnect.Tests.API.RestApiTests.CSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_300 [label="Exit QuantConnect.Tests.API.RestApiTests.CSharpProject_CreatedCompiledAndBacktested_Successully()", span="592-592", cluster="QuantConnect.Tests.API.RestApiTests.CSharpProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_209 [label="Entry QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", span="409-409", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_210 [label="var token       = Config.Get(''oanda-access-token'')", span="411-411", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_211 [label="var account     = Config.Get(''oanda-account-id'')", span="412-412", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_218 [label="var settings = new OandaLiveAlgorithmSettings(token,\r\n                                                          BrokerageEnvironment.Paper,\r\n                                                          account)", span="432-434", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_212 [label="var file = new ProjectFile\r\n                {\r\n                    Name = ''main.cs'',\r\n                    Code = File.ReadAllText(''../../../Algorithm.CSharp/BasicTemplateForexAlgorithm.cs'')\r\n                }", span="414-418", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_213 [label="var project = _api.CreateProject(''Test project - '' + DateTime.Now, Language.CSharp)", span="421-421", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_214 [label="var addProjectFile = _api.AddProjectFile(project.Projects.First().ProjectId, file.Name, file.Code)", span="424-424", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_216 [label="var compile = _api.CreateCompile(project.Projects.First().ProjectId)", span="428-428", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_220 [label="var createLiveAlgorithm = _api.CreateLiveAlgorithm(project.Projects.First().ProjectId, compile.CompileId, ''server512'', settings)", span="440-440", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_223 [label="var liquidateLive = _api.LiquidateLiveAlgorithm(project.Projects.First().ProjectId)", span="446-446", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_225 [label="var stopLive = _api.StopLiveAlgorithm(project.Projects.First().ProjectId)", span="450-450", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_227 [label="var deleteProject = _api.DeleteProject(project.Projects.First().ProjectId)", span="454-454", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_215 [label="Assert.IsTrue(addProjectFile.Success)", span="425-425", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_217 [label="Assert.IsTrue(compile.Success)", span="429-429", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_219 [label="Thread.Sleep(10000)", span="437-437", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_221 [label="Assert.IsTrue(createLiveAlgorithm.Success)", span="441-441", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_222 [label=stopLiveAlgos, span="443-443", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_224 [label="Assert.IsTrue(liquidateLive.Success)", span="447-447", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_226 [label="Assert.IsTrue(stopLive.Success)", span="451-451", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_228 [label="Assert.IsTrue(deleteProject.Success)", span="455-455", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_229 [label="Exit QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", span="409-409", cluster="QuantConnect.Tests.API.RestApiTests.LiveForexAlgorithms_CanBeUsedWithOanda_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_391 [label="Entry QuantConnect.Api.Api.ReadCompile(int, string)", span="296-296", cluster="QuantConnect.Api.Api.ReadCompile(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_79 [label="Entry QuantConnect.Api.Api.DeleteProjectFile(int, string)", span="240-240", cluster="QuantConnect.Api.Api.DeleteProjectFile(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_21 [label="Entry QuantConnect.Api.Api.ListProjects()", span="120-120", cluster="QuantConnect.Api.Api.ListProjects()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_31 [label="Entry QuantConnect.Api.ApiConnection.ApiConnection(int, string)", span="47-47", cluster="QuantConnect.Api.ApiConnection.ApiConnection(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_36 [label="Entry QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", span="93-93", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_37 [label="var fakeFile = new ProjectFile\r\n            {\r\n                Name = ''Hello.cs'',\r\n                Code = HttpUtility.HtmlEncode(''Hello, world!'')\r\n            }", span="95-99", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_38 [label="var realFile = new ProjectFile\r\n            {\r\n                Name = ''main.cs'',\r\n                Code = HttpUtility.HtmlEncode(File.ReadAllText(''../../../Algorithm.CSharp/BasicTemplateAlgorithm.cs''))\r\n            }", span="101-105", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_43 [label="var randomAdd = _api.AddProjectFile(project.Projects.First().ProjectId, fakeFile.Name, fakeFile.Code)", span="119-119", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_45 [label="Assert.IsTrue(randomAdd.Files.First().Code == fakeFile.Code)", span="121-121", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_46 [label="Assert.IsTrue(randomAdd.Files.First().Name == fakeFile.Name)", span="122-122", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_39 [label="var secondRealFile = new ProjectFile()\r\n            {\r\n                Name = ''lol.cs'',\r\n                Code = HttpUtility.HtmlEncode(File.ReadAllText(''../../../Algorithm.CSharp/BubbleAlgorithm.cs''))\r\n            }", span="107-111", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_47 [label="var updatedName = _api.UpdateProjectFileName(project.Projects.First().ProjectId, randomAdd.Files.First().Name, realFile.Name)", span="124-124", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_49 [label="var updateContents = _api.UpdateProjectFileContent(project.Projects.First().ProjectId, realFile.Name, realFile.Code)", span="128-128", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_51 [label="var readFile = _api.ReadProjectFile(project.Projects.First().ProjectId, realFile.Name)", span="132-132", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_53 [label="Assert.IsTrue(readFile.Files.First().Code == realFile.Code)", span="134-134", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_54 [label="Assert.IsTrue(readFile.Files.First().Name == realFile.Name)", span="135-135", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_67 [label="Assert.IsTrue(readFilesAgain.Files.First().Name == realFile.Name)", span="156-156", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_40 [label="var project = _api.CreateProject(''Test project - '' + DateTime.Now, Language.CSharp)", span="114-114", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_55 [label="var secondFile = _api.AddProjectFile(project.Projects.First().ProjectId, secondRealFile.Name, secondRealFile.Code)", span="138-138", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_57 [label="Assert.IsTrue(secondFile.Files.First().Code == secondRealFile.Code)", span="140-140", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_58 [label="Assert.IsTrue(secondFile.Files.First().Name == secondRealFile.Name)", span="141-141", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_62 [label="var deleteFile = _api.DeleteProjectFile(project.Projects.First().ProjectId, secondRealFile.Name)", span="149-149", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_41 [label="Assert.IsTrue(project.Success)", span="115-115", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_42 [label="Assert.IsTrue(project.Projects.First().ProjectId > 0)", span="116-116", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_59 [label="var readFiles = _api.ReadProjectFiles(project.Projects.First().ProjectId)", span="144-144", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_64 [label="var readFilesAgain = _api.ReadProjectFiles(project.Projects.First().ProjectId)", span="153-153", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_68 [label="var deleteProject = _api.DeleteProject(project.Projects.First().ProjectId)", span="160-160", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_44 [label="Assert.IsTrue(randomAdd.Success)", span="120-120", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_48 [label="Assert.IsTrue(updatedName.Success)", span="125-125", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_50 [label="Assert.IsTrue(updateContents.Success)", span="129-129", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_52 [label="Assert.IsTrue(readFile.Success)", span="133-133", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_56 [label="Assert.IsTrue(secondFile.Success)", span="139-139", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_60 [label="Assert.IsTrue(readFiles.Success)", span="145-145", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_61 [label="Assert.IsTrue(readFiles.Files.Count == 2)", span="146-146", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_63 [label="Assert.IsTrue(deleteFile.Success)", span="150-150", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_65 [label="Assert.IsTrue(readFilesAgain.Success)", span="154-154", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_66 [label="Assert.IsTrue(readFilesAgain.Files.Count == 1)", span="155-155", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_69 [label="Assert.IsTrue(deleteProject.Success)", span="161-161", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_70 [label="Exit QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", span="93-93", cluster="QuantConnect.Tests.API.RestApiTests.CRUD_ProjectFiles_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_76 [label="Entry QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", span="182-182", cluster="QuantConnect.Api.Api.UpdateProjectFileContent(int, string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_138 [label="Entry System.Enum.GetValues(System.Type)", span="0-0", cluster="System.Enum.GetValues(System.Type)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_17 [label="Entry QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", span="81-81", cluster="QuantConnect.Api.Api.CreateProject(string, QuantConnect.Language)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_262 [label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="215-215", cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_310 [label="Entry QuantConnect.Tests.API.RestApiTests.PythonProject_CreatedCompiledAndBacktested_Successully()", span="620-620", cluster="QuantConnect.Tests.API.RestApiTests.PythonProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_311 [label="var language = Language.Python", span="622-622", cluster="QuantConnect.Tests.API.RestApiTests.PythonProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_312 [label="var code = File.ReadAllText(''../../../Algorithm.Python/BasicTemplateAlgorithm.py'')", span="623-623", cluster="QuantConnect.Tests.API.RestApiTests.PythonProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_314 [label="var projectName = DateTime.UtcNow.ToString(''u'') + '' Test '' + _testAccount + '' Lang '' + language", span="626-626", cluster="QuantConnect.Tests.API.RestApiTests.PythonProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_315 [label="Perform_CreateCompileBactest_Tests(projectName, language, algorithmName, code)", span="628-628", cluster="QuantConnect.Tests.API.RestApiTests.PythonProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_313 [label="var algorithmName = ''main.py''", span="624-624", cluster="QuantConnect.Tests.API.RestApiTests.PythonProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_316 [label="Exit QuantConnect.Tests.API.RestApiTests.PythonProject_CreatedCompiledAndBacktested_Successully()", span="620-620", cluster="QuantConnect.Tests.API.RestApiTests.PythonProject_CreatedCompiledAndBacktested_Successully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_20 [label="Entry QuantConnect.Api.Api.DeleteProject(int)", span="258-258", cluster="QuantConnect.Api.Api.DeleteProject(int)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_19 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_4 [label="Entry QuantConnect.Api.Api.Api()", span="38-38", cluster="QuantConnect.Api.Api.Api()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_72 [label="Entry Unk.HtmlEncode", span="", cluster="Unk.HtmlEncode", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_377 [label="Entry QuantConnect.Api.Api.DeleteBacktest(int, string)", span="391-391", cluster="QuantConnect.Api.Api.DeleteBacktest(int, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_139 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_147 [label="Entry QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", span="276-276", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_148 [label="var liveAlgorithms = _api.ListLiveAlgorithms(AlgorithmStatus.Running)", span="279-279", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_149 [label="Assert.IsTrue(liveAlgorithms.Success)", span="281-281", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_150 [label="Assert.IsTrue(liveAlgorithms.Algorithms.Any())", span="283-283", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_151 [label="var firstLiveAlgo = liveAlgorithms.Algorithms[0]", span="286-286", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_152 [label="var liveLogs = _api.ReadLiveLogs(firstLiveAlgo.ProjectId, firstLiveAlgo.DeployId)", span="287-287", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_153 [label="Assert.IsTrue(liveLogs.Success)", span="289-289", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_154 [label="Assert.IsTrue(liveLogs.Logs.Any())", span="290-290", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_155 [label="Exit QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", span="276-276", cluster="QuantConnect.Tests.API.RestApiTests.LiveAlgorithmsAndLiveLogs_CanBeRead_Successfully()", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_402 [label="QuantConnect.Tests.API.RestApiTests", span="", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_403 [label=project, span="", file="BasicTemplateOptionTradesAlgorithm.cs"];
m12_404 [label=project, span="", file="BasicTemplateOptionTradesAlgorithm.cs"];
m13_26 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="BenchmarkAlgorithm.cs"];
m13_0 [label="Entry QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", span="37-37", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", file="BenchmarkAlgorithm.cs"];
m13_1 [label="SetStartDate(2013, 09, 15)", span="39-39", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_2 [label="SetEndDate(2013, 10, 11)", span="40-40", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_3 [label="SetCash(100000)", span="41-41", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_4 [label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Tick)", span="43-43", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_5 [label="AddSecurity(SecurityType.Equity, ''AAPL'', Resolution.Second)", span="44-44", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_6 [label="AddSecurity(SecurityType.Equity, ''ADBE'', Resolution.Minute)", span="45-45", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_7 [label="AddSecurity(SecurityType.Equity, ''IBM'', Resolution.Tick)", span="46-46", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_8 [label="AddSecurity(SecurityType.Equity, ''JNJ'', Resolution.Second)", span="47-47", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_9 [label="AddSecurity(SecurityType.Equity, ''MSFT'', Resolution.Minute)", span="48-48", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_10 [label="AddSecurity(SecurityType.Forex, ''EURUSD'', Resolution.Tick)", span="49-49", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_11 [label="AddSecurity(SecurityType.Forex, ''EURGBP'', Resolution.Second)", span="50-50", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_12 [label="AddSecurity(SecurityType.Forex, ''GBPUSD'', Resolution.Minute)", span="51-51", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_13 [label="AddSecurity(SecurityType.Forex, ''USDJPY'', Resolution.Tick)", span="52-52", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_14 [label="AddSecurity(SecurityType.Forex, ''NZDUSD'', Resolution.Second)", span="53-53", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_15 [label="Exit QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", span="37-37", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.Initialize()", file="BenchmarkAlgorithm.cs"];
m13_20 [label="Entry QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="60-60", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BenchmarkAlgorithm.cs"];
m13_21 [label="!Portfolio.Invested", span="62-62", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_22 [label="SetHoldings(''SPY'', .75)", span="64-64", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_23 [label="Debug(''Purchased Stock'')", span="65-65", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=red, community=0, file="BenchmarkAlgorithm.cs"];
m13_24 [label="Exit QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="60-60", cluster="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BenchmarkAlgorithm.cs"];
m13_25 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="BenchmarkAlgorithm.cs"];
m13_17 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BenchmarkAlgorithm.cs"];
m13_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="BenchmarkAlgorithm.cs"];
m13_16 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BenchmarkAlgorithm.cs"];
m13_18 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BenchmarkAlgorithm.cs"];
m13_27 [label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm", span="", file="BenchmarkAlgorithm.cs"];
m14_2 [label="ProjectId = projectId", span="25-25", cluster="QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="BrokerageModelAlgorithm.cs"];
m14_3 [label="CompileId = compileId", span="26-26", cluster="QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="BrokerageModelAlgorithm.cs"];
m14_4 [label="ServerType = serverType", span="27-27", cluster="QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="BrokerageModelAlgorithm.cs", color=green, community=0];
m14_5 [label="Brokerage = settings", span="28-28", cluster="QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="BrokerageModelAlgorithm.cs", color=green, community=0];
m14_6 [label="Exit QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", span="22-22", cluster="QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="BrokerageModelAlgorithm.cs"];
m14_0 [label="Entry QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", span="22-22", cluster="QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="BrokerageModelAlgorithm.cs"];
m14_1 [label="VersionId = version", span="24-24", cluster="QuantConnect.API.LiveAlgorithmApiSettingsWrapper.LiveAlgorithmApiSettingsWrapper(int, string, string, QuantConnect.API.BaseLiveAlgorithmSettings, string)", file="BrokerageModelAlgorithm.cs", color=green, community=0];
m14_7 [label="Entry Unk.Initialize", span="", cluster="Unk.Initialize", file="BrokerageModelAlgorithm.cs"];
m14_8 [label="QuantConnect.VisualStudioPlugin.QuantConnectPackage", span="", file="BrokerageModelAlgorithm.cs"];
m14_54 [label="QuantConnect.API.LiveAlgorithmApiSettingsWrapper", span="", file="BrokerageModelAlgorithm.cs"];
m15_27 [label="Entry QuantConnect.Notifications.NotificationManager.Sms(string, string)", span="95-95", cluster="QuantConnect.Notifications.NotificationManager.Sms(string, string)", file="BubbleAlgorithm.cs"];
m15_13 [label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", span="53-53", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BubbleAlgorithm.cs"];
m15_14 [label=LiveMode, span="55-55", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_15 [label="SetRuntimeStatistic(''BTC'', data.Close.ToString(''C''))", span="58-58", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BubbleAlgorithm.cs"];
m15_16 [label="!Portfolio.HoldStock", span="61-61", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BubbleAlgorithm.cs"];
m15_17 [label="Order(''BTC'', 100)", span="63-63", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BubbleAlgorithm.cs"];
m15_18 [label="Notify.Email(''myemail@gmail.com'', ''Test'', ''Test Body'', ''test attachment'')", span="66-66", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BubbleAlgorithm.cs"];
m15_19 [label="Notify.Sms(''+11233456789'', Time.ToString(''u'') + ''>> Test message from live BTC server.'')", span="67-67", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BubbleAlgorithm.cs"];
m15_20 [label="Notify.Web(''http://api.quantconnect.com'', Time.ToString(''u'') + ''>> Test data packet posted from live BTC server.'')", span="68-68", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BubbleAlgorithm.cs"];
m15_21 [label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", span="53-53", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="BubbleAlgorithm.cs"];
m15_0 [label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BubbleAlgorithm.cs"];
m15_1 [label="SetStartDate(2013, 10, 7)", span="35-35", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BubbleAlgorithm.cs"];
m15_3 [label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="115-115", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_2 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="115-115", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="BubbleAlgorithm.cs"];
m15_4 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="121-121", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_5 [label="Exit QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", span="121-121", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.PurgeData()", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_6 [label="AddData<Bitcoin>(''BTC'', Resolution.Second, TimeZones.Utc)", span="46-46", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_7 [label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="BubbleAlgorithm.cs"];
m15_73 [label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="BubbleAlgorithm.cs"];
m15_72 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="BubbleAlgorithm.cs"];
m15_25 [label="Entry QuantConnect.Notifications.NotificationManager.Email(string, string, string, string)", span="76-76", cluster="QuantConnect.Notifications.NotificationManager.Email(string, string, string, string)", file="BubbleAlgorithm.cs"];
m15_23 [label="Entry Unk.SetRuntimeStatistic", span="", cluster="Unk.SetRuntimeStatistic", file="BubbleAlgorithm.cs"];
m15_22 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="BubbleAlgorithm.cs"];
m15_36 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156", cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="BubbleAlgorithm.cs"];
m15_26 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="BubbleAlgorithm.cs"];
m15_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="BubbleAlgorithm.cs"];
m15_28 [label="Entry QuantConnect.Notifications.NotificationManager.Web(string, object)", span="112-112", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="BubbleAlgorithm.cs"];
m15_71 [label="Entry Unk.>", span="", cluster="Unk.>", file="BubbleAlgorithm.cs"];
m15_39 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1604-1604", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="BubbleAlgorithm.cs"];
m15_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1582-1582", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="BubbleAlgorithm.cs"];
m15_49 [label="Entry QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="169-169", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_50 [label="var coin = new Bitcoin()", span="171-171", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_51 [label=isLiveMode, span="172-172", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_58 [label="coin.Time = DateTime.Parse(data[0], CultureInfo.InvariantCulture)", span="193-193", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_64 [label="coin.VolumeUSD = Convert.ToDecimal(data[6], CultureInfo.InvariantCulture)", span="199-199", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_66 [label="coin.Symbol = ''BTC''", span="201-201", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_67 [label="coin.Value = coin.Close", span="202-202", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_68 [label="return coin;", span="206-206", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_52 [label="coin = JsonConvert.DeserializeObject<Bitcoin>(line)", span="178-178", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_59 [label="coin.Open = Convert.ToDecimal(data[1], CultureInfo.InvariantCulture)", span="194-194", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_57 [label="string[] data = line.Split(',')", span="192-192", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_60 [label="coin.High = Convert.ToDecimal(data[2], CultureInfo.InvariantCulture)", span="195-195", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_61 [label="coin.Low = Convert.ToDecimal(data[3], CultureInfo.InvariantCulture)", span="196-196", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_54 [label="coin.Time = coin.EndTime - config.Increment", span="180-180", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_63 [label="coin.VolumeBTC = Convert.ToDecimal(data[5], CultureInfo.InvariantCulture)", span="198-198", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_65 [label="coin.WeightedPrice = Convert.ToDecimal(data[7], CultureInfo.InvariantCulture)", span="200-200", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_53 [label="coin.EndTime = DateTime.UtcNow", span="179-179", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_55 [label="coin.Value = coin.Close", span="181-181", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_56 [label="return coin;", span="184-184", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_62 [label="coin.Close = Convert.ToDecimal(data[4], CultureInfo.InvariantCulture)", span="197-197", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_69 [label="Exit QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="169-169", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="BubbleAlgorithm.cs"];
m15_24 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="BubbleAlgorithm.cs"];
m15_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="BubbleAlgorithm.cs"];
m15_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="BubbleAlgorithm.cs"];
m15_29 [label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="76-76", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BubbleAlgorithm.cs"];
m15_32 [label="Order(''IBM'', quantity)", span="81-81", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_31 [label="int quantity = (int)Math.Floor(Portfolio.MarginRemaining / data[''IBM''].Close)", span="80-80", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BubbleAlgorithm.cs"];
m15_33 [label="Debug(''Purchased IBM on '' + Time.ToShortDateString())", span="82-82", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_34 [label="Notify.Email(''myemail@gmail.com'', ''Test'', ''Test Body'', ''test attachment'')", span="83-83", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="BubbleAlgorithm.cs"];
m15_30 [label="!Portfolio[''IBM''].HoldStock && data.ContainsKey(''IBM'')", span="78-78", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BubbleAlgorithm.cs"];
m15_35 [label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="76-76", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="BubbleAlgorithm.cs"];
m15_38 [label="Entry System.DateTime.ToShortDateString()", span="0-0", cluster="System.DateTime.ToShortDateString()", file="BubbleAlgorithm.cs"];
m15_37 [label="Entry System.Math.Floor(decimal)", span="0-0", cluster="System.Math.Floor(decimal)", file="BubbleAlgorithm.cs"];
m15_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1257-1257", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="BubbleAlgorithm.cs"];
m15_70 [label="Entry Bitcoin.cstr", span="", cluster="Bitcoin.cstr", file="BubbleAlgorithm.cs"];
m15_74 [label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="BubbleAlgorithm.cs"];
m15_75 [label="QuantConnect.LiveTradingFeaturesAlgorithm", span="", file="BubbleAlgorithm.cs"];
m16_2 [label="Entry QuantConnect.Interfaces.ITimeInForceHandler.IsFillValid(QuantConnect.Orders.Order, QuantConnect.Orders.OrderEvent)", span="37-37", cluster="QuantConnect.Interfaces.ITimeInForceHandler.IsFillValid(QuantConnect.Orders.Order, QuantConnect.Orders.OrderEvent)", file="CallingRFromCSharp.cs"];
m16_3 [label="Exit QuantConnect.Interfaces.ITimeInForceHandler.IsFillValid(QuantConnect.Orders.Order, QuantConnect.Orders.OrderEvent)", span="37-37", cluster="QuantConnect.Interfaces.ITimeInForceHandler.IsFillValid(QuantConnect.Orders.Order, QuantConnect.Orders.OrderEvent)", file="CallingRFromCSharp.cs"];
m16_0 [label="Entry QuantConnect.Interfaces.ITimeInForceHandler.HasOrderExpired(QuantConnect.Orders.Order)", span="29-29", cluster="QuantConnect.Interfaces.ITimeInForceHandler.HasOrderExpired(QuantConnect.Orders.Order)", file="CallingRFromCSharp.cs"];
m16_1 [label="Exit QuantConnect.Interfaces.ITimeInForceHandler.HasOrderExpired(QuantConnect.Orders.Order)", span="29-29", cluster="QuantConnect.Interfaces.ITimeInForceHandler.HasOrderExpired(QuantConnect.Orders.Order)", file="CallingRFromCSharp.cs"];
m17_67 [label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="74-74", cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_47 [label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(string, out QuantConnect.Securities.Security)", span="214-214", cluster="QuantConnect.Securities.SecurityManager.TryGetValue(string, out QuantConnect.Securities.Security)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_53 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="235-235", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_54 [label="return Securities.GetInternalPortfolioCollection().GetEnumerator();", span="237-237", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_55 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", span="235-235", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.IEnumerable.GetEnumerator()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_92 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_40 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_13 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", span="90-90", cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_14 [label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager. To add a new asset add the required data during initialization.'');", span="90-90", cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_15 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", span="90-90", cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_12 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_66 [label="Entry QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", span="180-180", cluster="QuantConnect.Securities.CashBook.TryGetValue(string, out QuantConnect.Securities.Cash)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_93 [label="Entry System.DateTime.AddMilliseconds(double)", span="0-0", cluster="System.DateTime.AddMilliseconds(double)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_9 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.Add(string, QuantConnect.Securities.SecurityHolding)", span="82-82", cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(string, QuantConnect.Securities.SecurityHolding)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_10 [label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager. To add a new asset add the required data during initialization.'');", span="82-82", cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(string, QuantConnect.Securities.SecurityHolding)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_11 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.Add(string, QuantConnect.Securities.SecurityHolding)", span="82-82", cluster="QuantConnect.Securities.SecurityPortfolioManager.Add(string, QuantConnect.Securities.SecurityHolding)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_86 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="511-511", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_87 [label="var clone = time", span="513-513", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_90 [label="Transactions.TransactionRecord.Add(clone, transactionProfitLoss)", span="518-518", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_88 [label="Transactions.TransactionRecord.ContainsKey(clone)", span="514-514", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_89 [label="clone = clone.AddMilliseconds(1)", span="516-516", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_91 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", span="511-511", cluster="QuantConnect.Securities.SecurityPortfolioManager.AddTransactionRecord(System.DateTime, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_41 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", span="212-212", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_42 [label="Security security", span="214-214", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_43 [label="var success = Securities.TryGetValue(symbol, out security)", span="215-215", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_44 [label="holding = success ? security.Holdings : null", span="216-216", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_45 [label="return success;", span="217-217", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_46 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", span="212-212", cluster="QuantConnect.Securities.SecurityPortfolioManager.TryGetValue(string, out QuantConnect.Securities.SecurityHolding)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_51 [label="Entry QuantConnect.Securities.SecurityManager.GetInternalPortfolioCollection()", span="245-245", cluster="QuantConnect.Securities.SecurityManager.GetInternalPortfolioCollection()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_73 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", span="479-479", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_74 [label="MarginRemaining > 0", span="482-482", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_75 [label="return new List<Order>();", span="484-484", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_76 [label="var marginCallOrders = new List<Order>()", span="488-488", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_77 [label="Securities.Values", span="489-489", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_80 [label="marginCallOrders.Add(marginCallOrder)", span="494-494", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_81 [label="return marginCallOrders;", span="498-498", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_78 [label="var marginCallOrder = security.MarginModel.GenerateMarginCallOrder(security, TotalPortfolioValue, TotalMarginUsed)", span="491-491", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_79 [label="marginCallOrder != null && marginCallOrder.Quantity != 0", span="492-492", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_82 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", span="479-479", cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_59 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="445-445", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_60 [label="Cash item", span="447-447", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_61 [label="CashBook.TryGetValue(symbol, out item)", span="448-448", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_62 [label="item.Quantity = cash", span="450-450", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_63 [label="item.ConversionRate = conversionRate", span="451-451", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_64 [label="CashBook.Add(symbol, cash, conversionRate)", span="455-455", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_65 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="445-445", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_8 [label="Entry QuantConnect.Securities.CashBook.CashBook()", span="49-49", cluster="QuantConnect.Securities.CashBook.CashBook()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_94 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_7 [label="Entry QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", span="24-24", cluster="QuantConnect.Securities.MarginCallModel.MarginCallModel(QuantConnect.Securities.SecurityPortfolioManager)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_32 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", span="166-166", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_33 [label="array = new KeyValuePair<string, SecurityHolding>[Securities.Count]", span="168-168", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_36 [label="i >= index", span="172-172", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_34 [label="var i = 0", span="169-169", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_37 [label="array[i] = new KeyValuePair<string, SecurityHolding>(asset.Key, asset.Value.Holdings)", span="174-174", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_35 [label=Securities, span="170-170", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_38 [label="i++", span="176-176", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_39 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", span="166-166", cluster="QuantConnect.Securities.SecurityPortfolioManager.CopyTo(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[], int)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_29 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", span="131-131", cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_30 [label="return Securities.ContainsKey(pair.Key);", span="133-133", cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_31 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", span="131-131", cluster="QuantConnect.Securities.SecurityPortfolioManager.Contains(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_19 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", span="105-105", cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_20 [label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager and objects cannot be removed.'');", span="105-105", cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_21 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", span="105-105", cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_25 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="120-120", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_26 [label="return Securities.ContainsKey(symbol);", span="122-122", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_27 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="120-120", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_68 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="467-467", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_69 [label="var security = Securities[fill.Symbol]", span="469-469", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_70 [label="security.PortfolioModel.ProcessFill(this, security, fill)", span="470-470", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_71 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="467-467", cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_0 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="60-60", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_1 [label="Securities = securityManager", span="62-62", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_2 [label="Transactions = transactions", span="63-63", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_3 [label="MarginCallModel = new MarginCallModel(this)", span="64-64", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_4 [label="CashBook = new CashBook()", span="66-66", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_5 [label="_baseCurrencyCash = CashBook[CashBook.AccountCurrency]", span="67-67", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_6 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="60-60", cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_72 [label="Entry QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", span="29-29", cluster="QuantConnect.Securities.ISecurityPortfolioModel.ProcessFill(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Securities.Security, QuantConnect.Orders.OrderEvent)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_52 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_16 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.Clear()", span="97-97", cluster="QuantConnect.Securities.SecurityPortfolioManager.Clear()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_17 [label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager and cannot be cleared.'');", span="97-97", cluster="QuantConnect.Securities.SecurityPortfolioManager.Clear()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_18 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.Clear()", span="97-97", cluster="QuantConnect.Securities.SecurityPortfolioManager.Clear()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_48 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="225-225", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_49 [label="return Securities.GetInternalPortfolioCollection().GetEnumerator();", span="227-227", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_50 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", span="225-225", cluster="QuantConnect.Securities.SecurityPortfolioManager.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>>.GetEnumerator()", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_84 [label="Entry QuantConnect.Securities.ISecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", span="73-73", cluster="QuantConnect.Securities.ISecurityMarginModel.GenerateMarginCallOrder(QuantConnect.Securities.Security, decimal, decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_56 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="434-434", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_57 [label="_baseCurrencyCash.Quantity = cash", span="436-436", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_58 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="434-434", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_85 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_22 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.Remove(string)", span="113-113", cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(string)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_23 [label="throw new NotImplementedException(''Portfolio object is an adaptor for Security Manager and objects cannot be removed.'');", span="113-113", cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(string)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_24 [label="Exit QuantConnect.Securities.SecurityPortfolioManager.Remove(string)", span="113-113", cluster="QuantConnect.Securities.SecurityPortfolioManager.Remove(string)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_28 [label="Entry QuantConnect.Securities.SecurityManager.ContainsKey(string)", span="137-137", cluster="QuantConnect.Securities.SecurityManager.ContainsKey(string)", file="CoarseFineFundamentalComboAlgorithm.cs"];
m17_95 [label="QuantConnect.Securities.SecurityPortfolioManager", span="", file="CoarseFineFundamentalComboAlgorithm.cs"];
m18_6 [label="Exit QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", span="35-35", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.Initialize()", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", span="262-262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddUniverse(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>, System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>, System.Collections.Generic.IEnumerable<QuantConnect.Symbol>>)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_11 [label="Entry QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", span="50-50", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_12 [label="Time.Date < new DateTime(2014, 4, 5)", span="52-52", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_24 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_17 [label="Entry QuantConnect.Tests.Indicators.AverageTrueRangeTests.TrueRangePropertyIsReadyAfterOneSample()", span="53-53", cluster="QuantConnect.Tests.Indicators.AverageTrueRangeTests.TrueRangePropertyIsReadyAfterOneSample()", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_18 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_19 [label="Entry QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", span="71-71", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_20 [label="var sortedByPeRatio = fine.OrderByDescending(x => x.ValuationRatios.PERatio)", span="74-74", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_21 [label="var topFine = sortedByPeRatio.Take(NumberOfSymbolsFine)", span="77-77", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_22 [label="return topFine.Select(x => x.Symbol);", span="80-80", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.FineSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.Fundamental.FineFundamental>)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_23 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_60 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_27 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_30 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_28 [label="x.ValuationRatios.PERatio", span="74-74", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_29 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_31 [label="x.Symbol", span="80-80", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_32 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_57 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_58 [label="x.Symbol.Value", span="116-116", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_59 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_61 [label="x.Symbol.Value", span="120-120", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_62 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_47 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", span="876-876", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, decimal, bool, string)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_15 [label="Exit QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", span="50-50", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.CoarseSelectionFunction(System.Collections.Generic.IEnumerable<QuantConnect.Data.UniverseSelection.CoarseFundamental>)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_25 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_16 [label="Entry QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", span="200-200", cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_13 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="78-78", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_14 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="81-81", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_46 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_48 [label="Entry QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_49 [label="_changes = changes", span="112-112", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_50 [label="changes.AddedSecurities.Count > 0", span="114-114", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_51 [label="Debug(''Securities added: '' + string.Join('','', changes.AddedSecurities.Select(x => x.Symbol.Value)))", span="116-116", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_52 [label="changes.RemovedSecurities.Count > 0", span="118-118", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_53 [label="Debug(''Securities removed: '' + string.Join('','', changes.RemovedSecurities.Select(x => x.Symbol.Value)))", span="120-120", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_54 [label="Exit QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_33 [label="Entry QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="84-84", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_34 [label="_changes == SecurityChanges.None", span="87-87", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_35 [label="return;", span="87-87", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_36 [label="_changes.RemovedSecurities", span="90-90", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_37 [label="security.Invested", span="92-92", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_40 [label="_changes.AddedSecurities", span="100-100", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_38 [label="Liquidate(security.Symbol)", span="94-94", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_39 [label="Debug(''Liquidated Stock: '' + security.Symbol.Value)", span="95-95", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_41 [label="SetHoldings(security.Symbol, 0.5m)", span="102-102", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_43 [label="_changes = SecurityChanges.None", span="106-106", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_42 [label="Debug(''Purchased Stock: '' + security.Symbol.Value)", span="103-103", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_44 [label="Exit QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="84-84", cluster="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_0 [label="Entry QuantConnect.Tests.Indicators.AverageTrueRangeTests.ComparesAgainstExternalData()", span="26-26", cluster="QuantConnect.Tests.Indicators.AverageTrueRangeTests.ComparesAgainstExternalData()", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_1 [label="var atr = new AverageTrueRange(14, MovingAverageType.Simple)", span="28-28", cluster="QuantConnect.Tests.Indicators.AverageTrueRangeTests.ComparesAgainstExternalData()", file="CoarseFineFundamentalRegressionAlgorithm.cs", color=green, community=0];
m18_2 [label="TestHelper.TestIndicator(atr, ''spy_atr.txt'', ''Average True Range 14'')", span="29-29", cluster="QuantConnect.Tests.Indicators.AverageTrueRangeTests.ComparesAgainstExternalData()", file="CoarseFineFundamentalRegressionAlgorithm.cs", color=green, community=0];
m18_3 [label="Exit QuantConnect.Tests.Indicators.AverageTrueRangeTests.ComparesAgainstExternalData()", span="26-26", cluster="QuantConnect.Tests.Indicators.AverageTrueRangeTests.ComparesAgainstExternalData()", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_4 [label="Entry QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(int, QuantConnect.Indicators.MovingAverageType)", span="78-78", cluster="QuantConnect.Indicators.AverageTrueRange.AverageTrueRange(int, QuantConnect.Indicators.MovingAverageType)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_5 [label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, double)", span="126-126", cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, double)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_56 [label="Entry Unk.Debug", span="", cluster="Unk.Debug", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_55 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_45 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_26 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m18_63 [label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm", span="", file="CoarseFineFundamentalRegressionAlgorithm.cs"];
m19_124 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_177 [label="Entry QuantConnect.Lean.Engine.DataFeeds.LiveOptionChainProvider.LiveOptionChainProvider()", span="27-27", cluster="QuantConnect.Lean.Engine.DataFeeds.LiveOptionChainProvider.LiveOptionChainProvider()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_35 [label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="60-60", cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_138 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="494-494", cluster="QuantConnect.Interfaces.IAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_171 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="380-380", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_194 [label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="382-382", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_195 [label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="384-384", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_196 [label="dataFeedsConfigString != string.Empty", span="385-385", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_197 [label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="387-387", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_198 [label="return dataFeeds;", span="390-390", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_199 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", span="380-380", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.GetConfiguredDataFeeds()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_136 [label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_139 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="484-484", cluster="QuantConnect.Interfaces.IAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_141 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", span="392-392", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, decimal)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_173 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="529-529", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_144 [label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="308-308", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_133 [label="Entry Lazy<Resolution>.cstr", span="", cluster="Lazy<Resolution>.cstr", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_118 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_190 [label="Entry Unk.Min", span="", cluster="Unk.Min", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_191 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_21 [label="names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name''))", span="91-91", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_20 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_22 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_38 [label="brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="114-114", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_37 [label="Entry lambda expression", span="114-114", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_39 [label="Exit lambda expression", span="114-114", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_152 [label="algorithm.SetBrokerageModel(_factory.BrokerageModel)", span="174-174", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_153 [label="algorithm.Portfolio.MarginCallModel = MarginCallModel.Null", span="177-177", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_154 [label="algorithm.SetParameters(job.Parameters)", span="180-180", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_155 [label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="181-181", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_156 [label="algorithm.SetLiveMode(true)", span="184-184", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_157 [label="algorithm.SetDateTime(DateTime.UtcNow)", span="187-187", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_158 [label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="190-190", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_159 [label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new LiveOptionChainProvider()))", span="193-193", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_160 [label="brokerage is InteractiveBrokersBrokerage &&\r\n                            liveJob.DataQueueHandler.EndsWith(''InteractiveBrokersBrokerage'')", span="198-199", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_161 [label="algorithm.Settings.DataSubscriptionLimit = 100", span="201-201", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_162 [label="algorithm.Initialize()", span="205-205", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_164 [label="algorithm.Portfolio.CashBook", span="209-209", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_186 [label="algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min()", span="297-297", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_163 [label="liveJob.Brokerage != ''PaperBrokerage''", span="206-206", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_147 [label="args.Type == BrokerageMessageType.Error", span="154-154", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_148 [label="AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message))", span="156-156", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_151 [label="Entry lambda expression", span="169-219", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_183 [label=order, span="281-281", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_182 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_146 [label="Entry lambda expression", span="152-158", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_149 [label="Exit lambda expression", span="152-158", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_166 [label=Exception, span="215-215", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_168 [label="Exit lambda expression", span="169-219", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_165 [label="kvp.Value.SetAmount(0)", span="211-211", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_167 [label="AddInitializationError(err.ToString())", span="217-217", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_184 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_185 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_187 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_192 [label="x.Value.Resolution", span="297-297", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_193 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_131 [label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="71-71", cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_135 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_18 [label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349", cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_132 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_41 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="133-133", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_42 [label="var liveJob = job as LiveNodePacket", span="136-136", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_51 [label="resultHandler.SendStatusUpdate(AlgorithmStatus.Initializing, ''Initializing algorithm...'')", span="164-164", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_52 [label="var controls = job.Controls", span="167-167", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_54 [label="var initializeComplete = isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(300), () =>\r\n                {\r\n                    try\r\n                    {\r\n                        //Set the default brokerage model before initialize\r\n                        algorithm.SetBrokerageModel(_factory.BrokerageModel);\r\n\r\n                        //Margin calls are disabled by default in live mode\r\n                        algorithm.Portfolio.MarginCallModel = MarginCallModel.Null;\r\n\r\n                        //Set our parameters\r\n                        algorithm.SetParameters(job.Parameters);\r\n                        algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds());\r\n\r\n                        //Algorithm is live, not backtesting:\r\n                        algorithm.SetLiveMode(true);\r\n\r\n                        //Initialize the algorithm's starting date\r\n                        algorithm.SetDateTime(DateTime.UtcNow);\r\n\r\n                        //Set the source impl for the event scheduling\r\n                        algorithm.Schedule.SetEventSchedule(realTimeHandler);\r\n\r\n                        // set the option chain provider\r\n                        algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new LiveOptionChainProvider()));\r\n\r\n                        // If we're going to receive market data from IB, \r\n                        // set the default subscription limit to 100,\r\n                        // algorithms can override this setting in the Initialize method\r\n                        if (brokerage is InteractiveBrokersBrokerage &&\r\n                            liveJob.DataQueueHandler.EndsWith(''InteractiveBrokersBrokerage''))\r\n                        {\r\n                            algorithm.Settings.DataSubscriptionLimit = 100;\r\n                        }\r\n\r\n                        //Initialise the algorithm, get the required data:\r\n                        algorithm.Initialize();\r\n                        if (liveJob.Brokerage != ''PaperBrokerage'')\r\n                        {\r\n                            //Zero the CashBook - we'll populate directly from brokerage\r\n                            foreach (var kvp in algorithm.Portfolio.CashBook)\r\n                            {\r\n                                kvp.Value.SetAmount(0);\r\n                            }\r\n                        }\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        AddInitializationError(err.ToString());\r\n                    }\r\n                }, controls.RamAllocation)", span="169-219", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_58 [label="resultHandler.SendStatusUpdate(AlgorithmStatus.LoggingIn, ''Logging into brokerage...'')", span="228-228", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_59 [label="brokerage.Message += brokerageOnMessage", span="230-230", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_61 [label="brokerage.Connect()", span="236-236", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_66 [label="!brokerage.IsConnected", span="246-246", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_70 [label="var cashBalance = brokerage.GetCashBalance()", span="257-257", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_73 [label="algorithm.Portfolio.SetCash(cash.Symbol, cash.Amount, cash.ConversionRate)", span="261-261", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_79 [label="var openOrders = brokerage.GetOpenOrders()", span="275-275", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_82 [label="order.Id = algorithm.Transactions.GetIncrementOrderId()", span="280-280", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_83 [label="transactionHandler.Orders.AddOrUpdate(order.Id, order, (i, o) => order)", span="281-281", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_89 [label="var holdings = brokerage.GetAccountHoldings()", span="295-295", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_91 [label="var minResolution = new Lazy<Resolution>(() => algorithm.Securities.Select(x => x.Value.Resolution).DefaultIfEmpty(Resolution.Second).Min())", span="297-297", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_97 [label="!algorithm.Portfolio.ContainsKey(holding.Symbol)", span="313-313", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_100 [label="algorithm.AddOptionContract(holding.Symbol, minResolution.Value, true, 1.0m)", span="320-320", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_102 [label="algorithm.AddFutureContract(holding.Symbol, minResolution.Value, true, 1.0m)", span="325-325", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_103 [label="algorithm.AddSecurity(holding.Type, holding.Symbol.Value, minResolution.Value, null, true, 1.0m, false)", span="330-330", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_104 [label="algorithm.Portfolio[holding.Symbol].SetHoldings(holding.AveragePrice, holding.Quantity)", span="334-334", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_105 [label="algorithm.Securities[holding.Symbol].SetMarketPrice(new TradeBar\r\n                        {\r\n                            Time = DateTime.Now,\r\n                            Open = holding.MarketPrice,\r\n                            High = holding.MarketPrice,\r\n                            Low = holding.MarketPrice,\r\n                            Close = holding.MarketPrice,\r\n                            Volume = 0,\r\n                            Symbol = holding.Symbol,\r\n                            DataType = MarketDataType.TradeBar\r\n                        })", span="335-345", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_110 [label="algorithm.PostInitialize()", span="355-355", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_111 [label="StartingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="358-358", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_43 [label="liveJob == null", span="137-137", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_46 [label="string.IsNullOrWhiteSpace(liveJob.Brokerage)", span="144-144", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_44 [label="AddInitializationError(''BrokerageSetupHandler requires a LiveNodePacket'')", span="139-139", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_45 [label="return false;", span="140-140", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_47 [label="AddInitializationError(''A brokerage must be specified'')", span="146-146", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_49 [label="EventHandler<BrokerageMessageEvent> brokerageOnMessage = (sender, args) =>\r\n            {\r\n                if (args.Type == BrokerageMessageType.Error)\r\n                {\r\n                    AddInitializationError(string.Format(''Brokerage Error Code: {0} - {1}'', args.Code, args.Message));\r\n                }\r\n            }", span="152-158", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_48 [label="return false;", span="147-147", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_50 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Initializing algorithm...'')", span="162-162", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_53 [label="var isolator = new Isolator()", span="168-168", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_55 [label="!initializeComplete", span="221-221", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_56 [label="AddInitializationError(''Initialization timed out.'')", span="223-223", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_57 [label="return false;", span="224-224", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_60 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Connecting to brokerage...'')", span="232-232", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_62 [label=Exception, span="238-238", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_63 [label="Log.Error(err)", span="240-240", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_64 [label="AddInitializationError(string.Format(''Error connecting to brokerage: {0}. '' +\r\n                        ''This may be caused by incorrect login credentials or an unsupported account type.'', err.Message))", span="241-242", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_65 [label="return false;", span="243-243", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_67 [label="AddInitializationError(''Unable to connect to brokerage.'')", span="249-249", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_69 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching cash balance from brokerage...'')", span="253-253", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_68 [label="return false;", span="250-250", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_71 [label=cashBalance, span="258-258", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_72 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Setting '' + cash.Symbol + '' cash to '' + cash.Amount)", span="260-260", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_74 [label=Exception, span="264-264", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_78 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching open orders from brokerage...'')", span="271-271", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_75 [label="Log.Error(err)", span="266-266", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_76 [label="AddInitializationError(''Error getting cash balance from brokerage: '' + err.Message)", span="267-267", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_77 [label="return false;", span="268-268", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_80 [label=openOrders, span="276-276", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_81 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Has open order: '' + order.Symbol.Value + '' - '' + order.Quantity)", span="279-279", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_84 [label=Exception, span="284-284", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_88 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Fetching holdings from brokerage...'')", span="291-291", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_85 [label="Log.Error(err)", span="286-286", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_86 [label="AddInitializationError(''Error getting open orders from brokerage: '' + err.Message)", span="287-287", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_87 [label="return false;", span="288-288", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_90 [label="var supportedSecurityTypes = new HashSet<SecurityType> { SecurityType.Equity, SecurityType.Forex, SecurityType.Cfd, SecurityType.Option, SecurityType.Future }", span="296-296", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_92 [label=holdings, span="298-298", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_94 [label="!supportedSecurityTypes.Contains(holding.Type)", span="303-303", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_96 [label="AddInitializationError(''Found unsupported security type in existing brokerage holdings: '' + holding.Type + ''. '' +\r\n                                ''QuantConnect currently supports the following security types: '' + string.Join('','', supportedSecurityTypes))", span="306-307", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_93 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Has existing holding: '' + holding)", span="300-300", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_106 [label=Exception, span="348-348", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_95 [label="Log.Error(''BrokerageSetupHandler.Setup(): Unsupported security type: '' + holding.Type + ''-'' + holding.Symbol.Value)", span="305-305", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_98 [label="Log.Trace(''BrokerageSetupHandler.Setup(): Adding unrequested security: '' + holding.Symbol.Value)", span="315-315", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_99 [label="holding.Type == SecurityType.Option", span="317-317", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_101 [label="holding.Type == SecurityType.Future", span="322-322", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_107 [label="Log.Error(err)", span="350-350", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_108 [label="AddInitializationError(''Error getting account holdings from brokerage: '' + err.Message)", span="351-351", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_109 [label="return false;", span="352-352", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_112 [label="StartingDate = DateTime.Now", span="359-359", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_113 [label=Exception, span="361-361", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_115 [label="return Errors.Count == 0;", span="373-373", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_114 [label="AddInitializationError(err.ToString())", span="363-363", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_116 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="133-133", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_143 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_189 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_127 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483", cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_121 [label="Entry QuantConnect.Isolator.Isolator()", span="55-55", cluster="QuantConnect.Isolator.Isolator()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_129 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="365-365", cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_140 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="474-474", cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_19 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_172 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="579-579", cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_170 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="322-322", cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_205 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="407-407", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_206 [label="_factory != null", span="409-409", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_207 [label="_factory.Dispose()", span="411-411", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_208 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", span="407-407", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Dispose()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_209 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_122 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_0 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="72-72", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_1 [label="Errors = new List<string>()", span="74-74", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_2 [label="MaximumRuntime = TimeSpan.FromDays(10*365)", span="75-75", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_3 [label="MaxOrders = int.MaxValue", span="76-76", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_4 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="72-72", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_201 [label="Entry Unk.>", span="", cluster="Unk.>", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_34 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_134 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_120 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_179 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_181 [label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="114-114", cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_128 [label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="65-65", cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_137 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", span="129-129", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(QuantConnect.Symbol)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_6 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_125 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_169 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="330-330", cluster="QuantConnect.Interfaces.IAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_174 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="439-439", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_117 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="398-398", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_202 [label="Errors.Add(''Failed to initialize algorithm: '' + message)", span="400-400", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_203 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="398-398", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_25 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="105-105", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_26 [label="var liveJob = algorithmNodePacket as LiveNodePacket", span="107-107", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_31 [label="var brokerage = _factory.CreateBrokerage(liveJob, uninitializedAlgorithm)", span="118-118", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_27 [label="liveJob == null", span="108-108", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_29 [label="_factory = Composer.Instance.Single<IBrokerageFactory>(brokerageFactory => brokerageFactory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="114-114", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_28 [label="throw new ArgumentException(''BrokerageSetupHandler.CreateBrokerage requires a live node packet'');", span="110-110", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_30 [label="factory = _factory", span="115-115", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_32 [label="return brokerage;", span="120-120", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_33 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="105-105", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_145 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_123 [label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="103-103", cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_36 [label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="55-55", cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_200 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_176 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_7 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_8 [label="string error", span="87-87", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_10 [label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromSeconds(15), names => names.SingleOrAlgorithmTypeName(Config.Get(''algorithm-type-name'')))", span="91-91", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_11 [label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="92-92", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_9 [label="IAlgorithm algorithm", span="88-88", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_12 [label="!complete", span="93-93", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_13 [label="throw new Exception(error + '' Try re-building algorithm and remove duplicate QCAlgorithm base classes.'');", span="93-93", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_14 [label="return algorithm;", span="95-95", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_15 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="85-85", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_40 [label="Entry System.Type.MatchesTypeName(string)", span="613-613", cluster="System.Type.MatchesTypeName(string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_17 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_204 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_178 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="585-585", cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_130 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_16 [label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82", cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_150 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_175 [label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65", cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_24 [label="Entry System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", span="827-827", cluster="System.Collections.Generic.List<string>.SingleOrAlgorithmTypeName(string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_119 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_142 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_188 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_23 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_180 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="302-302", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_126 [label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="77-77", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_210 [label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", span="", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_211 [label=liveJob, span="", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_212 [label="QuantConnect.Interfaces.IAlgorithm", span="", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_213 [label="QuantConnect.Packets.AlgorithmNodePacket", span="", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_214 [label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", span="", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_215 [label="QuantConnect.Interfaces.IBrokerage", span="", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_216 [label=liveJob, span="", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m19_217 [label=order, span="", file="CoarseUniverseTop5DollarVolumeAlgorithm.cs"];
m20_45 [label="Entry lambda expression", span="61-66", cluster="lambda expression", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_32 [label="l + r", span="29-29", cluster="lambda expression", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_31 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_33 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_46 [label="Assert.AreEqual(left, l)", span="63-63", cluster="lambda expression", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_47 [label="Assert.AreEqual(right, r)", span="64-64", cluster="lambda expression", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_48 [label="return l + r;", span="65-65", cluster="lambda expression", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_49 [label="Exit lambda expression", span="61-66", cluster="lambda expression", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_8 [label="Assert.IsFalse(composite.Right.IsReady)", span="35-35", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_29 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_7 [label="Assert.IsFalse(composite.Left.IsReady)", span="34-34", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_10 [label="right.Update(DateTime.Today.AddSeconds(1), 2m)", span="38-38", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_11 [label="Assert.IsFalse(composite.IsReady)", span="39-39", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_27 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_44 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_28 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="33-33", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_26 [label="Entry QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", span="89-89", cluster="QuantConnect.Indicators.CompositeIndicator<T>.CompositeIndicator(QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.IndicatorBase<T>, QuantConnect.Indicators.CompositeIndicator<T>.IndicatorComposer)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_25 [label="Entry QuantConnect.Indicators.Delay.Delay(int)", span="26-26", cluster="QuantConnect.Indicators.Delay.Delay(int)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_0 [label="Entry QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="31-31", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_1 [label="int frozen", span="33-33", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", color=green, community=0, file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_2 [label="var statusBar = GetStatusBar(serviceProvider)", span="34-34", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_3 [label="statusBar.IsFrozen(out frozen)", span="35-35", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_4 [label="frozen == 0", span="36-36", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_9 [label="Entry Unk.SetText", span="", cluster="Unk.SetText", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_14 [label="left.Update(DateTime.Today.AddSeconds(2), 3m)", span="43-43", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_19 [label="left.Update(DateTime.Today.AddSeconds(3), 4m)", span="49-49", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_5 [label="statusBar.SetText(msg)", span="38-38", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_15 [label="right.Update(DateTime.Today.AddSeconds(2), 3m)", span="44-44", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_20 [label="right.Update(DateTime.Today.AddSeconds(3), 4m)", span="50-50", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_6 [label="Exit QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", span="31-31", cluster="QuantConnect.VisualStudioPlugin.VsUtils.DisplayInStatusBar(System.IServiceProvider, string)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_12 [label="Entry System.IServiceProvider.GetService(System.Type)", span="0-0", cluster="System.IServiceProvider.GetService(System.Type)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_13 [label="Assert.IsFalse(composite.Right.IsReady)", span="41-41", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_16 [label="Assert.IsTrue(composite.IsReady)", span="45-45", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_17 [label="Assert.IsTrue(composite.Left.IsReady)", span="46-46", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_18 [label="Assert.IsTrue(composite.Right.IsReady)", span="47-47", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_21 [label="Assert.IsTrue(composite.IsReady)", span="51-51", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_22 [label="Assert.IsTrue(composite.Left.IsReady)", span="52-52", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_23 [label="Assert.IsTrue(composite.Right.IsReady)", span="53-53", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_24 [label="Exit QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", span="25-25", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CompositeIsReadyWhenBothAre()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_34 [label="Entry QuantConnect.Tests.Indicators.CompositeIndicatorTests.CallsDelegateCorrectly()", span="57-57", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CallsDelegateCorrectly()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_38 [label="left.Update(DateTime.Today, 1m)", span="68-68", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CallsDelegateCorrectly()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_39 [label="right.Update(DateTime.Today, 1m)", span="69-69", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CallsDelegateCorrectly()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_35 [label="var left = new Identity(''left'')", span="59-59", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CallsDelegateCorrectly()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_37 [label="var composite = new CompositeIndicator<IndicatorDataPoint>(left, right, (l, r) =>\r\n            {\r\n                Assert.AreEqual(left, l);\r\n                Assert.AreEqual(right, r);\r\n                return l + r;\r\n            })", span="61-66", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CallsDelegateCorrectly()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_36 [label="var right = new Identity(''right'')", span="60-60", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CallsDelegateCorrectly()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_40 [label="Assert.AreEqual(2m, composite.Current.Value)", span="70-70", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CallsDelegateCorrectly()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_41 [label="Exit QuantConnect.Tests.Indicators.CompositeIndicatorTests.CallsDelegateCorrectly()", span="57-57", cluster="QuantConnect.Tests.Indicators.CompositeIndicatorTests.CallsDelegateCorrectly()", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_42 [label="Entry QuantConnect.Indicators.Identity.Identity(string)", span="27-27", cluster="QuantConnect.Indicators.Identity.Identity(string)", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_30 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_43 [label="Entry CompositeIndicator<IndicatorDataPoint>.cstr", span="", cluster="CompositeIndicator<IndicatorDataPoint>.cstr", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_50 [label=left, span="", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m20_51 [label=right, span="", file="CustomBrokerageMessageHandlerAlgorithm.cs"];
m21_0 [label="Entry QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>)", span="38-38", cluster="QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>)", file="CustomChartingAlgorithm.cs"];
m21_1 [label="_computeNextValue = computeNextValue", span="41-41", cluster="QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>)", color=red, community=0, file="CustomChartingAlgorithm.cs"];
m21_2 [label="_isReady = isReady", span="42-42", cluster="QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>)", file="CustomChartingAlgorithm.cs"];
m21_3 [label="Exit QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>)", span="38-38", cluster="QuantConnect.Indicators.FunctionalIndicator<T>.FunctionalIndicator(string, System.Func<T, decimal>, System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>)", file="CustomChartingAlgorithm.cs"];
m21_7 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="CustomChartingAlgorithm.cs"];
m21_4 [label="Entry QuantConnect.Indicators.FunctionalIndicator<T>.ComputeNextValue(T)", span="58-58", cluster="QuantConnect.Indicators.FunctionalIndicator<T>.ComputeNextValue(T)", file="CustomChartingAlgorithm.cs"];
m21_5 [label="return _computeNextValue(input);", span="60-60", cluster="QuantConnect.Indicators.FunctionalIndicator<T>.ComputeNextValue(T)", color=red, community=0, file="CustomChartingAlgorithm.cs"];
m21_6 [label="Exit QuantConnect.Indicators.FunctionalIndicator<T>.ComputeNextValue(T)", span="58-58", cluster="QuantConnect.Indicators.FunctionalIndicator<T>.ComputeNextValue(T)", file="CustomChartingAlgorithm.cs"];
m21_8 [label="QuantConnect.Indicators.FunctionalIndicator<T>", span="", file="CustomChartingAlgorithm.cs"];
m22_0 [label="Entry QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="37-37", cluster="QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="CustomDataBitcoinAlgorithm.cs"];
m22_1 [label="Exit QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="37-37", cluster="QuantConnect.Brokerages.Paper.PaperBrokerage.PaperBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="CustomDataBitcoinAlgorithm.cs"];
m23_12 [label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", span="189-189", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", file="CustomDataNIFTYAlgorithm.cs"];
m23_164 [label="return new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, false);", span="191-191", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", file="CustomDataNIFTYAlgorithm.cs"];
m23_165 [label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", span="189-189", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.CreateTradeBarConfig()", file="CustomDataNIFTYAlgorithm.cs"];
m23_0 [label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", span="33-33", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_1 [label="var exchangeHours = SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork)", span="35-35", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_2 [label="var config = CreateTradeBarConfig()", span="36-36", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_3 [label="var security = new Security(exchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="37-37", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_9 [label="Assert.AreEqual(exchangeHours, security.Exchange.Hours)", span="44-44", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_4 [label="Assert.AreEqual(config, security.Subscriptions.Single())", span="39-39", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_5 [label="Assert.AreEqual(config.Symbol, security.Symbol)", span="40-40", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_6 [label="Assert.AreEqual(config.SecurityType, security.Type)", span="41-41", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_7 [label="Assert.AreEqual(config.Resolution, security.Resolution)", span="42-42", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_8 [label="Assert.AreEqual(config.FillDataForward, security.IsFillDataForward)", span="43-43", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_10 [label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", span="33-33", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SimplePropertiesTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_108 [label="Entry Unk.AlwaysOpen", span="", cluster="Unk.AlwaysOpen", file="CustomDataNIFTYAlgorithm.cs"];
m23_40 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="CustomDataNIFTYAlgorithm.cs"];
m23_42 [label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", span="73-73", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_43 [label="var security = GetSecurity()", span="75-75", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_44 [label="security.Holdings.SetHoldings(100m, 100)", span="78-78", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_45 [label="Assert.AreEqual(100m, security.Holdings.AveragePrice)", span="80-80", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_46 [label="Assert.AreEqual(100, security.Holdings.Quantity)", span="81-81", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_47 [label="Assert.IsTrue(security.HoldStock)", span="82-82", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_48 [label="Assert.IsTrue(security.Invested)", span="83-83", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_49 [label="Assert.IsTrue(security.Holdings.IsLong)", span="84-84", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_50 [label="Assert.IsFalse(security.Holdings.IsShort)", span="85-85", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_51 [label="security.Holdings.SetHoldings(100m, -100)", span="88-88", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_52 [label="Assert.AreEqual(100m, security.Holdings.AveragePrice)", span="90-90", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_53 [label="Assert.AreEqual(-100, security.Holdings.Quantity)", span="91-91", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_54 [label="Assert.IsTrue(security.HoldStock)", span="92-92", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_55 [label="Assert.IsTrue(security.Invested)", span="93-93", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_56 [label="Assert.IsFalse(security.Holdings.IsLong)", span="94-94", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_57 [label="Assert.IsTrue(security.Holdings.IsShort)", span="95-95", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_58 [label="security.Holdings.SetHoldings(100m, 0)", span="98-98", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_59 [label="Assert.AreEqual(100m, security.Holdings.AveragePrice)", span="100-100", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_60 [label="Assert.AreEqual(0, security.Holdings.Quantity)", span="101-101", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_61 [label="Assert.IsFalse(security.HoldStock)", span="102-102", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_62 [label="Assert.IsFalse(security.Invested)", span="103-103", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_63 [label="Assert.IsFalse(security.Holdings.IsLong)", span="104-104", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_64 [label="Assert.IsFalse(security.Holdings.IsShort)", span="105-105", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_65 [label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", span="73-73", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.HoldingsTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_69 [label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", span="110-110", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_70 [label="var security = GetSecurity()", span="112-112", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_71 [label="security.SetMarketPrice(new TradeBar(DateTime.Now, Symbols.SPY, 101m, 103m, 100m, 102m, 100000))", span="115-115", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_72 [label="Assert.AreEqual(101m, security.Open)", span="117-117", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_73 [label="Assert.AreEqual(103m, security.High)", span="118-118", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_74 [label="Assert.AreEqual(100m, security.Low)", span="119-119", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_75 [label="Assert.AreEqual(102m, security.Close)", span="120-120", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_76 [label="Assert.AreEqual(100000, security.Volume)", span="121-121", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_77 [label="security.SetMarketPrice(new Tick(DateTime.Now, Symbols.SPY, 104m, 104m, 104m))", span="124-124", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_78 [label="Assert.AreEqual(103m, security.High)", span="125-125", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_79 [label="Assert.AreEqual(102m, security.Close)", span="126-126", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_80 [label="Assert.AreEqual(104m, security.Price)", span="127-127", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_81 [label="security.SetMarketPrice(new Tick(DateTime.Now, Symbols.SPY, 99m, 99m, 99m))", span="130-130", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_82 [label="Assert.AreEqual(100m, security.Low)", span="131-131", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_83 [label="Assert.AreEqual(102m, security.Close)", span="132-132", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_84 [label="Assert.AreEqual(99m, security.Price)", span="133-133", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_85 [label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", span="110-110", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.UpdatingSecurityPriceTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_88 [label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="CustomDataNIFTYAlgorithm.cs"];
m23_159 [label="Entry lambda expression", span="181-181", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_101 [label="security.SetLeverage(0.1m)", span="147-147", cluster="lambda expression", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_100 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_102 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_122 [label="option.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="164-164", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_126 [label="option.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="166-166", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_129 [label="option.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted)", span="167-167", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_132 [label="option.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="168-168", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_135 [label="option.SetDataNormalizationMode(DataNormalizationMode.TotalReturn)", span="169-169", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_121 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_125 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_128 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_131 [label="Entry lambda expression", span="168-168", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_134 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_123 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_127 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_130 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_133 [label="Exit lambda expression", span="168-168", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_136 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_147 [label="equity.SetDataNormalizationMode(DataNormalizationMode.Raw)", span="177-177", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_151 [label="equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="178-178", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_154 [label="equity.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted)", span="179-179", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_157 [label="equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted)", span="180-180", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_160 [label="equity.SetDataNormalizationMode(DataNormalizationMode.TotalReturn)", span="181-181", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_146 [label="Entry lambda expression", span="177-177", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_150 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_153 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_156 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_148 [label="Exit lambda expression", span="177-177", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_152 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_155 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_158 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_161 [label="Exit lambda expression", span="181-181", cluster="lambda expression", file="CustomDataNIFTYAlgorithm.cs"];
m23_68 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="CustomDataNIFTYAlgorithm.cs"];
m23_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="CustomDataNIFTYAlgorithm.cs"];
m23_166 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="CustomDataNIFTYAlgorithm.cs"];
m23_87 [label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="610-610", cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="CustomDataNIFTYAlgorithm.cs"];
m23_119 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="CustomDataNIFTYAlgorithm.cs"];
m23_18 [label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", span="48-48", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_19 [label="var security = GetSecurity()", span="50-50", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_20 [label="Assert.IsNotNull(security.Exchange)", span="52-52", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_21 [label="Assert.IsInstanceOf<SecurityExchange>(security.Exchange)", span="53-53", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_22 [label="Assert.IsNotNull(security.Cache)", span="54-54", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_23 [label="Assert.IsInstanceOf<SecurityCache>(security.Cache)", span="55-55", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_24 [label="Assert.IsNotNull(security.PortfolioModel)", span="56-56", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_25 [label="Assert.IsInstanceOf<SecurityPortfolioModel>(security.PortfolioModel)", span="57-57", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_26 [label="Assert.IsNotNull(security.FillModel)", span="58-58", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_27 [label="Assert.IsInstanceOf<ImmediateFillModel>(security.FillModel)", span="59-59", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_28 [label="Assert.IsNotNull(security.PortfolioModel)", span="60-60", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_29 [label="Assert.IsInstanceOf<InteractiveBrokersFeeModel>(security.FeeModel)", span="61-61", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_30 [label="Assert.IsNotNull(security.SlippageModel)", span="62-62", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_31 [label="Assert.IsInstanceOf<ConstantSlippageModel>(security.SlippageModel)", span="63-63", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_32 [label="Assert.IsNotNull(security.SettlementModel)", span="64-64", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_33 [label="Assert.IsInstanceOf<ImmediateSettlementModel>(security.SettlementModel)", span="65-65", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_34 [label="Assert.IsNotNull(security.MarginModel)", span="66-66", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_35 [label="Assert.IsInstanceOf<SecurityMarginModel>(security.MarginModel)", span="67-67", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_36 [label="Assert.IsNotNull(security.DataFilter)", span="68-68", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_37 [label="Assert.IsInstanceOf<SecurityDataFilter>(security.DataFilter)", span="69-69", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_38 [label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", span="48-48", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.ConstructorTests()", file="CustomDataNIFTYAlgorithm.cs"];
m23_67 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="CustomDataNIFTYAlgorithm.cs"];
m23_41 [label="Entry Unk.>", span="", cluster="Unk.>", file="CustomDataNIFTYAlgorithm.cs"];
m23_98 [label="Entry Unk.EqualTo", span="", cluster="Unk.EqualTo", file="CustomDataNIFTYAlgorithm.cs"];
m23_103 [label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", span="152-152", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="CustomDataNIFTYAlgorithm.cs"];
m23_104 [label="var option = new Option(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, DateTimeZone.Utc, DateTimeZone.Utc, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties(SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="154-154", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="CustomDataNIFTYAlgorithm.cs"];
m23_105 [label="Assert.AreEqual(option.DataNormalizationMode, DataNormalizationMode.Raw)", span="156-156", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="CustomDataNIFTYAlgorithm.cs"];
m23_106 [label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", span="152-152", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.DefaultDataNormalizationModeForOptionsIsRaw()", file="CustomDataNIFTYAlgorithm.cs"];
m23_137 [label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", span="173-173", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="CustomDataNIFTYAlgorithm.cs"];
m23_138 [label="var equity = new QuantConnect.Securities.Equity.Equity(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY, Resolution.Minute, DateTimeZone.Utc, DateTimeZone.Utc, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="175-175", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="CustomDataNIFTYAlgorithm.cs"];
m23_139 [label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.Raw); })", span="177-177", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="CustomDataNIFTYAlgorithm.cs"];
m23_140 [label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="178-178", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="CustomDataNIFTYAlgorithm.cs"];
m23_141 [label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted); })", span="179-179", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="CustomDataNIFTYAlgorithm.cs"];
m23_142 [label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="180-180", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="CustomDataNIFTYAlgorithm.cs"];
m23_143 [label="Assert.DoesNotThrow(() => { equity.SetDataNormalizationMode(DataNormalizationMode.TotalReturn); })", span="181-181", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="CustomDataNIFTYAlgorithm.cs"];
m23_144 [label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", span="173-173", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForEquities()", file="CustomDataNIFTYAlgorithm.cs"];
m23_11 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="CustomDataNIFTYAlgorithm.cs"];
m23_17 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="CustomDataNIFTYAlgorithm.cs"];
m23_13 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="CustomDataNIFTYAlgorithm.cs"];
m23_99 [label="Entry Unk.That", span="", cluster="Unk.That", file="CustomDataNIFTYAlgorithm.cs"];
m23_109 [label="Entry SubscriptionDataConfig.cstr", span="", cluster="SubscriptionDataConfig.cstr", file="CustomDataNIFTYAlgorithm.cs"];
m23_15 [label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84", cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="CustomDataNIFTYAlgorithm.cs"];
m23_110 [label="Entry QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", span="43-43", cluster="QuantConnect.Securities.Option.OptionSymbolProperties.OptionSymbolProperties(QuantConnect.Securities.SymbolProperties)", file="CustomDataNIFTYAlgorithm.cs"];
m23_39 [label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", span="184-184", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="CustomDataNIFTYAlgorithm.cs"];
m23_162 [label="return new Security(SecurityExchangeHours.AlwaysOpen(TimeZones.NewYork), CreateTradeBarConfig(), new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency));", span="186-186", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="CustomDataNIFTYAlgorithm.cs"];
m23_163 [label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", span="184-184", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.GetSecurity()", file="CustomDataNIFTYAlgorithm.cs"];
m23_97 [label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="652-652", cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="CustomDataNIFTYAlgorithm.cs"];
m23_124 [label="Entry QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="337-337", cluster="QuantConnect.Securities.Option.Option.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="CustomDataNIFTYAlgorithm.cs"];
m23_111 [label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", span="160-160", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="CustomDataNIFTYAlgorithm.cs"];
m23_112 [label="var option = new Option(SecurityExchangeHours.AlwaysOpen(DateTimeZone.Utc), new SubscriptionDataConfig(typeof(TradeBar), Symbols.SPY_P_192_Feb19_2016, Resolution.Minute, DateTimeZone.Utc, DateTimeZone.Utc, true, false, false), new Cash(CashBook.AccountCurrency, 0, 1m), new OptionSymbolProperties(SymbolProperties.GetDefault(CashBook.AccountCurrency)))", span="162-162", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_113 [label="Assert.DoesNotThrow(() => { option.SetDataNormalizationMode(DataNormalizationMode.Raw); })", span="164-164", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="CustomDataNIFTYAlgorithm.cs"];
m23_114 [label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="166-166", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="CustomDataNIFTYAlgorithm.cs"];
m23_115 [label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.SplitAdjusted); })", span="167-167", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="CustomDataNIFTYAlgorithm.cs"];
m23_116 [label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.Adjusted); })", span="168-168", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="CustomDataNIFTYAlgorithm.cs"];
m23_117 [label="Assert.Throws(typeof(ArgumentException), () => { option.SetDataNormalizationMode(DataNormalizationMode.TotalReturn); })", span="169-169", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="CustomDataNIFTYAlgorithm.cs"];
m23_118 [label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", span="160-160", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetDataNormalizationForOptions()", file="CustomDataNIFTYAlgorithm.cs"];
m23_14 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="CustomDataNIFTYAlgorithm.cs"];
m23_66 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="383-383", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="CustomDataNIFTYAlgorithm.cs"];
m23_149 [label="Entry QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="89-89", cluster="QuantConnect.Securities.Equity.Equity.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="CustomDataNIFTYAlgorithm.cs"];
m23_107 [label="Entry QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", span="47-47", cluster="QuantConnect.Securities.Option.Option.Option(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.Option.OptionSymbolProperties)", file="CustomDataNIFTYAlgorithm.cs"];
m23_120 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="CustomDataNIFTYAlgorithm.cs"];
m23_86 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158", cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="CustomDataNIFTYAlgorithm.cs"];
m23_145 [label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="65-65", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="CustomDataNIFTYAlgorithm.cs"];
m23_89 [label="Entry QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", span="137-137", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataNIFTYAlgorithm.cs"];
m23_90 [label="var security = GetSecurity()", span="139-139", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_91 [label="security.SetLeverage(4m)", span="141-141", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataNIFTYAlgorithm.cs"];
m23_92 [label="Assert.AreEqual(4m,security.Leverage)", span="142-142", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataNIFTYAlgorithm.cs"];
m23_93 [label="security.SetLeverage(5m)", span="144-144", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataNIFTYAlgorithm.cs"];
m23_94 [label="Assert.AreEqual(5m, security.Leverage)", span="145-145", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataNIFTYAlgorithm.cs"];
m23_95 [label="Assert.That(() => security.SetLeverage(0.1m),\r\n                Throws.TypeOf<ArgumentException>().With.Message.EqualTo(''Leverage must be greater than or equal to 1.''))", span="147-148", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", color=red, community=0, file="CustomDataNIFTYAlgorithm.cs"];
m23_96 [label="Exit QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", span="137-137", cluster="QuantConnect.Tests.Common.Securities.SecurityTests.SetLeverageTest()", file="CustomDataNIFTYAlgorithm.cs"];
m23_167 [label="QuantConnect.Tests.Common.Securities.SecurityTests", span="", file="CustomDataNIFTYAlgorithm.cs"];
m23_168 [label=security, span="", file="CustomDataNIFTYAlgorithm.cs"];
m23_169 [label=option, span="", file="CustomDataNIFTYAlgorithm.cs"];
m23_170 [label=equity, span="", file="CustomDataNIFTYAlgorithm.cs"];
m25_44 [label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="367-367", cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_45 [label="Exit QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="367-367", cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_14 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="268-268", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="CustomDataUniverseAlgorithm.cs"];
m25_15 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="268-268", cluster="QuantConnect.Interfaces.IAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="CustomDataUniverseAlgorithm.cs"];
m25_24 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", span="297-297", cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", file="CustomDataUniverseAlgorithm.cs"];
m25_25 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", span="297-297", cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(int, int, int)", file="CustomDataUniverseAlgorithm.cs"];
m25_18 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", span="281-281", cluster="QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", file="CustomDataUniverseAlgorithm.cs"];
m25_19 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", span="281-281", cluster="QuantConnect.Interfaces.IAlgorithm.SetRunMode(QuantConnect.RunMode)", file="CustomDataUniverseAlgorithm.cs"];
m25_54 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", span="404-404", cluster="QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", file="CustomDataUniverseAlgorithm.cs"];
m25_55 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", span="404-404", cluster="QuantConnect.Interfaces.IAlgorithm.SetRuntimeStatistic(string, string)", file="CustomDataUniverseAlgorithm.cs"];
m25_50 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="387-387", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="CustomDataUniverseAlgorithm.cs"];
m25_51 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="387-387", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="CustomDataUniverseAlgorithm.cs"];
m25_34 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="326-326", cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="CustomDataUniverseAlgorithm.cs"];
m25_35 [label="Exit QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", span="326-326", cluster="QuantConnect.Interfaces.IAlgorithm.AddChart(QuantConnect.Chart)", file="CustomDataUniverseAlgorithm.cs"];
m25_4 [label="Entry QuantConnect.Interfaces.IAlgorithm.Log(string)", span="240-240", cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_5 [label="Exit QuantConnect.Interfaces.IAlgorithm.Log(string)", span="240-240", cluster="QuantConnect.Interfaces.IAlgorithm.Log(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_30 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="314-314", cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="CustomDataUniverseAlgorithm.cs"];
m25_31 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="314-314", cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="CustomDataUniverseAlgorithm.cs"];
m25_38 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="344-344", cluster="QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="CustomDataUniverseAlgorithm.cs"];
m25_39 [label="Exit QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="344-344", cluster="QuantConnect.Interfaces.IAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="CustomDataUniverseAlgorithm.cs"];
m25_36 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="337-337", cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="CustomDataUniverseAlgorithm.cs"];
m25_37 [label="Exit QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="337-337", cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="CustomDataUniverseAlgorithm.cs"];
m25_10 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="256-256", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_11 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", span="256-256", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_26 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", span="303-303", cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", file="CustomDataUniverseAlgorithm.cs"];
m25_27 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", span="303-303", cluster="QuantConnect.Interfaces.IAlgorithm.SetEndDate(System.DateTime)", file="CustomDataUniverseAlgorithm.cs"];
m25_46 [label="Entry QuantConnect.Interfaces.IAlgorithm.Quit(string)", span="375-375", cluster="QuantConnect.Interfaces.IAlgorithm.Quit(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_47 [label="Exit QuantConnect.Interfaces.IAlgorithm.Quit(string)", span="375-375", cluster="QuantConnect.Interfaces.IAlgorithm.Quit(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_6 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="246-246", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_7 [label="Exit QuantConnect.Interfaces.IAlgorithm.Error(string)", span="246-246", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_12 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="261-261", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="CustomDataUniverseAlgorithm.cs"];
m25_13 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="261-261", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", file="CustomDataUniverseAlgorithm.cs"];
m25_16 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="274-274", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="CustomDataUniverseAlgorithm.cs"];
m25_17 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="274-274", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="CustomDataUniverseAlgorithm.cs"];
m25_42 [label="Entry QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", span="360-360", cluster="QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", file="CustomDataUniverseAlgorithm.cs"];
m25_43 [label="Exit QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", span="360-360", cluster="QuantConnect.Interfaces.IAlgorithm.Order(string, int, bool, string)", file="CustomDataUniverseAlgorithm.cs"];
m25_48 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", span="381-381", cluster="QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", file="CustomDataUniverseAlgorithm.cs"];
m25_49 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", span="381-381", cluster="QuantConnect.Interfaces.IAlgorithm.SetQuit(bool)", file="CustomDataUniverseAlgorithm.cs"];
m25_22 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", span="292-292", cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", file="CustomDataUniverseAlgorithm.cs"];
m25_23 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", span="292-292", cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(System.DateTime)", file="CustomDataUniverseAlgorithm.cs"];
m25_28 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="309-309", cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_29 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="309-309", cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_2 [label="Entry QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="234-234", cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_3 [label="Exit QuantConnect.Interfaces.IAlgorithm.Debug(string)", span="234-234", cluster="QuantConnect.Interfaces.IAlgorithm.Debug(string)", file="CustomDataUniverseAlgorithm.cs"];
m25_52 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="397-397", cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="CustomDataUniverseAlgorithm.cs"];
m25_53 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="397-397", cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="CustomDataUniverseAlgorithm.cs"];
m25_8 [label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="251-251", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="CustomDataUniverseAlgorithm.cs"];
m25_9 [label="Exit QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", span="251-251", cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfDay()", file="CustomDataUniverseAlgorithm.cs"];
m25_56 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="410-410", cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()", file="CustomDataUniverseAlgorithm.cs"];
m25_57 [label="Exit QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="410-410", cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()", file="CustomDataUniverseAlgorithm.cs"];
m25_32 [label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", span="320-320", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", file="CustomDataUniverseAlgorithm.cs"];
m25_33 [label="Exit QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", span="320-320", cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", file="CustomDataUniverseAlgorithm.cs"];
m25_20 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", span="286-286", cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", file="CustomDataUniverseAlgorithm.cs"];
m25_21 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", span="286-286", cluster="QuantConnect.Interfaces.IAlgorithm.SetStartDate(int, int, int)", file="CustomDataUniverseAlgorithm.cs"];
m25_0 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="210-210", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="CustomDataUniverseAlgorithm.cs"];
m25_1 [label="Exit QuantConnect.Interfaces.IAlgorithm.Initialize()", span="210-210", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="CustomDataUniverseAlgorithm.cs"];
m25_40 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="350-350", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="CustomDataUniverseAlgorithm.cs"];
m25_41 [label="Exit QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", span="350-350", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(decimal)", file="CustomDataUniverseAlgorithm.cs"];
m26_51 [label="dataContractSerializer.WriteObject(writer, projectAssociations)", span="122-122", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.SerializeProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", file="CustomModelsAlgorithm.cs"];
m26_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="CustomModelsAlgorithm.cs"];
m26_12 [label="Entry QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFeeModel.CustomFeeModel(QuantConnect.Algorithm.QCAlgorithm)", span="114-114", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFeeModel.CustomFeeModel(QuantConnect.Algorithm.QCAlgorithm)", file="CustomModelsAlgorithm.cs"];
m26_13 [label="Entry QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.CustomFillModel(QuantConnect.Algorithm.QCAlgorithm)", span="72-72", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.CustomFillModel(QuantConnect.Algorithm.QCAlgorithm)", file="CustomModelsAlgorithm.cs"];
m26_14 [label="Entry QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.CustomSlippageModel(QuantConnect.Algorithm.QCAlgorithm)", span="133-133", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.CustomSlippageModel(QuantConnect.Algorithm.QCAlgorithm)", file="CustomModelsAlgorithm.cs"];
m26_15 [label="Entry QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="47-47", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomModelsAlgorithm.cs"];
m26_16 [label="var openOrders = Transactions.GetOpenOrders(_spy)", span="49-49", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomModelsAlgorithm.cs"];
m26_17 [label="openOrders.Count != 0", span="50-50", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomModelsAlgorithm.cs"];
m26_18 [label="return;", span="50-50", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomModelsAlgorithm.cs"];
m26_28 [label="Entry QuantConnect.VisualStudioPlugin.ProjectFinder.ProjectNameForFiles(System.Collections.Generic.List<string>)", span="84-84", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ProjectNameForFiles(System.Collections.Generic.List<string>)", file="CustomModelsAlgorithm.cs"];
m26_60 [label="Exit QuantConnect.VisualStudioPlugin.ProjectFinder.CreateProjectAssociations()", span="126-126", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.CreateProjectAssociations()", file="CustomModelsAlgorithm.cs"];
m26_62 [label="Entry QuantConnect.VisualStudioPlugin.ProjectAssociation.ProjectAssociation(string, System.Collections.Generic.List<string>)", span="157-157", cluster="QuantConnect.VisualStudioPlugin.ProjectAssociation.ProjectAssociation(string, System.Collections.Generic.List<string>)", file="CustomModelsAlgorithm.cs"];
m26_61 [label="Entry QuantConnect.VisualStudioPlugin.ProjectAssociations.ProjectAssociations()", span="142-142", cluster="QuantConnect.VisualStudioPlugin.ProjectAssociations.ProjectAssociations()", file="CustomModelsAlgorithm.cs"];
m26_63 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="CustomModelsAlgorithm.cs"];
m26_64 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="CustomModelsAlgorithm.cs"];
m26_40 [label="var absoluteFillQuantity = (int) (Math.Min(absoluteRemaining, _random.Next(0, 2*(int)order.AbsoluteQuantity)))", span="89-89", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_43 [label="fill.Status = OrderStatus.Filled", span="94-94", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_44 [label="_absoluteRemainingByOrderId.Remove(order.Id)", span="95-95", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_45 [label="absoluteRemaining = absoluteRemaining - absoluteFillQuantity", span="99-99", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_0 [label="Entry QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.Initialize()", span="34-34", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.Initialize()", file="CustomModelsAlgorithm.cs"];
m26_1 [label="SetStartDate(2012, 01, 01)", span="36-36", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.Initialize()", file="CustomModelsAlgorithm.cs"];
m26_2 [label="SetEndDate(2012, 02, 01)", span="37-37", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.Initialize()", file="CustomModelsAlgorithm.cs"];
m26_57 [label=_projectForFiles, span="129-129", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.CreateProjectAssociations()", file="CustomModelsAlgorithm.cs"];
m26_39 [label="var fill = base.MarketFill(asset, order)", span="88-88", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_41 [label="fill.FillQuantity = Math.Sign(order.Quantity) * absoluteFillQuantity", span="90-90", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_42 [label="absoluteRemaining == absoluteFillQuantity", span="92-92", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_35 [label="decimal absoluteRemaining", span="81-81", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_36 [label="!_absoluteRemainingByOrderId.TryGetValue(order.Id, out absoluteRemaining)", span="82-82", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_37 [label="absoluteRemaining = order.AbsoluteQuantity", span="84-84", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_38 [label="_absoluteRemainingByOrderId.Add(order.Id, order.AbsoluteQuantity)", span="85-85", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_46 [label="_absoluteRemainingByOrderId[order.Id] = absoluteRemaining", span="100-100", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_56 [label="Entry System.Math.Sign(decimal)", span="0-0", cluster="System.Math.Sign(decimal)", file="CustomModelsAlgorithm.cs"];
m26_58 [label="_algorithm = algorithm", span="116-116", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFeeModel.CustomFeeModel(QuantConnect.Algorithm.QCAlgorithm)", file="CustomModelsAlgorithm.cs"];
m26_59 [label="Exit QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFeeModel.CustomFeeModel(QuantConnect.Algorithm.QCAlgorithm)", span="114-114", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFeeModel.CustomFeeModel(QuantConnect.Algorithm.QCAlgorithm)", file="CustomModelsAlgorithm.cs"];
m26_31 [label="return projectName;", span="89-89", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ProjectNameForFiles(System.Collections.Generic.List<string>)", file="CustomModelsAlgorithm.cs"];
m26_27 [label="Exit QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="47-47", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomModelsAlgorithm.cs"];
m26_52 [label="Exit QuantConnect.VisualStudioPlugin.ProjectFinder.SerializeProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", span="116-116", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.SerializeProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", file="CustomModelsAlgorithm.cs"];
m26_20 [label="var quantity = CalculateOrderQuantity(_spy, .5m)", span="54-54", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomModelsAlgorithm.cs"];
m26_65 [label="Entry System.Math.Max(decimal, decimal)", span="0-0", cluster="System.Math.Max(decimal, decimal)", file="CustomModelsAlgorithm.cs"];
m26_66 [label="_algorithm = algorithm", span="135-135", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.CustomSlippageModel(QuantConnect.Algorithm.QCAlgorithm)", file="CustomModelsAlgorithm.cs"];
m26_67 [label="Exit QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.CustomSlippageModel(QuantConnect.Algorithm.QCAlgorithm)", span="133-133", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.CustomSlippageModel(QuantConnect.Algorithm.QCAlgorithm)", file="CustomModelsAlgorithm.cs"];
m26_29 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="CustomModelsAlgorithm.cs"];
m26_30 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="CustomModelsAlgorithm.cs"];
m26_32 [label="_algorithm = algorithm", span="74-74", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.CustomFillModel(QuantConnect.Algorithm.QCAlgorithm)", file="CustomModelsAlgorithm.cs"];
m26_33 [label="Exit QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.CustomFillModel(QuantConnect.Algorithm.QCAlgorithm)", span="72-72", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.CustomFillModel(QuantConnect.Algorithm.QCAlgorithm)", file="CustomModelsAlgorithm.cs"];
m26_73 [label="Entry System.Math.Log10(double)", span="0-0", cluster="System.Math.Log10(double)", file="CustomModelsAlgorithm.cs"];
m26_9 [label="Exit QuantConnect.VisualStudioPlugin.ProjectFinder.ReadProjectAssociations()", span="37-37", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ReadProjectAssociations()", file="CustomModelsAlgorithm.cs"];
m26_22 [label="MarketOrder(_spy, quantity, asynchronous: true)", span="56-56", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomModelsAlgorithm.cs"];
m26_21 [label="Log(''MarketOrder: '' + quantity)", span="55-55", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomModelsAlgorithm.cs"];
m26_54 [label="Entry XmlTextWriter.cstr", span="", cluster="XmlTextWriter.cstr", file="CustomModelsAlgorithm.cs"];
m26_19 [label="Time.Day > 10 && _security.Holdings.Quantity <= 0", span="52-52", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomModelsAlgorithm.cs"];
m26_26 [label="MarketOrder(_spy, quantity, asynchronous: true)", span="62-62", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomModelsAlgorithm.cs"];
m26_3 [label="Entry QuantConnect.VisualStudioPlugin.ProjectFinder.ReadProjectAssociations()", span="37-37", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ReadProjectAssociations()", color=green, community=0, file="CustomModelsAlgorithm.cs"];
m26_4 [label="var projectAssociations = ParseAssociationFile()", span="41-41", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ReadProjectAssociations()", file="CustomModelsAlgorithm.cs"];
m26_5 [label="FillProjectAssociations(projectAssociations)", span="42-42", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ReadProjectAssociations()", file="CustomModelsAlgorithm.cs"];
m26_6 [label=XmlException, span="44-44", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ReadProjectAssociations()", file="CustomModelsAlgorithm.cs"];
m26_7 [label=SerializationException, span="48-48", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ReadProjectAssociations()", file="CustomModelsAlgorithm.cs"];
m26_8 [label=FileNotFoundException, span="52-52", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.ReadProjectAssociations()", file="CustomModelsAlgorithm.cs"];
m26_34 [label="Entry QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="77-77", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="CustomModelsAlgorithm.cs"];
m26_48 [label="var output = new StreamWriter(PROJECT_ASSOCIATIONS_FILE, false)", span="118-118", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.SerializeProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", file="CustomModelsAlgorithm.cs"];
m26_47 [label="Entry QuantConnect.VisualStudioPlugin.ProjectFinder.SerializeProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", span="116-116", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.SerializeProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", file="CustomModelsAlgorithm.cs"];
m26_49 [label="var writer = new XmlTextWriter(output) { Formatting = Formatting.Indented }", span="119-119", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.SerializeProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", file="CustomModelsAlgorithm.cs"];
m26_50 [label="var dataContractSerializer = new DataContractSerializer(typeof(ProjectAssociations))", span="121-121", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.SerializeProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", file="CustomModelsAlgorithm.cs"];
m26_23 [label=projectAssociations, span="73-73", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.FillProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", file="CustomModelsAlgorithm.cs"];
m26_24 [label="_projectForFiles.Add(new HashSet<string>(projectAssociation.FileNames), projectAssociation.ProjectName)", span="75-75", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.FillProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", file="CustomModelsAlgorithm.cs"];
m26_25 [label="Exit QuantConnect.VisualStudioPlugin.ProjectFinder.FillProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", span="71-71", cluster="QuantConnect.VisualStudioPlugin.ProjectFinder.FillProjectAssociations(QuantConnect.VisualStudioPlugin.ProjectAssociations)", file="CustomModelsAlgorithm.cs"];
m26_53 [label="Entry System.IO.StreamWriter.StreamWriter(string, bool)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(string, bool)", file="CustomModelsAlgorithm.cs"];
m26_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="CustomModelsAlgorithm.cs"];
m26_55 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="CustomModelsAlgorithm.cs"];
m26_68 [label="QuantConnect.VisualStudioPlugin.ProjectFinder", span="", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CustomModelsAlgorithm.cs"];
m26_70 [label="_algorithm.Log(''CustomSlippageModel: '' + slippage)", span="143-143", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CustomModelsAlgorithm.cs"];
m26_69 [label="QuantConnect.VisualStudioPlugin.ProjectAssociation", span="", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CustomModelsAlgorithm.cs"];
m26_71 [label="return slippage;", span="144-144", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CustomModelsAlgorithm.cs"];
m26_72 [label="Exit QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="138-138", cluster="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel.GetSlippageApproximation(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="CustomModelsAlgorithm.cs"];
m26_74 [label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm", span="", file="CustomModelsAlgorithm.cs"];
m26_76 [label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFeeModel", span="", file="CustomModelsAlgorithm.cs"];
m26_75 [label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel", span="", file="CustomModelsAlgorithm.cs"];
m26_77 [label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel", span="", file="CustomModelsAlgorithm.cs"];
m27_9 [label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", span="33-33", cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_25 [label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="49-49", cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_14 [label="Entry QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="41-41", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_15 [label="!Portfolio.Invested", span="43-43", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_16 [label="SetHoldings(''SPY'', 1)", span="45-45", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_17 [label="Exit QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="41-41", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_18 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_21 [label="Entry QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="77-77", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_22 [label="base.Initialize(security, seedSecurity)", span="80-80", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_23 [label="security.SetDataNormalizationMode(_dataNormalizationMode)", span="83-83", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_24 [label="Exit QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="77-77", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="567-567", cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="884-884", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_26 [label="Entry QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", span="664-664", cluster="QuantConnect.Securities.Security.SetDataNormalizationMode(QuantConnect.DataNormalizationMode)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_8 [label="Entry QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.CustomSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder, QuantConnect.DataNormalizationMode)", span="66-66", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.CustomSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder, QuantConnect.DataNormalizationMode)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_19 [label="_dataNormalizationMode = dataNormalizationMode", span="69-69", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.CustomSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder, QuantConnect.DataNormalizationMode)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_20 [label="Exit QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.CustomSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder, QuantConnect.DataNormalizationMode)", span="66-66", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer.CustomSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder, QuantConnect.DataNormalizationMode)", file="CustomSecurityInitializerAlgorithm.cs"];
m27_0 [label="Entry QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.Initialize()", span="29-29", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.Initialize()", file="CustomSecurityInitializerAlgorithm.cs"];
m27_1 [label="SetBrokerageModel(BrokerageName.TradierBrokerage)", span="32-32", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.Initialize()", color=red, community=0, file="CustomSecurityInitializerAlgorithm.cs"];
m27_2 [label="SetSecurityInitializer(new CustomSecurityInitializer(BrokerageModel, new FuncSecuritySeeder(GetLastKnownPrice), DataNormalizationMode.Raw))", span="33-33", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.Initialize()", file="CustomSecurityInitializerAlgorithm.cs"];
m27_3 [label="SetStartDate(2012, 01, 01)", span="35-35", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.Initialize()", file="CustomSecurityInitializerAlgorithm.cs", color=green, community=0];
m27_4 [label="SetEndDate(2013, 01, 01)", span="36-36", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.Initialize()", file="CustomSecurityInitializerAlgorithm.cs"];
m27_5 [label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Hour)", span="38-38", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.Initialize()", file="CustomSecurityInitializerAlgorithm.cs"];
m27_6 [label="Exit QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.Initialize()", span="29-29", cluster="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.Initialize()", file="CustomSecurityInitializerAlgorithm.cs"];
m27_27 [label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm", span="", file="CustomSecurityInitializerAlgorithm.cs"];
m27_28 [label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer", span="", file="CustomSecurityInitializerAlgorithm.cs"];
m28_0 [label="Entry QuantConnect.VisualStudioPlugin.Credentials.Credentials(string, string)", span="22-22", cluster="QuantConnect.VisualStudioPlugin.Credentials.Credentials(string, string)", file="DailyAlgorithm.cs"];
m28_1 [label="_userId = userId", span="24-24", cluster="QuantConnect.VisualStudioPlugin.Credentials.Credentials(string, string)", file="DailyAlgorithm.cs"];
m28_2 [label="_accessToken = accessToken", span="25-25", cluster="QuantConnect.VisualStudioPlugin.Credentials.Credentials(string, string)", file="DailyAlgorithm.cs"];
m28_3 [label="Exit QuantConnect.VisualStudioPlugin.Credentials.Credentials(string, string)", span="22-22", cluster="QuantConnect.VisualStudioPlugin.Credentials.Credentials(string, string)", file="DailyAlgorithm.cs"];
m28_4 [label="out QuantConnect.VisualStudioPlugin.Credentials", span="", file="DailyAlgorithm.cs"];
m29_0 [label="Entry QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", span="31-31", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="DailyFxAlgorithm.cs"];
m29_1 [label="SetStartDate(2016, 05, 26)", span="33-33", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", color=green, community=0, file="DailyFxAlgorithm.cs"];
m29_2 [label="SetEndDate(2016, 05, 27)", span="34-34", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="DailyFxAlgorithm.cs"];
m29_20 [label="Entry QuantConnect.Data.Custom.DailyFx.ToString()", span="235-235", cluster="QuantConnect.Data.Custom.DailyFx.ToString()", file="DailyFxAlgorithm.cs"];
m29_21 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DailyFxAlgorithm.cs"];
m29_10 [label="Entry QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", file="DailyFxAlgorithm.cs"];
m29_11 [label="var result = slice.Get<DailyFx>()", span="42-42", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", file="DailyFxAlgorithm.cs"];
m29_12 [label="Console.WriteLine(''SLICE >> {0} : {1}'', _sliceCount++, result)", span="43-43", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0, file="DailyFxAlgorithm.cs"];
m29_13 [label="Exit QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Slice)", file="DailyFxAlgorithm.cs"];
m29_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="DailyFxAlgorithm.cs"];
m29_3 [label="SetCash(100000)", span="35-35", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="DailyFxAlgorithm.cs"];
m29_4 [label="AddData<DailyFx>(''DFX'', Resolution.Second, DateTimeZone.Utc)", span="36-36", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="DailyFxAlgorithm.cs"];
m29_5 [label="Exit QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", span="31-31", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.Initialize()", file="DailyFxAlgorithm.cs"];
m29_14 [label="Entry QuantConnect.Data.Slice.Get<T>()", span="244-244", cluster="QuantConnect.Data.Slice.Get<T>()", file="DailyFxAlgorithm.cs"];
m29_6 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="DailyFxAlgorithm.cs"];
m29_9 [label="Entry Unk.>", span="", cluster="Unk.>", file="DailyFxAlgorithm.cs"];
m29_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="DailyFxAlgorithm.cs"];
m29_15 [label="Entry System.Console.WriteLine(string, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object)", file="DailyFxAlgorithm.cs"];
m29_16 [label="Entry QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", span="51-51", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", file="DailyFxAlgorithm.cs"];
m29_17 [label="_uniqueConfirmation.Add(calendar.ToString(), calendar)", span="53-53", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", file="DailyFxAlgorithm.cs"];
m29_18 [label="Console.WriteLine(''ONDATA >> {0}: {1}'', _eventCount++, calendar)", span="54-54", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", color=red, community=0, file="DailyFxAlgorithm.cs"];
m29_19 [label="Exit QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", span="51-51", cluster="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm.OnData(QuantConnect.Data.Custom.DailyFx)", file="DailyFxAlgorithm.cs"];
m29_22 [label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm", span="", file="DailyFxAlgorithm.cs"];
m30_0 [label="Entry QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="34-34", cluster="QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="DataConsolidationAlgorithm.cs"];
m30_1 [label="Exit QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", span="34-34", cluster="QuantConnect.Securities.Option.IOptionPriceModel.Evaluate(QuantConnect.Securities.Security, QuantConnect.Data.Slice, QuantConnect.Data.Market.OptionContract)", file="DataConsolidationAlgorithm.cs"];
m31_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="DelistingEventsAlgorithm.cs"];
m31_34 [label="Entry QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="83-83", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="DelistingEventsAlgorithm.cs"];
m31_35 [label="Console.WriteLine(''OnOrderEvent(OrderEvent): {0}: {1}'', Time, orderEvent)", span="85-85", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", color=red, community=0, file="DelistingEventsAlgorithm.cs"];
m31_36 [label="Exit QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="83-83", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="DelistingEventsAlgorithm.cs"];
m31_0 [label="Entry QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", span="34-34", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", file="DelistingEventsAlgorithm.cs"];
m31_1 [label="SetStartDate(2007, 05, 16)", span="36-36", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", file="DelistingEventsAlgorithm.cs"];
m31_2 [label="SetEndDate(2007, 05, 25)", span="37-37", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", file="DelistingEventsAlgorithm.cs"];
m31_3 [label="SetCash(100000)", span="38-38", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", file="DelistingEventsAlgorithm.cs"];
m31_4 [label="AddSecurity(SecurityType.Equity, ''AAA'', Resolution.Daily)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", file="DelistingEventsAlgorithm.cs"];
m31_5 [label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Daily)", span="41-41", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", file="DelistingEventsAlgorithm.cs"];
m31_6 [label="Exit QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", span="34-34", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.Initialize()", file="DelistingEventsAlgorithm.cs"];
m31_11 [label="Entry QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", span="48-48", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", file="DelistingEventsAlgorithm.cs"];
m31_12 [label="Transactions.OrdersCount == 0", span="50-50", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", file="DelistingEventsAlgorithm.cs"];
m31_15 [label="data.Bars", span="56-56", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", file="DelistingEventsAlgorithm.cs"];
m31_13 [label="SetHoldings(''AAA'', 1)", span="52-52", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", file="DelistingEventsAlgorithm.cs"];
m31_14 [label="Debug(''Purchased Stock'')", span="53-53", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", file="DelistingEventsAlgorithm.cs"];
m31_16 [label="var symbol = kvp.Key", span="58-58", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", file="DelistingEventsAlgorithm.cs"];
m31_17 [label="var tradeBar = kvp.Value", span="59-59", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", file="DelistingEventsAlgorithm.cs"];
m31_18 [label="Console.WriteLine(''OnData(Slice): {0}: {1}: {2}'', Time, symbol, tradeBar.Close.ToString(''0.00''))", span="60-60", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", color=red, community=0, file="DelistingEventsAlgorithm.cs"];
m31_19 [label="Exit QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", span="48-48", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Slice)", file="DelistingEventsAlgorithm.cs"];
m31_23 [label="Entry System.Console.WriteLine(string, object, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object, object)", file="DelistingEventsAlgorithm.cs"];
m31_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="DelistingEventsAlgorithm.cs"];
m31_24 [label="Entry QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", span="66-66", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", file="DelistingEventsAlgorithm.cs"];
m31_25 [label=data, span="68-68", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", file="DelistingEventsAlgorithm.cs"];
m31_26 [label="var symbol = kvp.Key", span="70-70", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", file="DelistingEventsAlgorithm.cs"];
m31_27 [label="var delisting = kvp.Value", span="71-71", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", file="DelistingEventsAlgorithm.cs"];
m31_29 [label="Console.WriteLine(''OnData(Delistings): {0}: {1} will be delisted at end of day today.'', Time, symbol)", span="74-74", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", color=red, community=0, file="DelistingEventsAlgorithm.cs"];
m31_31 [label="Console.WriteLine(''OnData(Delistings): {0}: {1} has been delisted.'', Time, symbol)", span="78-78", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", color=red, community=0, file="DelistingEventsAlgorithm.cs"];
m31_28 [label="delisting.Type == DelistingType.Warning", span="72-72", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", file="DelistingEventsAlgorithm.cs"];
m31_30 [label="delisting.Type == DelistingType.Delisted", span="76-76", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", file="DelistingEventsAlgorithm.cs"];
m31_32 [label="Exit QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", span="66-66", cluster="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm.OnData(QuantConnect.Data.Market.Delistings)", file="DelistingEventsAlgorithm.cs"];
m31_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="DelistingEventsAlgorithm.cs"];
m31_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="DelistingEventsAlgorithm.cs"];
m31_33 [label="Entry System.Console.WriteLine(string, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object)", file="DelistingEventsAlgorithm.cs"];
m31_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="DelistingEventsAlgorithm.cs"];
m31_22 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="DelistingEventsAlgorithm.cs"];
m31_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="DelistingEventsAlgorithm.cs"];
m31_37 [label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm", span="", file="DelistingEventsAlgorithm.cs"];
m32_55 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="102-102", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_9 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.ConcurrentQueue()", file="DisplacedMovingAverageRibbon.cs"];
m32_31 [label="Entry QuantConnect.Data.BaseData.Update(decimal, decimal, decimal, decimal)", span="172-172", cluster="QuantConnect.Data.BaseData.Update(decimal, decimal, decimal, decimal)", file="DisplacedMovingAverageRibbon.cs"];
m32_52 [label="Entry QuantConnect.Data.BaseData.Clone()", span="199-199", cluster="QuantConnect.Data.BaseData.Clone()", file="DisplacedMovingAverageRibbon.cs"];
m32_32 [label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="DisplacedMovingAverageRibbon.cs"];
m32_33 [label="Entry QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", span="182-182", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_34 [label=_lock, span="184-184", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_35 [label="_data == null && !fillForward", span="189-189", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_42 [label="fillForward && _data == null && _previousData != null", span="202-202", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_36 [label="Log.Debug(''StreamStore.TriggerArchive(): No data to store, and not fill forward: '' + Symbol)", span="191-191", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_37 [label="_data != null", span="194-194", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_38 [label="Log.Debug(''StreamStore.TriggerArchive(): Enqueued new data: S:'' + _data.Symbol + '' V:'' + _data.Value)", span="197-197", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_39 [label="_previousData = _data.Clone()", span="198-198", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_40 [label="_queue.Enqueue(_data.Clone())", span="199-199", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_41 [label="_data = null", span="200-200", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_43 [label="Log.Debug(''StreamStore.TriggerArchive(): Fillforward, Previous Enqueued: S:'' + _previousData.Symbol + '' V:'' + _previousData.Value)", span="205-205", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_48 [label=Exception, span="213-213", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_44 [label="var cloneForward = _previousData.Clone(true)", span="206-206", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_45 [label="cloneForward.Time = _previousData.Time.Add(_increment)", span="207-207", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_46 [label="_queue.Enqueue(cloneForward)", span="208-208", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_47 [label="_previousData = cloneForward.Clone()", span="210-210", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_49 [label="Log.Error(''StreamStore.TriggerAchive(fillforward): Failed to archive: '' + err.Message)", span="215-215", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_50 [label="Exit QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", span="182-182", cluster="QuantConnect.Lean.Engine.StreamStore.TriggerArchive(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_8 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="DisplacedMovingAverageRibbon.cs"];
m32_17 [label="Entry QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", span="145-145", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_18 [label="var barStartTime = ComputeBarStartTime(tick)", span="148-148", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_25 [label="_data = new TradeBar(barStartTime, _config.Symbol, tick.LastPrice, tick.LastPrice, tick.LastPrice, tick.LastPrice, tick.Quantity)", span="161-161", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_26 [label="_data.Update(tick.LastPrice, tick.Quantity, tick.BidPrice, tick.AskPrice)", span="166-166", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_28 [label="_queue.Enqueue(tick)", span="172-172", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_19 [label="_data != null && _data.Time < barStartTime", span="149-149", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_20 [label="Thread.Sleep(1)", span="151-151", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_21 [label=_lock, span="154-154", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_22 [label="_type.Name", span="156-156", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_23 [label="''TradeBar''", span="158-158", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_27 [label="''Tick''", span="171-171", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_24 [label="_data == null", span="159-159", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_29 [label="Exit QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", span="145-145", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.Market.Tick)", file="DisplacedMovingAverageRibbon.cs"];
m32_51 [label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="140-140", cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="DisplacedMovingAverageRibbon.cs"];
m32_15 [label="Entry QuantConnect.Lean.Engine.StreamStore.ComputeBarStartTime(QuantConnect.Data.BaseData)", span="225-225", cluster="QuantConnect.Lean.Engine.StreamStore.ComputeBarStartTime(QuantConnect.Data.BaseData)", file="DisplacedMovingAverageRibbon.cs"];
m32_56 [label="return DateTime.Now.RoundDown(_increment);", span="228-228", cluster="QuantConnect.Lean.Engine.StreamStore.ComputeBarStartTime(QuantConnect.Data.BaseData)", file="DisplacedMovingAverageRibbon.cs"];
m32_57 [label="Exit QuantConnect.Lean.Engine.StreamStore.ComputeBarStartTime(QuantConnect.Data.BaseData)", span="225-225", cluster="QuantConnect.Lean.Engine.StreamStore.ComputeBarStartTime(QuantConnect.Data.BaseData)", file="DisplacedMovingAverageRibbon.cs"];
m32_10 [label="Entry QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.BaseData)", span="129-129", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.BaseData)", file="DisplacedMovingAverageRibbon.cs"];
m32_11 [label="_data != null && _data.Time < ComputeBarStartTime(data)", span="132-132", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.BaseData)", file="DisplacedMovingAverageRibbon.cs"];
m32_13 [label="_data = data", span="137-137", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.BaseData)", file="DisplacedMovingAverageRibbon.cs"];
m32_12 [label="Thread.Sleep(1)", span="134-134", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.BaseData)", file="DisplacedMovingAverageRibbon.cs"];
m32_14 [label="Exit QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.BaseData)", span="129-129", cluster="QuantConnect.Lean.Engine.StreamStore.Update(QuantConnect.Data.BaseData)", file="DisplacedMovingAverageRibbon.cs"];
m32_16 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="DisplacedMovingAverageRibbon.cs"];
m32_53 [label="Entry QuantConnect.Data.BaseData.Clone(bool)", span="185-185", cluster="QuantConnect.Data.BaseData.Clone(bool)", file="DisplacedMovingAverageRibbon.cs"];
m32_54 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="DisplacedMovingAverageRibbon.cs"];
m32_30 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long)", span="163-163", cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, string, decimal, decimal, decimal, decimal, long)", file="DisplacedMovingAverageRibbon.cs"];
m32_0 [label="Entry QuantConnect.Lean.Engine.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig)", span="112-112", cluster="QuantConnect.Lean.Engine.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig)", file="DisplacedMovingAverageRibbon.cs"];
m32_1 [label="_type = config.Type", span="114-114", cluster="QuantConnect.Lean.Engine.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig)", file="DisplacedMovingAverageRibbon.cs"];
m32_4 [label="_config = config", span="117-117", cluster="QuantConnect.Lean.Engine.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig)", file="DisplacedMovingAverageRibbon.cs"];
m32_5 [label="_increment = config.Increment", span="118-118", cluster="QuantConnect.Lean.Engine.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig)", file="DisplacedMovingAverageRibbon.cs"];
m32_2 [label="_data = null", span="115-115", cluster="QuantConnect.Lean.Engine.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig)", file="DisplacedMovingAverageRibbon.cs"];
m32_3 [label="_lock = new object()", span="116-116", cluster="QuantConnect.Lean.Engine.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig)", file="DisplacedMovingAverageRibbon.cs"];
m32_6 [label="_queue = new ConcurrentQueue<BaseData>()", span="119-119", cluster="QuantConnect.Lean.Engine.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig)", file="DisplacedMovingAverageRibbon.cs"];
m32_7 [label="Exit QuantConnect.Lean.Engine.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig)", span="112-112", cluster="QuantConnect.Lean.Engine.StreamStore.StreamStore(QuantConnect.Data.SubscriptionDataConfig)", file="DisplacedMovingAverageRibbon.cs"];
m32_59 [label="QuantConnect.Lean.Engine.StreamStore", span="", file="DisplacedMovingAverageRibbon.cs"];
m34_11 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="44-44", cluster="QuantConnect.Lean.Engine.DataFeeds.CollectionSubscriptionDataSourceReader.CollectionSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_12 [label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="49-49", cluster="QuantConnect.Lean.Engine.DataFeeds.ZipEntryNameSubscriptionDataSourceReader.ZipEntryNameSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_6 [label="FileFormat.ZipEntryName", span="46-46", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="36-36", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_1 [label="source.Format", span="38-38", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_3 [label="return new TextSubscriptionDataSourceReader(dataCacheProvider, config, date, isLiveMode);", span="41-41", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_5 [label="return new CollectionSubscriptionDataSourceReader(dataCacheProvider, config, date, isLiveMode);", span="44-44", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_7 [label="return new ZipEntryNameSubscriptionDataSourceReader(dataCacheProvider, config, date, isLiveMode);", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_8 [label="throw new NotImplementedException(''SubscriptionFactory.ForSource('' + source + '') has not been implemented yet.'');", span="50-50", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_2 [label="FileFormat.Csv", span="40-40", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_4 [label="FileFormat.Collection", span="43-43", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_9 [label="Exit QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="36-36", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataSourceReader.ForSource(QuantConnect.Data.SubscriptionDataSource, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_10 [label="Entry QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="65-65", cluster="QuantConnect.Lean.Engine.DataFeeds.TextSubscriptionDataSourceReader.TextSubscriptionDataSourceReader(QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m34_13 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="DropboxBaseDataUniverseSelectionAlgorithm.cs"];
m35_2 [label="Entry QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", span="41-41", cluster="QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", file="DropboxUniverseSelectionAlgorithm.cs"];
m35_3 [label="Exit QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", span="41-41", cluster="QuantConnect.Interfaces.ICommandQueueHandler.GetCommands()", file="DropboxUniverseSelectionAlgorithm.cs"];
m35_0 [label="Entry QuantConnect.Interfaces.ICommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="35-35", cluster="QuantConnect.Interfaces.ICommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="DropboxUniverseSelectionAlgorithm.cs"];
m35_1 [label="Exit QuantConnect.Interfaces.ICommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="35-35", cluster="QuantConnect.Interfaces.ICommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="DropboxUniverseSelectionAlgorithm.cs"];
m37_14 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="EquitiesLabAlgorithm.cs"];
m37_4 [label="Entry System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime, System.TimeZoneInfo)", span="0-0", cluster="System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime, System.TimeZoneInfo)", file="EquitiesLabAlgorithm.cs"];
m37_145 [label="Entry QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="457-457", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_146 [label="barSize <= TimeSpan.Zero", span="459-459", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_147 [label="throw new ArgumentException(''barSize must be greater than TimeSpan.Zero'', nameof(barSize));", span="461-461", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_148 [label="var current = start", span="464-464", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_150 [label="i < barCount", span="465-465", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_152 [label="current = current + barSize", span="468-468", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_153 [label="exchange.IsOpen(previous, current, extendedMarketHours)", span="469-469", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_149 [label="int i = 0", span="465-465", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_151 [label="var previous = current", span="467-467", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_155 [label="return current;", span="474-474", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_154 [label="i++", span="471-471", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_156 [label="Exit QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="457-457", cluster="QuantConnect.Time.GetEndTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_39 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="EquitiesLabAlgorithm.cs"];
m37_88 [label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="316-316", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_89 [label="var day = from.Date", span="318-318", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_92 [label="yield return day;", span="322-322", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_90 [label="day.Date <= thru.Date", span="318-318", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_91 [label="exchange.IsDateOpen(day)", span="320-320", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_93 [label="day = day.AddDays(1)", span="318-318", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_94 [label="Exit QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="316-316", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_15 [label="Entry QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", span="148-148", cluster="QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", file="EquitiesLabAlgorithm.cs"];
m37_16 [label="DateTime time", span="150-150", cluster="QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_17 [label="time = EpochTime.AddMilliseconds(unixTimeStamp)", span="154-154", cluster="QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_19 [label="Log.Error(err, ''UnixTimeStamp: '' + unixTimeStamp)", span="158-158", cluster="QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_18 [label=Exception, span="156-156", cluster="QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_21 [label="return time;", span="161-161", cluster="QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_20 [label="time = DateTime.Now", span="159-159", cluster="QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_22 [label="Exit QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", span="148-148", cluster="QuantConnect.Time.UnixMillisecondTimeStampToDateTime(double)", file="EquitiesLabAlgorithm.cs"];
m37_41 [label="Entry QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", span="202-202", cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_42 [label="return TimeSpan.FromTicks(Math.Min(one.Ticks, two.Ticks));", span="204-204", cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_43 [label="Exit QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", span="202-202", cluster="QuantConnect.Time.Min(System.TimeSpan, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_0 [label="Entry QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", span="89-89", cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="EquitiesLabAlgorithm.cs"];
m37_1 [label="utcDateTime = TimeZoneInfo.ConvertTimeToUtc(dateTime, timeZone)", span="91-91", cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_2 [label="this.timeZone = timeZone", span="92-92", cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_3 [label="Exit QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", span="89-89", cluster="QuantConnect.Time.DateTimeWithZone.DateTimeWithZone(System.DateTime, System.TimeZoneInfo)", file="EquitiesLabAlgorithm.cs"];
m37_36 [label="Entry QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="195-195", cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_37 [label="return TimeSpan.FromTicks(Math.Max(one.Ticks, two.Ticks));", span="197-197", cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_38 [label="Exit QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="195-195", cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_143 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="EquitiesLabAlgorithm.cs"];
m37_67 [label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0", cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_68 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="EquitiesLabAlgorithm.cs"];
m37_23 [label="Entry System.DateTime.AddMilliseconds(double)", span="0-0", cluster="System.DateTime.AddMilliseconds(double)", file="EquitiesLabAlgorithm.cs"];
m37_45 [label="Entry QuantConnect.Time.Max(System.DateTime, System.DateTime)", span="210-210", cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_46 [label="return one > two ? one : two;", span="212-212", cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_47 [label="Exit QuantConnect.Time.Max(System.DateTime, System.DateTime)", span="210-210", cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_5 [label="Entry QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="EquitiesLabAlgorithm.cs"];
m37_6 [label="DateTime time", span="129-129", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_7 [label="time = EpochTime.AddSeconds(unixTimeStamp)", span="133-133", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_9 [label="Log.Error(err, ''UnixTimeStamp: '' + unixTimeStamp)", span="137-137", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_8 [label=Exception, span="135-135", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_11 [label="return time;", span="140-140", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_10 [label="time = DateTime.Now", span="138-138", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_12 [label="Exit QuantConnect.Time.UnixTimeStampToDateTime(double)", span="127-127", cluster="QuantConnect.Time.UnixTimeStampToDateTime(double)", file="EquitiesLabAlgorithm.cs"];
m37_51 [label="Entry QuantConnect.Time.ParseDate(string)", span="228-228", cluster="QuantConnect.Time.ParseDate(string)", file="EquitiesLabAlgorithm.cs"];
m37_52 [label="DateTime date", span="233-233", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_53 [label="DateTime.TryParseExact(dateToParse, DateFormat.SixCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="234-234", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_55 [label="DateTime.TryParseExact(dateToParse, DateFormat.EightCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="238-238", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_57 [label="DateTime.TryParseExact(dateToParse.Substring(0, 19), DateFormat.JsonFormat, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="242-242", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_59 [label="DateTime.TryParseExact(dateToParse, DateFormat.US, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="246-246", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_61 [label="DateTime.TryParse(dateToParse, out date)", span="250-250", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_54 [label="return date;", span="236-236", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_56 [label="return date;", span="240-240", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_58 [label="return date;", span="244-244", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_60 [label="return date;", span="248-248", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_62 [label="return date;", span="252-252", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_63 [label=Exception, span="255-255", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_65 [label="return DateTime.Now;", span="260-260", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_64 [label="Log.Error(err)", span="257-257", cluster="QuantConnect.Time.ParseDate(string)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_66 [label="Exit QuantConnect.Time.ParseDate(string)", span="228-228", cluster="QuantConnect.Time.ParseDate(string)", file="EquitiesLabAlgorithm.cs"];
m37_33 [label="Entry QuantConnect.Time.TimeStamp()", span="187-187", cluster="QuantConnect.Time.TimeStamp()", file="EquitiesLabAlgorithm.cs"];
m37_34 [label="return DateTimeToUnixTimeStamp(DateTime.UtcNow);", span="189-189", cluster="QuantConnect.Time.TimeStamp()", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_35 [label="Exit QuantConnect.Time.TimeStamp()", span="187-187", cluster="QuantConnect.Time.TimeStamp()", file="EquitiesLabAlgorithm.cs"];
m37_77 [label="Entry QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="284-284", cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_78 [label="var day = from.Date", span="286-286", cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_81 [label="yield return day;", span="290-290", cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_79 [label="day.Date <= thru.Date", span="286-286", cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_80 [label="TradableDate(securities, day)", span="288-288", cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_82 [label="day = day.AddDays(1)", span="286-286", cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_83 [label="Exit QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="284-284", cluster="QuantConnect.Time.EachTradeableDay(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_32 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="EquitiesLabAlgorithm.cs"];
m37_119 [label="Entry QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="397-397", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_120 [label="var count = 0", span="399-399", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_121 [label="Log.Trace(''Time.TradeableDates(): Security Count: '' + securities.Count)", span="400-400", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_122 [label="EachDay(start, finish)", span="403-403", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_123 [label="TradableDate(securities, day)", span="405-405", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_124 [label="count++", span="407-407", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_127 [label="return count;", span="415-415", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_125 [label=Exception, span="411-411", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_126 [label="Log.Error(err)", span="413-413", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_128 [label="Exit QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="397-397", cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_144 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="477-477", cluster="System.DateTime.RoundDown(System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_118 [label="Entry QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", span="115-115", cluster="QuantConnect.Securities.SecurityExchange.IsOpenDuringBar(System.DateTime, System.DateTime, bool)", file="EquitiesLabAlgorithm.cs"];
m37_163 [label="Entry QuantConnect.Time.NormalizeTimeStep(System.TimeSpan, System.TimeSpan)", span="504-504", cluster="QuantConnect.Time.NormalizeTimeStep(System.TimeSpan, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_164 [label="period == TimeSpan.Zero", span="507-507", cluster="QuantConnect.Time.NormalizeTimeStep(System.TimeSpan, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_166 [label="return stepSize.TotalSeconds / period.TotalSeconds;", span="512-512", cluster="QuantConnect.Time.NormalizeTimeStep(System.TimeSpan, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_165 [label="return 0;", span="509-509", cluster="QuantConnect.Time.NormalizeTimeStep(System.TimeSpan, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_167 [label="Exit QuantConnect.Time.NormalizeTimeStep(System.TimeSpan, System.TimeSpan)", span="504-504", cluster="QuantConnect.Time.NormalizeTimeStep(System.TimeSpan, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_31 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="EquitiesLabAlgorithm.cs"];
m37_109 [label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="586-586", cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="EquitiesLabAlgorithm.cs"];
m37_157 [label="Entry QuantConnect.Time.NormalizeInstantWithinRange(System.DateTime, System.DateTime, System.TimeSpan)", span="486-486", cluster="QuantConnect.Time.NormalizeInstantWithinRange(System.DateTime, System.DateTime, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_158 [label="period == TimeSpan.Zero", span="489-489", cluster="QuantConnect.Time.NormalizeInstantWithinRange(System.DateTime, System.DateTime, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_159 [label="return start == current ? 1 : 0;", span="491-491", cluster="QuantConnect.Time.NormalizeInstantWithinRange(System.DateTime, System.DateTime, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_160 [label="var delta = (current - start).TotalSeconds", span="494-494", cluster="QuantConnect.Time.NormalizeInstantWithinRange(System.DateTime, System.DateTime, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_161 [label="return delta / period.TotalSeconds;", span="495-495", cluster="QuantConnect.Time.NormalizeInstantWithinRange(System.DateTime, System.DateTime, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_162 [label="Exit QuantConnect.Time.NormalizeInstantWithinRange(System.DateTime, System.DateTime, System.TimeSpan)", span="486-486", cluster="QuantConnect.Time.NormalizeInstantWithinRange(System.DateTime, System.DateTime, System.TimeSpan)", file="EquitiesLabAlgorithm.cs"];
m37_40 [label="Entry System.TimeSpan.FromTicks(long)", span="0-0", cluster="System.TimeSpan.FromTicks(long)", file="EquitiesLabAlgorithm.cs"];
m37_13 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="EquitiesLabAlgorithm.cs"];
m37_95 [label="Entry QuantConnect.Securities.SecurityExchangeHours.IsDateOpen(System.DateTime)", span="177-177", cluster="QuantConnect.Securities.SecurityExchangeHours.IsDateOpen(System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_44 [label="Entry System.Math.Min(long, long)", span="0-0", cluster="System.Math.Min(long, long)", file="EquitiesLabAlgorithm.cs"];
m37_70 [label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="270-270", cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_71 [label="var day = from.Date", span="272-272", cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_73 [label="yield return day;", span="273-273", cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_72 [label="day.Date <= thru.Date", span="272-272", cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_74 [label="day = day.AddDays(1)", span="272-272", cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_75 [label="Exit QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="270-270", cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_69 [label="Entry System.DateTime.TryParse(string, out System.DateTime)", span="0-0", cluster="System.DateTime.TryParse(string, out System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_24 [label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="169-169", cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_25 [label="double timestamp = 0", span="171-171", cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_26 [label="timestamp = (time - new DateTime(1970, 1, 1, 0, 0, 0, 0)).TotalSeconds", span="174-174", cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_28 [label="Log.Error(err, time.ToString(''o''))", span="178-178", cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_27 [label=Exception, span="176-176", cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_29 [label="return timestamp;", span="180-180", cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_30 [label="Exit QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="169-169", cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_48 [label="Entry QuantConnect.Time.Min(System.DateTime, System.DateTime)", span="218-218", cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_49 [label="return one < two ? one : two;", span="220-220", cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_50 [label="Exit QuantConnect.Time.Min(System.DateTime, System.DateTime)", span="218-218", cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_142 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="EquitiesLabAlgorithm.cs"];
m37_84 [label="Entry QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", span="373-373", cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_111 [label=securities, span="377-377", cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_112 [label="security.Exchange.IsOpenDuringBar(day.Date, day.Date.AddDays(1), security.IsExtendedMarketHours)", span="379-379", cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_114 [label=Exception, span="382-382", cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_116 [label="return false;", span="386-386", cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_113 [label="return true;", span="379-379", cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_115 [label="Log.Error(err)", span="384-384", cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_117 [label="Exit QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", span="373-373", cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_85 [label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="303-303", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_86 [label="return EachTradeableDay(security.Exchange.Hours, from, thru);", span="305-305", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_87 [label="Exit QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="303-303", cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="EquitiesLabAlgorithm.cs"];
m37_129 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="EquitiesLabAlgorithm.cs"];
m37_130 [label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="427-427", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_131 [label="barSize <= TimeSpan.Zero", span="429-429", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_132 [label="throw new ArgumentException(''barSize must be greater than TimeSpan.Zero'', nameof(barSize));", span="431-431", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_133 [label="var current = end.RoundDown(barSize)", span="434-434", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_135 [label="i < barCount", span="435-435", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_137 [label="current = current - barSize", span="438-438", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_138 [label="exchange.IsOpen(current, previous, extendedMarketHours)", span="439-439", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_134 [label="int i = 0", span="435-435", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_136 [label="var previous = current", span="437-437", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_140 [label="return current;", span="444-444", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_139 [label="i++", span="441-441", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_141 [label="Exit QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="427-427", cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="EquitiesLabAlgorithm.cs"];
m37_76 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="EquitiesLabAlgorithm.cs"];
m37_96 [label="Entry QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", span="340-340", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="EquitiesLabAlgorithm.cs"];
m37_97 [label="var currentExchangeTime = from", span="342-342", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_106 [label="yield return currentInTimeZone.Date;", span="360-360", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_98 [label="thru = thru.Date.AddDays(1)", span="343-343", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_100 [label="var currentInTimeZone = currentExchangeTime.ConvertTo(exchange.TimeZone, timeZone)", span="347-347", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_102 [label="currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone) > thru", span="351-351", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_103 [label="currentInTimeZoneEod = thru.ConvertTo(exchange.TimeZone, timeZone)", span="353-353", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_104 [label="var currentExchangeTimeEod = currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone)", span="357-357", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_105 [label="exchange.IsOpen(currentExchangeTime, currentExchangeTimeEod, includeExtendedMarketHours)", span="358-358", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_107 [label="currentExchangeTime = currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone)", span="363-363", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="EquitiesLabAlgorithm.cs"];
m37_99 [label="currentExchangeTime < thru", span="344-344", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_101 [label="var currentInTimeZoneEod = currentInTimeZone.Date.AddDays(1)", span="348-348", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", color=red, community=0, file="EquitiesLabAlgorithm.cs"];
m37_108 [label="Exit QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", span="340-340", cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="EquitiesLabAlgorithm.cs"];
m37_168 [label="out QuantConnect.Time.DateTimeWithZone", span="", file="EquitiesLabAlgorithm.cs"];
m38_47 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt32FromString()", span="84-84", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt32FromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_50 [label="Assert.AreEqual(12345678, value)", span="88-88", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt32FromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_49 [label="var value = input.ToInt32()", span="87-87", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt32FromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_48 [label="string input = ''12345678''", span="86-86", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt32FromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_51 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt32FromString()", span="84-84", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt32FromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_0 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="56-56", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="ETFGlobalRotationAlgorithm.cs"];
m38_1 [label="return new BacktestingBrokerage(algorithm);", span="58-58", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="ETFGlobalRotationAlgorithm.cs"];
m38_2 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="56-56", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="ETFGlobalRotationAlgorithm.cs"];
m38_142 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsLowerBound()", span="212-212", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsLowerBound()", file="ETFGlobalRotationAlgorithm.cs"];
m38_145 [label="Assert.AreEqual(decimal.MinValue, output)", span="216-216", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsLowerBound()", file="ETFGlobalRotationAlgorithm.cs"];
m38_144 [label="var output = input.SafeDecimalCast()", span="215-215", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsLowerBound()", file="ETFGlobalRotationAlgorithm.cs"];
m38_143 [label="var input = (double) decimal.MinValue", span="214-214", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsLowerBound()", file="ETFGlobalRotationAlgorithm.cs"];
m38_146 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsLowerBound()", span="212-212", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsLowerBound()", file="ETFGlobalRotationAlgorithm.cs"];
m38_10 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", span="41-41", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="ETFGlobalRotationAlgorithm.cs"];
m38_11 [label="Assert.IsTrue(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<>)))", span="43-43", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="ETFGlobalRotationAlgorithm.cs"];
m38_12 [label="Assert.IsTrue(typeof(Derived2).IsSubclassOfGeneric(typeof(Super<>)))", span="44-44", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="ETFGlobalRotationAlgorithm.cs"];
m38_13 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", span="41-41", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeDefinitions()", file="ETFGlobalRotationAlgorithm.cs"];
m38_85 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalValueFromString()", span="140-140", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalValueFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_88 [label="Assert.AreEqual(0m, value)", span="144-144", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalValueFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_87 [label="var value = input.ToDecimal()", span="143-143", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalValueFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_86 [label="string input = ''0''", span="142-142", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalValueFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_89 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalValueFromString()", span="140-140", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalValueFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_121 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", span="184-184", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_127 [label="Assert.AreEqual(1, list.Count)", span="191-191", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_128 [label="Assert.AreEqual(1, list[0])", span="192-192", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_125 [label="Assert.IsTrue(dictionary.ContainsKey(key))", span="189-189", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_126 [label="var list = dictionary[key]", span="190-190", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_122 [label="int key = 0", span="186-186", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_123 [label="var dictionary = new Dictionary<int, List<int>>()", span="187-187", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_124 [label="Extensions.Add(dictionary, key, 1)", span="188-188", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_129 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", span="184-184", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddCreatesNewList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_130 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ETFGlobalRotationAlgorithm.cs"];
m38_95 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", span="156-156", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_98 [label="Assert.AreEqual(TimeSpan.FromHours(16), timespan)", span="160-160", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_97 [label="var timespan = input.ConvertTo<TimeSpan>()", span="159-159", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_96 [label="string input = ''16:00''", span="158-158", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_99 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", span="156-156", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsTimeSpanFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_119 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ETFGlobalRotationAlgorithm.cs"];
m38_70 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromIntStringWithExtraWhiteSpace()", span="116-116", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromIntStringWithExtraWhiteSpace()", file="ETFGlobalRotationAlgorithm.cs"];
m38_72 [label="var value = input.ToDecimal()", span="119-119", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromIntStringWithExtraWhiteSpace()", color=green, community=0, file="ETFGlobalRotationAlgorithm.cs"];
m38_71 [label="string input = '' 12345678 ''", span="118-118", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromIntStringWithExtraWhiteSpace()", file="ETFGlobalRotationAlgorithm.cs"];
m38_73 [label="Assert.AreEqual(12345678m, value)", span="120-120", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromIntStringWithExtraWhiteSpace()", file="ETFGlobalRotationAlgorithm.cs"];
m38_74 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromIntStringWithExtraWhiteSpace()", span="116-116", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromIntStringWithExtraWhiteSpace()", file="ETFGlobalRotationAlgorithm.cs"];
m38_102 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDictionaryFromString()", span="164-164", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDictionaryFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_106 [label="CollectionAssert.AreEqual(expected, actual)", span="169-169", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDictionaryFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_103 [label="var expected = new Dictionary<string, int> {{''a'', 1}, {''b'', 2}}", span="166-166", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDictionaryFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_105 [label="var actual = input.ConvertTo<Dictionary<string, int>>()", span="168-168", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDictionaryFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_104 [label="var input = JsonConvert.SerializeObject(expected)", span="167-167", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDictionaryFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_107 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDictionaryFromString()", span="164-164", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDictionaryFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_38 [label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119", cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="ETFGlobalRotationAlgorithm.cs"];
m38_151 [label="Entry decimal.Normalize()", span="233-233", cluster="decimal.Normalize()", file="ETFGlobalRotationAlgorithm.cs"];
m38_147 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.NormalizeDecimalReturnsNoTrailingZeros(decimal, string)", span="223-223", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.NormalizeDecimalReturnsNoTrailingZeros(decimal, string)", file="ETFGlobalRotationAlgorithm.cs"];
m38_149 [label="Assert.AreEqual(expectedOutput, output.ToString(CultureInfo.InvariantCulture))", span="226-226", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.NormalizeDecimalReturnsNoTrailingZeros(decimal, string)", file="ETFGlobalRotationAlgorithm.cs"];
m38_148 [label="var output = input.Normalize()", span="225-225", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.NormalizeDecimalReturnsNoTrailingZeros(decimal, string)", file="ETFGlobalRotationAlgorithm.cs"];
m38_150 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.NormalizeDecimalReturnsNoTrailingZeros(decimal, string)", span="223-223", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.NormalizeDecimalReturnsNoTrailingZeros(decimal, string)", file="ETFGlobalRotationAlgorithm.cs"];
m38_109 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="ETFGlobalRotationAlgorithm.cs"];
m38_120 [label="Entry QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", span="163-163", cluster="QuantConnect.Extensions.Add<TKey, TElement, TCollection>(System.Collections.Generic.IDictionary<TKey, TCollection>, TKey, TElement)", file="ETFGlobalRotationAlgorithm.cs"];
m38_9 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="ETFGlobalRotationAlgorithm.cs"];
m38_111 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddsItemToExistsList()", span="173-173", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddsItemToExistsList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_116 [label="Assert.AreEqual(3, list.Count)", span="179-179", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddsItemToExistsList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_117 [label="Assert.AreEqual(3, list[2])", span="180-180", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddsItemToExistsList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_113 [label="var list = new List<int> {1, 2}", span="176-176", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddsItemToExistsList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_115 [label="Extensions.Add(dictionary, key, 3)", span="178-178", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddsItemToExistsList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_112 [label="int key = 0", span="175-175", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddsItemToExistsList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_114 [label="var dictionary = new Dictionary<int, List<int>> {{key, list}}", span="177-177", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddsItemToExistsList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_118 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddsItemToExistsList()", span="173-173", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DictionaryAddsItemToExistsList()", file="ETFGlobalRotationAlgorithm.cs"];
m38_30 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownSkipsWeekends()", span="65-65", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownSkipsWeekends()", file="ETFGlobalRotationAlgorithm.cs"];
m38_35 [label="Assert.AreEqual(expected, exchangeRounded)", span="71-71", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownSkipsWeekends()", color=green, community=0, file="ETFGlobalRotationAlgorithm.cs"];
m38_32 [label="var expected = new DateTime(2015, 05, 01)", span="68-68", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownSkipsWeekends()", file="ETFGlobalRotationAlgorithm.cs"];
m38_34 [label="var exchangeRounded = time.ExchangeRoundDown(Time.OneDay, hours, false)", span="70-70", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownSkipsWeekends()", file="ETFGlobalRotationAlgorithm.cs"];
m38_31 [label="var time = new DateTime(2015, 05, 02, 18, 01, 00)", span="67-67", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownSkipsWeekends()", file="ETFGlobalRotationAlgorithm.cs"];
m38_33 [label="var hours = MarketHoursDatabase.FromDataFolder().GetExchangeHours(Market.FXCM, null, SecurityType.Forex)", span="69-69", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownSkipsWeekends()", file="ETFGlobalRotationAlgorithm.cs"];
m38_36 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownSkipsWeekends()", span="65-65", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownSkipsWeekends()", file="ETFGlobalRotationAlgorithm.cs"];
m38_19 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="ETFGlobalRotationAlgorithm.cs"];
m38_3 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="39-39", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="ETFGlobalRotationAlgorithm.cs"];
m38_4 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.Dispose()", span="65-65", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.Dispose()", file="ETFGlobalRotationAlgorithm.cs"];
m38_52 [label="Entry string.ToInt32()", span="291-291", cluster="string.ToInt32()", file="ETFGlobalRotationAlgorithm.cs"];
m38_59 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromString()", span="100-100", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_62 [label="Assert.AreEqual(123.45678m, value)", span="104-104", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromString()", color=green, community=0, file="ETFGlobalRotationAlgorithm.cs"];
m38_61 [label="var value = input.ToDecimal()", span="103-103", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_60 [label="string input = ''123.45678''", span="102-102", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_63 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromString()", span="100-100", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_23 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.GetBetterTypeNameHandlesRecursiveGenericTypes()", span="56-56", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.GetBetterTypeNameHandlesRecursiveGenericTypes()", file="ETFGlobalRotationAlgorithm.cs"];
m38_27 [label="Assert.AreEqual(expected, actual)", span="61-61", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.GetBetterTypeNameHandlesRecursiveGenericTypes()", file="ETFGlobalRotationAlgorithm.cs"];
m38_25 [label="string expected = ''Dictionary<List<Int32>, Dictionary<Int32, String>>''", span="59-59", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.GetBetterTypeNameHandlesRecursiveGenericTypes()", file="ETFGlobalRotationAlgorithm.cs"];
m38_26 [label="var actual = type.GetBetterTypeName()", span="60-60", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.GetBetterTypeNameHandlesRecursiveGenericTypes()", file="ETFGlobalRotationAlgorithm.cs"];
m38_24 [label="var type = typeof (Dictionary<List<int>, Dictionary<int, string>>)", span="58-58", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.GetBetterTypeNameHandlesRecursiveGenericTypes()", file="ETFGlobalRotationAlgorithm.cs"];
m38_28 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.GetBetterTypeNameHandlesRecursiveGenericTypes()", span="56-56", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.GetBetterTypeNameHandlesRecursiveGenericTypes()", file="ETFGlobalRotationAlgorithm.cs"];
m38_137 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsUpperBound()", span="204-204", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsUpperBound()", file="ETFGlobalRotationAlgorithm.cs"];
m38_140 [label="Assert.AreEqual(decimal.MaxValue, output)", span="208-208", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsUpperBound()", file="ETFGlobalRotationAlgorithm.cs"];
m38_139 [label="var output = input.SafeDecimalCast()", span="207-207", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsUpperBound()", file="ETFGlobalRotationAlgorithm.cs"];
m38_138 [label="var input = (double) decimal.MaxValue", span="206-206", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsUpperBound()", file="ETFGlobalRotationAlgorithm.cs"];
m38_141 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsUpperBound()", span="204-204", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCastRespectsUpperBound()", file="ETFGlobalRotationAlgorithm.cs"];
m38_5 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", span="34-34", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="ETFGlobalRotationAlgorithm.cs"];
m38_21 [label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="470-470", cluster="System.DateTime.RoundDown(System.TimeSpan)", file="ETFGlobalRotationAlgorithm.cs"];
m38_110 [label="Entry Unk.>", span="", cluster="Unk.>", file="ETFGlobalRotationAlgorithm.cs"];
m38_152 [label="Entry decimal.ToString(System.IFormatProvider)", span="0-0", cluster="decimal.ToString(System.IFormatProvider)", file="ETFGlobalRotationAlgorithm.cs"];
m38_80 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsOneNumberDecimalFromString()", span="132-132", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsOneNumberDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_83 [label="Assert.AreEqual(1.45678m, value)", span="136-136", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsOneNumberDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_82 [label="var value = input.ToDecimal()", span="135-135", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsOneNumberDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_81 [label="string input = ''1.45678''", span="134-134", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsOneNumberDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_84 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsOneNumberDecimalFromString()", span="132-132", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsOneNumberDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_131 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCasts()", span="196-196", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCasts()", file="ETFGlobalRotationAlgorithm.cs"];
m38_134 [label="Assert.AreEqual(2m, output)", span="200-200", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCasts()", file="ETFGlobalRotationAlgorithm.cs"];
m38_133 [label="var output = input.SafeDecimalCast()", span="199-199", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCasts()", file="ETFGlobalRotationAlgorithm.cs"];
m38_132 [label="var input = 2d", span="198-198", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCasts()", file="ETFGlobalRotationAlgorithm.cs"];
m38_135 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCasts()", span="196-196", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.SafeDecimalCasts()", file="ETFGlobalRotationAlgorithm.cs"];
m38_136 [label="Entry double.SafeDecimalCast()", span="226-226", cluster="double.SafeDecimalCast()", file="ETFGlobalRotationAlgorithm.cs"];
m38_22 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ETFGlobalRotationAlgorithm.cs"];
m38_20 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="ETFGlobalRotationAlgorithm.cs"];
m38_39 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="95-95", cluster="QuantConnect.Securities.MarketHoursDatabase.GetExchangeHours(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="ETFGlobalRotationAlgorithm.cs"];
m38_40 [label="Entry System.DateTime.ExchangeRoundDown(System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", span="492-492", cluster="System.DateTime.ExchangeRoundDown(System.TimeSpan, QuantConnect.Securities.SecurityExchangeHours, bool)", file="ETFGlobalRotationAlgorithm.cs"];
m38_29 [label="Entry System.Type.GetBetterTypeName()", span="660-660", cluster="System.Type.GetBetterTypeName()", file="ETFGlobalRotationAlgorithm.cs"];
m38_37 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="ETFGlobalRotationAlgorithm.cs"];
m38_14 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", span="48-48", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="ETFGlobalRotationAlgorithm.cs"];
m38_17 [label="Assert.AreEqual(date, rounded)", span="52-52", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="ETFGlobalRotationAlgorithm.cs"];
m38_15 [label="var date = new DateTime(2000, 01, 01)", span="50-50", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="ETFGlobalRotationAlgorithm.cs"];
m38_16 [label="var rounded = date.RoundDown(TimeSpan.FromDays(1))", span="51-51", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="ETFGlobalRotationAlgorithm.cs"];
m38_18 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", span="48-48", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.DateTimeRoundDownFullDayDoesntRoundDownByDay()", file="ETFGlobalRotationAlgorithm.cs"];
m38_64 [label="Entry string.ToDecimal()", span="248-248", cluster="string.ToDecimal()", file="ETFGlobalRotationAlgorithm.cs"];
m38_41 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownHandlesMarketOpenTime()", span="75-75", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownHandlesMarketOpenTime()", file="ETFGlobalRotationAlgorithm.cs"];
m38_45 [label="var exchangeRounded = time.ExchangeRoundDown(Time.OneDay, hours, false)", span="80-80", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownHandlesMarketOpenTime()", file="ETFGlobalRotationAlgorithm.cs"];
m38_42 [label="var time = new DateTime(2016, 1, 25, 9, 31, 0)", span="77-77", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownHandlesMarketOpenTime()", file="ETFGlobalRotationAlgorithm.cs"];
m38_44 [label="var hours = MarketHoursDatabase.FromDataFolder().GetExchangeHours(Market.USA, null, SecurityType.Equity)", span="79-79", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownHandlesMarketOpenTime()", file="ETFGlobalRotationAlgorithm.cs"];
m38_43 [label="var expected = time.Date", span="78-78", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownHandlesMarketOpenTime()", file="ETFGlobalRotationAlgorithm.cs"];
m38_46 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownHandlesMarketOpenTime()", span="75-75", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ExchangeRoundDownHandlesMarketOpenTime()", file="ETFGlobalRotationAlgorithm.cs"];
m38_108 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ETFGlobalRotationAlgorithm.cs"];
m38_65 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromStringWithExtraWhiteSpace()", span="108-108", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromStringWithExtraWhiteSpace()", file="ETFGlobalRotationAlgorithm.cs"];
m38_68 [label="Assert.AreEqual(123.45678m, value)", span="112-112", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromStringWithExtraWhiteSpace()", file="ETFGlobalRotationAlgorithm.cs"];
m38_67 [label="var value = input.ToDecimal()", span="111-111", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromStringWithExtraWhiteSpace()", file="ETFGlobalRotationAlgorithm.cs"];
m38_66 [label="string input = '' 123.45678 ''", span="110-110", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromStringWithExtraWhiteSpace()", file="ETFGlobalRotationAlgorithm.cs"];
m38_69 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromStringWithExtraWhiteSpace()", span="108-108", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsDecimalFromStringWithExtraWhiteSpace()", file="ETFGlobalRotationAlgorithm.cs"];
m38_7 [label="Assert.IsFalse(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<bool>)))", span="37-37", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", color=green, community=0, file="ETFGlobalRotationAlgorithm.cs"];
m38_6 [label="Assert.IsTrue(typeof(Derived1).IsSubclassOfGeneric(typeof(Super<int>)))", span="36-36", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="ETFGlobalRotationAlgorithm.cs"];
m38_8 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", span="34-34", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.IsSubclassOfGenericWorksForGenericTypeWithParameter()", file="ETFGlobalRotationAlgorithm.cs"];
m38_75 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalFromString()", span="124-124", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_78 [label="Assert.AreEqual(0.45678m, value)", span="128-128", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_77 [label="var value = input.ToDecimal()", span="127-127", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_76 [label="string input = ''0.45678''", span="126-126", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_79 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalFromString()", span="124-124", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsZeroDecimalFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_90 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsEmptyDecimalValueFromString()", span="148-148", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsEmptyDecimalValueFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_93 [label="Assert.AreEqual(0m, value)", span="152-152", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsEmptyDecimalValueFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_92 [label="var value = input.ToDecimal()", span="151-151", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsEmptyDecimalValueFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_91 [label="string input = ''''", span="150-150", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsEmptyDecimalValueFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_94 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsEmptyDecimalValueFromString()", span="148-148", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsEmptyDecimalValueFromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_53 [label="Entry QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt64FromString()", span="92-92", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt64FromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_54 [label="string input = ''12345678900''", span="94-94", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt64FromString()", color=green, community=0, file="ETFGlobalRotationAlgorithm.cs"];
m38_55 [label="var value = input.ToInt64()", span="95-95", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt64FromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_56 [label="Assert.AreEqual(12345678900, value)", span="96-96", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt64FromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_57 [label="Exit QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt64FromString()", span="92-92", cluster="QuantConnect.Tests.Common.Util.ExtensionsTests.ConvertsInt64FromString()", file="ETFGlobalRotationAlgorithm.cs"];
m38_100 [label="Entry string.ConvertTo<T>()", span="703-703", cluster="string.ConvertTo<T>()", file="ETFGlobalRotationAlgorithm.cs"];
m38_58 [label="Entry string.ToInt64()", span="307-307", cluster="string.ToInt64()", file="ETFGlobalRotationAlgorithm.cs"];
m39_41 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_20 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_21 [label="x.OptionChains.SelectMany(y => y.Value.Contracts.Keys.Select(z => (double)z.ID.StrikePrice).Distinct())", span="58-58", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_22 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_23 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_24 [label="y.Value.Contracts.Keys.Select(z => (double)z.ID.StrikePrice).Distinct()", span="58-58", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_25 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_27 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_28 [label="(double)z.ID.StrikePrice", span="58-58", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_29 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_35 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_36 [label="x.OptionChains.SelectMany(y => y.Value.Contracts.Keys.Select(z => z.ID.Date).Distinct())", span="71-71", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_37 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_38 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_39 [label="y.Value.Contracts.Keys.Select(z => z.ID.Date).Distinct()", span="71-71", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_40 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_42 [label="z.ID.Date", span="71-71", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_43 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="FilteredIdentityAlgorithm.cs"];
m39_19 [label="Entry Unk.ToPython", span="", cluster="Unk.ToPython", file="FilteredIdentityAlgorithm.cs"];
m39_6 [label="Entry QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="61-61", cluster="QuantConnect.Python.PandasConverter.GetDataFrame(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="FilteredIdentityAlgorithm.cs"];
m39_15 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="FilteredIdentityAlgorithm.cs"];
m39_47 [label="Entry QuantConnect.Python.PandasConverter.ToString()", span="159-159", cluster="QuantConnect.Python.PandasConverter.ToString()", file="FilteredIdentityAlgorithm.cs"];
m39_5 [label="Entry QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", span="36-36", cluster="QuantConnect.Python.PandasConverter.PandasConverter(PyObject)", file="FilteredIdentityAlgorithm.cs"];
m39_0 [label="Entry QuantConnect.Jupyter.OptionHistory.OptionHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="36-36", cluster="QuantConnect.Jupyter.OptionHistory.OptionHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="FilteredIdentityAlgorithm.cs"];
m39_1 [label="_data = data", span="38-38", cluster="QuantConnect.Jupyter.OptionHistory.OptionHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", color=red, community=0, file="FilteredIdentityAlgorithm.cs"];
m39_2 [label="_converter = new PandasConverter()", span="39-39", cluster="QuantConnect.Jupyter.OptionHistory.OptionHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="FilteredIdentityAlgorithm.cs"];
m39_3 [label="_dataframe = _converter.GetDataFrame(_data)", span="40-40", cluster="QuantConnect.Jupyter.OptionHistory.OptionHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="FilteredIdentityAlgorithm.cs"];
m39_4 [label="Exit QuantConnect.Jupyter.OptionHistory.OptionHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", span="36-36", cluster="QuantConnect.Jupyter.OptionHistory.OptionHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>)", file="FilteredIdentityAlgorithm.cs"];
m39_30 [label="Entry QuantConnect.Jupyter.OptionHistory.GetExpiryDates()", span="69-69", cluster="QuantConnect.Jupyter.OptionHistory.GetExpiryDates()", file="FilteredIdentityAlgorithm.cs"];
m39_31 [label="var expiry = _data.SelectMany(x => x.OptionChains.SelectMany(y => y.Value.Contracts.Keys.Select(z => z.ID.Date).Distinct()))", span="71-71", cluster="QuantConnect.Jupyter.OptionHistory.GetExpiryDates()", file="FilteredIdentityAlgorithm.cs"];
m39_32 [label="Py.GIL()", span="72-72", cluster="QuantConnect.Jupyter.OptionHistory.GetExpiryDates()", file="FilteredIdentityAlgorithm.cs"];
m39_33 [label="return expiry.Distinct().ToList().ToPython();", span="74-74", cluster="QuantConnect.Jupyter.OptionHistory.GetExpiryDates()", file="FilteredIdentityAlgorithm.cs"];
m39_34 [label="Exit QuantConnect.Jupyter.OptionHistory.GetExpiryDates()", span="69-69", cluster="QuantConnect.Jupyter.OptionHistory.GetExpiryDates()", file="FilteredIdentityAlgorithm.cs"];
m39_44 [label="Entry QuantConnect.Jupyter.OptionHistory.ToString()", span="82-82", cluster="QuantConnect.Jupyter.OptionHistory.ToString()", file="FilteredIdentityAlgorithm.cs"];
m39_45 [label="return _converter.ToString();", span="84-84", cluster="QuantConnect.Jupyter.OptionHistory.ToString()", file="FilteredIdentityAlgorithm.cs"];
m39_46 [label="Exit QuantConnect.Jupyter.OptionHistory.ToString()", span="82-82", cluster="QuantConnect.Jupyter.OptionHistory.ToString()", file="FilteredIdentityAlgorithm.cs"];
m39_10 [label="Entry QuantConnect.Jupyter.OptionHistory.GetStrikes()", span="56-56", cluster="QuantConnect.Jupyter.OptionHistory.GetStrikes()", file="FilteredIdentityAlgorithm.cs"];
m39_11 [label="var strikes = _data.SelectMany(x => x.OptionChains.SelectMany(y => y.Value.Contracts.Keys.Select(z => (double)z.ID.StrikePrice).Distinct()))", span="58-58", cluster="QuantConnect.Jupyter.OptionHistory.GetStrikes()", file="FilteredIdentityAlgorithm.cs"];
m39_12 [label="Py.GIL()", span="59-59", cluster="QuantConnect.Jupyter.OptionHistory.GetStrikes()", file="FilteredIdentityAlgorithm.cs"];
m39_13 [label="return strikes.Distinct().ToList().ToPython();", span="61-61", cluster="QuantConnect.Jupyter.OptionHistory.GetStrikes()", file="FilteredIdentityAlgorithm.cs"];
m39_14 [label="Exit QuantConnect.Jupyter.OptionHistory.GetStrikes()", span="56-56", cluster="QuantConnect.Jupyter.OptionHistory.GetStrikes()", file="FilteredIdentityAlgorithm.cs"];
m39_18 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="FilteredIdentityAlgorithm.cs"];
m39_16 [label="Entry Unk.GIL", span="", cluster="Unk.GIL", file="FilteredIdentityAlgorithm.cs"];
m39_17 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct", file="FilteredIdentityAlgorithm.cs"];
m39_7 [label="Entry QuantConnect.Jupyter.OptionHistory.GetAllData()", span="47-47", cluster="QuantConnect.Jupyter.OptionHistory.GetAllData()", file="FilteredIdentityAlgorithm.cs"];
m39_8 [label="return _dataframe;", span="49-49", cluster="QuantConnect.Jupyter.OptionHistory.GetAllData()", file="FilteredIdentityAlgorithm.cs"];
m39_9 [label="Exit QuantConnect.Jupyter.OptionHistory.GetAllData()", span="47-47", cluster="QuantConnect.Jupyter.OptionHistory.GetAllData()", file="FilteredIdentityAlgorithm.cs"];
m39_48 [label="QuantConnect.Jupyter.OptionHistory", span="", file="FilteredIdentityAlgorithm.cs"];
m42_0 [label="Entry QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", span="48-48", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", file="FuzzyInferenceAlgorithm.cs"];
m42_1 [label="SetStartDate(2015, 01, 01)", span="50-50", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", file="FuzzyInferenceAlgorithm.cs"];
m42_78 [label="Entry Unk.AddVariable", span="", cluster="Unk.AddVariable", file="FuzzyInferenceAlgorithm.cs"];
m42_2 [label="SetEndDate(2015, 06, 30)", span="51-51", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", file="FuzzyInferenceAlgorithm.cs"];
m42_3 [label="SetCash(100000)", span="52-52", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", file="FuzzyInferenceAlgorithm.cs"];
m42_77 [label="Entry Database.cstr", span="", cluster="Database.cstr", file="FuzzyInferenceAlgorithm.cs"];
m42_36 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", span="85-85", cluster="QuantConnect.Algorithm.QCAlgorithm.Sell(QuantConnect.Symbol, int)", file="FuzzyInferenceAlgorithm.cs"];
m42_4 [label="AddEquity(_symbol, Resolution.Daily)", span="53-53", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_5 [label="_rsi = RSI(_symbol, 14, MovingAverageType.Simple, Resolution.Daily)", span="55-55", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_6 [label="_mom = MOM(_symbol, 10, Resolution.Daily, Field.Close)", span="56-56", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_7 [label="_engine = new FuzzyEngine()", span="58-58", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_8 [label="Exit QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", span="48-48", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.Initialize()", file="FuzzyInferenceAlgorithm.cs"];
m42_16 [label="Entry QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="61-61", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FuzzyInferenceAlgorithm.cs"];
m42_17 [label="_rsi.IsReady && _mom.IsReady", span="63-63", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_18 [label="var signal = _engine.DoInference((float)_mom.Current.Value, (float)_rsi.Current.Value)", span="67-67", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_21 [label="var quantity = decimal.ToInt32(Portfolio.MarginRemaining / data[_symbol].Price)", span="73-73", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_20 [label="signal > 30", span="71-71", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FuzzyInferenceAlgorithm.cs"];
m42_22 [label="Buy(_symbol, quantity)", span="74-74", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_23 [label="Debug(''Purchased Stock: '' + quantity + '' shares'')", span="75-75", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FuzzyInferenceAlgorithm.cs"];
m42_19 [label="!Portfolio.Invested", span="69-69", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FuzzyInferenceAlgorithm.cs"];
m42_24 [label="signal < -10", span="80-80", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FuzzyInferenceAlgorithm.cs"];
m42_25 [label="var quantity = decimal.ToInt32(Portfolio[_symbol].Quantity)", span="82-82", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_26 [label="Sell(_symbol, quantity)", span="83-83", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_27 [label="Debug(''Sold Stock: '' + quantity + '' shares'')", span="84-84", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FuzzyInferenceAlgorithm.cs"];
m42_30 [label="Debug(''## rsi: '' + _rsi + '' mom: '' + _mom)", span="91-91", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_29 [label="Debug(''Ex: '' + ex.Message)", span="90-90", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FuzzyInferenceAlgorithm.cs"];
m42_28 [label=Exception, span="88-88", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FuzzyInferenceAlgorithm.cs"];
m42_31 [label="Exit QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="61-61", cluster="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="FuzzyInferenceAlgorithm.cs"];
m42_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="754-754", cluster="QuantConnect.Algorithm.QCAlgorithm.MOM(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FuzzyInferenceAlgorithm.cs"];
m42_79 [label="Entry InferenceSystem.cstr", span="", cluster="InferenceSystem.cstr", file="FuzzyInferenceAlgorithm.cs"];
m42_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1344-1344", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="FuzzyInferenceAlgorithm.cs"];
m42_34 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="FuzzyInferenceAlgorithm.cs"];
m42_76 [label="Entry Unk.AddLabel", span="", cluster="Unk.AddLabel", file="FuzzyInferenceAlgorithm.cs"];
m42_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="942-942", cluster="QuantConnect.Algorithm.QCAlgorithm.RSI(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="FuzzyInferenceAlgorithm.cs"];
m42_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="FuzzyInferenceAlgorithm.cs"];
m42_32 [label="Entry QuantConnect.Algorithm.CSharp.FuzzyEngine.DoInference(float, float)", span="161-161", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.DoInference(float, float)", file="FuzzyInferenceAlgorithm.cs"];
m42_82 [label="IS.SetInput(''MOM'', mom)", span="164-164", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.DoInference(float, float)", file="FuzzyInferenceAlgorithm.cs"];
m42_83 [label="IS.SetInput(''RSI'', rsi)", span="165-165", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.DoInference(float, float)", file="FuzzyInferenceAlgorithm.cs"];
m42_85 [label="return signal;", span="170-170", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.DoInference(float, float)", file="FuzzyInferenceAlgorithm.cs"];
m42_84 [label="double signal = IS.Evaluate(''Signal'')", span="168-168", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.DoInference(float, float)", file="FuzzyInferenceAlgorithm.cs"];
m42_86 [label="Exit QuantConnect.Algorithm.CSharp.FuzzyEngine.DoInference(float, float)", span="161-161", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.DoInference(float, float)", file="FuzzyInferenceAlgorithm.cs"];
m42_35 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="FuzzyInferenceAlgorithm.cs"];
m42_87 [label="Entry Unk.SetInput", span="", cluster="Unk.SetInput", file="FuzzyInferenceAlgorithm.cs"];
m42_88 [label="Entry Unk.Evaluate", span="", cluster="Unk.Evaluate", file="FuzzyInferenceAlgorithm.cs"];
m42_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="FuzzyInferenceAlgorithm.cs"];
m42_15 [label="Entry QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", span="102-102", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_37 [label="var momDown = new FuzzySet(''Down'', new TrapezoidalFunction(-20, 5, 5, 5))", span="105-105", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_38 [label="var momNeutral = new FuzzySet(''Neutral'', new TrapezoidalFunction(-20, 0, 0, 20))", span="106-106", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_44 [label="lvMom.AddLabel(momDown)", span="117-117", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_39 [label="var momUp = new FuzzySet(''Up'', new TrapezoidalFunction(5, 20, 20, 20))", span="107-107", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_45 [label="lvMom.AddLabel(momNeutral)", span="118-118", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_40 [label="var rsiLow = new FuzzySet(''Low'', new TrapezoidalFunction(0, 30, 30, 30))", span="111-111", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_46 [label="lvMom.AddLabel(momUp)", span="119-119", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_41 [label="var rsiMedium = new FuzzySet(''Medium'', new TrapezoidalFunction(0, 50, 50, 100))", span="112-112", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_48 [label="lvRsi.AddLabel(rsiLow)", span="123-123", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_42 [label="var rsiHigh = new FuzzySet(''High'', new TrapezoidalFunction(70, 100, 100, 100))", span="113-113", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_49 [label="lvRsi.AddLabel(rsiMedium)", span="124-124", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_43 [label="var lvMom = new LinguisticVariable(''MOM'', -20, 20)", span="116-116", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_50 [label="lvRsi.AddLabel(rsiHigh)", span="125-125", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_59 [label="fuzzyDB.AddVariable(lvMom)", span="140-140", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_47 [label="var lvRsi = new LinguisticVariable(''RSI'', 0, 100)", span="122-122", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_60 [label="fuzzyDB.AddVariable(lvRsi)", span="141-141", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_51 [label="var fsShort = new FuzzySet(''Sell'', new TrapezoidalFunction(-100, 0, 0, 00))", span="128-128", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_52 [label="var fsHold = new FuzzySet(''Hold'', new TrapezoidalFunction(-50, 0, 0, 50))", span="129-129", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_55 [label="lvSignal.AddLabel(fsShort)", span="134-134", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_53 [label="var fsLong = new FuzzySet(''Buy'', new TrapezoidalFunction(0, 100, 100, 100))", span="130-130", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_56 [label="lvSignal.AddLabel(fsHold)", span="135-135", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_54 [label="var lvSignal = new LinguisticVariable(''Signal'', -100, 100)", span="133-133", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_57 [label="lvSignal.AddLabel(fsLong)", span="136-136", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_61 [label="fuzzyDB.AddVariable(lvSignal)", span="142-142", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_58 [label="var fuzzyDB = new Database()", span="139-139", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", color=green, community=0, file="FuzzyInferenceAlgorithm.cs"];
m42_62 [label="IS = new InferenceSystem(fuzzyDB, new CentroidDefuzzifier(1000))", span="145-145", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_63 [label="IS.NewRule(''Rule 1'', ''IF RSI IS Low AND MOM IS Down THEN Signal IS Buy'')", span="148-148", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_71 [label="IS.NewRule(''Rule 9'', ''IF RSI IS High AND MOM IS Up THEN Signal IS Sell'')", span="158-158", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_64 [label="IS.NewRule(''Rule 2'', ''IF RSI IS Medium AND MOM IS Down THEN Signal IS Buy'')", span="149-149", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_65 [label="IS.NewRule(''Rule 3'', ''IF RSI IS High AND MOM IS Down THEN Signal IS Hold'')", span="150-150", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_66 [label="IS.NewRule(''Rule 4'', ''IF RSI IS Low AND MOM IS Neutral THEN Signal IS Buy'')", span="152-152", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_67 [label="IS.NewRule(''Rule 5'', ''IF RSI IS Medium AND MOM IS Neutral THEN Signal IS Hold'')", span="153-153", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_68 [label="IS.NewRule(''Rule 6'', ''IF RSI IS High AND MOM IS Neutral THEN Signal IS Sell'')", span="154-154", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_69 [label="IS.NewRule(''Rule 7'', ''IF RSI IS Low AND MOM IS Up THEN Signal IS Hold'')", span="156-156", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_70 [label="IS.NewRule(''Rule 8'', ''IF RSI IS Medium AND MOM IS Up THEN Signal IS Sell'')", span="157-157", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_72 [label="Exit QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", span="102-102", cluster="QuantConnect.Algorithm.CSharp.FuzzyEngine.FuzzyEngine()", file="FuzzyInferenceAlgorithm.cs"];
m42_80 [label="Entry CentroidDefuzzifier.cstr", span="", cluster="CentroidDefuzzifier.cstr", file="FuzzyInferenceAlgorithm.cs"];
m42_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="FuzzyInferenceAlgorithm.cs"];
m42_81 [label="Entry Unk.NewRule", span="", cluster="Unk.NewRule", file="FuzzyInferenceAlgorithm.cs"];
m42_75 [label="Entry LinguisticVariable.cstr", span="", cluster="LinguisticVariable.cstr", file="FuzzyInferenceAlgorithm.cs"];
m42_33 [label="Entry decimal.ToInt32(decimal)", span="0-0", cluster="decimal.ToInt32(decimal)", file="FuzzyInferenceAlgorithm.cs"];
m42_73 [label="Entry FuzzySet.cstr", span="", cluster="FuzzySet.cstr", file="FuzzyInferenceAlgorithm.cs"];
m42_74 [label="Entry TrapezoidalFunction.cstr", span="", cluster="TrapezoidalFunction.cstr", file="FuzzyInferenceAlgorithm.cs"];
m42_89 [label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm", span="", file="FuzzyInferenceAlgorithm.cs"];
m42_90 [label="QuantConnect.Algorithm.CSharp.FuzzyEngine", span="", file="FuzzyInferenceAlgorithm.cs"];
m43_75 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="HistoryAlgorithm.cs"];
m43_82 [label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", span="148-148", cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="HistoryAlgorithm.cs"];
m43_20 [label="quandlHistory = History<QuandlFuture>(''CHRIS/CME_SP1'', 14)", span="80-80", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_21 [label="AssertHistoryCount(''History<Quandl>(\''CHRIS/CME_SP1\'', 14)'', quandlHistory, 14)", span="81-81", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", color=green, community=0, file="HistoryAlgorithm.cs"];
m43_22 [label="spyDailySma.Reset()", span="87-87", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs", color=red, community=0];
m43_63 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1567-1567", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="HistoryAlgorithm.cs"];
m43_14 [label="tradeBarHistory = History<TradeBar>(''SPY'', 14, Resolution.Minute)", span="65-65", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_69 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="270-270", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="HistoryAlgorithm.cs"];
m43_92 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="HistoryAlgorithm.cs"];
m43_83 [label="Entry System.Collections.Generic.IEnumerable<decimal>.ToDoubleArray()", span="166-166", cluster="System.Collections.Generic.IEnumerable<decimal>.ToDoubleArray()", file="HistoryAlgorithm.cs"];
m43_17 [label="spyDailySma.Update(tradeBar.EndTime, tradeBar.Close)", span="72-72", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs", color=red, community=0];
m43_18 [label="var quandlHistory = History<QuandlFuture>(''CHRIS/CME_SP1'', TimeSpan.FromDays(365))", span="76-76", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_19 [label="AssertHistoryCount(''History<Quandl>(\''CHRIS/CME_SP1\'', TimeSpan.FromDays(365))'', quandlHistory, 250)", span="77-77", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_77 [label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>.Get<T>(QuantConnect.Symbol, string)", span="82-82", cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>.Get<T>(QuantConnect.Symbol, string)", file="HistoryAlgorithm.cs"];
m43_13 [label="AssertHistoryCount(''History<TradeBar>(\''SPY\'', 14)'', tradeBarHistory, 14)", span="62-62", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_59 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="HistoryAlgorithm.cs"];
m43_65 [label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", span="56-56", cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", file="HistoryAlgorithm.cs"];
m43_64 [label="Entry QuantConnect.Securities.Equity.EquityExchange.EquityExchange()", span="35-35", cluster="QuantConnect.Securities.Equity.EquityExchange.EquityExchange()", file="HistoryAlgorithm.cs"];
m43_80 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="HistoryAlgorithm.cs"];
m43_94 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="HistoryAlgorithm.cs"];
m43_74 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="HistoryAlgorithm.cs"];
m43_81 [label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134", cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="HistoryAlgorithm.cs"];
m43_78 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="HistoryAlgorithm.cs"];
m43_70 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="HistoryAlgorithm.cs"];
m43_15 [label="AssertHistoryCount(''History<TradeBar>(\''SPY\'', 14, Resolution.Minute)'', tradeBarHistory, 14)", span="66-66", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_60 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="HistoryAlgorithm.cs"];
m43_67 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="HistoryAlgorithm.cs"];
m43_73 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153", cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="HistoryAlgorithm.cs"];
m43_76 [label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>.Get<T>(QuantConnect.Symbol)", span="68-68", cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>.Get<T>(QuantConnect.Symbol)", file="HistoryAlgorithm.cs"];
m43_16 [label=tradeBarHistory, span="70-70", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_0 [label="Entry QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", span="37-37", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_3 [label="SetCash(100000)", span="41-41", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", color=green, community=0, file="HistoryAlgorithm.cs"];
m43_2 [label="SetEndDate(2013, 10, 11)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_4 [label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Daily)", span="44-44", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", color=green, community=0, file="HistoryAlgorithm.cs"];
m43_1 [label="SetStartDate(2013, 10, 08)", span="39-39", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_5 [label="AddData<QuandlFuture>(''CHRIS/CME_SP1'', Resolution.Daily)", span="45-45", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_8 [label="var tradeBarHistory = History<TradeBar>(''SPY'', TimeSpan.FromDays(365))", span="53-53", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_11 [label="AssertHistoryCount(''History<TradeBar>(\''SPY\'', TimeSpan.FromDays(1), Resolution.Minute)'', tradeBarHistory, 390)", span="58-58", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_6 [label="Securities[''CHRIS/CME_SP1''].Exchange = new EquityExchange()", span="47-47", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_7 [label="spyDailySma = new SimpleMovingAverage(14)", span="50-50", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs", color=red, community=0];
m43_9 [label="AssertHistoryCount(''History<TradeBar>(\''SPY\'', TimeSpan.FromDays(365))'', tradeBarHistory, 250)", span="54-54", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_10 [label="tradeBarHistory = History<TradeBar>(''SPY'', TimeSpan.FromDays(1), Resolution.Minute)", span="57-57", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_12 [label="tradeBarHistory = History<TradeBar>(''SPY'', 14).ToList()", span="61-61", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_23 [label=quandlHistory, span="88-88", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_24 [label="spyDailySma.Update(quandl.EndTime, quandl.Value)", span="90-90", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", color=red, community=0, file="HistoryAlgorithm.cs"];
m43_25 [label="var allQuandlData = History<QuandlFuture>(TimeSpan.FromDays(365))", span="94-94", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_26 [label="AssertHistoryCount(''History<QuandlFuture>(TimeSpan.FromDays(365))'', allQuandlData, 250)", span="95-95", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_27 [label="allQuandlData = History<QuandlFuture>(Securities.Keys, 14)", span="98-98", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_28 [label="AssertHistoryCount(''History<QuandlFuture>(Securities.Keys, 14)'', allQuandlData, 14)", span="99-99", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_29 [label="allQuandlData = History<QuandlFuture>(Securities.Keys, TimeSpan.FromDays(365))", span="112-112", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_30 [label="AssertHistoryCount(''History<QuandlFuture>(Securities.Keys, TimeSpan.FromDays(365))'', allQuandlData, 250)", span="113-113", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_31 [label=allQuandlData, span="117-117", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_33 [label="var singleSymbolQuandl = allQuandlData.Get(''CHRIS/CME_SP1'')", span="125-125", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_36 [label="var quandlSpyLows = allQuandlData.Get(''CHRIS/CME_SP1'', ''Low'')", span="134-134", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_32 [label="var quandl = quandlsDataDictionary[''CHRIS/CME_SP1'']", span="120-120", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_34 [label="AssertHistoryCount(''allQuandlData.Get(\''CHRIS/CME_SP1\'')'', singleSymbolQuandl, 250)", span="126-126", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_35 [label=singleSymbolQuandl, span="127-127", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_37 [label="AssertHistoryCount(''allQuandlData.Get(\''CHRIS/CME_SP1\'', \''Low\'')'', quandlSpyLows, 250)", span="135-135", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_38 [label=quandlSpyLows, span="136-136", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_39 [label="var allHistory = History(TimeSpan.FromDays(365))", span="144-144", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_40 [label="AssertHistoryCount(''History(TimeSpan.FromDays(365))'', allHistory, 250)", span="145-145", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_41 [label="allHistory = History(TimeSpan.FromDays(1), Resolution.Minute)", span="148-148", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_42 [label="AssertHistoryCount(''History(TimeSpan.FromDays(1), Resolution.Minute)'', allHistory, 391)", span="149-149", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_43 [label="allHistory = History(Securities.Keys, 100)", span="152-152", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_44 [label="AssertHistoryCount(''History(Securities.Keys, 100)'', allHistory, 100)", span="153-153", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_45 [label="allHistory = History(Securities.Keys, 100, Resolution.Minute)", span="156-156", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_46 [label="AssertHistoryCount(''History(Securities.Keys, 100, Resolution.Minute)'', allHistory, 101)", span="157-157", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_47 [label="allHistory = History(Securities.Keys, TimeSpan.FromDays(365))", span="160-160", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_48 [label="AssertHistoryCount(''History(Securities.Keys, TimeSpan.FromDays(365))'', allHistory, 250)", span="161-161", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_49 [label="allHistory = History(Securities.Keys, TimeSpan.FromDays(1), Resolution.Minute)", span="163-163", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_50 [label="AssertHistoryCount(''History(Securities.Keys, TimeSpan.FromDays(1), Resolution.Minute)'', allHistory, 391)", span="164-164", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_51 [label=allHistory, span="167-167", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_52 [label="tradeBarHistory = allHistory.Get<TradeBar>(''SPY'')", span="176-176", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_54 [label="var closeHistory = allHistory.Get(''SPY'', Field.Close)", span="180-180", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_53 [label="AssertHistoryCount(''allHistory.Get(\''SPY\'')'', tradeBarHistory, 390)", span="177-177", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_55 [label="AssertHistoryCount(''allHistory.Get(\''SPY\'', Field.Close)'', closeHistory, 390)", span="181-181", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_56 [label=closeHistory, span="182-182", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_57 [label="double[] doubleArray = closeHistory.ToDoubleArray()", span="188-188", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_58 [label="Exit QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", span="37-37", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="HistoryAlgorithm.cs"];
m43_61 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="HistoryAlgorithm.cs"];
m43_79 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373", cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="HistoryAlgorithm.cs"];
m43_68 [label="Entry QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", span="211-211", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", file="HistoryAlgorithm.cs"];
m43_95 [label="var count = tradeBarHistory.Count()", span="213-213", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", file="HistoryAlgorithm.cs"];
m43_96 [label="count != expected", span="214-214", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", file="HistoryAlgorithm.cs"];
m43_97 [label="throw new Exception(methodCall + '' expected '' + expected + '', but received '' + count);", span="216-216", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", file="HistoryAlgorithm.cs"];
m43_98 [label="Exit QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", span="211-211", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", file="HistoryAlgorithm.cs"];
m43_71 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="36-36", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="HistoryAlgorithm.cs"];
m43_84 [label="Entry QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", span="195-195", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="HistoryAlgorithm.cs"];
m43_85 [label="_count++", span="197-197", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="HistoryAlgorithm.cs"];
m43_86 [label="_count > 5", span="199-199", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="HistoryAlgorithm.cs"];
m43_87 [label="throw new Exception(''Invalid number of bars arrived. Expected exactly 5'');", span="201-201", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="HistoryAlgorithm.cs"];
m43_88 [label="!Portfolio.Invested", span="204-204", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="HistoryAlgorithm.cs"];
m43_89 [label="SetHoldings(''SPY'', 1)", span="206-206", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="HistoryAlgorithm.cs"];
m43_90 [label="Debug(''Purchased Stock'')", span="207-207", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="HistoryAlgorithm.cs"];
m43_91 [label="Exit QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", span="195-195", cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="HistoryAlgorithm.cs"];
m43_62 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="HistoryAlgorithm.cs"];
m43_72 [label="Entry QuantConnect.Indicators.SimpleMovingAverage.Reset()", span="36-36", cluster="QuantConnect.Indicators.SimpleMovingAverage.Reset()", file="HistoryAlgorithm.cs"];
m43_99 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="HistoryAlgorithm.cs"];
m43_93 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="HistoryAlgorithm.cs"];
m43_100 [label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", span="", file="HistoryAlgorithm.cs"];
m44_31 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_27 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_112 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Min<TSource, TResult>(System.Func<TSource, TResult>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Min<TSource, TResult>(System.Func<TSource, TResult>)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_116 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="236-236", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_117 [label="brokerage.Message += (sender, message) =>\r\n            {\r\n                // based on message type dispatch to result handler\r\n                switch (message.Type)\r\n                {\r\n                    case BrokerageMessageType.Information:\r\n                        results.DebugMessage(''Brokerage Info: '' + message.Message);\r\n                        break;\r\n                    case BrokerageMessageType.Warning:\r\n                        results.DebugMessage(''Brokerage Warning: '' + message.Message);\r\n                        break;\r\n                    case BrokerageMessageType.Error:\r\n                        results.ErrorMessage(''Brokerage Error: '' + message.Message);\r\n                        _algorithm.RunTimeError = new Exception(message.Message);\r\n                        _algorithm.Quit();\r\n                        break;\r\n                }\r\n            }", span="238-255", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_118 [label="return true;", span="256-256", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_119 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="236-236", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_71 [label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="50-50", cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_32 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="109-109", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_33 [label="_algorithm = algorithm", span="111-111", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_35 [label="var liveJob = job as LiveNodePacket", span="115-115", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_42 [label="var initializeComplete = Isolator.ExecuteWithTimeLimit(TimeSpan.FromSeconds(10), () =>\r\n                {\r\n                    try\r\n                    {                \r\n                        //Set the live trading level asset/ram allocation limits. \r\n                        //Protects algorithm from linux killing the job by excess memory:\r\n                        switch (job.ServerType)\r\n                        {\r\n                            case ServerType.Server1024:\r\n                                algorithm.SetAssetLimits(100, 20, 10);\r\n                                break;\r\n\r\n                            case ServerType.Server2048:\r\n                                algorithm.SetAssetLimits(400, 50, 30);\r\n                                break;\r\n\r\n                            default: //512\r\n                                algorithm.SetAssetLimits(50, 10, 5);\r\n                                break;\r\n                        }\r\n\r\n                        //Algorithm is live, not backtesting:\r\n                        algorithm.SetLiveMode(true);\r\n\r\n                        //Initialise the algorithm, get the required data:\r\n                        algorithm.Initialize();\r\n                    }\r\n                    catch (Exception err)\r\n                    {\r\n                        AddInitializationError(err.Message);\r\n                    }\r\n                })", span="132-163", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", color=red, community=0, file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_47 [label="brokerage = brokerageFactory.CreateBrokerage(liveJob, algorithm)", span="175-175", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_51 [label="algorithm.SetCash(item.Key, item.Value, 0)", span="183-183", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_54 [label="order.Id = algorithm.Transactions.GetIncrementOrderId()", span="191-191", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_55 [label="algorithm.Orders.AddOrUpdate(order.Id, order, (i, o) => order)", span="192-192", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_57 [label="var minResolution = new Lazy<Resolution>(() => algorithm.Securities.Min(x => x.Value.Resolution))", span="197-197", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_59 [label="!algorithm.Portfolio.ContainsKey(holding.Symbol)", span="200-200", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_60 [label="algorithm.AddSecurity(holding.Type, holding.Symbol, minResolution.Value, true, 1.0m, false)", span="203-203", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_61 [label="algorithm.Portfolio[holding.Symbol].SetHoldings(holding.AveragePrice, (int)holding.Quantity)", span="205-205", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_62 [label="algorithm.Securities[holding.Symbol].Update(DateTime.Now, new TradeBar\r\n                    {\r\n                        Time = DateTime.Now,\r\n                        Open = holding.AveragePrice,\r\n                        High = holding.AveragePrice,\r\n                        Low = holding.AveragePrice,\r\n                        Close = holding.AveragePrice,\r\n                        Volume = 0,\r\n                        Symbol = holding.Symbol,\r\n                        DataType = MarketDataType.TradeBar\r\n                    })", span="206-216", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_63 [label="algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(algorithm.Securities, algorithm.SubscriptionManager)", span="220-220", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_34 [label="brokerage = default(IBrokerage)", span="112-112", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_36 [label="liveJob == null", span="116-116", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", color=red, community=0, file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_39 [label="string.IsNullOrWhiteSpace(liveJob.Brokerage)", span="123-123", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_46 [label="var brokerageFactory = Composer.Instance.Single<IBrokerageFactory>(factory => factory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="172-172", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_37 [label="AddInitializationError(''BrokerageSetupHandler requires a LiveNodePacket'')", span="118-118", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_38 [label="return false;", span="119-119", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_40 [label="AddInitializationError(''A brokerage must be specified'')", span="125-125", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_41 [label="return false;", span="126-126", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_43 [label="!initializeComplete", span="165-165", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_44 [label="AddInitializationError(''Failed to initialize algorithm.'')", span="167-167", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_45 [label="return false;", span="168-168", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_48 [label="brokerage.Connect()", span="177-177", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_49 [label="var cashBalance = brokerage.GetCashBalance()", span="180-180", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_52 [label="var openOrders = brokerage.GetOpenOrders()", span="187-187", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_56 [label="var holdings = brokerage.GetAccountHoldings()", span="196-196", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_50 [label=cashBalance, span="181-181", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_53 [label=openOrders, span="188-188", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_58 [label=holdings, span="198-198", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_64 [label=Exception, span="222-222", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_66 [label="return Errors.Count == 0;", span="227-227", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_65 [label="AddInitializationError(err.Message)", span="224-224", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_67 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="109-109", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_100 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="406-406", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_69 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_120 [label="Entry lambda expression", span="238-255", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_20 [label="names.Count == 1", span="86-86", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_21 [label="return names.Single();", span="88-88", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_23 [label="return names.Single(x => x.Contains(algorithmName));", span="93-93", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_19 [label="Entry lambda expression", span="83-94", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_22 [label="var algorithmName = Config.Get(''algorithm-type-name'')", span="92-92", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_29 [label="x.Contains(algorithmName)", span="93-93", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_24 [label="Exit lambda expression", span="83-94", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_28 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_30 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_88 [label="job.ServerType", span="138-138", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_90 [label="algorithm.SetAssetLimits(100, 20, 10)", span="141-141", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_92 [label="algorithm.SetAssetLimits(400, 50, 30)", span="145-145", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_93 [label="algorithm.SetAssetLimits(50, 10, 5)", span="149-149", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_94 [label="algorithm.SetLiveMode(true)", span="154-154", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_95 [label="algorithm.Initialize()", span="157-157", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_110 [label="algorithm.Securities.Min(x => x.Value.Resolution)", span="197-197", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_103 [label="factory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="172-172", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_87 [label="Entry lambda expression", span="132-163", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_102 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_107 [label=order, span="192-192", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_106 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_89 [label="ServerType.Server1024", span="140-140", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_91 [label="ServerType.Server2048", span="144-144", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_96 [label=Exception, span="159-159", cluster="lambda expression", color=red, community=0, file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_98 [label="Exit lambda expression", span="132-163", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_97 [label="AddInitializationError(err.Message)", span="161-161", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_104 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_108 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_109 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_111 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_113 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_114 [label="x.Value.Resolution", span="197-197", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_115 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_123 [label="results.DebugMessage(''Brokerage Info: '' + message.Message)", span="244-244", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_125 [label="results.DebugMessage(''Brokerage Warning: '' + message.Message)", span="247-247", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_127 [label="results.ErrorMessage(''Brokerage Error: '' + message.Message)", span="250-250", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_121 [label="message.Type", span="241-241", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_128 [label="_algorithm.RunTimeError = new Exception(message.Message)", span="251-251", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_122 [label="BrokerageMessageType.Information", span="243-243", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_124 [label="BrokerageMessageType.Warning", span="246-246", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_126 [label="BrokerageMessageType.Error", span="249-249", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_129 [label="_algorithm.Quit()", span="252-252", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_130 [label="Exit lambda expression", span="238-255", cluster="lambda expression", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_79 [label="Entry QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", span="54-54", cluster="QuantConnect.Interfaces.IBrokerage.GetAccountHoldings()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_131 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="95-95", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_25 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_132 [label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", span="114-114", cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ErrorMessage(string, string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_77 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", span="415-415", cluster="QuantConnect.Securities.SecurityTransactionManager.GetIncrementOrderId()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_82 [label="Entry QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="346-346", cluster="QuantConnect.Interfaces.IAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_18 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_17 [label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="254-254", cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_133 [label="Entry QuantConnect.Interfaces.IAlgorithm.Quit(string)", span="394-394", cluster="QuantConnect.Interfaces.IAlgorithm.Quit(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_70 [label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="83-83", cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_80 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_0 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="66-66", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_1 [label="Errors = new List<string>()", span="68-68", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_2 [label="MaximumRuntime = TimeSpan.FromDays(10*365)", span="69-69", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_3 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", span="66-66", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.BrokerageSetupHandler()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_75 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", span="369-369", cluster="QuantConnect.Interfaces.IAlgorithm.SetCash(string, decimal, decimal)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_81 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="120-120", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_76 [label="Entry QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", span="48-48", cluster="QuantConnect.Interfaces.IBrokerage.GetOpenOrders()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_5 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_68 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="263-263", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_134 [label="Errors.Add(''Failed to initialize algorithm: Initialize(): '' + message)", span="265-265", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_135 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", span="263-263", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.AddInitializationError(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_85 [label="Entry QuantConnect.Securities.Security.Update(System.DateTime, QuantConnect.Data.BaseData)", span="404-404", cluster="QuantConnect.Securities.Security.Update(System.DateTime, QuantConnect.Data.BaseData)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_73 [label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="86-86", cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_72 [label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="48-48", cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_15 [label="Entry Loader.cstr", span="", cluster="Loader.cstr", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_16 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_86 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", span="85-85", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_105 [label="Entry System.Type.MatchesTypeName(string)", span="333-333", cluster="System.Type.MatchesTypeName(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_99 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", span="421-421", cluster="QuantConnect.Interfaces.IAlgorithm.SetAssetLimits(int, int, int)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_136 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_78 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_83 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="364-364", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_84 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="78-78", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_6 [label="Entry QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", span="77-77", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_7 [label="string error", span="79-79", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_10 [label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, out algorithm, out error)", span="96-96", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_8 [label="IAlgorithm algorithm", span="80-80", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_9 [label="var loader = new Loader(TimeSpan.FromSeconds(10), names =>\r\n            {\r\n                // if there's only one use that guy\r\n                if (names.Count == 1)\r\n                {\r\n                    return names.Single();\r\n                }\r\n\r\n                // if there's more than one then check configuration for which one we should use\r\n                var algorithmName = Config.Get(''algorithm-type-name'');\r\n                return names.Single(x => x.Contains(algorithmName));\r\n            })", span="83-94", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_11 [label="!complete", span="97-97", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_12 [label="throw new Exception(error + '' Try re-building algorithm.'');", span="97-97", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_13 [label="return algorithm;", span="99-99", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_14 [label="Exit QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", span="77-77", cluster="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler.CreateAlgorithmInstance(string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_26 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="89-89", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_101 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="219-219", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_74 [label="Entry QuantConnect.Interfaces.IBrokerage.GetCashBalance()", span="60-60", cluster="QuantConnect.Interfaces.IBrokerage.GetCashBalance()", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_137 [label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler", span="", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_138 [label=algorithmName, span="", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_139 [label="QuantConnect.Packets.AlgorithmNodePacket", span="", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_140 [label="QuantConnect.Interfaces.IAlgorithm", span="", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_141 [label=liveJob, span="", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_142 [label=order, span="", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m44_143 [label="QuantConnect.Lean.Engine.Results.IResultHandler", span="", file="HistoryAndWarmupRegressionAlgorithm.cs"];
m45_0 [label="Entry QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", span="23-23", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_1 [label="SetStartDate(2013, 11, 7)", span="25-25", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_2 [label="SetEndDate(2013, 11, 8)", span="26-26", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_3 [label="SetCash(100000)", span="27-27", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_4 [label="SetBenchmark(x => 0)", span="28-28", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_5 [label="_symbol = AddEquity(''VXX'', Resolution.Hour).Symbol", span="30-30", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_6 [label="Exit QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", span="23-23", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.Initialize()", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1344-1344", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_23 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", span="40-40", cluster="QuantConnect.Algorithm.QCAlgorithm.Buy(QuantConnect.Symbol, int)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_22 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189", cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="986-986", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_15 [label="Entry QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="33-33", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_16 [label="TradeBar bar", span="35-35", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_17 [label="!tradeBars.TryGetValue(_symbol, out bar)", span="36-36", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_18 [label="return;", span="36-36", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_19 [label="!Portfolio.Invested && Time.Date == EndDate.Date", span="38-38", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_20 [label="Buy(_symbol, 1)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_21 [label="Exit QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="33-33", cluster="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_12 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_13 [label=0, span="28-28", cluster="lambda expression", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_14 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="HourReverseSplitRegressionAlgorithm.cs"];
m45_24 [label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm", span="", file="HourReverseSplitRegressionAlgorithm.cs"];
m47_12 [label="Entry QuantConnect.Scheduling.ScheduledEventException.ScheduledEventException(string, string, System.Exception)", span="286-286", cluster="QuantConnect.Scheduling.ScheduledEventException.ScheduledEventException(string, string, System.Exception)", file="IndicatorSuiteAlgorithm.cs"];
m47_11 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="IndicatorSuiteAlgorithm.cs"];
m47_0 [label="Entry QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.CanInterpret(System.Exception)", span="30-30", cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.CanInterpret(System.Exception)", file="IndicatorSuiteAlgorithm.cs"];
m47_1 [label="Exit QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.CanInterpret(System.Exception)", span="30-30", cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.CanInterpret(System.Exception)", file="IndicatorSuiteAlgorithm.cs"];
m47_10 [label="Entry QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41", cluster="QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IndicatorSuiteAlgorithm.cs"];
m47_2 [label="Entry QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41", cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IndicatorSuiteAlgorithm.cs"];
m47_3 [label="var see = (ScheduledEventException) exception", span="43-43", cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IndicatorSuiteAlgorithm.cs"];
m47_4 [label="var inner = innerInterpreter.Interpret(see.InnerException, innerInterpreter)", span="45-45", cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IndicatorSuiteAlgorithm.cs"];
m47_5 [label="var message = exception.Message", span="48-48", cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IndicatorSuiteAlgorithm.cs"];
m47_6 [label="!message.Contains(see.ScheduledEventName)", span="49-49", cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IndicatorSuiteAlgorithm.cs"];
m47_7 [label="message = $''In Scheduled Event '{see.ScheduledEventName}',''", span="51-51", cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IndicatorSuiteAlgorithm.cs"];
m47_8 [label="return new ScheduledEventException(see.ScheduledEventName, message, inner);", span="54-54", cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IndicatorSuiteAlgorithm.cs"];
m47_9 [label="Exit QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41", cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IndicatorSuiteAlgorithm.cs"];
m48_20 [label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="290-290", cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs"];
m48_29 [label="Entry QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", span="50-50", cluster="QuantConnect.Util.LeanData.GenerateLine(QuantConnect.Data.IBaseData, QuantConnect.SecurityType, QuantConnect.Resolution)", file="LeanDataTests.cs"];
m48_11 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="46-46", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_12 [label="var relativePath = LeanData.GenerateRelativeZipFilePath(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="48-48", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_13 [label="Assert.AreEqual(parameters.ExpectedRelativeZipFilePath, relativePath)", span="49-49", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_14 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="46-46", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateRelativeZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_80 [label="Entry string.LastIndexOf(string, System.StringComparison)", span="0-0", cluster="string.LastIndexOf(string, System.StringComparison)", file="LeanDataTests.cs"];
m48_142 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="217-217", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_143 [label="DateTime date", span="219-219", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_144 [label="Symbol symbol", span="220-220", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_145 [label="Resolution resolution", span="221-221", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_146 [label="var customPath = ''a/very/custom/path/forex/oanda/tick/eurusd/20170104_quote.zip''", span="223-223", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_147 [label="Assert.IsTrue(LeanData.TryParsePath(customPath, out symbol, out date, out resolution))", span="224-224", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_148 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="225-225", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_149 [label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="226-226", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_150 [label="Assert.AreEqual(resolution, Resolution.Tick)", span="227-227", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_151 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="228-228", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_152 [label="Assert.AreEqual(date.Date, DateTime.Parse(''2017-01-04'').Date)", span="229-229", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_153 [label="var mixedPathSeperators = @''Data//forex/fxcm\/minute//eurusd\\20160101_quote.zip''", span="231-231", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_154 [label="Assert.IsTrue(LeanData.TryParsePath(mixedPathSeperators, out symbol, out date, out resolution))", span="232-232", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_155 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="233-233", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_156 [label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="234-234", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_157 [label="Assert.AreEqual(resolution, Resolution.Minute)", span="235-235", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_158 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="236-236", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_159 [label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="237-237", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_160 [label="var longRelativePath = ''../../../../../../../../../Data/forex/fxcm/hour/gbpusd.zip''", span="239-239", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_161 [label="Assert.IsTrue(LeanData.TryParsePath(longRelativePath, out symbol, out date, out resolution))", span="240-240", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_162 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="241-241", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_163 [label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="242-242", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_164 [label="Assert.AreEqual(resolution, Resolution.Hour)", span="243-243", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_165 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''gbpusd'')", span="244-244", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_166 [label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="245-245", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_167 [label="var shortRelativePath = ''Data/forex/fxcm/minute/eurusd/20160102_quote.zip''", span="247-247", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_168 [label="Assert.IsTrue(LeanData.TryParsePath(shortRelativePath, out symbol, out date, out resolution))", span="248-248", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_169 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Forex)", span="249-249", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_170 [label="Assert.AreEqual(symbol.ID.Market, Market.FXCM)", span="250-250", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_171 [label="Assert.AreEqual(resolution, Resolution.Minute)", span="251-251", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_172 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''eurusd'')", span="252-252", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_173 [label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-02'').Date)", span="253-253", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_174 [label="var dailyEquitiesPath = ''Data/equity/usa/daily/aapl.zip''", span="255-255", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_175 [label="Assert.IsTrue(LeanData.TryParsePath(dailyEquitiesPath, out symbol, out date, out resolution))", span="256-256", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_176 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="257-257", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_177 [label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="258-258", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_178 [label="Assert.AreEqual(resolution, Resolution.Daily)", span="259-259", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_179 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''aapl'')", span="260-260", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_180 [label="Assert.AreEqual(date.Date, DateTime.MinValue)", span="261-261", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_181 [label="var minuteEquitiesPath = ''Data/equity/usa/minute/googl/20070103_trade.zip''", span="263-263", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_182 [label="Assert.IsTrue(LeanData.TryParsePath(minuteEquitiesPath, out symbol, out date, out resolution))", span="264-264", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_183 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Equity)", span="265-265", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_184 [label="Assert.AreEqual(symbol.ID.Market, Market.USA)", span="266-266", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_185 [label="Assert.AreEqual(resolution, Resolution.Minute)", span="267-267", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_186 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''goog'')", span="268-268", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_187 [label="Assert.AreEqual(date.Date, DateTime.Parse(''2007-01-03'').Date)", span="269-269", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_188 [label="var cfdPath = ''Data/cfd/oanda/minute/bcousd/20160101_trade.zip''", span="271-271", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_189 [label="Assert.IsTrue(LeanData.TryParsePath(cfdPath, out symbol, out date, out resolution))", span="272-272", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_190 [label="Assert.AreEqual(symbol.SecurityType, SecurityType.Cfd)", span="273-273", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_191 [label="Assert.AreEqual(symbol.ID.Market, Market.Oanda)", span="274-274", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_192 [label="Assert.AreEqual(resolution, Resolution.Minute)", span="275-275", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_193 [label="Assert.AreEqual(symbol.ID.Symbol.ToLower(), ''bcousd'')", span="276-276", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_194 [label="Assert.AreEqual(date.Date, DateTime.Parse(''2016-01-01'').Date)", span="277-277", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_195 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", span="217-217", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.CorrectPaths_CanBeParsedCorrectly()", file="LeanDataTests.cs"];
m48_66 [label="Entry Unk.IsInstanceOf", span="", cluster="Unk.IsInstanceOf", file="LeanDataTests.cs"];
m48_30 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="LeanDataTests.cs"];
m48_63 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="LeanDataTests.cs"];
m48_104 [label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="258-258", cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs"];
m48_119 [label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="687-687", cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="LeanDataTests.cs"];
m48_216 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="LeanDataTests.cs"];
m48_64 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="LeanDataTests.cs"];
m48_4 [label="Entry QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="485-485", cluster="QuantConnect.Util.LeanData.GenerateZipFileName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs"];
m48_227 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="432-432", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_256 [label="Data = data", span="434-434", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_257 [label="SecurityType = securityType", span="435-435", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_258 [label="Resolution = resolution", span="436-436", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_259 [label="ExpectedLine = expectedLine", span="437-437", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_260 [label="data is Tick", span="438-438", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_261 [label="var tick = (Tick) data", span="440-440", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_263 [label="data is TradeBar", span="443-443", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_265 [label="data is QuoteBar", span="447-447", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_268 [label="data.Symbol.ID.SecurityType == SecurityType.Forex || data.Symbol.ID.SecurityType == SecurityType.Cfd", span="457-457", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_271 [label="Name = SecurityType + ''_'' + data.GetType().Name", span="464-464", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_272 [label="data.GetType() != typeof (Tick) || Resolution != Resolution.Tick", span="466-466", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_274 [label="data is Tick", span="471-471", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_275 [label="Name += ''_'' + ((Tick) data).TickType", span="473-473", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_262 [label="TickType = tick.TickType", span="441-441", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_264 [label="TickType = TickType.Trade", span="445-445", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_266 [label="TickType = TickType.Quote", span="449-449", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_267 [label="throw new NotImplementedException();", span="453-453", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_269 [label="TickType = TickType.Quote", span="459-459", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_270 [label="Config = new SubscriptionDataConfig(Data.GetType(), Data.Symbol, Resolution, TimeZones.Utc, TimeZones.Utc, false, true, false, false, TickType)", span="462-462", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_273 [label="Name += ''_'' + Resolution", span="468-468", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_276 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", span="432-432", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters.LeanDataLineTestParameters(QuantConnect.Data.BaseData, QuantConnect.SecurityType, QuantConnect.Resolution, string)", file="LeanDataTests.cs"];
m48_243 [label="ExpectedZipEntryName = expectedZipEntryName", span="407-407", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_214 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="400-400", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_238 [label="Symbol = symbol", span="402-402", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_239 [label="Date = date", span="403-403", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_240 [label="Resolution = resolution", span="404-404", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_241 [label="TickType = tickType", span="405-405", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_242 [label="ExpectedZipFileName = expectedZipFileName", span="406-406", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_244 [label="ExpectedRelativeZipFilePath = Path.Combine(expectedRelativeZipFileDirectory, expectedZipFileName).Replace(''/'', Path.DirectorySeparatorChar.ToString())", span="408-408", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_246 [label="Name = SecurityType + ''_'' + resolution", span="411-411", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_247 [label="BaseDataType = resolution == Resolution.Tick ? typeof(Tick) : typeof(TradeBar)", span="413-413", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_248 [label="symbol.ID.SecurityType == SecurityType.Option && resolution != Resolution.Tick", span="414-414", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_250 [label="Config = new SubscriptionDataConfig(BaseDataType, symbol, resolution, TimeZones.NewYork, TimeZones.NewYork, true, false, false, false, tickType)", span="418-418", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_245 [label="ExpectedZipFilePath = Path.Combine(Globals.DataFolder, ExpectedRelativeZipFilePath)", span="409-409", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_249 [label="BaseDataType = typeof(QuoteBar)", span="416-416", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_251 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", span="400-400", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters.LeanDataTestParameters(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType, string, string, string)", file="LeanDataTests.cs"];
m48_81 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="LeanDataTests.cs"];
m48_235 [label="Entry lambda expression", span="382-382", cluster="lambda expression", file="LeanDataTests.cs"];
m48_217 [label="Entry lambda expression", span="334-334", cluster="lambda expression", file="LeanDataTests.cs"];
m48_218 [label="new TestCaseData(x).SetName(x.Name)", span="334-334", cluster="lambda expression", file="LeanDataTests.cs"];
m48_219 [label="Exit lambda expression", span="334-334", cluster="lambda expression", file="LeanDataTests.cs"];
m48_236 [label="new TestCaseData(x).SetName(x.Name)", span="382-382", cluster="lambda expression", file="LeanDataTests.cs"];
m48_237 [label="Exit lambda expression", span="382-382", cluster="lambda expression", file="LeanDataTests.cs"];
m48_87 [label="expected += ''#'' + parameters.ExpectedZipEntryName", span="142-142", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_82 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="135-135", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_83 [label="var factory = (BaseData)Activator.CreateInstance(parameters.BaseDataType)", span="137-137", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_84 [label="var source = factory.GetSource(parameters.Config, parameters.Date, false)", span="138-138", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_85 [label="var expected = parameters.ExpectedZipFilePath", span="139-139", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_86 [label="parameters.SecurityType == SecurityType.Option", span="140-140", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_88 [label="Assert.AreEqual(expected, source.Source)", span="144-144", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_89 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="135-135", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSource(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_114 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="LeanDataTests.cs"];
m48_233 [label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58", cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="LeanDataTests.cs"];
m48_234 [label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", span="161-161", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal)", file="LeanDataTests.cs"];
m48_230 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="LeanDataTests.cs"];
m48_253 [label="Entry char.ToString()", span="0-0", cluster="char.ToString()", file="LeanDataTests.cs"];
m48_197 [label="Entry System.DateTime.Parse(string)", span="0-0", cluster="System.DateTime.Parse(string)", file="LeanDataTests.cs"];
m48_31 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="77-77", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_32 [label="var factory = (BaseData) Activator.CreateInstance(parameters.Data.GetType())", span="80-80", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_33 [label="var parsed = factory.Reader(parameters.Config, parameters.ExpectedLine, parameters.Data.Time.Date, false)", span="81-81", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_34 [label="Assert.IsInstanceOf(parameters.Config.Type, parsed)", span="83-83", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_35 [label="Assert.AreEqual(parameters.Data.Time, parsed.Time)", span="84-84", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_36 [label="Assert.AreEqual(parameters.Data.EndTime, parsed.EndTime)", span="85-85", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_37 [label="Assert.AreEqual(parameters.Data.Symbol, parsed.Symbol)", span="86-86", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_38 [label="Assert.AreEqual(parameters.Data.Value, parsed.Value)", span="87-87", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_40 [label="var expected = (Tick) parameters.Data", span="90-90", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_51 [label="var expected = (TradeBar) parameters.Data", span="103-103", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_56 [label="var expected = (QuoteBar) parameters.Data", span="110-110", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_39 [label="parsed is Tick", span="88-88", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_41 [label="var actual = (Tick) parsed", span="91-91", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_50 [label="parsed is TradeBar", span="101-101", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_52 [label="var actual = (TradeBar) parsed", span="104-104", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_55 [label="parsed is QuoteBar", span="108-108", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_57 [label="var actual = (QuoteBar) parsed", span="111-111", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_42 [label="Assert.AreEqual(expected.Quantity, actual.Quantity)", span="92-92", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_43 [label="Assert.AreEqual(expected.BidPrice, actual.BidPrice)", span="93-93", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_44 [label="Assert.AreEqual(expected.AskPrice, actual.AskPrice)", span="94-94", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_45 [label="Assert.AreEqual(expected.BidSize, actual.BidSize)", span="95-95", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_46 [label="Assert.AreEqual(expected.AskSize, actual.AskSize)", span="96-96", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_47 [label="Assert.AreEqual(expected.Exchange, actual.Exchange)", span="97-97", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_48 [label="Assert.AreEqual(expected.SaleCondition, actual.SaleCondition)", span="98-98", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_49 [label="Assert.AreEqual(expected.Suspicious, actual.Suspicious)", span="99-99", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_53 [label="AssertBarsAreEqual(expected, actual)", span="105-105", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_54 [label="Assert.AreEqual(expected.Volume, actual.Volume)", span="106-106", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_58 [label="AssertBarsAreEqual(expected.Bid, actual.Bid)", span="112-112", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_59 [label="AssertBarsAreEqual(expected.Ask, actual.Ask)", span="113-113", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_60 [label="Assert.AreEqual(expected.LastBidSize, actual.LastBidSize)", span="114-114", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_61 [label="Assert.AreEqual(expected.LastAskSize, actual.LastAskSize)", span="115-115", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_62 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="77-77", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.ParsesGeneratedLines(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_255 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="LeanDataTests.cs"];
m48_141 [label="Entry QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", span="723-723", cluster="QuantConnect.Util.LeanData.TryParsePath(string, out QuantConnect.Symbol, out System.DateTime, out QuantConnect.Resolution)", file="LeanDataTests.cs"];
m48_212 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="LeanDataTests.cs"];
m48_232 [label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217", cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="LeanDataTests.cs"];
m48_113 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="LeanDataTests.cs"];
m48_115 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="178-178", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs"];
m48_116 [label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Cfd), TickType.Quote)", span="180-180", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs"];
m48_117 [label="Assert.AreEqual(LeanData.GetCommonTickTypeForCommonDataTypes(typeof(Tick), SecurityType.Forex), TickType.Quote)", span="181-181", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs"];
m48_118 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", span="178-178", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_GetCommonTickTypeForCommonDataTypes_ReturnsCorrectDataForTickResolution()", file="LeanDataTests.cs"];
m48_277 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="LeanDataTests.cs"];
m48_220 [label="Entry TestCaseData.cstr", span="", cluster="TestCaseData.cstr", file="LeanDataTests.cs"];
m48_120 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="185-185", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_121 [label="DateTime date", span="187-187", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_122 [label="Symbol symbol", span="188-188", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_123 [label="Resolution resolution", span="189-189", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_124 [label="var invalidPath = ''forex/fxcm/eurusd/20160101_quote.zip''", span="191-191", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_125 [label="Assert.IsFalse(LeanData.TryParsePath(invalidPath, out symbol, out date, out resolution))", span="192-192", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_126 [label="var nonExistantPath = ''Data/f/fxcm/eurusd/20160101_quote.zip''", span="194-194", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_127 [label="Assert.IsFalse(LeanData.TryParsePath(nonExistantPath, out symbol, out date, out resolution))", span="195-195", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_128 [label="var notAPath = ''ooooooooooooooooooooooooooooooooooooooooooooooooooooooo''", span="197-197", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_129 [label="Assert.IsFalse(LeanData.TryParsePath(notAPath, out symbol, out date, out resolution))", span="198-198", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_130 [label="var  emptyPath = ''''", span="200-200", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_131 [label="Assert.IsFalse(LeanData.TryParsePath(emptyPath, out symbol, out date, out resolution))", span="201-201", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_132 [label="string nullPath = null", span="203-203", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_133 [label="Assert.IsFalse(LeanData.TryParsePath(nullPath, out symbol, out date, out resolution))", span="204-204", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_134 [label="var optionsTradePath = ''Data/option/u sa/minute/aapl/20140606_trade_american.zip''", span="206-206", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_135 [label="Assert.IsFalse(LeanData.TryParsePath(optionsTradePath, out symbol, out date, out resolution))", span="207-207", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_136 [label="var optionsOpenInterestPath = ''Data/option/usa/minute/aapl/20140609_openinterest_american.zip''", span="209-209", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_137 [label="Assert.IsFalse(LeanData.TryParsePath(optionsOpenInterestPath, out symbol, out date, out resolution))", span="210-210", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_138 [label="var optionsQuotePath = ''Data/option/usa/minute/aapl/20140609_quote_american.zip''", span="212-212", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_139 [label="Assert.IsFalse(LeanData.TryParsePath(optionsQuotePath, out symbol, out date, out resolution))", span="213-213", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_140 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", span="185-185", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.IncorrectPaths_CannotBeParsed()", file="LeanDataTests.cs"];
m48_196 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="LeanDataTests.cs"];
m48_21 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="60-60", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_22 [label="var line = LeanData.GenerateLine(parameters.Data, parameters.SecurityType, parameters.Resolution)", span="62-62", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_23 [label="Assert.AreEqual(parameters.ExpectedLine, line)", span="63-63", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_24 [label="parameters.Config.Type == typeof(QuoteBar)", span="65-65", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_26 [label="parameters.Config.Type == typeof(TradeBar)", span="70-70", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_25 [label="Assert.AreEqual(line.Split(',').Length, 11)", span="67-67", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_27 [label="Assert.AreEqual(line.Split(',').Length, 6)", span="72-72", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_28 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="60-60", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateLine(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_68 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="120-120", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_69 [label="var source = parameters.Data.GetSource(parameters.Config, parameters.Data.Time.Date, false)", span="122-122", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_71 [label="var zipFilePath = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Data.Symbol, parameters.Data.Time.Date, parameters.Resolution, parameters.TickType)", span="124-124", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_70 [label="var normalizedSourcePath = new FileInfo(source.Source).FullName", span="123-123", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_73 [label="var indexOfHash = normalizedSourcePath.LastIndexOf(''#'', StringComparison.Ordinal)", span="126-126", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_75 [label="normalizedSourcePath = normalizedSourcePath.Substring(0, indexOfHash)", span="129-129", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_76 [label="Assert.AreEqual(normalizeZipFilePath, normalizedSourcePath)", span="131-131", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_72 [label="var normalizeZipFilePath = new FileInfo(zipFilePath).FullName", span="125-125", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_74 [label="indexOfHash > 0", span="127-127", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_77 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", span="120-120", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetSourceMatchesGenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters)", file="LeanDataTests.cs"];
m48_0 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="32-32", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_1 [label="var zip = LeanData.GenerateZipFileName(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="34-34", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_2 [label="Assert.AreEqual(parameters.ExpectedZipFileName, zip)", span="35-35", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_3 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="32-32", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFileName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_5 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="LeanDataTests.cs"];
m48_231 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="LeanDataTests.cs"];
m48_16 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="53-53", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_17 [label="var path = LeanData.GenerateZipFilePath(Globals.DataFolder, parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="55-55", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_18 [label="Assert.AreEqual(parameters.ExpectedZipFilePath, path)", span="56-56", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_19 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="53-53", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipFilePath(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_207 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="LeanDataTests.cs"];
m48_254 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="LeanDataTests.cs"];
m48_90 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="148-148", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_91 [label="var tickType = typeof(Tick)", span="150-150", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_92 [label="var openInterestType = typeof(OpenInterest)", span="151-151", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_95 [label="Assert.AreEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tickType)", span="155-155", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_96 [label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Daily, TickType.OpenInterest), tickType)", span="156-156", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_93 [label="var quoteBarType = typeof(QuoteBar)", span="152-152", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_97 [label="Assert.AreEqual(LeanData.GetDataType(Resolution.Second, TickType.OpenInterest), openInterestType)", span="158-158", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_98 [label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), openInterestType)", span="159-159", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_94 [label="var tradeBarType = typeof(TradeBar)", span="153-153", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_99 [label="Assert.AreEqual(LeanData.GetDataType(Resolution.Minute, TickType.Quote), quoteBarType)", span="161-161", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_100 [label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Second, TickType.Trade), quoteBarType)", span="162-162", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_101 [label="Assert.AreEqual(LeanData.GetDataType(Resolution.Hour, TickType.Trade), tradeBarType)", span="164-164", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_102 [label="Assert.AreNotEqual(LeanData.GetDataType(Resolution.Tick, TickType.OpenInterest), tradeBarType)", span="165-165", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_103 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", span="148-148", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetDataType_ReturnsCorrectType()", file="LeanDataTests.cs"];
m48_222 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="337-337", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="LeanDataTests.cs"];
m48_223 [label="var time = new DateTime(2016, 02, 18, 9, 30, 0)", span="339-339", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="LeanDataTests.cs"];
m48_224 [label="return new List<LeanDataLineTestParameters>\r\n            {\r\n                //equity\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY, Value = 1, Quantity = 2, TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Equity, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Equity, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Equity, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // options\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, null, 0, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)) {Bid = null}, SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,,,,,0,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, null, 0, TimeSpan.FromDays(1)) {Ask = null}, SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,,,,,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.SPY_P_192_Feb19_2016, new Bar(1, 2, 3, 4), 5, new Bar(6, 7, 8, 9), 10, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5,60000,70000,80000,90000,10''),\r\n                new LeanDataLineTestParameters(new Tick(time, Symbols.SPY_P_192_Feb19_2016, 0, 1, 3) {Value = 2m, TickType = TickType.Quote, BidSize = 2, AskSize = 4, Exchange = ''EX'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,30000,4,EX,1''),\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.SPY_P_192_Feb19_2016, Value = 1, Quantity = 2,TickType = TickType.Trade, Exchange = ''EX'', SaleCondition = ''SC'', Suspicious = true}, SecurityType.Option, Resolution.Tick,\r\n                    ''34200000,10000,2,EX,SC,1''),\r\n                new LeanDataLineTestParameters(new TradeBar(time, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromMinutes(1)), SecurityType.Option, Resolution.Minute,\r\n                    ''34200000,10000,20000,30000,40000,5''),\r\n                new LeanDataLineTestParameters(new TradeBar(time.Date, Symbols.SPY_P_192_Feb19_2016, 1, 2, 3, 4, 5, TimeSpan.FromDays(1)), SecurityType.Option, Resolution.Daily,\r\n                    ''20160218 00:00,10000,20000,30000,40000,5''),\r\n\r\n                // forex\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.EURUSD, BidPrice = 1, Value =1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Forex, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Forex, Resolution.Minute, ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.EURUSD, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Forex, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n\r\n                // cfd\r\n                new LeanDataLineTestParameters(new Tick {Time = time, Symbol = Symbols.DE10YBEUR, BidPrice = 1, Value = 1.5m, AskPrice = 2, TickType = TickType.Quote}, SecurityType.Cfd, Resolution.Tick,\r\n                    ''34200000,1,2''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromMinutes(1)), SecurityType.Cfd, Resolution.Minute,\r\n                    ''34200000,1,2,3,4,0,1,2,3,4,0''),\r\n                new LeanDataLineTestParameters(new QuoteBar(time.Date, Symbols.DE10YBEUR, new Bar(1, 2, 3, 4), 0, new Bar(1, 2, 3, 4), 0, TimeSpan.FromDays(1)), SecurityType.Cfd, Resolution.Daily,\r\n                    ''20160218 00:00,1,2,3,4,0,1,2,3,4,0''),\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="340-382", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="LeanDataTests.cs"];
m48_225 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", span="337-337", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataLineTestParameters()", file="LeanDataTests.cs"];
m48_9 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="39-39", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_6 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", span="39-39", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_7 [label="var entry = LeanData.GenerateZipEntryName(parameters.Symbol, parameters.Date, parameters.Resolution, parameters.TickType)", span="41-41", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_8 [label="Assert.AreEqual(parameters.ExpectedZipEntryName, entry)", span="42-42", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GenerateZipEntryName(QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters)", file="LeanDataTests.cs"];
m48_78 [label="Entry QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="160-160", cluster="QuantConnect.Data.BaseData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LeanDataTests.cs"];
m48_252 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="LeanDataTests.cs"];
m48_112 [label="Entry QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", span="274-274", cluster="QuantConnect.Util.LeanData.IsCommonLeanDataType(System.Type)", file="LeanDataTests.cs"];
m48_226 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="LeanDataTests.cs"];
m48_79 [label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0", cluster="System.IO.FileInfo.FileInfo(string)", file="LeanDataTests.cs"];
m48_15 [label="Entry QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="350-350", cluster="QuantConnect.Util.LeanData.GenerateRelativeZipFilePath(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs"];
m48_105 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="LeanDataTests.cs"];
m48_10 [label="Entry QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="372-372", cluster="QuantConnect.Util.LeanData.GenerateZipEntryName(QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="LeanDataTests.cs"];
m48_65 [label="Entry QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="144-144", cluster="QuantConnect.Data.BaseData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LeanDataTests.cs"];
m48_215 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="LeanDataTests.cs"];
m48_221 [label="Entry Unk.SetName", span="", cluster="Unk.SetName", file="LeanDataTests.cs"];
m48_67 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="280-280", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs"];
m48_198 [label="expected == null && actual == null", span="282-282", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs"];
m48_200 [label="expected == null && actual != null", span="286-286", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs"];
m48_202 [label="Assert.AreEqual(expected.Open, actual.Open)", span="290-290", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs"];
m48_203 [label="Assert.AreEqual(expected.High, actual.High)", span="291-291", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs"];
m48_204 [label="Assert.AreEqual(expected.Low, actual.Low)", span="292-292", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs"];
m48_205 [label="Assert.AreEqual(expected.Close, actual.Close)", span="293-293", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs"];
m48_199 [label="return;", span="284-284", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs"];
m48_201 [label="Assert.Fail(''Expected null bar'')", span="288-288", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs"];
m48_206 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", span="280-280", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.AssertBarsAreEqual(QuantConnect.Data.Market.IBar, QuantConnect.Data.Market.IBar)", file="LeanDataTests.cs"];
m48_208 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="296-296", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs"];
m48_209 [label="var date = new DateTime(2016, 02, 17)", span="298-298", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs"];
m48_210 [label="return new List<LeanDataTestParameters>\r\n            {\r\n                // equity\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Tick, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_Trade_Tick.csv'', ''equity/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Second, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_second_trade.csv'', ''equity/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Minute, TickType.Trade, ''20160217_trade.zip'', ''20160217_spy_minute_trade.csv'', ''equity/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Hour, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY, date, Resolution.Daily, TickType.Trade, ''spy.zip'', ''spy.csv'', ''equity/usa/daily''),\r\n\r\n                // equity option trades\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_tick_trade_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Tick, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_tick_quote_american_put_1920000_20160219.csv'', ''option/usa/tick/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_second_trade_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Second, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_second_quote_american_put_1920000_20160219.csv'', ''option/usa/second/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Trade, ''20160217_trade_american.zip'', ''20160217_spy_minute_trade_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Minute, TickType.Quote, ''20160217_quote_american.zip'', ''20160217_spy_minute_quote_american_put_1920000_20160219.csv'', ''option/usa/minute/spy''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Hour, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/hour''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Trade, ''spy_trade_american.zip'', ''spy_trade_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n                new LeanDataTestParameters(Symbols.SPY_P_192_Feb19_2016, date, Resolution.Daily, TickType.Quote, ''spy_quote_american.zip'', ''spy_quote_american_put_1920000_20160219.csv'', ''option/usa/daily''),\r\n\r\n                // forex\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_tick_quote.csv'', ''forex/fxcm/tick/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_second_quote.csv'', ''forex/fxcm/second/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_eurusd_minute_quote.csv'', ''forex/fxcm/minute/eurusd''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Hour, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.EURUSD, date, Resolution.Daily, TickType.Quote, ''eurusd.zip'', ''eurusd.csv'', ''forex/fxcm/daily''),\r\n\r\n                // cfd\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Tick, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_tick_quote.csv'', ''cfd/fxcm/tick/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Second, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_second_quote.csv'', ''cfd/fxcm/second/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Minute, TickType.Quote, ''20160217_quote.zip'', ''20160217_de10ybeur_minute_quote.csv'', ''cfd/fxcm/minute/de10ybeur''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Hour, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/hour''),\r\n                new LeanDataTestParameters(Symbols.DE10YBEUR, date, Resolution.Daily, TickType.Quote, ''de10ybeur.zip'', ''de10ybeur.csv'', ''cfd/fxcm/daily''),\r\n\r\n            }.Select(x => new TestCaseData(x).SetName(x.Name)).ToArray();", span="299-334", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs"];
m48_211 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", span="296-296", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.GetLeanDataTestParameters()", file="LeanDataTests.cs"];
m48_228 [label="Entry QuantConnect.Data.Market.Tick.Tick()", span="98-98", cluster="QuantConnect.Data.Market.Tick.Tick()", file="LeanDataTests.cs"];
m48_106 [label="Entry QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="169-169", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs"];
m48_107 [label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(OpenInterest)))", span="171-171", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs"];
m48_108 [label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(TradeBar)))", span="172-172", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs"];
m48_109 [label="Assert.IsTrue(LeanData.IsCommonLeanDataType(typeof(QuoteBar)))", span="173-173", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs"];
m48_110 [label="Assert.IsFalse(LeanData.IsCommonLeanDataType(typeof(Bitcoin)))", span="174-174", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs"];
m48_111 [label="Exit QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", span="169-169", cluster="QuantConnect.Tests.Common.Util.LeanDataTests.LeanData_CanDetermineTheCorrectCommonDataTypes()", file="LeanDataTests.cs"];
m48_229 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", span="158-158", cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, decimal, System.TimeSpan?)", file="LeanDataTests.cs"];
m48_278 [label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters", span="", file="LeanDataTests.cs"];
m48_279 [label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters", span="", file="LeanDataTests.cs"];
m49_32 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="683-683", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="LimitFillRegressionAlgorithm.cs"];
m49_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="LimitFillRegressionAlgorithm.cs"];
m49_17 [label="Entry QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", span="38-38", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_23 [label="Time.Second % 15 == 0", span="53-53", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="LimitFillRegressionAlgorithm.cs"];
m49_21 [label="!Portfolio[symbol].Invested", span="46-46", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_24 [label="var holdings = Portfolio[symbol].Quantity", span="55-55", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_19 [label=AllSymbols, span="42-42", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_18 [label="Debug(''REALTIME: '' + DateTime.Now.ToString(''o'') + '' DATATIME: '' + data.Time.ToString(''o'') + '' REALTIME DELTA: '' + (DateTime.Now - data.Time).TotalSeconds.ToString(''0.000'') + ''sec  COUNT: '' + data.Count + '' FILLFORWARD: '' + data.Count(x => x.Value.IsFillForward))", span="40-40", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_20 [label="!Portfolio.ContainsKey(symbol)", span="44-44", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_22 [label="Order(symbol, 10)", span="49-49", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_25 [label="Order(symbol, holdings * -2)", span="56-56", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_26 [label="Time.Second % 15 == 0", span="62-62", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_27 [label="Log(''Time: '' + Time.ToShortTimeString())", span="62-62", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_28 [label="Exit QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", span="38-38", cluster="QuantConnect.Stress_Symbols.OnData(QuantConnect.Data.Market.TradeBars)", file="LimitFillRegressionAlgorithm.cs"];
m49_34 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", span="183-183", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(string, int, bool, string)", file="LimitFillRegressionAlgorithm.cs"];
m49_36 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="696-696", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="LimitFillRegressionAlgorithm.cs"];
m49_30 [label="Entry double.ToString(string)", span="0-0", cluster="double.ToString(string)", file="LimitFillRegressionAlgorithm.cs"];
m49_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="LimitFillRegressionAlgorithm.cs"];
m49_29 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="LimitFillRegressionAlgorithm.cs"];
m49_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="444-444", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="LimitFillRegressionAlgorithm.cs"];
m49_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="585-585", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="LimitFillRegressionAlgorithm.cs"];
m49_0 [label="Entry QuantConnect.Stress_Symbols.Initialize()", span="13-13", cluster="QuantConnect.Stress_Symbols.Initialize()", file="LimitFillRegressionAlgorithm.cs"];
m49_5 [label=StockSymbols, span="24-24", cluster="QuantConnect.Stress_Symbols.Initialize()", color=green, community=0, file="LimitFillRegressionAlgorithm.cs"];
m49_4 [label="SetCash(250000)", span="22-22", cluster="QuantConnect.Stress_Symbols.Initialize()", file="LimitFillRegressionAlgorithm.cs"];
m49_6 [label="AddSecurity(SecurityType.Equity, symbol, Resolution.Second, true)", span="26-26", cluster="QuantConnect.Stress_Symbols.Initialize()", color=green, community=0, file="LimitFillRegressionAlgorithm.cs"];
m49_7 [label=ForexSymbols, span="29-29", cluster="QuantConnect.Stress_Symbols.Initialize()", file="LimitFillRegressionAlgorithm.cs"];
m49_1 [label="AllSymbols = new List<string>()", span="15-15", cluster="QuantConnect.Stress_Symbols.Initialize()", file="LimitFillRegressionAlgorithm.cs"];
m49_2 [label="SetStartDate(2014, 01, 01)", span="18-18", cluster="QuantConnect.Stress_Symbols.Initialize()", file="LimitFillRegressionAlgorithm.cs"];
m49_3 [label="SetEndDate(2015, 01, 01)", span="19-19", cluster="QuantConnect.Stress_Symbols.Initialize()", file="LimitFillRegressionAlgorithm.cs"];
m49_8 [label="AddSecurity(SecurityType.Forex, symbol, Resolution.Second, true)", span="31-31", cluster="QuantConnect.Stress_Symbols.Initialize()", file="LimitFillRegressionAlgorithm.cs"];
m49_9 [label="AllSymbols = StockSymbols.Concat(ForexSymbols)", span="34-34", cluster="QuantConnect.Stress_Symbols.Initialize()", file="LimitFillRegressionAlgorithm.cs"];
m49_10 [label="Exit QuantConnect.Stress_Symbols.Initialize()", span="13-13", cluster="QuantConnect.Stress_Symbols.Initialize()", file="LimitFillRegressionAlgorithm.cs"];
m49_35 [label="Entry System.DateTime.ToShortTimeString()", span="0-0", cluster="System.DateTime.ToShortTimeString()", file="LimitFillRegressionAlgorithm.cs"];
m49_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="419-419", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="LimitFillRegressionAlgorithm.cs"];
m49_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="386-386", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="LimitFillRegressionAlgorithm.cs"];
m49_33 [label="Entry QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", span="110-110", cluster="QuantConnect.Securities.SecurityPortfolioManager.ContainsKey(string)", file="LimitFillRegressionAlgorithm.cs"];
m49_37 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="LimitFillRegressionAlgorithm.cs"];
m49_38 [label="x.Value.IsFillForward", span="40-40", cluster="lambda expression", file="LimitFillRegressionAlgorithm.cs"];
m49_39 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="LimitFillRegressionAlgorithm.cs"];
m49_40 [label="QuantConnect.Stress_Symbols", span="", file="LimitFillRegressionAlgorithm.cs"];
m50_27 [label="Entry QuantConnect.Notifications.NotificationManager.Sms(string, string)", span="95-95", cluster="QuantConnect.Notifications.NotificationManager.Sms(string, string)", file="LiveFeaturesAlgorithm.cs"];
m50_13 [label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", span="53-53", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs"];
m50_14 [label=LiveMode, span="55-55", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs"];
m50_15 [label="SetRuntimeStatistic(''BTC'', data.Close.ToString(''C''))", span="58-58", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs"];
m50_16 [label="!Portfolio.HoldStock", span="61-61", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs"];
m50_17 [label="Order(''BTC'', 100)", span="63-63", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs"];
m50_18 [label="Notify.Email(''myemail@gmail.com'', ''Test'', ''Test Body'', ''test attachment'')", span="66-66", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs"];
m50_19 [label="Notify.Sms(''+11233456789'', Time.ToString(''u'') + ''>> Test message from live BTC server.'')", span="67-67", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs"];
m50_20 [label="Notify.Web(''http://api.quantconnect.com'', Time.ToString(''u'') + ''>> Test data packet posted from live BTC server.'')", span="68-68", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs"];
m50_21 [label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", span="53-53", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Bitcoin)", file="LiveFeaturesAlgorithm.cs"];
m50_0 [label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs"];
m50_1 [label="SetStartDate(2013, 10, 7)", span="35-35", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs"];
m50_2 [label="SetEndDate(2013, 10, 11)", span="36-36", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs"];
m50_3 [label="SetCash(25000)", span="37-37", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs"];
m50_4 [label="AddSecurity(SecurityType.Equity, ''IBM'', Resolution.Second)", span="40-40", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs"];
m50_5 [label="AddSecurity(SecurityType.Forex, ''EURUSD'', Resolution.Minute)", span="43-43", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs"];
m50_6 [label="AddData<Bitcoin>(''BTC'', Resolution.Second, TimeZones.Utc)", span="46-46", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs"];
m50_7 [label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.Initialize()", file="LiveFeaturesAlgorithm.cs"];
m50_72 [label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0", cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="LiveFeaturesAlgorithm.cs"];
m50_71 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="LiveFeaturesAlgorithm.cs"];
m50_25 [label="Entry QuantConnect.Notifications.NotificationManager.Email(string, string, string, string)", span="76-76", cluster="QuantConnect.Notifications.NotificationManager.Email(string, string, string, string)", file="LiveFeaturesAlgorithm.cs"];
m50_23 [label="Entry Unk.SetRuntimeStatistic", span="", cluster="Unk.SetRuntimeStatistic", file="LiveFeaturesAlgorithm.cs"];
m50_22 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="LiveFeaturesAlgorithm.cs"];
m50_36 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156", cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="LiveFeaturesAlgorithm.cs"];
m50_26 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="LiveFeaturesAlgorithm.cs"];
m50_28 [label="Entry QuantConnect.Notifications.NotificationManager.Web(string, object)", span="112-112", cluster="QuantConnect.Notifications.NotificationManager.Web(string, object)", file="LiveFeaturesAlgorithm.cs"];
m50_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="LiveFeaturesAlgorithm.cs"];
m50_70 [label="Entry Unk.>", span="", cluster="Unk.>", file="LiveFeaturesAlgorithm.cs"];
m50_39 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="LiveFeaturesAlgorithm.cs"];
m50_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1601-1601", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="LiveFeaturesAlgorithm.cs"];
m50_49 [label="Entry QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="153-153", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_50 [label="var coin = new Bitcoin()", span="155-155", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_51 [label=isLiveMode, span="156-156", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_52 [label="coin = JsonConvert.DeserializeObject<Bitcoin>(line)", span="162-162", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_54 [label="coin.Time = coin.EndTime - config.Increment", span="164-164", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_57 [label="string[] data = line.Split(',')", span="176-176", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_58 [label="coin.Time = DateTime.Parse(data[0], CultureInfo.InvariantCulture)", span="177-177", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_64 [label="coin.VolumeUSD = Convert.ToDecimal(data[6], CultureInfo.InvariantCulture)", span="183-183", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_66 [label="coin.Value = coin.Close", span="185-185", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_67 [label="return coin;", span="189-189", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_53 [label="coin.EndTime = DateTime.UtcNow", span="163-163", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_55 [label="coin.Value = coin.Close", span="165-165", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_56 [label="return coin;", span="168-168", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_59 [label="coin.Open = Convert.ToDecimal(data[1], CultureInfo.InvariantCulture)", span="178-178", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_60 [label="coin.High = Convert.ToDecimal(data[2], CultureInfo.InvariantCulture)", span="179-179", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_61 [label="coin.Low = Convert.ToDecimal(data[3], CultureInfo.InvariantCulture)", span="180-180", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_62 [label="coin.Close = Convert.ToDecimal(data[4], CultureInfo.InvariantCulture)", span="181-181", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_63 [label="coin.VolumeBTC = Convert.ToDecimal(data[5], CultureInfo.InvariantCulture)", span="182-182", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_65 [label="coin.WeightedPrice = Convert.ToDecimal(data[7], CultureInfo.InvariantCulture)", span="184-184", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_68 [label="Exit QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="153-153", cluster="QuantConnect.Bitcoin.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_48 [label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="44-44", cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="LiveFeaturesAlgorithm.cs"];
m50_24 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", span="136-136", cluster="QuantConnect.Algorithm.QCAlgorithm.Order(QuantConnect.Symbol, int)", file="LiveFeaturesAlgorithm.cs"];
m50_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="LiveFeaturesAlgorithm.cs"];
m50_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="LiveFeaturesAlgorithm.cs"];
m50_43 [label="Entry QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="131-131", cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_44 [label=isLiveMode, span="133-133", cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_45 [label="return new SubscriptionDataSource(''https://www.bitstamp.net/api/ticker/'', SubscriptionTransportMedium.Rest);", span="135-135", cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_46 [label="return new SubscriptionDataSource(''http://www.quandl.com/api/v1/datasets/BCHARTS/BITSTAMPUSD.csv?sort_order=asc'', SubscriptionTransportMedium.RemoteFile);", span="140-140", cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_47 [label="Exit QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="131-131", cluster="QuantConnect.Bitcoin.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_29 [label="Entry QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="76-76", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs"];
m50_30 [label="!Portfolio[''IBM''].HoldStock && data.ContainsKey(''IBM'')", span="78-78", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs"];
m50_31 [label="int quantity = (int)Math.Floor(Portfolio.MarginRemaining / data[''IBM''].Close)", span="80-80", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs"];
m50_32 [label="Order(''IBM'', quantity)", span="81-81", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs"];
m50_33 [label="Debug(''Purchased IBM on '' + Time.ToShortDateString())", span="82-82", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs"];
m50_34 [label="Notify.Email(''myemail@gmail.com'', ''Test'', ''Test Body'', ''test attachment'')", span="83-83", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs"];
m50_35 [label="Exit QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="76-76", cluster="QuantConnect.LiveTradingFeaturesAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="LiveFeaturesAlgorithm.cs"];
m50_38 [label="Entry System.DateTime.ToShortDateString()", span="0-0", cluster="System.DateTime.ToShortDateString()", file="LiveFeaturesAlgorithm.cs"];
m50_37 [label="Entry System.Math.Floor(decimal)", span="0-0", cluster="System.Math.Floor(decimal)", file="LiveFeaturesAlgorithm.cs"];
m50_40 [label="Entry QuantConnect.Bitcoin.Bitcoin()", span="117-117", cluster="QuantConnect.Bitcoin.Bitcoin()", file="LiveFeaturesAlgorithm.cs"];
m50_41 [label="Symbol = ''BTC''", span="119-119", cluster="QuantConnect.Bitcoin.Bitcoin()", file="LiveFeaturesAlgorithm.cs"];
m50_42 [label="Exit QuantConnect.Bitcoin.Bitcoin()", span="117-117", cluster="QuantConnect.Bitcoin.Bitcoin()", file="LiveFeaturesAlgorithm.cs"];
m50_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="LiveFeaturesAlgorithm.cs"];
m50_69 [label="Entry Bitcoin.cstr", span="", cluster="Bitcoin.cstr", file="LiveFeaturesAlgorithm.cs"];
m50_73 [label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="LiveFeaturesAlgorithm.cs"];
m50_74 [label="QuantConnect.LiveTradingFeaturesAlgorithm", span="", file="LiveFeaturesAlgorithm.cs"];
m50_75 [label="QuantConnect.Bitcoin", span="", file="LiveFeaturesAlgorithm.cs"];
m52_87 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="MarginCallEventsAlgorithm.cs"];
m52_80 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingFutureChainProvider.CachingFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.CachingFutureChainProvider.CachingFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="MarginCallEventsAlgorithm.cs"];
m52_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="MarginCallEventsAlgorithm.cs"];
m52_86 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="MarginCallEventsAlgorithm.cs"];
m52_73 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="583-583", cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="MarginCallEventsAlgorithm.cs"];
m52_90 [label="Entry QuantConnect.Interfaces.IAlgorithm.PostInitialize()", span="339-339", cluster="QuantConnect.Interfaces.IAlgorithm.PostInitialize()", file="MarginCallEventsAlgorithm.cs"];
m52_33 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="103-103", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="MarginCallEventsAlgorithm.cs"];
m52_34 [label="factory = new BacktestingBrokerageFactory()", span="105-105", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="MarginCallEventsAlgorithm.cs"];
m52_36 [label="return new BacktestingBrokerage(uninitializedAlgorithm, optionMarketSimulation);", span="108-108", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="MarginCallEventsAlgorithm.cs"];
m52_35 [label="var optionMarketSimulation = new BasicOptionAssignmentSimulation()", span="106-106", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="MarginCallEventsAlgorithm.cs"];
m52_37 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="103-103", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="MarginCallEventsAlgorithm.cs"];
m52_28 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="MarginCallEventsAlgorithm.cs"];
m52_82 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", span="645-645", cluster="QuantConnect.Interfaces.IAlgorithm.SetFutureChainProvider(QuantConnect.Interfaces.IFutureChainProvider)", file="MarginCallEventsAlgorithm.cs"];
m52_29 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="MarginCallEventsAlgorithm.cs"];
m52_26 [label="names.SingleOrDefault(name => MatchTypeName(name, algorithmName))", span="89-89", cluster="lambda expression", file="MarginCallEventsAlgorithm.cs"];
m52_30 [label="MatchTypeName(name, algorithmName)", span="89-89", cluster="lambda expression", file="MarginCallEventsAlgorithm.cs"];
m52_25 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="MarginCallEventsAlgorithm.cs"];
m52_27 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="MarginCallEventsAlgorithm.cs"];
m52_31 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="MarginCallEventsAlgorithm.cs"];
m52_23 [label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="353-353", cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="MarginCallEventsAlgorithm.cs"];
m52_81 [label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.BacktestingFutureChainProvider()", span="27-27", cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingFutureChainProvider.BacktestingFutureChainProvider()", file="MarginCallEventsAlgorithm.cs"];
m52_104 [label="Entry string.LastIndexOf(char)", span="0-0", cluster="string.LastIndexOf(char)", file="MarginCallEventsAlgorithm.cs"];
m52_75 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="633-633", cluster="QuantConnect.Interfaces.IAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="MarginCallEventsAlgorithm.cs"];
m52_24 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="MarginCallEventsAlgorithm.cs"];
m52_7 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="MarginCallEventsAlgorithm.cs"];
m52_72 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="358-358", cluster="QuantConnect.Interfaces.IAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="MarginCallEventsAlgorithm.cs"];
m52_71 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", span="600-600", cluster="QuantConnect.Interfaces.IAlgorithm.SetMaximumOrders(int)", file="MarginCallEventsAlgorithm.cs"];
m52_98 [label="Entry Unk.>", span="", cluster="Unk.>", file="MarginCallEventsAlgorithm.cs"];
m52_40 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", span="74-74", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.IBacktestingMarketSimulation)", file="MarginCallEventsAlgorithm.cs"];
m52_10 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="81-81", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MarginCallEventsAlgorithm.cs"];
m52_11 [label="string error", span="83-83", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MarginCallEventsAlgorithm.cs"];
m52_14 [label="var loader = new Loader(algorithmNodePacket.Language, TimeSpan.FromHours(1), names => names.SingleOrDefault(name => MatchTypeName(name, algorithmName)))", span="89-89", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MarginCallEventsAlgorithm.cs"];
m52_15 [label="var complete = loader.TryCreateAlgorithmInstanceWithIsolator(assemblyPath, algorithmNodePacket.RamAllocation, out algorithm, out error)", span="90-90", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MarginCallEventsAlgorithm.cs"];
m52_12 [label="IAlgorithm algorithm", span="84-84", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MarginCallEventsAlgorithm.cs"];
m52_13 [label="var algorithmName = Config.Get(''algorithm-type-name'')", span="85-85", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MarginCallEventsAlgorithm.cs"];
m52_16 [label="!complete", span="91-91", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MarginCallEventsAlgorithm.cs"];
m52_17 [label="throw new Exception(error + '': try re-building algorithm.'');", span="91-91", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MarginCallEventsAlgorithm.cs"];
m52_18 [label="return algorithm;", span="93-93", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MarginCallEventsAlgorithm.cs"];
m52_19 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="81-81", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="MarginCallEventsAlgorithm.cs"];
m52_78 [label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", span="27-27", cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingOptionChainProvider.BacktestingOptionChainProvider()", file="MarginCallEventsAlgorithm.cs"];
m52_85 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="487-487", cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", file="MarginCallEventsAlgorithm.cs"];
m52_8 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="MarginCallEventsAlgorithm.cs"];
m52_105 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="MarginCallEventsAlgorithm.cs"];
m52_41 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="121-121", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_42 [label="var initializeComplete = false", span="123-123", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_43 [label="baseJob.Type == PacketType.BacktestNode", span="129-129", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_44 [label="var backtestJob = baseJob as BacktestNodePacket", span="131-131", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_45 [label="algorithm.SetMaximumOrders(int.MaxValue)", span="132-132", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_46 [label="algorithm.SetParameters(baseJob.Parameters)", span="135-135", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_47 [label="algorithm.SetLiveMode(false)", span="136-136", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_48 [label="algorithm.SetAvailableDataTypes(GetConfiguredDataFeeds())", span="137-137", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_49 [label="algorithm.Schedule.SetEventSchedule(realTimeHandler)", span="140-140", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_50 [label="algorithm.SetOptionChainProvider(new CachingOptionChainProvider(new BacktestingOptionChainProvider()))", span="143-143", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_51 [label="algorithm.SetFutureChainProvider(new CachingFutureChainProvider(new BacktestingFutureChainProvider()))", span="146-146", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_52 [label="algorithm.Initialize()", span="149-149", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_53 [label="algorithm.SetDateTime(algorithm.StartDate.ConvertToUtc(algorithm.TimeZone))", span="152-152", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_54 [label="backtestJob.PeriodStart = algorithm.StartDate", span="155-155", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_55 [label="backtestJob.PeriodFinish = algorithm.EndDate", span="156-156", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_56 [label="backtestJob.BacktestId = algorithm.GetType().Name", span="157-157", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_58 [label="backtestJob.UserId = baseJob.UserId", span="159-159", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_59 [label="backtestJob.Channel = baseJob.Channel", span="160-160", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_61 [label="StartingPortfolioValue = algorithm.Portfolio.Cash", span="164-164", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_68 [label="algorithm.PostInitialize()", span="182-182", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_69 [label="return initializeComplete;", span="184-184", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_62 [label="throw new Exception(''The ConsoleSetupHandler is for backtests only. Use the BrokerageSetupHandler.'');", span="168-168", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_57 [label="backtestJob.Type = PacketType.BacktestNode", span="158-158", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_60 [label="StartingDate = backtestJob.PeriodStart", span="163-163", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_63 [label=Exception, span="171-171", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_66 [label="Errors.Count == 0", span="177-177", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_64 [label="Log.Error(err)", span="173-173", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_65 [label="Errors.Add(new AlgorithmSetupException(''Failed to initialize algorithm: Initialize(): '' + err.Message, err))", span="174-174", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_67 [label="initializeComplete = true", span="179-179", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_70 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="121-121", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="MarginCallEventsAlgorithm.cs"];
m52_38 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", span="69-69", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.BacktestingBrokerageFactory()", file="MarginCallEventsAlgorithm.cs"];
m52_84 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="617-617", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="MarginCallEventsAlgorithm.cs"];
m52_97 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="MarginCallEventsAlgorithm.cs"];
m52_32 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="211-211", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="MarginCallEventsAlgorithm.cs"];
m52_99 [label="string.IsNullOrEmpty(expectedTypeName)", span="213-213", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="MarginCallEventsAlgorithm.cs"];
m52_101 [label="return currentTypeFullName == expectedTypeName\r\n                || currentTypeFullName.Substring(currentTypeFullName.LastIndexOf('.') + 1) == expectedTypeName;", span="217-218", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="MarginCallEventsAlgorithm.cs"];
m52_100 [label="return true;", span="215-215", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="MarginCallEventsAlgorithm.cs"];
m52_102 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", span="211-211", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.MatchTypeName(string, string)", file="MarginCallEventsAlgorithm.cs"];
m52_21 [label="Entry Loader.cstr", span="", cluster="Loader.cstr", file="MarginCallEventsAlgorithm.cs"];
m52_77 [label="Entry QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="35-35", cluster="QuantConnect.Lean.Engine.DataFeeds.CachingOptionChainProvider.CachingOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="MarginCallEventsAlgorithm.cs"];
m52_88 [label="Entry QuantConnect.Lean.Engine.Setup.AlgorithmSetupException.AlgorithmSetupException(string, System.Exception)", span="38-38", cluster="QuantConnect.Lean.Engine.Setup.AlgorithmSetupException.AlgorithmSetupException(string, System.Exception)", file="MarginCallEventsAlgorithm.cs"];
m52_89 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="MarginCallEventsAlgorithm.cs"];
m52_74 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="191-191", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="MarginCallEventsAlgorithm.cs"];
m52_91 [label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="193-193", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="MarginCallEventsAlgorithm.cs"];
m52_92 [label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="195-195", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="MarginCallEventsAlgorithm.cs"];
m52_93 [label="dataFeedsConfigString != string.Empty", span="196-196", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="MarginCallEventsAlgorithm.cs"];
m52_94 [label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="198-198", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="MarginCallEventsAlgorithm.cs"];
m52_95 [label="return dataFeeds;", span="201-201", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="MarginCallEventsAlgorithm.cs"];
m52_96 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", span="191-191", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.GetConfiguredDataFeeds()", file="MarginCallEventsAlgorithm.cs"];
m52_79 [label="Entry QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", span="639-639", cluster="QuantConnect.Interfaces.IAlgorithm.SetOptionChainProvider(QuantConnect.Interfaces.IOptionChainProvider)", file="MarginCallEventsAlgorithm.cs"];
m52_76 [label="Entry QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", span="65-65", cluster="QuantConnect.Scheduling.ScheduleManager.SetEventSchedule(QuantConnect.Scheduling.IEventSchedule)", file="MarginCallEventsAlgorithm.cs"];
m52_106 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="225-225", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="MarginCallEventsAlgorithm.cs"];
m52_107 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", span="225-225", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.Dispose()", file="MarginCallEventsAlgorithm.cs"];
m52_103 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="MarginCallEventsAlgorithm.cs"];
m52_39 [label="Entry QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", span="34-34", cluster="QuantConnect.Brokerages.Backtesting.BasicOptionAssignmentSimulation.BasicOptionAssignmentSimulation()", file="MarginCallEventsAlgorithm.cs"];
m52_0 [label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="66-66", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="MarginCallEventsAlgorithm.cs"];
m52_1 [label="MaxOrders = int.MaxValue", span="68-68", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="MarginCallEventsAlgorithm.cs"];
m52_2 [label="StartingPortfolioValue = 0", span="69-69", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="MarginCallEventsAlgorithm.cs"];
m52_3 [label="StartingDate = new DateTime(1998, 01, 01)", span="70-70", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="MarginCallEventsAlgorithm.cs"];
m52_4 [label="MaximumRuntime = TimeSpan.FromDays(10 * 365)", span="71-71", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="MarginCallEventsAlgorithm.cs"];
m52_5 [label="Errors = new List<Exception>()", span="72-72", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="MarginCallEventsAlgorithm.cs"];
m52_6 [label="Exit QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="66-66", cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="MarginCallEventsAlgorithm.cs"];
m52_20 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="MarginCallEventsAlgorithm.cs"];
m52_83 [label="Entry QuantConnect.Interfaces.IAlgorithm.Initialize()", span="333-333", cluster="QuantConnect.Interfaces.IAlgorithm.Initialize()", file="MarginCallEventsAlgorithm.cs"];
m52_108 [label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler", span="", file="MarginCallEventsAlgorithm.cs"];
m52_109 [label=algorithmName, span="", file="MarginCallEventsAlgorithm.cs"];
m53_0 [label="Entry QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_1 [label="SetStartDate(2013, 10, 07)", span="35-35", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_27 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_11 [label="Entry QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="50-50", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_15 [label="last = Time", span="56-56", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_14 [label="MarketOnOpenOrder(''SPY'', 100)", span="55-55", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_16 [label="!submittedMarketOnCloseToday && security.Exchange.ExchangeOpen", span="58-58", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_17 [label="submittedMarketOnCloseToday = true", span="60-60", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_18 [label="MarketOnCloseOrder(''SPY'', -100)", span="61-61", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_12 [label="Time.Date != last.Date", span="52-52", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_13 [label="submittedMarketOnCloseToday = false", span="54-54", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_19 [label="Exit QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="50-50", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_2 [label="SetEndDate(2013, 10, 11)", span="36-36", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_3 [label="SetCash(100000)", span="37-37", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_4 [label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Second, fillDataForward: true, extendedMarketHours: true)", span="39-39", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_5 [label="security = Securities[''SPY'']", span="41-41", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_6 [label="Exit QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", span="33-33", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.Initialize()", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, int, string)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_26 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_22 [label="Entry QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="65-65", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_23 [label="var order = Transactions.GetOrderById(fill.OrderId)", span="67-67", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_24 [label="Console.WriteLine(Time + '' - '' + order.Type + '' - '' + fill.Status + '':: '' + fill)", span="68-68", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_25 [label="Exit QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="65-65", cluster="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="MarketOnOpenOnCloseAlgorithm.cs"];
m53_28 [label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm", span="", file="MarketOnOpenOnCloseAlgorithm.cs"];
m55_0 [label="Entry QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", span="56-56", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_1 [label="_security = security", span="58-58", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_2 [label="TransactionModel = transactionModel", span="59-59", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_3 [label="MarginModel = marginModel", span="60-60", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_4 [label="_totalSaleVolume = 0", span="62-62", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_5 [label="_lastTradeProfit = 0", span="63-63", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_6 [label="Exit QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", span="56-56", cluster="QuantConnect.Securities.SecurityHolding.SecurityHolding(QuantConnect.Securities.Security, QuantConnect.Securities.Interfaces.ISecurityTransactionModel, QuantConnect.Securities.ISecurityMarginModel)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_10 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", span="338-338", cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_11 [label="_profit += profitLoss", span="340-340", cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_12 [label="Exit QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", span="338-338", cluster="QuantConnect.Securities.SecurityHolding.AddNewProfit(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_32 [label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", span="84-84", cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.GetOrderFee(decimal, decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_23 [label="Entry QuantConnect.Securities.SecurityHolding.UpdatePrice(decimal)", span="374-374", cluster="QuantConnect.Securities.SecurityHolding.UpdatePrice(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_24 [label="_price = closingPrice", span="376-376", cluster="QuantConnect.Securities.SecurityHolding.UpdatePrice(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_25 [label="Exit QuantConnect.Securities.SecurityHolding.UpdatePrice(decimal)", span="374-374", cluster="QuantConnect.Securities.SecurityHolding.UpdatePrice(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_26 [label="Entry QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", span="383-383", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_27 [label="AbsoluteQuantity == 0", span="385-385", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_28 [label="return 0;", span="387-387", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_29 [label="var orderFee = TransactionModel.GetOrderFee(AbsoluteQuantity, Price)", span="391-391", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_30 [label="return (Price - AveragePrice) * Quantity - orderFee;", span="393-393", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_31 [label="Exit QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", span="383-383", cluster="QuantConnect.Securities.SecurityHolding.TotalCloseProfit()", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_19 [label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="364-364", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_20 [label="_averagePrice = averagePrice", span="366-366", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_21 [label="_quantity = quantity", span="367-367", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_22 [label="Exit QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="364-364", cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_16 [label="Entry QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", span="356-356", cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_17 [label="_lastTradeProfit = lastTradeProfit", span="358-358", cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_18 [label="Exit QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", span="356-356", cluster="QuantConnect.Securities.SecurityHolding.SetLastTradeProfit(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_7 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", span="329-329", cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_8 [label="_totalFees += newFee", span="331-331", cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_9 [label="Exit QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", span="329-329", cluster="QuantConnect.Securities.SecurityHolding.AddNewFee(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_13 [label="Entry QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="347-347", cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_14 [label="_totalSaleVolume += saleValue", span="349-349", cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_15 [label="Exit QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", span="347-347", cluster="QuantConnect.Securities.SecurityHolding.AddNewSale(decimal)", file="MultipleSymbolConsolidationAlgorithm.cs"];
m55_33 [label="QuantConnect.Securities.SecurityHolding", span="", file="MultipleSymbolConsolidationAlgorithm.cs"];
m56_55 [label="Entry QuantConnect.Indicators.ParabolicStopAndReverse.Reset()", span="74-74", cluster="QuantConnect.Indicators.ParabolicStopAndReverse.Reset()", file="OpeningBreakoutAlgorithm.cs"];
m56_141 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="OpeningBreakoutAlgorithm.cs"];
m56_41 [label="Entry QuantConnect.Chart.Chart(string)", span="64-64", cluster="QuantConnect.Chart.Chart(string)", file="OpeningBreakoutAlgorithm.cs"];
m56_107 [label="Entry QuantConnect.Securities.Security.GetLastData()", span="583-583", cluster="QuantConnect.Securities.Security.GetLastData()", file="OpeningBreakoutAlgorithm.cs"];
m56_113 [label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="258-258", cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="OpeningBreakoutAlgorithm.cs"];
m56_103 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="210-210", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="OpeningBreakoutAlgorithm.cs"];
m56_142 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="OpeningBreakoutAlgorithm.cs"];
m56_155 [label="Entry QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ShouldEnablePsarTrailingStop(decimal)", span="512-512", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ShouldEnablePsarTrailingStop(decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_187 [label="return !EnablePsarTrailingStop\r\n                // once we're up a certain percentage, we'll use PSAR to control our stop\r\n                && Security.Holdings.UnrealizedProfitPercent > PercentProfitStartPsarTrailingStop\r\n                // make sure the PSAR is on the right side\r\n                && PsarIsOnRightSideOfPrice\r\n                // make sure the PSAR is more profitable than our global loss\r\n                && IsPsarMoreProfitableThanStop(stopPrice);", span="515-521", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ShouldEnablePsarTrailingStop(decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_188 [label="Exit QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ShouldEnablePsarTrailingStop(decimal)", span="512-512", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ShouldEnablePsarTrailingStop(decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_102 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="276-276", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="OpeningBreakoutAlgorithm.cs"];
m56_168 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="200-200", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="OpeningBreakoutAlgorithm.cs"];
m56_143 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="OpeningBreakoutAlgorithm.cs"];
m56_170 [label="Entry lambda expression", span="388-388", cluster="lambda expression", file="OpeningBreakoutAlgorithm.cs"];
m56_52 [label="Entry lambda expression", span="165-165", cluster="lambda expression", file="OpeningBreakoutAlgorithm.cs"];
m56_53 [label="PSARMin.Reset()", span="165-165", cluster="lambda expression", file="OpeningBreakoutAlgorithm.cs"];
m56_54 [label="Exit lambda expression", span="165-165", cluster="lambda expression", file="OpeningBreakoutAlgorithm.cs"];
m56_171 [label="x.OrderId == orderEvent.OrderId", span="388-388", cluster="lambda expression", file="OpeningBreakoutAlgorithm.cs"];
m56_172 [label="Exit lambda expression", span="388-388", cluster="lambda expression", file="OpeningBreakoutAlgorithm.cs"];
m56_35 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="86-86", cluster="QuantConnect.Algorithm.QCAlgorithm.ADX(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="OpeningBreakoutAlgorithm.cs"];
m56_40 [label="Entry TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", span="49-49", cluster="TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", file="OpeningBreakoutAlgorithm.cs"];
m56_169 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="OpeningBreakoutAlgorithm.cs"];
m56_48 [label="Entry QuantConnect.Scheduling.ScheduleManager.Event(string)", span="203-203", cluster="QuantConnect.Scheduling.ScheduleManager.Event(string)", file="OpeningBreakoutAlgorithm.cs"];
m56_156 [label="Entry QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", span="20-20", cluster="QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", file="OpeningBreakoutAlgorithm.cs"];
m56_189 [label="Entry QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.IsPsarMoreProfitableThanStop(decimal)", span="539-539", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.IsPsarMoreProfitableThanStop(decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_190 [label="return (Security.Holdings.IsLong && PSARMin > stopPrice) \r\n                || (Security.Holdings.IsShort && PSARMin < stopPrice);", span="541-542", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.IsPsarMoreProfitableThanStop(decimal)", color=red, community=0, file="OpeningBreakoutAlgorithm.cs"];
m56_191 [label="Exit QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.IsPsarMoreProfitableThanStop(decimal)", span="539-539", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.IsPsarMoreProfitableThanStop(decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_185 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="OpeningBreakoutAlgorithm.cs"];
m56_56 [label="Entry QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", span="171-171", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_57 [label="var history = History(symbol, OpeningSpanInMinutes, Resolution.Minute)", span="175-175", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_58 [label="var openingSpan = TimeSpan.FromMinutes(OpeningSpanInMinutes)", span="178-178", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_60 [label=history, span="193-193", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_59 [label="OpeningBarRange = new TradeBar\r\n            {\r\n                // time values\r\n                Time = Time - openingSpan,\r\n                EndTime = Time,\r\n                Period = openingSpan,\r\n                // high and low\r\n                High = Security.Close,\r\n                Low = Security.Close\r\n            }", span="181-190", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_61 [label="OpeningBarRange.Low = Math.Min(OpeningBarRange.Low, tradeBar.Low)", span="195-195", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_63 [label="OpeningBarRange.Low *= 1 - BreakoutThresholdPercent", span="200-200", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_62 [label="OpeningBarRange.High = Math.Max(OpeningBarRange.High, tradeBar.High)", span="196-196", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_64 [label="OpeningBarRange.High *= 1 + BreakoutThresholdPercent", span="201-201", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_65 [label="Log(''---------'' + Time.Date + ''---------'')", span="203-203", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_66 [label="Log(''OpeningBarRange: Low: '' + OpeningBarRange.Low.SmartRounding() + '' High: '' + OpeningBarRange.High.SmartRounding())", span="204-204", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_67 [label="Exit QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", span="171-171", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.MarketOpeningSpanHandler()", file="OpeningBreakoutAlgorithm.cs"];
m56_29 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="OpeningBreakoutAlgorithm.cs"];
m56_104 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="300-300", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="OpeningBreakoutAlgorithm.cs"];
m56_50 [label="Entry QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.AfterMarketOpen(QuantConnect.Symbol, double, bool)", span="366-366", cluster="QuantConnect.Scheduling.IFluentSchedulingTimeSpecifier.AfterMarketOpen(QuantConnect.Symbol, double, bool)", file="OpeningBreakoutAlgorithm.cs"];
m56_73 [label="Entry decimal.SmartRounding()", span="206-206", cluster="decimal.SmartRounding()", file="OpeningBreakoutAlgorithm.cs"];
m56_49 [label="Entry QuantConnect.Scheduling.IFluentSchedulingDateSpecifier.EveryDay(QuantConnect.Symbol)", span="319-319", cluster="QuantConnect.Scheduling.IFluentSchedulingDateSpecifier.EveryDay(QuantConnect.Symbol)", file="OpeningBreakoutAlgorithm.cs"];
m56_186 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="OpeningBreakoutAlgorithm.cs"];
m56_106 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", span="292-292", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator(string, bool, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator, QuantConnect.Indicators.Indicator)", file="OpeningBreakoutAlgorithm.cs"];
m56_109 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", span="246-246", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator, QuantConnect.Indicators.BarIndicator)", file="OpeningBreakoutAlgorithm.cs"];
m56_110 [label="Entry QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", span="280-280", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_114 [label="Time.TimeOfDay.Hours >= 10", span="283-283", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_115 [label="return;", span="283-283", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_116 [label="var expectedCaptureRange = 0.1m*ATR14", span="286-286", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_117 [label="var allowedDollarLoss = MaximumPorfolioRiskPercentPerPosition * Portfolio.TotalPortfolioValue", span="288-288", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_118 [label="var shares = (int) (allowedDollarLoss/expectedCaptureRange)", span="290-290", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_119 [label="var maxShare = (int) CalculateOrderQuantity(symbol, MaximumLeverage)", span="296-296", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_120 [label="shares = Math.Min(shares, maxShare)", span="297-297", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_121 [label=ShouldEnterLong, span="304-304", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_122 [label="MarketTicket = MarketOrder(symbol, shares)", span="307-307", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_123 [label="Log(''Enter long @ '' + MarketTicket.AverageFillPrice.SmartRounding() + '' Shares: '' + shares)", span="308-308", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_127 [label="StopLossTicket = StopMarketOrder(symbol, -shares, stopPrice)", span="316-316", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_131 [label="MarketTicket = MarketOrder(symbol, - -shares)", span="325-325", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_136 [label="StopLossTicket = StopMarketOrder(symbol, -shares, stopPrice)", span="334-334", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_138 [label="Log(''Submitted stop loss @ '' + stopPrice.SmartRounding() + '' Shares: '' + shares)", span="337-337", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_130 [label=ShouldEnterShort, span="322-322", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_124 [label="Plot(symbol, ''Enter'', MarketTicket.AverageFillPrice)", span="309-309", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_125 [label="EnablePsarTrailingStop = false", span="312-312", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_126 [label="var stopPrice = Security.Low*(1 - GlobalStopLossPercent)", span="315-315", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_129 [label="Log(''Submitted stop loss @ '' + stopPrice.SmartRounding())", span="319-319", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_128 [label=EnableOrderUpdateLogging, span="317-317", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_132 [label="Log(''Enter short @ '' + MarketTicket.AverageFillPrice.SmartRounding())", span="326-326", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_133 [label="Plot(symbol, ''Enter'', MarketTicket.AverageFillPrice)", span="327-327", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_134 [label="EnablePsarTrailingStop = false", span="330-330", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_135 [label="var stopPrice = Security.High*(1 + GlobalStopLossPercent)", span="333-333", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_137 [label=EnableOrderUpdateLogging, span="335-335", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_139 [label="Exit QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", span="280-280", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ScanForEntrance()", file="OpeningBreakoutAlgorithm.cs"];
m56_42 [label="Entry QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", span="195-195", cluster="QuantConnect.Series.Series(string, QuantConnect.SeriesType, int)", file="OpeningBreakoutAlgorithm.cs"];
m56_167 [label="Entry QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.LiveDebug(object)", span="436-436", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.LiveDebug(object)", file="OpeningBreakoutAlgorithm.cs"];
m56_178 [label="msg == null", span="438-438", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.LiveDebug(object)", file="OpeningBreakoutAlgorithm.cs"];
m56_181 [label="Debug(msg.ToString())", span="442-442", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.LiveDebug(object)", file="OpeningBreakoutAlgorithm.cs"];
m56_182 [label="Log(msg.ToString())", span="443-443", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.LiveDebug(object)", file="OpeningBreakoutAlgorithm.cs"];
m56_183 [label="Log(msg.ToString())", span="447-447", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.LiveDebug(object)", file="OpeningBreakoutAlgorithm.cs"];
m56_179 [label="return;", span="438-438", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.LiveDebug(object)", file="OpeningBreakoutAlgorithm.cs"];
m56_180 [label=LiveMode, span="440-440", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.LiveDebug(object)", file="OpeningBreakoutAlgorithm.cs"];
m56_184 [label="Exit QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.LiveDebug(object)", span="436-436", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.LiveDebug(object)", file="OpeningBreakoutAlgorithm.cs"];
m56_72 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="OpeningBreakoutAlgorithm.cs"];
m56_45 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="OpeningBreakoutAlgorithm.cs"];
m56_154 [label="Entry QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", span="211-211", cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="OpeningBreakoutAlgorithm.cs"];
m56_140 [label="Entry QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", span="928-928", cluster="QuantConnect.Algorithm.QCAlgorithm.CalculateOrderQuantity(QuantConnect.Symbol, decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_46 [label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="74-74", cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="OpeningBreakoutAlgorithm.cs"];
m56_158 [label="Entry QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="375-375", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OpeningBreakoutAlgorithm.cs"];
m56_159 [label="LiveMode || orderEvent.Status.IsFill() || EnableOrderUpdateLogging", span="378-378", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OpeningBreakoutAlgorithm.cs"];
m56_160 [label="LiveDebug(''Filled: '' + orderEvent.FillQuantity + '' Price: '' + orderEvent.FillPrice)", span="380-380", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OpeningBreakoutAlgorithm.cs"];
m56_161 [label="!Security.Invested && orderEvent.Status == OrderStatus.Filled", span="384-384", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OpeningBreakoutAlgorithm.cs"];
m56_163 [label="var ticket = Transactions.GetOrderTickets(x => x.OrderId == orderEvent.OrderId).Single()", span="388-388", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OpeningBreakoutAlgorithm.cs"];
m56_162 [label="LastExitTime = Time", span="387-387", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OpeningBreakoutAlgorithm.cs"];
m56_165 [label="Exit QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="375-375", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OpeningBreakoutAlgorithm.cs"];
m56_164 [label="Plot(symbol, ''Exit'', ticket.AverageFillPrice)", span="389-389", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OpeningBreakoutAlgorithm.cs"];
m56_30 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="OpeningBreakoutAlgorithm.cs"];
m56_32 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="884-884", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="OpeningBreakoutAlgorithm.cs"];
m56_177 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760", cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="OpeningBreakoutAlgorithm.cs"];
m56_38 [label="Entry QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", span="43-43", cluster="QuantConnect.Indicators.ParabolicStopAndReverse.ParabolicStopAndReverse(string, decimal, decimal, decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_31 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="OpeningBreakoutAlgorithm.cs"];
m56_37 [label="Entry QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", span="190-190", cluster="QuantConnect.Algorithm.QCAlgorithm.ATR(QuantConnect.Symbol, int, QuantConnect.Indicators.MovingAverageType, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, QuantConnect.Data.Market.IBaseDataBar>)", file="OpeningBreakoutAlgorithm.cs"];
m56_166 [label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50", cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="OpeningBreakoutAlgorithm.cs"];
m56_0 [label="Entry QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", span="107-107", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_1 [label="SetStartDate(2013, 10, 07)", span="110-110", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_2 [label="SetEndDate(2013, 10, 11)", span="111-111", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_3 [label="SetCash(100000)", span="114-114", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_4 [label="SetBrokerageModel(BrokerageName.TradierBrokerage)", span="117-117", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_5 [label="AddSecurity(SecurityType.Equity, symbol, Resolution.Second)", span="120-120", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_6 [label="Security = Securities[symbol]", span="123-123", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_7 [label="Security.SetLeverage(MaximumLeverage)", span="126-126", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_8 [label="ADX14 = ADX(symbol, 28, Resolution.Hour)", span="129-129", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_9 [label="STD14 = STD(symbol, 14, Resolution.Daily)", span="130-130", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_10 [label="ATR14 = ATR(symbol, 14, resolution: Resolution.Daily)", span="131-131", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_11 [label="PSARMin = new ParabolicStopAndReverse(symbol, afStart: 0.0001m, afIncrement: 0.0001m)", span="132-132", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_12 [label="var oneWeekInMarketHours = (int)(5*6.5)", span="135-135", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_13 [label="SmoothedATR14 = new ExponentialMovingAverage(''Smoothed_'' + ATR14.Name, oneWeekInMarketHours).Of(ATR14)", span="136-136", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_14 [label="SmoothedSTD14 = new ExponentialMovingAverage(''Smoothed_''+STD14.Name, oneWeekInMarketHours).Of(STD14)", span="138-138", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_15 [label="var chart = new Chart(symbol)", span="141-141", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_16 [label="chart.AddSeries(new Series(ADX14.Name, SeriesType.Line, 0))", span="142-142", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_17 [label="chart.AddSeries(new Series(''Enter'', SeriesType.Scatter, 0))", span="143-143", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_18 [label="chart.AddSeries(new Series(''Exit'', SeriesType.Scatter, 0))", span="144-144", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_19 [label="chart.AddSeries(new Series(PSARMin.Name, SeriesType.Scatter, 0))", span="145-145", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_20 [label="AddChart(chart)", span="146-146", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_21 [label="var history = History(symbol, 20, Resolution.Daily)", span="148-148", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_22 [label=history, span="149-149", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_23 [label="ADX14.Update(bar)", span="151-151", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_26 [label="Schedule.Event(''MarketOpenSpan'')\r\n                .EveryDay(symbol)\r\n                .AfterMarketOpen(symbol, minutesAfterOpen: OpeningSpanInMinutes)\r\n                .Run(MarketOpeningSpanHandler)", span="157-160", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_24 [label="ATR14.Update(bar)", span="152-152", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_25 [label="STD14.Update(bar.EndTime, bar.Close)", span="153-153", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_27 [label="Schedule.Event(''MarketOpen'')\r\n                .EveryDay(symbol)\r\n                .AfterMarketOpen(symbol, minutesAfterOpen: -1)\r\n                .Run(() => PSARMin.Reset())", span="162-165", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_28 [label="Exit QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", span="107-107", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.Initialize()", file="OpeningBreakoutAlgorithm.cs"];
m56_34 [label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="652-652", cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_71 [label="Entry System.Math.Max(decimal, decimal)", span="0-0", cluster="System.Math.Max(decimal, decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_173 [label="Entry QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnEndOfDay()", span="396-396", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnEndOfDay()", file="OpeningBreakoutAlgorithm.cs"];
m56_174 [label="Security.Invested", span="398-398", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnEndOfDay()", file="OpeningBreakoutAlgorithm.cs"];
m56_175 [label="Liquidate()", span="400-400", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnEndOfDay()", file="OpeningBreakoutAlgorithm.cs"];
m56_176 [label="Exit QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnEndOfDay()", span="396-396", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnEndOfDay()", file="OpeningBreakoutAlgorithm.cs"];
m56_47 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="36-36", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_70 [label="Entry System.Math.Min(decimal, decimal)", span="0-0", cluster="System.Math.Min(decimal, decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_43 [label="Entry QuantConnect.Chart.AddSeries(QuantConnect.Series)", span="74-74", cluster="QuantConnect.Chart.AddSeries(QuantConnect.Series)", file="OpeningBreakoutAlgorithm.cs"];
m56_111 [label="Entry QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", span="345-345", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_144 [label="StopLossTicket == null || StopLossTicket.Status == OrderStatus.Filled", span="348-348", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_145 [label="return;", span="348-348", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_146 [label="var stopPrice = StopLossTicket.Get(OrderField.StopPrice)", span="354-354", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_147 [label="ShouldEnablePsarTrailingStop(stopPrice)", span="357-357", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_148 [label="EnablePsarTrailingStop = true", span="359-359", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_150 [label="EnablePsarTrailingStop && PSARMin.IsReady", span="364-364", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_149 [label="Log(''Enabled PSAR trailing stop @ ProfitPercent: '' + Security.Holdings.UnrealizedProfitPercent.SmartRounding())", span="360-360", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_151 [label="StopLossTicket.Update(new UpdateOrderFields {StopPrice = PSARMin})", span="366-366", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_152 [label="Log(''Submitted stop loss @ '' + PSARMin.Current.Value.SmartRounding())", span="367-367", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_153 [label="Exit QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", span="345-345", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.ManageStopLoss()", file="OpeningBreakoutAlgorithm.cs"];
m56_74 [label="Entry QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", span="211-211", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_75 [label=IsWarmingUp, span="214-214", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_76 [label="return;", span="214-214", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_77 [label="!IsWarmingUp && !FinishedWarmup", span="217-217", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_78 [label="FinishedWarmup = true", span="220-220", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_84 [label="PSARMin.Update((TradeBar) Security.GetLastData())", span="232-232", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_79 [label="PlotIndicator(''ADX'', ADX14)", span="223-223", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_80 [label="PlotIndicator(''ADX'', ADX14.NegativeDirectionalIndex, ADX14.PositiveDirectionalIndex)", span="224-224", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_81 [label="PlotIndicator(''ATR'', true, ATR14)", span="226-226", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_82 [label="PlotIndicator(''STD'', true, STD14)", span="227-227", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_83 [label="PlotIndicator(''ATR'', true, SmoothedATR14)", span="228-228", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_85 [label=ShouldPlot, span="235-235", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_86 [label="Plot(symbol, ''Price'', Security.Close)", span="238-238", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_89 [label="OpeningBarRange == null || OpeningBarRange.EndTime.Date != Time.Date || OpeningBarRange.EndTime == Time", span="247-247", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_87 [label="PSARMin.IsReady", span="240-240", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_88 [label="Plot(symbol, PSARMin)", span="242-242", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_90 [label="return;", span="247-247", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_91 [label="StopLossTicket != null && StopLossTicket.Status == OrderStatus.Filled", span="250-250", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_92 [label="OpeningBarRange = null", span="253-253", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_95 [label="!Security.Invested", span="259-259", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_93 [label="StopLossTicket = null", span="254-254", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_94 [label="return;", span="255-255", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_96 [label="ScanForEntrance()", span="261-261", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_97 [label="Security.Invested", span="266-266", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_98 [label="ManageStopLoss()", span="268-268", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_99 [label="StopLossTicket != null && StopLossTicket.Status.IsOpen()", span="270-270", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_100 [label="StopLossTicket.Cancel()", span="272-272", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_101 [label="Exit QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", span="211-211", cluster="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm.OnData(QuantConnect.Data.Slice)", file="OpeningBreakoutAlgorithm.cs"];
m56_157 [label="Entry QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", span="249-249", cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="OpeningBreakoutAlgorithm.cs"];
m56_39 [label="Entry QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", span="30-30", cluster="QuantConnect.Indicators.ExponentialMovingAverage.ExponentialMovingAverage(string, int)", file="OpeningBreakoutAlgorithm.cs"];
m56_108 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="151-151", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="OpeningBreakoutAlgorithm.cs"];
m56_112 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="OpeningBreakoutAlgorithm.cs"];
m56_36 [label="Entry QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="974-974", cluster="QuantConnect.Algorithm.QCAlgorithm.STD(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="OpeningBreakoutAlgorithm.cs"];
m56_105 [label="Entry QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", span="227-227", cluster="QuantConnect.Algorithm.QCAlgorithm.PlotIndicator<T>(string, bool, params QuantConnect.Indicators.IndicatorBase<T>[])", file="OpeningBreakoutAlgorithm.cs"];
m56_33 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="OpeningBreakoutAlgorithm.cs"];
m56_69 [label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120", cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="OpeningBreakoutAlgorithm.cs"];
m56_51 [label="Entry QuantConnect.Scheduling.IFluentSchedulingRunnable.Run(System.Action)", span="389-389", cluster="QuantConnect.Scheduling.IFluentSchedulingRunnable.Run(System.Action)", file="OpeningBreakoutAlgorithm.cs"];
m56_44 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", span="40-40", cluster="QuantConnect.Algorithm.QCAlgorithm.AddChart(QuantConnect.Chart)", file="OpeningBreakoutAlgorithm.cs"];
m56_192 [label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm", span="", file="OpeningBreakoutAlgorithm.cs"];
m56_193 [label="QuantConnect.Orders.OrderEvent", span="", file="OpeningBreakoutAlgorithm.cs"];
m58_39 [label="Entry Unk.Take", span="", cluster="Unk.Take", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1358-1358", cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_14 [label="Entry QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", span="324-324", cluster="QuantConnect.Securities.Option.Option.SetFilter(System.Func<QuantConnect.Securities.OptionFilterUniverse, QuantConnect.Securities.OptionFilterUniverse>)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_38 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_42 [label="Entry Unk.MarketOrder", span="", cluster="Unk.MarketOrder", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_44 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_16 [label="Entry lambda expression", span="46-48", cluster="lambda expression", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_17 [label="u.IncludeWeeklys()\r\n                                   .Strikes(-2, +2)\r\n                                   .Expiration(TimeSpan.Zero, TimeSpan.FromDays(10))", span="46-48", cluster="lambda expression", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_18 [label="Exit lambda expression", span="46-48", cluster="lambda expression", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_45 [label="x.Strike", span="75-75", cluster="lambda expression", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_46 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_27 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1344-1344", cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_0 [label="Entry QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", span="36-36", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_1 [label="SetStartDate(2015, 12, 24)", span="38-38", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_2 [label="SetEndDate(2015, 12, 24)", span="39-39", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_3 [label="SetCash(100000)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_4 [label="var equity = AddEquity(UnderlyingTicker)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_5 [label="var option = AddOption(UnderlyingTicker)", span="43-43", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_7 [label="SetBenchmark(equity.Symbol)", span="51-51", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_6 [label="option.SetFilter(u => u.IncludeWeeklys()\r\n                                   .Strikes(-2, +2)\r\n                                   .Expiration(TimeSpan.Zero, TimeSpan.FromDays(10)))", span="46-48", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_8 [label="Exit QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", span="36-36", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.Initialize()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_22 [label="Entry QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", span="271-271", cluster="QuantConnect.Securities.OptionFilterUniverse.Expiration(System.TimeSpan, System.TimeSpan)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_23 [label="Entry QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.~OptionExerciseAssignRegressionAlgorithm()", span="54-54", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.~OptionExerciseAssignRegressionAlgorithm()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_24 [label="!_assignedOption", span="56-56", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.~OptionExerciseAssignRegressionAlgorithm()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_25 [label="throw new Exception(''In the end, short ITM option position was not assigned.'');", span="58-58", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.~OptionExerciseAssignRegressionAlgorithm()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_26 [label="Exit QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.~OptionExerciseAssignRegressionAlgorithm()", span="54-54", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.~OptionExerciseAssignRegressionAlgorithm()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_20 [label="Entry QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", span="199-199", cluster="QuantConnect.Securities.OptionFilterUniverse.Strikes(int, int)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_43 [label="Entry Unk.Skip", span="", cluster="Unk.Skip", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_41 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_51 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_47 [label="Entry QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="96-96", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_48 [label="Log(orderEvent.ToString())", span="98-98", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_49 [label="Exit QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="96-96", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_37 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", span="189-189", cluster="QuantConnect.Data.Market.DataDictionary<T>.TryGetValue(QuantConnect.Symbol, out T)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_40 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_28 [label="Entry QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="66-66", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_29 [label="!Portfolio.Invested", span="68-68", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_31 [label="slice.OptionChains.TryGetValue(OptionSymbol, out chain)", span="71-71", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_30 [label="OptionChain chain", span="70-70", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_32 [label="var contracts = (\r\n                        from optionContract in chain.OrderByDescending(x => x.Strike)\r\n                        where optionContract.Right == OptionRight.Call\r\n                        where optionContract.Expiry == Time.Date\r\n                        where optionContract.Strike < chain.Underlying.Price\r\n                        select optionContract\r\n                        ).Take(2)", span="74-80", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_33 [label="contracts.Any()", span="82-82", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_34 [label="MarketOrder(contracts.FirstOrDefault().Symbol, 1)", span="84-84", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_35 [label="MarketOrder(contracts.Skip(1).FirstOrDefault().Symbol, -1)", span="85-85", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_36 [label="Exit QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="66-66", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_52 [label="Entry QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="100-100", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_53 [label="Log(assignmentEvent.ToString())", span="102-102", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_54 [label="_assignedOption = true", span="103-103", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_55 [label="Exit QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="100-100", cluster="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="976-976", cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_50 [label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153", cluster="QuantConnect.Orders.OrderEvent.ToString()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_19 [label="Entry QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", span="98-98", cluster="QuantConnect.Securities.OptionFilterUniverse.IncludeWeeklys()", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m58_56 [label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm", span="", file="OptionExerciseAssignRegressionAlgorithm.cs"];
m59_0 [label="Entry QuantConnect.Tests.AlgorithmRunner.AlgorithmRunner()", span="32-32", cluster="QuantConnect.Tests.AlgorithmRunner.AlgorithmRunner()", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_1 [label="System.IO.File.Delete(''regression.log'')", span="35-35", cluster="QuantConnect.Tests.AlgorithmRunner.AlgorithmRunner()", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_2 [label="Exit QuantConnect.Tests.AlgorithmRunner.AlgorithmRunner()", span="32-32", cluster="QuantConnect.Tests.AlgorithmRunner.AlgorithmRunner()", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_51 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_45 [label="Entry QuantConnect.Logging.ILogHandler.Trace(string)", span="42-42", cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_44 [label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="89-89", cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_38 [label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118", cluster="QuantConnect.Configuration.Config.Set(string, string)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_40 [label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="33-33", cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_53 [label="Entry lambda expression", span="73-78", cluster="lambda expression", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_55 [label="var job = systemHandlers.JobQueue.NextJob(out algorithmPath)", span="76-76", cluster="lambda expression", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_56 [label="engine.Run(job, algorithmPath)", span="77-77", cluster="lambda expression", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_54 [label="string algorithmPath", span="75-75", cluster="lambda expression", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_57 [label="Exit lambda expression", span="73-78", cluster="lambda expression", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_37 [label="Entry QuantConnect.Util.Composer.Reset()", span="198-198", cluster="QuantConnect.Util.Composer.Reset()", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_49 [label="Entry System.Threading.Tasks.Task.Wait()", span="0-0", cluster="System.Threading.Tasks.Task.Wait()", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_42 [label="Entry QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(params QuantConnect.Logging.ILogHandler[])", span="38-38", cluster="QuantConnect.Logging.CompositeLogHandler.CompositeLogHandler(params QuantConnect.Logging.ILogHandler[])", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_43 [label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="192-192", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_59 [label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", span="82-82", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_3 [label="Entry System.IO.File.Delete(string)", span="0-0", cluster="System.IO.File.Delete(string)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_52 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_46 [label="Entry QuantConnect.Logging.ILogHandler.Trace(string, params object[])", span="62-62", cluster="QuantConnect.Logging.ILogHandler.Trace(string, params object[])", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_58 [label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="36-36", cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_41 [label="Entry QuantConnect.Logging.FileLogHandler.FileLogHandler(string, bool)", span="38-38", cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string, bool)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_50 [label="Entry QuantConnect.Logging.ILogHandler.Error(string, params object[])", span="30-30", cluster="QuantConnect.Logging.ILogHandler.Error(string, params object[])", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_36 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_48 [label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0", cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_47 [label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_4 [label="Entry QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_5 [label="var statistics = new Dictionary<string, string>()", span="40-40", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_7 [label="Config.Set(''algorithm-type-name'', algorithm)", span="47-47", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_14 [label="Config.Set(''algorithm-language'', language.ToString())", span="54-54", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_15 [label="Config.Set(''algorithm-location'', ''QuantConnect.Algorithm.'' + language + ''.dll'')", span="55-55", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_23 [label="Log.LogHandler.Trace(''{0}: Running '' + algorithm + ''...'', DateTime.UtcNow)", span="67-67", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_32 [label=expectedStatistics, span="91-91", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_6 [label="Composer.Instance.Reset()", span="42-42", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_8 [label="Config.Set(''live-mode'', ''false'')", span="48-48", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_9 [label="Config.Set(''environment'', '''')", span="49-49", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_10 [label="Config.Set(''messaging-handler'', ''QuantConnect.Messaging.Messaging'')", span="50-50", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_11 [label="Config.Set(''job-queue-handler'', ''QuantConnect.Queues.JobQueue'')", span="51-51", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_12 [label="Config.Set(''api-handler'', ''QuantConnect.Api.Api'')", span="52-52", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_13 [label="Config.Set(''result-handler'', ''QuantConnect.Lean.Engine.Results.BacktestingResultHandler'')", span="53-53", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_16 [label="var debugEnabled = Log.DebuggingEnabled", span="57-57", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_17 [label="var logHandlers = new ILogHandler[] {new ConsoleLogHandler(), new FileLogHandler(''regression.log'', false)}", span="59-59", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_29 [label="Log.DebuggingEnabled = debugEnabled", span="83-83", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_18 [label="Log.LogHandler = new CompositeLogHandler(logHandlers)", span="60-60", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_19 [label="var algorithmHandlers = LeanEngineAlgorithmHandlers.FromConfiguration(Composer.Instance)", span="61-61", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_20 [label="var systemHandlers = LeanEngineSystemHandlers.FromConfiguration(Composer.Instance)", span="62-62", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_25 [label="var engine = new Lean.Engine.Engine(systemHandlers, algorithmHandlers, false)", span="72-72", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_27 [label="var backtestingResultHandler = (BacktestingResultHandler)algorithmHandlers.Results", span="80-80", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_21 [label="Log.DebuggingEnabled = true", span="64-64", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_26 [label="Task.Factory.StartNew(() =>\r\n                    {\r\n                        string algorithmPath;\r\n                        var job = systemHandlers.JobQueue.NextJob(out algorithmPath);\r\n                        engine.Run(job, algorithmPath);\r\n                    }).Wait()", span="73-78", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_22 [label="Log.LogHandler.Trace('''')", span="66-66", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_24 [label="Log.LogHandler.Trace('''')", span="68-68", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_28 [label="statistics = backtestingResultHandler.FinalStatistics", span="81-81", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_33 [label="Assert.AreEqual(true, statistics.ContainsKey(stat.Key), ''Missing key: '' + stat.Key)", span="93-93", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_34 [label="Assert.AreEqual(stat.Value, statistics[stat.Key], ''Failed on '' + stat.Key)", span="94-94", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_30 [label=Exception, span="86-86", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_31 [label="Log.LogHandler.Error(''{0} {1}'', ex.Message, ex.StackTrace)", span="88-88", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_35 [label="Exit QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="38-38", cluster="QuantConnect.Tests.AlgorithmRunner.RunLocalBacktest(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_60 [label=systemHandlers, span="", file="OptionOpenInterestRegressionAlgorithm.cs"];
m59_61 [label=engine, span="", file="OptionOpenInterestRegressionAlgorithm.cs"];
m61_29 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs"];
m61_30 [label="factory.BrokerageType.MatchesTypeName(liveJob.Brokerage)", span="100-100", cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs"];
m61_31 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="OptionSplitRegressionAlgorithm.cs"];
m61_27 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="OptionSplitRegressionAlgorithm.cs"];
m61_38 [label="Entry System.Console.Read()", span="0-0", cluster="System.Console.Read()", file="OptionSplitRegressionAlgorithm.cs"];
m61_0 [label="Entry QuantConnect.Queues.JobQueue.Initialize()", span="57-57", cluster="QuantConnect.Queues.JobQueue.Initialize()", file="OptionSplitRegressionAlgorithm.cs"];
m61_1 [label="Exit QuantConnect.Queues.JobQueue.Initialize()", span="57-57", cluster="QuantConnect.Queues.JobQueue.Initialize()", file="OptionSplitRegressionAlgorithm.cs"];
m61_32 [label="Entry System.Type.MatchesTypeName(string)", span="512-512", cluster="System.Type.MatchesTypeName(string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_25 [label="Entry QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", span="60-60", cluster="QuantConnect.Util.Composer.Single<T>(System.Func<T, bool>)", file="OptionSplitRegressionAlgorithm.cs"];
m61_2 [label="Entry QuantConnect.Queues.JobQueue.NextJob(out string)", span="66-66", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_3 [label="location = AlgorithmLocation", span="68-68", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_4 [label="Log.Trace(''JobQueue.NextJob(): Selected '' + location)", span="69-69", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_5 [label="var parameters = new Dictionary<string, string>()", span="72-72", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_6 [label="var parametersConfigString = Config.Get(''parameters'')", span="73-73", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_10 [label="var liveJob = new LiveNodePacket\r\n                {\r\n                    Type = PacketType.LiveNode,\r\n                    Algorithm = File.ReadAllBytes(AlgorithmLocation),\r\n                    Brokerage = Config.Get(''live-mode-brokerage'', PaperBrokerageTypeName),\r\n                    Channel = Channel,\r\n                    UserId = UserId,\r\n                    ProjectId = ProjectId,\r\n                    Version = Globals.Version,\r\n                    DeployId = AlgorithmTypeName,\r\n                    RamAllocation = int.MaxValue,\r\n                    Parameters = parameters,\r\n                    Language = Language,\r\n                }", span="82-95", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_16 [label="var backtestJob = new BacktestNodePacket(0, 0, '''', new byte[] {}, 10000, ''local'')\r\n            {\r\n                Type = PacketType.BacktestNode,\r\n                Algorithm = File.ReadAllBytes(AlgorithmLocation),\r\n                Channel = Channel,\r\n                UserId = UserId,\r\n                ProjectId = ProjectId,\r\n                Version = Globals.Version,\r\n                BacktestId = AlgorithmTypeName,\r\n                RamAllocation = int.MaxValue,\r\n                Language = Language,\r\n                Parameters = parameters\r\n            }", span="112-124", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_7 [label="parametersConfigString != string.Empty", span="74-74", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_8 [label="parameters = JsonConvert.DeserializeObject<Dictionary<string, string>>(parametersConfigString)", span="76-76", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_9 [label=_liveMode, span="80-80", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_11 [label="var brokerageFactory = Composer.Instance.Single<IBrokerageFactory>(factory => factory.BrokerageType.MatchesTypeName(liveJob.Brokerage))", span="100-100", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_12 [label="liveJob.BrokerageData = brokerageFactory.BrokerageData", span="101-101", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_14 [label="Log.Error(err, string.Format(''Error resolving BrokerageData for live job for brokerage {0}:'', liveJob.Brokerage))", span="105-105", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_15 [label="return liveJob;", span="108-108", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_13 [label=Exception, span="103-103", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_17 [label="return backtestJob;", span="126-126", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_18 [label="Exit QuantConnect.Queues.JobQueue.NextJob(out string)", span="66-66", cluster="QuantConnect.Queues.JobQueue.NextJob(out string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_26 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="OptionSplitRegressionAlgorithm.cs"];
m61_24 [label="Entry System.IO.File.ReadAllBytes(string)", span="0-0", cluster="System.IO.File.ReadAllBytes(string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_28 [label="Entry QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", span="81-81", cluster="QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", file="OptionSplitRegressionAlgorithm.cs"];
m61_23 [label="Entry QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", span="47-47", cluster="QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", file="OptionSplitRegressionAlgorithm.cs"];
m61_33 [label="Entry QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="133-133", cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="OptionSplitRegressionAlgorithm.cs"];
m61_34 [label="Console.WriteLine(''Engine.Main(): Analysis Complete. Press any key to continue.'')", span="136-136", cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="OptionSplitRegressionAlgorithm.cs"];
m61_35 [label="System.Console.Read()", span="137-137", cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="OptionSplitRegressionAlgorithm.cs"];
m61_36 [label="Exit QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="133-133", cluster="QuantConnect.Queues.JobQueue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="OptionSplitRegressionAlgorithm.cs"];
m61_19 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="OptionSplitRegressionAlgorithm.cs"];
m61_37 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="OptionSplitRegressionAlgorithm.cs"];
m61_21 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="OptionSplitRegressionAlgorithm.cs"];
m61_20 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="OptionSplitRegressionAlgorithm.cs"];
m61_39 [label="QuantConnect.Queues.JobQueue", span="", file="OptionSplitRegressionAlgorithm.cs"];
m61_40 [label=liveJob, span="", file="OptionSplitRegressionAlgorithm.cs"];
m62_21 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", span="266-266", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_91 [label="TimeIs(8, 12, 1)", span="268-268", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_92 [label="Log(''Submitting StopLimitOrder'')", span="270-270", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_102 [label="_openStopLimitOrders.Count == 2", span="298-298", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_93 [label="var close = Securities[symbol].Close", span="278-278", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_94 [label="var stopPrice = close * 1.001m", span="279-279", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_95 [label="var limitPrice = close - 0.03m", span="280-280", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_98 [label="stopPrice = close * .999m", span="290-290", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_99 [label="limitPrice = close + 0.03m", span="291-291", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_96 [label="var newTicket = StopLimitOrder(symbol, 10, stopPrice, limitPrice)", span="281-281", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_97 [label="_openStopLimitOrders.Add(newTicket)", span="282-282", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_100 [label="newTicket = StopLimitOrder(symbol, -10, stopPrice, limitPrice)", span="292-292", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_101 [label="_openStopLimitOrders.Add(newTicket)", span="293-293", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_103 [label="var longOrder = _openStopLimitOrders[0]", span="301-301", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_104 [label="var shortOrder = _openStopLimitOrders[1]", span="302-302", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_105 [label="CheckPairOrdersForFills(longOrder, shortOrder)", span="303-303", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_108 [label="var newLongStop = longOrder.Get(OrderField.StopPrice) - 0.01m", span="311-311", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_109 [label="var newLongLimit = longOrder.Get(OrderField.LimitPrice) + 0.01m", span="312-312", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_114 [label="longOrder.Update(new UpdateOrderFields\r\n                {\r\n                    // we could change the quantity, but need to specify it\r\n                    //Quantity = \r\n                    StopPrice = newLongStop,\r\n                    LimitPrice = newLongLimit,\r\n                    Tag = ''Update #'' + (longOrder.UpdateRequests.Count + 1)\r\n                })", span="318-325", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", color=red, community=0, file="OrderTicketDemoAlgorithm.cs"];
m62_110 [label="var newShortStop = shortOrder.Get(OrderField.StopPrice) + 0.01m", span="313-313", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_111 [label="var newShortLimit = shortOrder.Get(OrderField.LimitPrice) - 0.01m", span="314-314", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_115 [label="shortOrder.Update(new UpdateOrderFields\r\n                {\r\n                    StopPrice = newShortStop,\r\n                    LimitPrice = newShortLimit,\r\n                    Tag = ''Update #'' + (shortOrder.UpdateRequests.Count + 1)\r\n                })", span="326-331", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_106 [label="_openStopLimitOrders.Clear()", span="305-305", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_107 [label="return;", span="306-306", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_112 [label="Log(''Updating stops  - Long: '' + newLongStop.ToString(''0.00'') + '' Short: '' + newShortStop.ToString(''0.00''))", span="315-315", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_113 [label="Log(''Updating limits - Long: '' + newLongLimit.ToString(''0.00'') + '' Short: '' + newShortLimit.ToString(''0.00''))", span="316-316", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_116 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", span="266-266", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopLimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_40 [label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="258-258", cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="OrderTicketDemoAlgorithm.cs"];
m62_38 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="OrderTicketDemoAlgorithm.cs"];
m62_64 [label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0", cluster="System.Collections.Generic.List<T>.Clear()", file="OrderTicketDemoAlgorithm.cs"];
m62_155 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="OrderTicketDemoAlgorithm.cs"];
m62_136 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", span="316-316", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnCloseOrder(QuantConnect.Symbol, decimal, string)", file="OrderTicketDemoAlgorithm.cs"];
m62_151 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="423-423", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OrderTicketDemoAlgorithm.cs"];
m62_152 [label="var order = Transactions.GetOrderById(orderEvent.OrderId)", span="425-425", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OrderTicketDemoAlgorithm.cs"];
m62_153 [label="Console.WriteLine(''{0}: {1}: {2}'', Time, order.Type, orderEvent)", span="426-426", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OrderTicketDemoAlgorithm.cs"];
m62_154 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="423-423", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="OrderTicketDemoAlgorithm.cs"];
m62_90 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", span="384-384", cluster="QuantConnect.Algorithm.QCAlgorithm.StopMarketOrder(QuantConnect.Symbol, int, decimal, string)", file="OrderTicketDemoAlgorithm.cs"];
m62_67 [label="Entry QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", span="20-20", cluster="QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", file="OrderTicketDemoAlgorithm.cs"];
m62_117 [label="Entry QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", span="432-432", cluster="QuantConnect.Algorithm.QCAlgorithm.StopLimitOrder(QuantConnect.Symbol, int, decimal, decimal, string)", file="OrderTicketDemoAlgorithm.cs"];
m62_10 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnData(QuantConnect.Data.Slice)", span="51-51", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="OrderTicketDemoAlgorithm.cs"];
m62_11 [label="MarketOrders()", span="55-55", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="OrderTicketDemoAlgorithm.cs"];
m62_12 [label="LimitOrders()", span="59-59", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="OrderTicketDemoAlgorithm.cs"];
m62_13 [label="StopMarketOrders()", span="63-63", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="OrderTicketDemoAlgorithm.cs"];
m62_14 [label="StopLimitOrders()", span="67-67", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="OrderTicketDemoAlgorithm.cs"];
m62_15 [label="MarketOnOpenOrders()", span="71-71", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="OrderTicketDemoAlgorithm.cs"];
m62_16 [label="MarketOnCloseOrders()", span="75-75", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="OrderTicketDemoAlgorithm.cs"];
m62_17 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnData(QuantConnect.Data.Slice)", span="51-51", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.OnData(QuantConnect.Data.Slice)", file="OrderTicketDemoAlgorithm.cs"];
m62_23 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", span="340-340", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_118 [label="TimeIs(9, 12, 0)", span="342-342", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_119 [label="Log(''Submitting MarketOnCloseOrder'')", span="344-344", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_124 [label="_openMarketOnCloseOrders.Count == 1 && Time.Minute == 59", span="354-354", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_120 [label="var qty = Portfolio[symbol].Quantity", span="347-347", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_121 [label="qty = qty == 0 ? 100 : 2*qty", span="348-348", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_122 [label="var newTicket = MarketOnCloseOrder(symbol, qty)", span="350-350", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_123 [label="_openMarketOnCloseOrders.Add(newTicket)", span="351-351", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_125 [label="var ticket = _openMarketOnCloseOrders[0]", span="356-356", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_132 [label="TimeIs(EndDate.Day, 12 + 3, 45)", span="375-375", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_126 [label="ticket.Status == OrderStatus.Filled", span="358-358", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_129 [label="var quantity = ticket.Quantity + 1", span="364-364", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_131 [label="ticket.Update(new UpdateOrderFields\r\n                {\r\n                    Quantity = quantity,\r\n                    Tag = ''Update #'' + (ticket.UpdateRequests.Count + 1)\r\n                })", span="368-372", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_127 [label="_openMarketOnCloseOrders.Clear()", span="360-360", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_128 [label="return;", span="361-361", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_130 [label="Log(''Updating quantity  - New Quantity: '' + quantity)", span="365-365", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_133 [label="Log(''Submitting MarketOnCloseOrder to liquidate end of algorithm'')", span="377-377", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_134 [label="MarketOnCloseOrder(symbol, -Portfolio[symbol].Quantity, ''Liquidate end of algorithm'')", span="379-379", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_135 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", span="340-340", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnCloseOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_6 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="OrderTicketDemoAlgorithm.cs"];
m62_150 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", span="260-260", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOnOpenOrder(QuantConnect.Symbol, int, string)", file="OrderTicketDemoAlgorithm.cs"];
m62_0 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.Initialize()", span="38-38", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.Initialize()", file="OrderTicketDemoAlgorithm.cs"];
m62_1 [label="SetStartDate(2013, 10, 7)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.Initialize()", file="OrderTicketDemoAlgorithm.cs"];
m62_2 [label="SetEndDate(2013, 10, 11)", span="41-41", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.Initialize()", file="OrderTicketDemoAlgorithm.cs"];
m62_3 [label="SetCash(100000)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.Initialize()", file="OrderTicketDemoAlgorithm.cs"];
m62_4 [label="AddSecurity(SecurityType.Equity, symbol, Resolution.Minute)", span="44-44", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.Initialize()", file="OrderTicketDemoAlgorithm.cs"];
m62_5 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.Initialize()", span="38-38", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.Initialize()", file="OrderTicketDemoAlgorithm.cs"];
m62_20 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", span="194-194", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_69 [label="TimeIs(7, 12 + 4, 0)", span="196-196", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_70 [label="Log(''Submitting StopMarketOrder'')", span="198-198", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_78 [label="_openStopMarketOrders.Count == 2", span="218-218", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_71 [label="var close = Securities[symbol].Close", span="203-203", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_72 [label="var stopPrice = close * 1.0025m", span="204-204", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_75 [label="stopPrice = close * .9975m", span="211-211", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_73 [label="var newTicket = StopMarketOrder(symbol, 10, stopPrice)", span="205-205", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_74 [label="_openStopMarketOrders.Add(newTicket)", span="206-206", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_76 [label="newTicket = StopMarketOrder(symbol, -10, stopPrice)", span="212-212", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_77 [label="_openStopMarketOrders.Add(newTicket)", span="213-213", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_79 [label="var longOrder = _openStopMarketOrders[0]", span="221-221", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_80 [label="var shortOrder = _openStopMarketOrders[1]", span="222-222", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_81 [label="CheckPairOrdersForFills(longOrder, shortOrder)", span="223-223", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_84 [label="var newLongStop = longOrder.Get(OrderField.StopPrice) - 0.01m", span="231-231", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_87 [label="longOrder.Update(new UpdateOrderFields\r\n                {\r\n                    // we could change the quantity, but need to specify it\r\n                    //Quantity = \r\n                    StopPrice = newLongStop,\r\n                    Tag = ''Update #'' + (longOrder.UpdateRequests.Count + 1)\r\n                })", span="235-241", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", color=red, community=0, file="OrderTicketDemoAlgorithm.cs"];
m62_85 [label="var newShortStop = shortOrder.Get(OrderField.StopPrice) + 0.01m", span="232-232", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_88 [label="shortOrder.Update(new UpdateOrderFields\r\n                {\r\n                    StopPrice = newShortStop,\r\n                    Tag = ''Update #'' + (shortOrder.UpdateRequests.Count + 1)\r\n                })", span="242-246", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_82 [label="_openStopMarketOrders.Clear()", span="225-225", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_83 [label="return;", span="226-226", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_86 [label="Log(''Updating stops - Long: '' + newLongStop.ToString(''0.00'') + '' Short: '' + newShortStop.ToString(''0.00''))", span="233-233", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_89 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", span="194-194", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.StopMarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_37 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="OrderTicketDemoAlgorithm.cs"];
m62_65 [label="Entry QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", span="211-211", cluster="QuantConnect.Orders.OrderTicket.Get(QuantConnect.Orders.OrderField)", file="OrderTicketDemoAlgorithm.cs"];
m62_61 [label="Entry QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", span="337-337", cluster="QuantConnect.Algorithm.QCAlgorithm.LimitOrder(QuantConnect.Symbol, int, decimal, string)", file="OrderTicketDemoAlgorithm.cs"];
m62_19 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", span="129-129", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_41 [label="TimeIs(7, 12, 0)", span="131-131", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_42 [label="Log(''Submitting LimitOrder'')", span="133-133", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_48 [label="_openLimitOrders.Count == 2", span="147-147", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_43 [label="var close = Securities[symbol].Close", span="136-136", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_44 [label="var newTicket = LimitOrder(symbol, 10, close * .999m)", span="137-137", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_46 [label="newTicket = LimitOrder(symbol, 10, close * 1.001m)", span="141-141", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_45 [label="_openLimitOrders.Add(newTicket)", span="138-138", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_47 [label="_openLimitOrders.Add(newTicket)", span="142-142", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_49 [label="var openOrders = _openLimitOrders", span="149-149", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_50 [label="var longOrder = openOrders[0]", span="152-152", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_51 [label="var shortOrder = openOrders[1]", span="153-153", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_52 [label="CheckPairOrdersForFills(longOrder, shortOrder)", span="154-154", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_55 [label="var newLongLimit = longOrder.Get(OrderField.LimitPrice) + 0.01m", span="162-162", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_58 [label="longOrder.Update(new UpdateOrderFields\r\n                {\r\n                    // we could change the quantity, but need to specify it\r\n                    //Quantity = \r\n                    LimitPrice = newLongLimit,\r\n                    Tag = ''Update #'' + (longOrder.UpdateRequests.Count + 1)\r\n                })", span="166-172", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", color=red, community=0, file="OrderTicketDemoAlgorithm.cs"];
m62_56 [label="var newShortLimit = shortOrder.Get(OrderField.LimitPrice) - 0.01m", span="163-163", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_59 [label="shortOrder.Update(new UpdateOrderFields\r\n                {\r\n                    LimitPrice = newShortLimit,\r\n                    Tag = ''Update #'' + (shortOrder.UpdateRequests.Count + 1)\r\n                })", span="173-177", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_53 [label="_openLimitOrders.Clear()", span="156-156", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_54 [label="return;", span="157-157", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_57 [label="Log(''Updating limits - Long: '' + newLongLimit.ToString(''0.00'') + '' Short: '' + newShortLimit.ToString(''0.00''))", span="164-164", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_60 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", span="129-129", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.LimitOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_22 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", span="388-388", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_137 [label="TimeIs(8, 12 + 2, 0)", span="390-390", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_138 [label="Log(''Submitting MarketOnOpenOrder'')", span="392-392", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_141 [label="_openMarketOnOpenOrders.Count == 1 && Time.Minute == 59", span="399-399", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_139 [label="var newTicket = MarketOnOpenOrder(symbol, 50)", span="395-395", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_140 [label="_openMarketOnOpenOrders.Add(newTicket)", span="396-396", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_142 [label="var ticket = _openMarketOnOpenOrders[0]", span="401-401", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_143 [label="ticket.Status == OrderStatus.Filled", span="404-404", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_146 [label="var quantity = ticket.Quantity + 1", span="410-410", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_148 [label="ticket.Update(new UpdateOrderFields\r\n                {\r\n                    Quantity = quantity,\r\n                    Tag = ''Update #'' + (ticket.UpdateRequests.Count + 1)\r\n                })", span="414-418", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_144 [label="_openMarketOnOpenOrders.Clear()", span="406-406", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_145 [label="return;", span="407-407", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_147 [label="Log(''Updating quantity  - New Quantity: '' + quantity)", span="411-411", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_149 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", span="388-388", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOnOpenOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="OrderTicketDemoAlgorithm.cs"];
m62_18 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", span="83-83", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_24 [label="TimeIs(7, 9, 31)", span="85-85", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_25 [label="Log(''Submitting MarketOrder'')", span="87-87", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_26 [label="var newTicket = MarketOrder(symbol, 10, asynchronous: false)", span="91-91", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_27 [label="newTicket.Status != OrderStatus.Filled", span="92-92", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_28 [label="Log(''Synchronous market order was not filled synchronously!'')", span="94-94", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_30 [label="newTicket = MarketOrder(symbol, 10, asynchronous: true)", span="102-102", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_29 [label="Quit()", span="95-95", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_31 [label="var response = newTicket.Cancel(''Attempt to cancel async order'')", span="103-103", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_33 [label="Log(''Successfully canceled async market order: '' + newTicket.OrderId)", span="106-106", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_32 [label="response.IsSuccess", span="104-104", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_34 [label="Log(''Unable to cancel async market order: '' + response.ErrorCode)", span="110-110", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_35 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", span="83-83", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.MarketOrders()", file="OrderTicketDemoAlgorithm.cs"];
m62_63 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", span="429-429", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_157 [label="longOrder.Status == OrderStatus.Filled", span="431-431", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_158 [label="Log(shortOrder.OrderType + '': Cancelling short order, long order is filled.'')", span="433-433", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_159 [label="shortOrder.Cancel(''Long filled.'')", span="434-434", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_161 [label="shortOrder.Status == OrderStatus.Filled", span="437-437", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_162 [label="Log(longOrder.OrderType + '': Cancelling long order, short order is filled.'')", span="439-439", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_163 [label="longOrder.Cancel(''Short filled'')", span="440-440", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_160 [label="return true;", span="435-435", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_165 [label="return false;", span="443-443", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_164 [label="return true;", span="441-441", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_166 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", span="429-429", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.CheckPairOrdersForFills(QuantConnect.Orders.OrderTicket, QuantConnect.Orders.OrderTicket)", file="OrderTicketDemoAlgorithm.cs"];
m62_8 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="OrderTicketDemoAlgorithm.cs"];
m62_68 [label="Entry QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", span="249-249", cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="OrderTicketDemoAlgorithm.cs"];
m62_36 [label="Entry QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.TimeIs(int, int, int)", span="446-446", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.TimeIs(int, int, int)", file="OrderTicketDemoAlgorithm.cs"];
m62_167 [label="return Time.Day == day && Time.Hour == hour && Time.Minute == minute;", span="448-448", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.TimeIs(int, int, int)", file="OrderTicketDemoAlgorithm.cs"];
m62_168 [label="Exit QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.TimeIs(int, int, int)", span="446-446", cluster="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm.TimeIs(int, int, int)", file="OrderTicketDemoAlgorithm.cs"];
m62_156 [label="Entry System.Console.WriteLine(string, object, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object, object)", file="OrderTicketDemoAlgorithm.cs"];
m62_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="OrderTicketDemoAlgorithm.cs"];
m62_39 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1673-1673", cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="OrderTicketDemoAlgorithm.cs"];
m62_66 [label="Entry decimal.ToString(string)", span="0-0", cluster="decimal.ToString(string)", file="OrderTicketDemoAlgorithm.cs"];
m62_169 [label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm", span="", file="OrderTicketDemoAlgorithm.cs"];
m65_25 [label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="92-92", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_26 [label="message = null", span="94-94", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_27 [label="order.SecurityType == SecurityType.Forex && request.Quantity != null", span="96-96", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_28 [label="return IsForexWithinOrderSizeLimits(order.Symbol.Value, request.Quantity.Value, out message);", span="98-98", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_29 [label="return true;", span="101-101", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_30 [label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="92-92", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_44 [label="Entry QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", span="108-108", cluster="QuantConnect.Securities.Forex.Forex.DecomposeCurrencyPair(string, out string, out string)", file="QCAlgorithm.Python.cs"];
m65_23 [label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="122-122", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_34 [label="message = null", span="148-148", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_36 [label="Forex.DecomposeCurrencyPair(currencyPair, out baseCurrency, out quoteCurrency)", span="152-152", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_39 [label="var orderIsWithinForexSizeLimits = quantity < max", span="158-158", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_35 [label="string baseCurrency, quoteCurrency", span="151-151", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_37 [label="decimal max", span="155-155", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_38 [label="ForexCurrencyLimits.TryGetValue(baseCurrency, out max)", span="156-156", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_41 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''OrderSizeLimit'',\r\n                    string.Format(''The maximum allowable order size is {0}{1}.'', max, baseCurrency)\r\n                    )", span="161-163", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_40 [label="!orderIsWithinForexSizeLimits", span="159-159", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_42 [label="return orderIsWithinForexSizeLimits;", span="165-165", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_43 [label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="122-122", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.IsForexWithinOrderSizeLimits(string, decimal, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_5 [label="Entry QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", span="38-38", cluster="QuantConnect.Orders.Fees.InteractiveBrokersFeeModel.InteractiveBrokersFeeModel(decimal, decimal)", file="QCAlgorithm.Python.cs"];
m65_24 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="QCAlgorithm.Python.cs"];
m65_45 [label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="QCAlgorithm.Python.cs"];
m65_47 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="QCAlgorithm.Python.cs"];
m65_6 [label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="60-60", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_7 [label="message = null", span="62-62", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_8 [label="order.SecurityType", span="65-65", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_18 [label="return IsForexWithinOrderSizeLimits(order.Symbol.Value, order.Quantity, out message);", span="76-76", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_9 [label="SecurityType.Base", span="67-67", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_11 [label="SecurityType.Equity", span="69-69", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_13 [label="SecurityType.Option", span="71-71", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_15 [label="SecurityType.Commodity", span="73-73", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_17 [label="SecurityType.Forex", span="75-75", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_19 [label="SecurityType.Future", span="77-77", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_21 [label="throw new ArgumentOutOfRangeException();", span="80-80", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_10 [label="return false;", span="68-68", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_12 [label="return true;", span="70-70", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_14 [label="return true;", span="72-72", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_16 [label="return true;", span="74-74", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_20 [label="return true;", span="78-78", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_22 [label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="60-60", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="QCAlgorithm.Python.cs"];
m65_0 [label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", span="34-34", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", file="QCAlgorithm.Python.cs"];
m65_1 [label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", span="34-34", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.InteractiveBrokersBrokerageModel(QuantConnect.AccountType)", file="QCAlgorithm.Python.cs"];
m65_31 [label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="114-114", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Python.cs"];
m65_32 [label="return order.SecurityType != SecurityType.Base;", span="116-116", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", color=red, community=0, file="QCAlgorithm.Python.cs"];
m65_33 [label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="114-114", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.CanExecuteOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="QCAlgorithm.Python.cs"];
m65_46 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="QCAlgorithm.Python.cs"];
m65_2 [label="Entry QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="44-44", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs"];
m65_3 [label="return new InteractiveBrokersFeeModel();", span="46-46", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs"];
m65_4 [label="Exit QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="44-44", cluster="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="QCAlgorithm.Python.cs"];
m65_48 [label="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel", span="", file="QCAlgorithm.Python.cs"];
m66_4 [label="Entry QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", span="90-90", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QuandlFuturesDataAlgorithm.cs"];
m66_5 [label="first.OutputType != second.InputType", span="92-92", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QuandlFuturesDataAlgorithm.cs"];
m66_7 [label="First = first", span="96-96", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QuandlFuturesDataAlgorithm.cs"];
m66_8 [label="Second = second", span="97-97", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QuandlFuturesDataAlgorithm.cs"];
m66_9 [label="first.DataConsolidated += (sender, consolidated) => second.Update(consolidated)", span="100-100", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QuandlFuturesDataAlgorithm.cs"];
m66_10 [label="second.DataConsolidated += (sender, consolidated) => OnDataConsolidated(consolidated)", span="104-104", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QuandlFuturesDataAlgorithm.cs"];
m66_6 [label="throw new ArgumentException(''first.OutputType must equal second.OutputType!'');", span="94-94", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QuandlFuturesDataAlgorithm.cs"];
m66_11 [label="Exit QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", span="90-90", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.SequentialConsolidator(QuantConnect.Data.Consolidators.IDataConsolidator, QuantConnect.Data.Consolidators.IDataConsolidator)", file="QuandlFuturesDataAlgorithm.cs"];
m66_3 [label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", span="54-54", cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", file="QuandlFuturesDataAlgorithm.cs"];
m66_24 [label="Entry QuantConnect.Data.Consolidators.DataConsolidatedHandler.Invoke(object, QuantConnect.Data.BaseData)", span="24-24", cluster="QuantConnect.Data.Consolidators.DataConsolidatedHandler.Invoke(object, QuantConnect.Data.BaseData)", file="QuandlFuturesDataAlgorithm.cs"];
m66_19 [label="Entry QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.BaseData)", span="112-112", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.BaseData)", file="QuandlFuturesDataAlgorithm.cs"];
m66_20 [label="var handler = DataConsolidated", span="114-114", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.BaseData)", file="QuandlFuturesDataAlgorithm.cs"];
m66_22 [label="handler(this, consolidated)", span="115-115", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.BaseData)", file="QuandlFuturesDataAlgorithm.cs"];
m66_21 [label="handler != null", span="115-115", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.BaseData)", file="QuandlFuturesDataAlgorithm.cs"];
m66_23 [label="Exit QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.BaseData)", span="112-112", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.OnDataConsolidated(QuantConnect.Data.BaseData)", file="QuandlFuturesDataAlgorithm.cs"];
m66_0 [label="Entry QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.BaseData)", span="74-74", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.BaseData)", file="QuandlFuturesDataAlgorithm.cs"];
m66_1 [label="First.Update(data)", span="76-76", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.BaseData)", file="QuandlFuturesDataAlgorithm.cs"];
m66_2 [label="Exit QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.BaseData)", span="74-74", cluster="QuantConnect.Data.Consolidators.SequentialConsolidator.Update(QuantConnect.Data.BaseData)", file="QuandlFuturesDataAlgorithm.cs"];
m66_12 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="QuandlFuturesDataAlgorithm.cs"];
m66_16 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="QuandlFuturesDataAlgorithm.cs"];
m66_14 [label="second.Update(consolidated)", span="100-100", cluster="lambda expression", file="QuandlFuturesDataAlgorithm.cs"];
m66_17 [label="OnDataConsolidated(consolidated)", span="104-104", cluster="lambda expression", file="QuandlFuturesDataAlgorithm.cs"];
m66_13 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="QuandlFuturesDataAlgorithm.cs"];
m66_15 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="QuandlFuturesDataAlgorithm.cs"];
m66_18 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="QuandlFuturesDataAlgorithm.cs"];
m66_25 [label="QuantConnect.Data.Consolidators.SequentialConsolidator", span="", file="QuandlFuturesDataAlgorithm.cs"];
m66_26 [label="QuantConnect.Data.Consolidators.IDataConsolidator", span="", file="QuandlFuturesDataAlgorithm.cs"];
m67_8 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="QuandlImporterAlgorithm.cs"];
m67_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1174-1174", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="QuandlImporterAlgorithm.cs"];
m67_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QuandlImporterAlgorithm.cs"];
m67_0 [label="Entry QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.Initialize()", span="35-35", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.Initialize()", file="QuandlImporterAlgorithm.cs"];
m67_5 [label="sma = SMA(_quandlCode, 14)", span="47-47", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.Initialize()", color=red, community=0, file="QuandlImporterAlgorithm.cs"];
m67_4 [label="AddData<Quandl>(_quandlCode, Resolution.Daily)", span="45-45", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.Initialize()", file="QuandlImporterAlgorithm.cs"];
m67_1 [label="SetStartDate(2013, 1, 1)", span="38-38", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.Initialize()", file="QuandlImporterAlgorithm.cs"];
m67_2 [label="SetEndDate(DateTime.Now.Date.AddDays(-1))", span="39-39", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.Initialize()", file="QuandlImporterAlgorithm.cs"];
m67_3 [label="SetCash(25000)", span="42-42", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.Initialize()", file="QuandlImporterAlgorithm.cs"];
m67_6 [label="Exit QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.Initialize()", span="35-35", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.Initialize()", file="QuandlImporterAlgorithm.cs"];
m67_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="959-959", cluster="QuantConnect.Algorithm.QCAlgorithm.SMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="QuandlImporterAlgorithm.cs"];
m67_20 [label="Entry System.DateTime.ToShortDateString()", span="0-0", cluster="System.DateTime.ToShortDateString()", file="QuandlImporterAlgorithm.cs"];
m67_22 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="198-198", cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="QuandlImporterAlgorithm.cs"];
m67_13 [label="Entry QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.OnData(QuantConnect.Data.Custom.Quandl)", span="51-51", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.OnData(QuantConnect.Data.Custom.Quandl)", file="QuandlImporterAlgorithm.cs"];
m67_17 [label="Plot(''SPY'', sma)", span="62-62", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.OnData(QuantConnect.Data.Custom.Quandl)", color=red, community=0, file="QuandlImporterAlgorithm.cs"];
m67_14 [label="!Portfolio.HoldStock", span="53-53", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.OnData(QuantConnect.Data.Custom.Quandl)", file="QuandlImporterAlgorithm.cs"];
m67_16 [label="Debug(''Purchased '' + _quandlCode + '' >> '' + Time.ToShortDateString())", span="59-59", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.OnData(QuantConnect.Data.Custom.Quandl)", file="QuandlImporterAlgorithm.cs"];
m67_15 [label="SetHoldings(_quandlCode, 1)", span="56-56", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.OnData(QuantConnect.Data.Custom.Quandl)", file="QuandlImporterAlgorithm.cs"];
m67_18 [label="Exit QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.OnData(QuantConnect.Data.Custom.Quandl)", span="51-51", cluster="QuantConnect.Algorithm.Examples.QuandlImporterAlgorithm.OnData(QuantConnect.Data.Custom.Quandl)", file="QuandlImporterAlgorithm.cs"];
m67_7 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="QuandlImporterAlgorithm.cs"];
m67_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="QuandlImporterAlgorithm.cs"];
m67_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1567-1567", cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="QuandlImporterAlgorithm.cs"];
m67_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="QuandlImporterAlgorithm.cs"];
m67_23 [label="QuantConnect.Algorithm.CSharp.QuandlImporterAlgorithm", span="", file="QuandlImporterAlgorithm.cs"];
m68_0 [label="Entry QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", span="25-25", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs"];
m68_1 [label="SetStartDate(2013, 10, 07)", span="27-27", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs"];
m68_2 [label="SetEndDate(2013, 10, 11)", span="28-28", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs"];
m68_3 [label="SetCash(10000000)", span="30-30", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs"];
m68_4 [label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Tick)", span="33-33", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs"];
m68_5 [label="AddSecurity(SecurityType.Equity, ''BAC'', Resolution.Minute)", span="34-34", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs"];
m68_6 [label="AddSecurity(SecurityType.Equity, ''AIG'', Resolution.Hour)", span="35-35", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs"];
m68_7 [label="AddSecurity(SecurityType.Equity, ''IBM'', Resolution.Daily)", span="36-36", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs"];
m68_8 [label="Exit QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", span="25-25", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.Initialize()", file="RegressionAlgorithm.cs"];
m68_28 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", span="197-197", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, decimal, bool, string)", file="RegressionAlgorithm.cs"];
m68_13 [label="Entry QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_14 [label="Time - lastTradeTradeBars < tradeEvery", span="44-44", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_17 [label=data, span="47-47", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_15 [label="return;", span="44-44", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_16 [label="lastTradeTradeBars = Time", span="45-45", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_18 [label="var symbol = kvp.Key", span="49-49", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_19 [label="var bar = kvp.Value", span="50-50", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_21 [label="var holdings = Portfolio[symbol]", span="58-58", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_23 [label="MarketOrder(symbol, 10)", span="61-61", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_24 [label="MarketOrder(symbol, -holdings.Quantity)", span="65-65", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_20 [label="bar.Time.RoundDown(bar.Period) != bar.Time", span="52-52", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_22 [label="!holdings.Invested", span="59-59", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_25 [label="Exit QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="42-42", cluster="QuantConnect.Algorithm.CSharp.RegressionAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RegressionAlgorithm.cs"];
m68_27 [label="Entry QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", span="171-171", cluster="QuantConnect.Algorithm.QCAlgorithm.MarketOrder(QuantConnect.Symbol, int, bool, string)", file="RegressionAlgorithm.cs"];
m68_10 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="RegressionAlgorithm.cs"];
m68_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="RegressionAlgorithm.cs"];
m68_9 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RegressionAlgorithm.cs"];
m68_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="RegressionAlgorithm.cs"];
m68_29 [label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm", span="", file="RegressionAlgorithm.cs"];
m69_0 [label="Entry QuantConnect.Views.Properties.Resources.Resources()", span="31-31", cluster="QuantConnect.Views.Properties.Resources.Resources()", file="RegressionChannelAlgorithm.cs"];
m69_1 [label="Exit QuantConnect.Views.Properties.Resources.Resources()", span="31-31", cluster="QuantConnect.Views.Properties.Resources.Resources()", file="RegressionChannelAlgorithm.cs"];
m70_30 [label="Entry QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenko7Bar(QuantConnect.Data.Market.RenkoBar)", span="89-89", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenko7Bar(QuantConnect.Data.Market.RenkoBar)", file="RenkoConsolidatorAlgorithm.cs"];
m70_40 [label="Console.WriteLine(''7BAR  - {0} - {1} {2}'', data.Time.ToString(''o''), data.Open, data.Close)", span="91-91", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenko7Bar(QuantConnect.Data.Market.RenkoBar)", file="RenkoConsolidatorAlgorithm.cs"];
m70_41 [label="Exit QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenko7Bar(QuantConnect.Data.Market.RenkoBar)", span="89-89", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenko7Bar(QuantConnect.Data.Market.RenkoBar)", file="RenkoConsolidatorAlgorithm.cs"];
m70_20 [label="Entry QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenkoClose(QuantConnect.Data.Market.RenkoBar)", span="76-76", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenkoClose(QuantConnect.Data.Market.RenkoBar)", file="RenkoConsolidatorAlgorithm.cs"];
m70_33 [label="!Portfolio.Invested", span="78-78", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenkoClose(QuantConnect.Data.Market.RenkoBar)", file="RenkoConsolidatorAlgorithm.cs"];
m70_34 [label="SetHoldings(data.Symbol, 1.0)", span="80-80", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenkoClose(QuantConnect.Data.Market.RenkoBar)", file="RenkoConsolidatorAlgorithm.cs"];
m70_35 [label="Console.WriteLine(''CLOSE - {0} - {1} {2}'', data.Time.ToString(''o''), data.Open, data.Close)", span="82-82", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenkoClose(QuantConnect.Data.Market.RenkoBar)", file="RenkoConsolidatorAlgorithm.cs"];
m70_36 [label="Exit QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenkoClose(QuantConnect.Data.Market.RenkoBar)", span="76-76", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.HandleRenkoClose(QuantConnect.Data.Market.RenkoBar)", file="RenkoConsolidatorAlgorithm.cs"];
m70_37 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="835-835", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="RenkoConsolidatorAlgorithm.cs"];
m70_15 [label="Entry QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", span="169-169", cluster="QuantConnect.Data.SubscriptionManager.AddConsolidator(QuantConnect.Symbol, QuantConnect.Data.Consolidators.IDataConsolidator)", file="RenkoConsolidatorAlgorithm.cs"];
m70_0 [label="Entry QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", span="29-29", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_1 [label="SetStartDate(2012, 01, 01)", span="31-31", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_2 [label="SetEndDate(2013, 01, 01)", span="32-32", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_3 [label="AddSecurity(SecurityType.Equity, ''SPY'')", span="34-34", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_4 [label="var renkoClose = new RenkoConsolidator(2.5m)", span="40-40", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_5 [label="renkoClose.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                // call our event handler for renko data\r\n                HandleRenkoClose(consolidated);\r\n            }", span="41-45", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_6 [label="SubscriptionManager.AddConsolidator(''SPY'', renkoClose)", span="48-48", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_7 [label="var renko7bar = new RenkoConsolidator<TradeBar>(2.5m, x => (2 * x.Open + x.High + x.Low + 3 * x.Close) / 7m, x => x.Volume)", span="55-55", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_8 [label="renko7bar.DataConsolidated += (sender, consolidated) =>\r\n            {\r\n                HandleRenko7Bar(consolidated);\r\n            }", span="56-59", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_9 [label="SubscriptionManager.AddConsolidator(''SPY'', renko7bar)", span="62-62", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_10 [label="Exit QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", span="29-29", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.Initialize()", file="RenkoConsolidatorAlgorithm.cs"];
m70_38 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="RenkoConsolidatorAlgorithm.cs"];
m70_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="RenkoConsolidatorAlgorithm.cs"];
m70_39 [label="Entry System.Console.WriteLine(string, object, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object, object)", file="RenkoConsolidatorAlgorithm.cs"];
m70_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="RenkoConsolidatorAlgorithm.cs"];
m70_14 [label="Entry QuantConnect.Data.Consolidators.RenkoConsolidator.RenkoConsolidator(decimal, bool)", span="79-79", cluster="QuantConnect.Data.Consolidators.RenkoConsolidator.RenkoConsolidator(decimal, bool)", file="RenkoConsolidatorAlgorithm.cs"];
m70_16 [label="Entry QuantConnect.Data.Consolidators.RenkoConsolidator<TInput>.RenkoConsolidator(decimal, System.Func<TInput, decimal>, System.Func<TInput, decimal>, bool)", span="379-379", cluster="QuantConnect.Data.Consolidators.RenkoConsolidator<TInput>.RenkoConsolidator(decimal, System.Func<TInput, decimal>, System.Func<TInput, decimal>, bool)", file="RenkoConsolidatorAlgorithm.cs"];
m70_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="RenkoConsolidatorAlgorithm.cs"];
m70_31 [label="Entry QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="68-68", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RenkoConsolidatorAlgorithm.cs"];
m70_32 [label="Exit QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="68-68", cluster="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="RenkoConsolidatorAlgorithm.cs"];
m70_27 [label="Entry lambda expression", span="56-59", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_18 [label="HandleRenkoClose(consolidated)", span="44-44", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_22 [label="(2 * x.Open + x.High + x.Low + 3 * x.Close) / 7m", span="55-55", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_25 [label="x.Volume", span="55-55", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_28 [label="HandleRenko7Bar(consolidated)", span="58-58", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_17 [label="Entry lambda expression", span="41-45", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_19 [label="Exit lambda expression", span="41-45", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_21 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_23 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_24 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_26 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_29 [label="Exit lambda expression", span="56-59", cluster="lambda expression", file="RenkoConsolidatorAlgorithm.cs"];
m70_42 [label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm", span="", file="RenkoConsolidatorAlgorithm.cs"];
m72_0 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="53-53", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="SecurityManagerTests.cs"];
m72_1 [label="return new BacktestingBrokerage(algorithm);", span="55-55", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="SecurityManagerTests.cs"];
m72_2 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="53-53", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="SecurityManagerTests.cs"];
m72_3 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="39-39", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="SecurityManagerTests.cs"];
m72_4 [label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.Dispose()", span="62-62", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.Dispose()", file="SecurityManagerTests.cs"];
m72_5 [label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.Dispose()", span="62-62", cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerageFactory.Dispose()", file="SecurityManagerTests.cs"];
m75_24 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="StressSymbolsAlgorithm.cs"];
m75_25 [label="Entry QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomSymbols(System.Collections.Generic.List<string>, System.Collections.Generic.HashSet<string>, int)", span="74-74", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomSymbols(System.Collections.Generic.List<string>, System.Collections.Generic.HashSet<string>, int)", file="StressSymbolsAlgorithm.cs"];
m75_33 [label="return Enumerable.Range(0, numberOfSymbols).Select(x => GetRandomItem(allSymbols, hash));", span="76-76", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomSymbols(System.Collections.Generic.List<string>, System.Collections.Generic.HashSet<string>, int)", file="StressSymbolsAlgorithm.cs"];
m75_34 [label="Exit QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomSymbols(System.Collections.Generic.List<string>, System.Collections.Generic.HashSet<string>, int)", span="74-74", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomSymbols(System.Collections.Generic.List<string>, System.Collections.Generic.HashSet<string>, int)", file="StressSymbolsAlgorithm.cs"];
m75_50 [label="Entry QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="96-96", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="StressSymbolsAlgorithm.cs"];
m75_51 [label="Exit QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", span="96-96", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.OnData(QuantConnect.Data.Market.TradeBars)", file="StressSymbolsAlgorithm.cs"];
m75_22 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="StressSymbolsAlgorithm.cs"];
m75_23 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="StressSymbolsAlgorithm.cs"];
m75_26 [label="Entry QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.AddSecurity(System.Collections.Generic.IEnumerable<string>, QuantConnect.Resolution)", span="65-65", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.AddSecurity(System.Collections.Generic.IEnumerable<string>, QuantConnect.Resolution)", file="StressSymbolsAlgorithm.cs"];
m75_27 [label=symbols, span="67-67", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.AddSecurity(System.Collections.Generic.IEnumerable<string>, QuantConnect.Resolution)", file="StressSymbolsAlgorithm.cs"];
m75_29 [label="AddSecurity(securityType, symbol, resolution)", span="70-70", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.AddSecurity(System.Collections.Generic.IEnumerable<string>, QuantConnect.Resolution)", file="StressSymbolsAlgorithm.cs"];
m75_28 [label="var securityType = StressSymbols.ForexSymbols.Contains(symbol) ? SecurityType.Forex : SecurityType.Equity", span="69-69", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.AddSecurity(System.Collections.Generic.IEnumerable<string>, QuantConnect.Resolution)", file="StressSymbolsAlgorithm.cs"];
m75_30 [label="Exit QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.AddSecurity(System.Collections.Generic.IEnumerable<string>, QuantConnect.Resolution)", span="65-65", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.AddSecurity(System.Collections.Generic.IEnumerable<string>, QuantConnect.Resolution)", file="StressSymbolsAlgorithm.cs"];
m75_20 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="StressSymbolsAlgorithm.cs"];
m75_35 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="StressSymbolsAlgorithm.cs"];
m75_32 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="StressSymbolsAlgorithm.cs"];
m75_48 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="StressSymbolsAlgorithm.cs"];
m75_40 [label="Entry QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomItem(System.Collections.Generic.IReadOnlyList<string>, System.Collections.Generic.HashSet<string>)", span="80-80", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomItem(System.Collections.Generic.IReadOnlyList<string>, System.Collections.Generic.HashSet<string>)", file="StressSymbolsAlgorithm.cs"];
m75_41 [label="var count = 0", span="82-82", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomItem(System.Collections.Generic.IReadOnlyList<string>, System.Collections.Generic.HashSet<string>)", file="StressSymbolsAlgorithm.cs"];
m75_43 [label="item = list[_random.Next(list.Count)]", span="86-86", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomItem(System.Collections.Generic.IReadOnlyList<string>, System.Collections.Generic.HashSet<string>)", file="StressSymbolsAlgorithm.cs"];
m75_45 [label="!hash.Add(item) && count < list.Count*2", span="89-89", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomItem(System.Collections.Generic.IReadOnlyList<string>, System.Collections.Generic.HashSet<string>)", file="StressSymbolsAlgorithm.cs"];
m75_42 [label="string item", span="83-83", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomItem(System.Collections.Generic.IReadOnlyList<string>, System.Collections.Generic.HashSet<string>)", file="StressSymbolsAlgorithm.cs"];
m75_44 [label="count++", span="87-87", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomItem(System.Collections.Generic.IReadOnlyList<string>, System.Collections.Generic.HashSet<string>)", file="StressSymbolsAlgorithm.cs"];
m75_46 [label="return item;", span="90-90", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomItem(System.Collections.Generic.IReadOnlyList<string>, System.Collections.Generic.HashSet<string>)", file="StressSymbolsAlgorithm.cs"];
m75_47 [label="Exit QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomItem(System.Collections.Generic.IReadOnlyList<string>, System.Collections.Generic.HashSet<string>)", span="80-80", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.GetRandomItem(System.Collections.Generic.IReadOnlyList<string>, System.Collections.Generic.HashSet<string>)", file="StressSymbolsAlgorithm.cs"];
m75_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="StressSymbolsAlgorithm.cs"];
m75_21 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="StressSymbolsAlgorithm.cs"];
m75_31 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="StressSymbolsAlgorithm.cs"];
m75_49 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="StressSymbolsAlgorithm.cs"];
m75_0 [label="Entry QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", span="36-36", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_1 [label="SetStartDate(2001, 10, 07)", span="38-38", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_2 [label="SetEndDate(2010, 10, 11)", span="39-39", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_3 [label="SetCash(250000)", span="40-40", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_4 [label="var allSymbols = StressSymbols.StockSymbols.ToList()", span="42-42", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_5 [label="TickSymbolsToRun + SecondSymbolsToRun + HourSymbolsToRun + DailySymbolsToRun > allSymbols.Count", span="43-43", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_6 [label="throw new Exception(''Too many symbols, all symbols: '' + allSymbols.Count);", span="45-45", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_8 [label="var ticks = GetRandomSymbols(allSymbols, hash, TickSymbolsToRun).ToList()", span="50-50", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_9 [label="var seconds = GetRandomSymbols(allSymbols, hash, SecondSymbolsToRun).ToList()", span="51-51", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_10 [label="var minutes = GetRandomSymbols(allSymbols, hash, MinuteSymbolsToRun).ToList()", span="52-52", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_11 [label="var hours = GetRandomSymbols(allSymbols, hash, HourSymbolsToRun).ToList()", span="53-53", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_12 [label="var daily = GetRandomSymbols(allSymbols, hash, DailySymbolsToRun).ToList()", span="54-54", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_7 [label="var hash = new HashSet<string> {''DNY'', ''MLNK''}", span="49-49", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_13 [label="AddSecurity(ticks, Resolution.Tick)", span="56-56", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_14 [label="AddSecurity(seconds, Resolution.Second)", span="57-57", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_15 [label="AddSecurity(minutes, Resolution.Minute)", span="58-58", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_16 [label="AddSecurity(hours, Resolution.Hour)", span="59-59", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_17 [label="AddSecurity(daily, Resolution.Daily)", span="60-60", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_18 [label="Exit QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", span="36-36", cluster="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm.Initialize()", file="StressSymbolsAlgorithm.cs"];
m75_37 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="StressSymbolsAlgorithm.cs"];
m75_38 [label="GetRandomItem(allSymbols, hash)", span="76-76", cluster="lambda expression", file="StressSymbolsAlgorithm.cs"];
m75_39 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="StressSymbolsAlgorithm.cs"];
m75_52 [label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm", span="", file="StressSymbolsAlgorithm.cs"];
m75_53 [label="System.Collections.Generic.List<string>", span="", file="StressSymbolsAlgorithm.cs"];
m75_54 [label="System.Collections.Generic.HashSet<string>", span="", file="StressSymbolsAlgorithm.cs"];
m76_5 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="73-73", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="SubscriptionDataConfig.cs"];
m76_6 [label="return 1m;", span="76-76", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="SubscriptionDataConfig.cs"];
m76_7 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="73-73", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="SubscriptionDataConfig.cs"];
m76_11 [label="Entry QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", span="22-22", cluster="QuantConnect.Orders.Fees.GDAXFeeModel.GDAXFeeModel()", file="SubscriptionDataConfig.cs"];
m76_12 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="97-97", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_13 [label="message = _message", span="99-99", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_14 [label="return false;", span="100-100", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_15 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="97-97", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanUpdateOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, QuantConnect.Orders.UpdateOrderRequest, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_33 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="SubscriptionDataConfig.cs"];
m76_35 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="SubscriptionDataConfig.cs"];
m76_8 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="84-84", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="SubscriptionDataConfig.cs"];
m76_9 [label="return new GDAXFeeModel();", span="86-86", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="SubscriptionDataConfig.cs"];
m76_10 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", span="84-84", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFeeModel(QuantConnect.Securities.Security)", file="SubscriptionDataConfig.cs"];
m76_37 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="155-155", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="SubscriptionDataConfig.cs"];
m76_38 [label="return new LatestPriceFillModel();", span="157-157", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="SubscriptionDataConfig.cs"];
m76_39 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", span="155-155", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetFillModel(QuantConnect.Securities.Security)", file="SubscriptionDataConfig.cs"];
m76_4 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="SubscriptionDataConfig.cs"];
m76_44 [label="Entry QuantConnect.Securities.CashBuyingPowerModel.CashBuyingPowerModel()", span="24-24", cluster="QuantConnect.Securities.CashBuyingPowerModel.CashBuyingPowerModel()", file="SubscriptionDataConfig.cs"];
m76_36 [label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="87-87", cluster="QuantConnect.Brokerages.DefaultBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_41 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetBuyingPowerModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="167-167", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetBuyingPowerModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="SubscriptionDataConfig.cs"];
m76_42 [label="return new CashBuyingPowerModel();", span="170-170", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetBuyingPowerModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="SubscriptionDataConfig.cs"];
m76_43 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetBuyingPowerModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", span="167-167", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetBuyingPowerModel(QuantConnect.Securities.Security, QuantConnect.AccountType)", file="SubscriptionDataConfig.cs"];
m76_32 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SubscriptionDataConfig.cs"];
m76_40 [label="Entry QuantConnect.Orders.Fills.LatestPriceFillModel.LatestPriceFillModel()", span="27-27", cluster="QuantConnect.Orders.Fills.LatestPriceFillModel.LatestPriceFillModel()", file="SubscriptionDataConfig.cs"];
m76_0 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="59-59", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="SubscriptionDataConfig.cs"];
m76_1 [label="accountType == AccountType.Margin", span="62-62", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="SubscriptionDataConfig.cs"];
m76_2 [label="throw new Exception(''The GDAX brokerage does not currently support Margin trading.'');", span="64-64", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="SubscriptionDataConfig.cs"];
m76_3 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", span="59-59", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GDAXBrokerageModel(QuantConnect.AccountType)", file="SubscriptionDataConfig.cs"];
m76_16 [label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="110-110", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_17 [label="order.BrokerId != null && order.BrokerId.Any()", span="112-112", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_21 [label="MinimumOrderSizes.TryGetValue(security.Symbol.Value, out minimumOrderSize) &&\r\n                Math.Abs(order.Quantity) < minimumOrderSize", span="119-120", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_22 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    $''The minimum order quantity for {security.Symbol.Value} is {minimumOrderSize}''\r\n                )", span="122-124", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_24 [label="security.Type != SecurityType.Crypto", span="129-129", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_25 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model does not support '' + security.Type + '' security type.''\r\n                )", span="131-133", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_27 [label="order.Type != OrderType.Limit && order.Type != OrderType.Market && order.Type != OrderType.StopMarket", span="138-138", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_28 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NotSupported'',\r\n                    ''This model does not support '' + order.Type + '' order type.''\r\n                )", span="140-142", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_30 [label="return base.CanSubmitOrder(security, order, out message);", span="147-147", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_18 [label="message = _message", span="114-114", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_20 [label="decimal minimumOrderSize", span="118-118", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_19 [label="return false;", span="115-115", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_23 [label="return false;", span="126-126", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_26 [label="return false;", span="135-135", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_29 [label="return false;", span="144-144", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_31 [label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", span="110-110", cluster="QuantConnect.Brokerages.GDAXBrokerageModel.CanSubmitOrder(QuantConnect.Securities.Security, QuantConnect.Orders.Order, out QuantConnect.Brokerages.BrokerageMessageEvent)", file="SubscriptionDataConfig.cs"];
m76_45 [label="QuantConnect.Brokerages.GDAXBrokerageModel", span="", file="SubscriptionDataConfig.cs"];
m77_6 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", span="44-44", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", file="TickDataFilteringAlgorithm.cs"];
m77_8 [label="projects.ForEach(p => projectNameBox.Items.Add(new ComboboxItem(p.Item1.ToString(), p.Item2)))", span="46-46", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", file="TickDataFilteringAlgorithm.cs"];
m77_9 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", span="44-44", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetProjectNames(System.Collections.Generic.List<System.Tuple<int, string>>)", file="TickDataFilteringAlgorithm.cs"];
m77_16 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="TickDataFilteringAlgorithm.cs"];
m77_10 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="TickDataFilteringAlgorithm.cs"];
m77_28 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="TickDataFilteringAlgorithm.cs"];
m77_39 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", span="84-84", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_40 [label="Close()", span="86-86", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_41 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", span="84-84", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.CancelButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_30 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int, string)", span="77-77", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int, string)", file="TickDataFilteringAlgorithm.cs"];
m77_35 [label="_projectNameProvided = true", span="79-79", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int, string)", file="TickDataFilteringAlgorithm.cs"];
m77_36 [label="_selectedProjectName = projectName", span="80-80", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int, string)", file="TickDataFilteringAlgorithm.cs"];
m77_37 [label="_selectedProjectId = projectId", span="81-81", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int, string)", file="TickDataFilteringAlgorithm.cs"];
m77_38 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int, string)", span="77-77", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SaveSelectedProjectName(int, string)", file="TickDataFilteringAlgorithm.cs"];
m77_5 [label="Entry Unk.InitializeComponent", span="", cluster="Unk.InitializeComponent", file="TickDataFilteringAlgorithm.cs"];
m77_45 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectName()", span="94-94", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectName()", file="TickDataFilteringAlgorithm.cs"];
m77_46 [label="return _selectedProjectName;", span="96-96", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectName()", file="TickDataFilteringAlgorithm.cs"];
m77_47 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectName()", span="94-94", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectName()", file="TickDataFilteringAlgorithm.cs"];
m77_29 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", span="71-71", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="TickDataFilteringAlgorithm.cs"];
m77_32 [label="projectNameBox.BorderBrush = System.Windows.Media.Brushes.Red", span="73-73", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="TickDataFilteringAlgorithm.cs"];
m77_33 [label="projectNameBox.ToolTip = ''Error occurred with the data of the control.''", span="74-74", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="TickDataFilteringAlgorithm.cs"];
m77_34 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", span="71-71", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.DisplayProjectNameError()", file="TickDataFilteringAlgorithm.cs"];
m77_15 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="TickDataFilteringAlgorithm.cs"];
m77_14 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(string, string)", span="108-108", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(string, string)", file="TickDataFilteringAlgorithm.cs"];
m77_51 [label="this.Value = Value", span="110-110", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(string, string)", file="TickDataFilteringAlgorithm.cs"];
m77_52 [label="this.DisplayText = DisplayText", span="111-111", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(string, string)", file="TickDataFilteringAlgorithm.cs"];
m77_53 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(string, string)", span="108-108", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ComboboxItem(string, string)", file="TickDataFilteringAlgorithm.cs"];
m77_31 [label="Entry Unk.Close", span="", cluster="Unk.Close", file="TickDataFilteringAlgorithm.cs"];
m77_7 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", span="49-49", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", file="TickDataFilteringAlgorithm.cs"];
m77_17 [label="projectNameBox.Text = suggestedProjectName", span="51-51", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", file="TickDataFilteringAlgorithm.cs"];
m77_18 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", span="49-49", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SetSuggestedProjectName(string)", file="TickDataFilteringAlgorithm.cs"];
m77_42 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameProvided()", span="89-89", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameProvided()", file="TickDataFilteringAlgorithm.cs"];
m77_43 [label="return _projectNameProvided;", span="91-91", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameProvided()", file="TickDataFilteringAlgorithm.cs"];
m77_44 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameProvided()", span="89-89", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameProvided()", file="TickDataFilteringAlgorithm.cs"];
m77_19 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", span="54-54", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_20 [label="ComboboxItem selectedItem = projectNameBox.SelectedItem as ComboboxItem", span="56-56", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_21 [label="int projectId = Int32.Parse(selectedItem.Value)", span="57-57", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_22 [label="var projectName = selectedItem.DisplayText", span="58-58", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_25 [label="SaveSelectedProjectName(projectId, projectName)", span="66-66", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_23 [label="projectName.Length == 0", span="60-60", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_24 [label="DisplayProjectNameError()", span="62-62", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_26 [label="Close()", span="67-67", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_27 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", span="54-54", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.SelectButton_Click(object, System.Windows.RoutedEventArgs)", file="TickDataFilteringAlgorithm.cs"];
m77_0 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", span="37-37", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="TickDataFilteringAlgorithm.cs"];
m77_1 [label="InitializeComponent()", span="39-39", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="TickDataFilteringAlgorithm.cs"];
m77_2 [label="SetProjectNames(projects)", span="40-40", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="TickDataFilteringAlgorithm.cs"];
m77_3 [label="SetSuggestedProjectName(suggestedProjectName)", span="41-41", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="TickDataFilteringAlgorithm.cs"];
m77_4 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", span="37-37", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ProjectNameDialog(System.Collections.Generic.List<System.Tuple<int, string>>, string)", file="TickDataFilteringAlgorithm.cs"];
m77_48 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectId()", span="99-99", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectId()", file="TickDataFilteringAlgorithm.cs"];
m77_49 [label="return _selectedProjectId;", span="101-101", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectId()", file="TickDataFilteringAlgorithm.cs"];
m77_50 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectId()", span="99-99", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.GetSelectedProjectId()", file="TickDataFilteringAlgorithm.cs"];
m77_54 [label="Entry QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", span="114-114", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", file="TickDataFilteringAlgorithm.cs"];
m77_55 [label="return this.DisplayText;", span="116-116", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", file="TickDataFilteringAlgorithm.cs"];
m77_56 [label="Exit QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", span="114-114", cluster="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem.ToString()", file="TickDataFilteringAlgorithm.cs"];
m77_11 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="TickDataFilteringAlgorithm.cs"];
m77_12 [label="projectNameBox.Items.Add(new ComboboxItem(p.Item1.ToString(), p.Item2))", span="46-46", cluster="lambda expression", file="TickDataFilteringAlgorithm.cs"];
m77_13 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="TickDataFilteringAlgorithm.cs"];
m77_57 [label="QuantConnect.VisualStudioPlugin.ProjectNameDialog", span="", file="TickDataFilteringAlgorithm.cs"];
m77_58 [label="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem", span="", file="TickDataFilteringAlgorithm.cs"];
m78_36 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", span="80-80", cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.DataFeedPacket(QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.Collections.Generic.List<QuantConnect.Data.BaseData>)", file="TimeSliceTests.cs"];
m78_68 [label="Entry Unk.IsInstanceOf", span="", cluster="Unk.IsInstanceOf", file="TimeSliceTests.cs"];
m78_37 [label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58", cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="TimeSliceTests.cs"];
m78_20 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="TimeSliceTests.cs"];
m78_48 [label="Entry QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", span="83-83", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_49 [label="var symbol1 = Symbol.Create(''SCF/CBOE_VX1_EW'', SecurityType.Base, Market.USA)", span="85-85", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_50 [label="var symbol2 = Symbol.Create(''SCF/CBOE_VX2_EW'', SecurityType.Base, Market.USA)", span="86-86", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_51 [label="var subscriptionDataConfig1 = new SubscriptionDataConfig(\r\n                typeof(QuandlFuture), symbol1, Resolution.Daily, TimeZones.Utc, TimeZones.Utc, true, true, false, isCustom: true)", span="88-89", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_55 [label="var timeSlice = TimeSlice.Create(DateTime.UtcNow, TimeZones.Utc, new CashBook(),\r\n                new List<DataFeedPacket>\r\n                {\r\n                    new DataFeedPacket(security1, subscriptionDataConfig1, new List<BaseData> {new QuandlFuture { Symbol = symbol1, Time = DateTime.UtcNow.Date, Value = 15 } }),\r\n                    new DataFeedPacket(security2, subscriptionDataConfig2, new List<BaseData> {new QuandlFuture { Symbol = symbol2, Time = DateTime.UtcNow.Date, Value = 20 } }),\r\n                },\r\n                new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>()))", span="105-111", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_61 [label="Assert.AreEqual(symbol1, data1.Symbol)", span="120-120", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_52 [label="var subscriptionDataConfig2 = new SubscriptionDataConfig(\r\n                typeof(QuandlFuture), symbol2, Resolution.Daily, TimeZones.Utc, TimeZones.Utc, true, true, false, isCustom: true)", span="90-91", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_62 [label="Assert.AreEqual(symbol2, data2.Symbol)", span="121-121", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_53 [label="var security1 = new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc),\r\n                subscriptionDataConfig1,\r\n                new Cash(CashBook.AccountCurrency, 0, 1m),\r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="93-97", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_54 [label="var security2 = new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc),\r\n                subscriptionDataConfig1,\r\n                new Cash(CashBook.AccountCurrency, 0, 1m),\r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="99-103", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_56 [label="Assert.AreEqual(2, timeSlice.CustomData.Count)", span="113-113", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_57 [label="var data1 = timeSlice.CustomData[0].Data[0]", span="115-115", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_58 [label="var data2 = timeSlice.CustomData[1].Data[0]", span="116-116", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_59 [label="Assert.IsInstanceOf(typeof(QuandlFuture), data1)", span="118-118", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_63 [label="Assert.AreEqual(15, data1.Value)", span="122-122", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_60 [label="Assert.IsInstanceOf(typeof(QuandlFuture), data2)", span="119-119", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_64 [label="Assert.AreEqual(20, data2.Value)", span="123-123", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_65 [label="Exit QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", span="83-83", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeWithDifferentSymbols()", file="TimeSliceTests.cs"];
m78_43 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_32 [label="TimeSlice.Create(\r\n                t.Time,\r\n                TimeZones.Utc,\r\n                new CashBook(),\r\n                new List<DataFeedPacket> {new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() {t})},\r\n                new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>()))", span="58-63", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_27 [label="new Tick(refTime.AddSeconds(i), Symbols.EURUSD, 1.3465m, 1.34652m)", span="55-55", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_26 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_31 [label="Entry lambda expression", span="58-63", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_40 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_28 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_33 [label="Exit lambda expression", span="58-63", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_41 [label="ts.Slice.Ticks.Values.SelectMany(x => x)", span="65-65", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_42 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_44 [label=x, span="65-65", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_45 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="TimeSliceTests.cs"];
m78_13 [label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157", cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="TimeSliceTests.cs"];
m78_34 [label="Entry QuantConnect.Securities.CashBook.CashBook()", span="50-50", cluster="QuantConnect.Securities.CashBook.CashBook()", file="TimeSliceTests.cs"];
m78_25 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="TimeSliceTests.cs"];
m78_39 [label="Entry QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", span="110-110", cluster="QuantConnect.Lean.Engine.DataFeeds.TimeSlice.Create(System.DateTime, DateTimeZone, QuantConnect.Securities.CashBook, System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket>, QuantConnect.Data.UniverseSelection.SecurityChanges)", file="TimeSliceTests.cs"];
m78_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="TimeSliceTests.cs"];
m78_66 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="TimeSliceTests.cs"];
m78_69 [label="Entry QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", span="127-127", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_70 [label="var symbol = Symbol.Create(''DFX'', SecurityType.Base, Market.USA)", span="129-129", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_71 [label="var subscriptionDataConfig = new SubscriptionDataConfig(\r\n                typeof(DailyFx), symbol, Resolution.Daily, TimeZones.Utc, TimeZones.Utc, true, true, false, isCustom: true)", span="131-132", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_74 [label="var timeSlice = TimeSlice.Create(refTime, TimeZones.Utc, new CashBook(),\r\n                new List<DataFeedPacket>\r\n                {\r\n                    new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>\r\n                    {\r\n                        new DailyFx { Symbol = symbol, Time = refTime, Title = ''Item 1'' },\r\n                        new DailyFx { Symbol = symbol, Time = refTime, Title = ''Item 2'' },\r\n                    }),\r\n                },\r\n                new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>()))", span="142-151", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_80 [label="Assert.AreEqual(symbol, data1.Symbol)", span="160-160", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_81 [label="Assert.AreEqual(symbol, data2.Symbol)", span="161-161", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_72 [label="var security = new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc),\r\n                subscriptionDataConfig,\r\n                new Cash(CashBook.AccountCurrency, 0, 1m),\r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="134-138", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_73 [label="var refTime = DateTime.UtcNow", span="140-140", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_75 [label="Assert.AreEqual(1, timeSlice.CustomData.Count)", span="153-153", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_76 [label="var data1 = timeSlice.CustomData[0].Data[0]", span="155-155", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_77 [label="var data2 = timeSlice.CustomData[0].Data[1]", span="156-156", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_78 [label="Assert.IsInstanceOf(typeof(DailyFx), data1)", span="158-158", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_82 [label="Assert.AreEqual(''Item 1'', ((DailyFx)data1).Title)", span="162-162", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_79 [label="Assert.IsInstanceOf(typeof(DailyFx), data2)", span="159-159", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_83 [label="Assert.AreEqual(''Item 2'', ((DailyFx)data2).Title)", span="163-163", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_84 [label="Exit QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", span="127-127", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesMultipleCustomDataOfSameTypeSameSymbol()", file="TimeSliceTests.cs"];
m78_15 [label="Entry QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", span="82-82", cluster="QuantConnect.Securities.SecurityExchangeHours.AlwaysOpen(DateTimeZone)", file="TimeSliceTests.cs"];
m78_23 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="TimeSliceTests.cs"];
m78_22 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="TimeSliceTests.cs"];
m78_38 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="TimeSliceTests.cs"];
m78_0 [label="Entry QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", span="33-33", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_1 [label="var subscriptionDataConfig = new SubscriptionDataConfig(\r\n                typeof(Tick), \r\n                Symbols.EURUSD, \r\n                Resolution.Tick, \r\n                TimeZones.Utc, \r\n                TimeZones.Utc, \r\n                true, \r\n                true, \r\n                false)", span="35-43", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_2 [label="var security = new Security(\r\n                SecurityExchangeHours.AlwaysOpen(TimeZones.Utc), \r\n                subscriptionDataConfig, \r\n                new Cash(CashBook.AccountCurrency, 0, 1m), \r\n                SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="45-49", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_5 [label="IEnumerable<TimeSlice> timeSlices = rawTicks.Select(t => TimeSlice.Create(\r\n                t.Time,\r\n                TimeZones.Utc,\r\n                new CashBook(),\r\n                new List<DataFeedPacket> {new DataFeedPacket(security, subscriptionDataConfig, new List<BaseData>() {t})},\r\n                new SecurityChanges(Enumerable.Empty<Security>(), Enumerable.Empty<Security>())))", span="58-63", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_3 [label="DateTime refTime = DateTime.UtcNow", span="51-51", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_4 [label="Tick[] rawTicks = Enumerable\r\n                .Range(0, 10)\r\n                .Select(i => new Tick(refTime.AddSeconds(i), Symbols.EURUSD, 1.3465m, 1.34652m))\r\n                .ToArray()", span="53-56", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_7 [label="Assert.AreEqual(rawTicks.Length, timeSliceTicks.Length)", span="67-67", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_9 [label="i < rawTicks.Length", span="68-68", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_10 [label="Assert.IsTrue(Compare(rawTicks[i], timeSliceTicks[i]))", span="70-70", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_6 [label="Tick[] timeSliceTicks = timeSlices.SelectMany(ts => ts.Slice.Ticks.Values.SelectMany(x => x)).ToArray()", span="65-65", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_8 [label="int i = 0", span="68-68", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_11 [label="i++", span="68-68", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_12 [label="Exit QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", span="33-33", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.HandlesTicks_ExpectInOrderWithNoDuplicates()", file="TimeSliceTests.cs"];
m78_14 [label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315", cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="TimeSliceTests.cs"];
m78_18 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="TimeSliceTests.cs"];
m78_30 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="TimeSliceTests.cs"];
m78_29 [label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142", cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="TimeSliceTests.cs"];
m78_17 [label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84", cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="TimeSliceTests.cs"];
m78_16 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="TimeSliceTests.cs"];
m78_67 [label="Entry QuantConnect.QuandlFuture.QuandlFuture()", span="67-67", cluster="QuantConnect.QuandlFuture.QuandlFuture()", file="TimeSliceTests.cs"];
m78_24 [label="Entry QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", span="74-74", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", file="TimeSliceTests.cs"];
m78_46 [label="return expected.Time == actual.Time\r\n                   && expected.BidPrice == actual.BidPrice\r\n                   && expected.AskPrice == actual.AskPrice\r\n                   && expected.Quantity == actual.Quantity;", span="76-79", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", file="TimeSliceTests.cs"];
m78_47 [label="Exit QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", span="74-74", cluster="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests.Compare(QuantConnect.Data.Market.Tick, QuantConnect.Data.Market.Tick)", file="TimeSliceTests.cs"];
m78_85 [label="Entry QuantConnect.Data.Custom.DailyFx.DailyFx()", span="118-118", cluster="QuantConnect.Data.Custom.DailyFx.DailyFx()", file="TimeSliceTests.cs"];
m78_19 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="TimeSliceTests.cs"];
m78_86 [label="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests", span="", file="TimeSliceTests.cs"];
m78_87 [label=refTime, span="", file="TimeSliceTests.cs"];
m78_88 [label=subscriptionDataConfig, span="", file="TimeSliceTests.cs"];
m78_89 [label=security, span="", file="TimeSliceTests.cs"];
m79_0 [label="Entry QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", span="25-25", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", file="Universe.cs"];
m79_1 [label="var serverStatistics = OS.GetServerStatistics()", span="27-27", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", file="Universe.cs"];
m79_2 [label="var maxKeyLength = serverStatistics.Keys.Max(x => x.Length)", span="28-28", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", file="Universe.cs"];
m79_3 [label=serverStatistics, span="29-29", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", file="Universe.cs"];
m79_4 [label="Console.WriteLine(''{0, -'' + maxKeyLength + ''} - {1}'', statistic.Key, statistic.Value)", span="31-31", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", file="Universe.cs"];
m79_5 [label="Exit QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", span="25-25", cluster="QuantConnect.Tests.Common.OSTests.GetServerStatisticsDoesntThrow()", file="Universe.cs"];
m79_6 [label="Entry QuantConnect.OS.GetServerStatistics()", span="229-229", cluster="QuantConnect.OS.GetServerStatistics()", file="Universe.cs"];
m79_8 [label="Entry System.Console.WriteLine(string, object, object)", span="0-0", cluster="System.Console.WriteLine(string, object, object)", file="Universe.cs"];
m79_7 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Max<TSource>(System.Func<TSource, int>)", file="Universe.cs"];
m79_9 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="Universe.cs"];
m79_10 [label="x.Length", span="28-28", cluster="lambda expression", file="Universe.cs"];
m79_11 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="Universe.cs"];
m80_82 [label="Entry QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", span="94-94", cluster="QuantConnect.Data.UniverseSelection.SubscriptionRequest.SubscriptionRequest(bool, QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_84 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="UniverseSelection.cs"];
m80_110 [label="Entry QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", span="58-58", cluster="QuantConnect.Data.UniverseSelection.SecurityChanges.SecurityChanges(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>)", file="UniverseSelection.cs"];
m80_87 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="UniverseSelection.cs"];
m80_98 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="UniverseSelection.cs"];
m80_99 [label="Entry Unk.TryGetValue", span="", cluster="Unk.TryGetValue", file="UniverseSelection.cs"];
m80_112 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="UniverseSelection.cs"];
m80_7 [label="dataFeed.Subscriptions", span="52-52", cluster="lambda expression", file="UniverseSelection.cs"];
m80_6 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="UniverseSelection.cs"];
m80_8 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="UniverseSelection.cs"];
m80_113 [label="new[] { dateTimeUtc }", span="78-78", cluster="lambda expression", file="UniverseSelection.cs"];
m80_116 [label="x.Status.IsOpen() && x.Symbol == member.Symbol", span="122-122", cluster="lambda expression", file="UniverseSelection.cs"];
m80_115 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="UniverseSelection.cs"];
m80_120 [label="x.Status.IsOpen() && x.Symbol == member.Symbol", span="146-146", cluster="lambda expression", file="UniverseSelection.cs"];
m80_119 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="UniverseSelection.cs"];
m80_114 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="UniverseSelection.cs"];
m80_117 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="UniverseSelection.cs"];
m80_121 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="UniverseSelection.cs"];
m80_5 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", span="43-43", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.SubscriptionLimiter(System.Func<System.Collections.Generic.IEnumerable<QuantConnect.Lean.Engine.DataFeeds.Subscription>>, int, int, int)", file="UniverseSelection.cs"];
m80_104 [label="Entry QuantConnect.Symbol.ToString()", span="354-354", cluster="QuantConnect.Symbol.ToString()", file="UniverseSelection.cs"];
m80_132 [label="Entry System.Collections.Generic.List<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Remove(T)", file="UniverseSelection.cs"];
m80_97 [label="Entry QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="119-119", cluster="QuantConnect.Data.UniverseSelection.Universe.CanRemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="UniverseSelection.cs"];
m80_130 [label="Entry QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", span="237-237", cluster="QuantConnect.Data.UniverseSelection.Universe.RemoveMember(System.DateTime, QuantConnect.Securities.Security)", file="UniverseSelection.cs"];
m80_95 [label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="UniverseSelection.cs"];
m80_101 [label="Entry QuantConnect.Data.UniverseSelection.Universe.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="188-188", cluster="QuantConnect.Data.UniverseSelection.Universe.GetSubscriptionRequests(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_107 [label="Entry QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", span="219-219", cluster="QuantConnect.Data.UniverseSelection.Universe.AddMember(System.DateTime, QuantConnect.Securities.Security)", file="UniverseSelection.cs"];
m80_78 [label="Entry QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", span="82-82", cluster="QuantConnect.Data.UniverseSelection.FineFundamentalUniverse.CreateConfiguration(QuantConnect.Symbol)", file="UniverseSelection.cs"];
m80_134 [label="Entry QuantConnect.SymbolCache.TryRemove(QuantConnect.Symbol)", span="92-92", cluster="QuantConnect.SymbolCache.TryRemove(QuantConnect.Symbol)", file="UniverseSelection.cs"];
m80_80 [label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", span="72-72", cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, QuantConnect.Symbol, QuantConnect.SecurityType, string)", file="UniverseSelection.cs"];
m80_103 [label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="378-378", cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="UniverseSelection.cs"];
m80_19 [label="var exchangeHours = _marketHoursDatabase.GetEntry(symbol.ID.Market, symbol, symbol.ID.SecurityType).ExchangeHours", span="81-81", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_9 [label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="61-61", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_10 [label="IEnumerable<Symbol> selectSymbolsResult", span="63-63", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_11 [label="var fineFiltered = universe as FineFundamentalFilteredUniverse", span="66-66", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_13 [label="selectSymbolsResult = universe.SelectSymbols(dateTimeUtc, universeData)", span="70-70", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_17 [label="var factory = new FineFundamentalSubscriptionEnumeratorFactory(_algorithm.LiveMode, x => new[] { dateTimeUtc })", span="78-78", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_23 [label="var request = new SubscriptionRequest(true, universe, security, config, dateTimeUtc, dateTimeUtc)", span="87-87", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m80_27 [label="selectSymbolsResult = fineFiltered.FineFundamentalUniverse.PerformSelection(dateTimeUtc, fineCollection)", span="98-98", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_28 [label="selectSymbolsResult = universe.PerformSelection(dateTimeUtc, universeData)", span="103-103", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_38 [label="RemoveSecurityFromUniverse(universe, member, removals, dateTimeUtc, algorithmEndDateUtc)", span="125-125", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_40 [label="universe.Members.Values", span="132-132", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_42 [label="!universe.CanRemoveMember(dateTimeUtc, member)", span="138-138", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_46 [label="RemoveSecurityFromUniverse(universe, member, removals, dateTimeUtc, algorithmEndDateUtc)", span="149-149", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_51 [label="security = universe.CreateSecurity(symbol, _algorithm, _marketHoursDatabase, _symbolPropertiesDatabase)", span="164-164", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_53 [label="universe.GetSubscriptionRequests(security, dateTimeUtc, algorithmEndDateUtc)", span="169-169", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_62 [label="var addedMember = universe.AddMember(dateTimeUtc, security)", span="193-193", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_68 [label="_dataFeed.AddSubscription(new SubscriptionRequest(false, universe, security, security.Subscriptions.First(), dateTimeUtc, algorithmEndDateUtc))", span="209-209", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", color=red, community=0, file="UniverseSelection.cs"];
m80_71 [label="Log.Debug(''UniverseSelection.ApplyUniverseSelection(): '' + dateTimeUtc + '': '' + securityChanges)", span="220-220", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_12 [label="fineFiltered != null", span="67-67", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_14 [label="var fineCollection = new BaseDataCollection()", span="73-73", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_16 [label=selectSymbolsResult, span="76-76", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_15 [label="var dataProvider = new DefaultDataProvider()", span="74-74", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_26 [label="fineCollection.Data.Add(enumerator.Current)", span="92-92", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_24 [label="var enumerator = factory.CreateEnumerator(request, dataProvider)", span="88-88", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs", color=green, community=0];
m80_18 [label="var config = FineFundamentalUniverse.CreateConfiguration(symbol)", span="79-79", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_20 [label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(symbol.ID.Market, symbol, symbol.ID.SecurityType, CashBook.AccountCurrency)", span="82-82", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_22 [label="var security = new Equity(symbol, exchangeHours, quoteCash, symbolProperties)", span="85-85", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_21 [label="var quoteCash = _algorithm.Portfolio.CashBook[symbolProperties.QuoteCurrency]", span="83-83", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_25 [label="enumerator.MoveNext()", span="90-90", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_29 [label="ReferenceEquals(selectSymbolsResult, Universe.Unchanged)", span="107-107", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_31 [label="var selections = selectSymbolsResult.ToHashSet()", span="113-113", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_30 [label="return SecurityChanges.None;", span="109-109", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_32 [label="var additions = new List<Security>()", span="115-115", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_41 [label="selections.Contains(member.Symbol)", span="135-135", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_48 [label=selections, span="158-158", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_33 [label="var removals = new List<Security>()", span="116-116", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_64 [label="additions.Add(security)", span="197-197", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_65 [label="additions.Count > 0", span="203-203", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_69 [label="var securityChanges = additions.Count + removals.Count != 0\r\n                ? new SecurityChanges(additions, removals)\r\n                : SecurityChanges.None", span="214-216", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_34 [label="var algorithmEndDateUtc = _algorithm.EndDate.ConvertToUtc(_algorithm.TimeZone)", span="117-117", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_43 [label="removals.Add(member)", span="143-143", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_35 [label="_pendingRemovals.ToList()", span="120-120", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_36 [label="var openOrders = _algorithm.Transactions.GetOrders(x => x.Status.IsOpen() && x.Symbol == member.Symbol)", span="122-122", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_37 [label="!member.HoldStock && !openOrders.Any()", span="123-123", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_39 [label="_pendingRemovals.Remove(member)", span="127-127", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_44 [label="var openOrders = _algorithm.Transactions.GetOrders(x => x.Status.IsOpen() && x.Symbol == member.Symbol)", span="146-146", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_45 [label="!member.HoldStock && !openOrders.Any()", span="147-147", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_47 [label="_pendingRemovals.Add(member)", span="153-153", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_49 [label="Security security", span="161-161", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_50 [label="!_algorithm.Securities.TryGetValue(symbol, out security)", span="162-162", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_52 [label="var addedSubscription = false", span="167-167", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_61 [label=addedSubscription, span="191-191", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_54 [label="string reason", span="172-172", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_55 [label="!_limiter.CanAddSubscription(request.Configuration.Resolution, out reason)", span="173-173", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_57 [label="Log.Trace(''UniverseSelection.ApplyUniverseSelection(): Skipping adding subscription: '' + request.Configuration.Symbol.ToString() + '': '' + reason)", span="178-178", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_58 [label="_dataFeed.AddSubscription(request)", span="182-182", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_59 [label="!request.IsUniverseSubscription", span="185-185", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_56 [label="_algorithm.Error(reason)", span="177-177", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_60 [label="addedSubscription = true", span="187-187", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_63 [label=addedMember, span="195-195", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_66 [label="var addedSecurities = _algorithm.Portfolio.CashBook.EnsureCurrencyDataFeeds(_algorithm.Securities, _algorithm.SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, _algorithm.BrokerageModel.DefaultMarkets)", span="205-205", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_67 [label=addedSecurities, span="206-206", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_70 [label="securityChanges != SecurityChanges.None", span="218-218", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_72 [label="return securityChanges;", span="223-223", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_73 [label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="61-61", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.ApplyUniverseSelection(QuantConnect.Data.UniverseSelection.Universe, System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_102 [label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", span="85-85", cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionLimiter.CanAddSubscription(QuantConnect.Resolution, out string)", file="UniverseSelection.cs"];
m80_94 [label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="226-226", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_122 [label="universe.RemoveMember(dateTimeUtc, member)", span="229-229", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_123 [label="member.Cache.Reset()", span="234-234", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_124 [label="universe.GetSubscriptionRequests(member, dateTimeUtc, algorithmEndDateUtc)", span="235-235", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_126 [label="removals.Remove(member)", span="239-239", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_128 [label="SymbolCache.TryRemove(member.Symbol)", span="248-248", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_125 [label="subscription.IsUniverseSubscription", span="237-237", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_127 [label="_dataFeed.RemoveSubscription(subscription.Configuration)", span="243-243", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_129 [label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="226-226", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.RemoveSecurityFromUniverse(QuantConnect.Data.UniverseSelection.Universe, QuantConnect.Securities.Security, System.Collections.Generic.List<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="UniverseSelection.cs"];
m80_106 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", span="60-60", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.AddSubscription(QuantConnect.Data.UniverseSelection.SubscriptionRequest)", file="UniverseSelection.cs"];
m80_131 [label="Entry QuantConnect.Securities.SecurityCache.Reset()", span="182-182", cluster="QuantConnect.Securities.SecurityCache.Reset()", file="UniverseSelection.cs"];
m80_91 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="UniverseSelection.cs"];
m80_86 [label="Entry QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="139-139", cluster="QuantConnect.Data.UniverseSelection.Universe.PerformSelection(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_75 [label="Entry QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", span="46-46", cluster="QuantConnect.Data.UniverseSelection.BaseDataCollection.BaseDataCollection()", file="UniverseSelection.cs"];
m80_108 [label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", span="78-78", cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, System.Collections.Generic.IReadOnlyDictionary<QuantConnect.SecurityType, string>)", file="UniverseSelection.cs"];
m80_111 [label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142", cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="UniverseSelection.cs"];
m80_74 [label="Entry QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", span="163-163", cluster="QuantConnect.Data.UniverseSelection.Universe.SelectSymbols(System.DateTime, QuantConnect.Data.UniverseSelection.BaseDataCollection)", file="UniverseSelection.cs"];
m80_92 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="UniverseSelection.cs"];
m80_93 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="UniverseSelection.cs"];
m80_76 [label="Entry QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", span="26-26", cluster="QuantConnect.Lean.Engine.DataFeeds.DefaultDataProvider.DefaultDataProvider()", file="UniverseSelection.cs"];
m80_0 [label="Entry QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="UniverseSelection.cs"];
m80_1 [label="_dataFeed = dataFeed", span="50-50", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="UniverseSelection.cs"];
m80_2 [label="_algorithm = algorithm", span="51-51", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="UniverseSelection.cs"];
m80_3 [label="_limiter = new SubscriptionLimiter(() => dataFeed.Subscriptions, controls.TickLimit, controls.SecondLimit, controls.MinuteLimit)", span="52-52", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="UniverseSelection.cs"];
m80_4 [label="Exit QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", span="48-48", cluster="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection.UniverseSelection(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.Controls)", file="UniverseSelection.cs"];
m80_133 [label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", span="67-67", cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.RemoveSubscription(QuantConnect.Data.SubscriptionDataConfig)", file="UniverseSelection.cs"];
m80_90 [label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="577-577", cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="UniverseSelection.cs"];
m80_77 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", span="47-47", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.FineFundamentalSubscriptionEnumeratorFactory(bool, System.Func<QuantConnect.Data.UniverseSelection.SubscriptionRequest, System.Collections.Generic.IEnumerable<System.DateTime>>)", file="UniverseSelection.cs"];
m80_83 [label="Entry QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", span="59-59", cluster="QuantConnect.Lean.Engine.DataFeeds.Enumerators.Factories.FineFundamentalSubscriptionEnumeratorFactory.CreateEnumerator(QuantConnect.Data.UniverseSelection.SubscriptionRequest, QuantConnect.Interfaces.IDataProvider)", file="UniverseSelection.cs"];
m80_85 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="UniverseSelection.cs"];
m80_96 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="UniverseSelection.cs"];
m80_118 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="UniverseSelection.cs"];
m80_88 [label="Entry Unk.ToHashSet", span="", cluster="Unk.ToHashSet", file="UniverseSelection.cs"];
m80_79 [label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", span="210-210", cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType, DateTimeZone)", file="UniverseSelection.cs"];
m80_105 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="UniverseSelection.cs"];
m80_100 [label="Entry Unk.CreateSecurity", span="", cluster="Unk.CreateSecurity", file="UniverseSelection.cs"];
m80_109 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="UniverseSelection.cs"];
m80_81 [label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="42-42", cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Symbol, QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="UniverseSelection.cs"];
m80_135 [label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection", span="", file="UniverseSelection.cs"];
m80_136 [label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", span="", file="UniverseSelection.cs"];
m80_137 [label="System.DateTime", span="", file="UniverseSelection.cs"];
m80_138 [label=member, span="", file="UniverseSelection.cs"];
m80_139 [label=member, span="", file="UniverseSelection.cs"];
m82_42 [label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101", cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_47 [label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.Initialize()", span="101-101", cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.Initialize()", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_46 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_45 [label="Entry QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="89-89", cluster="QuantConnect.Lean.Engine.LeanEngineSystemHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_41 [label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141", cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_44 [label="Entry System.DateTime.ToShortTimeString()", span="0-0", cluster="System.DateTime.ToShortTimeString()", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_57 [label="Entry QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44", cluster="QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_55 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_49 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_15 [label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="67-67", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_50 [label="Entry QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", span="192-192", cluster="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers.FromConfiguration(QuantConnect.Util.Composer)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_2 [label="OS.IsWindows", span="43-43", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_12 [label="LeanEngineSystemHandlers leanEngineSystemHandlers", span="60-60", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", color=green, community=0, file="UniverseSelectionRegressionAlgorithm.cs"];
m82_11 [label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="57-57", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_10 [label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="56-56", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_3 [label="Console.OutputEncoding = System.Text.Encoding.Unicode", span="45-45", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_5 [label="var liveMode = Config.GetBool(''live-mode'')", span="49-49", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_8 [label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="54-54", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_6 [label="Log.DebuggingEnabled = Config.GetBool(''debug-mode'')", span="50-50", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_9 [label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + Globals.Version + '' Mode: '' + mode + '' ('' + (Environment.Is64BitProcess ? ''64'' : ''32'') + ''bit)'')", span="55-55", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_13 [label="leanEngineSystemHandlers = LeanEngineSystemHandlers.FromConfiguration(Composer.Instance)", span="63-63", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_4 [label="var environment = Config.Get(''environment'')", span="48-48", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_7 [label="Log.LogHandler = Composer.Instance.GetExportedValueByTypeName<ILogHandler>(Config.Get(''log-handler'', ''CompositeLogHandler''))", span="51-51", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_14 [label=CompositionException, span="65-65", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_56 [label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265", cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_51 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_62 [label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", span="82-82", cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_59 [label="Entry QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", span="50-50", cluster="QuantConnect.Interfaces.IMessagingHandler.Send(QuantConnect.Packets.Packet)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_54 [label="Entry QuantConnect.Util.VersionHelper.IsNotEqualVersion(string)", span="62-62", cluster="QuantConnect.Util.VersionHelper.IsNotEqualVersion(string)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_52 [label="Entry System.Diagnostics.ProcessStartInfo.ProcessStartInfo()", span="0-0", cluster="System.Diagnostics.ProcessStartInfo.ProcessStartInfo()", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_58 [label="Entry QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", span="60-60", cluster="QuantConnect.Packets.RuntimeErrorPacket.RuntimeErrorPacket(int, string, string, string)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_53 [label="Entry System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", span="0-0", cluster="System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_48 [label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="36-36", cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_61 [label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70", cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_0 [label="Entry QuantConnect.Lean.Launcher.Program.Main(string[])", span="35-35", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_1 [label="var mode = ''RELEASE''", span="38-38", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_27 [label="environment.EndsWith(''-desktop'')", span="94-94", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_37 [label="var engine = new Engine.Engine(leanEngineSystemHandlers, leanEngineAlgorithmHandlers, liveMode)", span="121-121", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_17 [label="leanEngineSystemHandlers.Initialize()", span="72-72", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_19 [label="var job = leanEngineSystemHandlers.JobQueue.NextJob(out assemblyPath)", span="76-76", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_32 [label="leanEngineSystemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="112-112", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_33 [label="leanEngineSystemHandlers.Notify.SetAuthentication(job)", span="113-113", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_34 [label="leanEngineSystemHandlers.Notify.Send(new RuntimeErrorPacket(job.UserId, job.AlgorithmId, _collapseMessage))", span="114-114", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_35 [label="leanEngineSystemHandlers.JobQueue.AcknowledgeJob(job)", span="115-115", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_16 [label="throw;", span="68-68", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_18 [label="string assemblyPath", span="75-75", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_20 [label="job == null", span="78-78", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_30 [label="VersionHelper.IsNotEqualVersion(job.Version) || job.Redelivered", span="107-107", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_31 [label="Log.Error(''Engine.Run(): Job Version: '' + job.Version + ''  Deployed Version: '' + Globals.Version + '' Redelivered: '' + job.Redelivered)", span="109-109", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_38 [label="engine.Run(job, assemblyPath)", span="122-122", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_21 [label="throw new Exception(''Engine.Main(): Job was null.'');", span="80-80", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_22 [label="LeanEngineAlgorithmHandlers leanEngineAlgorithmHandlers", span="83-83", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_23 [label="leanEngineAlgorithmHandlers = LeanEngineAlgorithmHandlers.FromConfiguration(Composer.Instance)", span="86-86", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_24 [label=CompositionException, span="88-88", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_25 [label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="90-90", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_26 [label="throw;", span="91-91", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_28 [label="var info = new ProcessStartInfo\r\n                {\r\n                    UseShellExecute = false,\r\n                    FileName  = Config.Get(''desktop-exe''),\r\n                    Arguments = Config.Get(''desktop-http-port'')\r\n                }", span="96-101", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_29 [label="Process.Start(info)", span="102-102", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_36 [label="return;", span="116-116", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_39 [label="Exit QuantConnect.Lean.Launcher.Program.Main(string[])", span="35-35", cluster="QuantConnect.Lean.Launcher.Program.Main(string[])", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_43 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_40 [label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90", cluster="QuantConnect.Configuration.Config.Get(string, string)", file="UniverseSelectionRegressionAlgorithm.cs"];
m82_60 [label="Entry QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="42-42", cluster="QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="UniverseSelectionRegressionAlgorithm.cs"];
m83_258 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", span="560-560", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_259 [label="var request = new RestRequest(''accounts/{accountId}/orders/{orderId}'')", span="568-568", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_260 [label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="569-569", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_261 [label="request.AddUrlSegment(''orderId'', orderId.ToString())", span="570-570", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_263 [label="request.AddParameter(''type'', GetEnumDescription(type))", span="574-574", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_264 [label="request.AddParameter(''duration'', GetEnumDescription(duration))", span="575-575", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_265 [label="price != 0", span="576-576", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_266 [label="request.AddParameter(''price'', Math.Round(price, 2).ToString(CultureInfo.InvariantCulture))", span="576-576", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_267 [label="stop != 0", span="577-577", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_268 [label="request.AddParameter(''stop'', Math.Round(stop, 2).ToString(CultureInfo.InvariantCulture))", span="577-577", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_262 [label="request.Method = Method.PUT", span="571-571", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_269 [label="return Execute<TradierOrderResponse>(request, TradierApiRequestType.Orders);", span="580-580", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_270 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", span="560-560", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ChangeOrder(string, long, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_883 [label="Entry QuantConnect.Holding.Holding()", span="83-83", cluster="QuantConnect.Holding.Holding()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_238 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="523-523", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_239 [label="var request = new RestRequest(''accounts/{accountId}/orders'')", span="535-535", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_240 [label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="536-536", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_241 [label="request.AddParameter(''class'', GetEnumDescription(classification))", span="539-539", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_242 [label="request.AddParameter(''symbol'', symbol)", span="540-540", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_243 [label="request.AddParameter(''duration'', GetEnumDescription(duration))", span="541-541", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_244 [label="request.AddParameter(''type'', GetEnumDescription(type))", span="542-542", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_245 [label="request.AddParameter(''quantity'', quantity)", span="543-543", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_246 [label="request.AddParameter(''side'', GetEnumDescription(direction))", span="544-544", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_247 [label="price > 0", span="547-547", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_248 [label="request.AddParameter(''price'', Math.Round(price, 2))", span="547-547", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_249 [label="stop > 0", span="548-548", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_250 [label="request.AddParameter(''stop'', Math.Round(stop, 2))", span="548-548", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_251 [label="optionSymbol != ''''", span="549-549", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_252 [label="request.AddParameter(''option_symbol'', optionSymbol)", span="549-549", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_253 [label="request.Method = Method.POST", span="552-552", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_254 [label="return Execute<TradierOrderResponse>(request, TradierApiRequestType.Orders);", span="554-554", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_255 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="523-523", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(string, QuantConnect.Brokerages.Tradier.TradierOrderClass, QuantConnect.Brokerages.Tradier.TradierOrderDirection, string, decimal, decimal, decimal, string, QuantConnect.Brokerages.Tradier.TradierOrderType, QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_707 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_353 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", span="737-737", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_354 [label="var handler = SessionRefreshed", span="739-739", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_356 [label="handler(this, e)", span="740-740", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_355 [label="handler != null", span="740-740", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_357 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", span="737-737", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnSessionRefreshed(QuantConnect.Brokerages.Tradier.TokenResponse)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_950 [label="Entry System.Collections.Generic.Queue<T>.Queue(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Queue(System.Collections.Generic.IEnumerable<T>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_169 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_340 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_679 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", span="43-43", cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_497 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_568 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateCachedOpenOrder(long, QuantConnect.Brokerages.Tradier.TradierOrder)", span="1423-1423", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateCachedOpenOrder(long, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_754 [label="TradierCachedOpenOrder cachedOpenOrder", span="1425-1425", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateCachedOpenOrder(long, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_755 [label="_cachedOpenOrdersByTradierOrderID.TryGetValue(key, out cachedOpenOrder)", span="1426-1426", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateCachedOpenOrder(long, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_756 [label="cachedOpenOrder.Order = updatedOrder", span="1428-1428", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateCachedOpenOrder(long, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_757 [label="_cachedOpenOrdersByTradierOrderID[key] = new TradierCachedOpenOrder(updatedOrder)", span="1432-1432", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateCachedOpenOrder(long, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_758 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateCachedOpenOrder(long, QuantConnect.Brokerages.Tradier.TradierOrder)", span="1423-1423", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateCachedOpenOrder(long, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_625 [label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_447 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", span="1884-1884", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_958 [label="QCOrder = order", span="1886-1886", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_959 [label="Classification = classification", span="1887-1887", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_960 [label="Symbol = order.Symbol.Value", span="1888-1888", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_961 [label="Direction = ConvertDirection(order.Direction, holdingQuantity)", span="1889-1889", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_962 [label="Quantity = Math.Abs(order.Quantity)", span="1890-1890", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_963 [label="Price = GetLimitPrice(order)", span="1891-1891", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_964 [label="Stop = GetStopPrice(order)", span="1892-1892", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_965 [label="Type = ConvertOrderType(order)", span="1893-1893", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_966 [label="Duration = GetOrderDuration(order.TimeInForce)", span="1894-1894", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_967 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", span="1884-1884", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.TradierPlaceOrderRequest(QuantConnect.Orders.Order, QuantConnect.Brokerages.Tradier.TradierOrderClass, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_54 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", span="191-191", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_55 [label="var response = default(T)", span="193-193", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_56 [label="var method = ''TradierBrokerage.Execute.'' + request.Resource", span="195-195", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_57 [label="var parameters = request.Parameters.Select(x => x.Name + '': '' + x.Value)", span="196-196", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_58 [label="attempts != 0", span="198-198", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_59 [label="Log.Trace(method + ''(): Begin attempt '' + attempts)", span="200-200", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_64 [label="DateTime.Now < _rateLimitNextRequest[type]", span="211-211", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_66 [label="_rateLimitNextRequest[type] = DateTime.Now + _rateLimitPeriod[type]", span="212-212", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_67 [label="var raw = client.Execute(request)", span="215-215", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_69 [label="rootName != ''''", span="221-221", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_70 [label="response = DeserializeRemoveRoot<T>(raw.Content, rootName)", span="223-223", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_82 [label="request.Method == Method.DELETE", span="261-261", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_84 [label="var parameter = request.Parameters.FirstOrDefault(x => x.Name == ''orderId'')", span="264-264", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_89 [label="type == TradierApiRequestType.Data && rootName == ''series''", span="274-274", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_95 [label="attempts++ < max", span="288-288", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_98 [label="return Execute<T>(request, type, rootName, attempts, max);", span="293-293", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_104 [label="attempts++ < max", span="306-306", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_107 [label="return Execute<T>(request, type, rootName, attempts, max);", span="311-311", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_78 [label="Log.Trace(method + ''(1): Parameters: '' + string.Join('','', parameters))", span="252-252", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_79 [label="Log.Error(method + ''(1): '' + fault.Fault.Description)", span="253-253", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_91 [label="Log.Trace(method + ''(2): Parameters: '' + string.Join('','', parameters))", span="280-280", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_92 [label="Log.Error(method + ''(2): Response: '' + raw.Content)", span="281-281", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_96 [label="Log.Trace(method + ''(3): Attempting again...'')", span="290-290", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_99 [label="Log.Trace(method + ''(3): Parameters: '' + string.Join('','', parameters))", span="296-296", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_105 [label="Log.Trace(method + ''(4): Attempting again...'')", span="308-308", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_108 [label="Log.Trace(method + ''(4): Parameters: '' + string.Join('','', parameters))", span="314-314", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_109 [label="Log.Error(method + ''(4): NULL Response: Raw Response: '' + _previousResponseRaw)", span="315-315", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_60 [label=_lockAccessCredentials, span="203-203", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_61 [label="var client = new RestClient(RequestEndpoint)", span="205-205", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_62 [label="client.AddDefaultHeader(''Accept'', ''application/json'')", span="206-206", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_63 [label="client.AddDefaultHeader(''Authorization'', ''Bearer '' + AccessToken)", span="207-207", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_65 [label="Thread.Sleep(10)", span="211-211", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_68 [label="_previousResponseRaw = raw.Content", span="216-216", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_71 [label="response = JsonConvert.DeserializeObject<T>(raw.Content)", span="227-227", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_73 [label="Log.Error(err, ''Poorly formed message. Content: '' + raw.Content)", span="234-234", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_76 [label="fault = JsonConvert.DeserializeObject<TradierFaultContainer>(raw.Content)", span="242-242", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_81 [label="raw.Content.Contains(''order already in finalized state: filled'')", span="259-259", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_93 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''Unknown'', raw.Content))", span="282-282", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_94 [label="raw.ErrorException != null", span="286-286", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_100 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, raw.ErrorException.GetType().Name, raw.ErrorException.ToString()))", span="297-297", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_102 [label="throw new ApplicationException(message, raw.ErrorException);", span="300-300", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_72 [label=Exception, span="230-230", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_74 [label="response == null", span="237-237", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_103 [label="response == null", span="304-304", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_111 [label="return response;", span="319-319", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_75 [label="TradierFaultContainer fault = null", span="239-239", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_77 [label="fault != null && fault.Fault != null", span="249-249", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_80 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''JsonError'', fault.Fault.Description))", span="254-254", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_83 [label="string orderId = ''[unknown]''", span="263-263", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_88 [label="return new T();", span="270-270", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_87 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''OrderAlreadyFilled'',\r\n                                    ''Unable to cancel the order because it has already been filled. TradierOrderId: '' + orderId\r\n                                    ))", span="266-268", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_85 [label="parameter != null", span="265-265", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_86 [label="orderId = parameter.Value.ToString()", span="265-265", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_90 [label="return new T();", span="276-276", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_97 [label="Thread.Sleep(3000)", span="292-292", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_101 [label="string message = ''Error retrieving response.  Check inner details for more info.''", span="299-299", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_106 [label="Thread.Sleep(3000)", span="310-310", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_110 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''NullResponse'', _previousResponseRaw))", span="316-316", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_112 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", span="191-191", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Execute<T>(RestRequest, QuantConnect.Brokerages.Tradier.TradierApiRequestType, string, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_180 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(string)", span="409-409", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_181 [label="var request = new RestRequest(''accounts/{accountId}/balances'', Method.GET)", span="411-411", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_182 [label="request.AddParameter(''accountId'', accountId, ParameterType.UrlSegment)", span="412-412", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_183 [label="var balContainer = Execute<TradierBalance>(request, TradierApiRequestType.Standard)", span="413-413", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_184 [label="return balContainer.Balances;", span="415-415", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_185 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(string)", span="409-409", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetBalanceDetails(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_17 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_326 [label="Entry bool.ToString()", span="0-0", cluster="bool.ToString()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_495 [label="Entry long.Parse(string)", span="0-0", cluster="long.Parse(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_540 [label="Entry QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)", span="107-107", cluster="QuantConnect.Securities.SecurityExchange.DateTimeIsOpen(System.DateTime)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_168 [label="Entry RestRequest.cstr", span="", cluster="RestRequest.cstr", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_126 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_448 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", span="1727-1727", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_905 [label="var holdingQuantity = _securityProvider.GetHoldingsQuantity(order.Symbol)", span="1729-1729", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_906 [label="holdingQuantity > 0 && order.Quantity < 0", span="1732-1732", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_907 [label="(holdingQuantity + order.Quantity) < 0", span="1734-1734", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_909 [label="holdingQuantity < 0 && order.Quantity > 0", span="1740-1740", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_910 [label="(holdingQuantity + order.Quantity) > 0", span="1742-1742", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_908 [label="return true;", span="1737-1737", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_912 [label="return false;", span="1748-1748", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_911 [label="return true;", span="1745-1745", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_913 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", span="1727-1727", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderCrossesZero(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_496 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_532 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", span="1043-1043", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_533 [label="_disconnect = true", span="1045-1045", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_534 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", span="1043-1043", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Disconnect()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_298 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_256 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", span="697-697", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_334 [label="var fi = value.GetType().GetField(value.ToString())", span="700-700", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_338 [label="return value.ToString();", span="709-709", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_335 [label="var attributes = (EnumMemberAttribute[]) fi.GetCustomAttributes(typeof (EnumMemberAttribute), false)", span="701-701", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_336 [label="attributes.Length > 0", span="703-703", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_337 [label="return attributes[0].Value;", span="705-705", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_339 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", span="697-697", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetEnumDescription(System.Enum)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_647 [label="Entry System.Collections.Generic.HashSet<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Remove(T)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_381 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_122 [label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", span="56-56", cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, string, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_359 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", span="760-760", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_360 [label="var orders = new List<Order>()", span="762-762", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_361 [label="var openOrders = GetIntradayAndPendingOrders().Where(OrderIsOpen)", span="763-763", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_364 [label="orders.Add(ConvertOrder(openOrder))", span="769-769", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_365 [label="return orders;", span="772-772", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_362 [label=openOrders, span="765-765", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_363 [label="UpdateCachedOpenOrder(openOrder.Id, openOrder)", span="768-768", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_366 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", span="760-760", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOpenOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_272 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(string, long)", span="586-586", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(string, long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_273 [label="var request = new RestRequest(''accounts/{accountId}/orders/{orderId}'')", span="589-589", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(string, long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_274 [label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="590-590", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(string, long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_275 [label="request.AddUrlSegment(''orderId'', orderId.ToString())", span="591-591", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(string, long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_276 [label="request.Method = Method.DELETE", span="592-592", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(string, long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_277 [label="return Execute<TradierOrderResponse>(request, TradierApiRequestType.Orders);", span="595-595", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(string, long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_278 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(string, long)", span="586-586", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(string, long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_20 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", span="160-160", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_21 [label="AccessToken = accessToken", span="162-162", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_22 [label="RefreshToken = refreshToken", span="163-163", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_23 [label="_issuedAt = issuedAt", span="164-164", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_24 [label="_lifeSpan = lifeSpan", span="165-165", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_25 [label="UserId = userId", span="166-166", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_26 [label="_refreshTimer != null", span="168-168", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_27 [label="_refreshTimer.Dispose()", span="170-170", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_28 [label="_orderFillTimer != null", span="172-172", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_29 [label="_orderFillTimer.Dispose()", span="174-174", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_30 [label="var dueTime = ExpectedExpiry - DateTime.UtcNow", span="177-177", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_31 [label="dueTime < TimeSpan.Zero", span="178-178", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_34 [label="_refreshTimer = new Timer(state => RefreshSession(), null, dueTime, period)", span="180-180", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_32 [label="dueTime = TimeSpan.Zero", span="178-178", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_33 [label="var period = TimeSpan.FromDays(1).Subtract(TimeSpan.FromMinutes(-1))", span="179-179", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_35 [label="double orderPollingIntervalInSeconds = Config.GetDouble(''tradier-order-poll-interval'', 1.0)", span="183-183", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_36 [label="var interval = (int)(1000*orderPollingIntervalInSeconds)", span="184-184", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_37 [label="_orderFillTimer = new Timer(state => CheckForFills(), null, interval, interval)", span="185-185", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_38 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", span="160-160", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.SetTokens(int, string, string, System.DateTime, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_394 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", span="799-799", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_395 [label="return new List<Cash>\r\n            {\r\n                new Cash(''USD'', GetBalanceDetails(_accountID).TotalCash, 1.0m)\r\n            };", span="801-804", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_396 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", span="799-799", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetCashBalance()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_645 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_452 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", span="136-136", cluster="System.Collections.Concurrent.ConcurrentDictionary<K, V>.AddOrUpdate<K, V>(K, V)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_686 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_494 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_118 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_706 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_570 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_674 [label="Entry System.Collections.Generic.HashSet<T>.Clear()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Clear()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_884 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", span="1681-1681", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_885 [label="holdingQuantity == 0", span="1686-1686", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_886 [label=direction, span="1689-1689", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_891 [label="holdingQuantity > 0", span="1697-1697", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_892 [label=direction, span="1699-1699", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_897 [label="holdingQuantity < 0", span="1709-1709", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_898 [label=direction, span="1711-1711", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_887 [label="OrderDirection.Buy", span="1691-1691", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_889 [label="OrderDirection.Sell", span="1693-1693", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_888 [label="return TradierOrderDirection.Buy;", span="1692-1692", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_890 [label="return TradierOrderDirection.SellShort;", span="1694-1694", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_893 [label="OrderDirection.Buy", span="1701-1701", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_895 [label="OrderDirection.Sell", span="1704-1704", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_894 [label="return TradierOrderDirection.Buy;", span="1703-1703", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_896 [label="return TradierOrderDirection.Sell;", span="1706-1706", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_903 [label="return TradierOrderDirection.None;", span="1721-1721", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_899 [label="OrderDirection.Buy", span="1713-1713", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_901 [label="OrderDirection.Sell", span="1716-1716", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_900 [label="return TradierOrderDirection.BuyToCover;", span="1715-1715", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_902 [label="return TradierOrderDirection.SellShort;", span="1718-1718", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_904 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", span="1681-1681", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertDirection(QuantConnect.Orders.OrderDirection, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_567 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_127 [label="Entry T.cstr", span="", cluster="T.cstr", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_217 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", span="487-487", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_218 [label="var request = new RestRequest(''accounts/{accountId}/orders'')", span="489-489", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_219 [label="request.AddUrlSegment(''accountId'', _accountID.ToString())", span="490-490", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_220 [label="var ordersContainer = Execute<TradierOrdersContainer>(request, TradierApiRequestType.Standard)", span="491-491", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_221 [label="ordersContainer.Orders == null", span="493-493", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_224 [label="return ordersContainer.Orders.Orders;", span="500-500", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_222 [label="Log.Trace(''Tradier.FetchOrders(): No orders found'')", span="496-496", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_223 [label="return new List<TradierOrder>();", span="497-497", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_225 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", span="487-487", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetIntradayAndPendingOrders()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_370 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_369 [label="Entry Unk.ConvertOrder", span="", cluster="Unk.ConvertOrder", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_443 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_628 [label="Entry Unk.ExceptWith", span="", cluster="Unk.ExceptWith", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_624 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1454-1454", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_763 [label="return !OrderIsOpen(order);", span="1456-1456", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_764 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1454-1454", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsClosed(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_398 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="812-812", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_399 [label="Log.Trace(''TradierBrokerage.PlaceOrder(): '' + order)", span="814-814", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_400 [label="_cancelledQcOrderIDs.Contains(order.Id)", span="816-816", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_401 [label="Log.Trace(''TradierBrokerage.PlaceOrder(): Cancelled Order: '' + order.Id + '' - '' + order)", span="818-818", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_403 [label="var cachedOpenOrder = _cachedOpenOrdersByTradierOrderID.FirstOrDefault(x => x.Value.Order.Symbol == order.Symbol.Value).Value", span="823-823", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_415 [label="var holdingQuantity = _securityProvider.GetHoldingsQuantity(order.Symbol)", span="852-852", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_416 [label="var orderRequest = new TradierPlaceOrderRequest(order, TradierOrderClass.Equity,  holdingQuantity)", span="854-854", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_417 [label="bool crossesZero = OrderCrossesZero(order)", span="857-857", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_420 [label="var secondOrderQuantity = order.Quantity - firstOrderQuantity", span="862-862", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_422 [label="var restOfOrder = new TradierPlaceOrderRequest(order, TradierOrderClass.Equity, 0) {Quantity = Math.Abs(secondOrderQuantity)}", span="869-869", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_424 [label="_contingentOrdersByQCOrderID.AddOrUpdate(order.Id, new ContingentOrderQueue(order, restOfOrder))", span="872-872", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_429 [label="_contingentOrdersByQCOrderID.TryRemove(order.Id, out contingent)", span="881-881", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_432 [label="order.BrokerId.Add(closingOrderID.ToString())", span="886-886", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_437 [label="order.BrokerId.Add(response.Order.Id.ToString())", span="896-896", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_402 [label="return false;", span="819-819", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_404 [label="cachedOpenOrder != null", span="824-824", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_405 [label="var qcOrder = _orderProvider.GetOrderByBrokerageId(cachedOpenOrder.Order.Id)", span="826-826", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_409 [label="_cachedOpenOrdersByTradierOrderID.TryRemove(cachedOpenOrder.Order.Id, out tradierOrder)", span="832-832", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_406 [label="qcOrder == null", span="827-827", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_410 [label="qcOrder.Status.IsOpen()", span="835-835", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_411 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''OneOrderPerSymbol'',\r\n                        ''Tradier Brokerage currently only supports one outstanding order per symbol. Canceled old order: '' + qcOrder.Id)\r\n                        )", span="838-840", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_413 [label="_contingentOrdersByQCOrderID.TryRemove(qcOrder.Id, out contingent)", span="844-844", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_414 [label="CancelOrder(qcOrder)", span="848-848", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_407 [label="TradierCachedOpenOrder tradierOrder", span="830-830", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_408 [label="Log.Error(''TradierBrokerage.PlaceOrder(): Unable to locate existing QC Order when verifying single outstanding order per symbol.'')", span="831-831", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_412 [label="ContingentOrderQueue contingent", span="843-843", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_419 [label="var firstOrderQuantity = -holdingQuantity", span="861-861", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_421 [label="orderRequest.Quantity = Math.Abs(firstOrderQuantity)", span="864-864", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_425 [label="var response = TradierPlaceOrder(orderRequest)", span="875-875", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_434 [label="var response = TradierPlaceOrder(orderRequest)", span="891-891", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_418 [label=crossesZero, span="858-858", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_423 [label="restOfOrder.ConvertStopOrderTypes()", span="870-870", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_426 [label="bool success = response.Errors.Errors.IsNullOrEmpty()", span="876-876", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_431 [label="var closingOrderID = response.Order.Id", span="885-885", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_427 [label="!success", span="877-877", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_428 [label="ContingentOrderQueue contingent", span="880-880", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_430 [label="return false;", span="882-882", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_433 [label="return true;", span="887-887", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_435 [label="!response.Errors.Errors.IsNullOrEmpty()", span="892-892", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_436 [label="return false;", span="894-894", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_438 [label="return true;", span="897-897", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_439 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="812-812", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_19 [label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0", cluster="System.TimeSpan.FromMilliseconds(double)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_227 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", span="506-506", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_228 [label="var request = new RestRequest(''accounts/{accountId}/orders/'' + orderId)", span="508-508", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_229 [label="request.AddUrlSegment(''accountId'', _accountID.ToString())", span="509-509", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_230 [label="var detailsParent = Execute<TradierOrderDetailedContainer>(request, TradierApiRequestType.Standard)", span="510-510", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_231 [label="detailsParent == null || detailsParent.DetailedOrder == null", span="511-511", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_234 [label="return detailsParent.DetailedOrder;", span="516-516", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_232 [label="Log.Error(''Tradier.GetOrder(): Null response.'')", span="513-513", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_233 [label="return new TradierOrderDetailed();", span="514-514", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_235 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", span="506-506", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrder(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_174 [label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98", cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_703 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.IsUnknownOrderID(System.Collections.Generic.KeyValuePair<long, QuantConnect.Brokerages.Tradier.TradierOrder>)", span="1312-1312", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsUnknownOrderID(System.Collections.Generic.KeyValuePair<long, QuantConnect.Brokerages.Tradier.TradierOrder>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_704 [label="return !_cachedOpenOrdersByTradierOrderID.ContainsKey(x.Key)\r\n                // the transaction happened after we initialized, make sure they're in the same time zone\r\n                && x.Value.TransactionDate.ToUniversalTime() > _initializationDateTime.ToUniversalTime()\r\n                // we don't have a record of it in our last 10k filled orders\r\n                && !_filledTradierOrderIDs.Contains(x.Key);", span="1315-1319", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsUnknownOrderID(System.Collections.Generic.KeyValuePair<long, QuantConnect.Brokerages.Tradier.TradierOrder>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_705 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.IsUnknownOrderID(System.Collections.Generic.KeyValuePair<long, QuantConnect.Brokerages.Tradier.TradierOrder>)", span="1312-1312", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsUnknownOrderID(System.Collections.Generic.KeyValuePair<long, QuantConnect.Brokerages.Tradier.TradierOrder>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_170 [label="Entry Unk.AddParameter", span="", cluster="Unk.AddParameter", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_446 [label="Entry QuantConnect.Securities.ISecurityProvider.GetHoldingsQuantity(QuantConnect.Symbol)", span="41-41", cluster="QuantConnect.Securities.ISecurityProvider.GetHoldingsQuantity(QuantConnect.Symbol)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_449 [label="Entry System.Math.Abs(decimal)", span="0-0", cluster="System.Math.Abs(decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_367 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_116 [label="Entry Unk.AddDefaultHeader", span="", cluster="Unk.AddDefaultHeader", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_505 [label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="113-113", cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_526 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", span="1033-1033", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_527 [label="_disconnect = false", span="1035-1035", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_528 [label=IsConnected, span="1036-1036", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_529 [label="return;", span="1036-1036", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_530 [label="RefreshSession()", span="1037-1037", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_531 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", span="1033-1033", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Connect()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_123 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="1052-1052", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_535 [label="var message = e", span="1054-1054", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_536 [label="Exchange.DateTimeIsOpen(DateTime.Now) && ErrorsDuringMarketHours.Contains(e.Code)", span="1055-1055", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_537 [label="message = new BrokerageMessageEvent(BrokerageMessageType.Error, e.Code, e.Message)", span="1058-1058", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_538 [label="base.OnMessage(message)", span="1060-1060", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_539 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="1052-1052", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_196 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_440 [label="Entry QuantConnect.Util.FixedSizeHashQueue<T>.Contains(T)", span="86-86", cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Contains(T)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_499 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1528-1528", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_811 [label=type, span="1530-1530", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_820 [label="throw new ArgumentOutOfRangeException(''type'', type, null);", span="1545-1545", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_812 [label="OrderType.Market", span="1532-1532", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_814 [label="OrderType.Limit", span="1535-1535", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_816 [label="OrderType.StopMarket", span="1538-1538", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_818 [label="OrderType.StopLimit", span="1541-1541", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_813 [label="return TradierOrderType.Market;", span="1533-1533", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_815 [label="return TradierOrderType.Limit;", span="1536-1536", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_817 [label="return TradierOrderType.StopMarket;", span="1539-1539", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_819 [label="return TradierOrderType.StopLimit;", span="1542-1542", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_821 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", span="1528-1528", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.OrderType)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_803 [label="Entry QuantConnect.Orders.LimitOrder.LimitOrder()", span="42-42", cluster="QuantConnect.Orders.LimitOrder.LimitOrder()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_738 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", span="1850-1850", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_951 [label="Contingents.Count == 0", span="1852-1852", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_952 [label="return null;", span="1854-1854", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_953 [label="return Contingents.Dequeue();", span="1856-1856", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_954 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", span="1850-1850", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.Next()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_739 [label="Entry lambda expression", span="1375-1407", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_46 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_47 [label="RefreshSession()", span="180-180", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_48 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_50 [label="Entry lambda expression", span="185-185", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_51 [label="CheckForFills()", span="185-185", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_52 [label="Exit lambda expression", span="185-185", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_131 [label="Entry lambda expression", span="196-196", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_134 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_132 [label="x.Name + '': '' + x.Value", span="196-196", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_133 [label="Exit lambda expression", span="196-196", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_135 [label="x.Name == ''orderId''", span="264-264", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_136 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_385 [label="Entry lambda expression", span="781-781", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_388 [label="Entry lambda expression", span="782-782", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_391 [label="Entry lambda expression", span="783-783", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_386 [label="x.Quantity != 0", span="781-781", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_387 [label="Exit lambda expression", span="781-781", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_389 [label="x.Symbol.Value", span="782-782", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_390 [label="Exit lambda expression", span="782-782", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_392 [label="x.Symbol", span="783-783", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_393 [label="Exit lambda expression", span="783-783", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_456 [label="x.Value.Order.Symbol == order.Symbol.Value", span="823-823", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_455 [label="Entry lambda expression", span="823-823", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_457 [label="Exit lambda expression", span="823-823", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_573 [label="var recentOrder = orders.OrderByDescending(x => x.TransactionDate).FirstOrDefault(x => x.Symbol == order.Symbol && x.Quantity == order.Quantity && x.Direction == order.Direction && x.Type == order.Type)", span="1152-1152", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_592 [label="x.Symbol == order.Symbol && x.Quantity == order.Quantity && x.Direction == order.Direction && x.Type == order.Type", span="1152-1152", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_575 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''OrderError'', ''Unable to resolve rejected Tradier order id for QC order: '' + order.QCOrder.Id))", span="1156-1156", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_577 [label="order.QCOrder.BrokerId.Add(recentOrder.Id.ToString())", span="1160-1160", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_571 [label="Entry lambda expression", span="1146-1162", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_572 [label="var orders = GetIntradayAndPendingOrders()\r\n                            .Where(x => x.Status == TradierOrderStatus.Rejected)\r\n                            .Where(x => DateTime.UtcNow - x.TransactionDate < TimeSpan.FromSeconds(2))", span="1148-1150", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_582 [label="Entry lambda expression", span="1149-1149", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_585 [label="Entry lambda expression", span="1150-1150", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_574 [label="recentOrder == null", span="1153-1153", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_588 [label="Entry lambda expression", span="1152-1152", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_591 [label="Entry lambda expression", span="1152-1152", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_578 [label="Log.Trace(''TradierBrokerage.TradierPlaceOrder(): Successfully resolved missing order ID: '' + recentOrder.Id)", span="1161-1161", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_576 [label="return;", span="1157-1157", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_579 [label="Exit lambda expression", span="1146-1162", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_583 [label="x.Status == TradierOrderStatus.Rejected", span="1149-1149", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_584 [label="Exit lambda expression", span="1149-1149", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_586 [label="DateTime.UtcNow - x.TransactionDate < TimeSpan.FromSeconds(2)", span="1150-1150", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_587 [label="Exit lambda expression", span="1150-1150", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_589 [label="x.TransactionDate", span="1152-1152", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_590 [label="Exit lambda expression", span="1152-1152", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_593 [label="Exit lambda expression", span="1152-1152", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_631 [label="Entry lambda expression", span="1189-1189", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_634 [label="Entry lambda expression", span="1215-1240", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_635 [label="var updatedOrderLocal = GetOrder(cachedOrderLocal.Key)", span="1219-1219", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_648 [label="Entry lambda expression", span="1244-1244", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_651 [label="Entry lambda expression", span="1255-1298", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_632 [label="x.Id", span="1189-1189", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_633 [label="Exit lambda expression", span="1189-1189", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_636 [label="updatedOrderLocal == null", span="1220-1220", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_637 [label="Log.Error(string.Format(''TradierBrokerage.CheckForFills(): Unable to locate order {0} in cached open orders.'', cachedOrderLocal.Key))", span="1222-1222", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_639 [label="UpdateCachedOpenOrder(cachedOrderLocal.Key, updatedOrderLocal)", span="1226-1226", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_640 [label="ProcessPotentiallyUpdatedOrder(cachedOrderLocal.Value, updatedOrderLocal)", span="1227-1227", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_638 [label="throw new Exception(''TradierBrokerage.CheckForFills(): GetOrder() return null response'');", span="1223-1223", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_641 [label=Exception, span="1229-1229", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_644 [label="Exit lambda expression", span="1215-1240", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_642 [label="Log.Error(err)", span="1231-1231", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_643 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''PendingOrderNotReturned'',\r\n                                ''An error ocurred while trying to resolve fill events from Tradier orders: '' + err))", span="1232-1233", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_649 [label="x.Key", span="1244-1244", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_650 [label="Exit lambda expression", span="1244-1244", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_652 [label="var localUnknownTradierOrderIDs = _unknownTradierOrderIDs.ToHashSet()", span="1257-1257", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_653 [label="_unknownTradierOrderIDs.Clear()", span="1258-1258", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_654 [label="Log.Trace(''TradierBrokerage.CheckForFills(): Verifying missing brokerage IDs: '' + string.Join('','', localUnknownTradierOrderIDs))", span="1262-1262", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_655 [label="var orders = localUnknownTradierOrderIDs.Select(x => _orderProvider.GetOrderByBrokerageId(x)).Where(x => x != null)", span="1263-1263", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_656 [label="var stillUnknownOrderIDs = localUnknownTradierOrderIDs.Where(x => !orders.Any(y => y.BrokerId.Contains(x.ToString()))).ToList()", span="1264-1264", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_665 [label=localUnknownTradierOrderIDs, span="1283-1283", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_669 [label=localUnknownTradierOrderIDs, span="1293-1293", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_676 [label="Entry lambda expression", span="1263-1263", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_680 [label="Entry lambda expression", span="1263-1263", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_684 [label="!orders.Any(y => y.BrokerId.Contains(x.ToString()))", span="1264-1264", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_657 [label="stillUnknownOrderIDs.Count > 0", span="1265-1265", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_683 [label="Entry lambda expression", span="1264-1264", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_659 [label="stillUnknownOrderIDs.RemoveAll(x => recentOrders.Contains(x))", span="1272-1272", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_660 [label="stillUnknownOrderIDs.Count > 0", span="1274-1274", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_661 [label="var ids = string.Join('', '', stillUnknownOrderIDs)", span="1277-1277", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_658 [label="var recentOrders = GetIntradayAndPendingOrders().Where(x => x.Status == TradierOrderStatus.Rejected)\r\n                                    .Where(x => DateTime.UtcNow - x.TransactionDate < TimeSpan.FromMinutes(1)).ToHashSet(x => x.Id)", span="1268-1269", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_691 [label="Entry lambda expression", span="1268-1268", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_694 [label="Entry lambda expression", span="1269-1269", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_697 [label="Entry lambda expression", span="1269-1269", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_701 [label="recentOrders.Contains(x)", span="1272-1272", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_700 [label="Entry lambda expression", span="1272-1272", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_662 [label="Log.Error(''TradierBrokerage.CheckForFills(): Unable to verify all missing brokerage IDs: '' + ids)", span="1278-1278", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_663 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''UnknownOrderId'', ''Received unknown Tradier order id(s): '' + ids))", span="1279-1279", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_664 [label="return;", span="1280-1280", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_666 [label="_verifiedUnknownTradierOrderIDs.Add(unknownTradierOrderID)", span="1286-1286", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_667 [label="Log.Trace(''TradierBrokerage.CheckForFills(): Verified all missing brokerage IDs.'')", span="1288-1288", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_668 [label=Exception, span="1290-1290", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_673 [label="Exit lambda expression", span="1255-1298", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_670 [label="_unknownTradierOrderIDs.Add(id)", span="1293-1293", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_671 [label="Log.Error(err)", span="1295-1295", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_672 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''UnknownIdResolution'', ''An error ocurred while trying to resolve unknown Tradier order IDs: '' + err))", span="1296-1296", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_677 [label="_orderProvider.GetOrderByBrokerageId(x)", span="1263-1263", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_678 [label="Exit lambda expression", span="1263-1263", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_681 [label="x != null", span="1263-1263", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_682 [label="Exit lambda expression", span="1263-1263", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_688 [label="y.BrokerId.Contains(x.ToString())", span="1264-1264", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_685 [label="Exit lambda expression", span="1264-1264", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_687 [label="Entry lambda expression", span="1264-1264", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_689 [label="Exit lambda expression", span="1264-1264", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_692 [label="x.Status == TradierOrderStatus.Rejected", span="1268-1268", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_693 [label="Exit lambda expression", span="1268-1268", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_695 [label="DateTime.UtcNow - x.TransactionDate < TimeSpan.FromMinutes(1)", span="1269-1269", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_696 [label="Exit lambda expression", span="1269-1269", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_698 [label="x.Id", span="1269-1269", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_699 [label="Exit lambda expression", span="1269-1269", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_702 [label="Exit lambda expression", span="1272-1272", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_745 [label="var message = string.Format(''{0} Failed submitting contingent order for QC id: {1} Filled Tradier Order id: {2}'', qcOrder.Symbol, qcOrder.Id, updatedOrder.Id)", span="1392-1392", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_740 [label="Log.Trace(''TradierBrokerage.SubmitContingentOrder(): Submitting contingent order for QC id: '' + qcOrder.Id)", span="1379-1379", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_743 [label="qcOrder.BrokerId.Add(response.Order.Id.ToString())", span="1385-1385", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_747 [label="OnOrderEvent(new OrderEvent(qcOrder, DateTime.UtcNow, orderFee) { Status = OrderStatus.Canceled })", span="1394-1394", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_751 [label="OnOrderEvent(new OrderEvent(qcOrder, DateTime.UtcNow, orderFee) { Status = OrderStatus.Canceled })", span="1401-1401", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_741 [label="var response = TradierPlaceOrder(order)", span="1381-1381", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_742 [label="response.Errors.Errors.IsNullOrEmpty()", span="1382-1382", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_744 [label="Log.Error(''TradierBrokerage.SubmitContingentOrder(): Failed to submit contingent order.'')", span="1391-1391", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_746 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ContingentOrderFailed'', message))", span="1393-1393", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_748 [label=Exception, span="1397-1397", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_749 [label="Log.Error(err)", span="1399-1399", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_750 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ContingentOrderError'', ''An error ocurred while trying to submit an Tradier contingent order: '' + err))", span="1400-1400", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_752 [label="Exit lambda expression", span="1375-1407", cluster="lambda expression", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_779 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, object, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_289 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", span="620-620", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_290 [label="var request = new RestRequest(''markets/timesales'', Method.GET)", span="623-623", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_291 [label="request.AddParameter(''symbol'', symbol, ParameterType.QueryString)", span="624-624", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_292 [label="request.AddParameter(''interval'', GetEnumDescription(interval), ParameterType.QueryString)", span="625-625", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_293 [label="request.AddParameter(''start'', start.ToString(''yyyy-MM-dd HH:mm''), ParameterType.QueryString)", span="626-626", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_294 [label="request.AddParameter(''end'', end.ToString(''yyyy-MM-dd HH:mm''), ParameterType.QueryString)", span="627-627", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_295 [label="var dataContainer = Execute<TradierTimeSeriesContainer>(request, TradierApiRequestType.Data, ''series'')", span="628-628", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_296 [label="return dataContainer.TimeSeries;", span="629-629", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_297 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", span="620-620", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetTimeSeries(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_344 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", span="716-716", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_345 [label="var obj = default(T)", span="718-718", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_346 [label="dynamic dynDeserialized = JsonConvert.DeserializeObject(json)", span="723-723", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_347 [label="obj = JsonConvert.DeserializeObject<T>(dynDeserialized[rootName].ToString())", span="724-724", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_349 [label="Log.Error(err, ''RootName: '' + rootName)", span="728-728", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_348 [label=Exception, span="726-726", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_350 [label="return obj;", span="731-731", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_351 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", span="716-716", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.DeserializeRemoveRoot<T>(string, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_128 [label="Entry BrokerageMessageEvent.cstr", span="", cluster="BrokerageMessageEvent.cstr", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_804 [label="Entry QuantConnect.Orders.MarketOrder.MarketOrder()", span="29-29", cluster="QuantConnect.Orders.MarketOrder.MarketOrder()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_541 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_581 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_207 [label="Entry Unk.AddUrlSegment", span="", cluster="Unk.AddUrlSegment", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_173 [label="Entry Unk.BuildUri", span="", cluster="Unk.BuildUri", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_623 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", span="1322-1322", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_708 [label="updatedOrder.RemainingQuantity != cachedOrder.Order.RemainingQuantity\r\n             || ConvertStatus(updatedOrder.Status) != ConvertStatus(cachedOrder.Order.Status)", span="1325-1326", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_709 [label="var qcOrder = _orderProvider.GetOrderByBrokerageId(updatedOrder.Id)", span="1328-1328", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_712 [label="var fill = new OrderEvent(qcOrder, DateTime.UtcNow, orderFee, ''Tradier Fill Event'')\r\n                {\r\n                    Status = ConvertStatus(updatedOrder.Status),\r\n                    // this is guaranteed to be wrong in the event we have multiple fills within our polling interval,\r\n                    // we're able to partially cope with the fill quantity by diffing the previous info vs current info\r\n                    // but the fill price will always be the most recent fill, so if we have two fills with 1/10 of a second\r\n                    // we'll get the latter fill price, so for large orders this can lead to inconsistent state\r\n                    FillPrice = updatedOrder.LastFillPrice,\r\n                    FillQuantity = (int)(updatedOrder.QuantityExecuted - cachedOrder.Order.QuantityExecuted)\r\n                }", span="1331-1340", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_713 [label="IsShort(updatedOrder.Direction)", span="1343-1343", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_715 [label="!cachedOrder.EmittedOrderFee", span="1348-1348", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_716 [label="cachedOrder.EmittedOrderFee = true", span="1350-1350", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_727 [label="Task.Run(() =>\r\n                            {\r\n                                try\r\n                                {\r\n                                    Log.Trace(''TradierBrokerage.SubmitContingentOrder(): Submitting contingent order for QC id: '' + qcOrder.Id);\r\n\r\n                                    var response = TradierPlaceOrder(order);\r\n                                    if (response.Errors.Errors.IsNullOrEmpty())\r\n                                    {\r\n                                        // add the new brokerage id for retrieval later\r\n                                        qcOrder.BrokerId.Add(response.Order.Id.ToString());\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        // if we failed to place this order I don't know what to do, we've filled the first part\r\n                                        // and failed to place the second... strange. Should we invalidate the rest of the order??\r\n                                        Log.Error(''TradierBrokerage.SubmitContingentOrder(): Failed to submit contingent order.'');\r\n                                        var message = string.Format(''{0} Failed submitting contingent order for QC id: {1} Filled Tradier Order id: {2}'', qcOrder.Symbol, qcOrder.Id, updatedOrder.Id);\r\n                                        OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ContingentOrderFailed'', message));\r\n                                        OnOrderEvent(new OrderEvent(qcOrder, DateTime.UtcNow, orderFee) { Status = OrderStatus.Canceled });\r\n                                    }\r\n                                }\r\n                                catch (Exception err)\r\n                                {\r\n                                    Log.Error(err);\r\n                                    OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''ContingentOrderError'', ''An error ocurred while trying to submit an Tradier contingent order: '' + err));\r\n                                    OnOrderEvent(new OrderEvent(qcOrder, DateTime.UtcNow, orderFee) { Status = OrderStatus.Canceled });\r\n                                }\r\n                                finally\r\n                                {\r\n                                    _contingentReentranceGuardByQCOrderID.Remove(qcOrder.Id);\r\n                                }\r\n                            })", span="1375-1407", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_729 [label="OrderIsClosed(updatedOrder)", span="1416-1416", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_730 [label="_filledTradierOrderIDs.Add(updatedOrder.Id)", span="1418-1418", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_731 [label="_cachedOpenOrdersByTradierOrderID.TryRemove(updatedOrder.Id, out cachedOrder)", span="1419-1419", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_710 [label="qcOrder.PriceCurrency = ''USD''", span="1329-1329", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_717 [label="var security = _securityProvider.GetSecurity(qcOrder.Symbol)", span="1351-1351", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_718 [label="fill.OrderFee = security.FeeModel.GetOrderFee(security, qcOrder)", span="1352-1352", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_720 [label="fill.Status == OrderStatus.Filled && _contingentOrdersByQCOrderID.TryGetValue(qcOrder.Id, out contingent)", span="1357-1357", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_721 [label="_contingentReentranceGuardByQCOrderID.Add(qcOrder.Id)", span="1360-1360", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_724 [label="_contingentOrdersByQCOrderID.TryRemove(qcOrder.Id, out contingent)", span="1366-1366", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_711 [label="int orderFee = 0", span="1330-1330", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_714 [label="fill.FillQuantity *= -1", span="1345-1345", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_726 [label="fill.Status = OrderStatus.PartiallyFilled", span="1373-1373", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_728 [label="OnOrderEvent(fill)", span="1412-1412", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_719 [label="ContingentOrderQueue contingent", span="1356-1356", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_722 [label="var order = contingent.Next()", span="1362-1362", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_723 [label="order == null || contingent.Contingents.Count == 0", span="1363-1363", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_725 [label="order != null", span="1369-1369", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_732 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", span="1322-1322", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ProcessPotentiallyUpdatedOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder, QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_341 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_626 [label="Entry System.Threading.Tasks.Task.Run(System.Action)", span="0-0", cluster="System.Threading.Tasks.Task.Run(System.Action)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_675 [label="Entry Unk.RemoveAll", span="", cluster="Unk.RemoveAll", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_450 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", span="1897-1897", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_968 [label="Type == TradierOrderType.StopMarket", span="1900-1900", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_969 [label="Type = TradierOrderType.Market", span="1902-1902", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_971 [label="Type == TradierOrderType.StopLimit", span="1905-1905", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_970 [label="Stop = 0m", span="1903-1903", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_972 [label="Type = TradierOrderType.Limit", span="1907-1907", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_973 [label="Stop = 0m", span="1908-1908", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_974 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", span="1897-1897", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest.ConvertStopOrderTypes()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_454 [label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105", cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_130 [label="Entry ApplicationException.cstr", span="", cluster="ApplicationException.cstr", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_753 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_397 [label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="80-80", cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_44 [label="Entry QuantConnect.Configuration.Config.GetDouble(string, double)", span="163-163", cluster="QuantConnect.Configuration.Config.GetDouble(string, double)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_627 [label="Entry Unk.ToHashSet", span="", cluster="Unk.ToHashSet", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_195 [label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106", cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_18 [label="Entry System.DateTime.DateTime()", span="0-0", cluster="System.DateTime.DateTime()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_113 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_383 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_760 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1443-1443", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_761 [label="return order.Status != TradierOrderStatus.Filled\r\n                && order.Status != TradierOrderStatus.Canceled\r\n                && order.Status != TradierOrderStatus.Expired\r\n                && order.Status != TradierOrderStatus.Rejected;", span="1445-1448", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_762 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1443-1443", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.OrderIsOpen(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_458 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="906-906", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_459 [label="Log.Trace(''TradierBrokerage.UpdateOrder(): '' + order)", span="908-908", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_460 [label="!order.BrokerId.Any()", span="910-910", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_463 [label="var activeOrder = (\r\n                from brokerId in order.BrokerId\r\n                let id = long.Parse(brokerId)\r\n                where _cachedOpenOrdersByTradierOrderID.ContainsKey(id)\r\n                select _cachedOpenOrdersByTradierOrderID[id]\r\n                ).SingleOrDefault()", span="918-923", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_465 [label="Log.Trace(''Unable to locate active Tradier order for QC order id: '' + order.Id + '' with Tradier ids: '' + string.Join('', '', order.BrokerId))", span="927-927", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_469 [label="_contingentOrdersByQCOrderID.TryGetValue(order.Id, out contingent)", span="935-935", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_471 [label="quantity != order.AbsoluteQuantity", span="940-940", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_475 [label="var orderType = ConvertOrderType(order.Type)", span="949-949", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_476 [label="var orderDuration = GetOrderDuration(order.TimeInForce)", span="950-950", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_477 [label="var limitPrice = GetLimitPrice(order)", span="951-951", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_478 [label="var stopPrice = GetStopPrice(order)", span="952-952", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_484 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0) {Status = OrderStatus.Submitted})", span="968-968", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_461 [label="Log.Trace(''TradierBrokerage.UpdateOrder(): Unable to update order without BrokerId.'')", span="913-913", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_462 [label="return false;", span="914-914", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_464 [label="activeOrder == null", span="925-925", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_467 [label="decimal quantity = activeOrder.Order.Quantity", span="931-931", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_479 [label="var response = ChangeOrder(_accountID, activeOrder.Order.Id,\r\n                orderType,\r\n                orderDuration,\r\n                limitPrice,\r\n                stopPrice\r\n                )", span="953-958", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_482 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''UpdateFailed'', ''Failed to update Tradier order id: '' + activeOrder.Order.Id + ''. '' + errors))", span="963-963", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_466 [label="return false;", span="928-928", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_468 [label="ContingentOrderQueue contingent", span="934-934", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_470 [label="quantity = contingent.QCOrder.AbsoluteQuantity", span="937-937", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_485 [label="contingent != null", span="971-971", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_486 [label="contingent.Contingents", span="973-973", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_472 [label="Log.Trace(''TradierBrokerage.UpdateOrder(): Unable to update order quantity.'')", span="942-942", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_473 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''UpdateRejected'', ''Unable to modify Tradier order quantities.''))", span="943-943", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_474 [label="return false;", span="944-944", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_487 [label="orderRequest.Type = orderType", span="975-975", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_488 [label="orderRequest.Duration = orderDuration", span="976-976", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_489 [label="orderRequest.Price = limitPrice", span="977-977", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_490 [label="orderRequest.Stop = stopPrice", span="978-978", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_480 [label="!response.Errors.Errors.IsNullOrEmpty()", span="960-960", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_481 [label="string errors = string.Join('', '', response.Errors.Errors)", span="962-962", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_483 [label="return false;", span="964-964", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_492 [label="return true;", span="983-983", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_491 [label="orderRequest.ConvertStopOrderTypes()", span="979-979", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_493 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="906-906", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_847 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", span="1600-1600", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_848 [label=status, span="1602-1602", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_863 [label="throw new ArgumentOutOfRangeException(''status'', status, null);", span="1626-1626", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_849 [label="OrderStatus.New", span="1604-1604", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_851 [label="OrderStatus.Submitted", span="1607-1607", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_853 [label="OrderStatus.PartiallyFilled", span="1610-1610", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_855 [label="OrderStatus.Filled", span="1613-1613", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_857 [label="OrderStatus.Canceled", span="1616-1616", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_859 [label="OrderStatus.None", span="1619-1619", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_861 [label="OrderStatus.Invalid", span="1622-1622", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_850 [label="return TradierOrderStatus.Pending;", span="1605-1605", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_852 [label="return TradierOrderStatus.Submitted;", span="1608-1608", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_854 [label="return TradierOrderStatus.PartiallyFilled;", span="1611-1611", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_856 [label="return TradierOrderStatus.Filled;", span="1614-1614", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_858 [label="return TradierOrderStatus.Canceled;", span="1617-1617", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_860 [label="return TradierOrderStatus.Pending;", span="1620-1620", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_862 [label="return TradierOrderStatus.Rejected;", span="1623-1623", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_864 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", span="1600-1600", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Orders.OrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_445 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="991-991", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_506 [label="Log.Trace(''TradierBrokerage.CancelOrder(): '' + order)", span="993-993", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_507 [label="!order.BrokerId.Any()", span="995-995", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_511 [label="_contingentOrdersByQCOrderID.TryRemove(order.Id, out contingent)", span="1003-1003", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_512 [label="_cancelledQcOrderIDs.Add(order.Id)", span="1007-1007", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_513 [label="order.BrokerId", span="1009-1009", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_522 [label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, orderFee, ''Tradier Fill Event'') { Status = OrderStatus.Canceled })", span="1023-1023", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_508 [label="Log.Trace(''TradierBrokerage.CancelOrder(): Unable to cancel order without BrokerId.'')", span="997-997", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_510 [label="ContingentOrderQueue contingent", span="1002-1002", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_509 [label="return false;", span="998-998", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_514 [label="var id = long.Parse(orderID)", span="1011-1011", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_523 [label="return true;", span="1027-1027", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_515 [label="var response = CancelOrder(_accountID, id)", span="1012-1012", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_520 [label="_cachedOpenOrdersByTradierOrderID.TryRemove(id, out tradierOrder)", span="1021-1021", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_516 [label="response == null", span="1013-1013", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_518 [label="response.Errors.Errors.IsNullOrEmpty() && response.Order.Status == ''ok''", span="1018-1018", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_517 [label="return false;", span="1016-1016", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_519 [label="TradierCachedOpenOrder tradierOrder", span="1020-1020", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_521 [label="int orderFee = 0", span="1022-1022", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_524 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="991-991", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_759 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder.TradierCachedOpenOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1865-1865", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder.TradierCachedOpenOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_956 [label="Order = order", span="1867-1867", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder.TradierCachedOpenOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_957 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder.TradierCachedOpenOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1865-1865", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder.TradierCachedOpenOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_120 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_114 [label="Entry Unk.Trace", span="", cluster="Unk.Trace", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_733 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", span="1568-1568", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_830 [label=status, span="1570-1570", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_831 [label="TradierOrderStatus.Filled", span="1572-1572", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_833 [label="TradierOrderStatus.Canceled", span="1575-1575", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_835 [label="TradierOrderStatus.Open", span="1578-1578", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_838 [label="TradierOrderStatus.Expired", span="1582-1582", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_841 [label="TradierOrderStatus.Pending", span="1586-1586", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_843 [label="TradierOrderStatus.PartiallyFilled", span="1589-1589", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_845 [label="throw new ArgumentOutOfRangeException();", span="1593-1593", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_832 [label="return OrderStatus.Filled;", span="1573-1573", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_834 [label="return OrderStatus.Canceled;", span="1576-1576", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_836 [label="TradierOrderStatus.Submitted", span="1579-1579", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_837 [label="return OrderStatus.Submitted;", span="1580-1580", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_839 [label="TradierOrderStatus.Rejected", span="1583-1583", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_840 [label="return OrderStatus.Invalid;", span="1584-1584", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_842 [label="return OrderStatus.New;", span="1587-1587", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_844 [label="return OrderStatus.PartiallyFilled;", span="1590-1590", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_846 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", span="1568-1568", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertStatus(QuantConnect.Brokerages.Tradier.TradierOrderStatus)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_312 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", span="661-661", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_313 [label="var request = new RestRequest(''markets/calendar'', Method.GET)", span="663-663", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_314 [label="request.AddParameter(''month'', month.ToString())", span="664-664", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_315 [label="request.AddParameter(''year'', year.ToString())", span="665-665", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_316 [label="var calendarContainer = Execute<TradierCalendarStatus>(request, TradierApiRequestType.Data, ''calendar'')", span="666-666", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_317 [label="return calendarContainer.Days.Days;", span="667-667", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_318 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", span="661-661", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketCalendar(int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_171 [label="Entry Unk.FromSeconds", span="", cluster="Unk.FromSeconds", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_807 [label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0", cluster="System.NotImplementedException.NotImplementedException(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_384 [label="Entry Unk.TryGetValue", span="", cluster="Unk.TryGetValue", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_441 [label="Entry Unk.GetOrderByBrokerageId", span="", cluster="Unk.GetOrderByBrokerageId", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_690 [label="Entry QuantConnect.Symbol.ToString()", span="375-375", cluster="QuantConnect.Symbol.ToString()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_129 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_43 [label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", span="0-0", cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, System.TimeSpan, System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_502 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", span="1788-1788", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_931 [label="var stopm = order as StopMarketOrder", span="1790-1790", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_934 [label="var stopl = order as StopLimitOrder", span="1795-1795", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_932 [label="stopm != null", span="1791-1791", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_933 [label="return stopm.StopPrice;", span="1793-1793", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_935 [label="stopl != null", span="1796-1796", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_936 [label="return stopl.StopPrice;", span="1798-1798", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_937 [label="return 0;", span="1800-1800", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_938 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", span="1788-1788", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetStopPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_646 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_955 [label="Entry System.Collections.Generic.Queue<T>.Dequeue()", span="0-0", cluster="System.Collections.Generic.Queue<T>.Dequeue()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_172 [label="Entry Unk.OnSessionRefreshed", span="", cluster="Unk.OnSessionRefreshed", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_343 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_444 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_371 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", span="779-779", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_372 [label="var holdings = GetPositions().Select(ConvertHolding).Where(x => x.Quantity != 0).ToList()", span="781-781", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_373 [label="var symbols = holdings.Select(x => x.Symbol.Value).ToList()", span="782-782", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_375 [label=holdings, span="784-784", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_379 [label="return holdings;", span="792-792", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_374 [label="var quotes = GetQuotes(symbols).ToDictionary(x => x.Symbol)", span="783-783", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_377 [label="quotes.TryGetValue(holding.Symbol.Value, out quote)", span="787-787", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_376 [label="TradierQuote quote", span="786-786", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_378 [label="holding.MarketPrice = quote.Last", span="789-789", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_380 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", span="779-779", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountHoldings()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_13 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ConcurrentDictionary()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_271 [label="Entry decimal.ToString(System.IFormatProvider)", span="0-0", cluster="decimal.ToString(System.IFormatProvider)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_451 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", span="1841-1841", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_947 [label="QCOrder = qcOrder", span="1843-1843", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_948 [label="Contingents = new Queue<TradierPlaceOrderRequest>(contingents)", span="1844-1844", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_949 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", span="1841-1841", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue.ContingentOrderQueue(QuantConnect.Orders.Order, params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[])", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_299 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", span="635-635", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_300 [label="var request = new RestRequest(''markets/history'', Method.GET)", span="640-640", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_301 [label="request.AddParameter(''symbol'', symbol, ParameterType.QueryString)", span="641-641", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_302 [label="request.AddParameter(''start'', start.ToString(''yyyy-MM-dd''), ParameterType.QueryString)", span="642-642", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_303 [label="request.AddParameter(''end'', end.ToString(''yyyy-MM-dd''), ParameterType.QueryString)", span="643-643", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_304 [label="request.AddParameter(''interval'', GetEnumDescription(interval))", span="644-644", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_305 [label="var dataContainer = Execute<TradierHistoryDataContainer>(request, TradierApiRequestType.Data, ''history'')", span="645-645", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_306 [label="return dataContainer.Data;", span="646-646", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_307 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", span="635-635", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetHistoricalData(string, System.DateTime, System.DateTime, QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_40 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_125 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_542 [label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170", cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_622 [label="Entry System.Threading.Monitor.TryEnter(object)", span="0-0", cluster="System.Threading.Monitor.TryEnter(object)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_919 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", span="1768-1768", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_920 [label="order.Type", span="1770-1770", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_929 [label="throw new ArgumentOutOfRangeException(''type'', order.Type, order.Type + '' not supported'');", span="1781-1781", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_921 [label="OrderType.Market", span="1772-1772", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_923 [label="OrderType.Limit", span="1774-1774", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_925 [label="OrderType.StopMarket", span="1776-1776", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_927 [label="OrderType.StopLimit", span="1778-1778", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_922 [label="return TradierOrderType.Market;", span="1773-1773", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_924 [label="return TradierOrderType.Limit;", span="1775-1775", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_926 [label="return TradierOrderType.StopMarket;", span="1777-1777", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_928 [label="return TradierOrderType.StopLimit;", span="1779-1779", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_930 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", span="1768-1768", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrderType(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_257 [label="Entry System.Math.Round(decimal, int)", span="0-0", cluster="System.Math.Round(decimal, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_368 [label="Entry Unk.UpdateCachedOpenOrder", span="", cluster="Unk.UpdateCachedOpenOrder", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_49 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", span="325-325", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_137 [label="!Config.GetBool(''tradier-refresh-session'', true)", span="328-328", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_138 [label="return true;", span="329-329", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_139 [label="var raw = ''''", span="334-334", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_140 [label="bool success", span="335-335", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_141 [label=_lockAccessCredentials, span="336-336", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_142 [label="var client = new RestClient(''https://www.quantconnect.com/terminal/'')", span="341-341", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_143 [label="var request = new RestRequest(''processTradier'', Method.GET)", span="344-344", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_147 [label="var result = client.Execute(request)", span="350-350", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_158 [label="Log.Error(''Tradier.RefreshSession(): Error Refreshing Session: URL: '' + client.BuildUri(request) + '' Response: '' + result.Content)", span="368-368", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_144 [label="request.AddParameter(''uid'', UserId.ToString(), ParameterType.GetOrPost)", span="345-345", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_145 [label="request.AddParameter(''accessToken'', AccessToken, ParameterType.GetOrPost)", span="346-346", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_146 [label="request.AddParameter(''refreshToken'', RefreshToken, ParameterType.GetOrPost)", span="347-347", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_148 [label="raw = result.Content", span="351-351", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_149 [label="var newTokens = JsonConvert.DeserializeObject<TokenResponse>(result.Content)", span="354-354", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_155 [label="Log.Trace(''SESSION REFRESHED: Access: '' + AccessToken + '' Refresh: '' + RefreshToken + '' Issued At: '' + _lifeSpan + '' JSON>>''\r\n                            + result.Content)", span="361-362", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_161 [label="Log.Error(err, ''Raw: '' + raw)", span="374-374", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_164 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''RefreshSession'', ''Failed to refresh access token: '' + raw))", span="382-382", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_150 [label="newTokens != null && newTokens.Success", span="355-355", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_151 [label="AccessToken = newTokens.AccessToken", span="357-357", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_152 [label="RefreshToken = newTokens.RefreshToken", span="358-358", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_153 [label="_issuedAt = newTokens.IssuedAt", span="359-359", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_154 [label="_lifeSpan = TimeSpan.FromSeconds(newTokens.ExpiresIn)", span="360-360", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_156 [label="OnSessionRefreshed(newTokens)", span="363-363", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_157 [label="success = true", span="364-364", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_159 [label="success = false", span="369-369", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_160 [label=Exception, span="372-372", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_163 [label="!success", span="379-379", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_162 [label="success = false", span="375-375", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_165 [label="return success;", span="385-385", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_166 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", span="325-325", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.RefreshSession()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_525 [label="Entry QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", span="44-44", cluster="QuantConnect.Util.FixedSizeHashQueue<T>.Add(T)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_197 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", span="447-447", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_198 [label="var request = new RestRequest(''accounts/{accountId}/history'', Method.GET)", span="449-449", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_199 [label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="450-450", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_200 [label="var eventContainer = Execute<TradierEventContainer>(request, TradierApiRequestType.Standard)", span="452-452", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_201 [label="eventContainer.TradierEvents == null || eventContainer.TradierEvents.Events == null", span="454-454", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_204 [label="return eventContainer.TradierEvents.Events;", span="461-461", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_202 [label="Log.Trace(''Tradier.GetAccountEvents(): No events found'')", span="457-457", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_203 [label="return new List<TradierEvent>();", span="458-458", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_205 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", span="447-447", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetAccountEvents(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_358 [label="Entry System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", span="0-0", cluster="System.EventHandler<TEventArgs>.Invoke(object, TEventArgs)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_809 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1637-1637", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_865 [label="order.Direction", span="1639-1639", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_870 [label="return (int) order.Quantity;", span="1645-1645", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_875 [label="return -(int) order.Quantity;", span="1651-1651", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_866 [label="TradierOrderDirection.Buy", span="1641-1641", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_871 [label="TradierOrderDirection.SellShort", span="1647-1647", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_876 [label="TradierOrderDirection.None", span="1653-1653", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_878 [label="throw new ArgumentOutOfRangeException();", span="1657-1657", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_867 [label="TradierOrderDirection.BuyToCover", span="1642-1642", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_868 [label="TradierOrderDirection.BuyToClose", span="1643-1643", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_869 [label="TradierOrderDirection.BuyToOpen", span="1644-1644", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_872 [label="TradierOrderDirection.Sell", span="1648-1648", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_873 [label="TradierOrderDirection.SellToOpen", span="1649-1649", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_874 [label="TradierOrderDirection.SellToClose", span="1650-1650", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_877 [label="return 0;", span="1654-1654", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_879 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1637-1637", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertQuantity(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_308 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", span="652-652", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_309 [label="var request = new RestRequest(''markets/clock'', Method.GET)", span="654-654", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_310 [label="return Execute<TradierMarketStatus>(request, TradierApiRequestType.Data, ''clock'');", span="655-655", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_311 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", span="652-652", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetMarketStatus()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_15 [label="Entry System.Enum.GetValues(System.Type)", span="0-0", cluster="System.Enum.GetValues(System.Type)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_45 [label="Entry System.Threading.Timer.Timer(System.Threading.TimerCallback, object, int, int)", span="0-0", cluster="System.Threading.Timer.Timer(System.Threading.TimerCallback, object, int, int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_501 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", span="1808-1808", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_939 [label="var limit = order as LimitOrder", span="1810-1810", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_942 [label="var stopl = order as StopLimitOrder", span="1815-1815", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_940 [label="limit != null", span="1811-1811", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_941 [label="return limit.LimitPrice;", span="1813-1813", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_943 [label="stopl != null", span="1816-1816", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_944 [label="return stopl.LimitPrice;", span="1818-1818", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_945 [label="return 0;", span="1820-1820", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_946 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", span="1808-1808", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetLimitPrice(QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_352 [label="Entry Unk.DeserializeObject", span="", cluster="Unk.DeserializeObject", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_734 [label="Entry QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(long)", span="79-79", cluster="QuantConnect.Securities.IOrderProvider.GetOrderByBrokerageId(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_829 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_566 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_453 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", span="1063-1063", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_543 [label="TradierOrderClass classification = TradierOrderClass.Equity", span="1065-1065", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_545 [label="order.Price != 0 || order.Stop != 0", span="1068-1068", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_546 [label="stopLimit = string.Format('' at{0}{1}'',\r\n                    order.Stop == 0 ? '''' : '' stop '' + order.Stop,\r\n                    order.Price == 0 ? '''' : '' limit '' + order.Price\r\n                    )", span="1070-1073", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_547 [label="Log.Trace(string.Format(''TradierBrokerage.TradierPlaceOrder(): {0} to {1} {2} units of {3}{4}'',\r\n                order.Type, order.Direction, order.Quantity, order.Symbol, stopLimit)\r\n                )", span="1076-1078", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_548 [label="var response = PlaceOrder(_accountID,\r\n                order.Classification,\r\n                order.Direction,\r\n                order.Symbol,\r\n                order.Quantity,\r\n                order.Price,\r\n                order.Stop,\r\n                order.OptionSymbol,\r\n                order.Type,\r\n                order.Duration\r\n                )", span="1080-1090", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_551 [label="order.QCOrder.PriceCurrency = ''USD''", span="1097-1097", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_552 [label="OnOrderEvent(new OrderEvent(order.QCOrder, DateTime.UtcNow, orderFee) { Status = OrderStatus.Submitted })", span="1098-1098", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_553 [label="UpdateCachedOpenOrder(response.Order.Id, new TradierOrderDetailed\r\n                {\r\n                    Id = response.Order.Id,\r\n                    Quantity = order.Quantity,\r\n                    Status = TradierOrderStatus.Submitted,\r\n                    Symbol = order.Symbol,\r\n                    Type = order.Type,\r\n                    TransactionDate = DateTime.Now,\r\n                    AverageFillPrice = 0m,\r\n                    Class = classification,\r\n                    CreatedDate = DateTime.Now,\r\n                    Direction = order.Direction,\r\n                    Duration = order.Duration,\r\n                    LastFillPrice = 0m,\r\n                    LastFillQuantity = 0m,\r\n                    Legs = new List<TradierOrderLeg>(),\r\n                    NumberOfLegs = 0,\r\n                    Price = order.Price,\r\n                    QuantityExecuted = 0m,\r\n                    RemainingQuantity = order.Quantity,\r\n                    StopPrice = order.Stop\r\n                })", span="1101-1122", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_555 [label="OnOrderEvent(new OrderEvent(order.QCOrder, DateTime.UtcNow, orderFee) { Status = OrderStatus.Invalid })", span="1128-1128", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_558 [label="message = ''Order '' + order.QCOrder.Id + '': '' + string.Join(Environment.NewLine, response.Errors.Errors)", span="1133-1133", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_559 [label="string.IsNullOrEmpty(order.QCOrder.Tag)", span="1134-1134", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_560 [label="order.QCOrder.Tag = message", span="1136-1136", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_563 [label="Task.Run(() =>\r\n                    {\r\n                        var orders = GetIntradayAndPendingOrders()\r\n                            .Where(x => x.Status == TradierOrderStatus.Rejected)\r\n                            .Where(x => DateTime.UtcNow - x.TransactionDate < TimeSpan.FromSeconds(2));\r\n\r\n                        var recentOrder = orders.OrderByDescending(x => x.TransactionDate).FirstOrDefault(x => x.Symbol == order.Symbol && x.Quantity == order.Quantity && x.Direction == order.Direction && x.Type == order.Type);\r\n                        if (recentOrder == null)\r\n                        {\r\n                            // without this we're going to corrupt the algorithm state\r\n                            OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''OrderError'', ''Unable to resolve rejected Tradier order id for QC order: '' + order.QCOrder.Id));\r\n                            return;\r\n                        }\r\n\r\n                        order.QCOrder.BrokerId.Add(recentOrder.Id.ToString());\r\n                        Log.Trace(''TradierBrokerage.TradierPlaceOrder(): Successfully resolved missing order ID: '' + recentOrder.Id);\r\n                    })", span="1146-1162", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_544 [label="string stopLimit = string.Empty", span="1067-1067", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_549 [label="response != null && response.Errors.Errors.IsNullOrEmpty()", span="1093-1093", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_557 [label="response != null && response.Errors != null && !response.Errors.Errors.IsNullOrEmpty()", span="1131-1131", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_562 [label="response == null || response.Order == null || response.Order.Id == 0", span="1144-1144", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_564 [label="return response;", span="1166-1166", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_550 [label="int orderFee = 0", span="1096-1096", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_554 [label="int orderFee = 0", span="1127-1127", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_556 [label="string message = _previousResponseRaw", span="1130-1130", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_561 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''OrderError'', message))", span="1141-1141", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_565 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", span="1063-1063", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrder(QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_226 [label="Entry string.ToString()", span="0-0", cluster="string.ToString()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_16 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_504 [label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144", cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_736 [label="Entry QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", span="27-27", cluster="QuantConnect.Securities.ISecurityProvider.GetSecurity(QuantConnect.Symbol)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_0 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", span="124-124", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_1 [label="_orderProvider = orderProvider", span="127-127", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_2 [label="_securityProvider = securityProvider", span="128-128", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_3 [label="_accountID = accountID", span="129-129", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_4 [label="_cachedOpenOrdersByTradierOrderID = new ConcurrentDictionary<long, TradierCachedOpenOrder>()", span="131-131", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_5 [label="_rateLimitPeriod = new Dictionary<TradierApiRequestType, TimeSpan>()", span="134-134", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_6 [label="_rateLimitNextRequest = new Dictionary<TradierApiRequestType, DateTime>()", span="135-135", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_7 [label="Enum.GetValues(typeof(TradierApiRequestType))", span="138-138", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_8 [label="_rateLimitPeriod.Add(requestType, TimeSpan.FromSeconds(1))", span="141-141", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_10 [label="_rateLimitPeriod[TradierApiRequestType.Standard] = TimeSpan.FromMilliseconds(500)", span="146-146", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_9 [label="_rateLimitNextRequest.Add(requestType, new DateTime())", span="142-142", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_11 [label="_rateLimitPeriod[TradierApiRequestType.Data] = TimeSpan.FromMilliseconds(500)", span="147-147", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_12 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", span="124-124", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_237 [label="Entry QuantConnect.Brokerages.Tradier.TradierOrderDetailed.TradierOrderDetailed()", span="192-192", cluster="QuantConnect.Brokerages.Tradier.TradierOrderDetailed.TradierOrderDetailed()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_167 [label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141", cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_288 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_629 [label="Entry System.Threading.Tasks.Task.Delay(System.TimeSpan)", span="0-0", cluster="System.Threading.Tasks.Task.Delay(System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_880 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", span="1664-1664", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_881 [label="return new Holding\r\n            {\r\n                Symbol = Symbol.Create(position.Symbol, SecurityType.Equity, Market.USA),\r\n                Type = SecurityType.Equity,\r\n                AveragePrice = position.CostBasis/position.Quantity,\r\n                ConversionRate = 1.0m,\r\n                CurrencySymbol = ''$'',\r\n                MarketPrice = 0m, //--> GetAccountHoldings does a call to GetQuotes to fill this data in\r\n                Quantity = position.Quantity\r\n            };", span="1666-1675", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_882 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", span="1664-1664", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertHolding(QuantConnect.Brokerages.Tradier.TradierPosition)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_503 [label="Entry Unk.ChangeOrder", span="", cluster="Unk.ChangeOrder", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_382 [label="Entry Unk.GetQuotes", span="", cluster="Unk.GetQuotes", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_236 [label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65", cluster="QuantConnect.Logging.Log.Error(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_175 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", span="395-395", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_176 [label="var request = new RestRequest(''user/profile'', Method.GET)", span="397-397", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_177 [label="var userContainer = Execute<TradierUserContainer>(request, TradierApiRequestType.Standard)", span="398-398", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_178 [label="return userContainer.Profile;", span="399-399", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_179 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", span="395-395", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetUserProfile()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_41 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_115 [label="Entry RestClient.cstr", span="", cluster="RestClient.cstr", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_208 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", span="467-467", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_209 [label="var request = new RestRequest(''accounts/{accountId}/gainloss'')", span="469-469", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_210 [label="request.AddUrlSegment(''accountId'', accountId.ToString())", span="470-470", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_211 [label="var gainLossContainer = Execute<TradierGainLossContainer>(request, TradierApiRequestType.Standard)", span="472-472", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_212 [label="gainLossContainer.GainLossClosed == null || gainLossContainer.GainLossClosed.ClosedPositions == null", span="474-474", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_215 [label="return gainLossContainer.GainLossClosed.ClosedPositions;", span="481-481", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_213 [label="Log.Trace(''Tradier.GetGainLoss(): No gain loss found'')", span="477-477", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_214 [label="return new List<TradierGainLoss>();", span="478-478", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_216 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", span="467-467", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetGainLoss(long)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_206 [label="Entry long.ToString()", span="0-0", cluster="long.ToString()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_442 [label="Entry Unk.TryRemove", span="", cluster="Unk.TryRemove", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_808 [label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45", cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_119 [label="Entry Unk.>", span="", cluster="Unk.>", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_498 [label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_53 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", span="1172-1172", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_594 [label="!Monitor.TryEnter(_fillLock)", span="1175-1175", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_595 [label="return;", span="1177-1177", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_596 [label="var intradayAndPendingOrders = GetIntradayAndPendingOrders()", span="1182-1182", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_597 [label="intradayAndPendingOrders == null", span="1183-1183", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_600 [label="var updatedOrders = intradayAndPendingOrders.ToDictionary(x => x.Id)", span="1189-1189", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_598 [label="Log.Error(''TradierBrokerage.CheckForFills(): Returned null response!'')", span="1185-1185", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_599 [label="return;", span="1186-1186", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_601 [label=_cachedOpenOrdersByTradierOrderID, span="1192-1192", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_603 [label="var hasUpdatedOrder = updatedOrders.TryGetValue(cachedOrder.Key, out updatedOrder)", span="1195-1195", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_611 [label="var unknownOrderIDs = updatedOrders.Where(IsUnknownOrderID).ToHashSet(x => x.Key)", span="1244-1244", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_602 [label="TradierOrder updatedOrder", span="1194-1194", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_604 [label=hasUpdatedOrder, span="1196-1196", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_605 [label="ProcessPotentiallyUpdatedOrder(cachedOrder.Value, updatedOrder)", span="1199-1199", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_606 [label="!OrderIsClosed(updatedOrder)", span="1202-1202", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_607 [label="UpdateCachedOpenOrder(cachedOrder.Key, updatedOrder)", span="1202-1202", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_608 [label="!_reentranceGuardByTradierOrderID.Add(cachedOrder.Key)", span="1208-1208", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_609 [label="var cachedOrderLocal = cachedOrder", span="1214-1214", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_610 [label="Task.Run(() =>\r\n                    {\r\n                        try\r\n                        {\r\n                            var updatedOrderLocal = GetOrder(cachedOrderLocal.Key);\r\n                            if (updatedOrderLocal == null)\r\n                            {\r\n                                Log.Error(string.Format(''TradierBrokerage.CheckForFills(): Unable to locate order {0} in cached open orders.'', cachedOrderLocal.Key));\r\n                                throw new Exception(''TradierBrokerage.CheckForFills(): GetOrder() return null response'');\r\n                            }\r\n\r\n                            UpdateCachedOpenOrder(cachedOrderLocal.Key, updatedOrderLocal);\r\n                            ProcessPotentiallyUpdatedOrder(cachedOrderLocal.Value, updatedOrderLocal);\r\n                        }\r\n                        catch (Exception err)\r\n                        {\r\n                            Log.Error(err);\r\n                            OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''PendingOrderNotReturned'',\r\n                                ''An error ocurred while trying to resolve fill events from Tradier orders: '' + err));\r\n                        }\r\n                        finally\r\n                        {\r\n                            // signal that we've left the task\r\n                            _reentranceGuardByTradierOrderID.Remove(cachedOrderLocal.Key);\r\n                        }\r\n                    })", span="1215-1240", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_612 [label="unknownOrderIDs.ExceptWith(_verifiedUnknownTradierOrderIDs)", span="1245-1245", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_613 [label="var fireTask = unknownOrderIDs.Count != 0 && _unknownTradierOrderIDs.Count == 0", span="1246-1246", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_614 [label=unknownOrderIDs, span="1247-1247", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_616 [label=fireTask, span="1252-1252", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_615 [label="_unknownTradierOrderIDs.Add(unknownOrderID)", span="1249-1249", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_617 [label="Task.Delay(TimeSpan.FromSeconds(2)).ContinueWith(t =>\r\n                    {\r\n                        var localUnknownTradierOrderIDs = _unknownTradierOrderIDs.ToHashSet();\r\n                        _unknownTradierOrderIDs.Clear();\r\n                        try\r\n                        {\r\n                            // verify we don't have them in the order provider\r\n                            Log.Trace(''TradierBrokerage.CheckForFills(): Verifying missing brokerage IDs: '' + string.Join('','', localUnknownTradierOrderIDs));\r\n                            var orders = localUnknownTradierOrderIDs.Select(x => _orderProvider.GetOrderByBrokerageId(x)).Where(x => x != null);\r\n                            var stillUnknownOrderIDs = localUnknownTradierOrderIDs.Where(x => !orders.Any(y => y.BrokerId.Contains(x.ToString()))).ToList();\r\n                            if (stillUnknownOrderIDs.Count > 0)\r\n                            {\r\n                                // fetch all rejected intraday orders within the last minute, we're going to exclude rejected orders from the error condition\r\n                                var recentOrders = GetIntradayAndPendingOrders().Where(x => x.Status == TradierOrderStatus.Rejected)\r\n                                    .Where(x => DateTime.UtcNow - x.TransactionDate < TimeSpan.FromMinutes(1)).ToHashSet(x => x.Id);\r\n\r\n                                // remove recently rejected orders, sometimes we'll get updates for these but we've already marked them as rejected\r\n                                stillUnknownOrderIDs.RemoveAll(x => recentOrders.Contains(x));\r\n\r\n                                if (stillUnknownOrderIDs.Count > 0)\r\n                                {\r\n                                    // if we still have unknown IDs then we've gotta bail on the algorithm\r\n                                    var ids = string.Join('', '', stillUnknownOrderIDs);\r\n                                    Log.Error(''TradierBrokerage.CheckForFills(): Unable to verify all missing brokerage IDs: '' + ids);\r\n                                    OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Error, ''UnknownOrderId'', ''Received unknown Tradier order id(s): '' + ids));\r\n                                    return;\r\n                                }\r\n                            }\r\n                            foreach (var unknownTradierOrderID in localUnknownTradierOrderIDs)\r\n                            {\r\n                                // add these to the verified list so we don't check them again\r\n                                _verifiedUnknownTradierOrderIDs.Add(unknownTradierOrderID);\r\n                            }\r\n                            Log.Trace(''TradierBrokerage.CheckForFills(): Verified all missing brokerage IDs.'');\r\n                        }\r\n                        catch (Exception err)\r\n                        {\r\n                            // we need to recheck these order ids since we failed, so add them back to the set\r\n                            foreach (var id in localUnknownTradierOrderIDs) _unknownTradierOrderIDs.Add(id);\r\n\r\n                            Log.Error(err);\r\n                            OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''UnknownIdResolution'', ''An error ocurred while trying to resolve unknown Tradier order IDs: '' + err));\r\n                        }\r\n                    })", span="1255-1298", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_618 [label=Exception, span="1301-1301", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_619 [label="Log.Error(err)", span="1303-1303", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_620 [label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, ''CheckForFillsError'', ''An error ocurred while checking for fills: '' + err))", span="1304-1304", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_621 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", span="1172-1172", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.CheckForFills()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_630 [label="Entry Unk.ContinueWith", span="", cluster="Unk.ContinueWith", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_42 [label="Entry System.TimeSpan.Subtract(System.TimeSpan)", span="0-0", cluster="System.TimeSpan.Subtract(System.TimeSpan)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_735 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", span="1462-1462", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_765 [label=direction, span="1464-1464", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_777 [label="throw new ArgumentOutOfRangeException(''direction'', direction, null);", span="1478-1478", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_766 [label="TradierOrderDirection.Sell", span="1466-1466", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_771 [label="TradierOrderDirection.Buy", span="1471-1471", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_767 [label="TradierOrderDirection.SellShort", span="1467-1467", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_768 [label="TradierOrderDirection.SellToOpen", span="1468-1468", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_769 [label="TradierOrderDirection.SellToClose", span="1469-1469", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_770 [label="return true;", span="1470-1470", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_772 [label="TradierOrderDirection.BuyToCover", span="1472-1472", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_773 [label="TradierOrderDirection.BuyToClose", span="1473-1473", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_774 [label="TradierOrderDirection.BuyToOpen", span="1474-1474", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_775 [label="TradierOrderDirection.None", span="1475-1475", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_776 [label="return false;", span="1476-1476", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_778 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", span="1462-1462", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.IsShort(QuantConnect.Brokerages.Tradier.TradierOrderDirection)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_319 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", span="673-673", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_320 [label="var request = new RestRequest(''markets/search'', Method.GET)", span="675-675", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_321 [label="request.AddParameter(''q'', query)", span="676-676", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_322 [label="request.AddParameter(''indexes'', includeIndexes.ToString())", span="677-677", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_323 [label="var searchContainer = Execute<TradierSearchContainer>(request, TradierApiRequestType.Data, ''securities'')", span="678-678", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_324 [label="return searchContainer.Results;", span="679-679", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_325 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", span="673-673", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.Search(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_327 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", span="685-685", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_328 [label="var request = new RestRequest(''markets/lookup'', Method.GET)", span="687-687", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_329 [label="request.AddParameter(''q'', query)", span="688-688", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_330 [label="request.AddParameter(''indexes'', includeIndexes.ToString())", span="689-689", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_331 [label="var searchContainer = Execute<TradierSearchContainer>(request, TradierApiRequestType.Data, ''securities'')", span="690-690", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_332 [label="return searchContainer.Results;", span="691-691", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_333 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", span="685-685", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.LookUpSymbol(string, bool)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_117 [label="Entry System.Threading.Thread.Sleep(int)", span="0-0", cluster="System.Threading.Thread.Sleep(int)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_806 [label="Entry QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", span="52-52", cluster="QuantConnect.Orders.StopLimitOrder.StopLimitOrder()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_737 [label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31", cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_805 [label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42", cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_14 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_186 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", span="425-425", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_187 [label="var request = new RestRequest(''accounts/{accountId}/positions'', Method.GET)", span="427-427", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_188 [label="request.AddParameter(''accountId'', _accountID, ParameterType.UrlSegment)", span="428-428", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_189 [label="var positionContainer = Execute<TradierPositionsContainer>(request, TradierApiRequestType.Standard)", span="429-429", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_190 [label="positionContainer.TradierPositions == null || positionContainer.TradierPositions.Positions == null", span="431-431", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_193 [label="return positionContainer.TradierPositions.Positions;", span="438-438", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_191 [label="Log.Trace(''Tradier.Positions(): No positions found'')", span="434-434", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_192 [label="return new List<TradierPosition>();", span="435-435", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_194 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", span="425-425", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetPositions()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_500 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.TimeInForce)", span="1754-1754", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.TimeInForce)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_914 [label=duration, span="1756-1756", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.TimeInForce)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_915 [label="TimeInForce.GoodTilCancelled", span="1758-1758", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.TimeInForce)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_917 [label="throw new ArgumentOutOfRangeException();", span="1761-1761", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.TimeInForce)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_916 [label="return TradierOrderDuration.GTC;", span="1759-1759", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.TimeInForce)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_918 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.TimeInForce)", span="1754-1754", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetOrderDuration(QuantConnect.Orders.TimeInForce)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_810 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertTimeInForce(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="1552-1552", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertTimeInForce(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_822 [label=duration, span="1554-1554", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertTimeInForce(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_823 [label="TradierOrderDuration.GTC", span="1556-1556", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertTimeInForce(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_825 [label="TradierOrderDuration.Day", span="1558-1558", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertTimeInForce(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_827 [label="throw new ArgumentOutOfRangeException();", span="1561-1561", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertTimeInForce(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_824 [label="return TimeInForce.GoodTilCancelled;", span="1557-1557", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertTimeInForce(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_826 [label="return (TimeInForce) 1;", span="1559-1559", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertTimeInForce(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_828 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertTimeInForce(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", span="1552-1552", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertTimeInForce(QuantConnect.Brokerages.Tradier.TradierOrderDuration)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_124 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_569 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_39 [label="Entry System.Threading.Timer.Dispose()", span="0-0", cluster="System.Threading.Timer.Dispose()", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_780 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1486-1486", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_781 [label="Order qcOrder", span="1488-1488", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_782 [label="order.Type", span="1489-1489", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_784 [label="qcOrder = new LimitOrder {LimitPrice = order.Price}", span="1492-1492", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_788 [label="qcOrder = new StopMarketOrder {StopPrice = GetOrder(order.Id).StopPrice}", span="1498-1498", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_790 [label="qcOrder = new StopLimitOrder {LimitPrice = order.Price, StopPrice = GetOrder(order.Id).StopPrice}", span="1501-1501", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_791 [label="throw new NotImplementedException(''The Tradier order type '' + order.Type + '' is not implemented.'');", span="1508-1508", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_792 [label="qcOrder.Symbol = Symbol.Create(order.Symbol, SecurityType.Equity, Market.USA)", span="1510-1510", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_793 [label="qcOrder.Quantity = ConvertQuantity(order)", span="1511-1511", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_794 [label="qcOrder.Status = ConvertStatus(order.Status)", span="1512-1512", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_795 [label="qcOrder.BrokerId.Add(order.Id.ToString())", span="1513-1513", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_796 [label="qcOrder.Properties.TimeInForce = ConvertTimeInForce(order.Duration)", span="1515-1515", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_797 [label="var orderByBrokerageId = _orderProvider.GetOrderByBrokerageId(order.Id)", span="1516-1516", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_800 [label="qcOrder.Time = order.TransactionDate", span="1521-1521", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_783 [label="TradierOrderType.Limit", span="1491-1491", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_785 [label="TradierOrderType.Market", span="1494-1494", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_787 [label="TradierOrderType.StopMarket", span="1497-1497", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_789 [label="TradierOrderType.StopLimit", span="1500-1500", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_786 [label="qcOrder = new MarketOrder()", span="1495-1495", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_799 [label="qcOrder.Id = orderByBrokerageId.Id", span="1519-1519", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_801 [label="return qcOrder;", span="1522-1522", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_798 [label="orderByBrokerageId != null", span="1517-1517", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_802 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", span="1486-1486", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.ConvertOrder(QuantConnect.Brokerages.Tradier.TradierOrder)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_580 [label="Entry Unk.OrderByDescending", span="", cluster="Unk.OrderByDescending", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_279 [label="Entry QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", span="601-601", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_280 [label="symbols.Count == 0", span="603-603", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_283 [label="var csvSymbols = String.Join('','', symbols)", span="610-610", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_281 [label="return new List<TradierQuote>();", span="605-605", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_282 [label="var request = new RestRequest(''markets/quotes'', Method.GET)", span="609-609", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_284 [label="request.AddParameter(''symbols'', csvSymbols, ParameterType.QueryString)", span="611-611", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_285 [label="var dataContainer = Execute<TradierQuoteContainer>(request, TradierApiRequestType.Data, ''quotes'')", span="613-613", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_286 [label="return dataContainer.Quotes;", span="614-614", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_287 [label="Exit QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", span="601-601", cluster="QuantConnect.Brokerages.Tradier.TradierBrokerage.GetQuotes(System.Collections.Generic.List<string>)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_342 [label="Entry System.Type.GetField(string)", span="0-0", cluster="System.Type.GetField(string)", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_975 [label="QuantConnect.Brokerages.Tradier.TradierBrokerage", span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_976 [label="QuantConnect.Orders.Order", span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_977 [label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_978 [label=cachedOrderLocal, span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_979 [label=orders, span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_980 [label="QuantConnect.Symbol", span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_981 [label=recentOrders, span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_982 [label=qcOrder, span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_983 [label=order, span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_984 [label="QuantConnect.Brokerages.Tradier.TradierOrder", span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_985 [label=orderFee, span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_986 [label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue", span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_987 [label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder", span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m83_988 [label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest", span="", file="UpdateOrderLiveTestAlgorithm.cs"];
m84_18 [label="Entry QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="72-72", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_19 [label="!data.Bars.ContainsKey(symbol)", span="74-74", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_27 [label="var stopPrice = isLong ? (1 + StopPercentage)*data.Bars[symbol].High : (1 - StopPercentage)*data.Bars[symbol].Low", span="87-87", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_30 [label="limitPrice = !isLong ? (1 + LimitPercentage) * data.Bars[symbol].High : (1 - LimitPercentage) * data.Bars[symbol].Low", span="91-91", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_20 [label="return;", span="74-74", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_21 [label="Time.Month != LastMonth", span="77-77", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_22 [label="var orderType = _orderTypesQueue.Dequeue()", span="80-80", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_34 [label="_tickets.Count > 0", span="97-97", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_23 [label="Log(''\r\n--------------MONTH: '' + Time.ToString(''MMMM'') + '':: '' + orderType + ''\r\n'')", span="82-82", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_25 [label="Log(''ORDER TYPE:: '' + orderType)", span="85-85", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_29 [label="orderType == OrderType.Limit", span="89-89", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_31 [label="var request = new SubmitOrderRequest(orderType, SecType, symbol, Quantity, stopPrice, limitPrice, Time, orderType.ToString())", span="93-93", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_24 [label="LastMonth = Time.Month", span="84-84", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_26 [label="var isLong = Quantity > 0", span="86-86", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_28 [label="var limitPrice = isLong ? (1 - LimitPercentage)*stopPrice : (1 + LimitPercentage)*stopPrice", span="88-88", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_32 [label="var ticket = Transactions.AddOrder(request)", span="94-94", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_33 [label="_tickets.Add(ticket)", span="95-95", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_35 [label="var ticket = _tickets.Last()", span="99-99", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_36 [label="Time.Day > 8 && Time.Day < 14", span="100-100", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_37 [label="ticket.UpdateRequests.Count == 0 && ticket.Status.IsOpen()", span="102-102", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_38 [label="Log(''TICKET:: '' + ticket)", span="104-104", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_39 [label="ticket.Update(new UpdateOrderFields\r\n                        {\r\n                            Quantity = ticket.Quantity + Math.Sign(Quantity)*DeltaQuantity,\r\n                            Tag = ''Change quantity: '' + Time\r\n                        })", span="105-109", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_40 [label="Log(''UPDATE1:: '' + ticket.UpdateRequests.Last())", span="110-110", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_42 [label="ticket.UpdateRequests.Count == 1 && ticket.Status.IsOpen()", span="115-115", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_43 [label="Log(''TICKET:: '' + ticket)", span="117-117", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_44 [label="ticket.Update(new UpdateOrderFields\r\n                        {\r\n                            LimitPrice = Security.Price*(1 - Math.Sign(ticket.Quantity)*LimitPercentageDelta),\r\n                            StopPrice = Security.Price*(1 + Math.Sign(ticket.Quantity)*StopPercentageDelta),\r\n                            Tag = ''Change prices: '' + Time\r\n                        })", span="118-123", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_45 [label="Log(''UPDATE2:: '' + ticket.UpdateRequests.Last())", span="124-124", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_46 [label="ticket.UpdateRequests.Count == 2 && ticket.Status.IsOpen()", span="129-129", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_47 [label="Log(''TICKET:: '' + ticket)", span="131-131", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_48 [label="ticket.Cancel(Time + '' and is still open!'')", span="132-132", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_49 [label="Log(''CANCELLED:: '' + ticket.CancelRequest)", span="133-133", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_41 [label="Time.Day > 13 && Time.Day < 20", span="113-113", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_50 [label="Exit QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", span="72-72", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnData(QuantConnect.Data.Slice)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_55 [label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", span="92-92", cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, decimal, decimal, decimal, System.DateTime, string)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_65 [label="Entry QuantConnect.Orders.OrderTicket.Cancel(string)", span="258-258", cluster="QuantConnect.Orders.OrderTicket.Cancel(string)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_72 [label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", span="272-272", cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrderById(int)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_59 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Last<TSource>()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_15 [label="Entry lambda expression", span="61-65", cluster="lambda expression", file="UpdateOrderRegressionAlgorithm.cs"];
m84_0 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="UpdateOrderRegressionAlgorithm.cs"];
m84_1 [label="x != OrderType.OptionExercise", span="46-46", cluster="lambda expression", file="UpdateOrderRegressionAlgorithm.cs"];
m84_2 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="UpdateOrderRegressionAlgorithm.cs"];
m84_16 [label="Quantity *= -1", span="64-64", cluster="lambda expression", file="UpdateOrderRegressionAlgorithm.cs"];
m84_17 [label="Exit lambda expression", span="61-65", cluster="lambda expression", file="UpdateOrderRegressionAlgorithm.cs"];
m84_64 [label="Entry System.Math.Sign(decimal)", span="0-0", cluster="System.Math.Sign(decimal)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_61 [label="Entry QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", span="20-20", cluster="QuantConnect.Orders.UpdateOrderFields.UpdateOrderFields()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_51 [label="Entry QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", span="156-156", cluster="QuantConnect.Data.Market.DataDictionary<T>.ContainsKey(QuantConnect.Symbol)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_53 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_11 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_52 [label="Entry QuantConnect.Util.CircularQueue<T>.Dequeue()", span="66-66", cluster="QuantConnect.Util.CircularQueue<T>.Dequeue()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_62 [label="Entry System.Math.Sign(int)", span="0-0", cluster="System.Math.Sign(int)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_73 [label="Entry decimal.SmartRounding()", span="206-206", cluster="decimal.SmartRounding()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_79 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1623-1623", cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_80 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_3 [label="Entry QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Initialize()", span="52-52", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Initialize()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_4 [label="SetStartDate(2013, 01, 01)", span="54-54", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Initialize()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_5 [label="SetEndDate(2015, 01, 01)", span="55-55", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Initialize()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_6 [label="SetCash(100000)", span="56-56", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Initialize()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_7 [label="AddSecurity(SecType, symbol, Resolution.Daily)", span="58-58", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Initialize()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_8 [label="Security = Securities[symbol]", span="59-59", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Initialize()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_9 [label="_orderTypesQueue.CircleCompleted += (sender, args) =>\r\n            {\r\n                // flip our signs when we've gone through all the order types\r\n                Quantity *= -1;\r\n            }", span="61-65", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Initialize()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_10 [label="Exit QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Initialize()", span="52-52", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Initialize()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_12 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_54 [label="Entry QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Log(string)", span="152-152", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Log(string)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_75 [label=LiveMode, span="154-154", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Log(string)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_76 [label="Debug(msg)", span="154-154", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Log(string)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_77 [label="base.Log(msg)", span="155-155", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Log(string)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_78 [label="Exit QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Log(string)", span="152-152", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.Log(string)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_57 [label="Entry QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", span="144-144", cluster="QuantConnect.Securities.SecurityTransactionManager.AddOrder(QuantConnect.Orders.SubmitOrderRequest)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_13 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_58 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_63 [label="Entry QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", span="249-249", cluster="QuantConnect.Orders.OrderTicket.Update(QuantConnect.Orders.UpdateOrderFields)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_60 [label="Entry QuantConnect.Orders.OrderStatus.IsOpen()", span="39-39", cluster="QuantConnect.Orders.OrderStatus.IsOpen()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_66 [label="Entry QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="139-139", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_67 [label="orderEvent.Status == OrderStatus.Filled", span="141-141", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_68 [label="Log(''FILLED:: '' + Transactions.GetOrderById(orderEvent.OrderId) + '' FILL PRICE:: '' + orderEvent.FillPrice.SmartRounding())", span="143-143", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_69 [label="Log(orderEvent.ToString())", span="147-147", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_70 [label="Log(''TICKET:: '' + _tickets.Last())", span="148-148", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_71 [label="Exit QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="139-139", cluster="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="UpdateOrderRegressionAlgorithm.cs"];
m84_74 [label="Entry QuantConnect.Orders.OrderEvent.ToString()", span="153-153", cluster="QuantConnect.Orders.OrderEvent.ToString()", file="UpdateOrderRegressionAlgorithm.cs"];
m84_81 [label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm", span="", file="UpdateOrderRegressionAlgorithm.cs"];
m86_4 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="WarmupAlgorithm.cs"];
m86_14 [label="Entry Unk.Substring", span="", cluster="Unk.Substring", file="WarmupAlgorithm.cs"];
m86_5 [label="Entry QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="45-45", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="WarmupAlgorithm.cs"];
m86_6 [label="var pe = (PythonException)exception", span="47-47", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="WarmupAlgorithm.cs"];
m86_7 [label="var startIndex = pe.Message.LastIndexOf('' '')", span="49-49", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="WarmupAlgorithm.cs"];
m86_8 [label="var methodName = pe.Message.Substring(startIndex).Trim()", span="50-50", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="WarmupAlgorithm.cs"];
m86_10 [label="message += PythonUtil.PythonExceptionStackParser(pe.StackTrace)", span="53-53", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="WarmupAlgorithm.cs"];
m86_11 [label="return new MissingMethodException(message, pe);", span="55-55", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="WarmupAlgorithm.cs"];
m86_9 [label="var message = $''Trying to dynamically access a method that does not exist throws a TypeError exception. To prevent the exception, ensure each parameter type matches those required by the {methodName} method. Please checkout the API documentation.''", span="51-51", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="WarmupAlgorithm.cs"];
m86_12 [label="Exit QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="45-45", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="WarmupAlgorithm.cs"];
m86_3 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="WarmupAlgorithm.cs"];
m86_0 [label="Entry QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.CanInterpret(System.Exception)", span="31-31", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.CanInterpret(System.Exception)", file="WarmupAlgorithm.cs"];
m86_1 [label="return \r\n                exception?.GetType() == typeof(PythonException) &&\r\n                exception.Message.Contains(''TypeError'') &&\r\n                exception.Message.Contains(''No method match'');", span="33-36", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.CanInterpret(System.Exception)", color=red, community=0, file="WarmupAlgorithm.cs"];
m86_2 [label="Exit QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.CanInterpret(System.Exception)", span="31-31", cluster="QuantConnect.Exceptions.NoMethodMatchPythonExceptionInterpreter.CanInterpret(System.Exception)", file="WarmupAlgorithm.cs"];
m86_16 [label="Entry Unk.PythonExceptionStackParser", span="", cluster="Unk.PythonExceptionStackParser", file="WarmupAlgorithm.cs"];
m86_13 [label="Entry Unk.LastIndexOf", span="", cluster="Unk.LastIndexOf", file="WarmupAlgorithm.cs"];
m86_15 [label="Entry Unk.Trim", span="", cluster="Unk.Trim", file="WarmupAlgorithm.cs"];
m86_17 [label="Entry MissingMethodException.cstr", span="", cluster="MissingMethodException.cstr", file="WarmupAlgorithm.cs"];
m87_20 [label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="36-36", cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="WarmupHistoryAlgorithm.cs"];
m87_19 [label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="247-247", cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="WarmupHistoryAlgorithm.cs"];
m87_22 [label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1636-1636", cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="WarmupHistoryAlgorithm.cs"];
m87_23 [label="Entry QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="WarmupHistoryAlgorithm.cs"];
m87_24 [label="fast > slow", span="60-60", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="WarmupHistoryAlgorithm.cs"];
m87_25 [label="SetHoldings(''EURUSD'', 1)", span="62-62", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="WarmupHistoryAlgorithm.cs"];
m87_26 [label="SetHoldings(''EURUSD'', -1)", span="66-66", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="WarmupHistoryAlgorithm.cs"];
m87_27 [label="Exit QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", span="58-58", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="WarmupHistoryAlgorithm.cs"];
m87_21 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="WarmupHistoryAlgorithm.cs"];
m87_15 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1095-1095", cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="WarmupHistoryAlgorithm.cs"];
m87_17 [label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1262-1262", cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="WarmupHistoryAlgorithm.cs"];
m87_14 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1070-1070", cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="WarmupHistoryAlgorithm.cs"];
m87_18 [label="Entry QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="323-323", cluster="QuantConnect.Algorithm.QCAlgorithm.EMA(QuantConnect.Symbol, int, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="WarmupHistoryAlgorithm.cs"];
m87_16 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1019-1019", cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="WarmupHistoryAlgorithm.cs"];
m87_0 [label="Entry QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", span="31-31", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_1 [label="SetStartDate(2013, 10, 07)", span="33-33", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_2 [label="SetEndDate(2013, 10, 11)", span="34-34", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_3 [label="SetCash(100000)", span="35-35", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_4 [label="AddSecurity(SecurityType.Forex, ''EURUSD'', Resolution.Second)", span="37-37", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_5 [label="fast = EMA(''EURUSD'', 60)", span="39-39", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_6 [label="slow = EMA(''EURUSD'', 3600)", span="40-40", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_7 [label="var history = History(''EURUSD'', 3601)", span="43-43", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_8 [label=history, span="44-44", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_9 [label="fast.Update(bar.EndTime, bar.Close)", span="46-46", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_11 [label="Log(string.Format(''FAST IS {0} READY. Samples: {1}'', fast.IsReady ? '''' : ''NOT'', fast.Samples))", span="50-50", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_10 [label="slow.Update(bar.EndTime, bar.Close)", span="47-47", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_12 [label="Log(string.Format(''SLOW IS {0} READY. Samples: {1}'', slow.IsReady ? '''' : ''NOT'', slow.Samples))", span="51-51", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_13 [label="Exit QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", span="31-31", cluster="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm.Initialize()", file="WarmupHistoryAlgorithm.cs"];
m87_28 [label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861", cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="WarmupHistoryAlgorithm.cs"];
m87_29 [label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm", span="", file="WarmupHistoryAlgorithm.cs"];
n355 -> n47  [key=1, style=dashed, color=darkseagreen4, label=V];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<T>"];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<T>"];
n1 -> n2  [key=0, style=solid];
n1 -> n5  [key=1, style=dashed, color=darkseagreen4, label=oItem];
n2 -> n3  [key=0, style=solid];
n2 -> n7  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n4  [key=1, style=dashed, color=darkseagreen4, label=int];
n5 -> n6  [key=0, style=solid];
n5 -> n8  [key=2, style=dotted];
n6 -> n0  [key=0, style=bold, color=blue];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=1, style=dashed, color=darkseagreen4, label=string];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=1, style=dashed, color=darkseagreen4, label=bytes];
n11 -> n12  [key=0, style=solid];
n11 -> n14  [key=2, style=dotted];
n11 -> n15  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n13 -> n9  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Concurrent.ConcurrentQueue<T>"];
n17 -> n18  [key=0, style=solid];
n18 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=2, style=dotted];
n19 -> n16  [key=0, style=bold, color=blue];
n21 -> n22  [key=0, style=solid];
n21 -> n24  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
n22 -> n23  [key=0, style=solid];
n22 -> n24  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n25 -> n21  [key=0, style=bold, color=blue];
n27 -> n28  [key=0, style=solid];
n27 -> n30  [key=1, style=dashed, color=darkseagreen4, label=string];
n28 -> n29  [key=0, style=solid];
n28 -> n35  [key=2, style=dotted];
n28 -> n32  [key=1, style=dashed, color=darkseagreen4, label=builder];
n28 -> n33  [key=1, style=dashed, color=darkseagreen4, label=builder];
n30 -> n31  [key=0, style=solid];
n30 -> n37  [key=2, style=dotted];
n30 -> n38  [key=2, style=dotted];
n29 -> n30  [key=0, style=solid];
n29 -> n36  [key=2, style=dotted];
n32 -> n31  [key=0, style=solid];
n32 -> n39  [key=2, style=dotted];
n32 -> n40  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n41  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=0, style=solid];
n34 -> n27  [key=0, style=bold, color=blue];
n42 -> n43  [key=0, style=solid];
n42 -> n47  [key=1, style=dashed, color=darkseagreen4, label=V];
n43 -> n44  [key=0, style=solid];
n43 -> n45  [key=2, style=dotted];
n43 -> n46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n47 -> n48  [key=0, style=solid];
n44 -> n42  [key=0, style=bold, color=blue];
n46 -> n47  [key=0, style=solid];
n48 -> n46  [key=0, style=bold, color=blue];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<TKey, TCollection>"];
n49 -> n53  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<TKey, TCollection>"];
n49 -> n54  [key=1, style=dashed, color=darkseagreen4, label=TElement];
n50 -> n51  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n51 -> n54  [key=0, style=solid];
n51 -> n56  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n58  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n59  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n57  [key=2, style=dotted];
n52 -> n54  [key=1, style=dashed, color=darkseagreen4, label=list];
n55 -> n49  [key=0, style=bold, color=blue];
n60 -> n61  [key=0, style=solid];
n60 -> n63  [key=1, style=dashed, color=darkseagreen4, label=double];
n60 -> n64  [key=1, style=dashed, color=darkseagreen4, label=double];
n60 -> n84  [key=3, color=darkorchid, style=bold, label="Parameter variable int digits"];
n61 -> n62  [key=0, style=solid];
n61 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n66  [key=2, style=dotted];
n63 -> n67  [key=2, style=dotted];
n63 -> n68  [key=2, style=dotted];
n63 -> n69  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n70  [key=2, style=dotted];
n62 -> n65  [key=0, style=solid];
n65 -> n60  [key=0, style=bold, color=blue];
n71 -> n72  [key=0, style=solid];
n71 -> n74  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n71 -> n75  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n71 -> n61  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal RoundToSignificantDigits"];
n72 -> n73  [key=0, style=solid];
n72 -> n74  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n74 -> n77  [key=2, style=dotted];
n74 -> n67  [key=2, style=dotted];
n74 -> n68  [key=2, style=dotted];
n74 -> n69  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n75 -> n78  [key=2, style=dotted];
n73 -> n76  [key=0, style=solid];
n76 -> n71  [key=0, style=bold, color=blue];
n79 -> n80  [key=0, style=solid];
n79 -> n86  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal input"];
n79 -> n60  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal SmartRounding"];
n80 -> n81  [key=0, style=solid];
n80 -> n86  [key=2, style=dotted];
n80 -> n80  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n80 -> n82  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n80 -> n83  [key=1, style=dashed, color=darkseagreen4, label=decimal];
n81 -> n82  [key=0, style=solid];
n81 -> n83  [key=0, style=solid];
n86 -> n95  [key=0, style=solid];
n86 -> n79  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal input"];
n82 -> n85  [key=0, style=solid];
n82 -> n78  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n84 -> n87  [key=2, style=dotted];
n85 -> n79  [key=0, style=bold, color=blue];
n88 -> n89  [key=0, style=solid];
n88 -> n91  [key=1, style=dashed, color=darkseagreen4, label=double];
n88 -> n93  [key=1, style=dashed, color=darkseagreen4, label=double];
n88 -> n88  [key=3, color=darkorchid, style=bold, label="method methodReturn decimal SafeDecimalCast"];
n89 -> n90  [key=0, style=solid];
n89 -> n91  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n91 -> n93  [key=0, style=solid];
n93 -> n94  [key=0, style=solid];
n90 -> n94  [key=0, style=solid];
n92 -> n94  [key=0, style=solid];
n94 -> n88  [key=0, style=bold, color=blue];
n95 -> n96  [key=0, style=solid];
n96 -> n86  [key=0, style=bold, color=blue];
n97 -> n98  [key=0, style=solid];
n97 -> n102  [key=1, style=dashed, color=darkseagreen4, label=string];
n97 -> n103  [key=1, style=dashed, color=darkseagreen4, label=string];
n98 -> n99  [key=0, style=solid];
n98 -> n107  [key=1, style=dashed, color=darkseagreen4, label=value];
n98 -> n110  [key=1, style=dashed, color=darkseagreen4, label=value];
n98 -> n111  [key=1, style=dashed, color=darkseagreen4, label=value];
n98 -> n61  [key=3, color=darkorchid, style=bold, label="Local variable long value"];
n102 -> n103  [key=0, style=solid];
n102 -> n110  [key=0, style=solid];
n102 -> n61  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n103 -> n104  [key=0, style=solid];
n103 -> n107  [key=1, style=dashed, color=darkseagreen4, label=ch];
n99 -> n100  [key=0, style=solid];
n99 -> n108  [key=1, style=dashed, color=darkseagreen4, label=decimalPlaces];
n99 -> n112  [key=1, style=dashed, color=darkseagreen4, label=decimalPlaces];
n99 -> n61  [key=3, color=darkorchid, style=bold, label="Local variable int decimalPlaces"];
n107 -> n108  [key=0, style=solid];
n107 -> n107  [key=1, style=dashed, color=darkseagreen4, label=value];
n107 -> n110  [key=1, style=dashed, color=darkseagreen4, label=value];
n107 -> n111  [key=1, style=dashed, color=darkseagreen4, label=value];
n110 -> n111  [key=0, style=solid];
n110 -> n112  [key=1, style=dashed, color=darkseagreen4, label=lo];
n111 -> n112  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n112  [key=1, style=dashed, color=darkseagreen4, label=hasDecimals];
n100 -> n100  [key=3, color=darkorchid, style=bold, label="Local variable bool hasDecimals"];
n108 -> n109  [key=0, style=solid];
n108 -> n108  [key=1, style=dashed, color=darkseagreen4, label=decimalPlaces];
n108 -> n112  [key=1, style=dashed, color=darkseagreen4, label=decimalPlaces];
n112 -> n113  [key=0, style=solid];
n112 -> n114  [key=2, style=dotted];
n101 -> n102  [key=0, style=solid];
n101 -> n103  [key=1, style=dashed, color=darkseagreen4, label=i];
n101 -> n109  [key=1, style=dashed, color=darkseagreen4, label=i];
n109 -> n102  [key=0, style=solid];
n109 -> n109  [key=1, style=dashed, color=darkseagreen4, label=i];
n104 -> n105  [key=0, style=solid];
n104 -> n107  [key=0, style=solid];
n105 -> n106  [key=0, style=solid];
n105 -> n112  [key=1, style=dashed, color=darkseagreen4, label=hasDecimals];
n106 -> n109  [key=0, style=solid];
n106 -> n112  [key=1, style=dashed, color=darkseagreen4, label=decimalPlaces];
n113 -> n97  [key=0, style=bold, color=blue];
n115 -> n116  [key=0, style=solid];
n115 -> n118  [key=1, style=dashed, color=darkseagreen4, label=string];
n115 -> n119  [key=1, style=dashed, color=darkseagreen4, label=string];
n116 -> n117  [key=0, style=solid];
n116 -> n119  [key=1, style=dashed, color=darkseagreen4, label=value];
n116 -> n121  [key=1, style=dashed, color=darkseagreen4, label=value];
n116 -> n61  [key=3, color=darkorchid, style=bold, label="Local variable int value"];
n118 -> n119  [key=0, style=solid];
n118 -> n121  [key=0, style=solid];
n118 -> n61  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n119 -> n120  [key=0, style=solid];
n119 -> n119  [key=1, style=dashed, color=darkseagreen4, label=value];
n119 -> n121  [key=1, style=dashed, color=darkseagreen4, label=value];
n117 -> n118  [key=0, style=solid];
n117 -> n119  [key=1, style=dashed, color=darkseagreen4, label=i];
n117 -> n120  [key=1, style=dashed, color=darkseagreen4, label=i];
n121 -> n122  [key=0, style=solid];
n120 -> n118  [key=0, style=solid];
n120 -> n120  [key=1, style=dashed, color=darkseagreen4, label=i];
n122 -> n115  [key=0, style=bold, color=blue];
n123 -> n124  [key=0, style=solid];
n123 -> n126  [key=1, style=dashed, color=darkseagreen4, label=string];
n123 -> n127  [key=1, style=dashed, color=darkseagreen4, label=string];
n124 -> n125  [key=0, style=solid];
n124 -> n127  [key=1, style=dashed, color=darkseagreen4, label=value];
n124 -> n129  [key=1, style=dashed, color=darkseagreen4, label=value];
n124 -> n61  [key=3, color=darkorchid, style=bold, label="Local variable long value"];
n126 -> n127  [key=0, style=solid];
n126 -> n129  [key=0, style=solid];
n126 -> n61  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n127 -> n128  [key=0, style=solid];
n127 -> n127  [key=1, style=dashed, color=darkseagreen4, label=value];
n127 -> n129  [key=1, style=dashed, color=darkseagreen4, label=value];
n125 -> n126  [key=0, style=solid];
n125 -> n127  [key=1, style=dashed, color=darkseagreen4, label=i];
n125 -> n128  [key=1, style=dashed, color=darkseagreen4, label=i];
n129 -> n130  [key=0, style=solid];
n128 -> n126  [key=0, style=solid];
n128 -> n128  [key=1, style=dashed, color=darkseagreen4, label=i];
n130 -> n123  [key=0, style=bold, color=blue];
n131 -> n132  [key=0, style=solid];
n131 -> n133  [key=1, style=dashed, color=darkseagreen4, label=int];
n131 -> n135  [key=1, style=dashed, color=darkseagreen4, label=string];
n131 -> n136  [key=1, style=dashed, color=darkseagreen4, label=string];
n131 -> n139  [key=1, style=dashed, color=darkseagreen4, label=string];
n131 -> n144  [key=1, style=dashed, color=darkseagreen4, label=string];
n132 -> n133  [key=0, style=solid];
n132 -> n137  [key=1, style=dashed, color=darkseagreen4, label=last];
n132 -> n138  [key=1, style=dashed, color=darkseagreen4, label=last];
n132 -> n139  [key=1, style=dashed, color=darkseagreen4, label=last];
n132 -> n142  [key=1, style=dashed, color=darkseagreen4, label=last];
n132 -> n143  [key=1, style=dashed, color=darkseagreen4, label=last];
n132 -> n144  [key=1, style=dashed, color=darkseagreen4, label=last];
n132 -> n61  [key=3, color=darkorchid, style=bold, label="Local variable int last"];
n132 -> n135  [key=3, color=darkorchid, style=bold, label="Local variable int last"];
n133 -> n134  [key=0, style=solid];
n133 -> n147  [key=2, style=dotted];
n133 -> n139  [key=1, style=dashed, color=darkseagreen4, label=csv];
n133 -> n144  [key=1, style=dashed, color=darkseagreen4, label=csv];
n133 -> n145  [key=1, style=dashed, color=darkseagreen4, label=csv];
n135 -> n136  [key=0, style=solid];
n135 -> n142  [key=0, style=solid];
n135 -> n61  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n136 -> n137  [key=0, style=solid];
n136 -> n141  [key=0, style=solid];
n139 -> n140  [key=0, style=solid];
n139 -> n148  [key=2, style=dotted];
n139 -> n149  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n150  [key=2, style=dotted];
n144 -> n149  [key=2, style=dotted];
n137 -> n138  [key=0, style=solid];
n137 -> n139  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n138 -> n138  [key=1, style=dashed, color=darkseagreen4, label=last];
n142 -> n143  [key=0, style=solid];
n142 -> n144  [key=0, style=solid];
n143 -> n144  [key=0, style=solid];
n143 -> n143  [key=1, style=dashed, color=darkseagreen4, label=last];
n134 -> n135  [key=0, style=solid];
n134 -> n136  [key=1, style=dashed, color=darkseagreen4, label=i];
n134 -> n139  [key=1, style=dashed, color=darkseagreen4, label=i];
n134 -> n140  [key=1, style=dashed, color=darkseagreen4, label=i];
n134 -> n141  [key=1, style=dashed, color=darkseagreen4, label=i];
n145 -> n146  [key=0, style=solid];
n140 -> n141  [key=0, style=solid];
n140 -> n142  [key=1, style=dashed, color=darkseagreen4, label=last];
n140 -> n143  [key=1, style=dashed, color=darkseagreen4, label=last];
n140 -> n144  [key=1, style=dashed, color=darkseagreen4, label=last];
n141 -> n135  [key=0, style=solid];
n141 -> n141  [key=1, style=dashed, color=darkseagreen4, label=i];
n146 -> n131  [key=0, style=bold, color=blue];
n151 -> n152  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n152 -> n154  [key=2, style=dotted];
n152 -> n66  [key=2, style=dotted];
n153 -> n151  [key=0, style=bold, color=blue];
n155 -> n156  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n156 -> n114  [key=2, style=dotted];
n157 -> n155  [key=0, style=bold, color=blue];
n158 -> n159  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n159 -> n165  [key=2, style=dotted];
n159 -> n150  [key=2, style=dotted];
n159 -> n161  [key=1, style=dashed, color=darkseagreen4, label=ext];
n159 -> n163  [key=1, style=dashed, color=darkseagreen4, label=ext];
n160 -> n161  [key=0, style=solid];
n160 -> n166  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n163  [key=0, style=solid];
n161 -> n167  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n162 -> n163  [key=0, style=solid];
n164 -> n158  [key=0, style=bold, color=blue];
n168 -> n169  [key=0, style=solid];
n168 -> n171  [key=1, style=dashed, color=darkseagreen4, label=string];
n169 -> n170  [key=0, style=solid];
n169 -> n176  [key=2, style=dotted];
n169 -> n173  [key=1, style=dashed, color=darkseagreen4, label=stream];
n169 -> n174  [key=1, style=dashed, color=darkseagreen4, label=stream];
n171 -> n172  [key=0, style=solid];
n171 -> n178  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n177  [key=2, style=dotted];
n170 -> n172  [key=1, style=dashed, color=darkseagreen4, label=writer];
n173 -> n174  [key=0, style=solid];
n174 -> n175  [key=0, style=solid];
n172 -> n173  [key=0, style=solid];
n172 -> n179  [key=2, style=dotted];
n175 -> n168  [key=0, style=bold, color=blue];
n180 -> n181  [key=0, style=solid];
n180 -> n182  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n180 -> n183  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n180 -> n180  [key=3, color=darkorchid, style=bold, label="method methodReturn System.TimeSpan Round"];
n180 -> n188  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan roundingInterval"];
n180 -> n61  [key=3, color=darkorchid, style=bold, label="Parameter variable System.MidpointRounding roundingType"];
n181 -> n182  [key=0, style=solid];
n181 -> n183  [key=0, style=solid];
n182 -> n184  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n183 -> n185  [key=2, style=dotted];
n183 -> n186  [key=2, style=dotted];
n183 -> n187  [key=2, style=dotted];
n183 -> n183  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n184 -> n180  [key=0, style=bold, color=blue];
n188 -> n189  [key=0, style=solid];
n188 -> n180  [key=3, color=darkorchid, style=bold, label="method methodReturn System.TimeSpan Round"];
n188 -> n207  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan roundingInterval"];
n189 -> n190  [key=0, style=solid];
n189 -> n180  [key=2, style=dotted];
n190 -> n188  [key=0, style=bold, color=blue];
n191 -> n192  [key=0, style=solid];
n191 -> n193  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n191 -> n194  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n191 -> n191  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime RoundDown"];
n191 -> n197  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan interval"];
n192 -> n193  [key=0, style=solid];
n192 -> n194  [key=0, style=solid];
n193 -> n195  [key=0, style=solid];
n194 -> n195  [key=0, style=solid];
n194 -> n196  [key=2, style=dotted];
n194 -> n194  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n195 -> n191  [key=0, style=bold, color=blue];
n197 -> n198  [key=0, style=solid];
n197 -> n199  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n197 -> n200  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n197 -> n201  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n197 -> n202  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n197 -> n197  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime ExchangeRoundDown"];
n198 -> n199  [key=0, style=solid];
n198 -> n200  [key=0, style=solid];
n199 -> n204  [key=0, style=solid];
n200 -> n201  [key=0, style=solid];
n200 -> n205  [key=2, style=dotted];
n200 -> n202  [key=1, style=dashed, color=darkseagreen4, label=rounded];
n200 -> n203  [key=1, style=dashed, color=darkseagreen4, label=rounded];
n200 -> n191  [key=3, color=darkorchid, style=bold, label="Local variable System.DateTime rounded"];
n200 -> n197  [key=3, color=darkorchid, style=bold, label="Local variable System.DateTime rounded"];
n201 -> n202  [key=0, style=solid];
n201 -> n203  [key=0, style=solid];
n201 -> n206  [key=2, style=dotted];
n202 -> n201  [key=0, style=solid];
n202 -> n202  [key=1, style=dashed, color=darkseagreen4, label=rounded];
n202 -> n203  [key=1, style=dashed, color=darkseagreen4, label=rounded];
n203 -> n204  [key=0, style=solid];
n204 -> n197  [key=0, style=bold, color=blue];
n207 -> n208  [key=0, style=solid];
n208 -> n209  [key=0, style=solid];
n208 -> n210  [key=2, style=dotted];
n208 -> n211  [key=2, style=dotted];
n209 -> n207  [key=0, style=bold, color=blue];
n212 -> n213  [key=0, style=solid];
n212 -> n214  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n212 -> n215  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n212 -> n212  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime RoundUp"];
n213 -> n214  [key=0, style=solid];
n213 -> n215  [key=0, style=solid];
n214 -> n216  [key=0, style=solid];
n215 -> n216  [key=0, style=solid];
n215 -> n210  [key=2, style=dotted];
n215 -> n215  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n216 -> n212  [key=0, style=bold, color=blue];
n217 -> n218  [key=0, style=solid];
n217 -> n219  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n217 -> n220  [key=1, style=dashed, color=darkseagreen4, label=bool];
n217 -> n221  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n217 -> n222  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n217 -> n217  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime ConvertTo"];
n217 -> n230  [key=3, color=darkorchid, style=bold, label="Parameter variable bool strict"];
n218 -> n219  [key=0, style=solid];
n218 -> n220  [key=0, style=solid];
n218 -> n224  [key=2, style=dotted];
n219 -> n223  [key=0, style=solid];
n220 -> n221  [key=0, style=solid];
n220 -> n222  [key=0, style=solid];
n221 -> n223  [key=0, style=solid];
n221 -> n225  [key=2, style=dotted];
n221 -> n226  [key=2, style=dotted];
n221 -> n227  [key=2, style=dotted];
n221 -> n228  [key=2, style=dotted];
n222 -> n223  [key=0, style=solid];
n222 -> n225  [key=2, style=dotted];
n222 -> n229  [key=2, style=dotted];
n222 -> n227  [key=2, style=dotted];
n222 -> n228  [key=2, style=dotted];
n223 -> n217  [key=0, style=bold, color=blue];
n230 -> n231  [key=0, style=solid];
n230 -> n217  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime ConvertFromUtc"];
n231 -> n232  [key=0, style=solid];
n231 -> n233  [key=2, style=dotted];
n232 -> n230  [key=0, style=bold, color=blue];
n234 -> n235  [key=0, style=solid];
n234 -> n236  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n234 -> n237  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n235 -> n236  [key=0, style=solid];
n235 -> n237  [key=0, style=solid];
n236 -> n238  [key=0, style=solid];
n236 -> n225  [key=2, style=dotted];
n236 -> n226  [key=2, style=dotted];
n236 -> n239  [key=2, style=dotted];
n237 -> n238  [key=0, style=solid];
n237 -> n225  [key=2, style=dotted];
n237 -> n229  [key=2, style=dotted];
n237 -> n239  [key=2, style=dotted];
n238 -> n234  [key=0, style=bold, color=blue];
n240 -> n241  [key=0, style=solid];
n240 -> n242  [key=1, style=dashed, color=darkseagreen4, label="System.Timers.Timer"];
n241 -> n242  [key=0, style=solid];
n241 -> n244  [key=2, style=dotted];
n242 -> n243  [key=0, style=solid];
n242 -> n245  [key=2, style=dotted];
n243 -> n240  [key=0, style=bold, color=blue];
n246 -> n247  [key=0, style=solid];
n246 -> n249  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n246 -> n251  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n246 -> n248  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchesTypeName"];
n246 -> n100  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MatchesTypeName"];
n247 -> n248  [key=0, style=solid];
n247 -> n249  [key=0, style=solid];
n249 -> n250  [key=0, style=solid];
n249 -> n251  [key=0, style=solid];
n251 -> n252  [key=0, style=solid];
n251 -> n253  [key=0, style=solid];
n248 -> n254  [key=0, style=solid];
n250 -> n254  [key=0, style=solid];
n252 -> n254  [key=0, style=solid];
n253 -> n254  [key=0, style=solid];
n254 -> n246  [key=0, style=bold, color=blue];
n255 -> n256  [key=0, style=solid];
n255 -> n258  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n255 -> n259  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n255 -> n260  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n255 -> n261  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n255 -> n263  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n255 -> n248  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsSubclassOfGeneric"];
n255 -> n100  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsSubclassOfGeneric"];
n256 -> n257  [key=0, style=solid];
n256 -> n264  [key=0, style=solid];
n258 -> n259  [key=0, style=solid];
n258 -> n260  [key=0, style=solid];
n259 -> n261  [key=0, style=solid];
n259 -> n266  [key=2, style=dotted];
n260 -> n261  [key=0, style=solid];
n261 -> n262  [key=0, style=solid];
n261 -> n263  [key=0, style=solid];
n263 -> n256  [key=0, style=solid];
n263 -> n263  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n257 -> n258  [key=0, style=solid];
n257 -> n255  [key=3, color=darkorchid, style=bold, label="Local variable System.Type cur"];
n264 -> n265  [key=0, style=solid];
n262 -> n265  [key=0, style=solid];
n265 -> n255  [key=0, style=bold, color=blue];
n267 -> n268  [key=0, style=solid];
n267 -> n269  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n267 -> n270  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n268 -> n269  [key=0, style=solid];
n268 -> n272  [key=1, style=dashed, color=darkseagreen4, label=name];
n268 -> n273  [key=1, style=dashed, color=darkseagreen4, label=name];
n269 -> n270  [key=0, style=solid];
n269 -> n273  [key=0, style=solid];
n270 -> n271  [key=0, style=solid];
n270 -> n275  [key=2, style=dotted];
n270 -> n272  [key=1, style=dashed, color=darkseagreen4, label=genericArguments];
n272 -> n273  [key=0, style=solid];
n272 -> n276  [key=2, style=dotted];
n272 -> n277  [key=2, style=dotted];
n272 -> n278  [key=2, style=dotted];
n272 -> n272  [key=1, style=dashed, color=darkseagreen4, label=name];
n272 -> n279  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n273 -> n274  [key=0, style=solid];
n271 -> n272  [key=0, style=solid];
n279 -> n280  [key=0, style=solid];
n274 -> n267  [key=0, style=bold, color=blue];
n280 -> n281  [key=0, style=solid];
n280 -> n282  [key=2, style=dotted];
n281 -> n279  [key=0, style=bold, color=blue];
n283 -> n284  [key=0, style=solid];
n284 -> n285  [key=0, style=solid];
n284 -> n287  [key=0, style=solid];
n284 -> n289  [key=0, style=solid];
n284 -> n291  [key=0, style=solid];
n284 -> n293  [key=0, style=solid];
n284 -> n295  [key=0, style=solid];
n285 -> n286  [key=0, style=solid];
n287 -> n288  [key=0, style=solid];
n289 -> n290  [key=0, style=solid];
n291 -> n292  [key=0, style=solid];
n293 -> n294  [key=0, style=solid];
n295 -> n296  [key=0, style=solid];
n295 -> n302  [key=2, style=dotted];
n286 -> n296  [key=0, style=solid];
n286 -> n297  [key=2, style=dotted];
n288 -> n296  [key=0, style=solid];
n288 -> n298  [key=2, style=dotted];
n290 -> n296  [key=0, style=solid];
n290 -> n299  [key=2, style=dotted];
n292 -> n296  [key=0, style=solid];
n292 -> n300  [key=2, style=dotted];
n294 -> n296  [key=0, style=solid];
n294 -> n301  [key=2, style=dotted];
n296 -> n283  [key=0, style=bold, color=blue];
n303 -> n304  [key=0, style=solid];
n303 -> n306  [key=3, color=darkorchid, style=bold, label="method methodReturn T ConvertTo"];
n304 -> n305  [key=0, style=solid];
n304 -> n306  [key=2, style=dotted];
n305 -> n303  [key=0, style=bold, color=blue];
n306 -> n314  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertTo"];
n307 -> n308  [key=0, style=solid];
n307 -> n309  [key=1, style=dashed, color=darkseagreen4, label=string];
n307 -> n310  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n307 -> n311  [key=1, style=dashed, color=darkseagreen4, label=string];
n307 -> n312  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
n307 -> n314  [key=1, style=dashed, color=darkseagreen4, label=string];
n307 -> n316  [key=1, style=dashed, color=darkseagreen4, label=string];
n308 -> n309  [key=0, style=solid];
n308 -> n310  [key=0, style=solid];
n309 -> n317  [key=0, style=solid];
n309 -> n318  [key=2, style=dotted];
n310 -> n311  [key=0, style=solid];
n310 -> n312  [key=0, style=solid];
n310 -> n319  [key=2, style=dotted];
n311 -> n317  [key=0, style=solid];
n311 -> n320  [key=2, style=dotted];
n312 -> n313  [key=0, style=solid];
n312 -> n321  [key=2, style=dotted];
n312 -> n314  [key=1, style=dashed, color=darkseagreen4, label=parse];
n314 -> n315  [key=0, style=solid];
n314 -> n322  [key=2, style=dotted];
n316 -> n317  [key=0, style=solid];
n316 -> n323  [key=2, style=dotted];
n313 -> n314  [key=0, style=solid];
n313 -> n316  [key=0, style=solid];
n315 -> n317  [key=0, style=solid];
n317 -> n307  [key=0, style=bold, color=blue];
n324 -> n325  [key=0, style=solid];
n324 -> n327  [key=3, color=darkorchid, style=bold, label="method methodReturn bool WaitOne"];
n325 -> n326  [key=0, style=solid];
n325 -> n327  [key=2, style=dotted];
n326 -> n324  [key=0, style=bold, color=blue];
n327 -> n325  [key=3, color=darkorchid, style=bold, label="Parameter variable int millisecondsTimeout"];
n327 -> n324  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Threading.CancellationToken cancellationToken"];
n327 -> n328  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Threading.CancellationToken cancellationToken"];
n328 -> n329  [key=0, style=solid];
n328 -> n327  [key=3, color=darkorchid, style=bold, label="method methodReturn bool WaitOne"];
n329 -> n330  [key=0, style=solid];
n329 -> n327  [key=2, style=dotted];
n329 -> n329  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n330 -> n328  [key=0, style=bold, color=blue];
n331 -> n332  [key=0, style=solid];
n332 -> n333  [key=0, style=solid];
n332 -> n334  [key=2, style=dotted];
n332 -> n332  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
n333 -> n331  [key=0, style=bold, color=blue];
n335 -> n336  [key=0, style=solid];
n335 -> n337  [key=1, style=dashed, color=darkseagreen4, label="System.IO.Stream"];
n336 -> n337  [key=0, style=solid];
n336 -> n36  [key=2, style=dotted];
n337 -> n338  [key=0, style=solid];
n337 -> n339  [key=2, style=dotted];
n338 -> n335  [key=0, style=bold, color=blue];
n340 -> n341  [key=0, style=solid];
n340 -> n342  [key=1, style=dashed, color=darkseagreen4, label=string];
n340 -> n344  [key=1, style=dashed, color=darkseagreen4, label=string];
n340 -> n345  [key=1, style=dashed, color=darkseagreen4, label=string];
n340 -> n340  [key=3, color=darkorchid, style=bold, label="method methodReturn string WithEmbeddedHtmlAnchors"];
n341 -> n342  [key=0, style=solid];
n341 -> n347  [key=2, style=dotted];
n342 -> n343  [key=0, style=solid];
n342 -> n348  [key=2, style=dotted];
n344 -> n343  [key=0, style=solid];
n344 -> n349  [key=2, style=dotted];
n344 -> n344  [key=1, style=dashed, color=darkseagreen4, label=string];
n344 -> n345  [key=1, style=dashed, color=darkseagreen4, label=string];
n345 -> n346  [key=0, style=solid];
n343 -> n344  [key=0, style=solid];
n343 -> n345  [key=0, style=solid];
n346 -> n340  [key=0, style=bold, color=blue];
n350 -> n351  [key=0, style=solid];
n351 -> n352  [key=0, style=solid];
n351 -> n353  [key=2, style=dotted];
n351 -> n354  [key=2, style=dotted];
n352 -> n350  [key=0, style=bold, color=blue];
d4 -> d5  [key=0, style=solid, color=green];
d4 -> d6  [key=1, style=dashed, color=green, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
d3 -> d4  [key=0, style=solid, color=green];
d5 -> d6  [key=0, style=solid];
d6 -> d3  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_14  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_15  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_16  [key=2, style=dotted];
m1_14 -> m1_10  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid, color=red];
m1_3 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid, color=red];
m1_4 -> m1_9  [key=2, style=dotted, color=red];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_17 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m1_17 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m1_17 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m1_17 -> m1_4  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m1_17 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m1_17 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m1_17 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateAlgorithm"];
m2_20 -> m2_37  [key=0, style=solid];
m2_20 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorDataPoint"];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=handler];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_40  [key=0, style=solid];
m2_40 -> m2_20  [key=0, style=bold, color=blue];
m2_19 -> m2_36  [key=0, style=solid];
m2_19 -> m2_5  [key=3, color=darkorchid, style=bold, label="Parameter variable T input"];
m2_36 -> m2_19  [key=0, style=bold, color=blue];
m2_32 -> m2_33  [key=0, style=solid];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_35  [key=2, style=dotted];
m2_34 -> m2_32  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_5 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_5 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_5 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_5 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=0, style=solid];
m2_7 -> m2_15  [key=0, style=solid];
m2_7 -> m2_16  [key=2, style=dotted];
m2_7 -> m2_17  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_14  [key=0, style=solid];
m2_8 -> m2_18  [key=2, style=dotted];
m2_10 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_19  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_4  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_20  [key=2, style=dotted];
m2_15 -> m2_5  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_25  [key=0, style=bold, color=blue];
m2_28 -> m2_29  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_31  [key=2, style=dotted];
m2_30 -> m2_28  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [key=2, style=dotted];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_4  [key=2, style=dotted];
m2_24 -> m2_21  [key=0, style=bold, color=blue];
m2_42 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m2_42 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_14  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_15  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_16  [key=2, style=dotted];
m3_14 -> m3_10  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_6  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_7  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_0  [key=0, style=bold, color=blue];
m3_17 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm"];
m3_17 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm"];
m3_17 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm"];
m3_17 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm"];
m3_17 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm"];
m3_17 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm"];
m3_17 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.BasicTemplateFillForwardAlgorithm"];
m4_57 -> m4_68  [key=0, style=solid];
m4_57 -> m4_69  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.Data.BaseData>"];
m4_68 -> m4_30  [key=2, style=dotted];
m4_68 -> m4_69  [key=0, style=solid];
m4_69 -> m4_32  [key=2, style=dotted];
m4_69 -> m4_70  [key=0, style=solid];
m4_70 -> m4_57  [key=0, style=bold, color=blue];
m4_29 -> m4_28  [key=0, style=solid, color=red];
m4_29 -> m4_23  [key=2, style=dotted, color=red];
m4_118 -> m4_196  [key=0, style=solid];
m4_118 -> m4_199  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m4_197 -> m4_50  [key=2, style=dotted];
m4_197 -> m4_198  [key=0, style=solid];
m4_197 -> m4_199  [key=0, style=solid];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_198  [key=1, style=dashed, color=darkseagreen4, label=value];
m4_198 -> m4_200  [key=0, style=solid];
m4_198 -> m4_201  [key=2, style=dotted];
m4_199 -> m4_200  [key=0, style=solid];
m4_199 -> m4_202  [key=2, style=dotted];
m4_200 -> m4_118  [key=0, style=bold, color=blue];
m4_81 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_81 -> m4_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_106  [key=0, style=bold, color=crimson];
m4_99 -> m4_118  [key=2, style=dotted];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_102  [key=0, style=solid];
m4_98 -> m4_118  [key=2, style=dotted];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m4_90 -> n166  [key=2, style=dotted];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label=currentEpochTicks];
m4_90 -> m4_107  [key=1, style=dashed, color=darkseagreen4, label=currentEpochTicks];
m4_90 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label=currentEpochTicks];
m4_87 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label=priceColumn];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_114  [key=2, style=dotted];
m4_87 -> m4_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_94 -> m4_99  [key=1, style=dashed, color=darkseagreen4, label=lineParts];
m4_94 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label=lineParts];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_116  [key=2, style=dotted];
m4_94 -> m4_101  [key=1, style=dashed, color=darkseagreen4, label=lineParts];
m4_94 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label=lineParts];
m4_100 -> m4_101  [key=0, style=solid];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_121  [key=2, style=dotted];
m4_102 -> m4_122  [key=2, style=dotted];
m4_102 -> m4_109  [key=1, style=dashed, color=darkseagreen4, label=currentTick];
m4_88 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label=quantityColumn];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_114  [key=2, style=dotted];
m4_88 -> m4_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_97 -> m4_98  [key=0, style=solid];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label=currentEpoch];
m4_89 -> m4_104  [key=1, style=dashed, color=darkseagreen4, label=currentEpoch];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_110  [key=0, style=solid];
m4_91 -> m4_115  [key=2, style=dotted];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_122  [key=2, style=dotted];
m4_104 -> m4_123  [key=2, style=dotted];
m4_104 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label=quoteTick];
m4_107 -> m4_108  [key=0, style=solid];
m4_107 -> m4_124  [key=2, style=dotted];
m4_109 -> m4_91  [key=0, style=solid];
m4_109 -> m4_125  [key=2, style=dotted];
m4_84 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label=headerCsv];
m4_84 -> m4_88  [key=1, style=dashed, color=darkseagreen4, label=headerCsv];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_113  [key=2, style=dotted];
m4_84 -> m4_86  [key=1, style=dashed, color=darkseagreen4, label=headerCsv];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_114  [key=2, style=dotted];
m4_86 -> m4_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_86 -> m4_95  [key=1, style=dashed, color=darkseagreen4, label=dateColumn];
m4_92 -> m4_94  [key=1, style=dashed, color=darkseagreen4, label=line];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_112  [key=2, style=dotted];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_91  [key=0, style=solid];
m4_95 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label=tickEpoch];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_117  [key=2, style=dotted];
m4_95 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label=tickEpoch];
m4_95 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label=tickEpoch];
m4_101 -> m4_91  [key=0, style=solid];
m4_101 -> m4_119  [key=2, style=dotted];
m4_101 -> m4_120  [key=2, style=dotted];
m4_85 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label=typeColumn];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_114  [key=2, style=dotted];
m4_85 -> m4_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_109  [key=0, style=solid];
m4_96 -> m4_97  [key=0, style=solid];
m4_82 -> m4_91  [key=1, style=dashed, color=darkseagreen4, label=sr];
m4_82 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label=sr];
m4_82 -> m4_83  [key=0, style=solid];
m4_82 -> m4_111  [key=2, style=dotted];
m4_105 -> m4_107  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_106 -> m4_107  [key=0, style=solid];
m4_108 -> m4_109  [key=0, style=solid];
m4_83 -> m4_84  [key=0, style=solid];
m4_83 -> m4_112  [key=2, style=dotted];
m4_110 -> m4_81  [key=0, style=bold, color=blue];
m4_165 -> m4_166  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid, color=red];
m4_24 -> m4_13  [key=0, style=bold, color=blue];
m4_25 -> m4_26  [key=0, style=solid, color=red];
m4_26 -> m4_24  [key=0, style=bold, color=blue];
m4_132 -> m4_133  [key=0, style=solid];
m4_135 -> m4_136  [key=0, style=solid];
m4_190 -> m4_191  [key=0, style=solid];
m4_193 -> m4_194  [key=0, style=solid];
m4_129 -> m4_130  [key=0, style=solid];
m4_134 -> m4_132  [key=0, style=bold, color=blue];
m4_133 -> m4_134  [key=0, style=solid];
m4_126 -> m4_127  [key=0, style=solid];
m4_137 -> m4_135  [key=0, style=bold, color=blue];
m4_136 -> m4_137  [key=0, style=solid];
m4_187 -> m4_188  [key=0, style=solid];
m4_192 -> m4_190  [key=0, style=bold, color=blue];
m4_191 -> m4_192  [key=0, style=solid];
m4_195 -> m4_193  [key=0, style=bold, color=blue];
m4_194 -> m4_195  [key=0, style=solid];
m4_131 -> m4_129  [key=0, style=bold, color=blue];
m4_130 -> m4_131  [key=0, style=solid];
m4_128 -> m4_126  [key=0, style=bold, color=blue];
m4_127 -> m4_128  [key=0, style=solid];
m4_189 -> m4_187  [key=0, style=bold, color=blue];
m4_188 -> m4_189  [key=0, style=solid];
m4_156 -> m4_157  [key=0, style=solid];
m4_159 -> m4_160  [key=0, style=solid];
m4_162 -> m4_163  [key=0, style=solid];
m4_158 -> m4_156  [key=0, style=bold, color=blue];
m4_157 -> m4_158  [key=0, style=solid];
m4_161 -> m4_159  [key=0, style=bold, color=blue];
m4_160 -> m4_161  [key=0, style=solid];
m4_164 -> m4_162  [key=0, style=bold, color=blue];
m4_163 -> m4_164  [key=0, style=solid];
m4_166 -> m4_167  [key=0, style=solid];
m4_167 -> m4_165  [key=0, style=bold, color=blue];
m4_123 -> m4_138  [key=0, style=solid];
m4_123 -> m4_139  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<QuantConnect.ToolBox.KaikoDataConverter.Program.KaikoTick>"];
m4_123 -> m4_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_142 -> m4_155  [key=2, style=dotted];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=tick];
m4_142 -> m4_145  [key=1, style=dashed, color=darkseagreen4, label=tick];
m4_142 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=tick];
m4_142 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label=tick];
m4_142 -> m4_149  [key=1, style=dashed, color=darkseagreen4, label=tick];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_151  [key=2, style=dotted];
m4_138 -> m4_152  [key=2, style=dotted];
m4_138 -> m4_153  [key=2, style=dotted];
m4_138 -> m4_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_138 -> m4_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_138 -> m4_140  [key=1, style=dashed, color=darkseagreen4, label=bestAsk];
m4_138 -> m4_146  [key=1, style=dashed, color=darkseagreen4, label=bestAsk];
m4_138 -> m4_147  [key=1, style=dashed, color=darkseagreen4, label=bestAsk];
m4_138 -> m4_148  [key=1, style=dashed, color=darkseagreen4, label=bestAsk];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_151  [key=2, style=dotted];
m4_139 -> m4_154  [key=2, style=dotted];
m4_139 -> m4_153  [key=2, style=dotted];
m4_139 -> m4_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_139 -> m4_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_139 -> m4_143  [key=1, style=dashed, color=darkseagreen4, label=bestBid];
m4_139 -> m4_144  [key=1, style=dashed, color=darkseagreen4, label=bestBid];
m4_139 -> m4_145  [key=1, style=dashed, color=darkseagreen4, label=bestBid];
m4_140 -> m4_142  [key=0, style=solid];
m4_140 -> m4_141  [key=0, style=solid];
m4_143 -> m4_144  [key=0, style=solid];
m4_143 -> m4_146  [key=0, style=solid];
m4_144 -> m4_145  [key=0, style=solid];
m4_145 -> m4_146  [key=0, style=solid];
m4_147 -> m4_148  [key=0, style=solid];
m4_148 -> m4_149  [key=0, style=solid];
m4_149 -> m4_150  [key=0, style=solid];
m4_141 -> m4_150  [key=0, style=solid];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_149  [key=0, style=solid];
m4_150 -> m4_123  [key=0, style=bold, color=blue];
m4_0 -> m4_3  [key=1, style=dashed, color=green, label="string[]"];
m4_0 -> m4_4  [key=1, style=dashed, color=green, label="string[]"];
m4_0 -> m4_5  [key=1, style=dashed, color=green, label="string[]"];
m4_0 -> m4_1  [key=0, style=solid, color=red];
m4_3 -> m4_4  [key=0, style=solid, color=red];
m4_3 -> m4_7  [key=1, style=dashed, color=green, label=market];
m4_3 -> m4_8  [key=1, style=dashed, color=green, label=market];
m4_3 -> m4_9  [key=1, style=dashed, color=green, label=market];
m4_3 -> m4_10  [key=1, style=dashed, color=green, label=market];
m4_3 -> m4_17  [key=2, style=dotted];
m4_1 -> m4_3  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid, color=red];
m4_1 -> m4_15  [key=2, style=dotted, color=red];
m4_4 -> m4_5  [key=0, style=solid, color=red];
m4_4 -> m4_6  [key=1, style=dashed, color=green, label=tickType];
m4_4 -> m4_7  [key=1, style=dashed, color=green, label=tickType];
m4_4 -> m4_8  [key=1, style=dashed, color=green, label=tickType];
m4_4 -> m4_9  [key=1, style=dashed, color=green, label=tickType];
m4_4 -> m4_10  [key=1, style=dashed, color=green, label=tickType];
m4_4 -> m4_18  [key=2, style=dotted, color=red];
m4_7 -> m4_8  [key=0, style=solid, color=red];
m4_7 -> m4_13  [key=2, style=dotted];
m4_7 -> m4_19  [key=2, style=dotted, color=red];
m4_8 -> m4_11  [key=0, style=solid];
m4_8 -> m4_14  [key=2, style=dotted];
m4_8 -> m4_9  [key=0, style=solid, color=red];
m4_8 -> m4_19  [key=2, style=dotted, color=red];
m4_9 -> m4_10  [key=0, style=solid, color=red];
m4_9 -> m4_13  [key=2, style=dotted, color=green];
m4_9 -> m4_19  [key=2, style=dotted, color=red];
m4_10 -> m4_11  [key=0, style=solid, color=red];
m4_10 -> m4_14  [key=2, style=dotted];
m4_10 -> m4_20  [key=2, style=dotted, color=red];
m4_10 -> m4_21  [key=2, style=dotted, color=red];
m4_5 -> m4_6  [key=0, style=solid, color=red];
m4_5 -> m4_7  [key=1, style=dashed, color=green, label=fileLocation];
m4_5 -> m4_9  [key=1, style=dashed, color=green, label=fileLocation];
m4_5 -> m4_18  [key=2, style=dotted, color=red];
m4_6 -> m4_9  [key=0, style=solid, color=green];
m4_6 -> m4_7  [key=0, style=solid, color=red];
m4_6 -> m4_18  [key=2, style=dotted, color=red];
m4_2 -> m4_11  [key=0, style=solid, color=green];
m4_2 -> m4_12  [key=2, style=dotted, color=green];
m4_2 -> m4_3  [key=0, style=solid, color=red];
m4_2 -> m4_16  [key=2, style=dotted, color=red];
m4_11 -> m4_0  [key=0, style=bold, color=blue];
m4_11 -> m4_12  [key=0, style=solid, color=red];
m4_11 -> m4_14  [key=0, style=solid, color=red];
m4_11 -> m4_22  [key=2, style=dotted, color=red];
m4_11 -> m4_24  [key=1, style=dashed, color=red, label="lambda expression"];
m4_11 -> m4_13  [key=1, style=dashed, color=red, label=data];
m4_14 -> m4_34  [key=0, style=solid];
m4_14 -> m4_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_14 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TickType"];
m4_14 -> m4_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TickType"];
m4_14 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TickType"];
m4_14 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TickType"];
m4_14 -> m4_0  [key=0, style=bold, color=blue];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_48  [key=2, style=dotted];
m4_37 -> m4_27  [key=2, style=dotted];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m4_37 -> m4_46  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_38  [key=0, style=solid];
m4_39 -> m4_49  [key=2, style=dotted];
m4_39 -> m4_50  [key=2, style=dotted];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_51  [key=2, style=dotted];
m4_40 -> m4_43  [key=1, style=dashed, color=darkseagreen4, label=consolidators];
m4_40 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label=consolidators];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_52  [key=2, style=dotted];
m4_46 -> m4_45  [key=0, style=solid];
m4_46 -> m4_56  [key=2, style=dotted];
m4_46 -> m4_57  [key=2, style=dotted];
m4_35 -> m4_47  [key=0, style=solid];
m4_35 -> m4_25  [key=2, style=dotted];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_26  [key=2, style=dotted];
m4_36 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label=symbolDirectoryInfo];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label=tickDateFile];
m4_38 -> m4_28  [key=2, style=dotted];
m4_38 -> m4_35  [key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_42  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_38  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_45  [key=0, style=solid];
m4_42 -> m4_53  [key=2, style=dotted];
m4_42 -> m4_54  [key=2, style=dotted];
m4_42 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_42 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label=tickBar];
m4_44 -> m4_43  [key=0, style=solid];
m4_44 -> m4_55  [key=2, style=dotted];
m4_47 -> m4_14  [key=0, style=bold, color=blue];
m4_18 -> m4_20  [key=1, style=dashed, color=darkseagreen4, label=symbolMonthDirectory];
m4_18 -> m4_15  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_25  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid, color=red];
m4_27 -> m4_29  [key=1, style=dashed, color=red, label="QuantConnect.Data.Slice"];
m4_15 -> m4_24  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_25  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_11  [key=0, style=solid, color=red];
m4_30 -> m4_27  [key=0, style=bold, color=blue];
m4_31 -> m4_1  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_2  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_4  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_5  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_6  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_7  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_8  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_9  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_10  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_31 -> m4_29  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.BasicTemplateForexAlgorithm"];
m4_28 -> m4_29  [key=0, style=solid, color=red];
m4_28 -> m4_30  [key=0, style=solid, color=red];
m4_21 -> m4_22  [key=0, style=solid, color=green];
m4_21 -> m4_30  [key=2, style=dotted, color=green];
m4_23 -> m4_19  [key=0, style=solid];
m4_23 -> m4_33  [key=2, style=dotted];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_26  [key=2, style=dotted];
m4_16 -> m4_18  [key=1, style=dashed, color=darkseagreen4, label=symbolDirectoryInfo];
m4_13 -> m4_12  [key=0, style=solid];
m4_13 -> m4_23  [key=2, style=dotted];
m4_13 -> m4_21  [key=1, style=dashed, color=green, label="QuantConnect.TickType"];
m4_13 -> m4_22  [key=1, style=dashed, color=green, label="System.Func<QuantConnect.Symbol, string, System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.Tick>>"];
m4_13 -> m4_15  [key=0, style=solid];
m4_13 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_22 -> m4_23  [key=0, style=solid, color=green];
m4_22 -> m4_31  [key=2, style=dotted, color=green];
m4_22 -> m4_32  [key=2, style=dotted, color=green];
m4_17 -> m4_21  [key=1, style=dashed, color=green, label=symbol];
m4_17 -> m4_22  [key=1, style=dashed, color=green, label=symbol];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_27  [key=2, style=dotted];
m4_52 -> m4_71  [key=0, style=solid];
m4_52 -> m4_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_52 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_52 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m4_71 -> m4_72  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_78  [key=2, style=dotted];
m4_74 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_79  [key=2, style=dotted];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_80  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_73 -> m4_74  [key=0, style=solid];
m4_77 -> m4_52  [key=0, style=bold, color=blue];
m4_20 -> m4_21  [key=0, style=solid, color=green];
m4_20 -> m4_22  [key=1, style=dashed, color=green, label=unzippedFile];
m4_20 -> m4_29  [key=2, style=dotted];
m4_20 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label=unzippedFile];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_18  [key=0, style=solid];
m4_19 -> m4_28  [key=2, style=dotted];
m4_51 -> m4_61  [key=0, style=solid];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_63  [key=0, style=solid];
m4_62 -> m4_64  [key=0, style=solid];
m4_62 -> n166  [key=2, style=dotted];
m4_62 -> m4_66  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> n166  [key=2, style=dotted];
m4_63 -> m4_67  [key=2, style=dotted];
m4_64 -> m4_51  [key=0, style=bold, color=blue];
m4_168 -> m4_185  [key=0, style=bold, color=crimson];
m4_168 -> m4_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_168 -> m4_169  [key=0, style=solid];
m4_182 -> m4_118  [key=2, style=dotted];
m4_182 -> m4_183  [key=0, style=solid];
m4_182 -> m4_185  [key=0, style=solid];
m4_181 -> m4_118  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_185  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m4_173 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label=priceColumn];
m4_173 -> m4_174  [key=0, style=solid];
m4_173 -> m4_114  [key=2, style=dotted];
m4_173 -> m4_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_178 -> m4_182  [key=1, style=dashed, color=darkseagreen4, label=lineParts];
m4_178 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label=lineParts];
m4_178 -> m4_179  [key=0, style=solid];
m4_178 -> m4_116  [key=2, style=dotted];
m4_178 -> m4_184  [key=1, style=dashed, color=darkseagreen4, label=lineParts];
m4_178 -> m4_185  [key=1, style=dashed, color=darkseagreen4, label=lineParts];
m4_183 -> m4_184  [key=0, style=solid];
m4_185 -> m4_175  [key=0, style=solid];
m4_185 -> m4_155  [key=2, style=dotted];
m4_185 -> m4_117  [key=2, style=dotted];
m4_185 -> m4_122  [key=2, style=dotted];
m4_174 -> m4_181  [key=1, style=dashed, color=darkseagreen4, label=quantityColumn];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_114  [key=2, style=dotted];
m4_174 -> m4_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_180 -> m4_181  [key=0, style=solid];
m4_171 -> m4_173  [key=1, style=dashed, color=darkseagreen4, label=headerCsv];
m4_171 -> m4_174  [key=1, style=dashed, color=darkseagreen4, label=headerCsv];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_113  [key=2, style=dotted];
m4_172 -> m4_173  [key=0, style=solid];
m4_172 -> m4_185  [key=1, style=dashed, color=darkseagreen4, label=dateColumn];
m4_172 -> m4_114  [key=2, style=dotted];
m4_172 -> m4_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_176 -> m4_178  [key=1, style=dashed, color=darkseagreen4, label=line];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_112  [key=2, style=dotted];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_175  [key=0, style=solid];
m4_179 -> m4_180  [key=0, style=solid];
m4_184 -> m4_175  [key=0, style=solid];
m4_184 -> m4_119  [key=2, style=dotted];
m4_184 -> m4_120  [key=2, style=dotted];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_186  [key=0, style=solid];
m4_175 -> m4_115  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_112  [key=2, style=dotted];
m4_169 -> m4_176  [key=1, style=dashed, color=darkseagreen4, label=sr];
m4_169 -> m4_175  [key=1, style=dashed, color=darkseagreen4, label=sr];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_111  [key=2, style=dotted];
m4_186 -> m4_168  [key=0, style=bold, color=blue];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_17 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_17 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_17 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_17 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_24  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_25  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_26  [key=2, style=dotted];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_27  [key=2, style=dotted];
m6_23 -> m6_18  [key=0, style=solid];
m6_23 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_24 -> m6_16  [key=0, style=bold, color=blue];
m6_143 -> m6_148  [key=0, style=solid];
m6_143 -> m6_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m6_143 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m6_143 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_143 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_143 -> m6_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m6_143 -> m6_155  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_143 -> m6_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m6_143 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_143 -> m6_162  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_143 -> m6_163  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_143 -> m6_165  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_143 -> m6_167  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_143 -> m6_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m6_143 -> m6_170  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_143 -> m6_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m6_143 -> m6_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.SubscriptionDataReader"];
m6_143 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_143 -> m6_178  [key=1, style=dashed, color=darkseagreen4, label=int];
m6_143 -> m6_179  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_150  [key=0, style=solid];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=previous];
m6_150 -> m6_174  [key=1, style=dashed, color=darkseagreen4, label=previous];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_154  [key=1, style=dashed, color=darkseagreen4, label=current];
m6_151 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label=current];
m6_151 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label=current];
m6_151 -> m6_169  [key=1, style=dashed, color=darkseagreen4, label=current];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_154  [key=0, style=solid];
m6_153 -> m6_154  [key=0, style=solid];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_165  [key=0, style=solid];
m6_154 -> m6_181  [key=2, style=dotted];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_159  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_155 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_155 -> m6_163  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_164  [key=0, style=solid];
m6_156 -> m6_181  [key=2, style=dotted];
m6_160 -> m6_161  [key=0, style=solid];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_142  [key=2, style=dotted];
m6_163 -> m6_156  [key=0, style=solid];
m6_163 -> m6_163  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_165 -> m6_166  [key=0, style=solid];
m6_165 -> m6_168  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_165 -> m6_172  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_165 -> m6_175  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_165 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_165 -> m6_179  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_167 -> m6_168  [key=0, style=solid];
m6_167 -> m6_172  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_173  [key=0, style=solid];
m6_168 -> m6_181  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_170  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_170 -> m6_175  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_170 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_170 -> m6_179  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_171 -> m6_169  [key=0, style=solid];
m6_171 -> m6_166  [key=0, style=solid];
m6_171 -> m6_181  [key=2, style=dotted];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_166  [key=0, style=solid];
m6_172 -> m6_183  [key=2, style=dotted];
m6_176 -> m6_177  [key=0, style=solid];
m6_178 -> m6_179  [key=0, style=solid];
m6_178 -> m6_142  [key=2, style=dotted];
m6_179 -> m6_166  [key=0, style=solid];
m6_179 -> m6_179  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_149 -> m6_180  [key=0, style=solid];
m6_174 -> m6_175  [key=0, style=solid];
m6_174 -> m6_182  [key=2, style=dotted];
m6_174 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label=fillforward];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_182  [key=2, style=dotted];
m6_158 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label=fillforward];
m6_166 -> m6_167  [key=0, style=solid];
m6_166 -> m6_180  [key=0, style=solid];
m6_169 -> m6_170  [key=0, style=solid];
m6_159 -> m6_160  [key=0, style=solid];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_15  [key=2, style=dotted];
m6_157 -> m6_161  [key=1, style=dashed, color=darkseagreen4, label=cache];
m6_157 -> m6_162  [key=1, style=dashed, color=darkseagreen4, label=cache];
m6_164 -> m6_180  [key=0, style=solid];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_140  [key=2, style=dotted];
m6_175 -> m6_176  [key=0, style=solid];
m6_173 -> m6_174  [key=0, style=solid];
m6_173 -> m6_15  [key=2, style=dotted];
m6_173 -> m6_177  [key=1, style=dashed, color=darkseagreen4, label=cache];
m6_173 -> m6_178  [key=1, style=dashed, color=darkseagreen4, label=cache];
m6_177 -> m6_178  [key=0, style=solid];
m6_177 -> m6_140  [key=2, style=dotted];
m6_180 -> m6_143  [key=0, style=bold, color=blue];
m6_28 -> m6_29  [key=0, style=solid];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_32  [key=2, style=dotted];
m6_29 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label=stream];
m6_30 -> m6_31  [key=0, style=solid];
m6_31 -> m6_28  [key=0, style=bold, color=blue];
m6_184 -> m6_185  [key=0, style=solid];
m6_185 -> m6_186  [key=0, style=solid];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_188  [key=2, style=dotted];
m6_187 -> m6_184  [key=0, style=bold, color=blue];
m6_57 -> m6_58  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_63  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m6_59 -> m6_69  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m6_59 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m6_59 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m6_59 -> m6_86  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m6_59 -> m6_89  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m6_59 -> m6_106  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m6_59 -> m6_120  [key=1, style=dashed, color=darkseagreen4, label=subscriptions];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_27  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label=activeStreams];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_77  [key=0, style=solid];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_84  [key=0, style=solid];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_96  [key=1, style=dashed, color=darkseagreen4, label=cache];
m6_86 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label=cache];
m6_86 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=cache];
m6_86 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=cache];
m6_86 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label=cache];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_104  [key=0, style=solid];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_112  [key=0, style=solid];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_124  [key=0, style=solid];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_51  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_51  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_16  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_33  [key=2, style=dotted];
m6_65 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=tradeBarIncrements];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_33  [key=2, style=dotted];
m6_66 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_66 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_66 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_110 -> m6_111  [key=0, style=solid];
m6_110 -> m6_143  [key=2, style=dotted];
m6_67 -> m6_68  [key=0, style=solid];
m6_67 -> m6_117  [key=0, style=solid];
m6_67 -> m6_134  [key=2, style=dotted];
m6_67 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_67 -> m6_85  [key=1, style=dashed, color=darkseagreen4, label=date];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_135  [key=2, style=dotted];
m6_68 -> m6_85  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_68 -> m6_95  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_68 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_68 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_68 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_68 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_114 -> m6_85  [key=0, style=solid];
m6_114 -> m6_144  [key=2, style=dotted];
m6_114 -> m6_145  [key=2, style=dotted];
m6_115 -> m6_85  [key=0, style=solid];
m6_115 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_146  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_136  [key=2, style=dotted];
m6_85 -> m6_86  [key=0, style=solid];
m6_85 -> m6_116  [key=0, style=solid];
m6_85 -> m6_138  [key=2, style=dotted];
m6_95 -> m6_89  [key=0, style=solid];
m6_95 -> m6_51  [key=2, style=dotted];
m6_95 -> m6_95  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_95 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_95 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_95 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_95 -> m6_115  [key=1, style=dashed, color=darkseagreen4, label=frontier];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_100  [key=0, style=solid];
m6_112 -> m6_113  [key=0, style=solid];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_115  [key=0, style=solid];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_70 -> m6_74  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_70 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_70 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_116  [key=0, style=solid];
m6_74 -> m6_76  [key=0, style=solid];
m6_75 -> m6_76  [key=0, style=solid];
m6_76 -> m6_71  [key=0, style=solid];
m6_76 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=bridgeFullCount];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_75  [key=0, style=solid];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=bridgeZeroCount];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_28  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_32  [key=2, style=dotted];
m6_81 -> m6_81  [key=1, style=dashed, color=darkseagreen4, label=bridge];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_117  [key=0, style=solid];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_32  [key=2, style=dotted];
m6_82 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label=bridge];
m6_83 -> m6_80  [key=0, style=solid];
m6_83 -> m6_137  [key=2, style=dotted];
m6_116 -> m6_67  [key=0, style=solid];
m6_116 -> m6_117  [key=0, style=solid];
m6_87 -> m6_88  [key=0, style=solid];
m6_87 -> m6_101  [key=1, style=dashed, color=darkseagreen4, label=earlyBirdTicks];
m6_87 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=earlyBirdTicks];
m6_87 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label=earlyBirdTicks];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_139  [key=2, style=dotted];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_140  [key=2, style=dotted];
m6_107 -> m6_108  [key=0, style=solid];
m6_107 -> m6_110  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_142  [key=2, style=dotted];
m6_88 -> m6_89  [key=0, style=solid];
m6_88 -> m6_90  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_88 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_88 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_88 -> m6_96  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_88 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_88 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_103  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_97  [key=1, style=dashed, color=darkseagreen4, label=manager];
m6_90 -> m6_98  [key=1, style=dashed, color=darkseagreen4, label=manager];
m6_90 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label=manager];
m6_90 -> m6_100  [key=1, style=dashed, color=darkseagreen4, label=manager];
m6_90 -> m6_101  [key=1, style=dashed, color=darkseagreen4, label=manager];
m6_90 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label=manager];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_96  [key=0, style=solid];
m6_92 -> m6_93  [key=0, style=solid];
m6_103 -> m6_89  [key=0, style=solid];
m6_103 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_99 -> m6_97  [key=0, style=solid];
m6_99 -> m6_100  [key=0, style=solid];
m6_99 -> m6_141  [key=2, style=dotted];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_103  [key=0, style=solid];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_113  [key=1, style=dashed, color=darkseagreen4, label=earlyBirdTicks];
m6_102 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label=earlyBirdTicks];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_28  [key=2, style=dotted];
m6_93 -> m6_104  [key=1, style=dashed, color=darkseagreen4, label=activeStreams];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_89  [key=0, style=solid];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_105 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_105 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_105 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_105 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_111 -> m6_106  [key=0, style=solid];
m6_111 -> m6_111  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_127  [key=0, style=solid];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_121  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_119 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_119 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_129  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_127 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_123  [key=0, style=solid];
m6_122 -> m6_123  [key=0, style=solid];
m6_123 -> m6_120  [key=0, style=solid];
m6_123 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_126  [key=0, style=solid];
m6_124 -> m6_28  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_126 -> m6_118  [key=0, style=solid];
m6_126 -> m6_137  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_131  [key=0, style=solid];
m6_129 -> m6_130  [key=0, style=solid];
m6_129 -> m6_147  [key=2, style=dotted];
m6_130 -> m6_128  [key=0, style=solid];
m6_130 -> m6_130  [key=1, style=dashed, color=darkseagreen4, label=i];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_146  [key=2, style=dotted];
m6_132 -> m6_133  [key=0, style=solid];
m6_133 -> m6_57  [key=0, style=bold, color=blue];
m6_188 -> m6_189  [key=0, style=solid];
m6_189 -> m6_190  [key=0, style=solid];
m6_189 -> m6_191  [key=0, style=solid];
m6_190 -> m6_189  [key=0, style=solid];
m6_190 -> m6_192  [key=2, style=dotted];
m6_191 -> m6_188  [key=0, style=bold, color=blue];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label=bool];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_51  [key=2, style=dotted];
m6_34 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_34 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_34 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_34 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_34 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_35  [key=0, style=solid];
m6_47 -> m6_55  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_49  [key=0, style=solid];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_35  [key=0, style=solid];
m6_38 -> n300  [key=2, style=dotted];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_35  [key=0, style=solid];
m6_41 -> m6_53  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_35  [key=0, style=solid];
m6_44 -> m6_54  [key=2, style=dotted];
m6_49 -> m6_50  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_40  [key=0, style=solid];
m6_36 -> m6_43  [key=0, style=solid];
m6_36 -> m6_46  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_46 -> m6_47  [key=0, style=solid];
m6_39 -> m6_35  [key=0, style=solid];
m6_39 -> n300  [key=2, style=dotted];
m6_39 -> m6_41  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_39 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_39 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_39 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_42 -> m6_35  [key=0, style=solid];
m6_42 -> m6_53  [key=2, style=dotted];
m6_42 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_42 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_42 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_45 -> m6_35  [key=0, style=solid];
m6_45 -> m6_54  [key=2, style=dotted];
m6_45 -> m6_47  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_45 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_48 -> m6_35  [key=0, style=solid];
m6_48 -> m6_56  [key=2, style=dotted];
m6_48 -> m6_49  [key=1, style=dashed, color=darkseagreen4, label=increment];
m6_50 -> m6_33  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.BacktestNodePacket"];
m6_0 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m6_1 -> m6_2  [key=0, style=solid];
m6_10 -> m6_11  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_15  [key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_14 -> m6_0  [key=0, style=bold, color=blue];
m6_193 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_72  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_165  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_176  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_178  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_185  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m6_193 -> m6_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed"];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.ISecuritySeeder"];
m8_1 -> m8_2  [key=0, style=solid];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_0  [key=0, style=bold, color=blue];
m8_24 -> m8_0  [key=3, color=darkorchid, style=bold, label="Field variable QuantConnect.Securities.ISecuritySeeder _securitySeeder"];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m8_4 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m8_4 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m8_4 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m8_4 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label=bool];
m8_4 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m8_4 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m8_4 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m8_4 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_18  [key=2, style=dotted];
m8_5 -> m8_19  [key=2, style=dotted];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_20  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_21  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_22  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_23  [key=2, style=dotted];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_17  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_17  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_24  [key=2, style=dotted];
m8_12 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label=seedData];
m8_12 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label=seedData];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_25  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_26  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=0, style=solid];
m8_15 -> m8_26  [key=2, style=dotted];
m8_17 -> m8_4  [key=0, style=bold, color=blue];
m8_27 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.BrokerageModelSecurityInitializer"];
m8_27 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.BrokerageModelSecurityInitializer"];
m8_27 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.BrokerageModelSecurityInitializer"];
m8_27 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.BrokerageModelSecurityInitializer"];
m8_27 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.BrokerageModelSecurityInitializer"];
m8_27 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.BrokerageModelSecurityInitializer"];
m8_27 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.BrokerageModelSecurityInitializer"];
m8_27 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.BrokerageModelSecurityInitializer"];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_22  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_20  [key=0, style=solid];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_24  [key=0, style=solid];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_27  [key=0, style=solid];
m9_21 -> m9_70  [key=0, style=solid];
m9_21 -> m9_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_21 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_21 -> m9_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_21 -> m9_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m9_21 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m9_21 -> m9_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_28  [key=2, style=dotted];
m9_23 -> m9_27  [key=0, style=solid];
m9_23 -> m9_29  [key=2, style=dotted];
m9_23 -> m9_30  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopMarketOrder"];
m9_23 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_23 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopMarketOrder"];
m9_23 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_23 -> m9_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopMarketOrder"];
m9_23 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_23 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopMarketOrder"];
m9_23 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopMarketOrder"];
m9_23 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_23 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.StopMarketOrder"];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_27  [key=0, style=solid];
m9_24 -> m9_20  [key=2, style=dotted];
m9_24 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_24 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_24 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_24 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_24 -> m9_41  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_28  [key=2, style=dotted];
m9_25 -> m9_27  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_29  [key=2, style=dotted];
m9_26 -> m9_30  [key=2, style=dotted];
m9_26 -> m9_42  [key=0, style=solid];
m9_19 -> m9_27  [key=0, style=solid];
m9_19 -> m9_2  [key=0, style=bold, color=blue];
m9_27 -> m9_17  [key=0, style=bold, color=blue];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_31  [key=0, style=solid];
m9_95 -> m9_96  [key=0, style=solid];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_23  [key=2, style=dotted];
m9_97 -> m9_95  [key=0, style=bold, color=blue];
m9_34 -> m9_35  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_2  [key=2, style=dotted];
m9_94 -> m9_92  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid, color=green];
m9_2 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_2 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m9_2 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_2 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m9_2 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_2 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m9_2 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m9_2 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m9_2 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m9_2 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m9_3 -> m9_4  [key=0, style=solid, color=green];
m9_3 -> m9_20  [key=2, style=dotted];
m9_3 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_3 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_3 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_3 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_3 -> m9_12  [key=2, style=dotted, color=green];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_21  [key=2, style=dotted];
m9_4 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=slip];
m9_4 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label=slip];
m9_4 -> m9_13  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_9  [key=0, style=solid];
m9_5 -> m9_14  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_16  [key=2, style=dotted];
m9_8 -> m9_12  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_16  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_18  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_15  [key=2, style=dotted];
m9_6 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=_price];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_0  [key=0, style=bold, color=blue];
m9_16 -> m9_17  [key=0, style=solid];
m9_29 -> m9_30  [key=0, style=solid];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_43 -> m9_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m9_43 -> m9_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_43 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_43 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_43 -> m9_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_43 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_43 -> m9_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_43 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_43 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_43 -> m9_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_43 -> m9_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.LimitOrder"];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_20  [key=2, style=dotted];
m9_44 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_44 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_44 -> m9_63  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_44 -> m9_64  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_44 -> m9_67  [key=1, style=dashed, color=darkseagreen4, label=fill];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_47  [key=0, style=solid];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_69  [key=2, style=dotted];
m9_47 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label=marketData];
m9_47 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label=marketData];
m9_47 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label=marketData];
m9_47 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label=marketData];
m9_47 -> m9_54  [key=1, style=dashed, color=darkseagreen4, label=marketData];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_58  [key=0, style=solid];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_61  [key=0, style=solid];
m9_57 -> m9_61  [key=0, style=solid];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_61  [key=0, style=solid];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_61  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_65  [key=0, style=solid];
m9_61 -> m9_67  [key=0, style=solid];
m9_62 -> m9_63  [key=0, style=solid];
m9_63 -> m9_64  [key=0, style=solid];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_67  [key=0, style=solid];
m9_46 -> m9_68  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_48 -> m9_49  [key=0, style=solid];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_53  [key=0, style=solid];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label=marketDataMinPrice];
m9_52 -> m9_55  [key=0, style=solid];
m9_52 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label=marketDataMaxPrice];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label=marketDataMinPrice];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label=marketDataMaxPrice];
m9_49 -> m9_50  [key=0, style=solid];
m9_65 -> m9_66  [key=0, style=solid];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_22  [key=2, style=dotted];
m9_68 -> m9_43  [key=0, style=bold, color=blue];
m9_86 -> m9_87  [key=0, style=solid];
m9_87 -> m9_88  [key=0, style=solid];
m9_88 -> m9_86  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid, color=green];
m9_1 -> m9_2  [key=0, style=solid, color=green];
m9_1 -> m9_10  [key=2, style=dotted, color=green];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m9_30 -> m9_35  [key=0, style=solid];
m9_89 -> m9_90  [key=0, style=solid];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_20  [key=2, style=dotted];
m9_91 -> m9_89  [key=0, style=bold, color=blue];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_39  [key=0, style=solid];
m9_35 -> m9_41  [key=0, style=solid];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_35  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_34  [key=2, style=dotted];
m9_32 -> m9_35  [key=2, style=dotted];
m9_33 -> m9_31  [key=0, style=bold, color=blue];
m9_33 -> m9_34  [key=0, style=solid];
m9_70 -> m9_71  [key=0, style=solid];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_76  [key=0, style=solid];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_69  [key=2, style=dotted];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_69  [key=2, style=dotted];
m9_77 -> m9_80  [key=1, style=dashed, color=darkseagreen4, label=lastTick];
m9_77 -> m9_82  [key=1, style=dashed, color=darkseagreen4, label=lastTick];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_81  [key=0, style=solid];
m9_80 -> m9_83  [key=0, style=solid];
m9_80 -> n77  [key=2, style=dotted];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> n77  [key=2, style=dotted];
m9_72 -> m9_73  [key=0, style=solid];
m9_76 -> m9_77  [key=0, style=solid];
m9_73 -> m9_74  [key=0, style=solid];
m9_75 -> m9_83  [key=0, style=solid];
m9_79 -> m9_80  [key=0, style=solid];
m9_81 -> m9_82  [key=0, style=solid];
m9_83 -> m9_84  [key=0, style=solid];
m9_84 -> m9_21  [key=0, style=bold, color=blue];
m9_98 -> m9_99  [key=0, style=solid];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_43  [key=2, style=dotted];
m9_100 -> m9_98  [key=0, style=bold, color=blue];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_35  [key=0, style=solid];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_1  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_2  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_3  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_36 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateFxcmVolumeAlgorithm"];
m9_37 -> m9_38  [key=0, style=solid];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_41  [key=0, style=solid];
m9_41 -> m9_42  [key=0, style=solid];
m9_39 -> m9_40  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_22  [key=2, style=dotted];
m9_42 -> m9_23  [key=0, style=bold, color=blue];
m9_101 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Forex.ForexTransactionModel"];
m9_101 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Forex.ForexTransactionModel"];
m9_101 -> m9_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Forex.ForexTransactionModel"];
m9_101 -> m9_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Forex.ForexTransactionModel"];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_30  [key=0, style=solid];
m10_23 -> m10_31  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_30  [key=0, style=solid];
m10_25 -> m10_32  [key=2, style=dotted];
m10_25 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label=chain];
m10_24 -> m10_25  [key=0, style=solid];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_33  [key=2, style=dotted];
m10_26 -> m10_34  [key=2, style=dotted];
m10_26 -> m10_35  [key=2, style=dotted];
m10_26 -> m10_36  [key=2, style=dotted];
m10_26 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_26 -> m10_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_26 -> m10_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_26 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label=atmContract];
m10_26 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label=atmContract];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_30  [key=0, style=solid];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_37  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_38  [key=2, style=dotted];
m10_30 -> m10_22  [key=0, style=bold, color=blue];
m10_46 -> m10_47  [key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_19  [key=2, style=dotted];
m10_17 -> m10_20  [key=2, style=dotted];
m10_17 -> m10_21  [key=2, style=dotted];
m10_18 -> m10_16  [key=0, style=bold, color=blue];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> n77  [key=2, style=dotted];
m10_39 -> m10_40  [key=0, style=solid];
m10_42 -> m10_43  [key=0, style=solid];
m10_40 -> m10_41  [key=0, style=solid];
m10_41 -> m10_39  [key=0, style=bold, color=blue];
m10_44 -> m10_42  [key=0, style=bold, color=blue];
m10_47 -> m10_48  [key=0, style=solid];
m10_48 -> m10_46  [key=0, style=bold, color=blue];
m10_49 -> m10_50  [key=0, style=solid];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_52  [key=2, style=dotted];
m10_50 -> m10_53  [key=2, style=dotted];
m10_51 -> m10_49  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_9  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_10  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_11  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_12  [key=2, style=dotted];
m10_4 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label=equity];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_13  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_15  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_14  [key=2, style=dotted];
m10_6 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_8 -> m10_0  [key=0, style=bold, color=blue];
m10_54 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_54 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_54 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_54 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_54 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_54 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_54 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_54 -> m10_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_54 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_54 -> m10_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_54 -> m10_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.BasicTemplateOptionsAlgorithm"];
m10_55 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label=chain];
m11_442 -> m11_443  [key=0, style=solid];
m11_442 -> m11_444  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_442 -> m11_445  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_443 -> m11_444  [key=0, style=solid];
m11_443 -> m11_38  [key=2, style=dotted];
m11_443 -> m11_6  [key=2, style=dotted];
m11_444 -> m11_445  [key=0, style=solid];
m11_444 -> m11_448  [key=2, style=dotted];
m11_444 -> m11_446  [key=1, style=dashed, color=darkseagreen4, label=ultosc];
m11_445 -> m11_446  [key=0, style=solid];
m11_445 -> m11_24  [key=2, style=dotted];
m11_446 -> m11_447  [key=0, style=solid];
m11_447 -> m11_442  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_6  [key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_8  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_7  [key=2, style=dotted];
m11_2 -> m11_4  [key=1, style=dashed, color=darkseagreen4, label=ad];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_0  [key=0, style=bold, color=blue];
m11_533 -> m11_534  [key=0, style=solid];
m11_534 -> m11_535  [key=0, style=solid];
m11_534 -> m11_136  [key=2, style=dotted];
m11_534 -> m11_137  [key=2, style=dotted];
m11_535 -> m11_533  [key=0, style=bold, color=blue];
m11_421 -> m11_422  [key=0, style=solid];
m11_421 -> m11_424  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_422 -> m11_423  [key=0, style=solid];
m11_422 -> m11_6  [key=2, style=dotted];
m11_424 -> m11_425  [key=0, style=solid];
m11_424 -> m11_24  [key=2, style=dotted];
m11_423 -> m11_424  [key=0, style=solid];
m11_423 -> m11_427  [key=2, style=dotted];
m11_423 -> m11_425  [key=1, style=dashed, color=darkseagreen4, label=tr];
m11_425 -> m11_426  [key=0, style=solid];
m11_426 -> m11_421  [key=0, style=bold, color=blue];
m11_171 -> m11_172  [key=0, style=solid];
m11_171 -> m11_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_6  [key=2, style=dotted];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_40  [key=2, style=dotted];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_177  [key=2, style=dotted];
m11_173 -> m11_175  [key=1, style=dashed, color=darkseagreen4, label=identity];
m11_175 -> m11_176  [key=0, style=solid];
m11_176 -> m11_171  [key=0, style=bold, color=blue];
m11_463 -> m11_464  [key=0, style=solid];
m11_463 -> m11_465  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_463 -> m11_466  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_464 -> m11_465  [key=0, style=solid];
m11_464 -> m11_6  [key=2, style=dotted];
m11_465 -> m11_466  [key=0, style=solid];
m11_465 -> m11_469  [key=2, style=dotted];
m11_465 -> m11_467  [key=1, style=dashed, color=darkseagreen4, label=williamspercentr];
m11_466 -> m11_467  [key=0, style=solid];
m11_466 -> m11_24  [key=2, style=dotted];
m11_467 -> m11_468  [key=0, style=solid];
m11_468 -> m11_463  [key=0, style=bold, color=blue];
m11_390 -> m11_391  [key=0, style=solid];
m11_391 -> m11_392  [key=0, style=solid];
m11_391 -> m11_383  [key=2, style=dotted];
m11_392 -> m11_390  [key=0, style=bold, color=blue];
m11_341 -> m11_342  [key=0, style=solid];
m11_341 -> m11_343  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_341 -> m11_344  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_342 -> m11_343  [key=0, style=solid];
m11_342 -> m11_6  [key=2, style=dotted];
m11_343 -> m11_344  [key=0, style=solid];
m11_343 -> m11_347  [key=2, style=dotted];
m11_343 -> m11_345  [key=1, style=dashed, color=darkseagreen4, label=rateofchange];
m11_344 -> m11_345  [key=0, style=solid];
m11_344 -> m11_40  [key=2, style=dotted];
m11_345 -> m11_346  [key=0, style=solid];
m11_346 -> m11_341  [key=0, style=bold, color=blue];
m11_400 -> m11_401  [key=0, style=solid];
m11_400 -> m11_402  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_400 -> m11_403  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_401 -> m11_402  [key=0, style=solid];
m11_401 -> m11_6  [key=2, style=dotted];
m11_402 -> m11_403  [key=0, style=solid];
m11_402 -> m11_406  [key=2, style=dotted];
m11_402 -> m11_404  [key=1, style=dashed, color=darkseagreen4, label=swiss];
m11_403 -> m11_404  [key=0, style=solid];
m11_403 -> m11_40  [key=2, style=dotted];
m11_404 -> m11_405  [key=0, style=solid];
m11_405 -> m11_400  [key=0, style=bold, color=blue];
m11_299 -> m11_300  [key=0, style=solid];
m11_299 -> m11_301  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_299 -> m11_302  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_300 -> m11_301  [key=0, style=solid];
m11_300 -> m11_6  [key=2, style=dotted];
m11_301 -> m11_302  [key=0, style=solid];
m11_301 -> m11_305  [key=2, style=dotted];
m11_301 -> m11_303  [key=1, style=dashed, color=darkseagreen4, label=momentum];
m11_302 -> m11_303  [key=0, style=solid];
m11_302 -> m11_40  [key=2, style=dotted];
m11_303 -> m11_304  [key=0, style=solid];
m11_304 -> m11_299  [key=0, style=bold, color=blue];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_81  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_79 -> m11_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_6  [key=2, style=dotted];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_85  [key=2, style=dotted];
m11_81 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label=cci];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_24  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_84 -> m11_79  [key=0, style=bold, color=blue];
m11_327 -> m11_328  [key=0, style=solid];
m11_327 -> m11_329  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m11_327 -> m11_330  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_328 -> m11_329  [key=0, style=solid];
m11_328 -> m11_38  [key=2, style=dotted];
m11_328 -> m11_6  [key=2, style=dotted];
m11_329 -> m11_330  [key=0, style=solid];
m11_329 -> m11_333  [key=2, style=dotted];
m11_329 -> m11_331  [key=1, style=dashed, color=darkseagreen4, label=psar];
m11_330 -> m11_331  [key=0, style=solid];
m11_330 -> m11_24  [key=2, style=dotted];
m11_331 -> m11_332  [key=0, style=solid];
m11_332 -> m11_327  [key=0, style=bold, color=blue];
m11_355 -> m11_356  [key=0, style=solid];
m11_355 -> m11_357  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_355 -> m11_358  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_356 -> m11_357  [key=0, style=solid];
m11_356 -> m11_6  [key=2, style=dotted];
m11_357 -> m11_358  [key=0, style=solid];
m11_357 -> m11_361  [key=2, style=dotted];
m11_357 -> m11_359  [key=1, style=dashed, color=darkseagreen4, label=rocr];
m11_358 -> m11_359  [key=0, style=solid];
m11_358 -> m11_40  [key=2, style=dotted];
m11_359 -> m11_360  [key=0, style=solid];
m11_360 -> m11_355  [key=0, style=bold, color=blue];
m11_136 -> m11_560  [key=0, style=solid];
m11_136 -> m11_561  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_136 -> m11_563  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_136 -> m11_564  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_136 -> m11_566  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_136 -> m11_568  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_136 -> m11_570  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_136 -> m11_574  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_136 -> m11_576  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_136 -> m11_577  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_136 -> m11_579  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_136 -> m11_580  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_560 -> m11_561  [key=0, style=solid];
m11_560 -> m11_121  [key=2, style=dotted];
m11_560 -> m11_562  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_560 -> m11_563  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_560 -> m11_564  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_560 -> m11_565  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_560 -> m11_567  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_560 -> m11_569  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_560 -> m11_572  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_560 -> m11_578  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_561 -> m11_562  [key=0, style=solid];
m11_561 -> m11_563  [key=0, style=solid];
m11_563 -> m11_564  [key=0, style=solid];
m11_563 -> m11_565  [key=0, style=solid];
m11_563 -> m11_559  [key=2, style=dotted];
m11_564 -> m11_581  [key=0, style=solid];
m11_564 -> m11_543  [key=2, style=dotted];
m11_564 -> m11_15  [key=2, style=dotted];
m11_566 -> m11_581  [key=0, style=solid];
m11_566 -> m11_582  [key=2, style=dotted];
m11_568 -> m11_581  [key=0, style=solid];
m11_568 -> m11_583  [key=2, style=dotted];
m11_570 -> m11_571  [key=0, style=solid];
m11_570 -> m11_572  [key=0, style=solid];
m11_574 -> m11_581  [key=0, style=solid];
m11_574 -> m11_585  [key=2, style=dotted];
m11_576 -> m11_581  [key=0, style=solid];
m11_576 -> m11_586  [key=2, style=dotted];
m11_577 -> m11_581  [key=0, style=solid];
m11_577 -> m11_587  [key=2, style=dotted];
m11_579 -> m11_581  [key=0, style=solid];
m11_579 -> m11_588  [key=2, style=dotted];
m11_580 -> m11_581  [key=0, style=solid];
m11_580 -> m11_589  [key=2, style=dotted];
m11_562 -> m11_563  [key=0, style=solid];
m11_562 -> m11_559  [key=2, style=dotted];
m11_562 -> m11_566  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_562 -> m11_568  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_562 -> m11_570  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_562 -> m11_574  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_562 -> m11_576  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_562 -> m11_577  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_562 -> m11_579  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_562 -> m11_580  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m11_565 -> m11_566  [key=0, style=solid];
m11_565 -> m11_567  [key=0, style=solid];
m11_565 -> n319  [key=2, style=dotted];
m11_567 -> m11_568  [key=0, style=solid];
m11_567 -> m11_569  [key=0, style=solid];
m11_567 -> n319  [key=2, style=dotted];
m11_569 -> m11_570  [key=0, style=solid];
m11_569 -> m11_578  [key=0, style=solid];
m11_569 -> n319  [key=2, style=dotted];
m11_572 -> m11_573  [key=0, style=solid];
m11_572 -> m11_575  [key=0, style=solid];
m11_572 -> m11_577  [key=0, style=solid];
m11_578 -> m11_579  [key=0, style=solid];
m11_578 -> m11_580  [key=0, style=solid];
m11_578 -> n319  [key=2, style=dotted];
m11_571 -> m11_581  [key=0, style=solid];
m11_571 -> m11_584  [key=2, style=dotted];
m11_573 -> m11_574  [key=0, style=solid];
m11_575 -> m11_576  [key=0, style=solid];
m11_581 -> m11_136  [key=0, style=bold, color=blue];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_51 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_15  [key=2, style=dotted];
m11_52 -> m11_6  [key=2, style=dotted];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_57  [key=2, style=dotted];
m11_53 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label=aroon];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_24  [key=2, style=dotted];
m11_55 -> m11_56  [key=0, style=solid];
m11_56 -> m11_51  [key=0, style=bold, color=blue];
m11_213 -> m11_214  [key=0, style=solid];
m11_213 -> m11_215  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_213 -> m11_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_214 -> m11_215  [key=0, style=solid];
m11_214 -> m11_6  [key=2, style=dotted];
m11_215 -> m11_216  [key=0, style=solid];
m11_215 -> m11_219  [key=2, style=dotted];
m11_215 -> m11_217  [key=1, style=dashed, color=darkseagreen4, label=lwma];
m11_216 -> m11_217  [key=0, style=solid];
m11_216 -> m11_40  [key=2, style=dotted];
m11_217 -> m11_218  [key=0, style=solid];
m11_218 -> m11_213  [key=0, style=bold, color=blue];
m11_435 -> m11_436  [key=0, style=solid];
m11_435 -> m11_437  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_435 -> m11_438  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_436 -> m11_437  [key=0, style=solid];
m11_436 -> m11_6  [key=2, style=dotted];
m11_437 -> m11_438  [key=0, style=solid];
m11_437 -> m11_441  [key=2, style=dotted];
m11_437 -> m11_439  [key=1, style=dashed, color=darkseagreen4, label=trix];
m11_438 -> m11_439  [key=0, style=solid];
m11_438 -> m11_40  [key=2, style=dotted];
m11_439 -> m11_440  [key=0, style=solid];
m11_440 -> m11_435  [key=0, style=bold, color=blue];
m11_306 -> m11_307  [key=0, style=solid];
m11_306 -> m11_308  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_306 -> m11_309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_307 -> m11_308  [key=0, style=solid];
m11_307 -> m11_6  [key=2, style=dotted];
m11_308 -> m11_309  [key=0, style=solid];
m11_308 -> m11_312  [key=2, style=dotted];
m11_308 -> m11_310  [key=1, style=dashed, color=darkseagreen4, label=natr];
m11_309 -> m11_310  [key=0, style=solid];
m11_309 -> m11_24  [key=2, style=dotted];
m11_310 -> m11_311  [key=0, style=solid];
m11_311 -> m11_306  [key=0, style=bold, color=blue];
m11_547 -> m11_548  [key=0, style=solid];
m11_248 -> m11_249  [key=0, style=solid];
m11_247 -> m11_248  [key=0, style=solid];
m11_249 -> m11_247  [key=0, style=bold, color=blue];
m11_283 -> m11_284  [key=0, style=solid];
m11_282 -> m11_283  [key=0, style=solid];
m11_284 -> m11_282  [key=0, style=bold, color=blue];
m11_500 -> m11_501  [key=0, style=solid];
m11_499 -> m11_500  [key=0, style=solid];
m11_501 -> m11_499  [key=0, style=bold, color=blue];
m11_505 -> m11_506  [key=0, style=solid];
m11_504 -> m11_505  [key=0, style=solid];
m11_506 -> m11_504  [key=0, style=bold, color=blue];
m11_511 -> m11_512  [key=0, style=solid];
m11_510 -> m11_511  [key=0, style=solid];
m11_512 -> m11_510  [key=0, style=bold, color=blue];
m11_523 -> m11_524  [key=0, style=solid];
m11_523 -> m11_526  [key=2, style=dotted];
m11_523 -> m11_527  [key=2, style=dotted];
m11_519 -> m11_520  [key=0, style=solid];
m11_522 -> m11_523  [key=0, style=solid];
m11_522 -> m11_525  [key=2, style=dotted];
m11_518 -> m11_519  [key=0, style=solid];
m11_520 -> m11_518  [key=0, style=bold, color=blue];
m11_521 -> m11_522  [key=0, style=solid];
m11_521 -> m11_523  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m11_524 -> m11_521  [key=0, style=bold, color=blue];
m11_549 -> m11_550  [key=0, style=solid];
m11_549 -> m11_527  [key=2, style=dotted];
m11_545 -> m11_546  [key=0, style=solid];
m11_548 -> m11_549  [key=0, style=solid];
m11_548 -> m11_525  [key=2, style=dotted];
m11_544 -> m11_545  [key=0, style=solid];
m11_546 -> m11_544  [key=0, style=bold, color=blue];
m11_550 -> m11_547  [key=0, style=bold, color=blue];
m11_449 -> m11_450  [key=0, style=solid];
m11_449 -> m11_451  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_449 -> m11_452  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_450 -> m11_451  [key=0, style=solid];
m11_450 -> m11_6  [key=2, style=dotted];
m11_451 -> m11_452  [key=0, style=solid];
m11_451 -> m11_455  [key=2, style=dotted];
m11_451 -> m11_453  [key=1, style=dashed, color=darkseagreen4, label=variance];
m11_452 -> m11_453  [key=0, style=solid];
m11_452 -> m11_40  [key=2, style=dotted];
m11_453 -> m11_454  [key=0, style=solid];
m11_454 -> m11_449  [key=0, style=bold, color=blue];
m11_369 -> m11_370  [key=0, style=solid];
m11_369 -> m11_371  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_369 -> m11_372  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_370 -> m11_371  [key=0, style=solid];
m11_370 -> m11_6  [key=2, style=dotted];
m11_371 -> m11_372  [key=0, style=solid];
m11_371 -> m11_375  [key=2, style=dotted];
m11_371 -> m11_373  [key=1, style=dashed, color=darkseagreen4, label=sma];
m11_372 -> m11_373  [key=0, style=solid];
m11_372 -> m11_40  [key=2, style=dotted];
m11_373 -> m11_374  [key=0, style=solid];
m11_374 -> m11_369  [key=0, style=bold, color=blue];
m11_206 -> m11_207  [key=0, style=solid];
m11_206 -> m11_208  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_206 -> m11_209  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_207 -> m11_208  [key=0, style=solid];
m11_207 -> m11_6  [key=2, style=dotted];
m11_208 -> m11_209  [key=0, style=solid];
m11_208 -> m11_212  [key=2, style=dotted];
m11_208 -> m11_210  [key=1, style=dashed, color=darkseagreen4, label=lsma];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_40  [key=2, style=dotted];
m11_210 -> m11_211  [key=0, style=solid];
m11_211 -> m11_206  [key=0, style=bold, color=blue];
m11_383 -> m11_384  [key=0, style=solid];
m11_383 -> m11_385  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_383 -> m11_386  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_384 -> m11_385  [key=0, style=solid];
m11_384 -> m11_6  [key=2, style=dotted];
m11_385 -> m11_386  [key=0, style=solid];
m11_385 -> m11_389  [key=2, style=dotted];
m11_385 -> m11_387  [key=1, style=dashed, color=darkseagreen4, label=stoch];
m11_386 -> m11_387  [key=0, style=solid];
m11_386 -> m11_166  [key=2, style=dotted];
m11_387 -> m11_388  [key=0, style=solid];
m11_388 -> m11_383  [key=0, style=bold, color=blue];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_86 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_6  [key=2, style=dotted];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_92  [key=2, style=dotted];
m11_88 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label=cmo];
m11_89 -> m11_90  [key=0, style=solid];
m11_89 -> m11_40  [key=2, style=dotted];
m11_90 -> m11_91  [key=0, style=solid];
m11_91 -> m11_86  [key=0, style=bold, color=blue];
m11_271 -> m11_272  [key=0, style=solid];
m11_271 -> m11_273  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_271 -> m11_274  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, decimal>"];
m11_271 -> m11_275  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_271 -> m11_278  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_272 -> m11_273  [key=0, style=solid];
m11_272 -> m11_6  [key=2, style=dotted];
m11_273 -> m11_274  [key=0, style=solid];
m11_273 -> m11_281  [key=2, style=dotted];
m11_273 -> m11_278  [key=1, style=dashed, color=darkseagreen4, label=min];
m11_273 -> m11_279  [key=1, style=dashed, color=darkseagreen4, label=min];
m11_274 -> m11_275  [key=0, style=solid];
m11_274 -> m11_278  [key=0, style=solid];
m11_275 -> m11_276  [key=0, style=solid];
m11_275 -> m11_121  [key=2, style=dotted];
m11_278 -> m11_279  [key=0, style=solid];
m11_278 -> m11_246  [key=2, style=dotted];
m11_278 -> m11_184  [key=2, style=dotted];
m11_279 -> m11_280  [key=0, style=solid];
m11_276 -> m11_277  [key=0, style=solid];
m11_276 -> m11_278  [key=0, style=solid];
m11_276 -> n319  [key=2, style=dotted];
m11_277 -> m11_278  [key=0, style=solid];
m11_277 -> m11_283  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m11_280 -> m11_271  [key=0, style=bold, color=blue];
m11_167 -> m11_168  [key=0, style=solid];
m11_167 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_168 -> m11_169  [key=0, style=solid];
m11_168 -> m11_121  [key=2, style=dotted];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_171  [key=2, style=dotted];
m11_170 -> m11_167  [key=0, style=bold, color=blue];
m11_393 -> m11_394  [key=0, style=solid];
m11_393 -> m11_395  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_393 -> m11_396  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_394 -> m11_395  [key=0, style=solid];
m11_394 -> m11_6  [key=2, style=dotted];
m11_395 -> m11_396  [key=0, style=solid];
m11_395 -> m11_399  [key=2, style=dotted];
m11_395 -> m11_397  [key=1, style=dashed, color=darkseagreen4, label=sum];
m11_396 -> m11_397  [key=0, style=solid];
m11_396 -> m11_40  [key=2, style=dotted];
m11_397 -> m11_398  [key=0, style=solid];
m11_398 -> m11_393  [key=0, style=bold, color=blue];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_9 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_15  [key=2, style=dotted];
m11_10 -> m11_6  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_16  [key=2, style=dotted];
m11_11 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label=adOsc];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_8  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_14 -> m11_9  [key=0, style=bold, color=blue];
m11_292 -> m11_293  [key=0, style=solid];
m11_292 -> m11_294  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_292 -> m11_295  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_293 -> m11_294  [key=0, style=solid];
m11_293 -> m11_15  [key=2, style=dotted];
m11_293 -> m11_6  [key=2, style=dotted];
m11_294 -> m11_295  [key=0, style=solid];
m11_294 -> m11_298  [key=2, style=dotted];
m11_294 -> m11_296  [key=1, style=dashed, color=darkseagreen4, label=momersion];
m11_295 -> m11_296  [key=0, style=solid];
m11_295 -> m11_40  [key=2, style=dotted];
m11_296 -> m11_297  [key=0, style=solid];
m11_297 -> m11_292  [key=0, style=bold, color=blue];
m11_121 -> m11_491  [key=0, style=solid];
m11_121 -> m11_492  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_121 -> m11_500  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_121 -> m11_494  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_491 -> m11_492  [key=0, style=solid];
m11_492 -> m11_493  [key=0, style=solid];
m11_492 -> m11_495  [key=0, style=solid];
m11_492 -> m11_497  [key=2, style=dotted];
m11_492 -> m11_499  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_494 -> m11_496  [key=0, style=solid];
m11_494 -> m11_498  [key=2, style=dotted];
m11_494 -> m11_490  [key=2, style=dotted];
m11_493 -> m11_494  [key=0, style=solid];
m11_495 -> m11_496  [key=0, style=solid];
m11_496 -> m11_121  [key=0, style=bold, color=blue];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_60  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_58 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_6  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_64  [key=2, style=dotted];
m11_60 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=atr];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_24  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid];
m11_63 -> m11_58  [key=0, style=bold, color=blue];
m11_257 -> m11_258  [key=0, style=solid];
m11_257 -> m11_259  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_257 -> m11_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_258 -> m11_259  [key=0, style=solid];
m11_258 -> m11_6  [key=2, style=dotted];
m11_259 -> m11_260  [key=0, style=solid];
m11_259 -> m11_263  [key=2, style=dotted];
m11_259 -> m11_261  [key=1, style=dashed, color=darkseagreen4, label=midpoint];
m11_260 -> m11_261  [key=0, style=solid];
m11_260 -> m11_40  [key=2, style=dotted];
m11_261 -> m11_262  [key=0, style=solid];
m11_262 -> m11_257  [key=0, style=bold, color=blue];
m11_376 -> m11_377  [key=0, style=solid];
m11_376 -> m11_378  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_376 -> m11_379  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_377 -> m11_378  [key=0, style=solid];
m11_377 -> m11_6  [key=2, style=dotted];
m11_378 -> m11_379  [key=0, style=solid];
m11_378 -> m11_382  [key=2, style=dotted];
m11_378 -> m11_380  [key=1, style=dashed, color=darkseagreen4, label=std];
m11_379 -> m11_380  [key=0, style=solid];
m11_379 -> m11_40  [key=2, style=dotted];
m11_380 -> m11_381  [key=0, style=solid];
m11_381 -> m11_376  [key=0, style=bold, color=blue];
m11_407 -> m11_408  [key=0, style=solid];
m11_407 -> m11_409  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_407 -> m11_410  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_408 -> m11_409  [key=0, style=solid];
m11_408 -> m11_15  [key=2, style=dotted];
m11_408 -> m11_6  [key=2, style=dotted];
m11_409 -> m11_410  [key=0, style=solid];
m11_409 -> m11_413  [key=2, style=dotted];
m11_409 -> m11_411  [key=1, style=dashed, color=darkseagreen4, label=t3];
m11_410 -> m11_411  [key=0, style=solid];
m11_410 -> m11_40  [key=2, style=dotted];
m11_411 -> m11_412  [key=0, style=solid];
m11_412 -> m11_407  [key=0, style=bold, color=blue];
m11_320 -> m11_321  [key=0, style=solid];
m11_320 -> m11_322  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_320 -> m11_323  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_321 -> m11_322  [key=0, style=solid];
m11_321 -> m11_15  [key=2, style=dotted];
m11_321 -> m11_6  [key=2, style=dotted];
m11_322 -> m11_323  [key=0, style=solid];
m11_322 -> m11_326  [key=2, style=dotted];
m11_322 -> m11_324  [key=1, style=dashed, color=darkseagreen4, label=ppo];
m11_323 -> m11_324  [key=0, style=solid];
m11_323 -> m11_40  [key=2, style=dotted];
m11_324 -> m11_325  [key=0, style=solid];
m11_325 -> m11_320  [key=0, style=bold, color=blue];
m11_48 -> m11_49  [key=0, style=solid];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_51  [key=2, style=dotted];
m11_50 -> m11_48  [key=0, style=bold, color=blue];
m11_220 -> m11_221  [key=0, style=solid];
m11_220 -> m11_222  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_220 -> m11_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_221 -> m11_222  [key=0, style=solid];
m11_221 -> m11_15  [key=2, style=dotted];
m11_221 -> m11_6  [key=2, style=dotted];
m11_222 -> m11_223  [key=0, style=solid];
m11_222 -> m11_226  [key=2, style=dotted];
m11_222 -> m11_224  [key=1, style=dashed, color=darkseagreen4, label=macd];
m11_223 -> m11_224  [key=0, style=solid];
m11_223 -> m11_40  [key=2, style=dotted];
m11_224 -> m11_225  [key=0, style=solid];
m11_225 -> m11_220  [key=0, style=bold, color=blue];
m11_138 -> m11_139  [key=0, style=solid];
m11_138 -> m11_140  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_138 -> m11_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_139 -> m11_140  [key=0, style=solid];
m11_139 -> m11_6  [key=2, style=dotted];
m11_140 -> m11_141  [key=0, style=solid];
m11_140 -> m11_144  [key=2, style=dotted];
m11_140 -> m11_142  [key=1, style=dashed, color=darkseagreen4, label=frama];
m11_141 -> m11_142  [key=0, style=solid];
m11_141 -> m11_24  [key=2, style=dotted];
m11_142 -> m11_143  [key=0, style=solid];
m11_143 -> m11_138  [key=0, style=bold, color=blue];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_105  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_103 -> m11_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_6  [key=2, style=dotted];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_109  [key=2, style=dotted];
m11_105 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label=dema];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_40  [key=2, style=dotted];
m11_107 -> m11_108  [key=0, style=solid];
m11_108 -> m11_103  [key=0, style=bold, color=blue];
m11_234 -> m11_235  [key=0, style=solid];
m11_234 -> m11_236  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_234 -> m11_237  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, decimal>"];
m11_234 -> m11_238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_234 -> m11_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_235 -> m11_236  [key=0, style=solid];
m11_235 -> m11_6  [key=2, style=dotted];
m11_236 -> m11_237  [key=0, style=solid];
m11_236 -> m11_244  [key=2, style=dotted];
m11_236 -> m11_241  [key=1, style=dashed, color=darkseagreen4, label=max];
m11_236 -> m11_242  [key=1, style=dashed, color=darkseagreen4, label=max];
m11_237 -> m11_238  [key=0, style=solid];
m11_237 -> m11_241  [key=0, style=solid];
m11_238 -> m11_239  [key=0, style=solid];
m11_238 -> m11_121  [key=2, style=dotted];
m11_241 -> m11_242  [key=0, style=solid];
m11_241 -> m11_246  [key=2, style=dotted];
m11_241 -> m11_184  [key=2, style=dotted];
m11_242 -> m11_243  [key=0, style=solid];
m11_239 -> m11_240  [key=0, style=solid];
m11_239 -> m11_241  [key=0, style=solid];
m11_239 -> n319  [key=2, style=dotted];
m11_240 -> m11_241  [key=0, style=solid];
m11_240 -> m11_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m11_243 -> m11_234  [key=0, style=bold, color=blue];
m11_528 -> m11_529  [key=0, style=solid];
m11_529 -> m11_530  [key=0, style=solid];
m11_529 -> m11_246  [key=2, style=dotted];
m11_529 -> m11_137  [key=2, style=dotted];
m11_530 -> m11_528  [key=0, style=bold, color=blue];
m11_362 -> m11_363  [key=0, style=solid];
m11_362 -> m11_364  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_362 -> m11_365  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_363 -> m11_364  [key=0, style=solid];
m11_363 -> m11_6  [key=2, style=dotted];
m11_364 -> m11_365  [key=0, style=solid];
m11_364 -> m11_368  [key=2, style=dotted];
m11_364 -> m11_366  [key=1, style=dashed, color=darkseagreen4, label=rsi];
m11_365 -> m11_366  [key=0, style=solid];
m11_365 -> m11_40  [key=2, style=dotted];
m11_366 -> m11_367  [key=0, style=solid];
m11_367 -> m11_362  [key=0, style=bold, color=blue];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_112  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_110 -> m11_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_6  [key=2, style=dotted];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_116  [key=2, style=dotted];
m11_112 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label=ema];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_40  [key=2, style=dotted];
m11_114 -> m11_115  [key=0, style=solid];
m11_115 -> m11_110  [key=0, style=bold, color=blue];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_118 -> m11_119  [key=0, style=solid];
m11_118 -> m11_121  [key=2, style=dotted];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_122  [key=2, style=dotted];
m11_120 -> m11_117  [key=0, style=bold, color=blue];
m11_6 -> m11_470  [key=0, style=solid];
m11_6 -> m11_471  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_6 -> m11_473  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m11_6 -> m11_487  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_470 -> m11_471  [key=0, style=solid];
m11_470 -> m11_472  [key=0, style=solid];
m11_471 -> m11_472  [key=0, style=solid];
m11_471 -> m11_121  [key=2, style=dotted];
m11_471 -> m11_473  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m11_473 -> m11_474  [key=0, style=solid];
m11_473 -> m11_476  [key=0, style=solid];
m11_473 -> m11_478  [key=0, style=solid];
m11_473 -> m11_480  [key=0, style=solid];
m11_473 -> m11_482  [key=0, style=solid];
m11_473 -> m11_484  [key=0, style=solid];
m11_473 -> m11_486  [key=0, style=solid];
m11_487 -> m11_488  [key=0, style=solid];
m11_487 -> m11_490  [key=2, style=dotted];
m11_487 -> m11_38  [key=2, style=dotted];
m11_472 -> m11_473  [key=0, style=solid];
m11_474 -> m11_475  [key=0, style=solid];
m11_476 -> m11_477  [key=0, style=solid];
m11_478 -> m11_479  [key=0, style=solid];
m11_480 -> m11_481  [key=0, style=solid];
m11_482 -> m11_483  [key=0, style=solid];
m11_484 -> m11_485  [key=0, style=solid];
m11_486 -> m11_488  [key=0, style=solid];
m11_486 -> m11_489  [key=2, style=dotted];
m11_475 -> m11_487  [key=0, style=solid];
m11_477 -> m11_487  [key=0, style=solid];
m11_479 -> m11_487  [key=0, style=solid];
m11_481 -> m11_487  [key=0, style=solid];
m11_483 -> m11_487  [key=0, style=solid];
m11_485 -> m11_487  [key=0, style=solid];
m11_488 -> m11_6  [key=0, style=bold, color=blue];
m11_152 -> m11_153  [key=0, style=solid];
m11_152 -> m11_154  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_152 -> m11_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_6  [key=2, style=dotted];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_158  [key=2, style=dotted];
m11_154 -> m11_156  [key=1, style=dashed, color=darkseagreen4, label=hma];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_40  [key=2, style=dotted];
m11_156 -> m11_157  [key=0, style=solid];
m11_157 -> m11_152  [key=0, style=bold, color=blue];
m11_25 -> m11_26  [key=0, style=solid, color=red];
m11_25 -> m11_27  [key=1, style=dashed, color=red, label=int];
m11_25 -> m11_28  [key=1, style=dashed, color=red, label="QuantConnect.Symbol"];
m11_26 -> m11_27  [key=0, style=solid, color=red];
m11_26 -> m11_6  [key=2, style=dotted, color=red];
m11_27 -> m11_28  [key=0, style=solid, color=red];
m11_27 -> m11_31  [key=2, style=dotted, color=red];
m11_27 -> m11_29  [key=1, style=dashed, color=red, label=adxr];
m11_28 -> m11_29  [key=0, style=solid, color=red];
m11_28 -> m11_24  [key=2, style=dotted, color=red];
m11_29 -> m11_30  [key=0, style=solid, color=red];
m11_30 -> m11_25  [key=0, style=bold, color=blue];
m11_414 -> m11_415  [key=0, style=solid];
m11_414 -> m11_416  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_414 -> m11_417  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_415 -> m11_416  [key=0, style=solid];
m11_415 -> m11_6  [key=2, style=dotted];
m11_416 -> m11_417  [key=0, style=solid];
m11_416 -> m11_420  [key=2, style=dotted];
m11_416 -> m11_418  [key=1, style=dashed, color=darkseagreen4, label=tema];
m11_417 -> m11_418  [key=0, style=solid];
m11_417 -> m11_40  [key=2, style=dotted];
m11_418 -> m11_419  [key=0, style=solid];
m11_419 -> m11_414  [key=0, style=bold, color=blue];
m11_456 -> m11_457  [key=0, style=solid];
m11_456 -> m11_458  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_456 -> m11_459  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_457 -> m11_458  [key=0, style=solid];
m11_457 -> m11_6  [key=2, style=dotted];
m11_458 -> m11_459  [key=0, style=solid];
m11_458 -> m11_462  [key=2, style=dotted];
m11_458 -> m11_460  [key=1, style=dashed, color=darkseagreen4, label=vwap];
m11_459 -> m11_460  [key=0, style=solid];
m11_459 -> m11_8  [key=2, style=dotted];
m11_460 -> m11_461  [key=0, style=solid];
m11_461 -> m11_456  [key=0, style=bold, color=blue];
m11_250 -> m11_251  [key=0, style=solid];
m11_250 -> m11_252  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_250 -> m11_253  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_251 -> m11_252  [key=0, style=solid];
m11_251 -> m11_6  [key=2, style=dotted];
m11_252 -> m11_253  [key=0, style=solid];
m11_252 -> m11_256  [key=2, style=dotted];
m11_252 -> m11_254  [key=1, style=dashed, color=darkseagreen4, label=mfi];
m11_253 -> m11_254  [key=0, style=solid];
m11_253 -> m11_8  [key=2, style=dotted];
m11_254 -> m11_255  [key=0, style=solid];
m11_255 -> m11_250  [key=0, style=bold, color=blue];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_34  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_32 -> m11_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_38  [key=2, style=dotted];
m11_33 -> m11_6  [key=2, style=dotted];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_39  [key=2, style=dotted];
m11_34 -> m11_36  [key=1, style=dashed, color=darkseagreen4, label=alma];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_40  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_37 -> m11_32  [key=0, style=bold, color=blue];
m11_137 -> m11_536  [key=0, style=solid];
m11_137 -> m11_537  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_137 -> m11_539  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.IDataConsolidator"];
m11_137 -> m11_540  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_137 -> m11_541  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m11_137 -> m11_549  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m11_536 -> m11_537  [key=0, style=solid];
m11_536 -> m11_536  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, T>"];
m11_536 -> m11_545  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m11_536 -> m11_541  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, T>"];
m11_536 -> m11_548  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, T>"];
m11_537 -> m11_538  [key=0, style=solid];
m11_537 -> m11_517  [key=2, style=dotted];
m11_539 -> m11_540  [key=0, style=solid];
m11_539 -> m11_541  [key=0, style=solid];
m11_539 -> n319  [key=2, style=dotted];
m11_540 -> m11_542  [key=0, style=solid];
m11_540 -> m11_543  [key=2, style=dotted];
m11_540 -> m11_38  [key=2, style=dotted];
m11_541 -> m11_542  [key=0, style=solid];
m11_541 -> m11_548  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m11_538 -> m11_539  [key=0, style=solid];
m11_538 -> m11_540  [key=1, style=dashed, color=darkseagreen4, label=type];
m11_542 -> m11_137  [key=0, style=bold, color=blue];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_6  [key=2, style=dotted];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_24  [key=2, style=dotted];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_78  [key=2, style=dotted];
m11_74 -> m11_76  [key=1, style=dashed, color=darkseagreen4, label=bop];
m11_76 -> m11_77  [key=0, style=solid];
m11_77 -> m11_72  [key=0, style=bold, color=blue];
m11_40 -> m11_502  [key=0, style=solid];
m11_502 -> m11_503  [key=0, style=solid];
m11_502 -> m11_246  [key=2, style=dotted];
m11_502 -> m11_184  [key=2, style=dotted];
m11_502 -> m11_505  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m11_503 -> m11_40  [key=0, style=bold, color=blue];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_41 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_15  [key=2, style=dotted];
m11_42 -> m11_6  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_47  [key=2, style=dotted];
m11_43 -> m11_45  [key=1, style=dashed, color=darkseagreen4, label=apo];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_40  [key=2, style=dotted];
m11_45 -> m11_46  [key=0, style=solid];
m11_46 -> m11_41  [key=0, style=bold, color=blue];
m11_184 -> m11_513  [key=0, style=solid];
m11_184 -> m11_514  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_184 -> m11_515  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m11_184 -> m11_523  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m11_513 -> m11_514  [key=0, style=solid];
m11_513 -> m11_513  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, decimal>"];
m11_513 -> m11_519  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m11_513 -> m11_515  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, decimal>"];
m11_513 -> m11_522  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, decimal>"];
m11_514 -> m11_515  [key=0, style=solid];
m11_514 -> m11_517  [key=2, style=dotted];
m11_515 -> m11_516  [key=0, style=solid];
m11_515 -> m11_522  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m11_515 -> m11_523  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m11_516 -> m11_184  [key=0, style=bold, color=blue];
m11_199 -> m11_200  [key=0, style=solid];
m11_199 -> m11_201  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_199 -> m11_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_200 -> m11_201  [key=0, style=solid];
m11_200 -> m11_6  [key=2, style=dotted];
m11_201 -> m11_202  [key=0, style=solid];
m11_201 -> m11_205  [key=2, style=dotted];
m11_201 -> m11_203  [key=1, style=dashed, color=darkseagreen4, label=logr];
m11_202 -> m11_203  [key=0, style=solid];
m11_202 -> m11_40  [key=2, style=dotted];
m11_203 -> m11_204  [key=0, style=solid];
m11_204 -> m11_199  [key=0, style=bold, color=blue];
m11_227 -> m11_228  [key=0, style=solid];
m11_227 -> m11_229  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_227 -> m11_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_228 -> m11_229  [key=0, style=solid];
m11_228 -> m11_6  [key=2, style=dotted];
m11_229 -> m11_230  [key=0, style=solid];
m11_229 -> m11_233  [key=2, style=dotted];
m11_229 -> m11_231  [key=1, style=dashed, color=darkseagreen4, label=mad];
m11_230 -> m11_231  [key=0, style=solid];
m11_230 -> m11_40  [key=2, style=dotted];
m11_231 -> m11_232  [key=0, style=solid];
m11_232 -> m11_227  [key=0, style=bold, color=blue];
m11_130 -> m11_131  [key=0, style=solid];
m11_130 -> m11_132  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, bool>"];
m11_130 -> m11_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_131 -> m11_132  [key=0, style=solid];
m11_131 -> m11_38  [key=2, style=dotted];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_128  [key=2, style=dotted];
m11_132 -> m11_134  [key=1, style=dashed, color=darkseagreen4, label=filteredIdentity];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_136  [key=2, style=dotted];
m11_133 -> m11_137  [key=2, style=dotted];
m11_134 -> m11_135  [key=0, style=solid];
m11_135 -> m11_130  [key=0, style=bold, color=blue];
m11_334 -> m11_335  [key=0, style=solid];
m11_334 -> m11_336  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_334 -> m11_337  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_335 -> m11_336  [key=0, style=solid];
m11_335 -> m11_15  [key=2, style=dotted];
m11_335 -> m11_6  [key=2, style=dotted];
m11_336 -> m11_337  [key=0, style=solid];
m11_336 -> m11_340  [key=2, style=dotted];
m11_336 -> m11_338  [key=1, style=dashed, color=darkseagreen4, label=rc];
m11_337 -> m11_338  [key=0, style=solid];
m11_337 -> m11_40  [key=2, style=dotted];
m11_338 -> m11_339  [key=0, style=solid];
m11_339 -> m11_334  [key=0, style=bold, color=blue];
m11_264 -> m11_265  [key=0, style=solid];
m11_264 -> m11_266  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_264 -> m11_267  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_265 -> m11_266  [key=0, style=solid];
m11_265 -> m11_6  [key=2, style=dotted];
m11_266 -> m11_267  [key=0, style=solid];
m11_266 -> m11_270  [key=2, style=dotted];
m11_266 -> m11_268  [key=1, style=dashed, color=darkseagreen4, label=midprice];
m11_267 -> m11_268  [key=0, style=solid];
m11_267 -> m11_24  [key=2, style=dotted];
m11_268 -> m11_269  [key=0, style=solid];
m11_269 -> m11_264  [key=0, style=bold, color=blue];
m11_145 -> m11_146  [key=0, style=solid];
m11_145 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_6  [key=2, style=dotted];
m11_148 -> m11_149  [key=0, style=solid];
m11_148 -> m11_8  [key=2, style=dotted];
m11_147 -> m11_148  [key=0, style=solid];
m11_147 -> m11_151  [key=2, style=dotted];
m11_147 -> m11_149  [key=1, style=dashed, color=darkseagreen4, label=ha];
m11_149 -> m11_150  [key=0, style=solid];
m11_150 -> m11_145  [key=0, style=bold, color=blue];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_17 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_6  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_23  [key=2, style=dotted];
m11_19 -> m11_21  [key=1, style=dashed, color=darkseagreen4, label=averageDirectionalIndex];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_24  [key=2, style=dotted];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_17  [key=0, style=bold, color=blue];
m11_285 -> m11_286  [key=0, style=solid];
m11_285 -> m11_287  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_285 -> m11_288  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_286 -> m11_287  [key=0, style=solid];
m11_286 -> m11_6  [key=2, style=dotted];
m11_287 -> m11_288  [key=0, style=solid];
m11_287 -> m11_291  [key=2, style=dotted];
m11_287 -> m11_289  [key=1, style=dashed, color=darkseagreen4, label=momentum];
m11_288 -> m11_289  [key=0, style=solid];
m11_288 -> m11_40  [key=2, style=dotted];
m11_289 -> m11_290  [key=0, style=solid];
m11_290 -> m11_285  [key=0, style=bold, color=blue];
m11_129 -> m11_531  [key=0, style=solid];
m11_531 -> m11_532  [key=0, style=solid];
m11_531 -> m11_246  [key=2, style=dotted];
m11_531 -> m11_137  [key=2, style=dotted];
m11_532 -> m11_129  [key=0, style=bold, color=blue];
m11_100 -> m11_101  [key=0, style=solid];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_93  [key=2, style=dotted];
m11_102 -> m11_100  [key=0, style=bold, color=blue];
m11_178 -> m11_179  [key=0, style=solid];
m11_178 -> m11_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_38  [key=2, style=dotted];
m11_181 -> m11_182  [key=0, style=solid];
m11_181 -> m11_136  [key=2, style=dotted];
m11_181 -> m11_184  [key=2, style=dotted];
m11_180 -> m11_181  [key=0, style=solid];
m11_180 -> m11_177  [key=2, style=dotted];
m11_180 -> m11_182  [key=1, style=dashed, color=darkseagreen4, label=identity];
m11_182 -> m11_183  [key=0, style=solid];
m11_183 -> m11_178  [key=0, style=bold, color=blue];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_159 -> m11_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_15  [key=2, style=dotted];
m11_160 -> m11_6  [key=2, style=dotted];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_165  [key=2, style=dotted];
m11_161 -> m11_163  [key=1, style=dashed, color=darkseagreen4, label=ichimoku];
m11_162 -> m11_163  [key=0, style=solid];
m11_162 -> m11_166  [key=2, style=dotted];
m11_163 -> m11_164  [key=0, style=solid];
m11_164 -> m11_159  [key=0, style=bold, color=blue];
m11_313 -> m11_314  [key=0, style=solid];
m11_313 -> m11_316  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_314 -> m11_315  [key=0, style=solid];
m11_314 -> m11_6  [key=2, style=dotted];
m11_316 -> m11_317  [key=0, style=solid];
m11_316 -> m11_8  [key=2, style=dotted];
m11_315 -> m11_316  [key=0, style=solid];
m11_315 -> m11_319  [key=2, style=dotted];
m11_315 -> m11_317  [key=1, style=dashed, color=darkseagreen4, label=onBalanceVolume];
m11_317 -> m11_318  [key=0, style=solid];
m11_318 -> m11_313  [key=0, style=bold, color=blue];
m11_93 -> m11_94  [key=0, style=solid];
m11_93 -> m11_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_93 -> m11_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_6  [key=2, style=dotted];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_99  [key=2, style=dotted];
m11_95 -> m11_97  [key=1, style=dashed, color=darkseagreen4, label=donchianChannel];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_24  [key=2, style=dotted];
m11_97 -> m11_98  [key=0, style=solid];
m11_98 -> m11_93  [key=0, style=bold, color=blue];
m11_507 -> m11_508  [key=0, style=solid];
m11_508 -> m11_509  [key=0, style=solid];
m11_508 -> m11_136  [key=2, style=dotted];
m11_508 -> m11_184  [key=2, style=dotted];
m11_508 -> m11_511  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.IBaseData"];
m11_509 -> m11_507  [key=0, style=bold, color=blue];
m11_348 -> m11_349  [key=0, style=solid];
m11_348 -> m11_350  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_348 -> m11_351  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_349 -> m11_350  [key=0, style=solid];
m11_349 -> m11_6  [key=2, style=dotted];
m11_350 -> m11_351  [key=0, style=solid];
m11_350 -> m11_354  [key=2, style=dotted];
m11_350 -> m11_352  [key=1, style=dashed, color=darkseagreen4, label=rateofchangepercent];
m11_351 -> m11_352  [key=0, style=solid];
m11_351 -> m11_40  [key=2, style=dotted];
m11_352 -> m11_353  [key=0, style=solid];
m11_353 -> m11_348  [key=0, style=bold, color=blue];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_187  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_185 -> m11_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_186 -> m11_187  [key=0, style=solid];
m11_186 -> m11_6  [key=2, style=dotted];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_191  [key=2, style=dotted];
m11_187 -> m11_189  [key=1, style=dashed, color=darkseagreen4, label=kama];
m11_188 -> m11_189  [key=0, style=solid];
m11_188 -> m11_40  [key=2, style=dotted];
m11_189 -> m11_190  [key=0, style=solid];
m11_190 -> m11_185  [key=0, style=bold, color=blue];
m11_192 -> m11_193  [key=0, style=solid];
m11_192 -> m11_194  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_192 -> m11_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_193 -> m11_194  [key=0, style=solid];
m11_193 -> m11_6  [key=2, style=dotted];
m11_194 -> m11_195  [key=0, style=solid];
m11_194 -> m11_198  [key=2, style=dotted];
m11_194 -> m11_196  [key=1, style=dashed, color=darkseagreen4, label=keltnerChannels];
m11_195 -> m11_196  [key=0, style=solid];
m11_195 -> m11_24  [key=2, style=dotted];
m11_196 -> m11_197  [key=0, style=solid];
m11_197 -> m11_192  [key=0, style=bold, color=blue];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_124  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, bool>"];
m11_122 -> m11_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_123 -> m11_124  [key=0, style=solid];
m11_123 -> m11_6  [key=2, style=dotted];
m11_124 -> m11_125  [key=0, style=solid];
m11_124 -> m11_128  [key=2, style=dotted];
m11_124 -> m11_126  [key=1, style=dashed, color=darkseagreen4, label=filteredIdentity];
m11_125 -> m11_126  [key=0, style=solid];
m11_125 -> m11_129  [key=2, style=dotted];
m11_126 -> m11_127  [key=0, style=solid];
m11_127 -> m11_122  [key=0, style=bold, color=blue];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_67  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_65 -> m11_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_15  [key=2, style=dotted];
m11_66 -> m11_6  [key=2, style=dotted];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_71  [key=2, style=dotted];
m11_67 -> m11_69  [key=1, style=dashed, color=darkseagreen4, label=bb];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_40  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_70 -> m11_65  [key=0, style=bold, color=blue];
m11_246 -> m11_551  [key=0, style=solid];
m11_246 -> m11_552  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m11_246 -> m11_554  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m11_246 -> m11_556  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_246 -> m11_557  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_551 -> m11_552  [key=0, style=solid];
m11_551 -> m11_121  [key=2, style=dotted];
m11_551 -> m11_553  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_551 -> m11_555  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_551 -> m11_556  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m11_552 -> m11_553  [key=0, style=solid];
m11_552 -> m11_554  [key=0, style=solid];
m11_554 -> m11_555  [key=0, style=solid];
m11_554 -> m11_559  [key=2, style=dotted];
m11_554 -> m11_557  [key=1, style=dashed, color=darkseagreen4, label=timeSpan];
m11_556 -> m11_558  [key=0, style=solid];
m11_556 -> m11_543  [key=2, style=dotted];
m11_556 -> m11_38  [key=2, style=dotted];
m11_557 -> m11_558  [key=0, style=solid];
m11_557 -> m11_136  [key=2, style=dotted];
m11_553 -> m11_554  [key=0, style=solid];
m11_553 -> m11_556  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution?"];
m11_555 -> m11_556  [key=0, style=solid];
m11_555 -> m11_557  [key=0, style=solid];
m11_555 -> m11_559  [key=2, style=dotted];
m11_558 -> m11_246  [key=0, style=bold, color=blue];
m11_428 -> m11_429  [key=0, style=solid];
m11_428 -> m11_430  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_428 -> m11_431  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_429 -> m11_430  [key=0, style=solid];
m11_429 -> m11_6  [key=2, style=dotted];
m11_430 -> m11_431  [key=0, style=solid];
m11_430 -> m11_434  [key=2, style=dotted];
m11_430 -> m11_432  [key=1, style=dashed, color=darkseagreen4, label=trima];
m11_431 -> m11_432  [key=0, style=solid];
m11_431 -> m11_40  [key=2, style=dotted];
m11_432 -> m11_433  [key=0, style=solid];
m11_433 -> m11_428  [key=0, style=bold, color=blue];
m11_590 -> m11_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_26  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_28  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_209  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_221  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_228  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_235  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_251  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_253  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_265  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_267  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_272  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_275  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_278  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_286  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_288  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_293  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_295  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_300  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_302  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_307  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_309  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_314  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_316  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_323  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_328  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_330  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_335  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_337  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_342  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_344  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_349  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_351  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_356  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_358  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_363  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_365  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_370  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_372  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_377  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_379  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_384  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_386  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_391  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_394  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_396  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_401  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_403  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_408  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_410  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_415  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_417  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_422  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_424  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_429  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_431  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_436  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_438  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_443  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_445  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_450  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_452  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_457  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_459  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_464  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_466  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_471  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_492  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_502  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_508  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_514  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_529  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_531  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_534  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_537  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_551  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_557  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_590 -> m11_560  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.QCAlgorithm"];
m11_591 -> m11_500  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m11_592 -> m11_522  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, decimal>"];
m11_593 -> m11_523  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m11_594 -> m11_548  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Data.IBaseData, T>"];
m11_595 -> m11_549  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<T>"];
m12_80 -> m12_81  [key=0, style=solid];
m12_81 -> m12_82  [key=0, style=solid];
m12_82 -> m12_83  [key=0, style=solid];
m12_83 -> m12_84  [key=0, style=solid];
m12_83 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label=environment];
m12_83 -> m12_101  [key=1, style=dashed, color=darkseagreen4, label=environment];
m12_83 -> m12_112  [key=1, style=dashed, color=darkseagreen4, label=environment];
m12_83 -> m12_124  [key=1, style=dashed, color=darkseagreen4, label=environment];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label=account];
m12_84 -> m12_101  [key=1, style=dashed, color=darkseagreen4, label=account];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_140  [key=2, style=dotted];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_142  [key=2, style=dotted];
m12_112 -> m12_113  [key=0, style=solid];
m12_112 -> m12_144  [key=2, style=dotted];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_18  [key=2, style=dotted];
m12_85 -> m12_86  [key=0, style=solid];
m12_86 -> m12_87  [key=0, style=solid];
m12_87 -> m12_88  [key=0, style=solid];
m12_88 -> m12_89  [key=0, style=solid];
m12_89 -> m12_90  [key=0, style=solid];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_137  [key=0, style=solid];
m12_90 -> m12_138  [key=2, style=dotted];
m12_90 -> m12_92  [key=1, style=dashed, color=darkseagreen4, label=brokerageName];
m12_90 -> m12_119  [key=1, style=dashed, color=darkseagreen4, label=brokerageName];
m12_90 -> m12_123  [key=1, style=dashed, color=darkseagreen4, label=brokerageName];
m12_90 -> m12_125  [key=1, style=dashed, color=darkseagreen4, label=brokerageName];
m12_90 -> m12_128  [key=1, style=dashed, color=darkseagreen4, label=brokerageName];
m12_91 -> m12_92  [key=0, style=solid];
m12_92 -> m12_93  [key=0, style=solid];
m12_92 -> m12_98  [key=0, style=solid];
m12_92 -> m12_103  [key=0, style=solid];
m12_92 -> m12_109  [key=0, style=solid];
m12_92 -> m12_114  [key=0, style=solid];
m12_92 -> m12_119  [key=0, style=solid];
m12_119 -> m12_137  [key=0, style=solid];
m12_119 -> m12_146  [key=2, style=dotted];
m12_119 -> n353  [key=2, style=dotted];
m12_123 -> m12_124  [key=0, style=solid];
m12_123 -> m12_125  [key=0, style=solid];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_128  [key=0, style=solid];
m12_128 -> m12_129  [key=0, style=solid];
m12_128 -> m12_133  [key=0, style=solid];
m12_93 -> m12_94  [key=0, style=solid];
m12_98 -> m12_99  [key=0, style=solid];
m12_103 -> m12_104  [key=0, style=solid];
m12_109 -> m12_110  [key=0, style=solid];
m12_114 -> m12_115  [key=0, style=solid];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_139  [key=2, style=dotted];
m12_94 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label=user];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_139  [key=2, style=dotted];
m12_97 -> m12_120  [key=0, style=solid];
m12_97 -> n353  [key=2, style=dotted];
m12_97 -> m12_18  [key=2, style=dotted];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_139  [key=2, style=dotted];
m12_99 -> m12_101  [key=1, style=dashed, color=darkseagreen4, label=user];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_139  [key=2, style=dotted];
m12_102 -> m12_120  [key=0, style=solid];
m12_102 -> n353  [key=2, style=dotted];
m12_102 -> m12_18  [key=2, style=dotted];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_139  [key=2, style=dotted];
m12_104 -> m12_107  [key=1, style=dashed, color=darkseagreen4, label=user];
m12_104 -> m12_122  [key=1, style=dashed, color=darkseagreen4, label=user];
m12_105 -> m12_106  [key=0, style=solid];
m12_105 -> m12_139  [key=2, style=dotted];
m12_105 -> m12_107  [key=1, style=dashed, color=darkseagreen4, label=password];
m12_105 -> m12_121  [key=1, style=dashed, color=darkseagreen4, label=password];
m12_107 -> m12_108  [key=0, style=solid];
m12_107 -> m12_143  [key=2, style=dotted];
m12_122 -> m12_123  [key=0, style=solid];
m12_122 -> m12_18  [key=2, style=dotted];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_139  [key=2, style=dotted];
m12_121 -> m12_122  [key=0, style=solid];
m12_121 -> m12_18  [key=2, style=dotted];
m12_108 -> m12_120  [key=0, style=solid];
m12_108 -> n353  [key=2, style=dotted];
m12_108 -> m12_18  [key=2, style=dotted];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_139  [key=2, style=dotted];
m12_110 -> m12_112  [key=1, style=dashed, color=darkseagreen4, label=accessToken];
m12_110 -> m12_127  [key=1, style=dashed, color=darkseagreen4, label=accessToken];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_139  [key=2, style=dotted];
m12_127 -> m12_128  [key=0, style=solid];
m12_127 -> m12_18  [key=2, style=dotted];
m12_113 -> m12_120  [key=0, style=solid];
m12_113 -> n353  [key=2, style=dotted];
m12_113 -> m12_18  [key=2, style=dotted];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_139  [key=2, style=dotted];
m12_115 -> m12_118  [key=1, style=dashed, color=darkseagreen4, label=dateIssued];
m12_115 -> m12_130  [key=1, style=dashed, color=darkseagreen4, label=dateIssued];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_139  [key=2, style=dotted];
m12_116 -> m12_118  [key=1, style=dashed, color=darkseagreen4, label=refreshToken];
m12_116 -> m12_131  [key=1, style=dashed, color=darkseagreen4, label=refreshToken];
m12_118 -> m12_120  [key=0, style=solid];
m12_118 -> m12_145  [key=2, style=dotted];
m12_118 -> m12_121  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_118 -> m12_122  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_118 -> m12_124  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_118 -> m12_126  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_118 -> m12_129  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_118 -> m12_132  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_18  [key=2, style=dotted];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_139  [key=2, style=dotted];
m12_131 -> m12_132  [key=0, style=solid];
m12_131 -> m12_18  [key=2, style=dotted];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_18  [key=2, style=dotted];
m12_126 -> m12_127  [key=0, style=solid];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_131  [key=1, style=dashed, color=darkseagreen4, label=tradierLiveAlogrithmSettings];
m12_132 -> m12_133  [key=0, style=solid];
m12_132 -> m12_18  [key=2, style=dotted];
m12_133 -> m12_134  [key=0, style=solid];
m12_134 -> m12_135  [key=0, style=solid];
m12_135 -> m12_136  [key=0, style=solid];
m12_136 -> m12_90  [key=0, style=solid];
m12_137 -> m12_80  [key=0, style=bold, color=blue];
m12_373 -> m12_392  [key=0, style=solid];
m12_373 -> m12_395  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_392 -> m12_393  [key=0, style=solid];
m12_392 -> m12_401  [key=2, style=dotted];
m12_392 -> m12_399  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_395 -> m12_396  [key=0, style=solid];
m12_395 -> m12_376  [key=2, style=dotted];
m12_395 -> m12_397  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_395 -> m12_399  [key=1, style=dashed, color=darkseagreen4, label=result];
m12_393 -> m12_394  [key=0, style=solid];
m12_393 -> m12_390  [key=2, style=dotted];
m12_399 -> m12_400  [key=0, style=solid];
m12_394 -> m12_395  [key=0, style=solid];
m12_394 -> m12_399  [key=0, style=solid];
m12_396 -> m12_397  [key=0, style=solid];
m12_396 -> m12_399  [key=0, style=solid];
m12_397 -> m12_398  [key=0, style=solid];
m12_397 -> m12_399  [key=0, style=solid];
m12_398 -> m12_394  [key=0, style=solid];
m12_398 -> m12_183  [key=2, style=dotted];
m12_400 -> m12_373  [key=0, style=bold, color=blue];
m12_302 -> m12_317  [key=0, style=solid];
m12_302 -> m12_320  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_302 -> m12_326  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_302 -> m12_327  [key=1, style=dashed, color=darkseagreen4, label=string];
m12_317 -> m12_318  [key=0, style=solid];
m12_317 -> m12_17  [key=2, style=dotted];
m12_317 -> m12_319  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_320  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_323  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_379  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_324  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_328  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_330  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_332  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_335  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_339  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_340  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_341  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_345  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_347  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_352  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_357  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_359  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_362  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_364  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_366  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_317 -> m12_368  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_320 -> m12_321  [key=0, style=solid];
m12_320 -> m12_19  [key=2, style=dotted];
m12_320 -> m12_18  [key=2, style=dotted];
m12_326 -> m12_327  [key=0, style=solid];
m12_326 -> m12_19  [key=2, style=dotted];
m12_326 -> m12_18  [key=2, style=dotted];
m12_327 -> m12_328  [key=0, style=solid];
m12_327 -> m12_71  [key=2, style=dotted];
m12_327 -> m12_338  [key=1, style=dashed, color=darkseagreen4, label=file];
m12_327 -> m12_339  [key=1, style=dashed, color=darkseagreen4, label=file];
m12_318 -> m12_319  [key=0, style=solid];
m12_318 -> m12_18  [key=2, style=dotted];
m12_319 -> m12_320  [key=0, style=solid];
m12_319 -> m12_19  [key=2, style=dotted];
m12_319 -> m12_18  [key=2, style=dotted];
m12_323 -> m12_324  [key=0, style=solid];
m12_323 -> m12_22  [key=2, style=dotted];
m12_323 -> m12_18  [key=2, style=dotted];
m12_323 -> m12_378  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_324 -> m12_325  [key=0, style=solid];
m12_324 -> m12_19  [key=2, style=dotted];
m12_324 -> m12_255  [key=2, style=dotted];
m12_324 -> m12_326  [key=1, style=dashed, color=darkseagreen4, label=readProject];
m12_328 -> m12_329  [key=0, style=solid];
m12_328 -> m12_19  [key=2, style=dotted];
m12_328 -> m12_74  [key=2, style=dotted];
m12_330 -> m12_331  [key=0, style=solid];
m12_330 -> m12_19  [key=2, style=dotted];
m12_330 -> m12_255  [key=2, style=dotted];
m12_332 -> m12_333  [key=0, style=solid];
m12_332 -> m12_19  [key=2, style=dotted];
m12_332 -> m12_182  [key=2, style=dotted];
m12_332 -> m12_334  [key=1, style=dashed, color=darkseagreen4, label=compileCreate];
m12_332 -> m12_335  [key=1, style=dashed, color=darkseagreen4, label=compileCreate];
m12_335 -> m12_336  [key=0, style=solid];
m12_335 -> m12_19  [key=2, style=dotted];
m12_335 -> m12_371  [key=2, style=dotted];
m12_335 -> m12_337  [key=1, style=dashed, color=darkseagreen4, label=compileSuccess];
m12_335 -> m12_345  [key=1, style=dashed, color=darkseagreen4, label=compileSuccess];
m12_339 -> m12_340  [key=0, style=solid];
m12_339 -> m12_19  [key=2, style=dotted];
m12_339 -> m12_76  [key=2, style=dotted];
m12_340 -> m12_341  [key=0, style=solid];
m12_340 -> m12_19  [key=2, style=dotted];
m12_340 -> m12_182  [key=2, style=dotted];
m12_341 -> m12_342  [key=0, style=solid];
m12_341 -> m12_19  [key=2, style=dotted];
m12_341 -> m12_371  [key=2, style=dotted];
m12_341 -> m12_341  [key=1, style=dashed, color=darkseagreen4, label=compileError];
m12_341 -> m12_343  [key=1, style=dashed, color=darkseagreen4, label=compileError];
m12_345 -> m12_346  [key=0, style=solid];
m12_345 -> m12_19  [key=2, style=dotted];
m12_345 -> m12_372  [key=2, style=dotted];
m12_345 -> m12_347  [key=1, style=dashed, color=darkseagreen4, label=backtest];
m12_345 -> m12_357  [key=1, style=dashed, color=darkseagreen4, label=backtest];
m12_345 -> m12_359  [key=1, style=dashed, color=darkseagreen4, label=backtest];
m12_345 -> m12_362  [key=1, style=dashed, color=darkseagreen4, label=backtest];
m12_345 -> m12_364  [key=1, style=dashed, color=darkseagreen4, label=backtest];
m12_345 -> m12_366  [key=1, style=dashed, color=darkseagreen4, label=backtest];
m12_347 -> m12_348  [key=0, style=solid];
m12_347 -> m12_19  [key=2, style=dotted];
m12_347 -> m12_373  [key=2, style=dotted];
m12_347 -> m12_349  [key=1, style=dashed, color=darkseagreen4, label=backtestRead];
m12_347 -> m12_350  [key=1, style=dashed, color=darkseagreen4, label=backtestRead];
m12_347 -> m12_351  [key=1, style=dashed, color=darkseagreen4, label=backtestRead];
m12_352 -> m12_353  [key=0, style=solid];
m12_352 -> m12_19  [key=2, style=dotted];
m12_352 -> m12_374  [key=2, style=dotted];
m12_352 -> m12_354  [key=1, style=dashed, color=darkseagreen4, label=listBacktests];
m12_352 -> m12_355  [key=1, style=dashed, color=darkseagreen4, label=listBacktests];
m12_357 -> m12_358  [key=0, style=solid];
m12_357 -> m12_19  [key=2, style=dotted];
m12_357 -> m12_375  [key=2, style=dotted];
m12_359 -> m12_360  [key=0, style=solid];
m12_359 -> m12_19  [key=2, style=dotted];
m12_359 -> m12_376  [key=2, style=dotted];
m12_362 -> m12_363  [key=0, style=solid];
m12_362 -> m12_19  [key=2, style=dotted];
m12_362 -> m12_375  [key=2, style=dotted];
m12_364 -> m12_365  [key=0, style=solid];
m12_364 -> m12_19  [key=2, style=dotted];
m12_364 -> m12_376  [key=2, style=dotted];
m12_366 -> m12_367  [key=0, style=solid];
m12_366 -> m12_19  [key=2, style=dotted];
m12_366 -> m12_377  [key=2, style=dotted];
m12_368 -> m12_369  [key=0, style=solid];
m12_368 -> m12_19  [key=2, style=dotted];
m12_368 -> m12_20  [key=2, style=dotted];
m12_321 -> m12_322  [key=0, style=solid];
m12_321 -> m12_21  [key=2, style=dotted];
m12_321 -> m12_323  [key=1, style=dashed, color=darkseagreen4, label=projects];
m12_322 -> m12_323  [key=0, style=solid];
m12_322 -> m12_18  [key=2, style=dotted];
m12_325 -> m12_326  [key=0, style=solid];
m12_325 -> m12_18  [key=2, style=dotted];
m12_338 -> m12_339  [key=0, style=solid];
m12_329 -> m12_330  [key=0, style=solid];
m12_329 -> m12_18  [key=2, style=dotted];
m12_331 -> m12_332  [key=0, style=solid];
m12_331 -> m12_18  [key=2, style=dotted];
m12_333 -> m12_334  [key=0, style=solid];
m12_333 -> m12_18  [key=2, style=dotted];
m12_334 -> m12_335  [key=0, style=solid];
m12_334 -> m12_18  [key=2, style=dotted];
m12_336 -> m12_337  [key=0, style=solid];
m12_336 -> m12_18  [key=2, style=dotted];
m12_337 -> m12_338  [key=0, style=solid];
m12_337 -> m12_18  [key=2, style=dotted];
m12_342 -> m12_343  [key=0, style=solid];
m12_342 -> m12_18  [key=2, style=dotted];
m12_343 -> m12_344  [key=0, style=solid];
m12_343 -> m12_18  [key=2, style=dotted];
m12_344 -> m12_345  [key=0, style=solid];
m12_344 -> m12_301  [key=2, style=dotted];
m12_344 -> m12_350  [key=1, style=dashed, color=darkseagreen4, label=backtestName];
m12_344 -> m12_355  [key=1, style=dashed, color=darkseagreen4, label=backtestName];
m12_344 -> m12_356  [key=1, style=dashed, color=darkseagreen4, label=backtestName];
m12_350 -> m12_351  [key=0, style=solid];
m12_350 -> m12_18  [key=2, style=dotted];
m12_355 -> m12_356  [key=0, style=solid];
m12_355 -> m12_18  [key=2, style=dotted];
m12_356 -> m12_357  [key=0, style=solid];
m12_356 -> m12_356  [key=1, style=dashed, color=darkseagreen4, label=backtestName];
m12_356 -> m12_360  [key=1, style=dashed, color=darkseagreen4, label=backtestName];
m12_346 -> m12_347  [key=0, style=solid];
m12_346 -> m12_18  [key=2, style=dotted];
m12_348 -> m12_349  [key=0, style=solid];
m12_348 -> m12_18  [key=2, style=dotted];
m12_349 -> m12_350  [key=0, style=solid];
m12_349 -> m12_18  [key=2, style=dotted];
m12_351 -> m12_352  [key=0, style=solid];
m12_351 -> m12_18  [key=2, style=dotted];
m12_353 -> m12_354  [key=0, style=solid];
m12_353 -> m12_18  [key=2, style=dotted];
m12_354 -> m12_355  [key=0, style=solid];
m12_354 -> m12_18  [key=2, style=dotted];
m12_360 -> m12_361  [key=0, style=solid];
m12_360 -> m12_18  [key=2, style=dotted];
m12_358 -> m12_359  [key=0, style=solid];
m12_358 -> m12_18  [key=2, style=dotted];
m12_361 -> m12_362  [key=0, style=solid];
m12_361 -> m12_301  [key=2, style=dotted];
m12_361 -> m12_365  [key=1, style=dashed, color=darkseagreen4, label=newNote];
m12_365 -> m12_366  [key=0, style=solid];
m12_365 -> m12_18  [key=2, style=dotted];
m12_363 -> m12_364  [key=0, style=solid];
m12_363 -> m12_18  [key=2, style=dotted];
m12_367 -> m12_368  [key=0, style=solid];
m12_367 -> m12_18  [key=2, style=dotted];
m12_369 -> m12_370  [key=0, style=solid];
m12_369 -> m12_18  [key=2, style=dotted];
m12_370 -> m12_302  [key=0, style=bold, color=blue];
m12_6 -> m12_7  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label=name];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_17  [key=2, style=dotted];
m12_8 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_8 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_8 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_8 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_8 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_19  [key=2, style=dotted];
m12_11 -> m12_18  [key=2, style=dotted];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_18  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_19  [key=2, style=dotted];
m12_10 -> m12_18  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_19  [key=2, style=dotted];
m12_12 -> m12_20  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_22  [key=2, style=dotted];
m12_15 -> m12_23  [key=2, style=dotted];
m12_15 -> m12_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_18  [key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_21  [key=2, style=dotted];
m12_16 -> m12_6  [key=0, style=bold, color=blue];
m12_266 -> m12_267  [key=0, style=solid];
m12_267 -> m12_268  [key=0, style=solid];
m12_267 -> m12_262  [key=2, style=dotted];
m12_267 -> m12_263  [key=2, style=dotted];
m12_267 -> m12_264  [key=2, style=dotted];
m12_267 -> m12_265  [key=2, style=dotted];
m12_267 -> m12_269  [key=1, style=dashed, color=darkseagreen4, label=minuteDataLink];
m12_268 -> m12_269  [key=0, style=solid];
m12_268 -> m12_262  [key=2, style=dotted];
m12_268 -> m12_263  [key=2, style=dotted];
m12_268 -> m12_264  [key=2, style=dotted];
m12_268 -> m12_265  [key=2, style=dotted];
m12_268 -> m12_270  [key=1, style=dashed, color=darkseagreen4, label=dailyDataLink];
m12_269 -> m12_270  [key=0, style=solid];
m12_269 -> m12_18  [key=2, style=dotted];
m12_270 -> m12_271  [key=0, style=solid];
m12_270 -> m12_18  [key=2, style=dotted];
m12_271 -> m12_266  [key=0, style=bold, color=blue];
m12_27 -> m12_28  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_31  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_18  [key=2, style=dotted];
m12_30 -> m12_27  [key=0, style=bold, color=blue];
m12_256 -> m12_257  [key=0, style=solid];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_262  [key=2, style=dotted];
m12_257 -> m12_263  [key=2, style=dotted];
m12_257 -> m12_264  [key=2, style=dotted];
m12_257 -> m12_265  [key=2, style=dotted];
m12_257 -> m12_259  [key=1, style=dashed, color=darkseagreen4, label=minuteDataLink];
m12_258 -> m12_259  [key=0, style=solid];
m12_258 -> m12_262  [key=2, style=dotted];
m12_258 -> m12_263  [key=2, style=dotted];
m12_258 -> m12_264  [key=2, style=dotted];
m12_258 -> m12_265  [key=2, style=dotted];
m12_258 -> m12_260  [key=1, style=dashed, color=darkseagreen4, label=dailyDataLink];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_18  [key=2, style=dotted];
m12_260 -> m12_261  [key=0, style=solid];
m12_260 -> m12_18  [key=2, style=dotted];
m12_261 -> m12_256  [key=0, style=bold, color=blue];
m12_378 -> m12_379  [key=0, style=solid];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_19  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_26 -> m12_24  [key=0, style=bold, color=blue];
m12_379 -> m12_380  [key=0, style=solid];
m12_379 -> m12_19  [key=2, style=dotted];
m12_380 -> m12_378  [key=0, style=bold, color=blue];
m12_272 -> m12_273  [key=0, style=solid];
m12_273 -> m12_274  [key=0, style=solid];
m12_273 -> m12_286  [key=2, style=dotted];
m12_273 -> m12_277  [key=1, style=dashed, color=darkseagreen4, label=minutePath];
m12_273 -> m12_278  [key=1, style=dashed, color=darkseagreen4, label=minutePath];
m12_273 -> m12_284  [key=1, style=dashed, color=darkseagreen4, label=minutePath];
m12_274 -> m12_275  [key=0, style=solid];
m12_274 -> m12_286  [key=2, style=dotted];
m12_274 -> m12_276  [key=1, style=dashed, color=darkseagreen4, label=dailyPath];
m12_274 -> m12_283  [key=1, style=dashed, color=darkseagreen4, label=dailyPath];
m12_277 -> m12_278  [key=0, style=solid];
m12_277 -> m12_279  [key=0, style=solid];
m12_277 -> m12_287  [key=2, style=dotted];
m12_278 -> m12_279  [key=0, style=solid];
m12_278 -> m12_288  [key=2, style=dotted];
m12_284 -> m12_285  [key=0, style=solid];
m12_284 -> m12_287  [key=2, style=dotted];
m12_284 -> m12_18  [key=2, style=dotted];
m12_275 -> m12_276  [key=0, style=solid];
m12_275 -> m12_277  [key=0, style=solid];
m12_275 -> m12_287  [key=2, style=dotted];
m12_276 -> m12_277  [key=0, style=solid];
m12_276 -> m12_288  [key=2, style=dotted];
m12_283 -> m12_284  [key=0, style=solid];
m12_283 -> m12_287  [key=2, style=dotted];
m12_283 -> m12_18  [key=2, style=dotted];
m12_279 -> m12_280  [key=0, style=solid];
m12_279 -> m12_262  [key=2, style=dotted];
m12_279 -> m12_263  [key=2, style=dotted];
m12_279 -> m12_264  [key=2, style=dotted];
m12_279 -> m12_289  [key=2, style=dotted];
m12_279 -> m12_281  [key=1, style=dashed, color=darkseagreen4, label=downloadedMinuteData];
m12_280 -> m12_281  [key=0, style=solid];
m12_280 -> m12_262  [key=2, style=dotted];
m12_280 -> m12_263  [key=2, style=dotted];
m12_280 -> m12_264  [key=2, style=dotted];
m12_280 -> m12_289  [key=2, style=dotted];
m12_280 -> m12_282  [key=1, style=dashed, color=darkseagreen4, label=downloadedDailyData];
m12_281 -> m12_282  [key=0, style=solid];
m12_281 -> m12_18  [key=2, style=dotted];
m12_282 -> m12_283  [key=0, style=solid];
m12_282 -> m12_18  [key=2, style=dotted];
m12_285 -> m12_272  [key=0, style=bold, color=blue];
m12_371 -> m12_381  [key=0, style=solid];
m12_371 -> m12_384  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_381 -> m12_382  [key=0, style=solid];
m12_381 -> m12_389  [key=2, style=dotted];
m12_381 -> m12_387  [key=1, style=dashed, color=darkseagreen4, label=compile];
m12_384 -> m12_385  [key=0, style=solid];
m12_384 -> m12_391  [key=2, style=dotted];
m12_384 -> m12_387  [key=1, style=dashed, color=darkseagreen4, label=compile];
m12_382 -> m12_383  [key=0, style=solid];
m12_382 -> m12_390  [key=2, style=dotted];
m12_387 -> m12_388  [key=0, style=solid];
m12_383 -> m12_384  [key=0, style=solid];
m12_383 -> m12_387  [key=0, style=solid];
m12_385 -> m12_386  [key=0, style=solid];
m12_385 -> m12_387  [key=0, style=solid];
m12_386 -> m12_383  [key=0, style=solid];
m12_386 -> m12_183  [key=2, style=dotted];
m12_388 -> m12_371  [key=0, style=bold, color=blue];
m12_303 -> m12_304  [key=0, style=solid];
m12_304 -> m12_305  [key=0, style=solid];
m12_304 -> m12_307  [key=1, style=dashed, color=darkseagreen4, label=language];
m12_304 -> m12_308  [key=1, style=dashed, color=darkseagreen4, label=language];
m12_305 -> m12_306  [key=0, style=solid];
m12_305 -> m12_73  [key=2, style=dotted];
m12_305 -> m12_308  [key=1, style=dashed, color=darkseagreen4, label=code];
m12_307 -> m12_308  [key=0, style=solid];
m12_307 -> m12_301  [key=2, style=dotted];
m12_308 -> m12_309  [key=0, style=solid];
m12_308 -> m12_302  [key=2, style=dotted];
m12_306 -> m12_307  [key=0, style=solid];
m12_306 -> m12_308  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m12_309 -> m12_303  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_4  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_5  [key=2, style=dotted];
m12_3 -> m12_0  [key=0, style=bold, color=blue];
m12_159 -> m12_160  [key=0, style=solid];
m12_160 -> m12_161  [key=0, style=solid];
m12_160 -> m12_139  [key=2, style=dotted];
m12_160 -> m12_170  [key=1, style=dashed, color=darkseagreen4, label=user];
m12_161 -> m12_162  [key=0, style=solid];
m12_161 -> m12_139  [key=2, style=dotted];
m12_161 -> m12_170  [key=1, style=dashed, color=darkseagreen4, label=password];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_142  [key=2, style=dotted];
m12_170 -> m12_172  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_139  [key=2, style=dotted];
m12_162 -> m12_170  [key=1, style=dashed, color=darkseagreen4, label=account];
m12_163 -> m12_164  [key=0, style=solid];
m12_163 -> m12_71  [key=2, style=dotted];
m12_163 -> m12_73  [key=2, style=dotted];
m12_163 -> m12_166  [key=1, style=dashed, color=darkseagreen4, label=file];
m12_164 -> m12_165  [key=0, style=solid];
m12_164 -> m12_17  [key=2, style=dotted];
m12_164 -> m12_166  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_164 -> m12_168  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_164 -> m12_172  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_164 -> m12_175  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_164 -> m12_177  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_164 -> m12_179  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> m12_19  [key=2, style=dotted];
m12_166 -> m12_74  [key=2, style=dotted];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_18  [key=2, style=dotted];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_19  [key=2, style=dotted];
m12_168 -> m12_182  [key=2, style=dotted];
m12_168 -> m12_172  [key=1, style=dashed, color=darkseagreen4, label=compile];
m12_172 -> m12_173  [key=0, style=solid];
m12_172 -> m12_19  [key=2, style=dotted];
m12_172 -> m12_184  [key=2, style=dotted];
m12_175 -> m12_176  [key=0, style=solid];
m12_175 -> m12_19  [key=2, style=dotted];
m12_175 -> m12_185  [key=2, style=dotted];
m12_177 -> m12_178  [key=0, style=solid];
m12_177 -> m12_19  [key=2, style=dotted];
m12_177 -> m12_186  [key=2, style=dotted];
m12_179 -> m12_180  [key=0, style=solid];
m12_179 -> m12_19  [key=2, style=dotted];
m12_179 -> m12_20  [key=2, style=dotted];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_18  [key=2, style=dotted];
m12_169 -> m12_170  [key=0, style=solid];
m12_169 -> m12_18  [key=2, style=dotted];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_183  [key=2, style=dotted];
m12_173 -> m12_174  [key=0, style=solid];
m12_173 -> m12_18  [key=2, style=dotted];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_181  [key=0, style=solid];
m12_176 -> m12_177  [key=0, style=solid];
m12_176 -> m12_18  [key=2, style=dotted];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_18  [key=2, style=dotted];
m12_180 -> m12_181  [key=0, style=solid];
m12_180 -> m12_18  [key=2, style=dotted];
m12_181 -> m12_159  [key=0, style=bold, color=blue];
m12_32 -> m12_33  [key=0, style=solid];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_31  [key=2, style=dotted];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_23  [key=2, style=dotted];
m12_35 -> m12_32  [key=0, style=bold, color=blue];
m12_230 -> m12_231  [key=0, style=solid];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_139  [key=2, style=dotted];
m12_231 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label=refreshToken];
m12_232 -> m12_233  [key=0, style=solid];
m12_232 -> m12_139  [key=2, style=dotted];
m12_232 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label=account];
m12_243 -> m12_244  [key=0, style=solid];
m12_243 -> m12_145  [key=2, style=dotted];
m12_243 -> m12_245  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_139  [key=2, style=dotted];
m12_233 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label=accessToken];
m12_234 -> m12_235  [key=0, style=solid];
m12_234 -> m12_139  [key=2, style=dotted];
m12_234 -> m12_243  [key=1, style=dashed, color=darkseagreen4, label=dateIssued];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_71  [key=2, style=dotted];
m12_235 -> m12_73  [key=2, style=dotted];
m12_235 -> m12_237  [key=1, style=dashed, color=darkseagreen4, label=file];
m12_236 -> m12_237  [key=0, style=solid];
m12_236 -> m12_17  [key=2, style=dotted];
m12_236 -> m12_239  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_236 -> m12_241  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_236 -> m12_245  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_236 -> m12_248  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_236 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_236 -> m12_252  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_237 -> m12_238  [key=0, style=solid];
m12_237 -> m12_19  [key=2, style=dotted];
m12_237 -> m12_74  [key=2, style=dotted];
m12_239 -> m12_240  [key=0, style=solid];
m12_239 -> m12_19  [key=2, style=dotted];
m12_239 -> m12_255  [key=2, style=dotted];
m12_241 -> m12_242  [key=0, style=solid];
m12_241 -> m12_19  [key=2, style=dotted];
m12_241 -> m12_182  [key=2, style=dotted];
m12_241 -> m12_245  [key=1, style=dashed, color=darkseagreen4, label=compile];
m12_245 -> m12_246  [key=0, style=solid];
m12_245 -> m12_19  [key=2, style=dotted];
m12_245 -> m12_184  [key=2, style=dotted];
m12_248 -> m12_249  [key=0, style=solid];
m12_248 -> m12_19  [key=2, style=dotted];
m12_248 -> m12_185  [key=2, style=dotted];
m12_250 -> m12_251  [key=0, style=solid];
m12_250 -> m12_19  [key=2, style=dotted];
m12_250 -> m12_186  [key=2, style=dotted];
m12_252 -> m12_253  [key=0, style=solid];
m12_252 -> m12_19  [key=2, style=dotted];
m12_252 -> m12_20  [key=2, style=dotted];
m12_238 -> m12_239  [key=0, style=solid];
m12_238 -> m12_18  [key=2, style=dotted];
m12_240 -> m12_241  [key=0, style=solid];
m12_240 -> m12_18  [key=2, style=dotted];
m12_242 -> m12_243  [key=0, style=solid];
m12_242 -> m12_18  [key=2, style=dotted];
m12_244 -> m12_245  [key=0, style=solid];
m12_244 -> m12_183  [key=2, style=dotted];
m12_246 -> m12_247  [key=0, style=solid];
m12_246 -> m12_18  [key=2, style=dotted];
m12_247 -> m12_248  [key=0, style=solid];
m12_247 -> m12_254  [key=0, style=solid];
m12_249 -> m12_250  [key=0, style=solid];
m12_249 -> m12_18  [key=2, style=dotted];
m12_251 -> m12_252  [key=0, style=solid];
m12_251 -> m12_18  [key=2, style=dotted];
m12_253 -> m12_254  [key=0, style=solid];
m12_253 -> m12_18  [key=2, style=dotted];
m12_254 -> m12_230  [key=0, style=bold, color=blue];
m12_187 -> m12_188  [key=0, style=solid];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_139  [key=2, style=dotted];
m12_188 -> m12_197  [key=1, style=dashed, color=darkseagreen4, label=user];
m12_189 -> m12_190  [key=0, style=solid];
m12_189 -> m12_139  [key=2, style=dotted];
m12_189 -> m12_197  [key=1, style=dashed, color=darkseagreen4, label=password];
m12_197 -> m12_198  [key=0, style=solid];
m12_197 -> m12_143  [key=2, style=dotted];
m12_197 -> m12_199  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_139  [key=2, style=dotted];
m12_190 -> m12_197  [key=1, style=dashed, color=darkseagreen4, label=account];
m12_191 -> m12_192  [key=0, style=solid];
m12_191 -> m12_71  [key=2, style=dotted];
m12_191 -> m12_73  [key=2, style=dotted];
m12_191 -> m12_193  [key=1, style=dashed, color=darkseagreen4, label=file];
m12_192 -> m12_193  [key=0, style=solid];
m12_192 -> m12_17  [key=2, style=dotted];
m12_192 -> m12_195  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_192 -> m12_199  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_192 -> m12_202  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_192 -> m12_204  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_192 -> m12_206  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_19  [key=2, style=dotted];
m12_193 -> m12_74  [key=2, style=dotted];
m12_195 -> m12_196  [key=0, style=solid];
m12_195 -> m12_19  [key=2, style=dotted];
m12_195 -> m12_182  [key=2, style=dotted];
m12_195 -> m12_199  [key=1, style=dashed, color=darkseagreen4, label=compile];
m12_199 -> m12_200  [key=0, style=solid];
m12_199 -> m12_19  [key=2, style=dotted];
m12_199 -> m12_184  [key=2, style=dotted];
m12_202 -> m12_203  [key=0, style=solid];
m12_202 -> m12_19  [key=2, style=dotted];
m12_202 -> m12_185  [key=2, style=dotted];
m12_204 -> m12_205  [key=0, style=solid];
m12_204 -> m12_19  [key=2, style=dotted];
m12_204 -> m12_186  [key=2, style=dotted];
m12_206 -> m12_207  [key=0, style=solid];
m12_206 -> m12_19  [key=2, style=dotted];
m12_206 -> m12_20  [key=2, style=dotted];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_18  [key=2, style=dotted];
m12_196 -> m12_197  [key=0, style=solid];
m12_196 -> m12_18  [key=2, style=dotted];
m12_198 -> m12_199  [key=0, style=solid];
m12_198 -> m12_183  [key=2, style=dotted];
m12_200 -> m12_201  [key=0, style=solid];
m12_200 -> m12_18  [key=2, style=dotted];
m12_201 -> m12_202  [key=0, style=solid];
m12_201 -> m12_208  [key=0, style=solid];
m12_203 -> m12_204  [key=0, style=solid];
m12_203 -> m12_18  [key=2, style=dotted];
m12_205 -> m12_206  [key=0, style=solid];
m12_205 -> m12_18  [key=2, style=dotted];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_18  [key=2, style=dotted];
m12_208 -> m12_187  [key=0, style=bold, color=blue];
m12_290 -> m12_291  [key=0, style=solid];
m12_291 -> m12_292  [key=0, style=solid];
m12_291 -> m12_262  [key=2, style=dotted];
m12_291 -> m12_263  [key=2, style=dotted];
m12_291 -> m12_264  [key=2, style=dotted];
m12_291 -> m12_289  [key=2, style=dotted];
m12_292 -> m12_293  [key=0, style=solid];
m12_292 -> m12_23  [key=2, style=dotted];
m12_293 -> m12_290  [key=0, style=bold, color=blue];
m12_294 -> m12_295  [key=0, style=solid];
m12_295 -> m12_296  [key=0, style=solid];
m12_295 -> m12_298  [key=1, style=dashed, color=darkseagreen4, label=language];
m12_295 -> m12_299  [key=1, style=dashed, color=darkseagreen4, label=language];
m12_296 -> m12_297  [key=0, style=solid];
m12_296 -> m12_73  [key=2, style=dotted];
m12_296 -> m12_299  [key=1, style=dashed, color=darkseagreen4, label=code];
m12_298 -> m12_299  [key=0, style=solid];
m12_298 -> m12_301  [key=2, style=dotted];
m12_299 -> m12_300  [key=0, style=solid];
m12_299 -> m12_302  [key=2, style=dotted];
m12_297 -> m12_298  [key=0, style=solid];
m12_297 -> m12_299  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m12_300 -> m12_294  [key=0, style=bold, color=blue];
m12_209 -> m12_210  [key=0, style=solid];
m12_210 -> m12_211  [key=0, style=solid];
m12_210 -> m12_139  [key=2, style=dotted];
m12_210 -> m12_218  [key=1, style=dashed, color=darkseagreen4, label=token];
m12_211 -> m12_212  [key=0, style=solid];
m12_211 -> m12_139  [key=2, style=dotted];
m12_211 -> m12_218  [key=1, style=dashed, color=darkseagreen4, label=account];
m12_218 -> m12_219  [key=0, style=solid];
m12_218 -> m12_144  [key=2, style=dotted];
m12_218 -> m12_220  [key=1, style=dashed, color=darkseagreen4, label=settings];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_71  [key=2, style=dotted];
m12_212 -> m12_73  [key=2, style=dotted];
m12_212 -> m12_214  [key=1, style=dashed, color=darkseagreen4, label=file];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_17  [key=2, style=dotted];
m12_213 -> m12_216  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_213 -> m12_220  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_213 -> m12_223  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_213 -> m12_225  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_213 -> m12_227  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_19  [key=2, style=dotted];
m12_214 -> m12_74  [key=2, style=dotted];
m12_216 -> m12_217  [key=0, style=solid];
m12_216 -> m12_19  [key=2, style=dotted];
m12_216 -> m12_182  [key=2, style=dotted];
m12_216 -> m12_220  [key=1, style=dashed, color=darkseagreen4, label=compile];
m12_220 -> m12_221  [key=0, style=solid];
m12_220 -> m12_19  [key=2, style=dotted];
m12_220 -> m12_184  [key=2, style=dotted];
m12_223 -> m12_224  [key=0, style=solid];
m12_223 -> m12_19  [key=2, style=dotted];
m12_223 -> m12_185  [key=2, style=dotted];
m12_225 -> m12_226  [key=0, style=solid];
m12_225 -> m12_19  [key=2, style=dotted];
m12_225 -> m12_186  [key=2, style=dotted];
m12_227 -> m12_228  [key=0, style=solid];
m12_227 -> m12_19  [key=2, style=dotted];
m12_227 -> m12_20  [key=2, style=dotted];
m12_215 -> m12_216  [key=0, style=solid];
m12_215 -> m12_18  [key=2, style=dotted];
m12_217 -> m12_218  [key=0, style=solid];
m12_217 -> m12_18  [key=2, style=dotted];
m12_219 -> m12_220  [key=0, style=solid];
m12_219 -> m12_183  [key=2, style=dotted];
m12_221 -> m12_222  [key=0, style=solid];
m12_221 -> m12_18  [key=2, style=dotted];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_229  [key=0, style=solid];
m12_224 -> m12_225  [key=0, style=solid];
m12_224 -> m12_18  [key=2, style=dotted];
m12_226 -> m12_227  [key=0, style=solid];
m12_226 -> m12_18  [key=2, style=dotted];
m12_228 -> m12_229  [key=0, style=solid];
m12_228 -> m12_18  [key=2, style=dotted];
m12_229 -> m12_209  [key=0, style=bold, color=blue];
m12_36 -> m12_37  [key=0, style=solid];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_71  [key=2, style=dotted];
m12_37 -> m12_72  [key=2, style=dotted];
m12_37 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label=fakeFile];
m12_37 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label=fakeFile];
m12_37 -> m12_46  [key=1, style=dashed, color=darkseagreen4, label=fakeFile];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_71  [key=2, style=dotted];
m12_38 -> m12_73  [key=2, style=dotted];
m12_38 -> m12_72  [key=2, style=dotted];
m12_38 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label=realFile];
m12_38 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label=realFile];
m12_38 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label=realFile];
m12_38 -> m12_53  [key=1, style=dashed, color=darkseagreen4, label=realFile];
m12_38 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label=realFile];
m12_38 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=realFile];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_19  [key=2, style=dotted];
m12_43 -> m12_74  [key=2, style=dotted];
m12_43 -> m12_45  [key=1, style=dashed, color=darkseagreen4, label=randomAdd];
m12_43 -> m12_46  [key=1, style=dashed, color=darkseagreen4, label=randomAdd];
m12_43 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label=randomAdd];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_19  [key=2, style=dotted];
m12_45 -> m12_18  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_19  [key=2, style=dotted];
m12_46 -> m12_18  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_71  [key=2, style=dotted];
m12_39 -> m12_73  [key=2, style=dotted];
m12_39 -> m12_72  [key=2, style=dotted];
m12_39 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label=secondRealFile];
m12_39 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=secondRealFile];
m12_39 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=secondRealFile];
m12_39 -> m12_62  [key=1, style=dashed, color=darkseagreen4, label=secondRealFile];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_19  [key=2, style=dotted];
m12_47 -> m12_75  [key=2, style=dotted];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_19  [key=2, style=dotted];
m12_49 -> m12_76  [key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_19  [key=2, style=dotted];
m12_51 -> m12_77  [key=2, style=dotted];
m12_51 -> m12_53  [key=1, style=dashed, color=darkseagreen4, label=readFile];
m12_51 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label=readFile];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_19  [key=2, style=dotted];
m12_53 -> m12_18  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_19  [key=2, style=dotted];
m12_54 -> m12_18  [key=2, style=dotted];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_19  [key=2, style=dotted];
m12_67 -> m12_18  [key=2, style=dotted];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_17  [key=2, style=dotted];
m12_40 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_40 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_40 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_40 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_40 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_40 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_40 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_40 -> m12_62  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_40 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_40 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_19  [key=2, style=dotted];
m12_55 -> m12_74  [key=2, style=dotted];
m12_55 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label=secondFile];
m12_55 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=secondFile];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_19  [key=2, style=dotted];
m12_57 -> m12_18  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_19  [key=2, style=dotted];
m12_58 -> m12_18  [key=2, style=dotted];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_19  [key=2, style=dotted];
m12_62 -> m12_79  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_18  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_19  [key=2, style=dotted];
m12_42 -> m12_18  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_19  [key=2, style=dotted];
m12_59 -> m12_78  [key=2, style=dotted];
m12_59 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label=readFiles];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_19  [key=2, style=dotted];
m12_64 -> m12_78  [key=2, style=dotted];
m12_64 -> m12_66  [key=1, style=dashed, color=darkseagreen4, label=readFilesAgain];
m12_64 -> m12_67  [key=1, style=dashed, color=darkseagreen4, label=readFilesAgain];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_19  [key=2, style=dotted];
m12_68 -> m12_20  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_18  [key=2, style=dotted];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_18  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_18  [key=2, style=dotted];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_18  [key=2, style=dotted];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_18  [key=2, style=dotted];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_18  [key=2, style=dotted];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_18  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_18  [key=2, style=dotted];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_18  [key=2, style=dotted];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_18  [key=2, style=dotted];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_18  [key=2, style=dotted];
m12_70 -> m12_36  [key=0, style=bold, color=blue];
m12_310 -> m12_311  [key=0, style=solid];
m12_311 -> m12_312  [key=0, style=solid];
m12_311 -> m12_314  [key=1, style=dashed, color=darkseagreen4, label=language];
m12_311 -> m12_315  [key=1, style=dashed, color=darkseagreen4, label=language];
m12_312 -> m12_313  [key=0, style=solid];
m12_312 -> m12_73  [key=2, style=dotted];
m12_312 -> m12_315  [key=1, style=dashed, color=darkseagreen4, label=code];
m12_314 -> m12_315  [key=0, style=solid];
m12_314 -> m12_301  [key=2, style=dotted];
m12_315 -> m12_316  [key=0, style=solid];
m12_315 -> m12_302  [key=2, style=dotted];
m12_313 -> m12_314  [key=0, style=solid];
m12_313 -> m12_315  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m12_316 -> m12_310  [key=0, style=bold, color=blue];
m12_147 -> m12_148  [key=0, style=solid];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_156  [key=2, style=dotted];
m12_148 -> m12_150  [key=1, style=dashed, color=darkseagreen4, label=liveAlgorithms];
m12_148 -> m12_151  [key=1, style=dashed, color=darkseagreen4, label=liveAlgorithms];
m12_149 -> m12_150  [key=0, style=solid];
m12_149 -> m12_18  [key=2, style=dotted];
m12_150 -> m12_151  [key=0, style=solid];
m12_150 -> m12_157  [key=2, style=dotted];
m12_150 -> m12_18  [key=2, style=dotted];
m12_151 -> m12_152  [key=0, style=solid];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_158  [key=2, style=dotted];
m12_152 -> m12_154  [key=1, style=dashed, color=darkseagreen4, label=liveLogs];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_18  [key=2, style=dotted];
m12_154 -> m12_155  [key=0, style=solid];
m12_154 -> m12_157  [key=2, style=dotted];
m12_154 -> m12_18  [key=2, style=dotted];
m12_155 -> m12_147  [key=0, style=bold, color=blue];
m12_402 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_166  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_168  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_172  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_179  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_192  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_193  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_195  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_199  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_213  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_214  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_216  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_223  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_225  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_227  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_236  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_237  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_252  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_267  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_274  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_279  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_280  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_291  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_298  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_299  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_307  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_308  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_314  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_315  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_317  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_321  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_324  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_328  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_330  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_332  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_335  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_339  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_340  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_341  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_345  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_347  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_352  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_357  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_359  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_362  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_364  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_366  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_368  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_384  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_402 -> m12_395  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.API.RestApiTests"];
m12_403 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label=project];
m12_404 -> m12_379  [key=1, style=dashed, color=darkseagreen4, label=project];
m13_0 -> m13_1  [key=0, style=solid, color=red];
m13_1 -> m13_2  [key=0, style=solid, color=red];
m13_1 -> m13_16  [key=2, style=dotted, color=red];
m13_2 -> m13_3  [key=0, style=solid, color=red];
m13_2 -> m13_17  [key=2, style=dotted, color=red];
m13_3 -> m13_4  [key=0, style=solid, color=red];
m13_3 -> m13_18  [key=2, style=dotted, color=red];
m13_4 -> m13_5  [key=0, style=solid, color=red];
m13_4 -> m13_19  [key=2, style=dotted, color=red];
m13_5 -> m13_6  [key=0, style=solid, color=red];
m13_5 -> m13_19  [key=2, style=dotted, color=red];
m13_6 -> m13_7  [key=0, style=solid, color=red];
m13_6 -> m13_19  [key=2, style=dotted, color=red];
m13_7 -> m13_8  [key=0, style=solid, color=red];
m13_7 -> m13_19  [key=2, style=dotted, color=red];
m13_8 -> m13_9  [key=0, style=solid, color=red];
m13_8 -> m13_19  [key=2, style=dotted, color=red];
m13_9 -> m13_10  [key=0, style=solid, color=red];
m13_9 -> m13_19  [key=2, style=dotted, color=red];
m13_10 -> m13_11  [key=0, style=solid, color=red];
m13_10 -> m13_19  [key=2, style=dotted, color=red];
m13_11 -> m13_12  [key=0, style=solid, color=red];
m13_11 -> m13_19  [key=2, style=dotted, color=red];
m13_12 -> m13_13  [key=0, style=solid, color=red];
m13_12 -> m13_19  [key=2, style=dotted, color=red];
m13_13 -> m13_14  [key=0, style=solid, color=red];
m13_13 -> m13_19  [key=2, style=dotted, color=red];
m13_14 -> m13_15  [key=0, style=solid, color=red];
m13_14 -> m13_19  [key=2, style=dotted, color=red];
m13_15 -> m13_0  [key=0, style=bold, color=blue];
m13_20 -> m13_21  [key=0, style=solid, color=red];
m13_21 -> m13_22  [key=0, style=solid, color=red];
m13_21 -> m13_24  [key=0, style=solid, color=red];
m13_22 -> m13_23  [key=0, style=solid, color=red];
m13_22 -> m13_25  [key=2, style=dotted, color=red];
m13_23 -> m13_24  [key=0, style=solid, color=red];
m13_23 -> m13_26  [key=2, style=dotted, color=red];
m13_24 -> m13_20  [key=0, style=bold, color=blue];
m13_27 -> m13_1  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_2  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_3  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_4  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_5  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_6  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_7  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_8  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_9  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_10  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_11  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_12  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_13  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_14  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_21  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_22  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m13_27 -> m13_23  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.Examples.BenchmarkAlgorithm"];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid, color=green];
m14_3 -> m14_7  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid, color=green];
m14_4 -> m14_7  [key=2, style=dotted];
m14_5 -> m14_6  [key=0, style=solid, color=green];
m14_5 -> m14_7  [key=2, style=dotted];
m14_6 -> m14_2  [key=0, style=bold, color=blue];
m14_6 -> m14_0  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid, color=green];
m14_0 -> m14_4  [key=1, style=dashed, color=green, label=string];
m14_0 -> m14_5  [key=1, style=dashed, color=green, label="QuantConnect.API.BaseLiveAlgorithmSettings"];
m14_0 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label=int];
m14_0 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
m14_1 -> m14_2  [key=0, style=solid, color=green];
m14_8 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage"];
m14_8 -> m14_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage"];
m14_8 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.QuantConnectPackage"];
m14_54 -> m14_1  [key=1, style=dashed, color=green, label="QuantConnect.API.LiveAlgorithmApiSettingsWrapper"];
m14_54 -> m14_4  [key=1, style=dashed, color=green, label="QuantConnect.API.LiveAlgorithmApiSettingsWrapper"];
m14_54 -> m14_5  [key=1, style=dashed, color=green, label="QuantConnect.API.LiveAlgorithmApiSettingsWrapper"];
m14_54 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.API.LiveAlgorithmApiSettingsWrapper"];
m14_54 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.API.LiveAlgorithmApiSettingsWrapper"];
m15_13 -> m15_14  [key=0, style=solid, color=green];
m15_14 -> m15_15  [key=0, style=solid, color=green];
m15_14 -> m15_16  [key=0, style=solid, color=green];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_22  [key=2, style=dotted];
m15_15 -> m15_23  [key=2, style=dotted];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_21  [key=0, style=solid];
m15_17 -> m15_24  [key=2, style=dotted];
m15_17 -> m15_18  [key=0, style=solid];
m15_18 -> m15_25  [key=2, style=dotted];
m15_18 -> m15_19  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_26  [key=2, style=dotted];
m15_19 -> m15_27  [key=2, style=dotted];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_26  [key=2, style=dotted];
m15_20 -> m15_28  [key=2, style=dotted];
m15_21 -> m15_13  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [key=0, style=bold, color=blue];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_8  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid, color=green];
m15_3 -> m15_10  [key=2, style=dotted, color=green];
m15_3 -> m15_2  [key=0, style=bold, color=blue];
m15_2 -> m15_3  [key=0, style=solid, color=green];
m15_2 -> m15_9  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid, color=green];
m15_4 -> m15_11  [key=2, style=dotted, color=green];
m15_5 -> m15_6  [key=0, style=solid, color=green];
m15_5 -> m15_11  [key=2, style=dotted, color=green];
m15_5 -> m15_4  [key=0, style=bold, color=blue];
m15_6 -> m15_7  [key=0, style=solid, color=green];
m15_6 -> m15_12  [key=2, style=dotted, color=green];
m15_7 -> m15_0  [key=0, style=bold, color=blue];
m15_49 -> m15_50  [key=0, style=solid, color=green];
m15_49 -> m15_51  [key=1, style=dashed, color=darkseagreen4, label=bool];
m15_49 -> m15_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_49 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m15_49 -> m15_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_50 -> m15_51  [key=0, style=solid, color=green];
m15_50 -> m15_70  [key=2, style=dotted, color=green];
m15_50 -> m15_58  [key=1, style=dashed, color=green, label=coin];
m15_50 -> m15_64  [key=1, style=dashed, color=green, label=coin];
m15_50 -> m15_66  [key=1, style=dashed, color=green, label=coin];
m15_50 -> m15_67  [key=1, style=dashed, color=green, label=coin];
m15_50 -> m15_68  [key=1, style=dashed, color=green, label=coin];
m15_51 -> m15_52  [key=0, style=solid];
m15_51 -> m15_57  [key=0, style=solid];
m15_58 -> m15_59  [key=0, style=solid, color=green];
m15_58 -> m15_73  [key=2, style=dotted];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_74  [key=2, style=dotted];
m15_66 -> m15_67  [key=0, style=solid];
m15_67 -> m15_68  [key=0, style=solid, color=green];
m15_68 -> m15_69  [key=0, style=solid, color=green];
m15_52 -> m15_68  [key=1, style=dashed, color=green, label=coin];
m15_52 -> m15_58  [key=1, style=dashed, color=darkseagreen4, label=coin];
m15_52 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label=coin];
m15_52 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=coin];
m15_52 -> m15_67  [key=1, style=dashed, color=darkseagreen4, label=coin];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_71  [key=2, style=dotted];
m15_52 -> m15_54  [key=1, style=dashed, color=darkseagreen4, label=coin];
m15_52 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label=coin];
m15_52 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label=coin];
m15_59 -> m15_60  [key=0, style=solid, color=green];
m15_59 -> m15_74  [key=2, style=dotted, color=green];
m15_57 -> m15_59  [key=1, style=dashed, color=green, label=data];
m15_57 -> m15_60  [key=1, style=dashed, color=green, label=data];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label=data];
m15_57 -> m15_72  [key=2, style=dotted];
m15_57 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label=data];
m15_57 -> m15_62  [key=1, style=dashed, color=darkseagreen4, label=data];
m15_57 -> m15_63  [key=1, style=dashed, color=darkseagreen4, label=data];
m15_57 -> m15_65  [key=1, style=dashed, color=darkseagreen4, label=data];
m15_60 -> m15_61  [key=0, style=solid, color=green];
m15_60 -> m15_74  [key=2, style=dotted, color=green];
m15_61 -> m15_74  [key=2, style=dotted];
m15_61 -> m15_62  [key=0, style=solid];
m15_54 -> m15_55  [key=0, style=solid];
m15_63 -> m15_64  [key=0, style=solid];
m15_63 -> m15_74  [key=2, style=dotted];
m15_65 -> m15_66  [key=0, style=solid];
m15_65 -> m15_74  [key=2, style=dotted];
m15_53 -> m15_54  [key=0, style=solid];
m15_55 -> m15_56  [key=0, style=solid];
m15_56 -> m15_69  [key=0, style=solid];
m15_62 -> m15_74  [key=2, style=dotted];
m15_62 -> m15_63  [key=0, style=solid];
m15_69 -> m15_49  [key=0, style=bold, color=blue];
m15_29 -> m15_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBars"];
m15_29 -> m15_30  [key=0, style=solid];
m15_32 -> m15_33  [key=0, style=solid, color=green];
m15_32 -> m15_24  [key=2, style=dotted, color=green];
m15_31 -> m15_32  [key=0, style=solid, color=green];
m15_31 -> m15_37  [key=2, style=dotted];
m15_33 -> m15_34  [key=0, style=solid, color=green];
m15_33 -> m15_38  [key=2, style=dotted, color=green];
m15_33 -> m15_39  [key=2, style=dotted, color=green];
m15_34 -> m15_35  [key=0, style=solid, color=green];
m15_34 -> m15_25  [key=2, style=dotted, color=green];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_35  [key=0, style=solid];
m15_30 -> m15_36  [key=2, style=dotted];
m15_35 -> m15_29  [key=0, style=bold, color=blue];
m15_75 -> m15_3  [key=1, style=dashed, color=green, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_4  [key=1, style=dashed, color=green, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_5  [key=1, style=dashed, color=green, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_6  [key=1, style=dashed, color=green, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_14  [key=1, style=dashed, color=green, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_32  [key=1, style=dashed, color=green, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_33  [key=1, style=dashed, color=green, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_34  [key=1, style=dashed, color=green, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m15_75 -> m15_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_2  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m17_53 -> m17_54  [key=0, style=solid];
m17_54 -> m17_55  [key=0, style=solid];
m17_54 -> m17_51  [key=2, style=dotted];
m17_54 -> m17_52  [key=2, style=dotted];
m17_55 -> m17_53  [key=0, style=bold, color=blue];
m17_13 -> m17_14  [key=0, style=solid];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_12  [key=2, style=dotted];
m17_15 -> m17_13  [key=0, style=bold, color=blue];
m17_9 -> m17_10  [key=0, style=solid];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_12  [key=2, style=dotted];
m17_11 -> m17_9  [key=0, style=bold, color=blue];
m17_86 -> m17_87  [key=0, style=solid];
m17_86 -> m17_90  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m17_87 -> m17_88  [key=0, style=solid];
m17_87 -> m17_89  [key=1, style=dashed, color=darkseagreen4, label=clone];
m17_87 -> m17_90  [key=1, style=dashed, color=darkseagreen4, label=clone];
m17_90 -> m17_91  [key=0, style=solid];
m17_90 -> m17_94  [key=2, style=dotted];
m17_88 -> m17_89  [key=0, style=solid];
m17_88 -> m17_90  [key=0, style=solid];
m17_88 -> m17_92  [key=2, style=dotted];
m17_89 -> m17_88  [key=0, style=solid];
m17_89 -> m17_93  [key=2, style=dotted];
m17_89 -> m17_89  [key=1, style=dashed, color=darkseagreen4, label=clone];
m17_89 -> m17_90  [key=1, style=dashed, color=darkseagreen4, label=clone];
m17_91 -> m17_86  [key=0, style=bold, color=blue];
m17_41 -> m17_42  [key=0, style=solid];
m17_41 -> m17_43  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_42 -> m17_43  [key=0, style=solid];
m17_43 -> m17_44  [key=0, style=solid];
m17_43 -> m17_47  [key=2, style=dotted];
m17_43 -> m17_45  [key=1, style=dashed, color=darkseagreen4, label=success];
m17_44 -> m17_45  [key=0, style=solid];
m17_44 -> m17_46  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Securities.SecurityHolding"];
m17_45 -> m17_46  [key=0, style=solid];
m17_46 -> m17_41  [key=0, style=bold, color=blue];
m17_73 -> m17_74  [key=0, style=solid];
m17_74 -> m17_75  [key=0, style=solid];
m17_74 -> m17_76  [key=0, style=solid];
m17_75 -> m17_82  [key=0, style=solid];
m17_75 -> n166  [key=2, style=dotted];
m17_76 -> m17_77  [key=0, style=solid];
m17_76 -> n166  [key=2, style=dotted];
m17_76 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m17_76 -> m17_81  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrders];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_81  [key=0, style=solid];
m17_80 -> m17_77  [key=0, style=solid];
m17_80 -> m17_85  [key=2, style=dotted];
m17_81 -> m17_82  [key=0, style=solid];
m17_78 -> m17_79  [key=0, style=solid];
m17_78 -> m17_84  [key=2, style=dotted];
m17_78 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label=marginCallOrder];
m17_79 -> m17_80  [key=0, style=solid];
m17_79 -> m17_77  [key=0, style=solid];
m17_82 -> m17_73  [key=0, style=bold, color=blue];
m17_59 -> m17_60  [key=0, style=solid];
m17_59 -> m17_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_59 -> m17_62  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m17_59 -> m17_63  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m17_59 -> m17_64  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_60 -> m17_61  [key=0, style=solid];
m17_61 -> m17_62  [key=0, style=solid];
m17_61 -> m17_64  [key=0, style=solid];
m17_61 -> m17_66  [key=2, style=dotted];
m17_61 -> m17_63  [key=1, style=dashed, color=darkseagreen4, label=item];
m17_62 -> m17_63  [key=0, style=solid];
m17_63 -> m17_65  [key=0, style=solid];
m17_64 -> m17_65  [key=0, style=solid];
m17_64 -> m17_67  [key=2, style=dotted];
m17_65 -> m17_59  [key=0, style=bold, color=blue];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_36  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_37  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>[]"];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_38  [key=0, style=solid];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_36  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_34 -> m17_37  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_34 -> m17_38  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_37 -> m17_38  [key=0, style=solid];
m17_37 -> m17_40  [key=2, style=dotted];
m17_37 -> m17_37  [key=1, style=dashed, color=darkseagreen4, label=asset];
m17_35 -> m17_36  [key=0, style=solid];
m17_35 -> m17_39  [key=0, style=solid];
m17_35 -> m17_37  [key=1, style=dashed, color=darkseagreen4, label=asset];
m17_38 -> m17_35  [key=0, style=solid];
m17_38 -> m17_38  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_39 -> m17_32  [key=0, style=bold, color=blue];
m17_29 -> m17_30  [key=0, style=solid];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_28  [key=2, style=dotted];
m17_30 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.SecurityHolding>"];
m17_31 -> m17_29  [key=0, style=bold, color=blue];
m17_19 -> m17_20  [key=0, style=solid];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_12  [key=2, style=dotted];
m17_21 -> m17_19  [key=0, style=bold, color=blue];
m17_25 -> m17_26  [key=0, style=solid];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_28  [key=2, style=dotted];
m17_27 -> m17_25  [key=0, style=bold, color=blue];
m17_68 -> m17_69  [key=0, style=solid];
m17_68 -> m17_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m17_69 -> m17_70  [key=0, style=solid];
m17_70 -> m17_71  [key=0, style=solid];
m17_70 -> m17_72  [key=2, style=dotted];
m17_71 -> m17_68  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityTransactionManager"];
m17_1 -> m17_2  [key=0, style=solid];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_7  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_8  [key=2, style=dotted];
m17_5 -> m17_6  [key=0, style=solid];
m17_6 -> m17_0  [key=0, style=bold, color=blue];
m17_72 -> m17_72  [key=3, color=darkorchid, style=bold, label="Field variable int NumberOfSymbolsCoarse"];
m17_16 -> m17_17  [key=0, style=solid];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_12  [key=2, style=dotted];
m17_18 -> m17_16  [key=0, style=bold, color=blue];
m17_48 -> m17_49  [key=0, style=solid];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_51  [key=2, style=dotted];
m17_49 -> m17_52  [key=2, style=dotted];
m17_50 -> m17_48  [key=0, style=bold, color=blue];
m17_56 -> m17_57  [key=0, style=solid];
m17_57 -> m17_58  [key=0, style=solid];
m17_58 -> m17_56  [key=0, style=bold, color=blue];
m17_22 -> m17_23  [key=0, style=solid];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_12  [key=2, style=dotted];
m17_24 -> m17_22  [key=0, style=bold, color=blue];
m17_95 -> m17_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m17_95 -> m17_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityPortfolioManager"];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_0  [key=0, style=bold, color=blue];
m18_7 -> m18_4  [key=2, style=dotted];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_9  [key=1, style=dashed, color=darkseagreen4, label=atr];
m18_7 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label=atr];
m18_7 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label=atr];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_13  [key=2, style=dotted];
m18_8 -> m18_14  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_15  [key=2, style=dotted];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_16  [key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_16  [key=2, style=dotted];
m18_12 -> m18_6  [key=0, style=bold, color=blue];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_14  [key=0, style=solid];
m18_12 -> m18_16  [key=2, style=dotted];
m18_17 -> m18_18  [key=0, style=solid];
m18_18 -> m18_4  [key=2, style=dotted];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label=atr];
m18_18 -> m18_21  [key=1, style=dashed, color=darkseagreen4, label=atr];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_23  [key=2, style=dotted];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_13  [key=2, style=dotted];
m18_20 -> m18_14  [key=2, style=dotted];
m18_20 -> m18_24  [key=2, style=dotted];
m18_20 -> m18_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_24  [key=2, style=dotted];
m18_21 -> m18_25  [key=2, style=dotted];
m18_22 -> m18_17  [key=0, style=bold, color=blue];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_26  [key=2, style=dotted];
m18_22 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_23 -> m18_19  [key=0, style=bold, color=blue];
m18_60 -> m18_61  [key=0, style=solid];
m18_27 -> m18_28  [key=0, style=solid];
m18_30 -> m18_31  [key=0, style=solid];
m18_28 -> m18_29  [key=0, style=solid];
m18_29 -> m18_27  [key=0, style=bold, color=blue];
m18_31 -> m18_32  [key=0, style=solid];
m18_32 -> m18_30  [key=0, style=bold, color=blue];
m18_57 -> m18_58  [key=0, style=solid];
m18_58 -> m18_59  [key=0, style=solid];
m18_59 -> m18_57  [key=0, style=bold, color=blue];
m18_61 -> m18_62  [key=0, style=solid];
m18_62 -> m18_60  [key=0, style=bold, color=blue];
m18_15 -> m18_11  [key=0, style=bold, color=blue];
m18_13 -> m18_15  [key=0, style=solid];
m18_13 -> n166  [key=2, style=dotted];
m18_13 -> m18_18  [key=2, style=dotted];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> n166  [key=2, style=dotted];
m18_14 -> m18_18  [key=2, style=dotted];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m18_48 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m18_48 -> m18_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m18_48 -> m18_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.SecurityChanges"];
m18_49 -> m18_50  [key=0, style=solid];
m18_50 -> m18_51  [key=0, style=solid];
m18_50 -> m18_52  [key=0, style=solid];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_26  [key=2, style=dotted];
m18_51 -> m18_55  [key=2, style=dotted];
m18_51 -> m18_56  [key=2, style=dotted];
m18_51 -> m18_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_54  [key=0, style=solid];
m18_53 -> m18_54  [key=0, style=solid];
m18_53 -> m18_26  [key=2, style=dotted];
m18_53 -> m18_55  [key=2, style=dotted];
m18_53 -> m18_56  [key=2, style=dotted];
m18_53 -> m18_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_54 -> m18_48  [key=0, style=bold, color=blue];
m18_33 -> m18_34  [key=0, style=solid];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_36  [key=0, style=solid];
m18_35 -> m18_44  [key=0, style=solid];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_40  [key=0, style=solid];
m18_36 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label=security];
m18_36 -> m18_39  [key=1, style=dashed, color=darkseagreen4, label=security];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_36  [key=0, style=solid];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_43  [key=0, style=solid];
m18_40 -> m18_42  [key=1, style=dashed, color=darkseagreen4, label=security];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_45  [key=2, style=dotted];
m18_39 -> m18_36  [key=0, style=solid];
m18_39 -> m18_46  [key=2, style=dotted];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_47  [key=2, style=dotted];
m18_43 -> m18_44  [key=0, style=solid];
m18_42 -> m18_40  [key=0, style=solid];
m18_42 -> m18_46  [key=2, style=dotted];
m18_44 -> m18_33  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid, color=green];
m18_1 -> m18_2  [key=0, style=solid, color=green];
m18_1 -> m18_4  [key=2, style=dotted, color=green];
m18_2 -> m18_3  [key=0, style=solid, color=green];
m18_2 -> m18_7  [key=2, style=dotted];
m18_2 -> m18_5  [key=2, style=dotted, color=green];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_8  [key=2, style=dotted];
m18_3 -> m18_0  [key=0, style=bold, color=blue];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_9  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_10  [key=2, style=dotted];
m18_63 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m18_63 -> m18_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CoarseFineFundamentalRegressionAlgorithm"];
m19_171 -> m19_194  [key=0, style=solid];
m19_194 -> m19_195  [key=0, style=solid];
m19_194 -> m19_23  [key=2, style=dotted];
m19_194 -> m19_196  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
m19_194 -> m19_197  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
m19_195 -> m19_196  [key=0, style=solid];
m19_195 -> m19_200  [key=2, style=dotted];
m19_195 -> m19_198  [key=1, style=dashed, color=darkseagreen4, label=dataFeeds];
m19_196 -> m19_197  [key=0, style=solid];
m19_196 -> m19_198  [key=0, style=solid];
m19_197 -> m19_198  [key=0, style=solid];
m19_197 -> m19_201  [key=2, style=dotted];
m19_198 -> m19_199  [key=0, style=solid];
m19_199 -> m19_171  [key=0, style=bold, color=blue];
m19_191 -> m19_192  [key=0, style=solid];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_23  [key=2, style=dotted];
m19_21 -> m19_24  [key=2, style=dotted];
m19_20 -> m19_21  [key=0, style=solid];
m19_22 -> m19_20  [key=0, style=bold, color=blue];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_40  [key=2, style=dotted];
m19_37 -> m19_38  [key=0, style=solid];
m19_39 -> m19_37  [key=0, style=bold, color=blue];
m19_152 -> m19_153  [key=0, style=solid];
m19_152 -> m19_169  [key=2, style=dotted];
m19_153 -> m19_154  [key=0, style=solid];
m19_154 -> m19_155  [key=0, style=solid];
m19_154 -> m19_170  [key=2, style=dotted];
m19_155 -> m19_156  [key=0, style=solid];
m19_155 -> m19_171  [key=2, style=dotted];
m19_155 -> m19_172  [key=2, style=dotted];
m19_156 -> m19_157  [key=0, style=solid];
m19_156 -> m19_173  [key=2, style=dotted];
m19_157 -> m19_158  [key=0, style=solid];
m19_157 -> m19_174  [key=2, style=dotted];
m19_158 -> m19_159  [key=0, style=solid];
m19_158 -> m19_175  [key=2, style=dotted];
m19_159 -> m19_160  [key=0, style=solid];
m19_159 -> m19_176  [key=2, style=dotted];
m19_159 -> m19_177  [key=2, style=dotted];
m19_159 -> m19_178  [key=2, style=dotted];
m19_160 -> m19_161  [key=0, style=solid];
m19_160 -> m19_162  [key=0, style=solid];
m19_160 -> m19_179  [key=2, style=dotted];
m19_161 -> m19_162  [key=0, style=solid];
m19_162 -> m19_163  [key=0, style=solid];
m19_162 -> m19_180  [key=2, style=dotted];
m19_164 -> m19_165  [key=0, style=solid];
m19_164 -> m19_166  [key=0, style=solid];
m19_164 -> m19_168  [key=0, style=solid];
m19_186 -> m19_187  [key=0, style=solid];
m19_186 -> m19_188  [key=2, style=dotted];
m19_186 -> m19_189  [key=2, style=dotted];
m19_186 -> m19_190  [key=2, style=dotted];
m19_186 -> m19_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_163 -> m19_164  [key=0, style=solid];
m19_163 -> m19_166  [key=0, style=solid];
m19_163 -> m19_168  [key=0, style=solid];
m19_147 -> m19_148  [key=0, style=solid];
m19_147 -> m19_149  [key=0, style=solid];
m19_148 -> m19_149  [key=0, style=solid];
m19_148 -> m19_150  [key=2, style=dotted];
m19_148 -> m19_117  [key=2, style=dotted];
m19_151 -> m19_152  [key=0, style=solid];
m19_183 -> m19_184  [key=0, style=solid];
m19_182 -> m19_183  [key=0, style=solid];
m19_146 -> m19_147  [key=0, style=solid];
m19_146 -> m19_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m19_149 -> m19_146  [key=0, style=bold, color=blue];
m19_166 -> m19_167  [key=0, style=solid];
m19_168 -> m19_151  [key=0, style=bold, color=blue];
m19_165 -> m19_164  [key=0, style=solid];
m19_165 -> m19_181  [key=2, style=dotted];
m19_165 -> m19_165  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m19_167 -> m19_168  [key=0, style=solid];
m19_167 -> m19_145  [key=2, style=dotted];
m19_167 -> m19_117  [key=2, style=dotted];
m19_184 -> m19_182  [key=0, style=bold, color=blue];
m19_185 -> m19_186  [key=0, style=solid];
m19_187 -> m19_185  [key=0, style=bold, color=blue];
m19_192 -> m19_193  [key=0, style=solid];
m19_192 -> m19_192  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>"];
m19_193 -> m19_191  [key=0, style=bold, color=blue];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m19_41 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_41 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m19_41 -> m19_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m19_41 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m19_41 -> m19_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m19_41 -> m19_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m19_41 -> m19_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m19_41 -> m19_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m19_41 -> m19_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler"];
m19_41 -> m19_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m19_41 -> m19_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_41 -> m19_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_46  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m19_42 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m19_42 -> m19_160  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m19_42 -> m19_163  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_120  [key=2, style=dotted];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label=controls];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_17  [key=2, style=dotted];
m19_54 -> m19_122  [key=2, style=dotted];
m19_54 -> m19_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_120  [key=2, style=dotted];
m19_59 -> m19_60  [key=0, style=solid];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_66  [key=0, style=solid];
m19_61 -> m19_123  [key=2, style=dotted];
m19_66 -> m19_67  [key=0, style=solid];
m19_66 -> m19_69  [key=0, style=solid];
m19_70 -> m19_71  [key=0, style=solid];
m19_70 -> m19_126  [key=2, style=dotted];
m19_73 -> m19_71  [key=0, style=solid];
m19_73 -> m19_127  [key=2, style=dotted];
m19_79 -> m19_80  [key=0, style=solid];
m19_79 -> m19_128  [key=2, style=dotted];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_129  [key=2, style=dotted];
m19_83 -> m19_80  [key=0, style=solid];
m19_83 -> m19_130  [key=2, style=dotted];
m19_83 -> m19_182  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_89 -> m19_90  [key=0, style=solid];
m19_89 -> m19_131  [key=2, style=dotted];
m19_89 -> m19_92  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_133  [key=2, style=dotted];
m19_91 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m19_91 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m19_91 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m19_97 -> m19_98  [key=0, style=solid];
m19_97 -> m19_104  [key=0, style=solid];
m19_97 -> m19_137  [key=2, style=dotted];
m19_100 -> m19_104  [key=0, style=solid];
m19_100 -> m19_138  [key=2, style=dotted];
m19_102 -> m19_104  [key=0, style=solid];
m19_102 -> m19_139  [key=2, style=dotted];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_140  [key=2, style=dotted];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_141  [key=2, style=dotted];
m19_105 -> m19_92  [key=0, style=solid];
m19_105 -> m19_142  [key=2, style=dotted];
m19_105 -> m19_143  [key=2, style=dotted];
m19_110 -> m19_111  [key=0, style=solid];
m19_110 -> m19_144  [key=2, style=dotted];
m19_111 -> m19_112  [key=0, style=solid];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_46  [key=0, style=solid];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_49  [key=0, style=solid];
m19_46 -> m19_118  [key=2, style=dotted];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_117  [key=2, style=dotted];
m19_45 -> m19_116  [key=0, style=solid];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_117  [key=2, style=dotted];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m19_49 -> m19_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m19_49 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=brokerageOnMessage];
m19_48 -> m19_116  [key=0, style=solid];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_119  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_121  [key=2, style=dotted];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_58  [key=0, style=solid];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_117  [key=2, style=dotted];
m19_57 -> m19_115  [key=0, style=solid];
m19_57 -> m19_116  [key=0, style=solid];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_119  [key=2, style=dotted];
m19_62 -> m19_63  [key=0, style=solid];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_124  [key=2, style=dotted];
m19_64 -> m19_65  [key=0, style=solid];
m19_64 -> m19_125  [key=2, style=dotted];
m19_64 -> m19_117  [key=2, style=dotted];
m19_65 -> m19_115  [key=0, style=solid];
m19_65 -> m19_116  [key=0, style=solid];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_117  [key=2, style=dotted];
m19_69 -> m19_70  [key=0, style=solid];
m19_69 -> m19_119  [key=2, style=dotted];
m19_68 -> m19_115  [key=0, style=solid];
m19_68 -> m19_116  [key=0, style=solid];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_74  [key=0, style=solid];
m19_71 -> m19_78  [key=0, style=solid];
m19_71 -> m19_73  [key=1, style=dashed, color=darkseagreen4, label=cash];
m19_72 -> m19_73  [key=0, style=solid];
m19_72 -> m19_119  [key=2, style=dotted];
m19_74 -> m19_75  [key=0, style=solid];
m19_78 -> m19_79  [key=0, style=solid];
m19_78 -> m19_119  [key=2, style=dotted];
m19_75 -> m19_76  [key=0, style=solid];
m19_75 -> m19_124  [key=2, style=dotted];
m19_76 -> m19_77  [key=0, style=solid];
m19_76 -> m19_117  [key=2, style=dotted];
m19_77 -> m19_115  [key=0, style=solid];
m19_77 -> m19_116  [key=0, style=solid];
m19_80 -> m19_81  [key=0, style=solid];
m19_80 -> m19_84  [key=0, style=solid];
m19_80 -> m19_88  [key=0, style=solid];
m19_80 -> m19_82  [key=1, style=dashed, color=darkseagreen4, label=order];
m19_80 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label=order];
m19_80 -> m19_183  [key=1, style=dashed, color=darkseagreen4, label=order];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_119  [key=2, style=dotted];
m19_84 -> m19_85  [key=0, style=solid];
m19_88 -> m19_89  [key=0, style=solid];
m19_88 -> m19_119  [key=2, style=dotted];
m19_85 -> m19_86  [key=0, style=solid];
m19_85 -> m19_124  [key=2, style=dotted];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_117  [key=2, style=dotted];
m19_87 -> m19_115  [key=0, style=solid];
m19_87 -> m19_116  [key=0, style=solid];
m19_90 -> m19_91  [key=0, style=solid];
m19_90 -> m19_132  [key=2, style=dotted];
m19_90 -> m19_94  [key=1, style=dashed, color=darkseagreen4, label=supportedSecurityTypes];
m19_90 -> m19_96  [key=1, style=dashed, color=darkseagreen4, label=supportedSecurityTypes];
m19_92 -> m19_93  [key=0, style=solid];
m19_92 -> m19_106  [key=0, style=solid];
m19_92 -> m19_110  [key=0, style=solid];
m19_92 -> m19_94  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_95  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_96  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_97  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_98  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_99  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_101  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_104  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_92 -> m19_105  [key=1, style=dashed, color=darkseagreen4, label=holding];
m19_94 -> m19_95  [key=0, style=solid];
m19_94 -> m19_97  [key=0, style=solid];
m19_94 -> m19_134  [key=2, style=dotted];
m19_96 -> m19_92  [key=0, style=solid];
m19_96 -> m19_136  [key=2, style=dotted];
m19_96 -> m19_117  [key=2, style=dotted];
m19_93 -> m19_94  [key=0, style=solid];
m19_93 -> m19_119  [key=2, style=dotted];
m19_106 -> m19_107  [key=0, style=solid];
m19_95 -> m19_96  [key=0, style=solid];
m19_95 -> m19_135  [key=2, style=dotted];
m19_98 -> m19_99  [key=0, style=solid];
m19_98 -> m19_119  [key=2, style=dotted];
m19_99 -> m19_100  [key=0, style=solid];
m19_99 -> m19_101  [key=0, style=solid];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_103  [key=0, style=solid];
m19_107 -> m19_108  [key=0, style=solid];
m19_107 -> m19_124  [key=2, style=dotted];
m19_108 -> m19_109  [key=0, style=solid];
m19_108 -> m19_117  [key=2, style=dotted];
m19_109 -> m19_115  [key=0, style=solid];
m19_109 -> m19_116  [key=0, style=solid];
m19_112 -> m19_113  [key=0, style=solid];
m19_112 -> m19_115  [key=0, style=solid];
m19_113 -> m19_114  [key=0, style=solid];
m19_115 -> m19_116  [key=0, style=solid];
m19_114 -> m19_115  [key=0, style=solid];
m19_114 -> m19_145  [key=2, style=dotted];
m19_114 -> m19_117  [key=2, style=dotted];
m19_116 -> m19_41  [key=0, style=bold, color=blue];
m19_205 -> m19_206  [key=0, style=solid];
m19_206 -> m19_207  [key=0, style=solid];
m19_206 -> m19_208  [key=0, style=solid];
m19_207 -> m19_208  [key=0, style=solid];
m19_207 -> m19_209  [key=2, style=dotted];
m19_208 -> m19_205  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> n166  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_6  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid];
m19_4 -> m19_0  [key=0, style=bold, color=blue];
m19_117 -> m19_202  [key=0, style=solid];
m19_202 -> m19_203  [key=0, style=solid];
m19_202 -> m19_204  [key=2, style=dotted];
m19_203 -> m19_117  [key=0, style=bold, color=blue];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m19_26 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m19_26 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_36  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_29  [key=0, style=solid];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_35  [key=2, style=dotted];
m19_29 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_28 -> m19_33  [key=0, style=solid];
m19_28 -> m19_34  [key=2, style=dotted];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerageFactory"];
m19_32 -> m19_33  [key=0, style=solid];
m19_33 -> m19_25  [key=0, style=bold, color=blue];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_7 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_8 -> m19_9  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_16  [key=2, style=dotted];
m19_10 -> m19_17  [key=2, style=dotted];
m19_10 -> m19_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_18  [key=2, style=dotted];
m19_11 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=error];
m19_11 -> m19_14  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m19_9 -> m19_10  [key=0, style=solid];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_14  [key=0, style=solid];
m19_13 -> m19_15  [key=0, style=solid];
m19_13 -> m19_19  [key=2, style=dotted];
m19_14 -> m19_15  [key=0, style=solid];
m19_15 -> m19_7  [key=0, style=bold, color=blue];
m19_210 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_108  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_111  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_115  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_206  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_210 -> m19_207  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m19_211 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m19_212 -> m19_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_157  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_212 -> m19_186  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m19_213 -> m19_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m19_214 -> m19_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler"];
m19_215 -> m19_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IBrokerage"];
m19_216 -> m19_160  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m19_216 -> m19_163  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m19_217 -> m19_183  [key=1, style=dashed, color=darkseagreen4, label=order];
m20_45 -> m20_46  [key=0, style=solid];
m20_45 -> m20_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m20_45 -> m20_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m20_32 -> m20_33  [key=0, style=solid];
m20_31 -> m20_32  [key=0, style=solid];
m20_33 -> m20_31  [key=0, style=bold, color=blue];
m20_46 -> m20_47  [key=0, style=solid];
m20_46 -> m20_44  [key=2, style=dotted];
m20_47 -> m20_48  [key=0, style=solid];
m20_47 -> m20_44  [key=2, style=dotted];
m20_48 -> m20_49  [key=0, style=solid];
m20_49 -> m20_45  [key=0, style=bold, color=blue];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_29  [key=2, style=dotted];
m20_7 -> m20_10  [key=0, style=solid];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_29  [key=2, style=dotted];
m20_10 -> m20_11  [key=0, style=solid];
m20_10 -> m20_12  [key=2, style=dotted];
m20_10 -> m20_27  [key=2, style=dotted];
m20_10 -> m20_28  [key=2, style=dotted];
m20_11 -> m20_7  [key=0, style=bold, color=blue];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_29  [key=2, style=dotted];
m20_0 -> m20_1  [key=0, style=solid, color=green];
m20_0 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="System.IServiceProvider"];
m20_0 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_1 -> m20_2  [key=0, style=solid, color=green];
m20_1 -> m20_25  [key=2, style=dotted, color=green];
m20_1 -> m20_3  [key=1, style=dashed, color=green, label=left];
m20_1 -> m20_4  [key=1, style=dashed, color=green, label=left];
m20_1 -> m20_9  [key=1, style=dashed, color=green, label=left];
m20_1 -> m20_14  [key=1, style=dashed, color=green, label=left];
m20_1 -> m20_19  [key=1, style=dashed, color=green, label=left];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_25  [key=2, style=dotted];
m20_2 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label=statusBar];
m20_2 -> m20_10  [key=1, style=dashed, color=darkseagreen4, label=right];
m20_2 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label=right];
m20_2 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label=right];
m20_2 -> m20_7  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_26  [key=2, style=dotted];
m20_3 -> m20_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m20_3 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_8  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_11  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_12  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_13  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_16  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_17  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_18  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_22  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_3 -> m20_23  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_27  [key=2, style=dotted];
m20_4 -> m20_28  [key=2, style=dotted];
m20_4 -> m20_6  [key=0, style=solid];
m20_9 -> m20_10  [key=0, style=solid];
m20_9 -> m20_27  [key=2, style=dotted];
m20_9 -> m20_28  [key=2, style=dotted];
m20_14 -> m20_15  [key=0, style=solid];
m20_14 -> m20_27  [key=2, style=dotted];
m20_14 -> m20_28  [key=2, style=dotted];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_27  [key=2, style=dotted];
m20_19 -> m20_28  [key=2, style=dotted];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_27  [key=2, style=dotted];
m20_5 -> m20_28  [key=2, style=dotted];
m20_5 -> m20_9  [key=2, style=dotted];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_27  [key=2, style=dotted];
m20_15 -> m20_28  [key=2, style=dotted];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_27  [key=2, style=dotted];
m20_20 -> m20_28  [key=2, style=dotted];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_29  [key=2, style=dotted];
m20_6 -> m20_0  [key=0, style=bold, color=blue];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> m20_30  [key=2, style=dotted];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_29  [key=2, style=dotted];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_30  [key=2, style=dotted];
m20_17 -> m20_18  [key=0, style=solid];
m20_17 -> m20_30  [key=2, style=dotted];
m20_18 -> m20_19  [key=0, style=solid];
m20_18 -> m20_30  [key=2, style=dotted];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_30  [key=2, style=dotted];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_30  [key=2, style=dotted];
m20_23 -> m20_24  [key=0, style=solid];
m20_23 -> m20_30  [key=2, style=dotted];
m20_24 -> m20_0  [key=0, style=bold, color=blue];
m20_34 -> m20_35  [key=0, style=solid];
m20_38 -> m20_28  [key=2, style=dotted];
m20_38 -> m20_39  [key=0, style=solid];
m20_39 -> m20_28  [key=2, style=dotted];
m20_39 -> m20_40  [key=0, style=solid];
m20_35 -> m20_38  [key=1, style=dashed, color=darkseagreen4, label=left];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_42  [key=2, style=dotted];
m20_35 -> m20_37  [key=1, style=dashed, color=darkseagreen4, label=left];
m20_35 -> m20_46  [key=1, style=dashed, color=darkseagreen4, label=left];
m20_37 -> m20_38  [key=0, style=solid];
m20_37 -> m20_43  [key=2, style=dotted];
m20_37 -> m20_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m20_37 -> m20_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m20_37 -> m20_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>"];
m20_37 -> m20_40  [key=1, style=dashed, color=darkseagreen4, label=composite];
m20_36 -> m20_39  [key=1, style=dashed, color=darkseagreen4, label=right];
m20_36 -> m20_37  [key=0, style=solid];
m20_36 -> m20_42  [key=2, style=dotted];
m20_36 -> m20_47  [key=1, style=dashed, color=darkseagreen4, label=right];
m20_40 -> m20_41  [key=0, style=solid];
m20_40 -> m20_44  [key=2, style=dotted];
m20_41 -> m20_34  [key=0, style=bold, color=blue];
m20_50 -> m20_46  [key=1, style=dashed, color=darkseagreen4, label=left];
m20_51 -> m20_47  [key=1, style=dashed, color=darkseagreen4, label=right];
m21_0 -> m21_1  [key=0, style=solid, color=red];
m21_0 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label="System.Func<QuantConnect.Indicators.IndicatorBase<T>, bool>"];
m21_1 -> m21_2  [key=0, style=solid, color=red];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_0  [key=0, style=bold, color=blue];
m21_4 -> m21_5  [key=0, style=solid, color=red];
m21_5 -> m21_6  [key=0, style=solid, color=red];
m21_5 -> m21_7  [key=2, style=dotted, color=red];
m21_6 -> m21_4  [key=0, style=bold, color=blue];
m21_8 -> m21_1  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FunctionalIndicator<T>"];
m21_8 -> m21_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Indicators.FunctionalIndicator<T>"];
m21_8 -> m21_5  [key=1, style=dashed, color=red, label="QuantConnect.Indicators.FunctionalIndicator<T>"];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
m23_12 -> m23_164  [key=0, style=solid];
m23_164 -> m23_165  [key=0, style=solid];
m23_164 -> m23_166  [key=2, style=dotted];
m23_165 -> m23_12  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_11  [key=2, style=dotted];
m23_1 -> m23_3  [key=1, style=dashed, color=red, label=exchangeHours];
m23_1 -> m23_9  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m23_2 -> m23_3  [key=0, style=solid, color=red];
m23_2 -> m23_12  [key=2, style=dotted];
m23_2 -> m23_4  [key=1, style=dashed, color=red, label=config];
m23_2 -> m23_5  [key=1, style=dashed, color=darkseagreen4, label=config];
m23_2 -> m23_6  [key=1, style=dashed, color=darkseagreen4, label=config];
m23_2 -> m23_7  [key=1, style=dashed, color=darkseagreen4, label=config];
m23_2 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label=config];
m23_3 -> m23_4  [key=0, style=solid, color=red];
m23_3 -> m23_13  [key=2, style=dotted, color=red];
m23_3 -> m23_14  [key=2, style=dotted, color=red];
m23_3 -> m23_15  [key=2, style=dotted, color=red];
m23_3 -> m23_5  [key=1, style=dashed, color=red, label=security];
m23_3 -> m23_6  [key=1, style=dashed, color=red, label=security];
m23_3 -> m23_7  [key=1, style=dashed, color=red, label=security];
m23_3 -> m23_8  [key=1, style=dashed, color=red, label=security];
m23_3 -> m23_9  [key=1, style=dashed, color=red, label=security];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_17  [key=2, style=dotted];
m23_4 -> m23_5  [key=0, style=solid, color=red];
m23_4 -> m23_16  [key=2, style=dotted, color=red];
m23_4 -> m23_17  [key=2, style=dotted, color=red];
m23_4 -> m23_4  [key=3, color=red, style=bold, label="Field variable int minimumCorrelationHistory"];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_17  [key=2, style=dotted];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_17  [key=2, style=dotted];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_17  [key=2, style=dotted];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_17  [key=2, style=dotted];
m23_10 -> m23_0  [key=0, style=bold, color=blue];
m23_42 -> m23_43  [key=0, style=solid];
m23_43 -> m23_44  [key=0, style=solid];
m23_43 -> m23_39  [key=2, style=dotted];
m23_43 -> m23_45  [key=1, style=dashed, color=red, label=security];
m23_43 -> m23_46  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_47  [key=1, style=dashed, color=red, label=security];
m23_43 -> m23_48  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_49  [key=1, style=dashed, color=red, label=security];
m23_43 -> m23_50  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_51  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_52  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_53  [key=1, style=dashed, color=red, label=security];
m23_43 -> m23_54  [key=1, style=dashed, color=red, label=security];
m23_43 -> m23_55  [key=1, style=dashed, color=red, label=security];
m23_43 -> m23_56  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_58  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_59  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_60  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_61  [key=1, style=dashed, color=red, label=security];
m23_43 -> m23_62  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_63  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_43 -> m23_64  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_44 -> m23_45  [key=0, style=solid, color=red];
m23_44 -> m23_66  [key=2, style=dotted];
m23_45 -> m23_46  [key=0, style=solid, color=red];
m23_45 -> m23_17  [key=2, style=dotted, color=red];
m23_46 -> m23_47  [key=0, style=solid, color=red];
m23_46 -> m23_17  [key=2, style=dotted];
m23_47 -> m23_48  [key=0, style=solid, color=red];
m23_47 -> m23_67  [key=2, style=dotted, color=red];
m23_48 -> m23_49  [key=0, style=solid, color=red];
m23_48 -> m23_67  [key=2, style=dotted];
m23_49 -> m23_50  [key=0, style=solid, color=red];
m23_49 -> m23_67  [key=2, style=dotted, color=red];
m23_50 -> m23_51  [key=0, style=solid];
m23_50 -> m23_68  [key=2, style=dotted];
m23_51 -> m23_52  [key=0, style=solid];
m23_51 -> m23_66  [key=2, style=dotted];
m23_52 -> m23_53  [key=0, style=solid, color=red];
m23_52 -> m23_17  [key=2, style=dotted];
m23_53 -> m23_54  [key=0, style=solid, color=red];
m23_53 -> m23_17  [key=2, style=dotted, color=red];
m23_54 -> m23_55  [key=0, style=solid, color=red];
m23_54 -> m23_67  [key=2, style=dotted, color=red];
m23_55 -> m23_56  [key=0, style=solid, color=red];
m23_55 -> m23_67  [key=2, style=dotted, color=red];
m23_56 -> m23_57  [key=0, style=solid];
m23_56 -> m23_68  [key=2, style=dotted];
m23_57 -> m23_58  [key=0, style=solid];
m23_57 -> m23_67  [key=2, style=dotted];
m23_58 -> m23_59  [key=0, style=solid];
m23_58 -> m23_66  [key=2, style=dotted];
m23_59 -> m23_60  [key=0, style=solid];
m23_59 -> m23_17  [key=2, style=dotted];
m23_60 -> m23_61  [key=0, style=solid, color=red];
m23_60 -> m23_17  [key=2, style=dotted];
m23_61 -> m23_62  [key=0, style=solid, color=red];
m23_61 -> m23_68  [key=2, style=dotted, color=red];
m23_62 -> m23_63  [key=0, style=solid];
m23_62 -> m23_68  [key=2, style=dotted];
m23_63 -> m23_64  [key=0, style=solid];
m23_63 -> m23_68  [key=2, style=dotted];
m23_64 -> m23_65  [key=0, style=solid];
m23_64 -> m23_68  [key=2, style=dotted];
m23_65 -> m23_42  [key=0, style=bold, color=blue];
m23_69 -> m23_70  [key=0, style=solid];
m23_70 -> m23_71  [key=0, style=solid];
m23_70 -> m23_39  [key=2, style=dotted];
m23_70 -> m23_72  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_70 -> m23_73  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_70 -> m23_74  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_70 -> m23_75  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_70 -> m23_76  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_70 -> m23_77  [key=1, style=dashed, color=red, label=security];
m23_70 -> m23_78  [key=1, style=dashed, color=red, label=security];
m23_70 -> m23_79  [key=1, style=dashed, color=red, label=security];
m23_70 -> m23_80  [key=1, style=dashed, color=red, label=security];
m23_70 -> m23_81  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_70 -> m23_82  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_70 -> m23_83  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_70 -> m23_84  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_71 -> m23_72  [key=0, style=solid];
m23_71 -> m23_86  [key=2, style=dotted];
m23_71 -> m23_87  [key=2, style=dotted];
m23_72 -> m23_73  [key=0, style=solid];
m23_72 -> m23_17  [key=2, style=dotted];
m23_73 -> m23_74  [key=0, style=solid];
m23_73 -> m23_17  [key=2, style=dotted];
m23_74 -> m23_75  [key=0, style=solid];
m23_74 -> m23_17  [key=2, style=dotted];
m23_75 -> m23_76  [key=0, style=solid];
m23_75 -> m23_17  [key=2, style=dotted];
m23_76 -> m23_77  [key=0, style=solid, color=red];
m23_76 -> m23_17  [key=2, style=dotted];
m23_77 -> m23_78  [key=0, style=solid, color=red];
m23_77 -> m23_88  [key=2, style=dotted, color=red];
m23_77 -> m23_87  [key=2, style=dotted, color=red];
m23_78 -> m23_79  [key=0, style=solid, color=red];
m23_78 -> m23_17  [key=2, style=dotted, color=red];
m23_79 -> m23_80  [key=0, style=solid, color=red];
m23_79 -> m23_17  [key=2, style=dotted, color=red];
m23_80 -> m23_81  [key=0, style=solid, color=red];
m23_80 -> m23_17  [key=2, style=dotted, color=red];
m23_81 -> m23_82  [key=0, style=solid];
m23_81 -> m23_88  [key=2, style=dotted];
m23_81 -> m23_87  [key=2, style=dotted];
m23_82 -> m23_83  [key=0, style=solid];
m23_82 -> m23_17  [key=2, style=dotted];
m23_83 -> m23_84  [key=0, style=solid];
m23_83 -> m23_17  [key=2, style=dotted];
m23_84 -> m23_85  [key=0, style=solid];
m23_84 -> m23_17  [key=2, style=dotted];
m23_85 -> m23_69  [key=0, style=bold, color=blue];
m23_159 -> m23_160  [key=0, style=solid];
m23_101 -> m23_102  [key=0, style=solid, color=red];
m23_101 -> m23_97  [key=2, style=dotted, color=red];
m23_100 -> m23_101  [key=0, style=solid, color=red];
m23_102 -> m23_100  [key=0, style=bold, color=blue];
m23_122 -> m23_123  [key=0, style=solid];
m23_122 -> m23_124  [key=2, style=dotted];
m23_126 -> m23_127  [key=0, style=solid];
m23_126 -> m23_124  [key=2, style=dotted];
m23_129 -> m23_130  [key=0, style=solid];
m23_129 -> m23_124  [key=2, style=dotted];
m23_132 -> m23_133  [key=0, style=solid];
m23_132 -> m23_124  [key=2, style=dotted];
m23_135 -> m23_136  [key=0, style=solid];
m23_135 -> m23_124  [key=2, style=dotted];
m23_121 -> m23_122  [key=0, style=solid];
m23_125 -> m23_126  [key=0, style=solid];
m23_128 -> m23_129  [key=0, style=solid];
m23_131 -> m23_132  [key=0, style=solid];
m23_134 -> m23_135  [key=0, style=solid];
m23_123 -> m23_121  [key=0, style=bold, color=blue];
m23_127 -> m23_125  [key=0, style=bold, color=blue];
m23_130 -> m23_128  [key=0, style=bold, color=blue];
m23_133 -> m23_131  [key=0, style=bold, color=blue];
m23_136 -> m23_134  [key=0, style=bold, color=blue];
m23_147 -> m23_148  [key=0, style=solid];
m23_147 -> m23_149  [key=2, style=dotted];
m23_151 -> m23_152  [key=0, style=solid];
m23_151 -> m23_149  [key=2, style=dotted];
m23_154 -> m23_155  [key=0, style=solid];
m23_154 -> m23_149  [key=2, style=dotted];
m23_157 -> m23_158  [key=0, style=solid];
m23_157 -> m23_149  [key=2, style=dotted];
m23_160 -> m23_161  [key=0, style=solid];
m23_160 -> m23_149  [key=2, style=dotted];
m23_146 -> m23_147  [key=0, style=solid];
m23_150 -> m23_151  [key=0, style=solid];
m23_153 -> m23_154  [key=0, style=solid];
m23_156 -> m23_157  [key=0, style=solid];
m23_148 -> m23_146  [key=0, style=bold, color=blue];
m23_152 -> m23_150  [key=0, style=bold, color=blue];
m23_155 -> m23_153  [key=0, style=bold, color=blue];
m23_158 -> m23_156  [key=0, style=bold, color=blue];
m23_161 -> m23_159  [key=0, style=bold, color=blue];
m23_18 -> m23_19  [key=0, style=solid];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_39  [key=2, style=dotted];
m23_19 -> m23_21  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_22  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_23  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_25  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_26  [key=1, style=dashed, color=red, label=security];
m23_19 -> m23_27  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_28  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_29  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_30  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_31  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_32  [key=1, style=dashed, color=red, label=security];
m23_19 -> m23_33  [key=1, style=dashed, color=red, label=security];
m23_19 -> m23_34  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_36  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_19 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label=security];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_40  [key=2, style=dotted];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_41  [key=2, style=dotted];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_40  [key=2, style=dotted];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_41  [key=2, style=dotted];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_40  [key=2, style=dotted];
m23_25 -> m23_26  [key=0, style=solid, color=red];
m23_25 -> m23_41  [key=2, style=dotted];
m23_26 -> m23_27  [key=0, style=solid, color=red];
m23_26 -> m23_40  [key=2, style=dotted, color=red];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_41  [key=2, style=dotted];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_40  [key=2, style=dotted];
m23_29 -> m23_30  [key=0, style=solid];
m23_29 -> m23_41  [key=2, style=dotted];
m23_30 -> m23_31  [key=0, style=solid];
m23_30 -> m23_40  [key=2, style=dotted];
m23_31 -> m23_32  [key=0, style=solid, color=red];
m23_31 -> m23_41  [key=2, style=dotted];
m23_32 -> m23_33  [key=0, style=solid, color=red];
m23_32 -> m23_40  [key=2, style=dotted, color=red];
m23_33 -> m23_34  [key=0, style=solid, color=red];
m23_33 -> m23_41  [key=2, style=dotted, color=red];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_40  [key=2, style=dotted];
m23_35 -> m23_36  [key=0, style=solid];
m23_35 -> m23_41  [key=2, style=dotted];
m23_36 -> m23_37  [key=0, style=solid];
m23_36 -> m23_40  [key=2, style=dotted];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_41  [key=2, style=dotted];
m23_38 -> m23_18  [key=0, style=bold, color=blue];
m23_103 -> m23_104  [key=0, style=solid];
m23_104 -> m23_105  [key=0, style=solid];
m23_104 -> m23_107  [key=2, style=dotted];
m23_104 -> m23_108  [key=2, style=dotted];
m23_104 -> m23_109  [key=2, style=dotted];
m23_104 -> m23_14  [key=2, style=dotted];
m23_104 -> m23_110  [key=2, style=dotted];
m23_104 -> m23_15  [key=2, style=dotted];
m23_105 -> m23_106  [key=0, style=solid];
m23_105 -> m23_17  [key=2, style=dotted];
m23_106 -> m23_103  [key=0, style=bold, color=blue];
m23_137 -> m23_138  [key=0, style=solid];
m23_138 -> m23_139  [key=0, style=solid];
m23_138 -> m23_145  [key=2, style=dotted];
m23_138 -> m23_108  [key=2, style=dotted];
m23_138 -> m23_109  [key=2, style=dotted];
m23_138 -> m23_14  [key=2, style=dotted];
m23_138 -> m23_15  [key=2, style=dotted];
m23_138 -> m23_147  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_138 -> m23_140  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_138 -> m23_151  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_138 -> m23_141  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_138 -> m23_154  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_138 -> m23_142  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_138 -> m23_157  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_138 -> m23_143  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_138 -> m23_160  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_139 -> m23_140  [key=0, style=solid];
m23_139 -> m23_119  [key=2, style=dotted];
m23_139 -> m23_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_140 -> m23_141  [key=0, style=solid];
m23_140 -> m23_119  [key=2, style=dotted];
m23_140 -> m23_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_141 -> m23_142  [key=0, style=solid];
m23_141 -> m23_119  [key=2, style=dotted];
m23_141 -> m23_153  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_142 -> m23_143  [key=0, style=solid];
m23_142 -> m23_119  [key=2, style=dotted];
m23_142 -> m23_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_143 -> m23_144  [key=0, style=solid];
m23_143 -> m23_119  [key=2, style=dotted];
m23_143 -> m23_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_144 -> m23_137  [key=0, style=bold, color=blue];
m23_39 -> m23_162  [key=0, style=solid];
m23_162 -> m23_163  [key=0, style=solid];
m23_162 -> m23_13  [key=2, style=dotted];
m23_162 -> m23_11  [key=2, style=dotted];
m23_162 -> m23_12  [key=2, style=dotted];
m23_162 -> m23_14  [key=2, style=dotted];
m23_162 -> m23_15  [key=2, style=dotted];
m23_163 -> m23_39  [key=0, style=bold, color=blue];
m23_111 -> m23_112  [key=0, style=solid, color=red];
m23_112 -> m23_113  [key=0, style=solid, color=red];
m23_112 -> m23_107  [key=2, style=dotted, color=red];
m23_112 -> m23_108  [key=2, style=dotted, color=red];
m23_112 -> m23_109  [key=2, style=dotted, color=red];
m23_112 -> m23_14  [key=2, style=dotted, color=red];
m23_112 -> m23_110  [key=2, style=dotted, color=red];
m23_112 -> m23_15  [key=2, style=dotted, color=red];
m23_112 -> m23_122  [key=1, style=dashed, color=red, label=option];
m23_112 -> m23_114  [key=1, style=dashed, color=red, label=option];
m23_112 -> m23_126  [key=1, style=dashed, color=red, label=option];
m23_112 -> m23_115  [key=1, style=dashed, color=red, label=option];
m23_112 -> m23_129  [key=1, style=dashed, color=red, label=option];
m23_112 -> m23_116  [key=1, style=dashed, color=red, label=option];
m23_112 -> m23_132  [key=1, style=dashed, color=red, label=option];
m23_112 -> m23_117  [key=1, style=dashed, color=red, label=option];
m23_112 -> m23_135  [key=1, style=dashed, color=red, label=option];
m23_113 -> m23_114  [key=0, style=solid];
m23_113 -> m23_119  [key=2, style=dotted];
m23_113 -> m23_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_114 -> m23_115  [key=0, style=solid];
m23_114 -> m23_120  [key=2, style=dotted];
m23_114 -> m23_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_115 -> m23_116  [key=0, style=solid];
m23_115 -> m23_120  [key=2, style=dotted];
m23_115 -> m23_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_116 -> m23_117  [key=0, style=solid];
m23_116 -> m23_120  [key=2, style=dotted];
m23_116 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_117 -> m23_118  [key=0, style=solid];
m23_117 -> m23_120  [key=2, style=dotted];
m23_117 -> m23_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_118 -> m23_111  [key=0, style=bold, color=blue];
m23_89 -> m23_90  [key=0, style=solid, color=red];
m23_90 -> m23_91  [key=0, style=solid, color=red];
m23_90 -> m23_39  [key=2, style=dotted, color=red];
m23_90 -> m23_92  [key=1, style=dashed, color=red, label=security];
m23_90 -> m23_93  [key=1, style=dashed, color=red, label=security];
m23_90 -> m23_94  [key=1, style=dashed, color=red, label=security];
m23_90 -> m23_95  [key=1, style=dashed, color=red, label=security];
m23_90 -> m23_101  [key=1, style=dashed, color=red, label=security];
m23_90 -> m23_90  [key=3, color=red, style=bold, label="Field variable decimal Open"];
m23_91 -> m23_92  [key=0, style=solid];
m23_91 -> m23_97  [key=2, style=dotted];
m23_92 -> m23_93  [key=0, style=solid];
m23_92 -> m23_17  [key=2, style=dotted];
m23_93 -> m23_94  [key=0, style=solid];
m23_93 -> m23_97  [key=2, style=dotted];
m23_94 -> m23_95  [key=0, style=solid, color=red];
m23_94 -> m23_17  [key=2, style=dotted];
m23_95 -> m23_96  [key=0, style=solid, color=red];
m23_95 -> m23_41  [key=2, style=dotted, color=red];
m23_95 -> m23_98  [key=2, style=dotted, color=red];
m23_95 -> m23_99  [key=2, style=dotted, color=red];
m23_95 -> m23_100  [key=1, style=dashed, color=red, label="lambda expression"];
m23_95 -> m23_90  [key=3, color=red, style=bold, label="Field variable decimal Low"];
m23_96 -> m23_89  [key=0, style=bold, color=blue];
m23_167 -> m23_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityTests"];
m23_167 -> m23_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityTests"];
m23_167 -> m23_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Securities.SecurityTests"];
m23_167 -> m23_90  [key=1, style=dashed, color=red, label="QuantConnect.Tests.Common.Securities.SecurityTests"];
m23_168 -> m23_101  [key=1, style=dashed, color=red, label=security];
m23_169 -> m23_122  [key=1, style=dashed, color=darkseagreen4, label=option];
m23_169 -> m23_126  [key=1, style=dashed, color=darkseagreen4, label=option];
m23_169 -> m23_129  [key=1, style=dashed, color=darkseagreen4, label=option];
m23_169 -> m23_132  [key=1, style=dashed, color=darkseagreen4, label=option];
m23_169 -> m23_135  [key=1, style=dashed, color=darkseagreen4, label=option];
m23_170 -> m23_147  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_170 -> m23_151  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_170 -> m23_154  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_170 -> m23_157  [key=1, style=dashed, color=darkseagreen4, label=equity];
m23_170 -> m23_160  [key=1, style=dashed, color=darkseagreen4, label=equity];
m25_44 -> m25_45  [key=0, style=solid];
m25_45 -> m25_44  [key=0, style=bold, color=blue];
m25_14 -> m25_15  [key=0, style=solid];
m25_15 -> m25_14  [key=0, style=bold, color=blue];
m25_24 -> m25_25  [key=0, style=solid];
m25_25 -> m25_24  [key=0, style=bold, color=blue];
m25_18 -> m25_19  [key=0, style=solid];
m25_19 -> m25_18  [key=0, style=bold, color=blue];
m25_54 -> m25_55  [key=0, style=solid];
m25_55 -> m25_54  [key=0, style=bold, color=blue];
m25_50 -> m25_51  [key=0, style=solid];
m25_51 -> m25_50  [key=0, style=bold, color=blue];
m25_34 -> m25_35  [key=0, style=solid];
m25_35 -> m25_34  [key=0, style=bold, color=blue];
m25_4 -> m25_5  [key=0, style=solid];
m25_5 -> m25_4  [key=0, style=bold, color=blue];
m25_30 -> m25_31  [key=0, style=solid];
m25_31 -> m25_30  [key=0, style=bold, color=blue];
m25_38 -> m25_39  [key=0, style=solid];
m25_39 -> m25_38  [key=0, style=bold, color=blue];
m25_36 -> m25_37  [key=0, style=solid];
m25_37 -> m25_36  [key=0, style=bold, color=blue];
m25_10 -> m25_11  [key=0, style=solid];
m25_11 -> m25_10  [key=0, style=bold, color=blue];
m25_26 -> m25_27  [key=0, style=solid];
m25_27 -> m25_26  [key=0, style=bold, color=blue];
m25_46 -> m25_47  [key=0, style=solid];
m25_47 -> m25_46  [key=0, style=bold, color=blue];
m25_6 -> m25_7  [key=0, style=solid];
m25_7 -> m25_6  [key=0, style=bold, color=blue];
m25_12 -> m25_13  [key=0, style=solid];
m25_13 -> m25_12  [key=0, style=bold, color=blue];
m25_16 -> m25_17  [key=0, style=solid];
m25_17 -> m25_16  [key=0, style=bold, color=blue];
m25_42 -> m25_43  [key=0, style=solid];
m25_43 -> m25_42  [key=0, style=bold, color=blue];
m25_48 -> m25_49  [key=0, style=solid];
m25_49 -> m25_48  [key=0, style=bold, color=blue];
m25_22 -> m25_23  [key=0, style=solid];
m25_23 -> m25_22  [key=0, style=bold, color=blue];
m25_28 -> m25_29  [key=0, style=solid];
m25_29 -> m25_28  [key=0, style=bold, color=blue];
m25_2 -> m25_3  [key=0, style=solid];
m25_3 -> m25_2  [key=0, style=bold, color=blue];
m25_52 -> m25_53  [key=0, style=solid];
m25_53 -> m25_52  [key=0, style=bold, color=blue];
m25_8 -> m25_9  [key=0, style=solid];
m25_9 -> m25_8  [key=0, style=bold, color=blue];
m25_56 -> m25_57  [key=0, style=solid];
m25_57 -> m25_56  [key=0, style=bold, color=blue];
m25_32 -> m25_33  [key=0, style=solid];
m25_33 -> m25_32  [key=0, style=bold, color=blue];
m25_20 -> m25_21  [key=0, style=solid];
m25_21 -> m25_20  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_0  [key=0, style=bold, color=blue];
m25_40 -> m25_41  [key=0, style=solid];
m25_41 -> m25_40  [key=0, style=bold, color=blue];
m26_51 -> m26_52  [key=0, style=solid];
m26_51 -> m26_55  [key=2, style=dotted];
m26_10 -> m26_12  [key=0, style=solid];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_58  [key=0, style=solid];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_19  [key=2, style=dotted];
m26_13 -> m26_32  [key=0, style=solid];
m26_14 -> m26_15  [key=0, style=solid];
m26_14 -> m26_20  [key=2, style=dotted];
m26_14 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label=reader];
m26_14 -> m26_66  [key=0, style=solid];
m26_15 -> m26_16  [key=0, style=solid];
m26_15 -> m26_21  [key=2, style=dotted];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_22  [key=2, style=dotted];
m26_16 -> m26_28  [key=2, style=dotted];
m26_17 -> m26_18  [key=0, style=solid];
m26_17 -> m26_19  [key=0, style=solid];
m26_18 -> m26_10  [key=0, style=bold, color=blue];
m26_18 -> m26_27  [key=0, style=solid];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m26_60 -> m26_61  [key=0, style=solid];
m26_60 -> m26_46  [key=0, style=bold, color=blue];
m26_62 -> m26_30  [key=2, style=dotted];
m26_62 -> m26_63  [key=0, style=solid];
m26_62 -> m26_65  [key=0, style=solid];
m26_62 -> m26_66  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m26_61 -> m26_62  [key=0, style=solid];
m26_61 -> m26_65  [key=2, style=dotted];
m26_61 -> m26_63  [key=1, style=dashed, color=darkseagreen4, label=fee];
m26_63 -> m26_64  [key=0, style=solid];
m26_64 -> m26_60  [key=0, style=bold, color=blue];
m26_40 -> m26_43  [key=0, style=solid];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_54  [key=2, style=dotted];
m26_40 -> m26_55  [key=2, style=dotted];
m26_40 -> m26_42  [key=1, style=dashed, color=darkseagreen4, label=absoluteFillQuantity];
m26_40 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label=absoluteFillQuantity];
m26_43 -> m26_44  [key=0, style=solid];
m26_43 -> m26_46  [key=2, style=dotted];
m26_44 -> m26_45  [key=0, style=solid];
m26_44 -> m26_47  [key=2, style=dotted];
m26_44 -> m26_48  [key=0, style=solid];
m26_44 -> m26_57  [key=2, style=dotted];
m26_45 -> m26_40  [key=0, style=bold, color=blue];
m26_45 -> m26_46  [key=0, style=solid];
m26_45 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label=absoluteRemaining];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=2, style=dotted];
m26_1 -> m26_9  [key=2, style=dotted];
m26_2 -> m26_0  [key=0, style=bold, color=blue];
m26_2 -> m26_3  [key=0, style=solid, color=green];
m26_2 -> m26_10  [key=2, style=dotted];
m26_57 -> m26_58  [key=0, style=solid];
m26_57 -> m26_59  [key=0, style=solid];
m26_39 -> m26_41  [key=0, style=solid];
m26_39 -> m26_48  [key=1, style=dashed, color=darkseagreen4, label=fill];
m26_39 -> m26_40  [key=0, style=solid];
m26_39 -> m26_53  [key=2, style=dotted];
m26_39 -> m26_43  [key=1, style=dashed, color=darkseagreen4, label=fill];
m26_39 -> m26_47  [key=1, style=dashed, color=darkseagreen4, label=fill];
m26_39 -> m26_49  [key=1, style=dashed, color=darkseagreen4, label=fill];
m26_41 -> m26_42  [key=0, style=solid];
m26_41 -> m26_26  [key=2, style=dotted];
m26_41 -> m26_56  [key=2, style=dotted];
m26_42 -> m26_39  [key=0, style=bold, color=blue];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_45  [key=0, style=solid];
m26_35 -> m26_36  [key=0, style=solid];
m26_36 -> m26_37  [key=0, style=solid];
m26_36 -> m26_39  [key=2, style=dotted];
m26_36 -> m26_51  [key=2, style=dotted];
m26_36 -> m26_40  [key=1, style=dashed, color=darkseagreen4, label=absoluteRemaining];
m26_36 -> m26_42  [key=1, style=dashed, color=darkseagreen4, label=absoluteRemaining];
m26_36 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label=absoluteRemaining];
m26_37 -> m26_38  [key=0, style=solid];
m26_37 -> m26_40  [key=2, style=dotted];
m26_37 -> m26_42  [key=1, style=dashed, color=darkseagreen4, label=absoluteRemaining];
m26_37 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label=absoluteRemaining];
m26_38 -> m26_35  [key=0, style=bold, color=blue];
m26_38 -> m26_39  [key=0, style=solid];
m26_38 -> m26_52  [key=2, style=dotted];
m26_46 -> m26_56  [key=0, style=solid];
m26_46 -> m26_47  [key=0, style=solid];
m26_56 -> m26_57  [key=0, style=solid];
m26_56 -> m26_61  [key=2, style=dotted];
m26_56 -> m26_58  [key=1, style=dashed, color=darkseagreen4, label=projectAssociations];
m26_56 -> m26_59  [key=1, style=dashed, color=darkseagreen4, label=projectAssociations];
m26_58 -> m26_57  [key=0, style=solid];
m26_58 -> m26_62  [key=2, style=dotted];
m26_58 -> m26_63  [key=2, style=dotted];
m26_58 -> m26_64  [key=2, style=dotted];
m26_58 -> m26_58  [key=1, style=dashed, color=darkseagreen4, label=a];
m26_58 -> m26_59  [key=0, style=solid];
m26_59 -> m26_60  [key=0, style=solid];
m26_59 -> m26_12  [key=0, style=bold, color=blue];
m26_31 -> m26_33  [key=0, style=solid];
m26_27 -> m26_15  [key=0, style=bold, color=blue];
m26_52 -> m26_47  [key=0, style=bold, color=blue];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_29  [key=2, style=dotted];
m26_20 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m26_65 -> m26_66  [key=0, style=solid];
m26_66 -> m26_67  [key=0, style=solid];
m26_67 -> m26_62  [key=0, style=bold, color=blue];
m26_67 -> m26_14  [key=0, style=bold, color=blue];
m26_29 -> m26_30  [key=0, style=solid];
m26_30 -> m26_31  [key=0, style=solid];
m26_30 -> m26_32  [key=0, style=solid];
m26_30 -> m26_26  [key=2, style=dotted];
m26_30 -> n56  [key=2, style=dotted];
m26_32 -> m26_33  [key=0, style=solid];
m26_33 -> m26_28  [key=0, style=bold, color=blue];
m26_33 -> m26_13  [key=0, style=bold, color=blue];
m26_9 -> m26_3  [key=0, style=bold, color=blue];
m26_22 -> m26_27  [key=0, style=solid];
m26_22 -> m26_31  [key=2, style=dotted];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_30  [key=2, style=dotted];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_23  [key=0, style=solid];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_31  [key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid, color=green];
m26_3 -> m26_11  [key=2, style=dotted, color=green];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_10  [key=2, style=dotted];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_12  [key=2, style=dotted];
m26_5 -> m26_7  [key=0, style=solid];
m26_5 -> m26_8  [key=0, style=solid];
m26_5 -> m26_9  [key=0, style=solid];
m26_5 -> m26_11  [key=2, style=dotted];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_13  [key=2, style=dotted];
m26_6 -> m26_9  [key=0, style=solid];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_14  [key=2, style=dotted];
m26_7 -> m26_9  [key=0, style=solid];
m26_8 -> m26_0  [key=0, style=bold, color=blue];
m26_8 -> m26_9  [key=0, style=solid];
m26_34 -> m26_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m26_34 -> m26_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m26_34 -> m26_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m26_34 -> m26_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m26_34 -> m26_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m26_34 -> m26_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m26_34 -> m26_35  [key=0, style=solid];
m26_34 -> m26_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m26_34 -> m26_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.MarketOrder"];
m26_48 -> m26_30  [key=2, style=dotted];
m26_48 -> m26_49  [key=0, style=solid];
m26_48 -> m26_53  [key=2, style=dotted];
m26_47 -> m26_48  [key=0, style=solid];
m26_47 -> m26_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectAssociations"];
m26_49 -> m26_50  [key=0, style=solid];
m26_49 -> m26_54  [key=2, style=dotted];
m26_49 -> m26_51  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_50 -> m26_34  [key=0, style=bold, color=blue];
m26_50 -> m26_51  [key=0, style=solid];
m26_50 -> m26_21  [key=2, style=dotted];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_27  [key=0, style=solid];
m26_23 -> m26_25  [key=0, style=solid];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_29  [key=2, style=dotted];
m26_24 -> m26_26  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m26_24 -> m26_23  [key=0, style=solid];
m26_24 -> m26_27  [key=2, style=dotted];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_30  [key=2, style=dotted];
m26_25 -> m26_11  [key=0, style=bold, color=blue];
m26_11 -> m26_23  [key=0, style=solid];
m26_68 -> m26_69  [key=0, style=solid];
m26_68 -> m26_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectFinder"];
m26_68 -> m26_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectFinder"];
m26_68 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectFinder"];
m26_68 -> m26_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectFinder"];
m26_68 -> m26_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectFinder"];
m26_68 -> m26_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectFinder"];
m26_68 -> m26_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectFinder"];
m26_68 -> m26_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectFinder"];
m26_68 -> m26_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectFinder"];
m26_70 -> m26_30  [key=2, style=dotted];
m26_70 -> m26_71  [key=0, style=solid];
m26_69 -> m26_70  [key=0, style=solid];
m26_69 -> m26_73  [key=2, style=dotted];
m26_69 -> m26_71  [key=1, style=dashed, color=darkseagreen4, label=slippage];
m26_69 -> m26_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectAssociation"];
m26_69 -> m26_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectAssociation"];
m26_71 -> m26_72  [key=0, style=solid];
m26_72 -> m26_68  [key=0, style=bold, color=blue];
m26_74 -> m26_3  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_74 -> m26_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm"];
m26_76 -> m26_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFeeModel"];
m26_76 -> m26_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFeeModel"];
m26_75 -> m26_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel"];
m26_75 -> m26_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel"];
m26_75 -> m26_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel"];
m26_75 -> m26_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel"];
m26_75 -> m26_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel"];
m26_75 -> m26_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel"];
m26_75 -> m26_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel"];
m26_75 -> m26_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomFillModel"];
m26_77 -> m26_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel"];
m26_77 -> m26_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomModelsAlgorithm.CustomSlippageModel"];
m27_14 -> m27_15  [key=0, style=solid];
m27_15 -> m27_16  [key=0, style=solid];
m27_15 -> m27_17  [key=0, style=solid];
m27_16 -> m27_17  [key=0, style=solid];
m27_16 -> m27_18  [key=2, style=dotted];
m27_17 -> m27_14  [key=0, style=bold, color=blue];
m27_21 -> m27_22  [key=0, style=solid];
m27_21 -> m27_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_25  [key=2, style=dotted];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_26  [key=2, style=dotted];
m27_24 -> m27_21  [key=0, style=bold, color=blue];
m27_8 -> m27_19  [key=0, style=solid];
m27_19 -> m27_20  [key=0, style=solid];
m27_20 -> m27_8  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid, color=red];
m27_1 -> m27_2  [key=0, style=solid, color=red];
m27_1 -> m27_7  [key=2, style=dotted, color=red];
m27_2 -> m27_3  [key=0, style=solid, color=green];
m27_2 -> m27_8  [key=2, style=dotted];
m27_2 -> m27_9  [key=2, style=dotted];
m27_2 -> m27_10  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid, color=green];
m27_3 -> m27_11  [key=2, style=dotted, color=green];
m27_4 -> m27_5  [key=0, style=solid];
m27_4 -> m27_12  [key=2, style=dotted];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_13  [key=2, style=dotted];
m27_6 -> m27_0  [key=0, style=bold, color=blue];
m27_27 -> m27_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm"];
m27_27 -> m27_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm"];
m27_27 -> m27_3  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm"];
m27_27 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm"];
m27_27 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm"];
m27_27 -> m27_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm"];
m27_27 -> m27_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm"];
m27_28 -> m27_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer"];
m27_28 -> m27_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer"];
m27_28 -> m27_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.CustomSecurityInitializerAlgorithm.CustomSecurityInitializer"];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.Credentials"];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.Credentials"];
m28_3 -> m28_0  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid, color=green];
m29_1 -> m29_2  [key=0, style=solid, color=green];
m29_1 -> m29_6  [key=2, style=dotted];
m29_2 -> m29_0  [key=0, style=bold, color=blue];
m29_2 -> m29_3  [key=0, style=solid];
m29_2 -> m29_7  [key=2, style=dotted];
m29_10 -> m29_11  [key=0, style=solid];
m29_11 -> m29_12  [key=0, style=solid, color=red];
m29_11 -> m29_14  [key=2, style=dotted];
m29_12 -> m29_13  [key=0, style=solid, color=red];
m29_12 -> m29_15  [key=2, style=dotted, color=red];
m29_13 -> m29_10  [key=0, style=bold, color=blue];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_8  [key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_9  [key=2, style=dotted];
m29_5 -> m29_0  [key=0, style=bold, color=blue];
m29_16 -> m29_17  [key=0, style=solid];
m29_16 -> m29_18  [key=1, style=dashed, color=red, label="QuantConnect.Data.Custom.DailyFx"];
m29_17 -> m29_18  [key=0, style=solid, color=red];
m29_17 -> m29_20  [key=2, style=dotted];
m29_17 -> m29_21  [key=2, style=dotted];
m29_18 -> m29_19  [key=0, style=solid, color=red];
m29_18 -> m29_15  [key=2, style=dotted, color=red];
m29_19 -> m29_16  [key=0, style=bold, color=blue];
m29_22 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm"];
m29_22 -> m29_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm"];
m29_22 -> m29_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm"];
m29_22 -> m29_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm"];
m29_22 -> m29_12  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm"];
m29_22 -> m29_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm"];
m29_22 -> m29_18  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.DailyFxAlgorithm"];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_0  [key=0, style=bold, color=blue];
m31_34 -> m31_35  [key=0, style=solid, color=red];
m31_35 -> m31_36  [key=0, style=solid, color=red];
m31_35 -> m31_33  [key=2, style=dotted, color=red];
m31_36 -> m31_34  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_7  [key=2, style=dotted];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_8  [key=2, style=dotted];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_9  [key=2, style=dotted];
m31_4 -> m31_5  [key=0, style=solid];
m31_4 -> m31_10  [key=2, style=dotted];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_10  [key=2, style=dotted];
m31_6 -> m31_0  [key=0, style=bold, color=blue];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_15  [key=0, style=solid];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_19  [key=0, style=solid];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_20  [key=2, style=dotted];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_21  [key=2, style=dotted];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_16  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m31_16 -> m31_18  [key=1, style=dashed, color=red, label=symbol];
m31_17 -> m31_18  [key=0, style=solid, color=red];
m31_17 -> m31_17  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m31_18 -> m31_15  [key=0, style=solid, color=red];
m31_18 -> m31_22  [key=2, style=dotted, color=red];
m31_18 -> m31_23  [key=2, style=dotted, color=red];
m31_19 -> m31_11  [key=0, style=bold, color=blue];
m31_24 -> m31_25  [key=0, style=solid];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_32  [key=0, style=solid];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_26  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m31_26 -> m31_29  [key=1, style=dashed, color=red, label=symbol];
m31_26 -> m31_31  [key=1, style=dashed, color=red, label=symbol];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_27  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m31_27 -> m31_30  [key=1, style=dashed, color=darkseagreen4, label=delisting];
m31_29 -> m31_30  [key=0, style=solid, color=red];
m31_29 -> m31_33  [key=2, style=dotted, color=red];
m31_31 -> m31_25  [key=0, style=solid, color=red];
m31_31 -> m31_33  [key=2, style=dotted, color=red];
m31_28 -> m31_29  [key=0, style=solid, color=red];
m31_28 -> m31_30  [key=0, style=solid];
m31_30 -> m31_31  [key=0, style=solid, color=red];
m31_30 -> m31_25  [key=0, style=solid];
m31_32 -> m31_24  [key=0, style=bold, color=blue];
m31_37 -> m31_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_18  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_29  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_31  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m31_37 -> m31_35  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.DelistingEventsAlgorithm"];
m32_33 -> m32_34  [key=0, style=solid];
m32_33 -> m32_35  [key=1, style=dashed, color=darkseagreen4, label=bool];
m32_33 -> m32_42  [key=1, style=dashed, color=darkseagreen4, label=bool];
m32_34 -> m32_35  [key=0, style=solid];
m32_35 -> m32_36  [key=0, style=solid];
m32_35 -> m32_37  [key=0, style=solid];
m32_42 -> m32_43  [key=0, style=solid];
m32_42 -> m32_48  [key=0, style=solid];
m32_42 -> m32_50  [key=0, style=solid];
m32_36 -> m32_37  [key=0, style=solid];
m32_36 -> m32_51  [key=2, style=dotted];
m32_37 -> m32_38  [key=0, style=solid];
m32_37 -> m32_42  [key=0, style=solid];
m32_38 -> m32_39  [key=0, style=solid];
m32_38 -> m32_51  [key=2, style=dotted];
m32_39 -> m32_40  [key=0, style=solid];
m32_39 -> m32_52  [key=2, style=dotted];
m32_40 -> m32_41  [key=0, style=solid];
m32_40 -> m32_52  [key=2, style=dotted];
m32_40 -> m32_32  [key=2, style=dotted];
m32_41 -> m32_48  [key=0, style=solid];
m32_41 -> m32_50  [key=0, style=solid];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_51  [key=2, style=dotted];
m32_48 -> m32_49  [key=0, style=solid];
m32_44 -> m32_45  [key=0, style=solid];
m32_44 -> m32_53  [key=2, style=dotted];
m32_44 -> m32_46  [key=1, style=dashed, color=darkseagreen4, label=cloneForward];
m32_44 -> m32_47  [key=1, style=dashed, color=darkseagreen4, label=cloneForward];
m32_45 -> m32_46  [key=0, style=solid];
m32_45 -> m32_54  [key=2, style=dotted];
m32_46 -> m32_47  [key=0, style=solid];
m32_46 -> m32_32  [key=2, style=dotted];
m32_47 -> m32_48  [key=0, style=solid];
m32_47 -> m32_50  [key=0, style=solid];
m32_47 -> m32_52  [key=2, style=dotted];
m32_49 -> m32_50  [key=0, style=solid];
m32_49 -> m32_55  [key=2, style=dotted];
m32_50 -> m32_33  [key=0, style=bold, color=blue];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m32_17 -> m32_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m32_17 -> m32_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.Tick"];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_15  [key=2, style=dotted];
m32_18 -> m32_25  [key=1, style=dashed, color=darkseagreen4, label=barStartTime];
m32_25 -> m32_29  [key=0, style=solid];
m32_25 -> m32_30  [key=2, style=dotted];
m32_26 -> m32_29  [key=0, style=solid];
m32_26 -> m32_31  [key=2, style=dotted];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_32  [key=2, style=dotted];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_21  [key=0, style=solid];
m32_20 -> m32_19  [key=0, style=solid];
m32_20 -> m32_16  [key=2, style=dotted];
m32_21 -> m32_22  [key=0, style=solid];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_27  [key=0, style=solid];
m32_23 -> m32_24  [key=0, style=solid];
m32_27 -> m32_28  [key=0, style=solid];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_26  [key=0, style=solid];
m32_29 -> m32_17  [key=0, style=bold, color=blue];
m32_15 -> m32_56  [key=0, style=solid];
m32_15 -> m32_10  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.BaseData data"];
m32_15 -> m32_17  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.BaseData data"];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> n205  [key=2, style=dotted];
m32_57 -> m32_15  [key=0, style=bold, color=blue];
m32_10 -> m32_11  [key=0, style=solid];
m32_10 -> m32_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m32_11 -> m32_12  [key=0, style=solid];
m32_11 -> m32_13  [key=0, style=solid];
m32_11 -> m32_15  [key=2, style=dotted];
m32_13 -> m32_14  [key=0, style=solid];
m32_12 -> m32_11  [key=0, style=solid];
m32_12 -> m32_16  [key=2, style=dotted];
m32_14 -> m32_10  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m32_0 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m32_1 -> m32_2  [key=0, style=solid];
m32_4 -> m32_5  [key=0, style=solid];
m32_5 -> m32_6  [key=0, style=solid];
m32_2 -> m32_3  [key=0, style=solid];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_8  [key=2, style=dotted];
m32_6 -> m32_7  [key=0, style=solid];
m32_6 -> m32_9  [key=2, style=dotted];
m32_7 -> m32_0  [key=0, style=bold, color=blue];
m32_59 -> m32_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m32_59 -> m32_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.StreamStore"];
m34_6 -> m34_7  [key=0, style=solid];
m34_0 -> m34_1  [key=0, style=solid];
m34_0 -> m34_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataCacheProvider"];
m34_0 -> m34_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataCacheProvider"];
m34_0 -> m34_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IDataCacheProvider"];
m34_0 -> m34_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataSource"];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_4  [key=0, style=solid];
m34_1 -> m34_6  [key=0, style=solid];
m34_1 -> m34_8  [key=0, style=solid];
m34_3 -> m34_9  [key=0, style=solid];
m34_3 -> m34_10  [key=2, style=dotted];
m34_5 -> m34_9  [key=0, style=solid];
m34_5 -> m34_11  [key=2, style=dotted];
m34_7 -> m34_9  [key=0, style=solid];
m34_7 -> m34_12  [key=2, style=dotted];
m34_8 -> m34_9  [key=0, style=solid];
m34_8 -> m34_13  [key=2, style=dotted];
m34_2 -> m34_3  [key=0, style=solid];
m34_4 -> m34_5  [key=0, style=solid];
m34_9 -> m34_0  [key=0, style=bold, color=blue];
m35_2 -> m35_3  [key=0, style=solid];
m35_3 -> m35_2  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_0  [key=0, style=bold, color=blue];
m37_145 -> m37_146  [key=0, style=solid];
m37_145 -> m37_147  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_145 -> m37_148  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m37_145 -> m37_150  [key=1, style=dashed, color=darkseagreen4, label=int];
m37_145 -> m37_152  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_145 -> m37_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityExchangeHours"];
m37_146 -> m37_147  [key=0, style=solid];
m37_146 -> m37_148  [key=0, style=solid];
m37_147 -> m37_156  [key=0, style=solid];
m37_147 -> m37_142  [key=2, style=dotted];
m37_147 -> m37_143  [key=2, style=dotted];
m37_148 -> m37_149  [key=0, style=solid];
m37_148 -> m37_151  [key=1, style=dashed, color=darkseagreen4, label=current];
m37_148 -> m37_152  [key=1, style=dashed, color=darkseagreen4, label=current];
m37_148 -> m37_155  [key=1, style=dashed, color=darkseagreen4, label=current];
m37_150 -> m37_151  [key=0, style=solid];
m37_150 -> m37_155  [key=0, style=solid];
m37_152 -> m37_153  [key=0, style=solid];
m37_152 -> m37_152  [key=1, style=dashed, color=darkseagreen4, label=current];
m37_152 -> m37_155  [key=1, style=dashed, color=darkseagreen4, label=current];
m37_153 -> m37_154  [key=0, style=solid];
m37_153 -> m37_150  [key=0, style=solid];
m37_153 -> n206  [key=2, style=dotted];
m37_149 -> m37_150  [key=0, style=solid];
m37_149 -> m37_154  [key=1, style=dashed, color=darkseagreen4, label=i];
m37_151 -> m37_152  [key=0, style=solid];
m37_151 -> m37_153  [key=1, style=dashed, color=darkseagreen4, label=previous];
m37_155 -> m37_156  [key=0, style=solid];
m37_154 -> m37_150  [key=0, style=solid];
m37_154 -> m37_154  [key=1, style=dashed, color=darkseagreen4, label=i];
m37_156 -> m37_145  [key=0, style=bold, color=blue];
m37_88 -> m37_89  [key=0, style=solid, color=red];
m37_88 -> m37_92  [key=0, style=bold, color=red];
m37_88 -> m37_90  [key=1, style=dashed, color=red, label="System.DateTime"];
m37_88 -> m37_91  [key=1, style=dashed, color=red, label="QuantConnect.Securities.SecurityExchangeHours"];
m37_89 -> m37_90  [key=0, style=solid, color=red];
m37_89 -> m37_91  [key=1, style=dashed, color=red, label=day];
m37_89 -> m37_92  [key=1, style=dashed, color=red, label=day];
m37_89 -> m37_93  [key=1, style=dashed, color=red, label=day];
m37_92 -> m37_93  [key=0, style=solid, color=red];
m37_90 -> m37_91  [key=0, style=solid, color=red];
m37_90 -> m37_94  [key=0, style=solid, color=red];
m37_91 -> m37_92  [key=0, style=solid, color=red];
m37_91 -> m37_93  [key=0, style=solid, color=red];
m37_91 -> m37_95  [key=2, style=dotted, color=red];
m37_93 -> m37_90  [key=0, style=solid, color=red];
m37_93 -> m37_76  [key=2, style=dotted, color=red];
m37_93 -> m37_93  [key=1, style=dashed, color=red, label=day];
m37_94 -> m37_88  [key=0, style=bold, color=blue];
m37_15 -> m37_16  [key=0, style=solid, color=red];
m37_15 -> m37_17  [key=1, style=dashed, color=red, label=double];
m37_15 -> m37_19  [key=1, style=dashed, color=red, label=double];
m37_16 -> m37_17  [key=0, style=solid, color=red];
m37_17 -> m37_18  [key=0, style=solid, color=red];
m37_17 -> m37_21  [key=0, style=solid, color=red];
m37_17 -> m37_23  [key=2, style=dotted, color=red];
m37_19 -> m37_20  [key=0, style=solid, color=red];
m37_19 -> m37_14  [key=2, style=dotted, color=red];
m37_18 -> m37_19  [key=0, style=solid, color=red];
m37_21 -> m37_22  [key=0, style=solid, color=red];
m37_20 -> m37_21  [key=0, style=solid, color=red];
m37_22 -> m37_15  [key=0, style=bold, color=blue];
m37_41 -> m37_42  [key=0, style=solid, color=red];
m37_42 -> m37_43  [key=0, style=solid, color=red];
m37_42 -> m37_44  [key=2, style=dotted, color=red];
m37_42 -> m37_40  [key=2, style=dotted, color=red];
m37_42 -> m37_42  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m37_43 -> m37_41  [key=0, style=bold, color=blue];
m37_0 -> m37_1  [key=0, style=solid, color=red];
m37_0 -> m37_2  [key=1, style=dashed, color=red, label="System.TimeZoneInfo"];
m37_1 -> m37_2  [key=0, style=solid, color=red];
m37_1 -> m37_4  [key=2, style=dotted, color=red];
m37_1 -> m37_168  [key=1, style=dashed, color=red, label="QuantConnect.Time.DateTimeWithZone"];
m37_2 -> m37_3  [key=0, style=solid, color=red];
m37_2 -> m37_168  [key=1, style=dashed, color=red, label="QuantConnect.Time.DateTimeWithZone"];
m37_3 -> m37_0  [key=0, style=bold, color=blue];
m37_36 -> m37_37  [key=0, style=solid, color=red];
m37_37 -> m37_38  [key=0, style=solid, color=red];
m37_37 -> m37_39  [key=2, style=dotted, color=red];
m37_37 -> m37_40  [key=2, style=dotted, color=red];
m37_37 -> m37_37  [key=1, style=dashed, color=red, label="System.TimeSpan"];
m37_38 -> m37_36  [key=0, style=bold, color=blue];
m37_45 -> m37_46  [key=0, style=solid, color=red];
m37_46 -> m37_47  [key=0, style=solid, color=red];
m37_47 -> m37_45  [key=0, style=bold, color=blue];
m37_5 -> m37_6  [key=0, style=solid, color=red];
m37_5 -> m37_7  [key=1, style=dashed, color=red, label=double];
m37_5 -> m37_9  [key=1, style=dashed, color=red, label=double];
m37_6 -> m37_7  [key=0, style=solid, color=red];
m37_7 -> m37_8  [key=0, style=solid, color=red];
m37_7 -> m37_11  [key=0, style=solid, color=red];
m37_7 -> m37_13  [key=2, style=dotted, color=red];
m37_9 -> m37_10  [key=0, style=solid, color=red];
m37_9 -> m37_14  [key=2, style=dotted, color=red];
m37_8 -> m37_9  [key=0, style=solid, color=red];
m37_11 -> m37_12  [key=0, style=solid, color=red];
m37_10 -> m37_11  [key=0, style=solid, color=red];
m37_12 -> m37_5  [key=0, style=bold, color=blue];
m37_51 -> m37_52  [key=0, style=solid, color=red];
m37_51 -> m37_53  [key=1, style=dashed, color=red, label=string];
m37_51 -> m37_55  [key=1, style=dashed, color=red, label=string];
m37_51 -> m37_57  [key=1, style=dashed, color=red, label=string];
m37_51 -> m37_59  [key=1, style=dashed, color=red, label=string];
m37_51 -> m37_61  [key=1, style=dashed, color=red, label=string];
m37_52 -> m37_53  [key=0, style=solid, color=red];
m37_53 -> m37_54  [key=0, style=solid, color=red];
m37_53 -> m37_55  [key=0, style=solid, color=red];
m37_53 -> m37_67  [key=2, style=dotted, color=red];
m37_55 -> m37_56  [key=0, style=solid, color=red];
m37_55 -> m37_57  [key=0, style=solid, color=red];
m37_55 -> m37_67  [key=2, style=dotted, color=red];
m37_57 -> m37_58  [key=0, style=solid, color=red];
m37_57 -> m37_59  [key=0, style=solid, color=red];
m37_57 -> m37_68  [key=2, style=dotted, color=red];
m37_57 -> m37_67  [key=2, style=dotted, color=red];
m37_59 -> m37_60  [key=0, style=solid, color=red];
m37_59 -> m37_61  [key=0, style=solid, color=red];
m37_59 -> m37_67  [key=2, style=dotted, color=red];
m37_61 -> m37_62  [key=0, style=solid, color=red];
m37_61 -> m37_63  [key=0, style=solid, color=red];
m37_61 -> m37_65  [key=0, style=solid, color=red];
m37_61 -> m37_69  [key=2, style=dotted, color=red];
m37_54 -> m37_66  [key=0, style=solid, color=red];
m37_56 -> m37_66  [key=0, style=solid, color=red];
m37_58 -> m37_66  [key=0, style=solid, color=red];
m37_60 -> m37_66  [key=0, style=solid, color=red];
m37_62 -> m37_66  [key=0, style=solid, color=red];
m37_63 -> m37_64  [key=0, style=solid, color=red];
m37_65 -> m37_66  [key=0, style=solid, color=red];
m37_64 -> m37_65  [key=0, style=solid, color=red];
m37_64 -> m37_14  [key=2, style=dotted, color=red];
m37_66 -> m37_51  [key=0, style=bold, color=blue];
m37_33 -> m37_34  [key=0, style=solid, color=red];
m37_34 -> m37_35  [key=0, style=solid, color=red];
m37_34 -> m37_24  [key=2, style=dotted, color=red];
m37_35 -> m37_33  [key=0, style=bold, color=blue];
m37_77 -> m37_78  [key=0, style=solid, color=red];
m37_77 -> m37_81  [key=0, style=bold, color=red];
m37_77 -> m37_79  [key=1, style=dashed, color=red, label="System.DateTime"];
m37_77 -> m37_80  [key=1, style=dashed, color=red, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>"];
m37_78 -> m37_79  [key=0, style=solid, color=red];
m37_78 -> m37_80  [key=1, style=dashed, color=red, label=day];
m37_78 -> m37_81  [key=1, style=dashed, color=red, label=day];
m37_78 -> m37_82  [key=1, style=dashed, color=red, label=day];
m37_81 -> m37_82  [key=0, style=solid, color=red];
m37_79 -> m37_80  [key=0, style=solid, color=red];
m37_79 -> m37_83  [key=0, style=solid, color=red];
m37_80 -> m37_81  [key=0, style=solid, color=red];
m37_80 -> m37_82  [key=0, style=solid, color=red];
m37_80 -> m37_84  [key=2, style=dotted, color=red];
m37_82 -> m37_79  [key=0, style=solid, color=red];
m37_82 -> m37_76  [key=2, style=dotted, color=red];
m37_82 -> m37_82  [key=1, style=dashed, color=red, label=day];
m37_83 -> m37_77  [key=0, style=bold, color=blue];
m37_119 -> m37_120  [key=0, style=solid];
m37_119 -> m37_121  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>"];
m37_119 -> m37_122  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m37_119 -> m37_123  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>"];
m37_120 -> m37_121  [key=0, style=solid];
m37_120 -> m37_124  [key=1, style=dashed, color=darkseagreen4, label=count];
m37_120 -> m37_127  [key=1, style=dashed, color=darkseagreen4, label=count];
m37_121 -> m37_122  [key=0, style=solid];
m37_121 -> m37_129  [key=2, style=dotted];
m37_122 -> m37_123  [key=0, style=solid];
m37_122 -> m37_125  [key=0, style=solid];
m37_122 -> m37_127  [key=0, style=solid];
m37_122 -> m37_70  [key=2, style=dotted];
m37_123 -> m37_124  [key=0, style=solid];
m37_123 -> m37_122  [key=0, style=solid];
m37_123 -> m37_84  [key=2, style=dotted];
m37_124 -> m37_122  [key=0, style=solid];
m37_124 -> m37_124  [key=1, style=dashed, color=darkseagreen4, label=count];
m37_124 -> m37_127  [key=1, style=dashed, color=darkseagreen4, label=count];
m37_127 -> m37_128  [key=0, style=solid];
m37_125 -> m37_126  [key=0, style=solid];
m37_126 -> m37_127  [key=0, style=solid];
m37_126 -> m37_14  [key=2, style=dotted];
m37_128 -> m37_119  [key=0, style=bold, color=blue];
m37_163 -> m37_164  [key=0, style=solid];
m37_163 -> m37_166  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_164 -> m37_165  [key=0, style=solid];
m37_164 -> m37_166  [key=0, style=solid];
m37_166 -> m37_167  [key=0, style=solid];
m37_166 -> m37_166  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_165 -> m37_167  [key=0, style=solid];
m37_167 -> m37_163  [key=0, style=bold, color=blue];
m37_157 -> m37_158  [key=0, style=solid];
m37_157 -> m37_159  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m37_157 -> m37_160  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m37_157 -> m37_161  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_158 -> m37_159  [key=0, style=solid];
m37_158 -> m37_160  [key=0, style=solid];
m37_159 -> m37_162  [key=0, style=solid];
m37_160 -> m37_161  [key=0, style=solid];
m37_161 -> m37_162  [key=0, style=solid];
m37_161 -> m37_161  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_162 -> m37_157  [key=0, style=bold, color=blue];
m37_70 -> m37_71  [key=0, style=solid, color=red];
m37_70 -> m37_73  [key=0, style=bold, color=red];
m37_70 -> m37_72  [key=1, style=dashed, color=red, label="System.DateTime"];
m37_71 -> m37_72  [key=0, style=solid, color=red];
m37_71 -> m37_73  [key=1, style=dashed, color=red, label=day];
m37_71 -> m37_74  [key=1, style=dashed, color=red, label=day];
m37_73 -> m37_74  [key=0, style=solid, color=red];
m37_72 -> m37_73  [key=0, style=solid, color=red];
m37_72 -> m37_75  [key=0, style=solid, color=red];
m37_74 -> m37_72  [key=0, style=solid, color=red];
m37_74 -> m37_76  [key=2, style=dotted, color=red];
m37_74 -> m37_74  [key=1, style=dashed, color=red, label=day];
m37_75 -> m37_70  [key=0, style=bold, color=blue];
m37_24 -> m37_25  [key=0, style=solid, color=red];
m37_24 -> m37_26  [key=1, style=dashed, color=red, label="System.DateTime"];
m37_24 -> m37_28  [key=1, style=dashed, color=red, label="System.DateTime"];
m37_25 -> m37_26  [key=0, style=solid, color=red];
m37_26 -> m37_27  [key=0, style=solid, color=red];
m37_26 -> m37_29  [key=0, style=solid, color=red];
m37_26 -> m37_31  [key=2, style=dotted, color=red];
m37_28 -> m37_29  [key=0, style=solid, color=red];
m37_28 -> m37_32  [key=2, style=dotted, color=red];
m37_28 -> m37_14  [key=2, style=dotted, color=red];
m37_27 -> m37_28  [key=0, style=solid, color=red];
m37_29 -> m37_30  [key=0, style=solid, color=red];
m37_30 -> m37_24  [key=0, style=bold, color=blue];
m37_48 -> m37_49  [key=0, style=solid, color=red];
m37_49 -> m37_50  [key=0, style=solid, color=red];
m37_50 -> m37_48  [key=0, style=bold, color=blue];
m37_84 -> m37_111  [key=0, style=solid];
m37_84 -> m37_112  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m37_111 -> m37_112  [key=0, style=solid];
m37_111 -> m37_114  [key=0, style=solid];
m37_111 -> m37_116  [key=0, style=solid];
m37_112 -> m37_113  [key=0, style=solid];
m37_112 -> m37_111  [key=0, style=solid];
m37_112 -> m37_76  [key=2, style=dotted];
m37_112 -> m37_118  [key=2, style=dotted];
m37_114 -> m37_115  [key=0, style=solid];
m37_116 -> m37_117  [key=0, style=solid];
m37_113 -> m37_117  [key=0, style=solid];
m37_115 -> m37_116  [key=0, style=solid];
m37_115 -> m37_14  [key=2, style=dotted];
m37_117 -> m37_84  [key=0, style=bold, color=blue];
m37_85 -> m37_86  [key=0, style=solid, color=red];
m37_86 -> m37_87  [key=0, style=solid, color=red];
m37_86 -> m37_88  [key=2, style=dotted, color=red];
m37_87 -> m37_85  [key=0, style=bold, color=blue];
m37_130 -> m37_131  [key=0, style=solid];
m37_130 -> m37_132  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_130 -> m37_133  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m37_130 -> m37_135  [key=1, style=dashed, color=darkseagreen4, label=int];
m37_130 -> m37_137  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m37_130 -> m37_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityExchangeHours"];
m37_131 -> m37_132  [key=0, style=solid];
m37_131 -> m37_133  [key=0, style=solid];
m37_132 -> m37_141  [key=0, style=solid];
m37_132 -> m37_142  [key=2, style=dotted];
m37_132 -> m37_143  [key=2, style=dotted];
m37_133 -> m37_134  [key=0, style=solid];
m37_133 -> m37_144  [key=2, style=dotted];
m37_133 -> m37_136  [key=1, style=dashed, color=darkseagreen4, label=current];
m37_133 -> m37_137  [key=1, style=dashed, color=darkseagreen4, label=current];
m37_133 -> m37_140  [key=1, style=dashed, color=darkseagreen4, label=current];
m37_135 -> m37_136  [key=0, style=solid];
m37_135 -> m37_140  [key=0, style=solid];
m37_137 -> m37_138  [key=0, style=solid];
m37_137 -> m37_137  [key=1, style=dashed, color=darkseagreen4, label=current];
m37_137 -> m37_140  [key=1, style=dashed, color=darkseagreen4, label=current];
m37_138 -> m37_139  [key=0, style=solid];
m37_138 -> m37_135  [key=0, style=solid];
m37_138 -> n206  [key=2, style=dotted];
m37_134 -> m37_135  [key=0, style=solid];
m37_134 -> m37_139  [key=1, style=dashed, color=darkseagreen4, label=i];
m37_136 -> m37_137  [key=0, style=solid];
m37_136 -> m37_138  [key=1, style=dashed, color=darkseagreen4, label=previous];
m37_140 -> m37_141  [key=0, style=solid];
m37_139 -> m37_135  [key=0, style=solid];
m37_139 -> m37_139  [key=1, style=dashed, color=darkseagreen4, label=i];
m37_141 -> m37_130  [key=0, style=bold, color=blue];
m37_96 -> m37_97  [key=0, style=solid, color=red];
m37_96 -> m37_106  [key=0, style=bold, color=red];
m37_96 -> m37_98  [key=1, style=dashed, color=red, label="System.DateTime"];
m37_96 -> m37_100  [key=1, style=dashed, color=red, label="QuantConnect.Securities.SecurityExchangeHours"];
m37_96 -> m37_102  [key=1, style=dashed, color=red, label="QuantConnect.Securities.SecurityExchangeHours"];
m37_96 -> m37_103  [key=1, style=dashed, color=red, label="QuantConnect.Securities.SecurityExchangeHours"];
m37_96 -> m37_104  [key=1, style=dashed, color=red, label="QuantConnect.Securities.SecurityExchangeHours"];
m37_96 -> m37_105  [key=1, style=dashed, color=red, label="QuantConnect.Securities.SecurityExchangeHours"];
m37_96 -> m37_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityExchangeHours"];
m37_97 -> m37_98  [key=0, style=solid, color=red];
m37_97 -> m37_99  [key=1, style=dashed, color=red, label=currentExchangeTime];
m37_97 -> m37_100  [key=1, style=dashed, color=red, label=currentExchangeTime];
m37_97 -> m37_105  [key=1, style=dashed, color=red, label=currentExchangeTime];
m37_106 -> m37_107  [key=0, style=solid, color=red];
m37_98 -> m37_99  [key=0, style=solid, color=red];
m37_98 -> m37_76  [key=2, style=dotted, color=red];
m37_98 -> m37_98  [key=1, style=dashed, color=red, label="System.DateTime"];
m37_98 -> m37_102  [key=1, style=dashed, color=red, label="System.DateTime"];
m37_98 -> m37_103  [key=1, style=dashed, color=red, label="System.DateTime"];
m37_100 -> m37_101  [key=0, style=solid, color=red];
m37_100 -> m37_109  [key=2, style=dotted, color=red];
m37_100 -> m37_106  [key=1, style=dashed, color=red, label=currentInTimeZone];
m37_102 -> m37_103  [key=0, style=solid, color=red];
m37_102 -> m37_104  [key=0, style=solid, color=red];
m37_102 -> m37_109  [key=2, style=dotted, color=red];
m37_103 -> m37_104  [key=0, style=solid, color=red];
m37_103 -> m37_109  [key=2, style=dotted, color=red];
m37_103 -> m37_107  [key=1, style=dashed, color=red, label=currentInTimeZoneEod];
m37_104 -> m37_105  [key=0, style=solid, color=red];
m37_104 -> m37_109  [key=2, style=dotted, color=red];
m37_105 -> m37_106  [key=0, style=solid, color=red];
m37_105 -> m37_107  [key=0, style=solid, color=red];
m37_105 -> n206  [key=2, style=dotted, color=red];
m37_107 -> m37_99  [key=0, style=solid, color=red];
m37_107 -> m37_109  [key=2, style=dotted];
m37_99 -> m37_100  [key=0, style=solid, color=red];
m37_99 -> m37_108  [key=0, style=solid, color=red];
m37_101 -> m37_102  [key=0, style=solid, color=red];
m37_101 -> m37_76  [key=2, style=dotted, color=red];
m37_101 -> m37_104  [key=1, style=dashed, color=red, label=currentInTimeZoneEod];
m37_101 -> m37_107  [key=1, style=dashed, color=red, label=currentInTimeZoneEod];
m37_108 -> m37_96  [key=0, style=bold, color=blue];
m38_47 -> m38_48  [key=0, style=solid];
m38_50 -> m38_22  [key=2, style=dotted];
m38_50 -> m38_51  [key=0, style=solid];
m38_49 -> m38_50  [key=0, style=solid];
m38_49 -> m38_52  [key=2, style=dotted];
m38_48 -> m38_49  [key=0, style=solid];
m38_51 -> m38_47  [key=0, style=bold, color=blue];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_3  [key=2, style=dotted];
m38_1 -> m38_4  [key=2, style=dotted];
m38_1 -> m38_2  [key=0, style=solid];
m38_2 -> m38_0  [key=0, style=bold, color=blue];
m38_142 -> m38_143  [key=0, style=solid];
m38_145 -> m38_22  [key=2, style=dotted];
m38_145 -> m38_146  [key=0, style=solid];
m38_144 -> m38_145  [key=0, style=solid];
m38_144 -> m38_136  [key=2, style=dotted];
m38_143 -> m38_144  [key=0, style=solid];
m38_146 -> m38_142  [key=0, style=bold, color=blue];
m38_10 -> m38_11  [key=0, style=solid];
m38_11 -> m38_3  [key=2, style=dotted];
m38_11 -> m38_4  [key=2, style=dotted];
m38_11 -> m38_12  [key=0, style=solid];
m38_12 -> m38_3  [key=2, style=dotted];
m38_12 -> m38_4  [key=2, style=dotted];
m38_12 -> m38_13  [key=0, style=solid];
m38_13 -> m38_10  [key=0, style=bold, color=blue];
m38_85 -> m38_86  [key=0, style=solid];
m38_88 -> m38_22  [key=2, style=dotted];
m38_88 -> m38_89  [key=0, style=solid];
m38_87 -> m38_64  [key=2, style=dotted];
m38_87 -> m38_88  [key=0, style=solid];
m38_86 -> m38_33  [key=3, color=darkorchid, style=bold, label="Property variable QuantConnect.Indicators.Momentum ThreeMonthPerformance"];
m38_86 -> m38_87  [key=0, style=solid];
m38_89 -> m38_85  [key=0, style=bold, color=blue];
m38_121 -> m38_122  [key=0, style=solid];
m38_127 -> m38_22  [key=2, style=dotted];
m38_127 -> m38_128  [key=0, style=solid];
m38_128 -> m38_22  [key=2, style=dotted];
m38_128 -> m38_129  [key=0, style=solid];
m38_125 -> m38_4  [key=2, style=dotted];
m38_125 -> m38_126  [key=0, style=solid];
m38_125 -> m38_130  [key=2, style=dotted];
m38_126 -> m38_127  [key=0, style=solid];
m38_126 -> m38_128  [key=1, style=dashed, color=darkseagreen4, label=list];
m38_122 -> m38_125  [key=1, style=dashed, color=darkseagreen4, label=key];
m38_122 -> m38_126  [key=1, style=dashed, color=darkseagreen4, label=key];
m38_122 -> m38_123  [key=0, style=solid];
m38_122 -> m38_124  [key=1, style=dashed, color=darkseagreen4, label=key];
m38_123 -> m38_125  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m38_123 -> m38_126  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m38_123 -> m38_124  [key=0, style=solid];
m38_123 -> m38_108  [key=2, style=dotted];
m38_124 -> m38_125  [key=0, style=solid];
m38_124 -> m38_120  [key=2, style=dotted];
m38_129 -> m38_121  [key=0, style=bold, color=blue];
m38_95 -> m38_96  [key=0, style=solid];
m38_98 -> m38_22  [key=2, style=dotted];
m38_98 -> m38_99  [key=0, style=solid];
m38_98 -> n300  [key=2, style=dotted];
m38_97 -> m38_98  [key=0, style=solid];
m38_97 -> m38_100  [key=2, style=dotted];
m38_96 -> m38_97  [key=0, style=solid];
m38_99 -> m38_95  [key=0, style=bold, color=blue];
m38_70 -> m38_71  [key=0, style=solid];
m38_72 -> m38_73  [key=0, style=solid, color=green];
m38_72 -> m38_64  [key=2, style=dotted, color=green];
m38_71 -> m38_72  [key=0, style=solid, color=green];
m38_73 -> m38_22  [key=2, style=dotted];
m38_73 -> m38_74  [key=0, style=solid];
m38_74 -> m38_70  [key=0, style=bold, color=blue];
m38_102 -> m38_103  [key=0, style=solid];
m38_106 -> m38_22  [key=2, style=dotted];
m38_106 -> m38_107  [key=0, style=solid];
m38_103 -> m38_106  [key=1, style=dashed, color=darkseagreen4, label=expected];
m38_103 -> m38_104  [key=0, style=solid];
m38_103 -> m38_108  [key=2, style=dotted];
m38_105 -> m38_106  [key=0, style=solid];
m38_105 -> m38_110  [key=2, style=dotted];
m38_104 -> m38_105  [key=0, style=solid];
m38_104 -> m38_109  [key=2, style=dotted];
m38_107 -> m38_102  [key=0, style=bold, color=blue];
m38_147 -> m38_149  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_147 -> m38_148  [key=0, style=solid];
m38_149 -> m38_22  [key=2, style=dotted];
m38_149 -> m38_150  [key=0, style=solid];
m38_149 -> m38_152  [key=2, style=dotted];
m38_148 -> m38_149  [key=0, style=solid];
m38_148 -> m38_151  [key=2, style=dotted];
m38_150 -> m38_147  [key=0, style=bold, color=blue];
m38_111 -> m38_112  [key=0, style=solid];
m38_116 -> m38_22  [key=2, style=dotted];
m38_116 -> m38_117  [key=0, style=solid];
m38_117 -> m38_22  [key=2, style=dotted];
m38_117 -> m38_118  [key=0, style=solid];
m38_113 -> m38_116  [key=1, style=dashed, color=darkseagreen4, label=list];
m38_113 -> m38_117  [key=1, style=dashed, color=darkseagreen4, label=list];
m38_113 -> m38_114  [key=0, style=solid];
m38_113 -> m38_119  [key=2, style=dotted];
m38_115 -> m38_116  [key=0, style=solid];
m38_115 -> m38_120  [key=2, style=dotted];
m38_112 -> m38_113  [key=0, style=solid];
m38_112 -> m38_115  [key=1, style=dashed, color=darkseagreen4, label=key];
m38_112 -> m38_114  [key=1, style=dashed, color=darkseagreen4, label=key];
m38_114 -> m38_115  [key=0, style=solid];
m38_114 -> m38_108  [key=2, style=dotted];
m38_118 -> m38_111  [key=0, style=bold, color=blue];
m38_30 -> m38_31  [key=0, style=solid];
m38_35 -> m38_36  [key=0, style=solid, color=green];
m38_35 -> m38_22  [key=2, style=dotted, color=green];
m38_32 -> m38_35  [key=1, style=dashed, color=green, label=expected];
m38_32 -> m38_33  [key=0, style=solid];
m38_32 -> m38_19  [key=2, style=dotted];
m38_34 -> m38_35  [key=0, style=solid, color=green];
m38_34 -> m38_40  [key=2, style=dotted];
m38_31 -> m38_32  [key=0, style=solid];
m38_31 -> m38_34  [key=1, style=dashed, color=darkseagreen4, label=time];
m38_31 -> m38_37  [key=2, style=dotted];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_38  [key=2, style=dotted];
m38_33 -> m38_39  [key=2, style=dotted];
m38_36 -> m38_30  [key=0, style=bold, color=blue];
m38_4 -> m38_5  [key=0, style=solid];
m38_59 -> m38_60  [key=0, style=solid];
m38_62 -> m38_63  [key=0, style=solid, color=green];
m38_62 -> m38_22  [key=2, style=dotted, color=green];
m38_61 -> m38_62  [key=0, style=solid, color=green];
m38_61 -> m38_64  [key=2, style=dotted];
m38_60 -> m38_61  [key=0, style=solid];
m38_63 -> m38_59  [key=0, style=bold, color=blue];
m38_23 -> m38_24  [key=0, style=solid];
m38_27 -> m38_22  [key=2, style=dotted];
m38_27 -> m38_28  [key=0, style=solid];
m38_25 -> m38_27  [key=1, style=dashed, color=darkseagreen4, label=expected];
m38_25 -> m38_26  [key=0, style=solid];
m38_26 -> m38_27  [key=0, style=solid];
m38_26 -> m38_29  [key=2, style=dotted];
m38_24 -> m38_25  [key=0, style=solid];
m38_24 -> m38_26  [key=1, style=dashed, color=darkseagreen4, label=type];
m38_28 -> m38_23  [key=0, style=bold, color=blue];
m38_137 -> m38_138  [key=0, style=solid];
m38_140 -> m38_22  [key=2, style=dotted];
m38_140 -> m38_141  [key=0, style=solid];
m38_139 -> m38_140  [key=0, style=solid];
m38_139 -> m38_136  [key=2, style=dotted];
m38_138 -> m38_139  [key=0, style=solid];
m38_141 -> m38_137  [key=0, style=bold, color=blue];
m38_5 -> m38_4  [key=0, style=bold, color=blue];
m38_5 -> m38_6  [key=0, style=solid];
m38_5 -> m38_5  [key=3, color=darkorchid, style=bold, label="Field variable bool _first"];
m38_80 -> m38_81  [key=0, style=solid];
m38_83 -> m38_22  [key=2, style=dotted];
m38_83 -> m38_84  [key=0, style=solid];
m38_82 -> m38_64  [key=2, style=dotted];
m38_82 -> m38_83  [key=0, style=solid];
m38_81 -> m38_82  [key=0, style=solid];
m38_84 -> m38_80  [key=0, style=bold, color=blue];
m38_131 -> m38_132  [key=0, style=solid];
m38_134 -> m38_22  [key=2, style=dotted];
m38_134 -> m38_135  [key=0, style=solid];
m38_133 -> m38_134  [key=0, style=solid];
m38_133 -> m38_136  [key=2, style=dotted];
m38_132 -> m38_133  [key=0, style=solid];
m38_135 -> m38_131  [key=0, style=bold, color=blue];
m38_14 -> m38_15  [key=0, style=solid];
m38_17 -> m38_22  [key=2, style=dotted];
m38_17 -> m38_18  [key=0, style=solid];
m38_15 -> m38_19  [key=2, style=dotted];
m38_15 -> m38_17  [key=1, style=dashed, color=darkseagreen4, label=date];
m38_15 -> m38_16  [key=0, style=solid];
m38_16 -> m38_17  [key=0, style=solid];
m38_16 -> m38_20  [key=2, style=dotted];
m38_16 -> m38_21  [key=2, style=dotted];
m38_18 -> m38_14  [key=0, style=bold, color=blue];
m38_41 -> m38_42  [key=0, style=solid];
m38_45 -> m38_40  [key=2, style=dotted];
m38_45 -> m38_46  [key=0, style=solid];
m38_42 -> m38_37  [key=2, style=dotted];
m38_42 -> m38_45  [key=1, style=dashed, color=darkseagreen4, label=time];
m38_42 -> m38_43  [key=0, style=solid];
m38_44 -> m38_38  [key=2, style=dotted];
m38_44 -> m38_39  [key=2, style=dotted];
m38_44 -> m38_45  [key=0, style=solid];
m38_43 -> m38_44  [key=0, style=solid];
m38_46 -> m38_41  [key=0, style=bold, color=blue];
m38_65 -> m38_66  [key=0, style=solid];
m38_68 -> m38_22  [key=2, style=dotted];
m38_68 -> m38_69  [key=0, style=solid];
m38_67 -> m38_64  [key=2, style=dotted];
m38_67 -> m38_68  [key=0, style=solid];
m38_66 -> m38_67  [key=0, style=solid];
m38_69 -> m38_65  [key=0, style=bold, color=blue];
m38_7 -> m38_8  [key=0, style=solid, color=green];
m38_7 -> m38_3  [key=2, style=dotted, color=green];
m38_7 -> m38_9  [key=2, style=dotted, color=green];
m38_6 -> m38_7  [key=0, style=solid, color=green];
m38_6 -> m38_3  [key=2, style=dotted];
m38_6 -> m38_4  [key=2, style=dotted];
m38_8 -> m38_5  [key=0, style=bold, color=blue];
m38_75 -> m38_76  [key=0, style=solid];
m38_78 -> m38_22  [key=2, style=dotted];
m38_78 -> m38_79  [key=0, style=solid];
m38_77 -> m38_64  [key=2, style=dotted];
m38_77 -> m38_78  [key=0, style=solid];
m38_76 -> m38_77  [key=0, style=solid];
m38_79 -> m38_75  [key=0, style=bold, color=blue];
m38_90 -> m38_91  [key=0, style=solid];
m38_93 -> m38_22  [key=2, style=dotted];
m38_93 -> m38_94  [key=0, style=solid];
m38_92 -> m38_64  [key=2, style=dotted];
m38_92 -> m38_93  [key=0, style=solid];
m38_91 -> m38_92  [key=0, style=solid];
m38_91 -> m38_91  [key=3, color=darkorchid, style=bold, label="Local variable decimal weight2"];
m38_94 -> m38_90  [key=0, style=bold, color=blue];
m38_53 -> m38_54  [key=0, style=solid, color=green];
m38_54 -> m38_55  [key=0, style=solid, color=green];
m38_55 -> m38_56  [key=0, style=solid];
m38_55 -> m38_58  [key=2, style=dotted];
m38_56 -> m38_22  [key=2, style=dotted];
m38_56 -> m38_57  [key=0, style=solid];
m38_57 -> m38_53  [key=0, style=bold, color=blue];
m39_41 -> m39_42  [key=0, style=solid];
m39_20 -> m39_21  [key=0, style=solid];
m39_21 -> m39_22  [key=0, style=solid];
m39_21 -> m39_15  [key=2, style=dotted];
m39_21 -> m39_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m39_22 -> m39_20  [key=0, style=bold, color=blue];
m39_23 -> m39_24  [key=0, style=solid];
m39_24 -> m39_25  [key=0, style=solid];
m39_24 -> n276  [key=2, style=dotted];
m39_24 -> m39_17  [key=2, style=dotted];
m39_24 -> m39_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.OptionChain>"];
m39_24 -> m39_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m39_25 -> m39_23  [key=0, style=bold, color=blue];
m39_27 -> m39_28  [key=0, style=solid];
m39_28 -> m39_29  [key=0, style=solid];
m39_29 -> m39_27  [key=0, style=bold, color=blue];
m39_35 -> m39_36  [key=0, style=solid];
m39_36 -> m39_37  [key=0, style=solid];
m39_36 -> m39_15  [key=2, style=dotted];
m39_36 -> m39_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m39_37 -> m39_35  [key=0, style=bold, color=blue];
m39_38 -> m39_39  [key=0, style=solid];
m39_39 -> m39_40  [key=0, style=solid];
m39_39 -> n276  [key=2, style=dotted];
m39_39 -> m39_17  [key=2, style=dotted];
m39_39 -> m39_39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Data.Market.OptionChain>"];
m39_39 -> m39_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m39_40 -> m39_38  [key=0, style=bold, color=blue];
m39_42 -> m39_43  [key=0, style=solid];
m39_43 -> m39_41  [key=0, style=bold, color=blue];
m39_0 -> m39_1  [key=0, style=solid, color=red];
m39_1 -> m39_2  [key=0, style=solid, color=red];
m39_2 -> m39_3  [key=0, style=solid];
m39_2 -> m39_5  [key=2, style=dotted];
m39_3 -> m39_4  [key=0, style=solid];
m39_3 -> m39_6  [key=2, style=dotted];
m39_4 -> m39_0  [key=0, style=bold, color=blue];
m39_30 -> m39_31  [key=0, style=solid];
m39_31 -> m39_32  [key=0, style=solid];
m39_31 -> m39_15  [key=2, style=dotted];
m39_31 -> m39_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m39_31 -> m39_33  [key=1, style=dashed, color=darkseagreen4, label=expiry];
m39_32 -> m39_33  [key=0, style=solid];
m39_32 -> m39_16  [key=2, style=dotted];
m39_33 -> m39_34  [key=0, style=solid];
m39_33 -> m39_17  [key=2, style=dotted];
m39_33 -> m39_18  [key=2, style=dotted];
m39_33 -> m39_19  [key=2, style=dotted];
m39_34 -> m39_30  [key=0, style=bold, color=blue];
m39_44 -> m39_45  [key=0, style=solid];
m39_45 -> m39_46  [key=0, style=solid];
m39_45 -> m39_47  [key=2, style=dotted];
m39_46 -> m39_44  [key=0, style=bold, color=blue];
m39_10 -> m39_11  [key=0, style=solid];
m39_11 -> m39_12  [key=0, style=solid];
m39_11 -> m39_15  [key=2, style=dotted];
m39_11 -> m39_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m39_11 -> m39_13  [key=1, style=dashed, color=darkseagreen4, label=strikes];
m39_12 -> m39_13  [key=0, style=solid];
m39_12 -> m39_16  [key=2, style=dotted];
m39_13 -> m39_14  [key=0, style=solid];
m39_13 -> m39_17  [key=2, style=dotted];
m39_13 -> m39_18  [key=2, style=dotted];
m39_13 -> m39_19  [key=2, style=dotted];
m39_14 -> m39_10  [key=0, style=bold, color=blue];
m39_7 -> m39_8  [key=0, style=solid];
m39_8 -> m39_9  [key=0, style=solid];
m39_9 -> m39_7  [key=0, style=bold, color=blue];
m39_48 -> m39_1  [key=1, style=dashed, color=red, label="QuantConnect.Jupyter.OptionHistory"];
m39_48 -> m39_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Jupyter.OptionHistory"];
m39_48 -> m39_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Jupyter.OptionHistory"];
m39_48 -> m39_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Jupyter.OptionHistory"];
m39_48 -> m39_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Jupyter.OptionHistory"];
m39_48 -> m39_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Jupyter.OptionHistory"];
m39_48 -> m39_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Jupyter.OptionHistory"];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_0  [key=0, style=bold, color=blue];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_9  [key=2, style=dotted];
m42_2 -> m42_3  [key=0, style=solid];
m42_2 -> m42_10  [key=2, style=dotted];
m42_3 -> m42_2  [key=0, style=bold, color=blue];
m42_3 -> m42_4  [key=0, style=solid, color=green];
m42_3 -> m42_11  [key=2, style=dotted];
m42_4 -> m42_5  [key=0, style=solid, color=green];
m42_4 -> m42_12  [key=2, style=dotted, color=green];
m42_5 -> m42_6  [key=0, style=solid, color=green];
m42_5 -> m42_13  [key=2, style=dotted, color=green];
m42_6 -> m42_7  [key=0, style=solid, color=green];
m42_6 -> m42_14  [key=2, style=dotted, color=green];
m42_7 -> m42_8  [key=0, style=solid, color=green];
m42_7 -> m42_15  [key=2, style=dotted, color=green];
m42_8 -> m42_0  [key=0, style=bold, color=blue];
m42_16 -> m42_17  [key=0, style=solid, color=green];
m42_16 -> m42_21  [key=1, style=dashed, color=green, label="QuantConnect.Data.Market.TradeBars"];
m42_17 -> m42_18  [key=0, style=solid, color=green];
m42_17 -> m42_31  [key=0, style=solid, color=green];
m42_18 -> m42_19  [key=0, style=solid, color=green];
m42_18 -> m42_32  [key=2, style=dotted, color=green];
m42_18 -> m42_20  [key=1, style=dashed, color=green, label=signal];
m42_18 -> m42_24  [key=1, style=dashed, color=green, label=signal];
m42_21 -> m42_22  [key=0, style=solid, color=green];
m42_21 -> m42_33  [key=2, style=dotted, color=green];
m42_21 -> m42_23  [key=1, style=dashed, color=green, label=quantity];
m42_20 -> m42_21  [key=0, style=solid, color=green];
m42_20 -> m42_31  [key=0, style=solid];
m42_20 -> m42_28  [key=0, style=solid];
m42_22 -> m42_23  [key=0, style=solid, color=green];
m42_22 -> m42_34  [key=2, style=dotted, color=green];
m42_23 -> m42_31  [key=0, style=solid];
m42_23 -> m42_28  [key=0, style=solid];
m42_23 -> m42_35  [key=2, style=dotted];
m42_19 -> m42_20  [key=0, style=solid];
m42_19 -> m42_24  [key=0, style=solid];
m42_24 -> m42_25  [key=0, style=solid, color=green];
m42_24 -> m42_31  [key=0, style=solid];
m42_24 -> m42_28  [key=0, style=solid];
m42_25 -> m42_26  [key=0, style=solid, color=green];
m42_25 -> m42_33  [key=2, style=dotted, color=green];
m42_25 -> m42_27  [key=1, style=dashed, color=green, label=quantity];
m42_26 -> m42_27  [key=0, style=solid, color=green];
m42_26 -> m42_36  [key=2, style=dotted, color=green];
m42_27 -> m42_31  [key=0, style=solid];
m42_27 -> m42_28  [key=0, style=solid];
m42_27 -> m42_35  [key=2, style=dotted];
m42_30 -> m42_31  [key=0, style=solid, color=green];
m42_30 -> m42_35  [key=2, style=dotted, color=green];
m42_29 -> m42_30  [key=0, style=solid, color=green];
m42_29 -> m42_35  [key=2, style=dotted];
m42_28 -> m42_29  [key=0, style=solid];
m42_28 -> m42_28  [key=3, color=darkorchid, style=bold, label="Field variable decimal Open"];
m42_31 -> m42_16  [key=0, style=bold, color=blue];
m42_32 -> m42_82  [key=0, style=solid];
m42_32 -> m42_83  [key=1, style=dashed, color=darkseagreen4, label=float];
m42_82 -> m42_83  [key=0, style=solid];
m42_82 -> m42_87  [key=2, style=dotted];
m42_83 -> m42_84  [key=0, style=solid];
m42_83 -> m42_87  [key=2, style=dotted];
m42_85 -> m42_86  [key=0, style=solid];
m42_84 -> m42_85  [key=0, style=solid];
m42_84 -> m42_88  [key=2, style=dotted];
m42_86 -> m42_32  [key=0, style=bold, color=blue];
m42_15 -> m42_37  [key=0, style=solid, color=green];
m42_37 -> m42_38  [key=0, style=solid, color=green];
m42_37 -> m42_73  [key=2, style=dotted, color=green];
m42_37 -> m42_74  [key=2, style=dotted, color=green];
m42_37 -> m42_44  [key=1, style=dashed, color=green, label=momDown];
m42_38 -> m42_39  [key=0, style=solid, color=green];
m42_38 -> m42_73  [key=2, style=dotted, color=green];
m42_38 -> m42_74  [key=2, style=dotted, color=green];
m42_38 -> m42_45  [key=1, style=dashed, color=green, label=momNeutral];
m42_44 -> m42_45  [key=0, style=solid];
m42_44 -> m42_76  [key=2, style=dotted];
m42_39 -> m42_40  [key=0, style=solid, color=green];
m42_39 -> m42_73  [key=2, style=dotted, color=green];
m42_39 -> m42_74  [key=2, style=dotted, color=green];
m42_39 -> m42_46  [key=1, style=dashed, color=green, label=momUp];
m42_45 -> m42_46  [key=0, style=solid];
m42_45 -> m42_76  [key=2, style=dotted];
m42_40 -> m42_41  [key=0, style=solid, color=green];
m42_40 -> m42_73  [key=2, style=dotted, color=green];
m42_40 -> m42_74  [key=2, style=dotted, color=green];
m42_40 -> m42_48  [key=1, style=dashed, color=green, label=rsiLow];
m42_46 -> m42_47  [key=0, style=solid, color=green];
m42_46 -> m42_76  [key=2, style=dotted];
m42_41 -> m42_42  [key=0, style=solid, color=green];
m42_41 -> m42_73  [key=2, style=dotted, color=green];
m42_41 -> m42_74  [key=2, style=dotted, color=green];
m42_41 -> m42_49  [key=1, style=dashed, color=green, label=rsiMedium];
m42_48 -> m42_49  [key=0, style=solid];
m42_48 -> m42_76  [key=2, style=dotted];
m42_42 -> m42_43  [key=0, style=solid, color=green];
m42_42 -> m42_73  [key=2, style=dotted, color=green];
m42_42 -> m42_74  [key=2, style=dotted, color=green];
m42_42 -> m42_50  [key=1, style=dashed, color=green, label=rsiHigh];
m42_42 -> m42_28  [key=3, color=green, style=bold, label="Field variable decimal WeightedPrice"];
m42_49 -> m42_50  [key=0, style=solid];
m42_49 -> m42_76  [key=2, style=dotted];
m42_43 -> m42_44  [key=0, style=solid, color=green];
m42_43 -> m42_75  [key=2, style=dotted, color=green];
m42_43 -> m42_45  [key=1, style=dashed, color=green, label=lvMom];
m42_43 -> m42_46  [key=1, style=dashed, color=green, label=lvMom];
m42_43 -> m42_59  [key=1, style=dashed, color=green, label=lvMom];
m42_50 -> m42_51  [key=0, style=solid, color=green];
m42_50 -> m42_76  [key=2, style=dotted];
m42_59 -> m42_60  [key=0, style=solid];
m42_59 -> m42_78  [key=2, style=dotted];
m42_47 -> m42_48  [key=0, style=solid, color=green];
m42_47 -> m42_75  [key=2, style=dotted, color=green];
m42_47 -> m42_49  [key=1, style=dashed, color=green, label=lvRsi];
m42_47 -> m42_50  [key=1, style=dashed, color=green, label=lvRsi];
m42_47 -> m42_60  [key=1, style=dashed, color=green, label=lvRsi];
m42_60 -> m42_61  [key=0, style=solid];
m42_60 -> m42_78  [key=2, style=dotted];
m42_51 -> m42_51  [key=3, color=green, style=bold, label="Local variable string source"];
m42_51 -> m42_52  [key=0, style=solid, color=green];
m42_51 -> m42_73  [key=2, style=dotted, color=green];
m42_51 -> m42_74  [key=2, style=dotted, color=green];
m42_51 -> m42_55  [key=1, style=dashed, color=green, label=fsShort];
m42_52 -> m42_53  [key=0, style=solid, color=green];
m42_52 -> m42_73  [key=2, style=dotted, color=green];
m42_52 -> m42_74  [key=2, style=dotted, color=green];
m42_52 -> m42_56  [key=1, style=dashed, color=green, label=fsHold];
m42_55 -> m42_56  [key=0, style=solid];
m42_55 -> m42_76  [key=2, style=dotted];
m42_53 -> m42_54  [key=0, style=solid, color=green];
m42_53 -> m42_73  [key=2, style=dotted, color=green];
m42_53 -> m42_74  [key=2, style=dotted, color=green];
m42_53 -> m42_57  [key=1, style=dashed, color=green, label=fsLong];
m42_56 -> m42_57  [key=0, style=solid];
m42_56 -> m42_76  [key=2, style=dotted];
m42_54 -> m42_55  [key=0, style=solid, color=green];
m42_54 -> m42_75  [key=2, style=dotted, color=green];
m42_54 -> m42_56  [key=1, style=dashed, color=green, label=lvSignal];
m42_54 -> m42_57  [key=1, style=dashed, color=green, label=lvSignal];
m42_54 -> m42_61  [key=1, style=dashed, color=green, label=lvSignal];
m42_57 -> m42_58  [key=0, style=solid, color=green];
m42_57 -> m42_76  [key=2, style=dotted];
m42_61 -> m42_62  [key=0, style=solid];
m42_61 -> m42_78  [key=2, style=dotted];
m42_58 -> m42_59  [key=0, style=solid, color=green];
m42_58 -> m42_77  [key=2, style=dotted, color=green];
m42_58 -> m42_60  [key=1, style=dashed, color=green, label=fuzzyDB];
m42_58 -> m42_61  [key=1, style=dashed, color=green, label=fuzzyDB];
m42_58 -> m42_62  [key=1, style=dashed, color=green, label=fuzzyDB];
m42_62 -> m42_63  [key=0, style=solid];
m42_62 -> m42_79  [key=2, style=dotted];
m42_62 -> m42_80  [key=2, style=dotted];
m42_63 -> m42_64  [key=0, style=solid];
m42_63 -> m42_81  [key=2, style=dotted];
m42_71 -> m42_72  [key=0, style=solid];
m42_71 -> m42_81  [key=2, style=dotted];
m42_64 -> m42_65  [key=0, style=solid];
m42_64 -> m42_81  [key=2, style=dotted];
m42_65 -> m42_66  [key=0, style=solid];
m42_65 -> m42_81  [key=2, style=dotted];
m42_66 -> m42_67  [key=0, style=solid];
m42_66 -> m42_81  [key=2, style=dotted];
m42_66 -> m42_68  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Data.BaseData Reader"];
m42_67 -> m42_68  [key=0, style=solid];
m42_67 -> m42_81  [key=2, style=dotted];
m42_68 -> m42_69  [key=0, style=solid];
m42_68 -> m42_81  [key=2, style=dotted];
m42_69 -> m42_70  [key=0, style=solid];
m42_69 -> m42_81  [key=2, style=dotted];
m42_70 -> m42_71  [key=0, style=solid];
m42_70 -> m42_81  [key=2, style=dotted];
m42_72 -> m42_15  [key=0, style=bold, color=blue];
m42_89 -> m42_4  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_5  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_6  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_7  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_17  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_21  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_18  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_22  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_25  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_26  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_30  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_89 -> m42_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyInferenceAlgorithm"];
m42_90 -> m42_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_67  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m42_90 -> m42_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.FuzzyEngine"];
m43_20 -> m43_21  [key=0, style=solid, color=green];
m43_20 -> m43_69  [key=2, style=dotted];
m43_20 -> m43_23  [key=1, style=dashed, color=darkseagreen4, label=quandlHistory];
m43_21 -> m43_22  [key=0, style=solid, color=red];
m43_21 -> m43_13  [key=2, style=dotted, color=green];
m43_21 -> m43_14  [key=2, style=dotted, color=green];
m43_21 -> m43_68  [key=2, style=dotted];
m43_22 -> m43_20  [key=0, style=bold, color=blue];
m43_22 -> m43_23  [key=0, style=solid, color=red];
m43_22 -> m43_72  [key=2, style=dotted, color=red];
m43_14 -> m43_15  [key=0, style=solid];
m43_14 -> m43_69  [key=2, style=dotted];
m43_14 -> m43_16  [key=1, style=dashed, color=darkseagreen4, label=tradeBarHistory];
m43_17 -> m43_18  [key=0, style=solid];
m43_17 -> m43_16  [key=0, style=solid, color=red];
m43_17 -> m43_71  [key=2, style=dotted, color=red];
m43_18 -> m43_13  [key=2, style=dotted];
m43_18 -> m43_14  [key=2, style=dotted];
m43_18 -> m43_19  [key=0, style=solid];
m43_18 -> n301  [key=2, style=dotted];
m43_18 -> m43_67  [key=2, style=dotted];
m43_19 -> m43_17  [key=0, style=bold, color=blue];
m43_19 -> m43_20  [key=0, style=solid];
m43_19 -> m43_68  [key=2, style=dotted];
m43_13 -> m43_14  [key=0, style=solid];
m43_13 -> m43_68  [key=2, style=dotted];
m43_15 -> m43_16  [key=0, style=solid];
m43_15 -> m43_68  [key=2, style=dotted];
m43_16 -> m43_17  [key=0, style=solid, color=red];
m43_16 -> m43_18  [key=0, style=solid];
m43_0 -> m43_3  [key=1, style=dashed, color=green, label=string];
m43_0 -> m43_1  [key=0, style=solid];
m43_0 -> m43_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_3 -> m43_4  [key=0, style=solid, color=green];
m43_3 -> m43_13  [key=2, style=dotted, color=green];
m43_3 -> m43_14  [key=2, style=dotted, color=green];
m43_3 -> m43_61  [key=2, style=dotted];
m43_2 -> m43_3  [key=0, style=solid, color=green];
m43_2 -> m43_60  [key=2, style=dotted];
m43_4 -> m43_5  [key=0, style=solid, color=green];
m43_4 -> m43_62  [key=2, style=dotted];
m43_1 -> m43_4  [key=1, style=dashed, color=green, label=original];
m43_1 -> m43_2  [key=0, style=solid];
m43_1 -> m43_59  [key=2, style=dotted];
m43_5 -> m43_6  [key=0, style=solid];
m43_5 -> m43_63  [key=2, style=dotted];
m43_8 -> m43_9  [key=0, style=solid];
m43_8 -> m43_15  [key=2, style=dotted];
m43_8 -> n301  [key=2, style=dotted];
m43_8 -> m43_67  [key=2, style=dotted];
m43_11 -> m43_14  [key=2, style=dotted];
m43_11 -> m43_12  [key=0, style=solid];
m43_11 -> m43_68  [key=2, style=dotted];
m43_6 -> m43_8  [key=0, style=solid];
m43_6 -> m43_6  [key=3, color=darkorchid, style=bold, label="Field variable int buyQuantity"];
m43_6 -> m43_7  [key=0, style=solid, color=red];
m43_6 -> m43_64  [key=2, style=dotted];
m43_7 -> m43_12  [key=0, style=solid];
m43_7 -> m43_8  [key=0, style=solid, color=red];
m43_7 -> m43_65  [key=2, style=dotted, color=red];
m43_9 -> m43_12  [key=0, style=solid];
m43_9 -> m43_10  [key=0, style=solid];
m43_9 -> m43_16  [key=2, style=dotted];
m43_9 -> m43_68  [key=2, style=dotted];
m43_10 -> m43_11  [key=0, style=solid];
m43_10 -> n301  [key=2, style=dotted];
m43_10 -> m43_67  [key=2, style=dotted];
m43_12 -> m43_0  [key=0, style=bold, color=blue];
m43_12 -> m43_13  [key=0, style=solid];
m43_12 -> m43_69  [key=2, style=dotted];
m43_12 -> m43_70  [key=2, style=dotted];
m43_23 -> m43_24  [key=0, style=solid, color=red];
m43_23 -> m43_25  [key=0, style=solid];
m43_24 -> m43_23  [key=0, style=solid, color=red];
m43_24 -> m43_71  [key=2, style=dotted, color=red];
m43_25 -> m43_26  [key=0, style=solid];
m43_25 -> n301  [key=2, style=dotted];
m43_25 -> m43_73  [key=2, style=dotted];
m43_26 -> m43_27  [key=0, style=solid];
m43_26 -> m43_68  [key=2, style=dotted];
m43_27 -> m43_28  [key=0, style=solid];
m43_27 -> m43_74  [key=2, style=dotted];
m43_28 -> m43_29  [key=0, style=solid];
m43_28 -> m43_68  [key=2, style=dotted];
m43_29 -> m43_30  [key=0, style=solid];
m43_29 -> n301  [key=2, style=dotted];
m43_29 -> m43_75  [key=2, style=dotted];
m43_29 -> m43_31  [key=1, style=dashed, color=darkseagreen4, label=allQuandlData];
m43_29 -> m43_33  [key=1, style=dashed, color=darkseagreen4, label=allQuandlData];
m43_29 -> m43_36  [key=1, style=dashed, color=darkseagreen4, label=allQuandlData];
m43_30 -> m43_31  [key=0, style=solid];
m43_30 -> m43_68  [key=2, style=dotted];
m43_31 -> m43_32  [key=0, style=solid];
m43_31 -> m43_33  [key=0, style=solid];
m43_33 -> m43_34  [key=0, style=solid];
m43_33 -> m43_76  [key=2, style=dotted];
m43_33 -> m43_35  [key=1, style=dashed, color=darkseagreen4, label=singleSymbolQuandl];
m43_36 -> m43_37  [key=0, style=solid];
m43_36 -> m43_77  [key=2, style=dotted];
m43_36 -> m43_38  [key=1, style=dashed, color=darkseagreen4, label=quandlSpyLows];
m43_32 -> m43_31  [key=0, style=solid];
m43_34 -> m43_35  [key=0, style=solid];
m43_34 -> m43_68  [key=2, style=dotted];
m43_35 -> m43_35  [key=0, style=solid];
m43_35 -> m43_36  [key=0, style=solid];
m43_37 -> m43_38  [key=0, style=solid];
m43_37 -> m43_68  [key=2, style=dotted];
m43_38 -> m43_38  [key=0, style=solid];
m43_38 -> m43_39  [key=0, style=solid];
m43_39 -> m43_40  [key=0, style=solid];
m43_39 -> n301  [key=2, style=dotted];
m43_39 -> m43_78  [key=2, style=dotted];
m43_40 -> m43_41  [key=0, style=solid];
m43_40 -> m43_68  [key=2, style=dotted];
m43_41 -> m43_42  [key=0, style=solid];
m43_41 -> n301  [key=2, style=dotted];
m43_41 -> m43_78  [key=2, style=dotted];
m43_42 -> m43_43  [key=0, style=solid];
m43_42 -> m43_68  [key=2, style=dotted];
m43_43 -> m43_44  [key=0, style=solid];
m43_43 -> m43_79  [key=2, style=dotted];
m43_44 -> m43_45  [key=0, style=solid];
m43_44 -> m43_68  [key=2, style=dotted];
m43_45 -> m43_46  [key=0, style=solid];
m43_45 -> m43_79  [key=2, style=dotted];
m43_46 -> m43_47  [key=0, style=solid];
m43_46 -> m43_68  [key=2, style=dotted];
m43_47 -> m43_48  [key=0, style=solid];
m43_47 -> n301  [key=2, style=dotted];
m43_47 -> m43_80  [key=2, style=dotted];
m43_48 -> m43_49  [key=0, style=solid];
m43_48 -> m43_68  [key=2, style=dotted];
m43_49 -> m43_50  [key=0, style=solid];
m43_49 -> n301  [key=2, style=dotted];
m43_49 -> m43_80  [key=2, style=dotted];
m43_49 -> m43_51  [key=1, style=dashed, color=darkseagreen4, label=allHistory];
m43_49 -> m43_52  [key=1, style=dashed, color=darkseagreen4, label=allHistory];
m43_49 -> m43_54  [key=1, style=dashed, color=darkseagreen4, label=allHistory];
m43_50 -> m43_51  [key=0, style=solid];
m43_50 -> m43_68  [key=2, style=dotted];
m43_51 -> m43_51  [key=0, style=solid];
m43_51 -> m43_52  [key=0, style=solid];
m43_52 -> m43_53  [key=0, style=solid];
m43_52 -> m43_81  [key=2, style=dotted];
m43_54 -> m43_55  [key=0, style=solid];
m43_54 -> m43_82  [key=2, style=dotted];
m43_54 -> m43_56  [key=1, style=dashed, color=darkseagreen4, label=closeHistory];
m43_54 -> m43_57  [key=1, style=dashed, color=darkseagreen4, label=closeHistory];
m43_53 -> m43_54  [key=0, style=solid];
m43_53 -> m43_68  [key=2, style=dotted];
m43_55 -> m43_56  [key=0, style=solid];
m43_55 -> m43_68  [key=2, style=dotted];
m43_56 -> m43_56  [key=0, style=solid];
m43_56 -> m43_57  [key=0, style=solid];
m43_57 -> m43_58  [key=0, style=solid];
m43_57 -> m43_83  [key=2, style=dotted];
m43_58 -> m43_0  [key=0, style=bold, color=blue];
m43_68 -> m43_95  [key=0, style=solid];
m43_68 -> m43_96  [key=1, style=dashed, color=darkseagreen4, label=int];
m43_68 -> m43_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m43_68 -> m43_9  [key=3, color=darkorchid, style=bold, label="Parameter variable int expected"];
m43_68 -> m43_11  [key=3, color=darkorchid, style=bold, label="Parameter variable int expected"];
m43_68 -> m43_13  [key=3, color=darkorchid, style=bold, label="Parameter variable int expected"];
m43_68 -> m43_15  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_19  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_21  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_26  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_28  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_30  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_34  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_37  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_40  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_42  [key=3, color=darkorchid, style=bold, label="Parameter variable int expected"];
m43_68 -> m43_73  [key=3, color=darkorchid, style=bold, label="Parameter variable int expected"];
m43_68 -> m43_46  [key=3, color=darkorchid, style=bold, label="Parameter variable int expected"];
m43_68 -> m43_48  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_50  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_53  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_55  [key=3, color=darkorchid, style=bold, label="Parameter variable string methodCall"];
m43_68 -> m43_8  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> tradeBarHistory"];
m43_68 -> m43_18  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> tradeBarHistory"];
m43_68 -> m43_25  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> tradeBarHistory"];
m43_68 -> m43_33  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> tradeBarHistory"];
m43_68 -> m43_36  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> tradeBarHistory"];
m43_68 -> m43_39  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> tradeBarHistory"];
m43_68 -> m43_54  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> tradeBarHistory"];
m43_95 -> m43_96  [key=0, style=solid];
m43_95 -> m43_99  [key=2, style=dotted];
m43_95 -> m43_97  [key=1, style=dashed, color=darkseagreen4, label=count];
m43_96 -> m43_97  [key=0, style=solid];
m43_96 -> m43_98  [key=0, style=solid];
m43_97 -> m43_98  [key=0, style=solid];
m43_97 -> m43_92  [key=2, style=dotted];
m43_98 -> m43_68  [key=0, style=bold, color=blue];
m43_84 -> m43_85  [key=0, style=solid];
m43_85 -> m43_86  [key=0, style=solid];
m43_86 -> m43_87  [key=0, style=solid];
m43_86 -> m43_88  [key=0, style=solid];
m43_87 -> m43_91  [key=0, style=solid];
m43_87 -> m43_92  [key=2, style=dotted];
m43_88 -> m43_89  [key=0, style=solid];
m43_88 -> m43_91  [key=0, style=solid];
m43_89 -> m43_90  [key=0, style=solid];
m43_89 -> m43_93  [key=2, style=dotted];
m43_90 -> m43_91  [key=0, style=solid];
m43_90 -> m43_94  [key=2, style=dotted];
m43_91 -> m43_84  [key=0, style=bold, color=blue];
m43_100 -> m43_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_7  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_17  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_22  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_24  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m43_100 -> m43_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm"];
m44_116 -> m44_117  [key=0, style=solid];
m44_116 -> m44_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m44_116 -> m44_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m44_116 -> m44_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m44_116 -> m44_42  [key=3, color=red, style=bold, label="method methodReturn bool SetupErrorHandler"];
m44_117 -> m44_118  [key=0, style=solid];
m44_117 -> m44_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m44_117 -> m44_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m44_117 -> m44_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m44_117 -> m44_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m44_117 -> m44_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m44_118 -> m44_119  [key=0, style=solid];
m44_119 -> m44_116  [key=0, style=bold, color=blue];
m44_32 -> m44_33  [key=0, style=solid];
m44_32 -> m44_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m44_32 -> m44_42  [key=1, style=dashed, color=red, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m44_32 -> m44_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_32 -> m44_38  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Setup"];
m44_33 -> m44_34  [key=0, style=solid];
m44_35 -> m44_36  [key=0, style=solid, color=red];
m44_35 -> m44_39  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m44_35 -> m44_46  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m44_35 -> m44_103  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m44_35 -> m44_47  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m44_42 -> m44_43  [key=0, style=solid, color=red];
m44_42 -> m44_16  [key=2, style=dotted, color=red];
m44_42 -> m44_70  [key=2, style=dotted, color=red];
m44_42 -> m44_87  [key=1, style=dashed, color=red, label="lambda expression"];
m44_47 -> m44_48  [key=0, style=solid];
m44_47 -> m44_72  [key=2, style=dotted];
m44_47 -> m44_49  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerage"];
m44_47 -> m44_52  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerage"];
m44_47 -> m44_56  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerage"];
m44_47 -> m44_67  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerage"];
m44_51 -> m44_50  [key=0, style=solid];
m44_51 -> m44_75  [key=2, style=dotted];
m44_51 -> m44_51  [key=1, style=dashed, color=darkseagreen4, label=item];
m44_54 -> m44_55  [key=0, style=solid];
m44_54 -> m44_77  [key=2, style=dotted];
m44_55 -> m44_53  [key=0, style=solid];
m44_55 -> m44_78  [key=2, style=dotted];
m44_55 -> m44_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_57 -> m44_58  [key=0, style=solid];
m44_57 -> m44_80  [key=2, style=dotted];
m44_57 -> m44_60  [key=1, style=dashed, color=darkseagreen4, label=minResolution];
m44_59 -> m44_60  [key=0, style=solid];
m44_59 -> m44_61  [key=0, style=solid];
m44_59 -> m44_81  [key=2, style=dotted];
m44_60 -> m44_61  [key=0, style=solid];
m44_60 -> m44_82  [key=2, style=dotted];
m44_61 -> m44_62  [key=0, style=solid];
m44_61 -> m44_83  [key=2, style=dotted];
m44_62 -> m44_58  [key=0, style=solid];
m44_62 -> m44_84  [key=2, style=dotted];
m44_62 -> m44_85  [key=2, style=dotted];
m44_63 -> m44_64  [key=0, style=solid];
m44_63 -> m44_66  [key=0, style=solid];
m44_63 -> m44_86  [key=2, style=dotted];
m44_34 -> m44_35  [key=0, style=solid];
m44_36 -> m44_37  [key=0, style=solid, color=red];
m44_36 -> m44_39  [key=0, style=solid, color=red];
m44_39 -> m44_40  [key=0, style=solid];
m44_39 -> m44_42  [key=0, style=solid, color=red];
m44_39 -> m44_69  [key=2, style=dotted];
m44_46 -> m44_47  [key=0, style=solid];
m44_46 -> m44_71  [key=2, style=dotted];
m44_46 -> m44_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_37 -> m44_38  [key=0, style=solid];
m44_37 -> m44_68  [key=2, style=dotted];
m44_38 -> m44_67  [key=0, style=solid];
m44_40 -> m44_41  [key=0, style=solid];
m44_40 -> m44_68  [key=2, style=dotted];
m44_41 -> m44_67  [key=0, style=solid];
m44_43 -> m44_44  [key=0, style=solid];
m44_43 -> m44_46  [key=0, style=solid];
m44_44 -> m44_45  [key=0, style=solid];
m44_44 -> m44_68  [key=2, style=dotted];
m44_45 -> m44_67  [key=0, style=solid];
m44_48 -> m44_49  [key=0, style=solid];
m44_48 -> m44_73  [key=2, style=dotted];
m44_49 -> m44_50  [key=0, style=solid];
m44_49 -> m44_74  [key=2, style=dotted];
m44_52 -> m44_53  [key=0, style=solid];
m44_52 -> m44_76  [key=2, style=dotted];
m44_56 -> m44_57  [key=0, style=solid];
m44_56 -> m44_79  [key=2, style=dotted];
m44_56 -> m44_58  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m44_50 -> m44_51  [key=0, style=solid];
m44_50 -> m44_52  [key=0, style=solid];
m44_53 -> m44_54  [key=0, style=solid];
m44_53 -> m44_56  [key=0, style=solid];
m44_53 -> m44_55  [key=1, style=dashed, color=darkseagreen4, label=order];
m44_53 -> m44_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m44_58 -> m44_59  [key=0, style=solid];
m44_58 -> m44_63  [key=0, style=solid];
m44_58 -> m44_60  [key=1, style=dashed, color=darkseagreen4, label=holding];
m44_58 -> m44_61  [key=1, style=dashed, color=darkseagreen4, label=holding];
m44_58 -> m44_62  [key=1, style=dashed, color=darkseagreen4, label=holding];
m44_64 -> m44_65  [key=0, style=solid];
m44_66 -> m44_67  [key=0, style=solid];
m44_65 -> m44_66  [key=0, style=solid];
m44_65 -> m44_68  [key=2, style=dotted];
m44_67 -> m44_32  [key=0, style=bold, color=blue];
m44_120 -> m44_121  [key=0, style=solid];
m44_120 -> m44_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m44_120 -> m44_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m44_120 -> m44_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m44_120 -> m44_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m44_20 -> m44_21  [key=0, style=solid];
m44_20 -> m44_22  [key=0, style=solid];
m44_21 -> m44_24  [key=0, style=solid];
m44_21 -> m44_25  [key=2, style=dotted];
m44_23 -> m44_24  [key=0, style=solid];
m44_23 -> m44_27  [key=2, style=dotted];
m44_23 -> m44_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_19 -> m44_20  [key=0, style=solid];
m44_19 -> m44_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m44_19 -> m44_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m44_22 -> m44_23  [key=0, style=solid];
m44_22 -> m44_26  [key=2, style=dotted];
m44_22 -> m44_29  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m44_29 -> m44_30  [key=0, style=solid];
m44_29 -> m44_31  [key=2, style=dotted];
m44_24 -> m44_19  [key=0, style=bold, color=blue];
m44_28 -> m44_29  [key=0, style=solid];
m44_30 -> m44_28  [key=0, style=bold, color=blue];
m44_88 -> m44_89  [key=0, style=solid];
m44_88 -> m44_91  [key=0, style=solid];
m44_88 -> m44_93  [key=0, style=solid];
m44_90 -> m44_94  [key=0, style=solid];
m44_90 -> m44_99  [key=2, style=dotted];
m44_92 -> m44_94  [key=0, style=solid];
m44_92 -> m44_99  [key=2, style=dotted];
m44_93 -> m44_94  [key=0, style=solid];
m44_93 -> m44_99  [key=2, style=dotted];
m44_94 -> m44_95  [key=0, style=solid];
m44_94 -> m44_100  [key=2, style=dotted];
m44_95 -> m44_96  [key=0, style=solid, color=red];
m44_95 -> m44_98  [key=0, style=solid];
m44_95 -> m44_101  [key=2, style=dotted];
m44_110 -> m44_111  [key=0, style=solid];
m44_110 -> m44_112  [key=2, style=dotted];
m44_110 -> m44_113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m44_103 -> m44_104  [key=0, style=solid];
m44_103 -> m44_105  [key=2, style=dotted];
m44_87 -> m44_88  [key=0, style=solid];
m44_102 -> m44_103  [key=0, style=solid];
m44_107 -> m44_108  [key=0, style=solid];
m44_106 -> m44_107  [key=0, style=solid];
m44_89 -> m44_90  [key=0, style=solid];
m44_91 -> m44_92  [key=0, style=solid];
m44_96 -> m44_97  [key=0, style=solid, color=red];
m44_98 -> m44_87  [key=0, style=bold, color=blue];
m44_97 -> m44_98  [key=0, style=solid];
m44_97 -> m44_68  [key=2, style=dotted];
m44_104 -> m44_102  [key=0, style=bold, color=blue];
m44_108 -> m44_106  [key=0, style=bold, color=blue];
m44_109 -> m44_110  [key=0, style=solid];
m44_111 -> m44_109  [key=0, style=bold, color=blue];
m44_113 -> m44_114  [key=0, style=solid];
m44_114 -> m44_115  [key=0, style=solid];
m44_114 -> m44_114  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Securities.Security>"];
m44_115 -> m44_113  [key=0, style=bold, color=blue];
m44_123 -> m44_130  [key=0, style=solid];
m44_123 -> m44_131  [key=2, style=dotted];
m44_125 -> m44_130  [key=0, style=solid];
m44_125 -> m44_131  [key=2, style=dotted];
m44_127 -> m44_128  [key=0, style=solid];
m44_127 -> m44_132  [key=2, style=dotted];
m44_121 -> m44_122  [key=0, style=solid];
m44_121 -> m44_124  [key=0, style=solid];
m44_121 -> m44_126  [key=0, style=solid];
m44_128 -> m44_129  [key=0, style=solid];
m44_128 -> m44_18  [key=2, style=dotted];
m44_122 -> m44_123  [key=0, style=solid];
m44_124 -> m44_125  [key=0, style=solid];
m44_126 -> m44_127  [key=0, style=solid];
m44_129 -> m44_130  [key=0, style=solid];
m44_129 -> m44_133  [key=2, style=dotted];
m44_130 -> m44_120  [key=0, style=bold, color=blue];
m44_0 -> m44_1  [key=0, style=solid];
m44_1 -> m44_2  [key=0, style=solid];
m44_1 -> n166  [key=2, style=dotted];
m44_2 -> m44_3  [key=0, style=solid];
m44_2 -> m44_5  [key=2, style=dotted];
m44_3 -> m44_0  [key=0, style=bold, color=blue];
m44_68 -> m44_134  [key=0, style=solid];
m44_68 -> m44_37  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
m44_68 -> m44_40  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
m44_68 -> m44_44  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
m44_134 -> m44_135  [key=0, style=solid];
m44_134 -> m44_136  [key=2, style=dotted];
m44_135 -> m44_68  [key=0, style=bold, color=blue];
m44_6 -> m44_7  [key=0, style=solid];
m44_6 -> m44_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m44_6 -> m44_8  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance"];
m44_7 -> m44_8  [key=0, style=solid];
m44_10 -> m44_11  [key=0, style=solid];
m44_10 -> m44_17  [key=2, style=dotted];
m44_10 -> m44_12  [key=1, style=dashed, color=darkseagreen4, label=error];
m44_10 -> m44_13  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m44_8 -> m44_9  [key=0, style=solid];
m44_9 -> m44_10  [key=0, style=solid];
m44_9 -> m44_15  [key=2, style=dotted];
m44_9 -> m44_16  [key=2, style=dotted];
m44_9 -> m44_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m44_9 -> m44_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m44_9 -> m44_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m44_11 -> m44_12  [key=0, style=solid];
m44_11 -> m44_13  [key=0, style=solid];
m44_12 -> m44_14  [key=0, style=solid];
m44_12 -> m44_18  [key=2, style=dotted];
m44_13 -> m44_14  [key=0, style=solid];
m44_14 -> m44_6  [key=0, style=bold, color=blue];
m44_137 -> m44_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_42  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_137 -> m44_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.BrokerageSetupHandler"];
m44_138 -> m44_29  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m44_139 -> m44_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m44_140 -> m44_90  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_140 -> m44_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_140 -> m44_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_140 -> m44_94  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_140 -> m44_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_140 -> m44_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m44_141 -> m44_103  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m44_142 -> m44_107  [key=1, style=dashed, color=darkseagreen4, label=order];
m44_143 -> m44_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m44_143 -> m44_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m44_143 -> m44_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Results.IResultHandler"];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_2  [key=0, style=solid];
m45_1 -> m45_7  [key=2, style=dotted];
m45_2 -> m45_3  [key=0, style=solid];
m45_2 -> m45_8  [key=2, style=dotted];
m45_3 -> m45_4  [key=0, style=solid];
m45_3 -> m45_9  [key=2, style=dotted];
m45_4 -> m45_5  [key=0, style=solid];
m45_4 -> m45_10  [key=2, style=dotted];
m45_4 -> m45_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_5 -> m45_6  [key=0, style=solid];
m45_5 -> m45_11  [key=2, style=dotted];
m45_6 -> m45_0  [key=0, style=bold, color=blue];
m45_15 -> m45_16  [key=0, style=solid];
m45_15 -> m45_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBars"];
m45_16 -> m45_17  [key=0, style=solid];
m45_17 -> m45_18  [key=0, style=solid];
m45_17 -> m45_19  [key=0, style=solid];
m45_17 -> m45_22  [key=2, style=dotted];
m45_18 -> m45_21  [key=0, style=solid];
m45_19 -> m45_20  [key=0, style=solid];
m45_19 -> m45_21  [key=0, style=solid];
m45_20 -> m45_21  [key=0, style=solid];
m45_20 -> m45_23  [key=2, style=dotted];
m45_21 -> m45_15  [key=0, style=bold, color=blue];
m45_12 -> m45_13  [key=0, style=solid];
m45_13 -> m45_14  [key=0, style=solid];
m45_14 -> m45_12  [key=0, style=bold, color=blue];
m45_24 -> m45_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m45_24 -> m45_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m45_24 -> m45_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m45_24 -> m45_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m45_24 -> m45_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m45_24 -> m45_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m45_24 -> m45_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m45_24 -> m45_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.HourReverseSplitRegressionAlgorithm"];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_0  [key=0, style=bold, color=blue];
m47_2 -> m47_3  [key=0, style=solid];
m47_2 -> m47_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Exceptions.IExceptionInterpreter"];
m47_2 -> m47_5  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m47_3 -> m47_4  [key=0, style=solid];
m47_3 -> m47_6  [key=1, style=dashed, color=darkseagreen4, label=see];
m47_3 -> m47_7  [key=1, style=dashed, color=darkseagreen4, label=see];
m47_3 -> m47_8  [key=1, style=dashed, color=darkseagreen4, label=see];
m47_4 -> m47_5  [key=0, style=solid];
m47_4 -> m47_10  [key=2, style=dotted];
m47_4 -> m47_8  [key=1, style=dashed, color=darkseagreen4, label=inner];
m47_5 -> m47_6  [key=0, style=solid];
m47_5 -> m47_8  [key=1, style=dashed, color=darkseagreen4, label=message];
m47_6 -> m47_7  [key=0, style=solid];
m47_6 -> m47_8  [key=0, style=solid];
m47_6 -> m47_11  [key=2, style=dotted];
m47_7 -> m47_8  [key=0, style=solid];
m47_8 -> m47_9  [key=0, style=solid];
m47_8 -> m47_12  [key=2, style=dotted];
m47_9 -> m47_2  [key=0, style=bold, color=blue];
m48_11 -> m48_12  [key=0, style=solid];
m48_11 -> m48_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_12 -> m48_13  [key=0, style=solid];
m48_12 -> m48_15  [key=2, style=dotted];
m48_13 -> m48_14  [key=0, style=solid];
m48_13 -> m48_5  [key=2, style=dotted];
m48_14 -> m48_11  [key=0, style=bold, color=blue];
m48_142 -> m48_143  [key=0, style=solid];
m48_143 -> m48_144  [key=0, style=solid];
m48_144 -> m48_145  [key=0, style=solid];
m48_145 -> m48_146  [key=0, style=solid];
m48_146 -> m48_147  [key=0, style=solid];
m48_146 -> m48_146  [key=3, color=darkorchid, style=bold, label="Local variable string customPath"];
m48_147 -> m48_148  [key=0, style=solid];
m48_147 -> m48_141  [key=2, style=dotted];
m48_147 -> m48_113  [key=2, style=dotted];
m48_147 -> m48_149  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_147 -> m48_150  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m48_147 -> m48_151  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_147 -> m48_152  [key=1, style=dashed, color=darkseagreen4, label=date];
m48_148 -> m48_149  [key=0, style=solid];
m48_148 -> m48_5  [key=2, style=dotted];
m48_149 -> m48_150  [key=0, style=solid];
m48_149 -> m48_5  [key=2, style=dotted];
m48_150 -> m48_151  [key=0, style=solid];
m48_150 -> m48_5  [key=2, style=dotted];
m48_151 -> m48_152  [key=0, style=solid];
m48_151 -> m48_196  [key=2, style=dotted];
m48_151 -> m48_5  [key=2, style=dotted];
m48_152 -> m48_153  [key=0, style=solid];
m48_152 -> m48_197  [key=2, style=dotted];
m48_152 -> m48_5  [key=2, style=dotted];
m48_153 -> m48_154  [key=0, style=solid];
m48_153 -> m48_153  [key=3, color=darkorchid, style=bold, label="Local variable string mixedPathSeperators"];
m48_154 -> m48_155  [key=0, style=solid];
m48_154 -> m48_141  [key=2, style=dotted];
m48_154 -> m48_113  [key=2, style=dotted];
m48_154 -> m48_156  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_154 -> m48_157  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m48_154 -> m48_158  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_154 -> m48_159  [key=1, style=dashed, color=darkseagreen4, label=date];
m48_155 -> m48_156  [key=0, style=solid];
m48_155 -> m48_5  [key=2, style=dotted];
m48_156 -> m48_157  [key=0, style=solid];
m48_156 -> m48_5  [key=2, style=dotted];
m48_157 -> m48_158  [key=0, style=solid];
m48_157 -> m48_5  [key=2, style=dotted];
m48_158 -> m48_159  [key=0, style=solid];
m48_158 -> m48_196  [key=2, style=dotted];
m48_158 -> m48_5  [key=2, style=dotted];
m48_159 -> m48_160  [key=0, style=solid];
m48_159 -> m48_197  [key=2, style=dotted];
m48_159 -> m48_5  [key=2, style=dotted];
m48_160 -> m48_161  [key=0, style=solid];
m48_160 -> m48_160  [key=3, color=darkorchid, style=bold, label="Local variable string longRelativePath"];
m48_161 -> m48_162  [key=0, style=solid];
m48_161 -> m48_141  [key=2, style=dotted];
m48_161 -> m48_113  [key=2, style=dotted];
m48_161 -> m48_163  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_161 -> m48_164  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m48_161 -> m48_165  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_161 -> m48_166  [key=1, style=dashed, color=darkseagreen4, label=date];
m48_162 -> m48_163  [key=0, style=solid];
m48_162 -> m48_5  [key=2, style=dotted];
m48_163 -> m48_164  [key=0, style=solid];
m48_163 -> m48_5  [key=2, style=dotted];
m48_164 -> m48_165  [key=0, style=solid];
m48_164 -> m48_5  [key=2, style=dotted];
m48_165 -> m48_166  [key=0, style=solid];
m48_165 -> m48_196  [key=2, style=dotted];
m48_165 -> m48_5  [key=2, style=dotted];
m48_166 -> m48_167  [key=0, style=solid];
m48_166 -> m48_5  [key=2, style=dotted];
m48_167 -> m48_168  [key=0, style=solid];
m48_167 -> m48_167  [key=3, color=darkorchid, style=bold, label="Local variable string shortRelativePath"];
m48_168 -> m48_169  [key=0, style=solid];
m48_168 -> m48_141  [key=2, style=dotted];
m48_168 -> m48_113  [key=2, style=dotted];
m48_168 -> m48_170  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_168 -> m48_171  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m48_168 -> m48_172  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_168 -> m48_173  [key=1, style=dashed, color=darkseagreen4, label=date];
m48_169 -> m48_170  [key=0, style=solid];
m48_169 -> m48_5  [key=2, style=dotted];
m48_170 -> m48_171  [key=0, style=solid];
m48_170 -> m48_5  [key=2, style=dotted];
m48_171 -> m48_172  [key=0, style=solid];
m48_171 -> m48_5  [key=2, style=dotted];
m48_172 -> m48_173  [key=0, style=solid];
m48_172 -> m48_196  [key=2, style=dotted];
m48_172 -> m48_5  [key=2, style=dotted];
m48_173 -> m48_174  [key=0, style=solid];
m48_173 -> m48_197  [key=2, style=dotted];
m48_173 -> m48_5  [key=2, style=dotted];
m48_174 -> m48_175  [key=0, style=solid];
m48_174 -> m48_174  [key=3, color=darkorchid, style=bold, label="Local variable string dailyEquitiesPath"];
m48_175 -> m48_176  [key=0, style=solid];
m48_175 -> m48_141  [key=2, style=dotted];
m48_175 -> m48_113  [key=2, style=dotted];
m48_175 -> m48_177  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_175 -> m48_178  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m48_175 -> m48_179  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_175 -> m48_180  [key=1, style=dashed, color=darkseagreen4, label=date];
m48_176 -> m48_177  [key=0, style=solid];
m48_176 -> m48_5  [key=2, style=dotted];
m48_177 -> m48_178  [key=0, style=solid];
m48_177 -> m48_5  [key=2, style=dotted];
m48_178 -> m48_179  [key=0, style=solid];
m48_178 -> m48_5  [key=2, style=dotted];
m48_179 -> m48_180  [key=0, style=solid];
m48_179 -> m48_196  [key=2, style=dotted];
m48_179 -> m48_5  [key=2, style=dotted];
m48_180 -> m48_181  [key=0, style=solid];
m48_180 -> m48_5  [key=2, style=dotted];
m48_181 -> m48_182  [key=0, style=solid];
m48_181 -> m48_181  [key=3, color=darkorchid, style=bold, label="Local variable string minuteEquitiesPath"];
m48_182 -> m48_183  [key=0, style=solid];
m48_182 -> m48_141  [key=2, style=dotted];
m48_182 -> m48_113  [key=2, style=dotted];
m48_182 -> m48_184  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_182 -> m48_185  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m48_182 -> m48_186  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_182 -> m48_187  [key=1, style=dashed, color=darkseagreen4, label=date];
m48_183 -> m48_184  [key=0, style=solid];
m48_183 -> m48_5  [key=2, style=dotted];
m48_184 -> m48_185  [key=0, style=solid];
m48_184 -> m48_5  [key=2, style=dotted];
m48_185 -> m48_186  [key=0, style=solid];
m48_185 -> m48_5  [key=2, style=dotted];
m48_186 -> m48_187  [key=0, style=solid];
m48_186 -> m48_196  [key=2, style=dotted];
m48_186 -> m48_5  [key=2, style=dotted];
m48_187 -> m48_188  [key=0, style=solid];
m48_187 -> m48_197  [key=2, style=dotted];
m48_187 -> m48_5  [key=2, style=dotted];
m48_188 -> m48_189  [key=0, style=solid];
m48_188 -> m48_188  [key=3, color=darkorchid, style=bold, label="Local variable string cfdPath"];
m48_189 -> m48_190  [key=0, style=solid];
m48_189 -> m48_141  [key=2, style=dotted];
m48_189 -> m48_113  [key=2, style=dotted];
m48_189 -> m48_191  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_189 -> m48_192  [key=1, style=dashed, color=darkseagreen4, label=resolution];
m48_189 -> m48_193  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m48_189 -> m48_194  [key=1, style=dashed, color=darkseagreen4, label=date];
m48_190 -> m48_191  [key=0, style=solid];
m48_190 -> m48_5  [key=2, style=dotted];
m48_191 -> m48_192  [key=0, style=solid];
m48_191 -> m48_5  [key=2, style=dotted];
m48_192 -> m48_193  [key=0, style=solid];
m48_192 -> m48_5  [key=2, style=dotted];
m48_193 -> m48_194  [key=0, style=solid];
m48_193 -> m48_196  [key=2, style=dotted];
m48_193 -> m48_5  [key=2, style=dotted];
m48_194 -> m48_195  [key=0, style=solid];
m48_194 -> m48_197  [key=2, style=dotted];
m48_194 -> m48_5  [key=2, style=dotted];
m48_195 -> m48_142  [key=0, style=bold, color=blue];
m48_227 -> m48_256  [key=0, style=solid];
m48_227 -> m48_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.SecurityType"];
m48_227 -> m48_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m48_227 -> m48_259  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_227 -> m48_260  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m48_227 -> m48_261  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m48_227 -> m48_263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m48_227 -> m48_265  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m48_227 -> m48_268  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m48_227 -> m48_271  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m48_227 -> m48_272  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m48_227 -> m48_274  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m48_227 -> m48_275  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m48_256 -> m48_257  [key=0, style=solid];
m48_257 -> m48_258  [key=0, style=solid];
m48_258 -> m48_259  [key=0, style=solid];
m48_259 -> m48_260  [key=0, style=solid];
m48_260 -> m48_261  [key=0, style=solid];
m48_260 -> m48_263  [key=0, style=solid];
m48_261 -> m48_262  [key=0, style=solid];
m48_263 -> m48_264  [key=0, style=solid];
m48_263 -> m48_265  [key=0, style=solid];
m48_265 -> m48_266  [key=0, style=solid];
m48_265 -> m48_267  [key=0, style=solid];
m48_268 -> m48_269  [key=0, style=solid];
m48_268 -> m48_270  [key=0, style=solid];
m48_271 -> m48_272  [key=0, style=solid];
m48_271 -> m48_63  [key=2, style=dotted];
m48_272 -> m48_273  [key=0, style=solid];
m48_272 -> m48_274  [key=0, style=solid];
m48_272 -> m48_63  [key=2, style=dotted];
m48_274 -> m48_275  [key=0, style=solid];
m48_274 -> m48_276  [key=0, style=solid];
m48_275 -> m48_276  [key=0, style=solid];
m48_262 -> m48_268  [key=0, style=solid];
m48_264 -> m48_268  [key=0, style=solid];
m48_266 -> m48_268  [key=0, style=solid];
m48_267 -> m48_276  [key=0, style=solid];
m48_267 -> m48_277  [key=2, style=dotted];
m48_269 -> m48_270  [key=0, style=solid];
m48_270 -> m48_271  [key=0, style=solid];
m48_270 -> m48_255  [key=2, style=dotted];
m48_270 -> m48_63  [key=2, style=dotted];
m48_273 -> m48_274  [key=0, style=solid];
m48_276 -> m48_227  [key=0, style=bold, color=blue];
m48_243 -> m48_244  [key=0, style=solid];
m48_214 -> m48_238  [key=0, style=solid];
m48_214 -> m48_239  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m48_214 -> m48_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m48_214 -> m48_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.TickType"];
m48_214 -> m48_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_214 -> m48_243  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_214 -> m48_244  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_214 -> m48_246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m48_214 -> m48_247  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m48_214 -> m48_248  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m48_214 -> m48_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m48_238 -> m48_239  [key=0, style=solid];
m48_239 -> m48_240  [key=0, style=solid];
m48_240 -> m48_241  [key=0, style=solid];
m48_241 -> m48_242  [key=0, style=solid];
m48_242 -> m48_243  [key=0, style=solid];
m48_244 -> m48_245  [key=0, style=solid];
m48_244 -> m48_252  [key=2, style=dotted];
m48_244 -> m48_253  [key=2, style=dotted];
m48_244 -> m48_254  [key=2, style=dotted];
m48_246 -> m48_247  [key=0, style=solid];
m48_247 -> m48_248  [key=0, style=solid];
m48_248 -> m48_249  [key=0, style=solid];
m48_248 -> m48_250  [key=0, style=solid];
m48_250 -> m48_251  [key=0, style=solid];
m48_250 -> m48_255  [key=2, style=dotted];
m48_245 -> m48_246  [key=0, style=solid];
m48_245 -> m48_252  [key=2, style=dotted];
m48_249 -> m48_250  [key=0, style=solid];
m48_251 -> m48_214  [key=0, style=bold, color=blue];
m48_235 -> m48_236  [key=0, style=solid];
m48_217 -> m48_218  [key=0, style=solid];
m48_218 -> m48_219  [key=0, style=solid];
m48_218 -> m48_220  [key=2, style=dotted];
m48_218 -> m48_221  [key=2, style=dotted];
m48_219 -> m48_217  [key=0, style=bold, color=blue];
m48_236 -> m48_237  [key=0, style=solid];
m48_236 -> m48_220  [key=2, style=dotted];
m48_236 -> m48_221  [key=2, style=dotted];
m48_237 -> m48_235  [key=0, style=bold, color=blue];
m48_87 -> m48_88  [key=0, style=solid];
m48_87 -> m48_87  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_82 -> m48_83  [key=0, style=solid];
m48_82 -> m48_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_82 -> m48_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_82 -> m48_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_82 -> m48_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_83 -> m48_84  [key=0, style=solid];
m48_83 -> m48_64  [key=2, style=dotted];
m48_84 -> m48_85  [key=0, style=solid];
m48_84 -> m48_78  [key=2, style=dotted];
m48_84 -> m48_88  [key=1, style=dashed, color=darkseagreen4, label=source];
m48_85 -> m48_86  [key=0, style=solid];
m48_85 -> m48_87  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_85 -> m48_88  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_86 -> m48_87  [key=0, style=solid];
m48_86 -> m48_88  [key=0, style=solid];
m48_88 -> m48_89  [key=0, style=solid];
m48_88 -> m48_5  [key=2, style=dotted];
m48_89 -> m48_82  [key=0, style=bold, color=blue];
m48_31 -> m48_32  [key=0, style=solid];
m48_31 -> m48_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_31 -> m48_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_31 -> m48_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_31 -> m48_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_31 -> m48_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_31 -> m48_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_31 -> m48_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_31 -> m48_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_31 -> m48_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_32 -> m48_33  [key=0, style=solid];
m48_32 -> m48_63  [key=2, style=dotted];
m48_32 -> m48_64  [key=2, style=dotted];
m48_33 -> m48_34  [key=0, style=solid];
m48_33 -> m48_65  [key=2, style=dotted];
m48_33 -> m48_35  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m48_33 -> m48_36  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m48_33 -> m48_37  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m48_33 -> m48_38  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m48_33 -> m48_39  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m48_33 -> m48_41  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m48_33 -> m48_50  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m48_33 -> m48_52  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m48_33 -> m48_55  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m48_33 -> m48_57  [key=1, style=dashed, color=darkseagreen4, label=parsed];
m48_34 -> m48_35  [key=0, style=solid];
m48_34 -> m48_66  [key=2, style=dotted];
m48_35 -> m48_36  [key=0, style=solid];
m48_35 -> m48_5  [key=2, style=dotted];
m48_36 -> m48_37  [key=0, style=solid];
m48_36 -> m48_5  [key=2, style=dotted];
m48_37 -> m48_38  [key=0, style=solid];
m48_37 -> m48_5  [key=2, style=dotted];
m48_38 -> m48_39  [key=0, style=solid];
m48_38 -> m48_5  [key=2, style=dotted];
m48_40 -> m48_41  [key=0, style=solid];
m48_40 -> m48_42  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_40 -> m48_43  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_40 -> m48_44  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_40 -> m48_45  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_40 -> m48_46  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_40 -> m48_47  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_40 -> m48_48  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_40 -> m48_49  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_51 -> m48_52  [key=0, style=solid];
m48_51 -> m48_53  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_51 -> m48_54  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_56 -> m48_57  [key=0, style=solid];
m48_56 -> m48_58  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_56 -> m48_59  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_56 -> m48_60  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_56 -> m48_61  [key=1, style=dashed, color=darkseagreen4, label=expected];
m48_39 -> m48_40  [key=0, style=solid];
m48_39 -> m48_50  [key=0, style=solid];
m48_41 -> m48_42  [key=0, style=solid];
m48_41 -> m48_43  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_41 -> m48_44  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_41 -> m48_45  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_41 -> m48_46  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_41 -> m48_47  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_41 -> m48_48  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_41 -> m48_49  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_50 -> m48_51  [key=0, style=solid];
m48_50 -> m48_55  [key=0, style=solid];
m48_52 -> m48_53  [key=0, style=solid];
m48_52 -> m48_54  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_55 -> m48_56  [key=0, style=solid];
m48_55 -> m48_62  [key=0, style=solid];
m48_57 -> m48_58  [key=0, style=solid];
m48_57 -> m48_59  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_57 -> m48_60  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_57 -> m48_61  [key=1, style=dashed, color=darkseagreen4, label=actual];
m48_42 -> m48_43  [key=0, style=solid];
m48_42 -> m48_5  [key=2, style=dotted];
m48_43 -> m48_44  [key=0, style=solid];
m48_43 -> m48_5  [key=2, style=dotted];
m48_44 -> m48_45  [key=0, style=solid];
m48_44 -> m48_5  [key=2, style=dotted];
m48_45 -> m48_46  [key=0, style=solid];
m48_45 -> m48_5  [key=2, style=dotted];
m48_46 -> m48_47  [key=0, style=solid];
m48_46 -> m48_5  [key=2, style=dotted];
m48_47 -> m48_48  [key=0, style=solid];
m48_47 -> m48_5  [key=2, style=dotted];
m48_48 -> m48_49  [key=0, style=solid];
m48_48 -> m48_5  [key=2, style=dotted];
m48_49 -> m48_62  [key=0, style=solid];
m48_49 -> m48_5  [key=2, style=dotted];
m48_53 -> m48_54  [key=0, style=solid];
m48_53 -> m48_67  [key=2, style=dotted];
m48_54 -> m48_62  [key=0, style=solid];
m48_54 -> m48_5  [key=2, style=dotted];
m48_58 -> m48_59  [key=0, style=solid];
m48_58 -> m48_67  [key=2, style=dotted];
m48_59 -> m48_60  [key=0, style=solid];
m48_59 -> m48_67  [key=2, style=dotted];
m48_60 -> m48_61  [key=0, style=solid];
m48_60 -> m48_5  [key=2, style=dotted];
m48_61 -> m48_62  [key=0, style=solid];
m48_61 -> m48_5  [key=2, style=dotted];
m48_62 -> m48_31  [key=0, style=bold, color=blue];
m48_115 -> m48_116  [key=0, style=solid];
m48_116 -> m48_117  [key=0, style=solid];
m48_116 -> m48_119  [key=2, style=dotted];
m48_116 -> m48_5  [key=2, style=dotted];
m48_117 -> m48_118  [key=0, style=solid];
m48_117 -> m48_119  [key=2, style=dotted];
m48_117 -> m48_5  [key=2, style=dotted];
m48_118 -> m48_115  [key=0, style=bold, color=blue];
m48_120 -> m48_121  [key=0, style=solid];
m48_121 -> m48_122  [key=0, style=solid];
m48_122 -> m48_123  [key=0, style=solid];
m48_123 -> m48_124  [key=0, style=solid];
m48_124 -> m48_125  [key=0, style=solid];
m48_124 -> m48_124  [key=3, color=darkorchid, style=bold, label="Local variable string invalidPath"];
m48_125 -> m48_126  [key=0, style=solid];
m48_125 -> m48_141  [key=2, style=dotted];
m48_125 -> m48_114  [key=2, style=dotted];
m48_126 -> m48_127  [key=0, style=solid];
m48_126 -> m48_126  [key=3, color=darkorchid, style=bold, label="Local variable string nonExistantPath"];
m48_127 -> m48_128  [key=0, style=solid];
m48_127 -> m48_141  [key=2, style=dotted];
m48_127 -> m48_114  [key=2, style=dotted];
m48_128 -> m48_129  [key=0, style=solid];
m48_128 -> m48_128  [key=3, color=darkorchid, style=bold, label="Local variable string notAPath"];
m48_129 -> m48_130  [key=0, style=solid];
m48_129 -> m48_141  [key=2, style=dotted];
m48_129 -> m48_114  [key=2, style=dotted];
m48_130 -> m48_131  [key=0, style=solid];
m48_130 -> m48_130  [key=3, color=darkorchid, style=bold, label="Local variable string emptyPath"];
m48_131 -> m48_132  [key=0, style=solid];
m48_131 -> m48_141  [key=2, style=dotted];
m48_131 -> m48_114  [key=2, style=dotted];
m48_132 -> m48_133  [key=0, style=solid];
m48_132 -> m48_132  [key=3, color=darkorchid, style=bold, label="Local variable string nullPath"];
m48_133 -> m48_134  [key=0, style=solid];
m48_133 -> m48_141  [key=2, style=dotted];
m48_133 -> m48_114  [key=2, style=dotted];
m48_134 -> m48_135  [key=0, style=solid];
m48_134 -> m48_134  [key=3, color=darkorchid, style=bold, label="Local variable string optionsTradePath"];
m48_135 -> m48_136  [key=0, style=solid];
m48_135 -> m48_141  [key=2, style=dotted];
m48_135 -> m48_114  [key=2, style=dotted];
m48_136 -> m48_137  [key=0, style=solid];
m48_136 -> m48_136  [key=3, color=darkorchid, style=bold, label="Local variable string optionsOpenInterestPath"];
m48_137 -> m48_138  [key=0, style=solid];
m48_137 -> m48_141  [key=2, style=dotted];
m48_137 -> m48_114  [key=2, style=dotted];
m48_138 -> m48_139  [key=0, style=solid];
m48_138 -> m48_138  [key=3, color=darkorchid, style=bold, label="Local variable string optionsQuotePath"];
m48_139 -> m48_140  [key=0, style=solid];
m48_139 -> m48_141  [key=2, style=dotted];
m48_139 -> m48_114  [key=2, style=dotted];
m48_140 -> m48_120  [key=0, style=bold, color=blue];
m48_21 -> m48_22  [key=0, style=solid];
m48_21 -> m48_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_21 -> m48_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_21 -> m48_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_22 -> m48_23  [key=0, style=solid];
m48_22 -> m48_29  [key=2, style=dotted];
m48_22 -> m48_25  [key=1, style=dashed, color=darkseagreen4, label=line];
m48_22 -> m48_27  [key=1, style=dashed, color=darkseagreen4, label=line];
m48_23 -> m48_24  [key=0, style=solid];
m48_23 -> m48_5  [key=2, style=dotted];
m48_24 -> m48_25  [key=0, style=solid];
m48_24 -> m48_26  [key=0, style=solid];
m48_26 -> m48_27  [key=0, style=solid];
m48_26 -> m48_28  [key=0, style=solid];
m48_25 -> m48_26  [key=0, style=solid];
m48_25 -> m48_30  [key=2, style=dotted];
m48_25 -> m48_5  [key=2, style=dotted];
m48_27 -> m48_28  [key=0, style=solid];
m48_27 -> m48_30  [key=2, style=dotted];
m48_27 -> m48_5  [key=2, style=dotted];
m48_28 -> m48_21  [key=0, style=bold, color=blue];
m48_68 -> m48_69  [key=0, style=solid];
m48_68 -> m48_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_69 -> m48_70  [key=0, style=solid];
m48_69 -> m48_78  [key=2, style=dotted];
m48_71 -> m48_72  [key=0, style=solid];
m48_71 -> m48_20  [key=2, style=dotted];
m48_70 -> m48_71  [key=0, style=solid];
m48_70 -> m48_79  [key=2, style=dotted];
m48_70 -> m48_73  [key=1, style=dashed, color=darkseagreen4, label=normalizedSourcePath];
m48_70 -> m48_75  [key=1, style=dashed, color=darkseagreen4, label=normalizedSourcePath];
m48_70 -> m48_76  [key=1, style=dashed, color=darkseagreen4, label=normalizedSourcePath];
m48_73 -> m48_74  [key=0, style=solid];
m48_73 -> m48_80  [key=2, style=dotted];
m48_73 -> m48_75  [key=1, style=dashed, color=darkseagreen4, label=indexOfHash];
m48_75 -> m48_76  [key=0, style=solid];
m48_75 -> m48_81  [key=2, style=dotted];
m48_75 -> m48_75  [key=1, style=dashed, color=darkseagreen4, label=normalizedSourcePath];
m48_76 -> m48_77  [key=0, style=solid];
m48_76 -> m48_5  [key=2, style=dotted];
m48_72 -> m48_73  [key=0, style=solid];
m48_72 -> m48_79  [key=2, style=dotted];
m48_72 -> m48_76  [key=1, style=dashed, color=darkseagreen4, label=normalizeZipFilePath];
m48_74 -> m48_75  [key=0, style=solid];
m48_74 -> m48_76  [key=0, style=solid];
m48_77 -> m48_68  [key=0, style=bold, color=blue];
m48_0 -> m48_1  [key=0, style=solid];
m48_0 -> m48_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_1 -> m48_2  [key=0, style=solid];
m48_1 -> m48_4  [key=2, style=dotted];
m48_2 -> m48_3  [key=0, style=solid];
m48_2 -> m48_5  [key=2, style=dotted];
m48_3 -> m48_0  [key=0, style=bold, color=blue];
m48_16 -> m48_17  [key=0, style=solid];
m48_16 -> m48_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_17 -> m48_18  [key=0, style=solid];
m48_17 -> m48_20  [key=2, style=dotted];
m48_18 -> m48_19  [key=0, style=solid];
m48_18 -> m48_5  [key=2, style=dotted];
m48_19 -> m48_16  [key=0, style=bold, color=blue];
m48_90 -> m48_91  [key=0, style=solid];
m48_91 -> m48_92  [key=0, style=solid];
m48_91 -> m48_95  [key=1, style=dashed, color=darkseagreen4, label=tickType];
m48_91 -> m48_96  [key=1, style=dashed, color=darkseagreen4, label=tickType];
m48_92 -> m48_93  [key=0, style=solid];
m48_92 -> m48_97  [key=1, style=dashed, color=darkseagreen4, label=openInterestType];
m48_92 -> m48_98  [key=1, style=dashed, color=darkseagreen4, label=openInterestType];
m48_95 -> m48_96  [key=0, style=solid];
m48_95 -> m48_104  [key=2, style=dotted];
m48_95 -> m48_5  [key=2, style=dotted];
m48_96 -> m48_97  [key=0, style=solid];
m48_96 -> m48_104  [key=2, style=dotted];
m48_96 -> m48_105  [key=2, style=dotted];
m48_93 -> m48_94  [key=0, style=solid];
m48_93 -> m48_99  [key=1, style=dashed, color=darkseagreen4, label=quoteBarType];
m48_93 -> m48_100  [key=1, style=dashed, color=darkseagreen4, label=quoteBarType];
m48_97 -> m48_98  [key=0, style=solid];
m48_97 -> m48_104  [key=2, style=dotted];
m48_97 -> m48_5  [key=2, style=dotted];
m48_98 -> m48_99  [key=0, style=solid];
m48_98 -> m48_104  [key=2, style=dotted];
m48_98 -> m48_105  [key=2, style=dotted];
m48_94 -> m48_95  [key=0, style=solid];
m48_94 -> m48_101  [key=1, style=dashed, color=darkseagreen4, label=tradeBarType];
m48_94 -> m48_102  [key=1, style=dashed, color=darkseagreen4, label=tradeBarType];
m48_99 -> m48_100  [key=0, style=solid];
m48_99 -> m48_104  [key=2, style=dotted];
m48_99 -> m48_5  [key=2, style=dotted];
m48_100 -> m48_101  [key=0, style=solid];
m48_100 -> m48_104  [key=2, style=dotted];
m48_100 -> m48_105  [key=2, style=dotted];
m48_101 -> m48_102  [key=0, style=solid];
m48_101 -> m48_104  [key=2, style=dotted];
m48_101 -> m48_5  [key=2, style=dotted];
m48_102 -> m48_103  [key=0, style=solid];
m48_102 -> m48_104  [key=2, style=dotted];
m48_102 -> m48_105  [key=2, style=dotted];
m48_103 -> m48_90  [key=0, style=bold, color=blue];
m48_222 -> m48_223  [key=0, style=solid];
m48_223 -> m48_224  [key=0, style=solid];
m48_223 -> m48_226  [key=2, style=dotted];
m48_224 -> m48_225  [key=0, style=solid];
m48_224 -> n166  [key=2, style=dotted];
m48_224 -> m48_227  [key=2, style=dotted];
m48_224 -> m48_228  [key=2, style=dotted];
m48_224 -> m48_229  [key=2, style=dotted];
m48_224 -> m48_230  [key=2, style=dotted];
m48_224 -> m48_231  [key=2, style=dotted];
m48_224 -> m48_232  [key=2, style=dotted];
m48_224 -> m48_233  [key=2, style=dotted];
m48_224 -> m48_234  [key=2, style=dotted];
m48_224 -> m48_215  [key=2, style=dotted];
m48_224 -> m48_216  [key=2, style=dotted];
m48_224 -> m48_235  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_225 -> m48_222  [key=0, style=bold, color=blue];
m48_9 -> m48_6  [key=0, style=bold, color=blue];
m48_6 -> m48_7  [key=0, style=solid];
m48_6 -> m48_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_7 -> m48_8  [key=0, style=solid];
m48_7 -> m48_10  [key=2, style=dotted];
m48_8 -> m48_9  [key=0, style=solid];
m48_8 -> m48_5  [key=2, style=dotted];
m48_67 -> m48_198  [key=0, style=solid];
m48_67 -> m48_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m48_67 -> m48_202  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m48_67 -> m48_203  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m48_67 -> m48_204  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m48_67 -> m48_205  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.IBar"];
m48_67 -> m48_51  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Market.IBar expected"];
m48_67 -> m48_52  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Market.IBar actual"];
m48_198 -> m48_199  [key=0, style=solid];
m48_198 -> m48_200  [key=0, style=solid];
m48_200 -> m48_201  [key=0, style=solid];
m48_200 -> m48_202  [key=0, style=solid];
m48_202 -> m48_203  [key=0, style=solid];
m48_202 -> m48_5  [key=2, style=dotted];
m48_203 -> m48_204  [key=0, style=solid];
m48_203 -> m48_5  [key=2, style=dotted];
m48_204 -> m48_205  [key=0, style=solid];
m48_204 -> m48_5  [key=2, style=dotted];
m48_205 -> m48_206  [key=0, style=solid];
m48_205 -> m48_5  [key=2, style=dotted];
m48_199 -> m48_206  [key=0, style=solid];
m48_201 -> m48_202  [key=0, style=solid];
m48_201 -> m48_207  [key=2, style=dotted];
m48_206 -> m48_67  [key=0, style=bold, color=blue];
m48_208 -> m48_209  [key=0, style=solid];
m48_209 -> m48_210  [key=0, style=solid];
m48_209 -> m48_212  [key=2, style=dotted];
m48_210 -> m48_211  [key=0, style=solid];
m48_210 -> n166  [key=2, style=dotted];
m48_210 -> m48_214  [key=2, style=dotted];
m48_210 -> m48_215  [key=2, style=dotted];
m48_210 -> m48_216  [key=2, style=dotted];
m48_210 -> m48_217  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m48_211 -> m48_208  [key=0, style=bold, color=blue];
m48_106 -> m48_107  [key=0, style=solid];
m48_107 -> m48_108  [key=0, style=solid];
m48_107 -> m48_112  [key=2, style=dotted];
m48_107 -> m48_113  [key=2, style=dotted];
m48_108 -> m48_109  [key=0, style=solid];
m48_108 -> m48_112  [key=2, style=dotted];
m48_108 -> m48_113  [key=2, style=dotted];
m48_109 -> m48_110  [key=0, style=solid];
m48_109 -> m48_112  [key=2, style=dotted];
m48_109 -> m48_113  [key=2, style=dotted];
m48_110 -> m48_111  [key=0, style=solid];
m48_110 -> m48_112  [key=2, style=dotted];
m48_110 -> m48_114  [key=2, style=dotted];
m48_111 -> m48_106  [key=0, style=bold, color=blue];
m48_278 -> m48_238  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_239  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_240  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_242  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_244  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_245  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_247  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_249  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_278 -> m48_250  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataTestParameters"];
m48_279 -> m48_256  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_257  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_258  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_259  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_262  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_266  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_270  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_271  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_272  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_273  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m48_279 -> m48_275  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Common.Util.LeanDataTests.LeanDataLineTestParameters"];
m49_17 -> m49_18  [key=0, style=solid];
m49_23 -> m49_24  [key=0, style=solid, color=green];
m49_23 -> m49_19  [key=0, style=solid, color=green];
m49_21 -> m49_23  [key=0, style=solid, color=green];
m49_21 -> m49_22  [key=0, style=solid];
m49_24 -> m49_25  [key=0, style=solid];
m49_19 -> m49_21  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m49_19 -> m49_24  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m49_19 -> m49_20  [key=0, style=solid];
m49_19 -> m49_26  [key=0, style=solid];
m49_19 -> m49_22  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m49_19 -> m49_25  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m49_18 -> m49_19  [key=0, style=solid];
m49_18 -> m49_29  [key=2, style=dotted];
m49_18 -> m49_30  [key=2, style=dotted];
m49_18 -> m49_31  [key=2, style=dotted];
m49_18 -> m49_32  [key=2, style=dotted];
m49_18 -> m49_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m49_20 -> m49_21  [key=0, style=solid];
m49_20 -> m49_19  [key=0, style=solid];
m49_20 -> m49_33  [key=2, style=dotted];
m49_22 -> m49_19  [key=0, style=solid];
m49_22 -> m49_34  [key=2, style=dotted];
m49_25 -> m49_19  [key=0, style=solid];
m49_25 -> m49_34  [key=2, style=dotted];
m49_26 -> m49_27  [key=0, style=solid];
m49_26 -> m49_28  [key=0, style=solid];
m49_27 -> m49_28  [key=0, style=solid];
m49_27 -> m49_35  [key=2, style=dotted];
m49_27 -> m49_36  [key=2, style=dotted];
m49_28 -> m49_17  [key=0, style=bold, color=blue];
m49_0 -> m49_1  [key=0, style=solid];
m49_5 -> m49_6  [key=0, style=solid, color=green];
m49_5 -> m49_7  [key=0, style=solid, color=green];
m49_4 -> m49_5  [key=0, style=solid, color=green];
m49_4 -> m49_14  [key=2, style=dotted];
m49_6 -> m49_5  [key=0, style=solid, color=green];
m49_6 -> m49_15  [key=2, style=dotted, color=green];
m49_7 -> m49_8  [key=0, style=solid];
m49_7 -> m49_9  [key=0, style=solid];
m49_1 -> m49_2  [key=0, style=solid];
m49_1 -> n166  [key=2, style=dotted];
m49_2 -> m49_3  [key=0, style=solid];
m49_2 -> m49_12  [key=2, style=dotted];
m49_3 -> m49_4  [key=0, style=solid];
m49_3 -> m49_13  [key=2, style=dotted];
m49_8 -> m49_7  [key=0, style=solid];
m49_8 -> m49_15  [key=2, style=dotted];
m49_9 -> m49_10  [key=0, style=solid];
m49_9 -> m49_16  [key=2, style=dotted];
m49_10 -> m49_0  [key=0, style=bold, color=blue];
m49_37 -> m49_38  [key=0, style=solid];
m49_38 -> m49_39  [key=0, style=solid];
m49_38 -> m49_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, QuantConnect.Data.Market.TradeBar>"];
m49_39 -> m49_37  [key=0, style=bold, color=blue];
m49_40 -> m49_5  [key=1, style=dashed, color=green, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_6  [key=1, style=dashed, color=green, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_23  [key=1, style=dashed, color=green, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m49_40 -> m49_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Stress_Symbols"];
m50_13 -> m50_14  [key=0, style=solid];
m50_14 -> m50_15  [key=0, style=solid];
m50_14 -> m50_16  [key=0, style=solid];
m50_15 -> m50_16  [key=0, style=solid];
m50_15 -> m50_22  [key=2, style=dotted];
m50_15 -> m50_23  [key=2, style=dotted];
m50_16 -> m50_17  [key=0, style=solid];
m50_16 -> m50_21  [key=0, style=solid];
m50_17 -> m50_18  [key=0, style=solid];
m50_17 -> m50_24  [key=2, style=dotted];
m50_18 -> m50_19  [key=0, style=solid];
m50_18 -> m50_25  [key=2, style=dotted];
m50_19 -> m50_20  [key=0, style=solid];
m50_19 -> m50_26  [key=2, style=dotted];
m50_19 -> m50_27  [key=2, style=dotted];
m50_20 -> m50_21  [key=0, style=solid];
m50_20 -> m50_26  [key=2, style=dotted];
m50_20 -> m50_28  [key=2, style=dotted];
m50_21 -> m50_13  [key=0, style=bold, color=blue];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_2  [key=0, style=solid];
m50_1 -> m50_8  [key=2, style=dotted];
m50_2 -> m50_3  [key=0, style=solid];
m50_2 -> m50_9  [key=2, style=dotted];
m50_3 -> m50_4  [key=0, style=solid];
m50_3 -> m50_10  [key=2, style=dotted];
m50_4 -> m50_5  [key=0, style=solid];
m50_4 -> m50_11  [key=2, style=dotted];
m50_5 -> m50_6  [key=0, style=solid];
m50_5 -> m50_11  [key=2, style=dotted];
m50_6 -> m50_7  [key=0, style=solid];
m50_6 -> m50_12  [key=2, style=dotted];
m50_7 -> m50_0  [key=0, style=bold, color=blue];
m50_49 -> m50_50  [key=0, style=solid];
m50_49 -> m50_51  [key=1, style=dashed, color=darkseagreen4, label=bool];
m50_49 -> m50_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m50_49 -> m50_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.SubscriptionDataConfig"];
m50_49 -> m50_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m50_50 -> m50_51  [key=0, style=solid];
m50_50 -> m50_69  [key=2, style=dotted];
m50_50 -> m50_58  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_50 -> m50_64  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_50 -> m50_66  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_50 -> m50_67  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_51 -> m50_52  [key=0, style=solid];
m50_51 -> m50_57  [key=0, style=solid];
m50_52 -> m50_53  [key=0, style=solid];
m50_52 -> m50_70  [key=2, style=dotted];
m50_52 -> m50_54  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_52 -> m50_55  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_52 -> m50_56  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_52 -> m50_58  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_52 -> m50_64  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_52 -> m50_66  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_52 -> m50_67  [key=1, style=dashed, color=darkseagreen4, label=coin];
m50_54 -> m50_55  [key=0, style=solid];
m50_57 -> m50_58  [key=0, style=solid];
m50_57 -> m50_71  [key=2, style=dotted];
m50_57 -> m50_59  [key=1, style=dashed, color=darkseagreen4, label=data];
m50_57 -> m50_60  [key=1, style=dashed, color=darkseagreen4, label=data];
m50_57 -> m50_61  [key=1, style=dashed, color=darkseagreen4, label=data];
m50_57 -> m50_62  [key=1, style=dashed, color=darkseagreen4, label=data];
m50_57 -> m50_63  [key=1, style=dashed, color=darkseagreen4, label=data];
m50_57 -> m50_64  [key=1, style=dashed, color=darkseagreen4, label=data];
m50_57 -> m50_65  [key=1, style=dashed, color=darkseagreen4, label=data];
m50_58 -> m50_59  [key=0, style=solid];
m50_58 -> m50_72  [key=2, style=dotted];
m50_64 -> m50_65  [key=0, style=solid];
m50_64 -> m50_73  [key=2, style=dotted];
m50_66 -> m50_67  [key=0, style=solid];
m50_67 -> m50_68  [key=0, style=solid];
m50_53 -> m50_54  [key=0, style=solid];
m50_55 -> m50_56  [key=0, style=solid];
m50_56 -> m50_68  [key=0, style=solid];
m50_59 -> m50_60  [key=0, style=solid];
m50_59 -> m50_73  [key=2, style=dotted];
m50_60 -> m50_61  [key=0, style=solid];
m50_60 -> m50_73  [key=2, style=dotted];
m50_61 -> m50_62  [key=0, style=solid];
m50_61 -> m50_73  [key=2, style=dotted];
m50_62 -> m50_63  [key=0, style=solid];
m50_62 -> m50_73  [key=2, style=dotted];
m50_63 -> m50_64  [key=0, style=solid];
m50_63 -> m50_73  [key=2, style=dotted];
m50_65 -> m50_66  [key=0, style=solid];
m50_65 -> m50_73  [key=2, style=dotted];
m50_68 -> m50_49  [key=0, style=bold, color=blue];
m50_43 -> m50_44  [key=0, style=solid];
m50_44 -> m50_45  [key=0, style=solid];
m50_44 -> m50_46  [key=0, style=solid];
m50_45 -> m50_47  [key=0, style=solid];
m50_45 -> m50_48  [key=2, style=dotted];
m50_46 -> m50_47  [key=0, style=solid];
m50_46 -> m50_48  [key=2, style=dotted];
m50_47 -> m50_43  [key=0, style=bold, color=blue];
m50_29 -> m50_30  [key=0, style=solid];
m50_29 -> m50_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBars"];
m50_30 -> m50_31  [key=0, style=solid];
m50_30 -> m50_35  [key=0, style=solid];
m50_30 -> m50_36  [key=2, style=dotted];
m50_31 -> m50_32  [key=0, style=solid];
m50_31 -> m50_37  [key=2, style=dotted];
m50_32 -> m50_33  [key=0, style=solid];
m50_32 -> m50_24  [key=2, style=dotted];
m50_33 -> m50_34  [key=0, style=solid];
m50_33 -> m50_38  [key=2, style=dotted];
m50_33 -> m50_39  [key=2, style=dotted];
m50_34 -> m50_35  [key=0, style=solid];
m50_34 -> m50_25  [key=2, style=dotted];
m50_35 -> m50_29  [key=0, style=bold, color=blue];
m50_40 -> m50_41  [key=0, style=solid];
m50_41 -> m50_42  [key=0, style=solid];
m50_42 -> m50_40  [key=0, style=bold, color=blue];
m50_74 -> m50_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_74 -> m50_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.LiveTradingFeaturesAlgorithm"];
m50_75 -> m50_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Bitcoin"];
m52_33 -> m52_34  [key=0, style=solid];
m52_33 -> m52_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_34 -> m52_35  [key=0, style=solid];
m52_34 -> m52_38  [key=2, style=dotted];
m52_34 -> m52_37  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Interfaces.IBrokerageFactory"];
m52_36 -> m52_37  [key=0, style=solid];
m52_36 -> m52_40  [key=2, style=dotted];
m52_35 -> m52_36  [key=0, style=solid];
m52_35 -> m52_39  [key=2, style=dotted];
m52_37 -> m52_33  [key=0, style=bold, color=blue];
m52_29 -> m52_30  [key=0, style=solid];
m52_26 -> m52_27  [key=0, style=solid];
m52_26 -> m52_28  [key=2, style=dotted];
m52_26 -> m52_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m52_30 -> m52_31  [key=0, style=solid];
m52_30 -> m52_32  [key=2, style=dotted];
m52_25 -> m52_26  [key=0, style=solid];
m52_27 -> m52_25  [key=0, style=bold, color=blue];
m52_31 -> m52_29  [key=0, style=bold, color=blue];
m52_10 -> m52_11  [key=0, style=solid];
m52_10 -> m52_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m52_10 -> m52_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m52_11 -> m52_12  [key=0, style=solid];
m52_14 -> m52_15  [key=0, style=solid];
m52_14 -> m52_21  [key=2, style=dotted];
m52_14 -> n300  [key=2, style=dotted];
m52_14 -> m52_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m52_15 -> m52_16  [key=0, style=solid];
m52_15 -> m52_23  [key=2, style=dotted];
m52_15 -> m52_17  [key=1, style=dashed, color=darkseagreen4, label=error];
m52_15 -> m52_18  [key=1, style=dashed, color=darkseagreen4, label=algorithm];
m52_12 -> m52_13  [key=0, style=solid];
m52_13 -> m52_14  [key=0, style=solid];
m52_13 -> m52_20  [key=2, style=dotted];
m52_13 -> m52_26  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m52_13 -> m52_30  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m52_16 -> m52_17  [key=0, style=solid];
m52_16 -> m52_18  [key=0, style=solid];
m52_17 -> m52_19  [key=0, style=solid];
m52_17 -> m52_24  [key=2, style=dotted];
m52_18 -> m52_19  [key=0, style=solid];
m52_19 -> m52_10  [key=0, style=bold, color=blue];
m52_41 -> m52_42  [key=0, style=solid];
m52_41 -> m52_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m52_41 -> m52_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m52_41 -> m52_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m52_41 -> m52_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Packets.AlgorithmNodePacket"];
m52_41 -> m52_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_41 -> m52_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m52_42 -> m52_43  [key=0, style=solid];
m52_42 -> m52_69  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m52_43 -> m52_44  [key=0, style=solid];
m52_43 -> m52_62  [key=0, style=solid];
m52_44 -> m52_45  [key=0, style=solid];
m52_44 -> m52_54  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m52_44 -> m52_55  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m52_44 -> m52_56  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m52_44 -> m52_57  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m52_44 -> m52_58  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m52_44 -> m52_59  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m52_44 -> m52_60  [key=1, style=dashed, color=darkseagreen4, label=backtestJob];
m52_45 -> m52_46  [key=0, style=solid];
m52_45 -> m52_71  [key=2, style=dotted];
m52_46 -> m52_47  [key=0, style=solid];
m52_46 -> m52_72  [key=2, style=dotted];
m52_47 -> m52_48  [key=0, style=solid];
m52_47 -> m52_73  [key=2, style=dotted];
m52_48 -> m52_49  [key=0, style=solid];
m52_48 -> m52_74  [key=2, style=dotted];
m52_48 -> m52_75  [key=2, style=dotted];
m52_49 -> m52_50  [key=0, style=solid];
m52_49 -> m52_76  [key=2, style=dotted];
m52_50 -> m52_51  [key=0, style=solid];
m52_50 -> m52_77  [key=2, style=dotted];
m52_50 -> m52_78  [key=2, style=dotted];
m52_50 -> m52_79  [key=2, style=dotted];
m52_51 -> m52_52  [key=0, style=solid];
m52_51 -> m52_80  [key=2, style=dotted];
m52_51 -> m52_81  [key=2, style=dotted];
m52_51 -> m52_82  [key=2, style=dotted];
m52_52 -> m52_53  [key=0, style=solid];
m52_52 -> m52_83  [key=2, style=dotted];
m52_53 -> m52_54  [key=0, style=solid];
m52_53 -> m52_84  [key=2, style=dotted];
m52_53 -> m52_85  [key=2, style=dotted];
m52_54 -> m52_55  [key=0, style=solid];
m52_55 -> m52_56  [key=0, style=solid];
m52_56 -> m52_57  [key=0, style=solid];
m52_56 -> m52_86  [key=2, style=dotted];
m52_58 -> m52_59  [key=0, style=solid];
m52_59 -> m52_60  [key=0, style=solid];
m52_61 -> m52_63  [key=0, style=solid];
m52_61 -> m52_66  [key=0, style=solid];
m52_68 -> m52_69  [key=0, style=solid];
m52_68 -> m52_90  [key=2, style=dotted];
m52_69 -> m52_70  [key=0, style=solid];
m52_62 -> m52_66  [key=0, style=solid];
m52_62 -> m52_24  [key=2, style=dotted];
m52_57 -> m52_58  [key=0, style=solid];
m52_60 -> m52_61  [key=0, style=solid];
m52_63 -> m52_64  [key=0, style=solid];
m52_66 -> m52_67  [key=0, style=solid];
m52_66 -> m52_68  [key=0, style=solid];
m52_64 -> m52_65  [key=0, style=solid];
m52_64 -> m52_87  [key=2, style=dotted];
m52_65 -> m52_66  [key=0, style=solid];
m52_65 -> m52_88  [key=2, style=dotted];
m52_65 -> m52_89  [key=2, style=dotted];
m52_67 -> m52_68  [key=0, style=solid];
m52_67 -> m52_69  [key=1, style=dashed, color=darkseagreen4, label=initializeComplete];
m52_70 -> m52_41  [key=0, style=bold, color=blue];
m52_32 -> m52_99  [key=0, style=solid];
m52_32 -> m52_101  [key=1, style=dashed, color=darkseagreen4, label=string];
m52_99 -> m52_100  [key=0, style=solid];
m52_99 -> m52_101  [key=0, style=solid];
m52_99 -> m52_103  [key=2, style=dotted];
m52_101 -> m52_102  [key=0, style=solid];
m52_101 -> m52_104  [key=2, style=dotted];
m52_101 -> m52_105  [key=2, style=dotted];
m52_100 -> m52_102  [key=0, style=solid];
m52_102 -> m52_32  [key=0, style=bold, color=blue];
m52_74 -> m52_91  [key=0, style=solid];
m52_91 -> m52_92  [key=0, style=solid];
m52_91 -> m52_20  [key=2, style=dotted];
m52_91 -> m52_93  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
m52_91 -> m52_94  [key=1, style=dashed, color=darkseagreen4, label=dataFeedsConfigString];
m52_92 -> m52_93  [key=0, style=solid];
m52_92 -> m52_97  [key=2, style=dotted];
m52_92 -> m52_95  [key=1, style=dashed, color=darkseagreen4, label=dataFeeds];
m52_93 -> m52_94  [key=0, style=solid];
m52_93 -> m52_95  [key=0, style=solid];
m52_94 -> m52_95  [key=0, style=solid];
m52_94 -> m52_98  [key=2, style=dotted];
m52_95 -> m52_96  [key=0, style=solid];
m52_96 -> m52_74  [key=0, style=bold, color=blue];
m52_106 -> m52_107  [key=0, style=solid];
m52_107 -> m52_106  [key=0, style=bold, color=blue];
m52_0 -> m52_1  [key=0, style=solid];
m52_1 -> m52_2  [key=0, style=solid];
m52_2 -> m52_3  [key=0, style=solid];
m52_3 -> m52_4  [key=0, style=solid];
m52_3 -> m52_7  [key=2, style=dotted];
m52_4 -> m52_5  [key=0, style=solid];
m52_4 -> m52_8  [key=2, style=dotted];
m52_5 -> m52_6  [key=0, style=solid];
m52_5 -> m52_9  [key=2, style=dotted];
m52_6 -> m52_0  [key=0, style=bold, color=blue];
m52_108 -> m52_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m52_108 -> m52_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m52_108 -> m52_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m52_108 -> m52_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m52_108 -> m52_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m52_108 -> m52_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m52_108 -> m52_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m52_108 -> m52_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m52_108 -> m52_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler"];
m52_109 -> m52_26  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m52_109 -> m52_30  [key=1, style=dashed, color=darkseagreen4, label=algorithmName];
m53_0 -> m53_1  [key=0, style=solid];
m53_1 -> m53_0  [key=0, style=bold, color=blue];
m53_1 -> m53_2  [key=0, style=solid];
m53_1 -> m53_7  [key=2, style=dotted];
m53_11 -> m53_12  [key=0, style=solid];
m53_15 -> m53_16  [key=0, style=solid, color=green];
m53_14 -> m53_15  [key=0, style=solid, color=green];
m53_14 -> m53_20  [key=2, style=dotted];
m53_16 -> m53_17  [key=0, style=solid, color=green];
m53_16 -> m53_19  [key=0, style=solid];
m53_17 -> m53_18  [key=0, style=solid, color=green];
m53_18 -> m53_19  [key=0, style=solid];
m53_18 -> m53_21  [key=2, style=dotted];
m53_12 -> m53_16  [key=0, style=solid];
m53_12 -> m53_13  [key=0, style=solid];
m53_13 -> m53_14  [key=0, style=solid];
m53_19 -> m53_11  [key=0, style=bold, color=blue];
m53_2 -> m53_3  [key=0, style=solid];
m53_2 -> m53_8  [key=2, style=dotted];
m53_3 -> m53_4  [key=0, style=solid];
m53_3 -> m53_9  [key=2, style=dotted];
m53_4 -> m53_5  [key=0, style=solid];
m53_4 -> m53_10  [key=2, style=dotted];
m53_5 -> m53_6  [key=0, style=solid];
m53_6 -> m53_0  [key=0, style=bold, color=blue];
m53_22 -> m53_23  [key=0, style=solid];
m53_22 -> m53_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m53_23 -> m53_24  [key=0, style=solid];
m53_23 -> m53_26  [key=2, style=dotted];
m53_24 -> m53_25  [key=0, style=solid];
m53_24 -> m53_27  [key=2, style=dotted];
m53_25 -> m53_22  [key=0, style=bold, color=blue];
m53_28 -> m53_15  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_17  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m53_28 -> m53_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.MarketOnOpenOnCloseAlgorithm"];
m55_0 -> m55_1  [key=0, style=solid];
m55_0 -> m55_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Interfaces.ISecurityTransactionModel"];
m55_0 -> m55_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.ISecurityMarginModel"];
m55_1 -> m55_2  [key=0, style=solid];
m55_2 -> m55_3  [key=0, style=solid];
m55_3 -> m55_4  [key=0, style=solid];
m55_4 -> m55_5  [key=0, style=solid];
m55_5 -> m55_6  [key=0, style=solid];
m55_6 -> m55_0  [key=0, style=bold, color=blue];
m55_10 -> m55_11  [key=0, style=solid];
m55_11 -> m55_12  [key=0, style=solid];
m55_12 -> m55_10  [key=0, style=bold, color=blue];
m55_23 -> m55_24  [key=0, style=solid];
m55_24 -> m55_25  [key=0, style=solid];
m55_25 -> m55_23  [key=0, style=bold, color=blue];
m55_26 -> m55_27  [key=0, style=solid];
m55_27 -> m55_28  [key=0, style=solid];
m55_27 -> m55_29  [key=0, style=solid];
m55_28 -> m55_31  [key=0, style=solid];
m55_29 -> m55_30  [key=0, style=solid];
m55_29 -> m55_32  [key=2, style=dotted];
m55_30 -> m55_31  [key=0, style=solid];
m55_31 -> m55_26  [key=0, style=bold, color=blue];
m55_19 -> m55_20  [key=0, style=solid];
m55_19 -> m55_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m55_20 -> m55_21  [key=0, style=solid];
m55_21 -> m55_22  [key=0, style=solid];
m55_22 -> m55_19  [key=0, style=bold, color=blue];
m55_16 -> m55_17  [key=0, style=solid];
m55_17 -> m55_18  [key=0, style=solid];
m55_18 -> m55_16  [key=0, style=bold, color=blue];
m55_7 -> m55_8  [key=0, style=solid];
m55_8 -> m55_9  [key=0, style=solid];
m55_9 -> m55_7  [key=0, style=bold, color=blue];
m55_13 -> m55_14  [key=0, style=solid];
m55_14 -> m55_15  [key=0, style=solid];
m55_15 -> m55_13  [key=0, style=bold, color=blue];
m55_33 -> m55_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m55_33 -> m55_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.SecurityHolding"];
m56_41 -> m56_41  [key=3, color=darkorchid, style=bold, label="Field variable decimal MaximumLeverage"];
m56_155 -> m56_187  [key=0, style=solid];
m56_155 -> m56_146  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal stopPrice"];
m56_187 -> m56_188  [key=0, style=solid];
m56_187 -> m56_189  [key=2, style=dotted];
m56_188 -> m56_155  [key=0, style=bold, color=blue];
m56_170 -> m56_171  [key=0, style=solid];
m56_52 -> m56_53  [key=0, style=solid];
m56_53 -> m56_54  [key=0, style=solid];
m56_53 -> m56_55  [key=2, style=dotted];
m56_54 -> m56_52  [key=0, style=bold, color=blue];
m56_171 -> m56_172  [key=0, style=solid];
m56_172 -> m56_170  [key=0, style=bold, color=blue];
m56_189 -> m56_190  [key=0, style=solid, color=red];
m56_189 -> m56_155  [key=3, color=darkorchid, style=bold, label="Parameter variable decimal stopPrice"];
m56_190 -> m56_191  [key=0, style=solid, color=red];
m56_191 -> m56_189  [key=0, style=bold, color=blue];
m56_56 -> m56_57  [key=0, style=solid];
m56_57 -> m56_58  [key=0, style=solid];
m56_57 -> m56_45  [key=2, style=dotted];
m56_57 -> m56_60  [key=1, style=dashed, color=darkseagreen4, label=history];
m56_58 -> m56_59  [key=0, style=solid];
m56_58 -> n299  [key=2, style=dotted];
m56_60 -> m56_61  [key=0, style=solid];
m56_60 -> m56_63  [key=0, style=solid];
m56_60 -> m56_62  [key=1, style=dashed, color=darkseagreen4, label=tradeBar];
m56_59 -> m56_60  [key=0, style=solid];
m56_59 -> m56_69  [key=2, style=dotted];
m56_61 -> m56_62  [key=0, style=solid];
m56_61 -> m56_70  [key=2, style=dotted];
m56_63 -> m56_64  [key=0, style=solid];
m56_62 -> m56_60  [key=0, style=solid];
m56_62 -> m56_71  [key=2, style=dotted];
m56_64 -> m56_65  [key=0, style=solid];
m56_65 -> m56_66  [key=0, style=solid];
m56_65 -> m56_72  [key=2, style=dotted];
m56_66 -> m56_67  [key=0, style=solid];
m56_66 -> m56_73  [key=2, style=dotted];
m56_66 -> m56_72  [key=2, style=dotted];
m56_67 -> m56_56  [key=0, style=bold, color=blue];
m56_110 -> m56_114  [key=0, style=solid];
m56_114 -> m56_115  [key=0, style=solid];
m56_114 -> m56_116  [key=0, style=solid];
m56_115 -> m56_139  [key=0, style=solid];
m56_116 -> m56_117  [key=0, style=solid];
m56_116 -> m56_118  [key=1, style=dashed, color=darkseagreen4, label=expectedCaptureRange];
m56_117 -> m56_118  [key=0, style=solid];
m56_118 -> m56_119  [key=0, style=solid];
m56_118 -> m56_120  [key=1, style=dashed, color=darkseagreen4, label=shares];
m56_119 -> m56_120  [key=0, style=solid];
m56_119 -> m56_140  [key=2, style=dotted];
m56_120 -> m56_121  [key=0, style=solid];
m56_120 -> m56_141  [key=2, style=dotted];
m56_120 -> m56_120  [key=1, style=dashed, color=darkseagreen4, label=shares];
m56_120 -> m56_122  [key=1, style=dashed, color=darkseagreen4, label=shares];
m56_120 -> m56_123  [key=1, style=dashed, color=darkseagreen4, label=shares];
m56_120 -> m56_127  [key=1, style=dashed, color=darkseagreen4, label=shares];
m56_120 -> m56_131  [key=1, style=dashed, color=darkseagreen4, label=shares];
m56_120 -> m56_136  [key=1, style=dashed, color=darkseagreen4, label=shares];
m56_120 -> m56_138  [key=1, style=dashed, color=darkseagreen4, label=shares];
m56_121 -> m56_122  [key=0, style=solid];
m56_121 -> m56_130  [key=0, style=solid];
m56_122 -> m56_123  [key=0, style=solid];
m56_122 -> m56_142  [key=2, style=dotted];
m56_123 -> m56_124  [key=0, style=solid];
m56_123 -> m56_73  [key=2, style=dotted];
m56_123 -> m56_72  [key=2, style=dotted];
m56_127 -> m56_128  [key=0, style=solid];
m56_127 -> m56_143  [key=2, style=dotted];
m56_131 -> m56_132  [key=0, style=solid];
m56_131 -> m56_142  [key=2, style=dotted];
m56_136 -> m56_137  [key=0, style=solid];
m56_136 -> m56_143  [key=2, style=dotted];
m56_138 -> m56_139  [key=0, style=solid];
m56_138 -> m56_73  [key=2, style=dotted];
m56_138 -> m56_72  [key=2, style=dotted];
m56_130 -> m56_131  [key=0, style=solid];
m56_130 -> m56_139  [key=0, style=solid];
m56_124 -> m56_125  [key=0, style=solid];
m56_124 -> m56_108  [key=2, style=dotted];
m56_125 -> m56_126  [key=0, style=solid];
m56_126 -> m56_127  [key=0, style=solid];
m56_126 -> m56_129  [key=1, style=dashed, color=darkseagreen4, label=stopPrice];
m56_129 -> m56_139  [key=0, style=solid];
m56_129 -> m56_73  [key=2, style=dotted];
m56_129 -> m56_72  [key=2, style=dotted];
m56_128 -> m56_129  [key=0, style=solid];
m56_128 -> m56_139  [key=0, style=solid];
m56_132 -> m56_133  [key=0, style=solid];
m56_132 -> m56_73  [key=2, style=dotted];
m56_132 -> m56_72  [key=2, style=dotted];
m56_133 -> m56_134  [key=0, style=solid];
m56_133 -> m56_108  [key=2, style=dotted];
m56_134 -> m56_135  [key=0, style=solid];
m56_135 -> m56_136  [key=0, style=solid];
m56_135 -> m56_138  [key=1, style=dashed, color=darkseagreen4, label=stopPrice];
m56_137 -> m56_138  [key=0, style=solid];
m56_137 -> m56_139  [key=0, style=solid];
m56_139 -> m56_110  [key=0, style=bold, color=blue];
m56_167 -> m56_178  [key=0, style=solid];
m56_167 -> m56_181  [key=1, style=dashed, color=darkseagreen4, label=object];
m56_167 -> m56_182  [key=1, style=dashed, color=darkseagreen4, label=object];
m56_167 -> m56_183  [key=1, style=dashed, color=darkseagreen4, label=object];
m56_178 -> m56_179  [key=0, style=solid];
m56_178 -> m56_180  [key=0, style=solid];
m56_181 -> m56_182  [key=0, style=solid];
m56_181 -> m56_185  [key=2, style=dotted];
m56_181 -> m56_186  [key=2, style=dotted];
m56_182 -> m56_184  [key=0, style=solid];
m56_182 -> m56_185  [key=2, style=dotted];
m56_182 -> m56_72  [key=2, style=dotted];
m56_183 -> m56_184  [key=0, style=solid];
m56_183 -> m56_185  [key=2, style=dotted];
m56_183 -> m56_72  [key=2, style=dotted];
m56_179 -> m56_184  [key=0, style=solid];
m56_180 -> m56_181  [key=0, style=solid];
m56_180 -> m56_183  [key=0, style=solid];
m56_184 -> m56_167  [key=0, style=bold, color=blue];
m56_158 -> m56_159  [key=0, style=solid];
m56_158 -> m56_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m56_158 -> m56_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m56_158 -> m56_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m56_158 -> m56_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m56_159 -> m56_160  [key=0, style=solid];
m56_159 -> m56_161  [key=0, style=solid];
m56_159 -> m56_166  [key=2, style=dotted];
m56_160 -> m56_161  [key=0, style=solid];
m56_160 -> m56_167  [key=2, style=dotted];
m56_161 -> m56_162  [key=0, style=solid];
m56_161 -> m56_165  [key=0, style=solid];
m56_163 -> m56_164  [key=0, style=solid];
m56_163 -> m56_168  [key=2, style=dotted];
m56_163 -> m56_169  [key=2, style=dotted];
m56_163 -> m56_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_162 -> m56_163  [key=0, style=solid];
m56_165 -> m56_158  [key=0, style=bold, color=blue];
m56_164 -> m56_165  [key=0, style=solid];
m56_164 -> m56_108  [key=2, style=dotted];
m56_0 -> m56_1  [key=0, style=solid];
m56_1 -> m56_2  [key=0, style=solid];
m56_1 -> m56_29  [key=2, style=dotted];
m56_2 -> m56_3  [key=0, style=solid];
m56_2 -> m56_30  [key=2, style=dotted];
m56_3 -> m56_4  [key=0, style=solid];
m56_3 -> m56_31  [key=2, style=dotted];
m56_4 -> m56_5  [key=0, style=solid];
m56_4 -> m56_32  [key=2, style=dotted];
m56_5 -> m56_6  [key=0, style=solid];
m56_5 -> m56_33  [key=2, style=dotted];
m56_6 -> m56_7  [key=0, style=solid];
m56_7 -> m56_8  [key=0, style=solid];
m56_7 -> m56_34  [key=2, style=dotted];
m56_8 -> m56_9  [key=0, style=solid];
m56_8 -> m56_35  [key=2, style=dotted];
m56_9 -> m56_10  [key=0, style=solid];
m56_9 -> m56_36  [key=2, style=dotted];
m56_10 -> m56_11  [key=0, style=solid];
m56_10 -> m56_37  [key=2, style=dotted];
m56_11 -> m56_12  [key=0, style=solid];
m56_11 -> m56_38  [key=2, style=dotted];
m56_12 -> m56_13  [key=0, style=solid];
m56_12 -> m56_14  [key=1, style=dashed, color=darkseagreen4, label=oneWeekInMarketHours];
m56_12 -> m56_12  [key=3, color=darkorchid, style=bold, label="Local variable int oneWeekInMarketHours"];
m56_13 -> m56_14  [key=0, style=solid];
m56_13 -> m56_39  [key=2, style=dotted];
m56_13 -> m56_40  [key=2, style=dotted];
m56_14 -> m56_15  [key=0, style=solid];
m56_14 -> m56_39  [key=2, style=dotted];
m56_14 -> m56_40  [key=2, style=dotted];
m56_15 -> m56_16  [key=0, style=solid];
m56_15 -> m56_41  [key=2, style=dotted];
m56_15 -> m56_17  [key=1, style=dashed, color=darkseagreen4, label=chart];
m56_15 -> m56_18  [key=1, style=dashed, color=darkseagreen4, label=chart];
m56_15 -> m56_19  [key=1, style=dashed, color=darkseagreen4, label=chart];
m56_15 -> m56_20  [key=1, style=dashed, color=darkseagreen4, label=chart];
m56_16 -> m56_17  [key=0, style=solid];
m56_16 -> m56_42  [key=2, style=dotted];
m56_16 -> m56_43  [key=2, style=dotted];
m56_17 -> m56_18  [key=0, style=solid];
m56_17 -> m56_42  [key=2, style=dotted];
m56_17 -> m56_43  [key=2, style=dotted];
m56_18 -> m56_19  [key=0, style=solid];
m56_18 -> m56_42  [key=2, style=dotted];
m56_18 -> m56_43  [key=2, style=dotted];
m56_19 -> m56_20  [key=0, style=solid];
m56_19 -> m56_42  [key=2, style=dotted];
m56_19 -> m56_43  [key=2, style=dotted];
m56_20 -> m56_21  [key=0, style=solid];
m56_20 -> m56_44  [key=2, style=dotted];
m56_21 -> m56_22  [key=0, style=solid];
m56_21 -> m56_45  [key=2, style=dotted];
m56_22 -> m56_23  [key=0, style=solid];
m56_22 -> m56_26  [key=0, style=solid];
m56_22 -> m56_24  [key=1, style=dashed, color=darkseagreen4, label=bar];
m56_22 -> m56_25  [key=1, style=dashed, color=darkseagreen4, label=bar];
m56_23 -> m56_24  [key=0, style=solid];
m56_23 -> m56_46  [key=2, style=dotted];
m56_26 -> m56_27  [key=0, style=solid];
m56_26 -> m56_48  [key=2, style=dotted];
m56_26 -> m56_49  [key=2, style=dotted];
m56_26 -> m56_50  [key=2, style=dotted];
m56_26 -> m56_51  [key=2, style=dotted];
m56_24 -> m56_25  [key=0, style=solid];
m56_24 -> m56_46  [key=2, style=dotted];
m56_25 -> m56_22  [key=0, style=solid];
m56_25 -> m56_47  [key=2, style=dotted];
m56_27 -> m56_28  [key=0, style=solid];
m56_27 -> m56_48  [key=2, style=dotted];
m56_27 -> m56_49  [key=2, style=dotted];
m56_27 -> m56_50  [key=2, style=dotted];
m56_27 -> m56_51  [key=2, style=dotted];
m56_27 -> m56_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m56_28 -> m56_0  [key=0, style=bold, color=blue];
m56_173 -> m56_174  [key=0, style=solid];
m56_174 -> m56_175  [key=0, style=solid];
m56_174 -> m56_176  [key=0, style=solid];
m56_175 -> m56_176  [key=0, style=solid];
m56_175 -> m56_177  [key=2, style=dotted];
m56_176 -> m56_173  [key=0, style=bold, color=blue];
m56_111 -> m56_144  [key=0, style=solid];
m56_144 -> m56_145  [key=0, style=solid];
m56_144 -> m56_146  [key=0, style=solid];
m56_145 -> m56_153  [key=0, style=solid];
m56_146 -> m56_147  [key=0, style=solid];
m56_146 -> m56_154  [key=2, style=dotted];
m56_147 -> m56_148  [key=0, style=solid];
m56_147 -> m56_150  [key=0, style=solid];
m56_147 -> m56_155  [key=2, style=dotted];
m56_148 -> m56_149  [key=0, style=solid];
m56_150 -> m56_151  [key=0, style=solid];
m56_150 -> m56_153  [key=0, style=solid];
m56_149 -> m56_150  [key=0, style=solid];
m56_149 -> m56_73  [key=2, style=dotted];
m56_149 -> m56_72  [key=2, style=dotted];
m56_151 -> m56_152  [key=0, style=solid];
m56_151 -> m56_156  [key=2, style=dotted];
m56_151 -> m56_157  [key=2, style=dotted];
m56_152 -> m56_153  [key=0, style=solid];
m56_152 -> m56_73  [key=2, style=dotted];
m56_152 -> m56_72  [key=2, style=dotted];
m56_153 -> m56_111  [key=0, style=bold, color=blue];
m56_74 -> m56_75  [key=0, style=solid];
m56_75 -> m56_76  [key=0, style=solid];
m56_75 -> m56_77  [key=0, style=solid];
m56_76 -> m56_101  [key=0, style=solid];
m56_77 -> m56_78  [key=0, style=solid];
m56_77 -> m56_84  [key=0, style=solid];
m56_78 -> m56_79  [key=0, style=solid];
m56_84 -> m56_85  [key=0, style=solid];
m56_84 -> m56_107  [key=2, style=dotted];
m56_84 -> m56_46  [key=2, style=dotted];
m56_79 -> m56_80  [key=0, style=solid];
m56_79 -> m56_102  [key=2, style=dotted];
m56_80 -> m56_81  [key=0, style=solid];
m56_80 -> m56_103  [key=2, style=dotted];
m56_81 -> m56_82  [key=0, style=solid];
m56_81 -> m56_104  [key=2, style=dotted];
m56_82 -> m56_83  [key=0, style=solid];
m56_82 -> m56_105  [key=2, style=dotted];
m56_83 -> m56_84  [key=0, style=solid];
m56_83 -> m56_106  [key=2, style=dotted];
m56_85 -> m56_86  [key=0, style=solid];
m56_85 -> m56_89  [key=0, style=solid];
m56_86 -> m56_87  [key=0, style=solid];
m56_86 -> m56_108  [key=2, style=dotted];
m56_89 -> m56_90  [key=0, style=solid];
m56_89 -> m56_91  [key=0, style=solid];
m56_87 -> m56_88  [key=0, style=solid];
m56_87 -> m56_89  [key=0, style=solid];
m56_88 -> m56_89  [key=0, style=solid];
m56_88 -> m56_109  [key=2, style=dotted];
m56_90 -> m56_101  [key=0, style=solid];
m56_91 -> m56_92  [key=0, style=solid];
m56_91 -> m56_95  [key=0, style=solid];
m56_92 -> m56_93  [key=0, style=solid];
m56_95 -> m56_96  [key=0, style=solid];
m56_95 -> m56_97  [key=0, style=solid];
m56_93 -> m56_94  [key=0, style=solid];
m56_94 -> m56_101  [key=0, style=solid];
m56_96 -> m56_101  [key=0, style=solid];
m56_96 -> m56_110  [key=2, style=dotted];
m56_97 -> m56_98  [key=0, style=solid];
m56_97 -> m56_99  [key=0, style=solid];
m56_98 -> m56_101  [key=0, style=solid];
m56_98 -> m56_111  [key=2, style=dotted];
m56_99 -> m56_100  [key=0, style=solid];
m56_99 -> m56_101  [key=0, style=solid];
m56_99 -> m56_112  [key=2, style=dotted];
m56_100 -> m56_101  [key=0, style=solid];
m56_100 -> m56_113  [key=2, style=dotted];
m56_101 -> m56_74  [key=0, style=bold, color=blue];
m56_192 -> m56_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_59  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_61  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_65  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_83  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_84  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_85  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_88  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_95  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_99  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_114  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_116  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_117  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_121  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_129  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_131  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_135  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_136  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_148  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_149  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_150  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_160  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_174  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_175  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_180  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_181  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_182  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_187  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_192 -> m56_190  [key=1, style=dashed, color=red, label="QuantConnect.Algorithm.CSharp.OpeningBreakoutAlgorithm"];
m56_193 -> m56_171  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m58_44 -> m58_45  [key=0, style=solid];
m58_16 -> m58_17  [key=0, style=solid];
m58_17 -> m58_18  [key=0, style=solid];
m58_17 -> m58_19  [key=2, style=dotted];
m58_17 -> m58_20  [key=2, style=dotted];
m58_17 -> n301  [key=2, style=dotted];
m58_17 -> m58_22  [key=2, style=dotted];
m58_18 -> m58_16  [key=0, style=bold, color=blue];
m58_45 -> m58_46  [key=0, style=solid];
m58_46 -> m58_44  [key=0, style=bold, color=blue];
m58_0 -> m58_1  [key=0, style=solid];
m58_1 -> m58_2  [key=0, style=solid];
m58_1 -> m58_9  [key=2, style=dotted];
m58_2 -> m58_3  [key=0, style=solid];
m58_2 -> m58_10  [key=2, style=dotted];
m58_3 -> m58_4  [key=0, style=solid];
m58_3 -> m58_11  [key=2, style=dotted];
m58_4 -> m58_5  [key=0, style=solid];
m58_4 -> m58_12  [key=2, style=dotted];
m58_4 -> m58_7  [key=1, style=dashed, color=darkseagreen4, label=equity];
m58_5 -> m58_6  [key=0, style=solid];
m58_5 -> m58_13  [key=2, style=dotted];
m58_7 -> m58_8  [key=0, style=solid];
m58_7 -> m58_15  [key=2, style=dotted];
m58_6 -> m58_7  [key=0, style=solid];
m58_6 -> m58_14  [key=2, style=dotted];
m58_6 -> m58_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m58_8 -> m58_0  [key=0, style=bold, color=blue];
m58_23 -> m58_24  [key=0, style=solid];
m58_24 -> m58_25  [key=0, style=solid];
m58_24 -> m58_26  [key=0, style=solid];
m58_25 -> m58_26  [key=0, style=solid];
m58_25 -> m58_27  [key=2, style=dotted];
m58_26 -> m58_23  [key=0, style=bold, color=blue];
m58_47 -> m58_48  [key=0, style=solid];
m58_48 -> m58_49  [key=0, style=solid];
m58_48 -> m58_50  [key=2, style=dotted];
m58_48 -> m58_51  [key=2, style=dotted];
m58_49 -> m58_47  [key=0, style=bold, color=blue];
m58_28 -> m58_29  [key=0, style=solid];
m58_28 -> m58_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m58_29 -> m58_30  [key=0, style=solid];
m58_29 -> m58_36  [key=0, style=solid];
m58_31 -> m58_32  [key=0, style=solid];
m58_31 -> m58_36  [key=0, style=solid];
m58_31 -> m58_37  [key=2, style=dotted];
m58_30 -> m58_31  [key=0, style=solid];
m58_32 -> m58_33  [key=0, style=solid];
m58_32 -> m58_38  [key=2, style=dotted];
m58_32 -> m58_39  [key=2, style=dotted];
m58_32 -> m58_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m58_32 -> m58_32  [key=1, style=dashed, color=darkseagreen4, label=optionContract];
m58_32 -> m58_34  [key=1, style=dashed, color=darkseagreen4, label=contracts];
m58_32 -> m58_35  [key=1, style=dashed, color=darkseagreen4, label=contracts];
m58_33 -> m58_34  [key=0, style=solid];
m58_33 -> m58_36  [key=0, style=solid];
m58_33 -> m58_40  [key=2, style=dotted];
m58_34 -> m58_35  [key=0, style=solid];
m58_34 -> m58_41  [key=2, style=dotted];
m58_34 -> m58_42  [key=2, style=dotted];
m58_35 -> m58_36  [key=0, style=solid];
m58_35 -> m58_43  [key=2, style=dotted];
m58_35 -> m58_41  [key=2, style=dotted];
m58_35 -> m58_42  [key=2, style=dotted];
m58_36 -> m58_28  [key=0, style=bold, color=blue];
m58_52 -> m58_53  [key=0, style=solid];
m58_53 -> m58_54  [key=0, style=solid];
m58_53 -> m58_50  [key=2, style=dotted];
m58_53 -> m58_51  [key=2, style=dotted];
m58_54 -> m58_55  [key=0, style=solid];
m58_55 -> m58_52  [key=0, style=bold, color=blue];
m58_56 -> m58_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m58_56 -> m58_54  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OptionExerciseAssignRegressionAlgorithm"];
m59_0 -> m59_1  [key=0, style=solid];
m59_1 -> m59_2  [key=0, style=solid];
m59_1 -> m59_3  [key=2, style=dotted];
m59_2 -> m59_0  [key=0, style=bold, color=blue];
m59_53 -> m59_54  [key=0, style=solid];
m59_55 -> m59_56  [key=0, style=solid];
m59_55 -> m59_58  [key=2, style=dotted];
m59_56 -> m59_57  [key=0, style=solid];
m59_56 -> m59_59  [key=2, style=dotted];
m59_54 -> m59_55  [key=0, style=solid];
m59_57 -> m59_53  [key=0, style=bold, color=blue];
m59_4 -> m59_5  [key=0, style=solid];
m59_4 -> m59_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m59_4 -> m59_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Language"];
m59_4 -> m59_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Language"];
m59_4 -> m59_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m59_4 -> m59_32  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m59_5 -> m59_6  [key=0, style=solid];
m59_5 -> m59_36  [key=2, style=dotted];
m59_7 -> m59_8  [key=0, style=solid];
m59_7 -> m59_38  [key=2, style=dotted];
m59_14 -> m59_15  [key=0, style=solid];
m59_14 -> n353  [key=2, style=dotted];
m59_14 -> m59_38  [key=2, style=dotted];
m59_15 -> m59_16  [key=0, style=solid];
m59_15 -> m59_38  [key=2, style=dotted];
m59_23 -> m59_24  [key=0, style=solid];
m59_23 -> m59_46  [key=2, style=dotted];
m59_32 -> m59_33  [key=0, style=solid];
m59_32 -> m59_35  [key=0, style=solid];
m59_6 -> m59_7  [key=0, style=solid];
m59_6 -> m59_37  [key=2, style=dotted];
m59_8 -> m59_9  [key=0, style=solid];
m59_8 -> m59_38  [key=2, style=dotted];
m59_9 -> m59_10  [key=0, style=solid];
m59_9 -> m59_38  [key=2, style=dotted];
m59_10 -> m59_11  [key=0, style=solid];
m59_10 -> m59_38  [key=2, style=dotted];
m59_11 -> m59_12  [key=0, style=solid];
m59_11 -> m59_38  [key=2, style=dotted];
m59_12 -> m59_13  [key=0, style=solid];
m59_12 -> m59_38  [key=2, style=dotted];
m59_13 -> m59_14  [key=0, style=solid];
m59_13 -> m59_38  [key=2, style=dotted];
m59_16 -> m59_17  [key=0, style=solid];
m59_16 -> m59_29  [key=1, style=dashed, color=darkseagreen4, label=debugEnabled];
m59_17 -> m59_18  [key=0, style=solid];
m59_17 -> m59_40  [key=2, style=dotted];
m59_17 -> m59_41  [key=2, style=dotted];
m59_29 -> m59_30  [key=0, style=solid];
m59_29 -> m59_32  [key=0, style=solid];
m59_18 -> m59_19  [key=0, style=solid];
m59_18 -> m59_42  [key=2, style=dotted];
m59_19 -> m59_20  [key=0, style=solid];
m59_19 -> m59_43  [key=2, style=dotted];
m59_19 -> m59_25  [key=1, style=dashed, color=darkseagreen4, label=algorithmHandlers];
m59_19 -> m59_27  [key=1, style=dashed, color=darkseagreen4, label=algorithmHandlers];
m59_20 -> m59_21  [key=0, style=solid];
m59_20 -> m59_44  [key=2, style=dotted];
m59_20 -> m59_25  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m59_20 -> m59_26  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m59_20 -> m59_55  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m59_25 -> m59_26  [key=0, style=solid];
m59_25 -> m59_47  [key=2, style=dotted];
m59_25 -> m59_56  [key=1, style=dashed, color=darkseagreen4, label=engine];
m59_27 -> m59_28  [key=0, style=solid];
m59_21 -> m59_22  [key=0, style=solid];
m59_26 -> m59_27  [key=0, style=solid];
m59_26 -> m59_48  [key=2, style=dotted];
m59_26 -> m59_49  [key=2, style=dotted];
m59_26 -> m59_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m59_22 -> m59_23  [key=0, style=solid];
m59_22 -> m59_45  [key=2, style=dotted];
m59_24 -> m59_25  [key=0, style=solid];
m59_24 -> m59_45  [key=2, style=dotted];
m59_28 -> m59_29  [key=0, style=solid];
m59_28 -> m59_33  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m59_28 -> m59_34  [key=1, style=dashed, color=darkseagreen4, label=statistics];
m59_33 -> m59_34  [key=0, style=solid];
m59_33 -> m59_51  [key=2, style=dotted];
m59_33 -> m59_52  [key=2, style=dotted];
m59_33 -> m59_33  [key=1, style=dashed, color=darkseagreen4, label=stat];
m59_34 -> m59_32  [key=0, style=solid];
m59_34 -> m59_52  [key=2, style=dotted];
m59_34 -> m59_34  [key=1, style=dashed, color=darkseagreen4, label=stat];
m59_30 -> m59_31  [key=0, style=solid];
m59_31 -> m59_32  [key=0, style=solid];
m59_31 -> m59_50  [key=2, style=dotted];
m59_35 -> m59_4  [key=0, style=bold, color=blue];
m59_60 -> m59_55  [key=1, style=dashed, color=darkseagreen4, label=systemHandlers];
m59_61 -> m59_56  [key=1, style=dashed, color=darkseagreen4, label=engine];
m61_29 -> m61_30  [key=0, style=solid];
m61_30 -> m61_31  [key=0, style=solid];
m61_30 -> m61_32  [key=2, style=dotted];
m61_31 -> m61_29  [key=0, style=bold, color=blue];
m61_0 -> m61_1  [key=0, style=solid];
m61_1 -> m61_0  [key=0, style=bold, color=blue];
m61_2 -> m61_3  [key=0, style=solid];
m61_3 -> m61_4  [key=0, style=solid];
m61_3 -> m61_18  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m61_4 -> m61_5  [key=0, style=solid];
m61_4 -> m61_19  [key=2, style=dotted];
m61_5 -> m61_6  [key=0, style=solid];
m61_5 -> m61_20  [key=2, style=dotted];
m61_5 -> m61_10  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m61_5 -> m61_16  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m61_6 -> m61_7  [key=0, style=solid];
m61_6 -> m61_21  [key=2, style=dotted];
m61_6 -> m61_8  [key=1, style=dashed, color=darkseagreen4, label=parametersConfigString];
m61_10 -> m61_11  [key=0, style=solid];
m61_10 -> m61_23  [key=2, style=dotted];
m61_10 -> m61_24  [key=2, style=dotted];
m61_10 -> m61_21  [key=2, style=dotted];
m61_10 -> m61_30  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m61_10 -> m61_12  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m61_10 -> m61_14  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m61_10 -> m61_15  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m61_16 -> m61_17  [key=0, style=solid];
m61_16 -> m61_28  [key=2, style=dotted];
m61_16 -> m61_24  [key=2, style=dotted];
m61_7 -> m61_8  [key=0, style=solid];
m61_7 -> m61_9  [key=0, style=solid];
m61_8 -> m61_9  [key=0, style=solid];
m61_8 -> m61_22  [key=2, style=dotted];
m61_8 -> m61_10  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m61_8 -> m61_16  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m61_9 -> m61_10  [key=0, style=solid];
m61_9 -> m61_16  [key=0, style=solid];
m61_11 -> m61_12  [key=0, style=solid];
m61_11 -> m61_25  [key=2, style=dotted];
m61_11 -> m61_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m61_12 -> m61_13  [key=0, style=solid];
m61_12 -> m61_15  [key=0, style=solid];
m61_14 -> m61_15  [key=0, style=solid];
m61_14 -> m61_26  [key=2, style=dotted];
m61_14 -> m61_27  [key=2, style=dotted];
m61_15 -> m61_18  [key=0, style=solid];
m61_13 -> m61_14  [key=0, style=solid];
m61_17 -> m61_18  [key=0, style=solid];
m61_18 -> m61_2  [key=0, style=bold, color=blue];
m61_33 -> m61_34  [key=0, style=solid];
m61_34 -> m61_35  [key=0, style=solid];
m61_34 -> m61_37  [key=2, style=dotted];
m61_35 -> m61_36  [key=0, style=solid];
m61_35 -> m61_38  [key=2, style=dotted];
m61_36 -> m61_33  [key=0, style=bold, color=blue];
m61_39 -> m61_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.JobQueue"];
m61_39 -> m61_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.JobQueue"];
m61_39 -> m61_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.JobQueue"];
m61_39 -> m61_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Queues.JobQueue"];
m61_40 -> m61_30  [key=1, style=dashed, color=darkseagreen4, label=liveJob];
m62_21 -> m62_91  [key=0, style=solid];
m62_91 -> m62_92  [key=0, style=solid];
m62_91 -> m62_102  [key=0, style=solid];
m62_91 -> m62_36  [key=2, style=dotted];
m62_92 -> m62_93  [key=0, style=solid];
m62_92 -> m62_37  [key=2, style=dotted];
m62_102 -> m62_103  [key=0, style=solid];
m62_102 -> m62_116  [key=0, style=solid];
m62_93 -> m62_94  [key=0, style=solid];
m62_93 -> m62_95  [key=1, style=dashed, color=darkseagreen4, label=close];
m62_93 -> m62_98  [key=1, style=dashed, color=darkseagreen4, label=close];
m62_93 -> m62_99  [key=1, style=dashed, color=darkseagreen4, label=close];
m62_94 -> m62_95  [key=0, style=solid];
m62_94 -> m62_96  [key=1, style=dashed, color=darkseagreen4, label=stopPrice];
m62_95 -> m62_96  [key=0, style=solid];
m62_98 -> m62_99  [key=0, style=solid];
m62_98 -> m62_100  [key=1, style=dashed, color=darkseagreen4, label=stopPrice];
m62_99 -> m62_100  [key=0, style=solid];
m62_96 -> m62_97  [key=0, style=solid];
m62_96 -> m62_117  [key=2, style=dotted];
m62_97 -> m62_98  [key=0, style=solid];
m62_97 -> n149  [key=2, style=dotted];
m62_100 -> m62_101  [key=0, style=solid];
m62_100 -> m62_117  [key=2, style=dotted];
m62_101 -> m62_102  [key=0, style=solid];
m62_101 -> n149  [key=2, style=dotted];
m62_103 -> m62_104  [key=0, style=solid];
m62_103 -> m62_105  [key=1, style=dashed, color=darkseagreen4, label=longOrder];
m62_103 -> m62_108  [key=1, style=dashed, color=darkseagreen4, label=longOrder];
m62_103 -> m62_109  [key=1, style=dashed, color=darkseagreen4, label=longOrder];
m62_103 -> m62_114  [key=1, style=dashed, color=red, label=longOrder];
m62_104 -> m62_105  [key=0, style=solid];
m62_104 -> m62_110  [key=1, style=dashed, color=darkseagreen4, label=shortOrder];
m62_104 -> m62_111  [key=1, style=dashed, color=darkseagreen4, label=shortOrder];
m62_104 -> m62_115  [key=1, style=dashed, color=darkseagreen4, label=shortOrder];
m62_105 -> m62_106  [key=0, style=solid];
m62_105 -> m62_108  [key=0, style=solid];
m62_105 -> m62_63  [key=2, style=dotted];
m62_108 -> m62_109  [key=0, style=solid];
m62_108 -> m62_65  [key=2, style=dotted];
m62_108 -> m62_112  [key=1, style=dashed, color=darkseagreen4, label=newLongStop];
m62_108 -> m62_114  [key=1, style=dashed, color=red, label=newLongStop];
m62_109 -> m62_110  [key=0, style=solid];
m62_109 -> m62_65  [key=2, style=dotted];
m62_109 -> m62_113  [key=1, style=dashed, color=darkseagreen4, label=newLongLimit];
m62_109 -> m62_114  [key=1, style=dashed, color=red, label=newLongLimit];
m62_114 -> m62_115  [key=0, style=solid, color=red];
m62_114 -> m62_67  [key=2, style=dotted, color=red];
m62_114 -> m62_68  [key=2, style=dotted, color=red];
m62_110 -> m62_111  [key=0, style=solid];
m62_110 -> m62_65  [key=2, style=dotted];
m62_110 -> m62_112  [key=1, style=dashed, color=darkseagreen4, label=newShortStop];
m62_110 -> m62_115  [key=1, style=dashed, color=darkseagreen4, label=newShortStop];
m62_111 -> m62_112  [key=0, style=solid];
m62_111 -> m62_65  [key=2, style=dotted];
m62_111 -> m62_113  [key=1, style=dashed, color=darkseagreen4, label=newShortLimit];
m62_111 -> m62_115  [key=1, style=dashed, color=darkseagreen4, label=newShortLimit];
m62_115 -> m62_116  [key=0, style=solid];
m62_115 -> m62_67  [key=2, style=dotted];
m62_115 -> m62_68  [key=2, style=dotted];
m62_106 -> m62_107  [key=0, style=solid];
m62_106 -> m62_64  [key=2, style=dotted];
m62_107 -> m62_116  [key=0, style=solid];
m62_112 -> m62_113  [key=0, style=solid];
m62_112 -> m62_66  [key=2, style=dotted];
m62_112 -> m62_37  [key=2, style=dotted];
m62_113 -> m62_114  [key=0, style=solid, color=red];
m62_113 -> m62_66  [key=2, style=dotted];
m62_113 -> m62_37  [key=2, style=dotted];
m62_116 -> m62_21  [key=0, style=bold, color=blue];
m62_151 -> m62_152  [key=0, style=solid];
m62_151 -> m62_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m62_152 -> m62_153  [key=0, style=solid];
m62_152 -> m62_155  [key=2, style=dotted];
m62_153 -> m62_154  [key=0, style=solid];
m62_153 -> m62_156  [key=2, style=dotted];
m62_154 -> m62_151  [key=0, style=bold, color=blue];
m62_10 -> m62_11  [key=0, style=solid];
m62_11 -> m62_12  [key=0, style=solid];
m62_11 -> m62_18  [key=2, style=dotted];
m62_12 -> m62_13  [key=0, style=solid];
m62_12 -> m62_19  [key=2, style=dotted];
m62_13 -> m62_14  [key=0, style=solid];
m62_13 -> m62_20  [key=2, style=dotted];
m62_14 -> m62_15  [key=0, style=solid];
m62_14 -> m62_21  [key=2, style=dotted];
m62_15 -> m62_16  [key=0, style=solid];
m62_15 -> m62_22  [key=2, style=dotted];
m62_16 -> m62_17  [key=0, style=solid];
m62_16 -> m62_23  [key=2, style=dotted];
m62_17 -> m62_10  [key=0, style=bold, color=blue];
m62_23 -> m62_118  [key=0, style=solid];
m62_118 -> m62_119  [key=0, style=solid];
m62_118 -> m62_124  [key=0, style=solid];
m62_118 -> m62_36  [key=2, style=dotted];
m62_119 -> m62_120  [key=0, style=solid];
m62_119 -> m62_37  [key=2, style=dotted];
m62_124 -> m62_125  [key=0, style=solid];
m62_124 -> m62_132  [key=0, style=solid];
m62_120 -> m62_121  [key=0, style=solid];
m62_121 -> m62_122  [key=0, style=solid];
m62_121 -> m62_121  [key=1, style=dashed, color=darkseagreen4, label=qty];
m62_122 -> m62_123  [key=0, style=solid];
m62_122 -> m62_136  [key=2, style=dotted];
m62_123 -> m62_124  [key=0, style=solid];
m62_123 -> n149  [key=2, style=dotted];
m62_125 -> m62_126  [key=0, style=solid];
m62_125 -> m62_129  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m62_125 -> m62_131  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m62_132 -> m62_133  [key=0, style=solid];
m62_132 -> m62_135  [key=0, style=solid];
m62_132 -> m62_36  [key=2, style=dotted];
m62_126 -> m62_127  [key=0, style=solid];
m62_126 -> m62_129  [key=0, style=solid];
m62_129 -> m62_130  [key=0, style=solid];
m62_129 -> m62_131  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m62_131 -> m62_132  [key=0, style=solid];
m62_131 -> m62_67  [key=2, style=dotted];
m62_131 -> m62_68  [key=2, style=dotted];
m62_127 -> m62_128  [key=0, style=solid];
m62_127 -> m62_64  [key=2, style=dotted];
m62_128 -> m62_135  [key=0, style=solid];
m62_130 -> m62_131  [key=0, style=solid];
m62_130 -> m62_37  [key=2, style=dotted];
m62_133 -> m62_134  [key=0, style=solid];
m62_133 -> m62_37  [key=2, style=dotted];
m62_134 -> m62_135  [key=0, style=solid];
m62_134 -> m62_136  [key=2, style=dotted];
m62_135 -> m62_23  [key=0, style=bold, color=blue];
m62_0 -> m62_1  [key=0, style=solid];
m62_1 -> m62_2  [key=0, style=solid];
m62_1 -> m62_6  [key=2, style=dotted];
m62_2 -> m62_3  [key=0, style=solid];
m62_2 -> m62_7  [key=2, style=dotted];
m62_3 -> m62_4  [key=0, style=solid];
m62_3 -> m62_8  [key=2, style=dotted];
m62_4 -> m62_5  [key=0, style=solid];
m62_4 -> m62_9  [key=2, style=dotted];
m62_5 -> m62_0  [key=0, style=bold, color=blue];
m62_20 -> m62_69  [key=0, style=solid];
m62_69 -> m62_70  [key=0, style=solid];
m62_69 -> m62_78  [key=0, style=solid];
m62_69 -> m62_36  [key=2, style=dotted];
m62_70 -> m62_71  [key=0, style=solid];
m62_70 -> m62_37  [key=2, style=dotted];
m62_78 -> m62_79  [key=0, style=solid];
m62_78 -> m62_89  [key=0, style=solid];
m62_71 -> m62_72  [key=0, style=solid];
m62_71 -> m62_75  [key=1, style=dashed, color=darkseagreen4, label=close];
m62_72 -> m62_73  [key=0, style=solid];
m62_75 -> m62_76  [key=0, style=solid];
m62_73 -> m62_74  [key=0, style=solid];
m62_73 -> m62_90  [key=2, style=dotted];
m62_74 -> m62_75  [key=0, style=solid];
m62_74 -> n149  [key=2, style=dotted];
m62_76 -> m62_77  [key=0, style=solid];
m62_76 -> m62_90  [key=2, style=dotted];
m62_77 -> m62_78  [key=0, style=solid];
m62_77 -> n149  [key=2, style=dotted];
m62_79 -> m62_80  [key=0, style=solid];
m62_79 -> m62_81  [key=1, style=dashed, color=darkseagreen4, label=longOrder];
m62_79 -> m62_84  [key=1, style=dashed, color=darkseagreen4, label=longOrder];
m62_79 -> m62_87  [key=1, style=dashed, color=red, label=longOrder];
m62_80 -> m62_81  [key=0, style=solid];
m62_80 -> m62_85  [key=1, style=dashed, color=darkseagreen4, label=shortOrder];
m62_80 -> m62_88  [key=1, style=dashed, color=darkseagreen4, label=shortOrder];
m62_81 -> m62_82  [key=0, style=solid];
m62_81 -> m62_84  [key=0, style=solid];
m62_81 -> m62_63  [key=2, style=dotted];
m62_84 -> m62_85  [key=0, style=solid];
m62_84 -> m62_65  [key=2, style=dotted];
m62_84 -> m62_86  [key=1, style=dashed, color=darkseagreen4, label=newLongStop];
m62_84 -> m62_87  [key=1, style=dashed, color=red, label=newLongStop];
m62_87 -> m62_88  [key=0, style=solid, color=red];
m62_87 -> m62_67  [key=2, style=dotted, color=red];
m62_87 -> m62_68  [key=2, style=dotted, color=red];
m62_85 -> m62_86  [key=0, style=solid];
m62_85 -> m62_65  [key=2, style=dotted];
m62_85 -> m62_88  [key=1, style=dashed, color=darkseagreen4, label=newShortStop];
m62_88 -> m62_89  [key=0, style=solid];
m62_88 -> m62_67  [key=2, style=dotted];
m62_88 -> m62_68  [key=2, style=dotted];
m62_82 -> m62_83  [key=0, style=solid];
m62_82 -> m62_64  [key=2, style=dotted];
m62_83 -> m62_89  [key=0, style=solid];
m62_86 -> m62_87  [key=0, style=solid, color=red];
m62_86 -> m62_66  [key=2, style=dotted];
m62_86 -> m62_37  [key=2, style=dotted];
m62_89 -> m62_20  [key=0, style=bold, color=blue];
m62_19 -> m62_41  [key=0, style=solid];
m62_41 -> m62_42  [key=0, style=solid];
m62_41 -> m62_48  [key=0, style=solid];
m62_41 -> m62_36  [key=2, style=dotted];
m62_42 -> m62_43  [key=0, style=solid];
m62_42 -> m62_37  [key=2, style=dotted];
m62_48 -> m62_49  [key=0, style=solid];
m62_48 -> m62_60  [key=0, style=solid];
m62_43 -> m62_44  [key=0, style=solid];
m62_43 -> m62_46  [key=1, style=dashed, color=darkseagreen4, label=close];
m62_44 -> m62_45  [key=0, style=solid];
m62_44 -> m62_61  [key=2, style=dotted];
m62_46 -> m62_47  [key=0, style=solid];
m62_46 -> m62_61  [key=2, style=dotted];
m62_45 -> m62_46  [key=0, style=solid];
m62_45 -> n149  [key=2, style=dotted];
m62_47 -> m62_48  [key=0, style=solid];
m62_47 -> n149  [key=2, style=dotted];
m62_49 -> m62_50  [key=0, style=solid];
m62_49 -> m62_51  [key=1, style=dashed, color=darkseagreen4, label=openOrders];
m62_50 -> m62_51  [key=0, style=solid];
m62_50 -> m62_52  [key=1, style=dashed, color=darkseagreen4, label=longOrder];
m62_50 -> m62_55  [key=1, style=dashed, color=darkseagreen4, label=longOrder];
m62_50 -> m62_58  [key=1, style=dashed, color=red, label=longOrder];
m62_51 -> m62_52  [key=0, style=solid];
m62_51 -> m62_56  [key=1, style=dashed, color=darkseagreen4, label=shortOrder];
m62_51 -> m62_59  [key=1, style=dashed, color=darkseagreen4, label=shortOrder];
m62_52 -> m62_53  [key=0, style=solid];
m62_52 -> m62_55  [key=0, style=solid];
m62_52 -> m62_63  [key=2, style=dotted];
m62_55 -> m62_56  [key=0, style=solid];
m62_55 -> m62_65  [key=2, style=dotted];
m62_55 -> m62_57  [key=1, style=dashed, color=darkseagreen4, label=newLongLimit];
m62_55 -> m62_58  [key=1, style=dashed, color=red, label=newLongLimit];
m62_58 -> m62_59  [key=0, style=solid, color=red];
m62_58 -> m62_67  [key=2, style=dotted, color=red];
m62_58 -> m62_68  [key=2, style=dotted, color=red];
m62_56 -> m62_57  [key=0, style=solid];
m62_56 -> m62_65  [key=2, style=dotted];
m62_56 -> m62_59  [key=1, style=dashed, color=darkseagreen4, label=newShortLimit];
m62_59 -> m62_60  [key=0, style=solid];
m62_59 -> m62_67  [key=2, style=dotted];
m62_59 -> m62_68  [key=2, style=dotted];
m62_53 -> m62_54  [key=0, style=solid];
m62_53 -> m62_64  [key=2, style=dotted];
m62_54 -> m62_60  [key=0, style=solid];
m62_57 -> m62_58  [key=0, style=solid, color=red];
m62_57 -> m62_66  [key=2, style=dotted];
m62_57 -> m62_37  [key=2, style=dotted];
m62_60 -> m62_19  [key=0, style=bold, color=blue];
m62_22 -> m62_137  [key=0, style=solid];
m62_137 -> m62_138  [key=0, style=solid];
m62_137 -> m62_141  [key=0, style=solid];
m62_137 -> m62_36  [key=2, style=dotted];
m62_138 -> m62_139  [key=0, style=solid];
m62_138 -> m62_37  [key=2, style=dotted];
m62_141 -> m62_142  [key=0, style=solid];
m62_141 -> m62_149  [key=0, style=solid];
m62_139 -> m62_140  [key=0, style=solid];
m62_139 -> m62_150  [key=2, style=dotted];
m62_140 -> m62_141  [key=0, style=solid];
m62_140 -> n149  [key=2, style=dotted];
m62_142 -> m62_143  [key=0, style=solid];
m62_142 -> m62_146  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m62_142 -> m62_148  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m62_143 -> m62_144  [key=0, style=solid];
m62_143 -> m62_146  [key=0, style=solid];
m62_146 -> m62_147  [key=0, style=solid];
m62_146 -> m62_148  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m62_148 -> m62_149  [key=0, style=solid];
m62_148 -> m62_67  [key=2, style=dotted];
m62_148 -> m62_68  [key=2, style=dotted];
m62_144 -> m62_145  [key=0, style=solid];
m62_144 -> m62_64  [key=2, style=dotted];
m62_145 -> m62_149  [key=0, style=solid];
m62_147 -> m62_148  [key=0, style=solid];
m62_147 -> m62_37  [key=2, style=dotted];
m62_149 -> m62_22  [key=0, style=bold, color=blue];
m62_18 -> m62_24  [key=0, style=solid];
m62_24 -> m62_25  [key=0, style=solid];
m62_24 -> m62_35  [key=0, style=solid];
m62_24 -> m62_36  [key=2, style=dotted];
m62_25 -> m62_26  [key=0, style=solid];
m62_25 -> m62_37  [key=2, style=dotted];
m62_26 -> m62_27  [key=0, style=solid];
m62_26 -> m62_38  [key=2, style=dotted];
m62_27 -> m62_28  [key=0, style=solid];
m62_27 -> m62_30  [key=0, style=solid];
m62_28 -> m62_29  [key=0, style=solid];
m62_28 -> m62_37  [key=2, style=dotted];
m62_30 -> m62_31  [key=0, style=solid];
m62_30 -> m62_38  [key=2, style=dotted];
m62_30 -> m62_33  [key=1, style=dashed, color=darkseagreen4, label=newTicket];
m62_29 -> m62_30  [key=0, style=solid];
m62_29 -> m62_39  [key=2, style=dotted];
m62_31 -> m62_32  [key=0, style=solid];
m62_31 -> m62_40  [key=2, style=dotted];
m62_31 -> m62_34  [key=1, style=dashed, color=darkseagreen4, label=response];
m62_33 -> m62_35  [key=0, style=solid];
m62_33 -> m62_37  [key=2, style=dotted];
m62_32 -> m62_33  [key=0, style=solid];
m62_32 -> m62_34  [key=0, style=solid];
m62_34 -> m62_35  [key=0, style=solid];
m62_34 -> m62_37  [key=2, style=dotted];
m62_35 -> m62_18  [key=0, style=bold, color=blue];
m62_63 -> m62_157  [key=0, style=solid];
m62_63 -> m62_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderTicket"];
m62_63 -> m62_159  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderTicket"];
m62_63 -> m62_161  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderTicket"];
m62_63 -> m62_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderTicket"];
m62_63 -> m62_163  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderTicket"];
m62_63 -> m62_50  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderTicket longOrder"];
m62_63 -> m62_79  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderTicket longOrder"];
m62_63 -> m62_103  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderTicket longOrder"];
m62_63 -> m62_51  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderTicket shortOrder"];
m62_63 -> m62_80  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderTicket shortOrder"];
m62_63 -> m62_104  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Orders.OrderTicket shortOrder"];
m62_63 -> m62_30  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CheckPairOrdersForFills"];
m62_63 -> m62_26  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CheckPairOrdersForFills"];
m62_157 -> m62_158  [key=0, style=solid];
m62_157 -> m62_161  [key=0, style=solid];
m62_158 -> m62_159  [key=0, style=solid];
m62_158 -> m62_37  [key=2, style=dotted];
m62_159 -> m62_160  [key=0, style=solid];
m62_159 -> m62_40  [key=2, style=dotted];
m62_161 -> m62_162  [key=0, style=solid];
m62_161 -> m62_165  [key=0, style=solid];
m62_162 -> m62_163  [key=0, style=solid];
m62_162 -> m62_37  [key=2, style=dotted];
m62_163 -> m62_164  [key=0, style=solid];
m62_163 -> m62_40  [key=2, style=dotted];
m62_160 -> m62_166  [key=0, style=solid];
m62_165 -> m62_166  [key=0, style=solid];
m62_164 -> m62_166  [key=0, style=solid];
m62_166 -> m62_63  [key=0, style=bold, color=blue];
m62_36 -> m62_167  [key=0, style=solid];
m62_36 -> m62_1  [key=3, color=darkorchid, style=bold, label="Parameter variable int day"];
m62_36 -> m62_91  [key=3, color=darkorchid, style=bold, label="Parameter variable int day"];
m62_36 -> m62_118  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m62_36 -> m62_41  [key=3, color=darkorchid, style=bold, label="Parameter variable int minute"];
m62_36 -> m62_69  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m62_36 -> m62_132  [key=3, color=darkorchid, style=bold, label="Parameter variable int minute"];
m62_36 -> m62_137  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m62_36 -> m62_24  [key=3, color=darkorchid, style=bold, label="Parameter variable int minute"];
m62_36 -> m62_4  [key=3, color=darkorchid, style=bold, label="Parameter variable int minute"];
m62_167 -> m62_168  [key=0, style=solid];
m62_168 -> m62_36  [key=0, style=bold, color=blue];
m62_169 -> m62_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_57  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_71  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_73  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_74  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_78  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_79  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_81  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_82  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_86  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_91  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_92  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_96  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_97  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_101  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_102  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_103  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_104  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_105  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_106  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_112  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_113  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_118  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_119  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_120  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_122  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_125  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_130  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_132  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_133  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_134  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_137  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_138  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_139  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_140  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_142  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_147  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_158  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_162  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m62_169 -> m62_167  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.OrderTicketDemoAlgorithm"];
m65_25 -> m65_26  [key=0, style=solid];
m65_25 -> m65_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m65_25 -> m65_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m65_25 -> m65_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanUpdateOrder"];
m65_25 -> m65_12  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanUpdateOrder"];
m65_26 -> m65_27  [key=0, style=solid];
m65_26 -> m65_30  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m65_27 -> m65_28  [key=0, style=solid];
m65_27 -> m65_29  [key=0, style=solid];
m65_28 -> m65_30  [key=0, style=solid];
m65_28 -> m65_23  [key=2, style=dotted];
m65_29 -> m65_30  [key=0, style=solid];
m65_30 -> m65_25  [key=0, style=bold, color=blue];
m65_23 -> m65_34  [key=0, style=solid];
m65_23 -> m65_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m65_23 -> m65_39  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m65_23 -> m65_6  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Brokerages.BrokerageMessageEvent message"];
m65_23 -> m65_25  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Brokerages.BrokerageMessageEvent message"];
m65_34 -> m65_35  [key=0, style=solid];
m65_34 -> m65_43  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m65_36 -> m65_37  [key=0, style=solid];
m65_36 -> m65_44  [key=2, style=dotted];
m65_36 -> m65_38  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m65_36 -> m65_41  [key=1, style=dashed, color=darkseagreen4, label=baseCurrency];
m65_39 -> m65_40  [key=0, style=solid];
m65_39 -> m65_42  [key=1, style=dashed, color=darkseagreen4, label=orderIsWithinForexSizeLimits];
m65_35 -> m65_36  [key=0, style=solid];
m65_37 -> m65_38  [key=0, style=solid];
m65_38 -> m65_39  [key=0, style=solid];
m65_38 -> m65_45  [key=2, style=dotted];
m65_38 -> m65_41  [key=1, style=dashed, color=darkseagreen4, label=max];
m65_41 -> m65_42  [key=0, style=solid];
m65_41 -> m65_46  [key=2, style=dotted];
m65_41 -> m65_47  [key=2, style=dotted];
m65_41 -> m65_43  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m65_40 -> m65_41  [key=0, style=solid];
m65_40 -> m65_42  [key=0, style=solid];
m65_42 -> m65_43  [key=0, style=solid];
m65_43 -> m65_23  [key=0, style=bold, color=blue];
m65_6 -> m65_7  [key=0, style=solid];
m65_6 -> m65_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m65_6 -> m65_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m65_6 -> m65_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSubmitOrder"];
m65_6 -> m65_12  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSubmitOrder"];
m65_6 -> m65_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSubmitOrder"];
m65_7 -> m65_8  [key=0, style=solid];
m65_8 -> m65_9  [key=0, style=solid];
m65_8 -> m65_11  [key=0, style=solid];
m65_8 -> m65_13  [key=0, style=solid];
m65_8 -> m65_15  [key=0, style=solid];
m65_8 -> m65_17  [key=0, style=solid];
m65_8 -> m65_19  [key=0, style=solid];
m65_8 -> m65_21  [key=0, style=solid];
m65_18 -> m65_22  [key=0, style=solid];
m65_18 -> m65_23  [key=2, style=dotted];
m65_9 -> m65_10  [key=0, style=solid];
m65_11 -> m65_12  [key=0, style=solid];
m65_13 -> m65_14  [key=0, style=solid];
m65_15 -> m65_16  [key=0, style=solid];
m65_17 -> m65_18  [key=0, style=solid];
m65_19 -> m65_20  [key=0, style=solid];
m65_21 -> m65_22  [key=0, style=solid];
m65_21 -> m65_24  [key=2, style=dotted];
m65_10 -> m65_22  [key=0, style=solid];
m65_12 -> m65_22  [key=0, style=solid];
m65_14 -> m65_22  [key=0, style=solid];
m65_16 -> m65_22  [key=0, style=solid];
m65_20 -> m65_22  [key=0, style=solid];
m65_22 -> m65_6  [key=0, style=bold, color=blue];
m65_0 -> m65_1  [key=0, style=solid];
m65_1 -> m65_0  [key=0, style=bold, color=blue];
m65_31 -> m65_32  [key=0, style=solid, color=red];
m65_32 -> m65_33  [key=0, style=solid, color=red];
m65_33 -> m65_31  [key=0, style=bold, color=blue];
m65_2 -> m65_3  [key=0, style=solid];
m65_3 -> m65_4  [key=0, style=solid];
m65_3 -> m65_5  [key=2, style=dotted];
m65_4 -> m65_2  [key=0, style=bold, color=blue];
m65_48 -> m65_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel"];
m65_48 -> m65_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.InteractiveBrokersBrokerageModel"];
m66_4 -> m66_5  [key=0, style=solid];
m66_4 -> m66_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.IDataConsolidator"];
m66_4 -> m66_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.IDataConsolidator"];
m66_4 -> m66_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.IDataConsolidator"];
m66_4 -> m66_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.IDataConsolidator"];
m66_4 -> m66_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.IDataConsolidator"];
m66_5 -> m66_6  [key=0, style=solid];
m66_5 -> m66_7  [key=0, style=solid];
m66_7 -> m66_8  [key=0, style=solid];
m66_8 -> m66_9  [key=0, style=solid];
m66_9 -> m66_10  [key=0, style=solid];
m66_9 -> m66_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m66_10 -> m66_11  [key=0, style=solid];
m66_10 -> m66_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m66_6 -> m66_11  [key=0, style=solid];
m66_6 -> m66_12  [key=2, style=dotted];
m66_11 -> m66_4  [key=0, style=bold, color=blue];
m66_19 -> m66_20  [key=0, style=solid];
m66_19 -> m66_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.BaseData"];
m66_20 -> m66_21  [key=0, style=solid];
m66_20 -> m66_22  [key=1, style=dashed, color=darkseagreen4, label=handler];
m66_22 -> m66_23  [key=0, style=solid];
m66_22 -> m66_24  [key=2, style=dotted];
m66_21 -> m66_22  [key=0, style=solid];
m66_21 -> m66_23  [key=0, style=solid];
m66_23 -> m66_19  [key=0, style=bold, color=blue];
m66_0 -> m66_1  [key=0, style=solid];
m66_1 -> m66_2  [key=0, style=solid];
m66_1 -> m66_3  [key=2, style=dotted];
m66_2 -> m66_0  [key=0, style=bold, color=blue];
m66_16 -> m66_17  [key=0, style=solid];
m66_14 -> m66_15  [key=0, style=solid];
m66_14 -> m66_3  [key=2, style=dotted];
m66_17 -> m66_18  [key=0, style=solid];
m66_17 -> m66_19  [key=2, style=dotted];
m66_13 -> m66_14  [key=0, style=solid];
m66_15 -> m66_13  [key=0, style=bold, color=blue];
m66_18 -> m66_16  [key=0, style=bold, color=blue];
m66_25 -> m66_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.SequentialConsolidator"];
m66_25 -> m66_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.SequentialConsolidator"];
m66_25 -> m66_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.SequentialConsolidator"];
m66_25 -> m66_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.SequentialConsolidator"];
m66_25 -> m66_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.SequentialConsolidator"];
m66_25 -> m66_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.SequentialConsolidator"];
m66_25 -> m66_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.SequentialConsolidator"];
m66_26 -> m66_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Consolidators.IDataConsolidator"];
m67_0 -> m67_1  [key=0, style=solid];
m67_5 -> m67_6  [key=0, style=solid, color=red];
m67_5 -> m67_12  [key=2, style=dotted, color=red];
m67_4 -> m67_5  [key=0, style=solid, color=red];
m67_4 -> m67_11  [key=2, style=dotted];
m67_1 -> m67_2  [key=0, style=solid];
m67_1 -> m67_7  [key=2, style=dotted];
m67_2 -> m67_3  [key=0, style=solid];
m67_2 -> m67_8  [key=2, style=dotted];
m67_2 -> m67_9  [key=2, style=dotted];
m67_3 -> m67_4  [key=0, style=solid];
m67_3 -> m67_10  [key=2, style=dotted];
m67_6 -> m67_0  [key=0, style=bold, color=blue];
m67_13 -> m67_14  [key=0, style=solid];
m67_17 -> m67_18  [key=0, style=solid, color=red];
m67_17 -> m67_22  [key=2, style=dotted, color=red];
m67_14 -> m67_17  [key=0, style=solid, color=red];
m67_14 -> m67_15  [key=0, style=solid];
m67_16 -> m67_17  [key=0, style=solid, color=red];
m67_16 -> m67_20  [key=2, style=dotted];
m67_16 -> m67_21  [key=2, style=dotted];
m67_15 -> m67_16  [key=0, style=solid];
m67_15 -> m67_19  [key=2, style=dotted];
m67_18 -> m67_13  [key=0, style=bold, color=blue];
m67_23 -> m67_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.QuandlImporterAlgorithm"];
m67_23 -> m67_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.QuandlImporterAlgorithm"];
m67_23 -> m67_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.QuandlImporterAlgorithm"];
m67_23 -> m67_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.QuandlImporterAlgorithm"];
m67_23 -> m67_5  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.QuandlImporterAlgorithm"];
m67_23 -> m67_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.QuandlImporterAlgorithm"];
m67_23 -> m67_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.QuandlImporterAlgorithm"];
m67_23 -> m67_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.QuandlImporterAlgorithm"];
m67_23 -> m67_17  [key=1, style=dashed, color=green, label="QuantConnect.Algorithm.CSharp.QuandlImporterAlgorithm"];
m68_0 -> m68_1  [key=0, style=solid];
m68_1 -> m68_2  [key=0, style=solid];
m68_1 -> m68_9  [key=2, style=dotted];
m68_2 -> m68_3  [key=0, style=solid];
m68_2 -> m68_10  [key=2, style=dotted];
m68_3 -> m68_4  [key=0, style=solid];
m68_3 -> m68_11  [key=2, style=dotted];
m68_4 -> m68_5  [key=0, style=solid];
m68_4 -> m68_12  [key=2, style=dotted];
m68_5 -> m68_6  [key=0, style=solid];
m68_5 -> m68_12  [key=2, style=dotted];
m68_6 -> m68_7  [key=0, style=solid];
m68_6 -> m68_12  [key=2, style=dotted];
m68_7 -> m68_8  [key=0, style=solid];
m68_7 -> m68_12  [key=2, style=dotted];
m68_8 -> m68_0  [key=0, style=bold, color=blue];
m68_13 -> m68_14  [key=0, style=solid];
m68_13 -> m68_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBars"];
m68_14 -> m68_15  [key=0, style=solid];
m68_14 -> m68_16  [key=0, style=solid];
m68_17 -> m68_18  [key=0, style=solid];
m68_17 -> m68_25  [key=0, style=solid];
m68_15 -> m68_25  [key=0, style=solid];
m68_16 -> m68_17  [key=0, style=solid];
m68_18 -> m68_19  [key=0, style=solid];
m68_18 -> m68_18  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m68_18 -> m68_21  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m68_18 -> m68_23  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m68_18 -> m68_24  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m68_19 -> m68_20  [key=0, style=solid];
m68_19 -> m68_19  [key=1, style=dashed, color=darkseagreen4, label=kvp];
m68_21 -> m68_22  [key=0, style=solid];
m68_21 -> m68_24  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m68_23 -> m68_17  [key=0, style=solid];
m68_23 -> m68_27  [key=2, style=dotted];
m68_24 -> m68_17  [key=0, style=solid];
m68_24 -> m68_28  [key=2, style=dotted];
m68_20 -> m68_21  [key=0, style=solid];
m68_20 -> m68_17  [key=0, style=solid];
m68_20 -> n205  [key=2, style=dotted];
m68_22 -> m68_23  [key=0, style=solid];
m68_22 -> m68_24  [key=0, style=solid];
m68_25 -> m68_13  [key=0, style=bold, color=blue];
m68_29 -> m68_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m68_29 -> m68_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.RegressionAlgorithm"];
m69_0 -> m69_1  [key=0, style=solid];
m69_1 -> m69_0  [key=0, style=bold, color=blue];
m70_30 -> m70_40  [key=0, style=solid];
m70_30 -> m70_8  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Market.RenkoBar data"];
m70_40 -> m70_41  [key=0, style=solid];
m70_40 -> m70_38  [key=2, style=dotted];
m70_40 -> m70_39  [key=2, style=dotted];
m70_41 -> m70_30  [key=0, style=bold, color=blue];
m70_20 -> m70_33  [key=0, style=solid];
m70_20 -> m70_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.RenkoBar"];
m70_20 -> m70_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.RenkoBar"];
m70_20 -> m70_5  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Data.Market.RenkoBar data"];
m70_33 -> m70_34  [key=0, style=solid];
m70_33 -> m70_35  [key=0, style=solid];
m70_34 -> m70_35  [key=0, style=solid];
m70_34 -> m70_37  [key=2, style=dotted];
m70_35 -> m70_36  [key=0, style=solid];
m70_35 -> m70_38  [key=2, style=dotted];
m70_35 -> m70_39  [key=2, style=dotted];
m70_36 -> m70_20  [key=0, style=bold, color=blue];
m70_0 -> m70_1  [key=0, style=solid];
m70_1 -> m70_2  [key=0, style=solid];
m70_1 -> m70_11  [key=2, style=dotted];
m70_2 -> m70_3  [key=0, style=solid];
m70_2 -> m70_12  [key=2, style=dotted];
m70_3 -> m70_4  [key=0, style=solid];
m70_3 -> m70_13  [key=2, style=dotted];
m70_4 -> m70_5  [key=0, style=solid];
m70_4 -> m70_14  [key=2, style=dotted];
m70_4 -> m70_6  [key=1, style=dashed, color=darkseagreen4, label=renkoClose];
m70_5 -> m70_6  [key=0, style=solid];
m70_5 -> m70_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.RenkoBar"];
m70_6 -> m70_7  [key=0, style=solid];
m70_6 -> m70_15  [key=2, style=dotted];
m70_7 -> m70_8  [key=0, style=solid];
m70_7 -> m70_16  [key=2, style=dotted];
m70_7 -> m70_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
m70_7 -> m70_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.TradeBar"];
m70_7 -> m70_9  [key=1, style=dashed, color=darkseagreen4, label=renko7bar];
m70_8 -> m70_9  [key=0, style=solid];
m70_8 -> m70_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Market.RenkoBar"];
m70_9 -> m70_10  [key=0, style=solid];
m70_9 -> m70_15  [key=2, style=dotted];
m70_10 -> m70_0  [key=0, style=bold, color=blue];
m70_31 -> m70_32  [key=0, style=solid];
m70_32 -> m70_31  [key=0, style=bold, color=blue];
m70_27 -> m70_28  [key=0, style=solid];
m70_18 -> m70_19  [key=0, style=solid];
m70_18 -> m70_20  [key=2, style=dotted];
m70_22 -> m70_23  [key=0, style=solid];
m70_25 -> m70_26  [key=0, style=solid];
m70_28 -> m70_29  [key=0, style=solid];
m70_28 -> m70_30  [key=2, style=dotted];
m70_17 -> m70_18  [key=0, style=solid];
m70_19 -> m70_17  [key=0, style=bold, color=blue];
m70_21 -> m70_22  [key=0, style=solid];
m70_23 -> m70_21  [key=0, style=bold, color=blue];
m70_24 -> m70_25  [key=0, style=solid];
m70_26 -> m70_24  [key=0, style=bold, color=blue];
m70_29 -> m70_27  [key=0, style=bold, color=blue];
m70_42 -> m70_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m70_42 -> m70_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m70_42 -> m70_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m70_42 -> m70_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m70_42 -> m70_18  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m70_42 -> m70_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m70_42 -> m70_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m70_42 -> m70_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m70_42 -> m70_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m70_42 -> m70_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m70_42 -> m70_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.RenkoConsolidatorAlgorithm"];
m72_0 -> m72_1  [key=0, style=solid];
m72_1 -> m72_2  [key=0, style=solid];
m72_1 -> m72_3  [key=2, style=dotted];
m72_2 -> m72_0  [key=0, style=bold, color=blue];
m72_4 -> m72_5  [key=0, style=solid];
m72_5 -> m72_4  [key=0, style=bold, color=blue];
m75_25 -> m75_33  [key=0, style=solid];
m75_25 -> m75_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m75_25 -> m75_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<string> allSymbols"];
m75_25 -> m75_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.HashSet<string> hash"];
m75_33 -> m75_34  [key=0, style=solid];
m75_33 -> m75_35  [key=2, style=dotted];
m75_33 -> n276  [key=2, style=dotted];
m75_33 -> m75_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m75_34 -> m75_25  [key=0, style=bold, color=blue];
m75_50 -> m75_51  [key=0, style=solid];
m75_51 -> m75_50  [key=0, style=bold, color=blue];
m75_26 -> m75_27  [key=0, style=solid];
m75_26 -> m75_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Resolution"];
m75_26 -> m75_8  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> symbols"];
m75_26 -> m75_9  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> symbols"];
m75_26 -> m75_10  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> symbols"];
m75_26 -> m75_11  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> symbols"];
m75_26 -> m75_12  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> symbols"];
m75_26 -> m75_14  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m75_26 -> m75_15  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m75_26 -> m75_16  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m75_26 -> m75_17  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Resolution resolution"];
m75_27 -> m75_28  [key=0, style=solid];
m75_27 -> m75_30  [key=0, style=solid];
m75_27 -> m75_29  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m75_29 -> m75_27  [key=0, style=solid];
m75_29 -> m75_32  [key=2, style=dotted];
m75_28 -> m75_29  [key=0, style=solid];
m75_28 -> m75_31  [key=2, style=dotted];
m75_30 -> m75_26  [key=0, style=bold, color=blue];
m75_40 -> m75_41  [key=0, style=solid];
m75_40 -> m75_43  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyList<string>"];
m75_40 -> m75_45  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyList<string>"];
m75_40 -> m75_25  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.HashSet<string> hash"];
m75_40 -> m75_42  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetRandomItem"];
m75_41 -> m75_42  [key=0, style=solid];
m75_41 -> m75_44  [key=1, style=dashed, color=darkseagreen4, label=count];
m75_43 -> m75_44  [key=0, style=solid];
m75_43 -> m75_48  [key=2, style=dotted];
m75_43 -> m75_45  [key=1, style=dashed, color=darkseagreen4, label=item];
m75_43 -> m75_46  [key=1, style=dashed, color=darkseagreen4, label=item];
m75_45 -> m75_42  [key=0, style=solid];
m75_45 -> m75_46  [key=0, style=solid];
m75_45 -> m75_49  [key=2, style=dotted];
m75_42 -> m75_43  [key=0, style=solid];
m75_44 -> m75_45  [key=0, style=solid];
m75_44 -> m75_44  [key=1, style=dashed, color=darkseagreen4, label=count];
m75_46 -> m75_47  [key=0, style=solid];
m75_47 -> m75_40  [key=0, style=bold, color=blue];
m75_0 -> m75_1  [key=0, style=solid];
m75_1 -> m75_2  [key=0, style=solid];
m75_1 -> m75_19  [key=2, style=dotted];
m75_2 -> m75_3  [key=0, style=solid];
m75_2 -> m75_20  [key=2, style=dotted];
m75_3 -> m75_4  [key=0, style=solid];
m75_3 -> m75_21  [key=2, style=dotted];
m75_4 -> m75_5  [key=0, style=solid];
m75_4 -> m75_22  [key=2, style=dotted];
m75_4 -> m75_6  [key=1, style=dashed, color=darkseagreen4, label=allSymbols];
m75_4 -> m75_8  [key=1, style=dashed, color=darkseagreen4, label=allSymbols];
m75_4 -> m75_9  [key=1, style=dashed, color=darkseagreen4, label=allSymbols];
m75_4 -> m75_10  [key=1, style=dashed, color=darkseagreen4, label=allSymbols];
m75_4 -> m75_11  [key=1, style=dashed, color=darkseagreen4, label=allSymbols];
m75_4 -> m75_12  [key=1, style=dashed, color=darkseagreen4, label=allSymbols];
m75_5 -> m75_6  [key=0, style=solid];
m75_5 -> m75_7  [key=0, style=solid];
m75_6 -> m75_18  [key=0, style=solid];
m75_6 -> m75_23  [key=2, style=dotted];
m75_8 -> m75_9  [key=0, style=solid];
m75_8 -> m75_25  [key=2, style=dotted];
m75_8 -> m75_22  [key=2, style=dotted];
m75_8 -> m75_13  [key=1, style=dashed, color=darkseagreen4, label=ticks];
m75_9 -> m75_10  [key=0, style=solid];
m75_9 -> m75_25  [key=2, style=dotted];
m75_9 -> m75_22  [key=2, style=dotted];
m75_9 -> m75_14  [key=1, style=dashed, color=darkseagreen4, label=seconds];
m75_10 -> m75_11  [key=0, style=solid];
m75_10 -> m75_25  [key=2, style=dotted];
m75_10 -> m75_22  [key=2, style=dotted];
m75_10 -> m75_15  [key=1, style=dashed, color=darkseagreen4, label=minutes];
m75_11 -> m75_12  [key=0, style=solid];
m75_11 -> m75_25  [key=2, style=dotted];
m75_11 -> m75_22  [key=2, style=dotted];
m75_11 -> m75_16  [key=1, style=dashed, color=darkseagreen4, label=hours];
m75_12 -> m75_13  [key=0, style=solid];
m75_12 -> m75_25  [key=2, style=dotted];
m75_12 -> m75_22  [key=2, style=dotted];
m75_12 -> m75_17  [key=1, style=dashed, color=darkseagreen4, label=daily];
m75_7 -> m75_8  [key=0, style=solid];
m75_7 -> m75_24  [key=2, style=dotted];
m75_7 -> m75_9  [key=1, style=dashed, color=darkseagreen4, label=hash];
m75_7 -> m75_10  [key=1, style=dashed, color=darkseagreen4, label=hash];
m75_7 -> m75_11  [key=1, style=dashed, color=darkseagreen4, label=hash];
m75_7 -> m75_12  [key=1, style=dashed, color=darkseagreen4, label=hash];
m75_13 -> m75_14  [key=0, style=solid];
m75_13 -> m75_26  [key=2, style=dotted];
m75_14 -> m75_15  [key=0, style=solid];
m75_14 -> m75_26  [key=2, style=dotted];
m75_15 -> m75_16  [key=0, style=solid];
m75_15 -> m75_26  [key=2, style=dotted];
m75_16 -> m75_17  [key=0, style=solid];
m75_16 -> m75_26  [key=2, style=dotted];
m75_17 -> m75_18  [key=0, style=solid];
m75_17 -> m75_26  [key=2, style=dotted];
m75_18 -> m75_0  [key=0, style=bold, color=blue];
m75_37 -> m75_38  [key=0, style=solid];
m75_38 -> m75_39  [key=0, style=solid];
m75_38 -> m75_40  [key=2, style=dotted];
m75_39 -> m75_37  [key=0, style=bold, color=blue];
m75_52 -> m75_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_14  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_15  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_52 -> m75_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.Examples.StressSymbolsAlgorithm"];
m75_53 -> m75_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m75_54 -> m75_38  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.HashSet<string>"];
m76_5 -> m76_6  [key=0, style=solid];
m76_6 -> m76_7  [key=0, style=solid];
m76_7 -> m76_5  [key=0, style=bold, color=blue];
m76_12 -> m76_13  [key=0, style=solid];
m76_12 -> m76_14  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanUpdateOrder"];
m76_13 -> m76_14  [key=0, style=solid];
m76_13 -> m76_15  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m76_14 -> m76_15  [key=0, style=solid];
m76_15 -> m76_12  [key=0, style=bold, color=blue];
m76_8 -> m76_9  [key=0, style=solid];
m76_9 -> m76_10  [key=0, style=solid];
m76_9 -> m76_11  [key=2, style=dotted];
m76_10 -> m76_8  [key=0, style=bold, color=blue];
m76_37 -> m76_38  [key=0, style=solid];
m76_38 -> m76_39  [key=0, style=solid];
m76_38 -> m76_40  [key=2, style=dotted];
m76_39 -> m76_37  [key=0, style=bold, color=blue];
m76_41 -> m76_42  [key=0, style=solid];
m76_42 -> m76_43  [key=0, style=solid];
m76_42 -> m76_44  [key=2, style=dotted];
m76_43 -> m76_41  [key=0, style=bold, color=blue];
m76_0 -> m76_1  [key=0, style=solid];
m76_1 -> m76_2  [key=0, style=solid];
m76_1 -> m76_3  [key=0, style=solid];
m76_2 -> m76_3  [key=0, style=solid];
m76_2 -> m76_4  [key=2, style=dotted];
m76_3 -> m76_0  [key=0, style=bold, color=blue];
m76_16 -> m76_17  [key=0, style=solid];
m76_16 -> m76_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m76_16 -> m76_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m76_16 -> m76_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m76_16 -> m76_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m76_16 -> m76_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m76_16 -> m76_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m76_16 -> m76_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m76_16 -> m76_14  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanSubmitOrder"];
m76_17 -> m76_18  [key=0, style=solid];
m76_17 -> m76_20  [key=0, style=solid];
m76_17 -> m76_32  [key=2, style=dotted];
m76_21 -> m76_22  [key=0, style=solid];
m76_21 -> m76_24  [key=0, style=solid];
m76_21 -> m76_33  [key=2, style=dotted];
m76_21 -> n77  [key=2, style=dotted];
m76_21 -> m76_21  [key=1, style=dashed, color=darkseagreen4, label=minimumOrderSize];
m76_22 -> m76_23  [key=0, style=solid];
m76_22 -> m76_35  [key=2, style=dotted];
m76_24 -> m76_25  [key=0, style=solid];
m76_24 -> m76_27  [key=0, style=solid];
m76_25 -> m76_26  [key=0, style=solid];
m76_25 -> m76_35  [key=2, style=dotted];
m76_27 -> m76_28  [key=0, style=solid];
m76_27 -> m76_30  [key=0, style=solid];
m76_28 -> m76_29  [key=0, style=solid];
m76_28 -> m76_35  [key=2, style=dotted];
m76_30 -> m76_31  [key=0, style=solid];
m76_30 -> m76_36  [key=2, style=dotted];
m76_18 -> m76_19  [key=0, style=solid];
m76_20 -> m76_21  [key=0, style=solid];
m76_19 -> m76_31  [key=0, style=solid];
m76_23 -> m76_31  [key=0, style=solid];
m76_26 -> m76_31  [key=0, style=solid];
m76_29 -> m76_31  [key=0, style=solid];
m76_31 -> m76_16  [key=0, style=bold, color=blue];
m76_45 -> m76_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.GDAXBrokerageModel"];
m77_6 -> m77_8  [key=0, style=solid];
m77_8 -> m77_9  [key=0, style=solid];
m77_8 -> m77_10  [key=2, style=dotted];
m77_8 -> m77_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m77_9 -> m77_6  [key=0, style=bold, color=blue];
m77_39 -> m77_40  [key=0, style=solid];
m77_40 -> m77_41  [key=0, style=solid];
m77_40 -> m77_31  [key=2, style=dotted];
m77_41 -> m77_39  [key=0, style=bold, color=blue];
m77_30 -> m77_35  [key=0, style=solid];
m77_30 -> m77_36  [key=1, style=dashed, color=darkseagreen4, label=string];
m77_30 -> m77_37  [key=1, style=dashed, color=darkseagreen4, label=int];
m77_35 -> m77_36  [key=0, style=solid];
m77_36 -> m77_37  [key=0, style=solid];
m77_37 -> m77_38  [key=0, style=solid];
m77_38 -> m77_30  [key=0, style=bold, color=blue];
m77_45 -> m77_46  [key=0, style=solid];
m77_46 -> m77_47  [key=0, style=solid];
m77_47 -> m77_45  [key=0, style=bold, color=blue];
m77_29 -> m77_32  [key=0, style=solid];
m77_32 -> m77_33  [key=0, style=solid];
m77_33 -> m77_34  [key=0, style=solid];
m77_34 -> m77_29  [key=0, style=bold, color=blue];
m77_14 -> m77_51  [key=0, style=solid];
m77_14 -> m77_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m77_51 -> m77_52  [key=0, style=solid];
m77_52 -> m77_53  [key=0, style=solid];
m77_53 -> m77_14  [key=0, style=bold, color=blue];
m77_7 -> m77_17  [key=0, style=solid];
m77_17 -> m77_18  [key=0, style=solid];
m77_18 -> m77_7  [key=0, style=bold, color=blue];
m77_42 -> m77_43  [key=0, style=solid];
m77_43 -> m77_44  [key=0, style=solid];
m77_44 -> m77_42  [key=0, style=bold, color=blue];
m77_19 -> m77_20  [key=0, style=solid];
m77_20 -> m77_21  [key=0, style=solid];
m77_20 -> m77_22  [key=1, style=dashed, color=darkseagreen4, label=selectedItem];
m77_21 -> m77_22  [key=0, style=solid];
m77_21 -> m77_28  [key=2, style=dotted];
m77_21 -> m77_25  [key=1, style=dashed, color=darkseagreen4, label=projectId];
m77_22 -> m77_23  [key=0, style=solid];
m77_22 -> m77_25  [key=1, style=dashed, color=darkseagreen4, label=projectName];
m77_25 -> m77_26  [key=0, style=solid];
m77_25 -> m77_30  [key=2, style=dotted];
m77_23 -> m77_24  [key=0, style=solid];
m77_23 -> m77_25  [key=0, style=solid];
m77_24 -> m77_27  [key=0, style=solid];
m77_24 -> m77_29  [key=2, style=dotted];
m77_26 -> m77_27  [key=0, style=solid];
m77_26 -> m77_31  [key=2, style=dotted];
m77_27 -> m77_19  [key=0, style=bold, color=blue];
m77_0 -> m77_1  [key=0, style=solid];
m77_0 -> m77_2  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<System.Tuple<int, string>>"];
m77_0 -> m77_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m77_1 -> m77_2  [key=0, style=solid];
m77_1 -> m77_5  [key=2, style=dotted];
m77_2 -> m77_3  [key=0, style=solid];
m77_2 -> m77_6  [key=2, style=dotted];
m77_3 -> m77_4  [key=0, style=solid];
m77_3 -> m77_7  [key=2, style=dotted];
m77_4 -> m77_0  [key=0, style=bold, color=blue];
m77_48 -> m77_49  [key=0, style=solid];
m77_49 -> m77_50  [key=0, style=solid];
m77_50 -> m77_48  [key=0, style=bold, color=blue];
m77_54 -> m77_55  [key=0, style=solid];
m77_55 -> m77_56  [key=0, style=solid];
m77_56 -> m77_54  [key=0, style=bold, color=blue];
m77_11 -> m77_12  [key=0, style=solid];
m77_12 -> m77_13  [key=0, style=solid];
m77_12 -> m77_14  [key=2, style=dotted];
m77_12 -> m77_15  [key=2, style=dotted];
m77_12 -> m77_16  [key=2, style=dotted];
m77_13 -> m77_11  [key=0, style=bold, color=blue];
m77_57 -> m77_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog"];
m77_57 -> m77_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog"];
m77_57 -> m77_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog"];
m77_57 -> m77_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog"];
m77_57 -> m77_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog"];
m77_57 -> m77_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog"];
m77_57 -> m77_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog"];
m77_57 -> m77_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog"];
m77_57 -> m77_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog"];
m77_57 -> m77_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog"];
m77_58 -> m77_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem"];
m77_58 -> m77_52  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem"];
m77_58 -> m77_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.VisualStudioPlugin.ProjectNameDialog.ComboboxItem"];
m78_48 -> m78_49  [key=0, style=solid];
m78_49 -> m78_50  [key=0, style=solid];
m78_49 -> m78_66  [key=2, style=dotted];
m78_49 -> m78_51  [key=1, style=dashed, color=darkseagreen4, label=symbol1];
m78_49 -> m78_55  [key=1, style=dashed, color=darkseagreen4, label=symbol1];
m78_49 -> m78_61  [key=1, style=dashed, color=darkseagreen4, label=symbol1];
m78_50 -> m78_51  [key=0, style=solid];
m78_50 -> m78_66  [key=2, style=dotted];
m78_50 -> m78_52  [key=1, style=dashed, color=darkseagreen4, label=symbol2];
m78_50 -> m78_55  [key=1, style=dashed, color=darkseagreen4, label=symbol2];
m78_50 -> m78_62  [key=1, style=dashed, color=darkseagreen4, label=symbol2];
m78_51 -> m78_52  [key=0, style=solid];
m78_51 -> m78_13  [key=2, style=dotted];
m78_51 -> m78_53  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfig1];
m78_51 -> m78_54  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfig1];
m78_51 -> m78_55  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfig1];
m78_55 -> m78_56  [key=0, style=solid];
m78_55 -> m78_34  [key=2, style=dotted];
m78_55 -> n166  [key=2, style=dotted];
m78_55 -> m78_36  [key=2, style=dotted];
m78_55 -> m78_67  [key=2, style=dotted];
m78_55 -> m78_37  [key=2, style=dotted];
m78_55 -> m78_38  [key=2, style=dotted];
m78_55 -> m78_39  [key=2, style=dotted];
m78_55 -> m78_57  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m78_55 -> m78_58  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m78_61 -> m78_62  [key=0, style=solid];
m78_61 -> m78_23  [key=2, style=dotted];
m78_52 -> m78_53  [key=0, style=solid];
m78_52 -> m78_13  [key=2, style=dotted];
m78_52 -> m78_55  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfig2];
m78_62 -> m78_63  [key=0, style=solid];
m78_62 -> m78_23  [key=2, style=dotted];
m78_53 -> m78_54  [key=0, style=solid];
m78_53 -> m78_14  [key=2, style=dotted];
m78_53 -> m78_15  [key=2, style=dotted];
m78_53 -> m78_16  [key=2, style=dotted];
m78_53 -> m78_17  [key=2, style=dotted];
m78_53 -> m78_55  [key=1, style=dashed, color=darkseagreen4, label=security1];
m78_54 -> m78_55  [key=0, style=solid];
m78_54 -> m78_14  [key=2, style=dotted];
m78_54 -> m78_15  [key=2, style=dotted];
m78_54 -> m78_16  [key=2, style=dotted];
m78_54 -> m78_17  [key=2, style=dotted];
m78_56 -> m78_57  [key=0, style=solid];
m78_56 -> m78_23  [key=2, style=dotted];
m78_57 -> m78_58  [key=0, style=solid];
m78_57 -> m78_59  [key=1, style=dashed, color=darkseagreen4, label=data1];
m78_57 -> m78_61  [key=1, style=dashed, color=darkseagreen4, label=data1];
m78_57 -> m78_63  [key=1, style=dashed, color=darkseagreen4, label=data1];
m78_58 -> m78_59  [key=0, style=solid];
m78_58 -> m78_60  [key=1, style=dashed, color=darkseagreen4, label=data2];
m78_58 -> m78_62  [key=1, style=dashed, color=darkseagreen4, label=data2];
m78_58 -> m78_64  [key=1, style=dashed, color=darkseagreen4, label=data2];
m78_59 -> m78_60  [key=0, style=solid];
m78_59 -> m78_68  [key=2, style=dotted];
m78_63 -> m78_64  [key=0, style=solid];
m78_63 -> m78_23  [key=2, style=dotted];
m78_60 -> m78_61  [key=0, style=solid];
m78_60 -> m78_68  [key=2, style=dotted];
m78_64 -> m78_65  [key=0, style=solid];
m78_64 -> m78_23  [key=2, style=dotted];
m78_65 -> m78_48  [key=0, style=bold, color=blue];
m78_43 -> m78_44  [key=0, style=solid];
m78_32 -> m78_33  [key=0, style=solid];
m78_32 -> m78_34  [key=2, style=dotted];
m78_32 -> n166  [key=2, style=dotted];
m78_32 -> m78_36  [key=2, style=dotted];
m78_32 -> m78_37  [key=2, style=dotted];
m78_32 -> m78_38  [key=2, style=dotted];
m78_32 -> m78_39  [key=2, style=dotted];
m78_27 -> m78_28  [key=0, style=solid];
m78_27 -> m78_29  [key=2, style=dotted];
m78_27 -> m78_30  [key=2, style=dotted];
m78_26 -> m78_27  [key=0, style=solid];
m78_31 -> m78_32  [key=0, style=solid];
m78_40 -> m78_41  [key=0, style=solid];
m78_28 -> m78_26  [key=0, style=bold, color=blue];
m78_33 -> m78_31  [key=0, style=bold, color=blue];
m78_41 -> m78_42  [key=0, style=solid];
m78_41 -> m78_21  [key=2, style=dotted];
m78_41 -> m78_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m78_42 -> m78_40  [key=0, style=bold, color=blue];
m78_44 -> m78_45  [key=0, style=solid];
m78_45 -> m78_43  [key=0, style=bold, color=blue];
m78_69 -> m78_70  [key=0, style=solid];
m78_70 -> m78_71  [key=0, style=solid];
m78_70 -> m78_66  [key=2, style=dotted];
m78_70 -> m78_74  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m78_70 -> m78_80  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m78_70 -> m78_81  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m78_71 -> m78_72  [key=0, style=solid];
m78_71 -> m78_13  [key=2, style=dotted];
m78_71 -> m78_74  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfig];
m78_74 -> m78_75  [key=0, style=solid];
m78_74 -> m78_34  [key=2, style=dotted];
m78_74 -> n166  [key=2, style=dotted];
m78_74 -> m78_36  [key=2, style=dotted];
m78_74 -> m78_85  [key=2, style=dotted];
m78_74 -> m78_37  [key=2, style=dotted];
m78_74 -> m78_38  [key=2, style=dotted];
m78_74 -> m78_39  [key=2, style=dotted];
m78_74 -> m78_76  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m78_74 -> m78_77  [key=1, style=dashed, color=darkseagreen4, label=timeSlice];
m78_80 -> m78_81  [key=0, style=solid];
m78_80 -> m78_23  [key=2, style=dotted];
m78_81 -> m78_82  [key=0, style=solid];
m78_81 -> m78_23  [key=2, style=dotted];
m78_72 -> m78_73  [key=0, style=solid];
m78_72 -> m78_14  [key=2, style=dotted];
m78_72 -> m78_15  [key=2, style=dotted];
m78_72 -> m78_16  [key=2, style=dotted];
m78_72 -> m78_17  [key=2, style=dotted];
m78_72 -> m78_74  [key=1, style=dashed, color=darkseagreen4, label=security];
m78_73 -> m78_74  [key=0, style=solid];
m78_75 -> m78_76  [key=0, style=solid];
m78_75 -> m78_23  [key=2, style=dotted];
m78_76 -> m78_77  [key=0, style=solid];
m78_76 -> m78_78  [key=1, style=dashed, color=darkseagreen4, label=data1];
m78_76 -> m78_80  [key=1, style=dashed, color=darkseagreen4, label=data1];
m78_76 -> m78_82  [key=1, style=dashed, color=darkseagreen4, label=data1];
m78_77 -> m78_78  [key=0, style=solid];
m78_77 -> m78_79  [key=1, style=dashed, color=darkseagreen4, label=data2];
m78_77 -> m78_81  [key=1, style=dashed, color=darkseagreen4, label=data2];
m78_77 -> m78_83  [key=1, style=dashed, color=darkseagreen4, label=data2];
m78_78 -> m78_79  [key=0, style=solid];
m78_78 -> m78_68  [key=2, style=dotted];
m78_82 -> m78_83  [key=0, style=solid];
m78_82 -> m78_23  [key=2, style=dotted];
m78_79 -> m78_80  [key=0, style=solid];
m78_79 -> m78_68  [key=2, style=dotted];
m78_83 -> m78_84  [key=0, style=solid];
m78_83 -> m78_23  [key=2, style=dotted];
m78_84 -> m78_69  [key=0, style=bold, color=blue];
m78_0 -> m78_1  [key=0, style=solid];
m78_1 -> m78_2  [key=0, style=solid];
m78_1 -> m78_13  [key=2, style=dotted];
m78_1 -> m78_5  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfig];
m78_1 -> m78_32  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfig];
m78_2 -> m78_3  [key=0, style=solid];
m78_2 -> m78_14  [key=2, style=dotted];
m78_2 -> m78_15  [key=2, style=dotted];
m78_2 -> m78_16  [key=2, style=dotted];
m78_2 -> m78_17  [key=2, style=dotted];
m78_2 -> m78_5  [key=1, style=dashed, color=darkseagreen4, label=security];
m78_2 -> m78_32  [key=1, style=dashed, color=darkseagreen4, label=security];
m78_5 -> m78_6  [key=0, style=solid];
m78_5 -> m78_19  [key=2, style=dotted];
m78_5 -> m78_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m78_3 -> m78_4  [key=0, style=solid];
m78_3 -> m78_27  [key=1, style=dashed, color=darkseagreen4, label=refTime];
m78_4 -> m78_5  [key=0, style=solid];
m78_4 -> m78_18  [key=2, style=dotted];
m78_4 -> m78_19  [key=2, style=dotted];
m78_4 -> m78_20  [key=2, style=dotted];
m78_4 -> m78_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m78_4 -> m78_7  [key=1, style=dashed, color=darkseagreen4, label=rawTicks];
m78_4 -> m78_9  [key=1, style=dashed, color=darkseagreen4, label=rawTicks];
m78_4 -> m78_10  [key=1, style=dashed, color=darkseagreen4, label=rawTicks];
m78_7 -> m78_8  [key=0, style=solid];
m78_7 -> m78_23  [key=2, style=dotted];
m78_9 -> m78_10  [key=0, style=solid];
m78_9 -> m78_12  [key=0, style=solid];
m78_10 -> m78_11  [key=0, style=solid];
m78_10 -> m78_24  [key=2, style=dotted];
m78_10 -> m78_25  [key=2, style=dotted];
m78_6 -> m78_7  [key=0, style=solid];
m78_6 -> m78_21  [key=2, style=dotted];
m78_6 -> m78_22  [key=2, style=dotted];
m78_6 -> m78_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m78_6 -> m78_10  [key=1, style=dashed, color=darkseagreen4, label=timeSliceTicks];
m78_8 -> m78_9  [key=0, style=solid];
m78_8 -> m78_10  [key=1, style=dashed, color=darkseagreen4, label=i];
m78_8 -> m78_11  [key=1, style=dashed, color=darkseagreen4, label=i];
m78_11 -> m78_9  [key=0, style=solid];
m78_11 -> m78_11  [key=1, style=dashed, color=darkseagreen4, label=i];
m78_12 -> m78_0  [key=0, style=bold, color=blue];
m78_16 -> m78_16  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m78_24 -> m78_46  [key=0, style=solid];
m78_46 -> m78_47  [key=0, style=solid];
m78_47 -> m78_24  [key=0, style=bold, color=blue];
m78_86 -> m78_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Tests.Engine.DataFeeds.TimeSliceTests"];
m78_87 -> m78_27  [key=1, style=dashed, color=darkseagreen4, label=refTime];
m78_88 -> m78_32  [key=1, style=dashed, color=darkseagreen4, label=subscriptionDataConfig];
m78_89 -> m78_32  [key=1, style=dashed, color=darkseagreen4, label=security];
m79_0 -> m79_1  [key=0, style=solid];
m79_1 -> m79_2  [key=0, style=solid];
m79_1 -> m79_6  [key=2, style=dotted];
m79_1 -> m79_3  [key=1, style=dashed, color=darkseagreen4, label=serverStatistics];
m79_2 -> m79_3  [key=0, style=solid];
m79_2 -> m79_7  [key=2, style=dotted];
m79_2 -> m79_9  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m79_2 -> m79_4  [key=1, style=dashed, color=darkseagreen4, label=maxKeyLength];
m79_3 -> m79_4  [key=0, style=solid];
m79_3 -> m79_5  [key=0, style=solid];
m79_4 -> m79_3  [key=0, style=solid];
m79_4 -> m79_8  [key=2, style=dotted];
m79_4 -> m79_4  [key=1, style=dashed, color=darkseagreen4, label=statistic];
m79_5 -> m79_0  [key=0, style=bold, color=blue];
m79_9 -> m79_10  [key=0, style=solid];
m79_10 -> m79_11  [key=0, style=solid];
m79_11 -> m79_9  [key=0, style=bold, color=blue];
m80_112 -> m80_113  [key=0, style=solid];
m80_7 -> m80_8  [key=0, style=solid];
m80_6 -> m80_7  [key=0, style=solid];
m80_8 -> m80_6  [key=0, style=bold, color=blue];
m80_113 -> m80_114  [key=0, style=solid];
m80_116 -> m80_117  [key=0, style=solid];
m80_116 -> m80_118  [key=2, style=dotted];
m80_115 -> m80_116  [key=0, style=solid];
m80_120 -> m80_121  [key=0, style=solid];
m80_120 -> m80_118  [key=2, style=dotted];
m80_119 -> m80_120  [key=0, style=solid];
m80_114 -> m80_112  [key=0, style=bold, color=blue];
m80_117 -> m80_115  [key=0, style=bold, color=blue];
m80_121 -> m80_119  [key=0, style=bold, color=blue];
m80_19 -> m80_20  [key=0, style=solid];
m80_19 -> m80_79  [key=2, style=dotted];
m80_19 -> m80_22  [key=1, style=dashed, color=darkseagreen4, label=exchangeHours];
m80_9 -> m80_10  [key=0, style=solid];
m80_9 -> m80_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_13  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_17  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m80_9 -> m80_113  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m80_9 -> m80_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_27  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m80_9 -> m80_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_42  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_53  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_62  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_68  [key=1, style=dashed, color=red, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_9 -> m80_71  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m80_9 -> m80_69  [key=3, color=darkorchid, style=bold, label="method methodReturn QuantConnect.Data.UniverseSelection.SecurityChanges ApplyUniverseSelection"];
m80_10 -> m80_11  [key=0, style=solid];
m80_11 -> m80_12  [key=0, style=solid];
m80_11 -> m80_27  [key=1, style=dashed, color=darkseagreen4, label=fineFiltered];
m80_13 -> m80_14  [key=0, style=solid];
m80_13 -> m80_74  [key=2, style=dotted];
m80_13 -> m80_16  [key=1, style=dashed, color=darkseagreen4, label=selectSymbolsResult];
m80_17 -> m80_18  [key=0, style=solid];
m80_17 -> m80_77  [key=2, style=dotted];
m80_17 -> m80_24  [key=1, style=dashed, color=green, label=factory];
m80_23 -> m80_24  [key=0, style=solid, color=green];
m80_23 -> m80_82  [key=2, style=dotted, color=red];
m80_27 -> m80_29  [key=0, style=solid];
m80_27 -> m80_86  [key=2, style=dotted];
m80_27 -> m80_31  [key=1, style=dashed, color=darkseagreen4, label=selectSymbolsResult];
m80_28 -> m80_29  [key=0, style=solid];
m80_28 -> m80_86  [key=2, style=dotted];
m80_28 -> m80_31  [key=1, style=dashed, color=darkseagreen4, label=selectSymbolsResult];
m80_38 -> m80_39  [key=0, style=solid];
m80_38 -> m80_94  [key=2, style=dotted];
m80_40 -> m80_41  [key=0, style=solid];
m80_40 -> m80_48  [key=0, style=solid];
m80_40 -> m80_42  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_40 -> m80_43  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_40 -> m80_44  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_40 -> m80_120  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_40 -> m80_45  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_40 -> m80_46  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_40 -> m80_47  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_42 -> m80_43  [key=0, style=solid];
m80_42 -> m80_40  [key=0, style=solid];
m80_42 -> m80_97  [key=2, style=dotted];
m80_46 -> m80_40  [key=0, style=solid];
m80_46 -> m80_94  [key=2, style=dotted];
m80_51 -> m80_52  [key=0, style=solid];
m80_51 -> m80_100  [key=2, style=dotted];
m80_51 -> m80_53  [key=1, style=dashed, color=darkseagreen4, label=security];
m80_51 -> m80_62  [key=1, style=dashed, color=darkseagreen4, label=security];
m80_51 -> m80_64  [key=1, style=dashed, color=darkseagreen4, label=security];
m80_53 -> m80_54  [key=0, style=solid];
m80_53 -> m80_61  [key=0, style=solid];
m80_53 -> m80_101  [key=2, style=dotted];
m80_53 -> m80_55  [key=1, style=dashed, color=darkseagreen4, label=request];
m80_53 -> m80_57  [key=1, style=dashed, color=darkseagreen4, label=request];
m80_53 -> m80_58  [key=1, style=dashed, color=darkseagreen4, label=request];
m80_53 -> m80_59  [key=1, style=dashed, color=darkseagreen4, label=request];
m80_62 -> m80_63  [key=0, style=solid];
m80_62 -> m80_107  [key=2, style=dotted];
m80_68 -> m80_67  [key=0, style=solid, color=red];
m80_68 -> m80_82  [key=2, style=dotted, color=red];
m80_68 -> m80_109  [key=2, style=dotted, color=red];
m80_68 -> m80_106  [key=2, style=dotted, color=red];
m80_71 -> m80_72  [key=0, style=solid];
m80_71 -> m80_111  [key=2, style=dotted];
m80_12 -> m80_13  [key=0, style=solid];
m80_12 -> m80_28  [key=0, style=solid];
m80_14 -> m80_15  [key=0, style=solid];
m80_14 -> m80_75  [key=2, style=dotted];
m80_14 -> m80_26  [key=1, style=dashed, color=darkseagreen4, label=fineCollection];
m80_14 -> m80_27  [key=1, style=dashed, color=darkseagreen4, label=fineCollection];
m80_16 -> m80_17  [key=0, style=solid];
m80_16 -> m80_27  [key=0, style=solid];
m80_16 -> m80_18  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m80_16 -> m80_19  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m80_16 -> m80_20  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m80_16 -> m80_22  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m80_15 -> m80_16  [key=0, style=solid];
m80_15 -> m80_76  [key=2, style=dotted];
m80_15 -> m80_24  [key=1, style=dashed, color=green, label=dataProvider];
m80_26 -> m80_16  [key=0, style=solid];
m80_26 -> m80_85  [key=2, style=dotted];
m80_24 -> m80_25  [key=0, style=solid, color=green];
m80_24 -> m80_83  [key=2, style=dotted, color=green];
m80_24 -> m80_26  [key=1, style=dashed, color=green, label=enumerator];
m80_18 -> m80_19  [key=0, style=solid];
m80_18 -> m80_78  [key=2, style=dotted];
m80_18 -> m80_23  [key=1, style=dashed, color=darkseagreen4, label=config];
m80_20 -> m80_21  [key=0, style=solid];
m80_20 -> m80_80  [key=2, style=dotted];
m80_20 -> m80_22  [key=1, style=dashed, color=darkseagreen4, label=symbolProperties];
m80_22 -> m80_23  [key=0, style=solid, color=red];
m80_22 -> m80_81  [key=2, style=dotted];
m80_21 -> m80_22  [key=0, style=solid];
m80_25 -> m80_26  [key=0, style=solid];
m80_25 -> m80_16  [key=0, style=solid];
m80_25 -> m80_84  [key=2, style=dotted];
m80_29 -> m80_30  [key=0, style=solid];
m80_29 -> m80_31  [key=0, style=solid];
m80_29 -> m80_87  [key=2, style=dotted];
m80_31 -> m80_32  [key=0, style=solid];
m80_31 -> m80_88  [key=2, style=dotted];
m80_31 -> m80_41  [key=1, style=dashed, color=darkseagreen4, label=selections];
m80_31 -> m80_48  [key=1, style=dashed, color=darkseagreen4, label=selections];
m80_30 -> m80_73  [key=0, style=solid];
m80_32 -> m80_33  [key=0, style=solid];
m80_32 -> n166  [key=2, style=dotted];
m80_32 -> m80_64  [key=1, style=dashed, color=darkseagreen4, label=additions];
m80_32 -> m80_65  [key=1, style=dashed, color=darkseagreen4, label=additions];
m80_32 -> m80_69  [key=1, style=dashed, color=darkseagreen4, label=additions];
m80_41 -> m80_42  [key=0, style=solid];
m80_41 -> m80_40  [key=0, style=solid];
m80_41 -> m80_96  [key=2, style=dotted];
m80_48 -> m80_49  [key=0, style=solid];
m80_48 -> m80_65  [key=0, style=solid];
m80_48 -> m80_50  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m80_48 -> m80_51  [key=1, style=dashed, color=darkseagreen4, label=symbol];
m80_33 -> m80_34  [key=0, style=solid];
m80_33 -> n166  [key=2, style=dotted];
m80_33 -> m80_38  [key=1, style=dashed, color=darkseagreen4, label=removals];
m80_33 -> m80_43  [key=1, style=dashed, color=darkseagreen4, label=removals];
m80_33 -> m80_46  [key=1, style=dashed, color=darkseagreen4, label=removals];
m80_33 -> m80_69  [key=1, style=dashed, color=darkseagreen4, label=removals];
m80_64 -> m80_48  [key=0, style=solid];
m80_64 -> m80_85  [key=2, style=dotted];
m80_65 -> m80_66  [key=0, style=solid];
m80_65 -> m80_69  [key=0, style=solid];
m80_69 -> m80_70  [key=0, style=solid];
m80_69 -> m80_110  [key=2, style=dotted];
m80_69 -> m80_71  [key=1, style=dashed, color=darkseagreen4, label=securityChanges];
m80_69 -> m80_72  [key=1, style=dashed, color=darkseagreen4, label=securityChanges];
m80_34 -> m80_35  [key=0, style=solid];
m80_34 -> m80_90  [key=2, style=dotted];
m80_34 -> m80_38  [key=1, style=dashed, color=darkseagreen4, label=algorithmEndDateUtc];
m80_34 -> m80_46  [key=1, style=dashed, color=darkseagreen4, label=algorithmEndDateUtc];
m80_34 -> m80_53  [key=1, style=dashed, color=darkseagreen4, label=algorithmEndDateUtc];
m80_34 -> m80_68  [key=1, style=dashed, color=red, label=algorithmEndDateUtc];
m80_43 -> m80_44  [key=0, style=solid];
m80_43 -> m80_85  [key=2, style=dotted];
m80_35 -> m80_36  [key=0, style=solid];
m80_35 -> m80_40  [key=0, style=solid];
m80_35 -> m80_91  [key=2, style=dotted];
m80_35 -> m80_116  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_35 -> m80_37  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_35 -> m80_38  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_35 -> m80_39  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_36 -> m80_37  [key=0, style=solid];
m80_36 -> m80_92  [key=2, style=dotted];
m80_36 -> m80_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m80_37 -> m80_38  [key=0, style=solid];
m80_37 -> m80_35  [key=0, style=solid];
m80_37 -> m80_93  [key=2, style=dotted];
m80_39 -> m80_35  [key=0, style=solid];
m80_39 -> m80_95  [key=2, style=dotted];
m80_44 -> m80_45  [key=0, style=solid];
m80_44 -> m80_92  [key=2, style=dotted];
m80_44 -> m80_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m80_45 -> m80_46  [key=0, style=solid];
m80_45 -> m80_47  [key=0, style=solid];
m80_45 -> m80_93  [key=2, style=dotted];
m80_47 -> m80_40  [key=0, style=solid];
m80_47 -> m80_98  [key=2, style=dotted];
m80_49 -> m80_50  [key=0, style=solid];
m80_50 -> m80_51  [key=0, style=solid];
m80_50 -> m80_52  [key=0, style=solid];
m80_50 -> m80_99  [key=2, style=dotted];
m80_50 -> m80_53  [key=1, style=dashed, color=darkseagreen4, label=security];
m80_50 -> m80_62  [key=1, style=dashed, color=darkseagreen4, label=security];
m80_50 -> m80_64  [key=1, style=dashed, color=darkseagreen4, label=security];
m80_52 -> m80_53  [key=0, style=solid];
m80_52 -> m80_61  [key=1, style=dashed, color=darkseagreen4, label=addedSubscription];
m80_52 -> m80_52  [key=3, color=darkorchid, style=bold, label="Local variable bool addedSubscription"];
m80_61 -> m80_62  [key=0, style=solid];
m80_61 -> m80_48  [key=0, style=solid];
m80_54 -> m80_55  [key=0, style=solid];
m80_55 -> m80_56  [key=0, style=solid];
m80_55 -> m80_58  [key=0, style=solid];
m80_55 -> m80_102  [key=2, style=dotted];
m80_55 -> m80_57  [key=1, style=dashed, color=darkseagreen4, label=reason];
m80_57 -> m80_53  [key=0, style=solid];
m80_57 -> m80_104  [key=2, style=dotted];
m80_57 -> m80_105  [key=2, style=dotted];
m80_58 -> m80_59  [key=0, style=solid];
m80_58 -> m80_106  [key=2, style=dotted];
m80_59 -> m80_60  [key=0, style=solid];
m80_59 -> m80_53  [key=0, style=solid];
m80_56 -> m80_57  [key=0, style=solid];
m80_56 -> m80_103  [key=2, style=dotted];
m80_60 -> m80_53  [key=0, style=solid];
m80_60 -> m80_61  [key=1, style=dashed, color=darkseagreen4, label=addedSubscription];
m80_63 -> m80_64  [key=0, style=solid];
m80_63 -> m80_48  [key=0, style=solid];
m80_66 -> m80_67  [key=0, style=solid];
m80_66 -> m80_108  [key=2, style=dotted];
m80_67 -> m80_68  [key=0, style=solid, color=red];
m80_67 -> m80_69  [key=0, style=solid];
m80_70 -> m80_71  [key=0, style=solid];
m80_70 -> m80_72  [key=0, style=solid];
m80_72 -> m80_73  [key=0, style=solid];
m80_73 -> m80_9  [key=0, style=bold, color=blue];
m80_94 -> m80_122  [key=0, style=solid];
m80_94 -> m80_123  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m80_94 -> m80_124  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.UniverseSelection.Universe"];
m80_94 -> m80_126  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m80_94 -> m80_128  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m80_94 -> m80_9  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime dateTimeUtc"];
m80_94 -> m80_35  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security member"];
m80_94 -> m80_40  [key=3, color=darkorchid, style=bold, label="Parameter variable QuantConnect.Securities.Security member"];
m80_94 -> m80_33  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.List<QuantConnect.Securities.Security> removals"];
m80_94 -> m80_34  [key=3, color=darkorchid, style=bold, label="Parameter variable System.DateTime algorithmEndDateUtc"];
m80_122 -> m80_123  [key=0, style=solid];
m80_122 -> m80_130  [key=2, style=dotted];
m80_123 -> m80_124  [key=0, style=solid];
m80_123 -> m80_131  [key=2, style=dotted];
m80_124 -> m80_125  [key=0, style=solid];
m80_124 -> m80_128  [key=0, style=solid];
m80_124 -> m80_101  [key=2, style=dotted];
m80_124 -> m80_127  [key=1, style=dashed, color=darkseagreen4, label=subscription];
m80_126 -> m80_124  [key=0, style=solid];
m80_126 -> m80_132  [key=2, style=dotted];
m80_128 -> m80_129  [key=0, style=solid];
m80_128 -> m80_134  [key=2, style=dotted];
m80_125 -> m80_126  [key=0, style=solid];
m80_125 -> m80_127  [key=0, style=solid];
m80_127 -> m80_124  [key=0, style=solid];
m80_127 -> m80_133  [key=2, style=dotted];
m80_129 -> m80_94  [key=0, style=bold, color=blue];
m80_0 -> m80_1  [key=0, style=solid];
m80_0 -> m80_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Interfaces.IAlgorithm"];
m80_0 -> m80_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
m80_0 -> m80_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
m80_1 -> m80_2  [key=0, style=solid];
m80_2 -> m80_3  [key=0, style=solid];
m80_3 -> m80_4  [key=0, style=solid];
m80_3 -> m80_5  [key=2, style=dotted];
m80_4 -> m80_0  [key=0, style=bold, color=blue];
m80_135 -> m80_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_17  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_19  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_20  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_46  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_50  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_55  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_56  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_58  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_68  [key=1, style=dashed, color=red, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_135 -> m80_127  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.UniverseSelection"];
m80_136 -> m80_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed"];
m80_137 -> m80_113  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m80_138 -> m80_116  [key=1, style=dashed, color=darkseagreen4, label=member];
m80_139 -> m80_120  [key=1, style=dashed, color=darkseagreen4, label=member];
m82_15 -> m82_16  [key=0, style=solid];
m82_15 -> m82_46  [key=2, style=dotted];
m82_2 -> m82_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m82_2 -> m82_3  [key=0, style=solid];
m82_2 -> m82_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m82_2 -> m82_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.Security"];
m82_2 -> m82_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m82_2 -> m82_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m82_2 -> m82_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m82_12 -> m82_14  [key=0, style=solid, color=green];
m82_12 -> m82_13  [key=0, style=solid];
m82_11 -> m82_12  [key=0, style=solid, color=green];
m82_11 -> m82_15  [key=2, style=dotted];
m82_11 -> m82_14  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m82_11 -> m82_43  [key=2, style=dotted];
m82_10 -> m82_11  [key=0, style=solid];
m82_10 -> m82_13  [key=0, style=solid];
m82_10 -> m82_44  [key=2, style=dotted];
m82_10 -> m82_43  [key=2, style=dotted];
m82_3 -> m82_14  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m82_3 -> m82_4  [key=0, style=solid];
m82_5 -> m82_14  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m82_5 -> m82_15  [key=2, style=dotted];
m82_5 -> m82_6  [key=0, style=solid];
m82_5 -> m82_41  [key=2, style=dotted];
m82_5 -> m82_37  [key=1, style=dashed, color=darkseagreen4, label=liveMode];
m82_8 -> m82_14  [key=1, style=dashed, color=darkseagreen4, label="out QuantConnect.Brokerages.BrokerageMessageEvent"];
m82_8 -> m82_15  [key=2, style=dotted];
m82_8 -> m82_9  [key=0, style=solid];
m82_6 -> m82_14  [key=0, style=solid];
m82_6 -> m82_7  [key=0, style=solid];
m82_6 -> m82_41  [key=2, style=dotted];
m82_9 -> m82_14  [key=0, style=solid];
m82_9 -> m82_10  [key=0, style=solid];
m82_9 -> m82_43  [key=2, style=dotted];
m82_13 -> m82_14  [key=0, style=solid];
m82_13 -> m82_17  [key=0, style=solid];
m82_13 -> m82_45  [key=2, style=dotted];
m82_13 -> m82_19  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m82_13 -> m82_32  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m82_13 -> m82_33  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m82_13 -> m82_34  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m82_13 -> m82_35  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m82_13 -> m82_37  [key=1, style=dashed, color=darkseagreen4, label=leanEngineSystemHandlers];
m82_4 -> m82_5  [key=0, style=solid];
m82_4 -> m82_7  [key=0, style=solid];
m82_4 -> m82_40  [key=2, style=dotted];
m82_4 -> m82_27  [key=1, style=dashed, color=darkseagreen4, label=environment];
m82_7 -> m82_10  [key=0, style=solid];
m82_7 -> m82_8  [key=0, style=solid];
m82_7 -> m82_40  [key=2, style=dotted];
m82_7 -> m82_42  [key=2, style=dotted];
m82_14 -> m82_2  [key=0, style=bold, color=blue];
m82_14 -> m82_15  [key=0, style=solid];
m82_0 -> m82_1  [key=0, style=solid];
m82_1 -> m82_2  [key=0, style=solid];
m82_1 -> m82_9  [key=1, style=dashed, color=darkseagreen4, label=mode];
m82_27 -> m82_28  [key=0, style=solid];
m82_27 -> m82_30  [key=0, style=solid];
m82_27 -> m82_51  [key=2, style=dotted];
m82_37 -> m82_38  [key=0, style=solid];
m82_37 -> m82_61  [key=2, style=dotted];
m82_17 -> m82_18  [key=0, style=solid];
m82_17 -> m82_47  [key=2, style=dotted];
m82_19 -> m82_20  [key=0, style=solid];
m82_19 -> m82_48  [key=2, style=dotted];
m82_19 -> m82_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m82_19 -> m82_31  [key=1, style=dashed, color=darkseagreen4, label=job];
m82_19 -> m82_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m82_19 -> m82_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m82_19 -> m82_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m82_19 -> m82_35  [key=1, style=dashed, color=darkseagreen4, label=job];
m82_19 -> m82_38  [key=1, style=dashed, color=darkseagreen4, label=assemblyPath];
m82_32 -> m82_33  [key=0, style=solid];
m82_32 -> m82_56  [key=2, style=dotted];
m82_33 -> m82_34  [key=0, style=solid];
m82_33 -> m82_57  [key=2, style=dotted];
m82_34 -> m82_35  [key=0, style=solid];
m82_34 -> m82_58  [key=2, style=dotted];
m82_34 -> m82_59  [key=2, style=dotted];
m82_35 -> m82_36  [key=0, style=solid];
m82_35 -> m82_60  [key=2, style=dotted];
m82_16 -> m82_39  [key=0, style=solid];
m82_18 -> m82_19  [key=0, style=solid];
m82_20 -> m82_21  [key=0, style=solid];
m82_20 -> m82_22  [key=0, style=solid];
m82_30 -> m82_31  [key=0, style=solid];
m82_30 -> m82_37  [key=0, style=solid];
m82_30 -> m82_54  [key=2, style=dotted];
m82_31 -> m82_32  [key=0, style=solid];
m82_31 -> m82_55  [key=2, style=dotted];
m82_38 -> m82_39  [key=0, style=solid];
m82_38 -> m82_62  [key=2, style=dotted];
m82_21 -> m82_39  [key=0, style=solid];
m82_21 -> m82_49  [key=2, style=dotted];
m82_22 -> m82_23  [key=0, style=solid];
m82_23 -> m82_24  [key=0, style=solid];
m82_23 -> m82_27  [key=0, style=solid];
m82_23 -> m82_50  [key=2, style=dotted];
m82_23 -> m82_37  [key=1, style=dashed, color=darkseagreen4, label=leanEngineAlgorithmHandlers];
m82_24 -> m82_25  [key=0, style=solid];
m82_25 -> m82_26  [key=0, style=solid];
m82_25 -> m82_46  [key=2, style=dotted];
m82_26 -> m82_39  [key=0, style=solid];
m82_28 -> m82_29  [key=0, style=solid];
m82_28 -> m82_52  [key=2, style=dotted];
m82_28 -> m82_40  [key=2, style=dotted];
m82_29 -> m82_30  [key=0, style=solid];
m82_29 -> m82_53  [key=2, style=dotted];
m82_36 -> m82_39  [key=0, style=solid];
m82_39 -> m82_0  [key=0, style=bold, color=blue];
m83_258 -> m83_259  [key=0, style=solid];
m83_258 -> m83_260  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_258 -> m83_261  [key=1, style=dashed, color=darkseagreen4, label=long];
m83_258 -> m83_263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrderType"];
m83_258 -> m83_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrderDuration"];
m83_258 -> m83_265  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_258 -> m83_266  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_258 -> m83_267  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_258 -> m83_268  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_259 -> m83_260  [key=0, style=solid];
m83_259 -> m83_168  [key=2, style=dotted];
m83_259 -> m83_261  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_259 -> m83_262  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_260 -> m83_261  [key=0, style=solid];
m83_260 -> m83_226  [key=2, style=dotted];
m83_260 -> m83_207  [key=2, style=dotted];
m83_261 -> m83_262  [key=0, style=solid];
m83_261 -> m83_206  [key=2, style=dotted];
m83_261 -> m83_207  [key=2, style=dotted];
m83_263 -> m83_264  [key=0, style=solid];
m83_263 -> m83_256  [key=2, style=dotted];
m83_263 -> m83_170  [key=2, style=dotted];
m83_264 -> m83_265  [key=0, style=solid];
m83_264 -> m83_256  [key=2, style=dotted];
m83_264 -> m83_170  [key=2, style=dotted];
m83_265 -> m83_266  [key=0, style=solid];
m83_265 -> m83_267  [key=0, style=solid];
m83_266 -> m83_267  [key=0, style=solid];
m83_266 -> m83_257  [key=2, style=dotted];
m83_266 -> m83_271  [key=2, style=dotted];
m83_266 -> m83_170  [key=2, style=dotted];
m83_267 -> m83_268  [key=0, style=solid];
m83_267 -> m83_269  [key=0, style=solid];
m83_268 -> m83_269  [key=0, style=solid];
m83_268 -> m83_257  [key=2, style=dotted];
m83_268 -> m83_271  [key=2, style=dotted];
m83_268 -> m83_170  [key=2, style=dotted];
m83_262 -> m83_263  [key=0, style=solid];
m83_262 -> m83_262  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_262 -> m83_264  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_262 -> m83_266  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_262 -> m83_268  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_262 -> m83_269  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_269 -> m83_270  [key=0, style=solid];
m83_269 -> m83_54  [key=2, style=dotted];
m83_270 -> m83_258  [key=0, style=bold, color=blue];
m83_238 -> m83_239  [key=0, style=solid];
m83_238 -> m83_240  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_238 -> m83_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrderClass"];
m83_238 -> m83_242  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_238 -> m83_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrderDuration"];
m83_238 -> m83_244  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrderType"];
m83_238 -> m83_245  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_238 -> m83_246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrderDirection"];
m83_238 -> m83_247  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_238 -> m83_248  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_238 -> m83_249  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_238 -> m83_250  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_238 -> m83_251  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_238 -> m83_252  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_239 -> m83_240  [key=0, style=solid];
m83_239 -> m83_168  [key=2, style=dotted];
m83_239 -> m83_241  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_239 -> m83_242  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_239 -> m83_243  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_239 -> m83_244  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_239 -> m83_245  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_239 -> m83_246  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_239 -> m83_248  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_239 -> m83_250  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_239 -> m83_252  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_239 -> m83_253  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_240 -> m83_241  [key=0, style=solid];
m83_240 -> m83_226  [key=2, style=dotted];
m83_240 -> m83_207  [key=2, style=dotted];
m83_241 -> m83_242  [key=0, style=solid];
m83_241 -> m83_256  [key=2, style=dotted];
m83_241 -> m83_170  [key=2, style=dotted];
m83_242 -> m83_243  [key=0, style=solid];
m83_242 -> m83_170  [key=2, style=dotted];
m83_243 -> m83_244  [key=0, style=solid];
m83_243 -> m83_256  [key=2, style=dotted];
m83_243 -> m83_170  [key=2, style=dotted];
m83_244 -> m83_245  [key=0, style=solid];
m83_244 -> m83_256  [key=2, style=dotted];
m83_244 -> m83_170  [key=2, style=dotted];
m83_245 -> m83_246  [key=0, style=solid];
m83_245 -> m83_170  [key=2, style=dotted];
m83_246 -> m83_247  [key=0, style=solid];
m83_246 -> m83_256  [key=2, style=dotted];
m83_246 -> m83_170  [key=2, style=dotted];
m83_247 -> m83_248  [key=0, style=solid];
m83_247 -> m83_249  [key=0, style=solid];
m83_248 -> m83_249  [key=0, style=solid];
m83_248 -> m83_257  [key=2, style=dotted];
m83_248 -> m83_170  [key=2, style=dotted];
m83_249 -> m83_250  [key=0, style=solid];
m83_249 -> m83_251  [key=0, style=solid];
m83_250 -> m83_251  [key=0, style=solid];
m83_250 -> m83_257  [key=2, style=dotted];
m83_250 -> m83_170  [key=2, style=dotted];
m83_251 -> m83_252  [key=0, style=solid];
m83_251 -> m83_253  [key=0, style=solid];
m83_252 -> m83_253  [key=0, style=solid];
m83_252 -> m83_170  [key=2, style=dotted];
m83_253 -> m83_254  [key=0, style=solid];
m83_253 -> m83_253  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_254 -> m83_255  [key=0, style=solid];
m83_254 -> m83_54  [key=2, style=dotted];
m83_255 -> m83_238  [key=0, style=bold, color=blue];
m83_353 -> m83_354  [key=0, style=solid];
m83_353 -> m83_356  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TokenResponse"];
m83_354 -> m83_355  [key=0, style=solid];
m83_354 -> m83_356  [key=1, style=dashed, color=darkseagreen4, label=handler];
m83_356 -> m83_357  [key=0, style=solid];
m83_356 -> m83_358  [key=2, style=dotted];
m83_355 -> m83_356  [key=0, style=solid];
m83_355 -> m83_357  [key=0, style=solid];
m83_357 -> m83_353  [key=0, style=bold, color=blue];
m83_568 -> m83_754  [key=0, style=solid];
m83_568 -> m83_755  [key=1, style=dashed, color=darkseagreen4, label=long];
m83_568 -> m83_756  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_568 -> m83_757  [key=1, style=dashed, color=darkseagreen4, label=long];
m83_754 -> m83_755  [key=0, style=solid];
m83_755 -> m83_756  [key=0, style=solid];
m83_755 -> m83_757  [key=0, style=solid];
m83_755 -> m83_498  [key=2, style=dotted];
m83_756 -> m83_758  [key=0, style=solid];
m83_757 -> m83_758  [key=0, style=solid];
m83_757 -> m83_759  [key=2, style=dotted];
m83_758 -> m83_568  [key=0, style=bold, color=blue];
m83_447 -> m83_958  [key=0, style=solid];
m83_447 -> m83_959  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrderClass"];
m83_447 -> m83_960  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_447 -> m83_961  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_447 -> m83_962  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_447 -> m83_963  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_447 -> m83_964  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_447 -> m83_965  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_447 -> m83_966  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_958 -> m83_959  [key=0, style=solid];
m83_959 -> m83_960  [key=0, style=solid];
m83_960 -> m83_961  [key=0, style=solid];
m83_961 -> m83_962  [key=0, style=solid];
m83_961 -> m83_884  [key=2, style=dotted];
m83_962 -> m83_963  [key=0, style=solid];
m83_962 -> m83_449  [key=2, style=dotted];
m83_963 -> m83_964  [key=0, style=solid];
m83_963 -> m83_501  [key=2, style=dotted];
m83_964 -> m83_965  [key=0, style=solid];
m83_964 -> m83_502  [key=2, style=dotted];
m83_965 -> m83_966  [key=0, style=solid];
m83_965 -> m83_919  [key=2, style=dotted];
m83_966 -> m83_967  [key=0, style=solid];
m83_966 -> m83_500  [key=2, style=dotted];
m83_967 -> m83_447  [key=0, style=bold, color=blue];
m83_54 -> m83_55  [key=0, style=solid];
m83_54 -> m83_56  [key=1, style=dashed, color=darkseagreen4, label=RestRequest];
m83_54 -> m83_57  [key=1, style=dashed, color=darkseagreen4, label=RestRequest];
m83_54 -> m83_58  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_54 -> m83_59  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_54 -> m83_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierApiRequestType"];
m83_54 -> m83_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierApiRequestType"];
m83_54 -> m83_67  [key=1, style=dashed, color=darkseagreen4, label=RestRequest];
m83_54 -> m83_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_54 -> m83_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_54 -> m83_82  [key=1, style=dashed, color=darkseagreen4, label=RestRequest];
m83_54 -> m83_84  [key=1, style=dashed, color=darkseagreen4, label=RestRequest];
m83_54 -> m83_89  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierApiRequestType"];
m83_54 -> m83_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_54 -> m83_98  [key=1, style=dashed, color=darkseagreen4, label=RestRequest];
m83_54 -> m83_104  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_54 -> m83_107  [key=1, style=dashed, color=darkseagreen4, label=RestRequest];
m83_55 -> m83_56  [key=0, style=solid];
m83_56 -> m83_57  [key=0, style=solid];
m83_56 -> m83_59  [key=1, style=dashed, color=darkseagreen4, label=method];
m83_56 -> m83_78  [key=1, style=dashed, color=darkseagreen4, label=method];
m83_56 -> m83_79  [key=1, style=dashed, color=darkseagreen4, label=method];
m83_56 -> m83_91  [key=1, style=dashed, color=darkseagreen4, label=method];
m83_56 -> m83_92  [key=1, style=dashed, color=darkseagreen4, label=method];
m83_56 -> m83_96  [key=1, style=dashed, color=darkseagreen4, label=method];
m83_56 -> m83_99  [key=1, style=dashed, color=darkseagreen4, label=method];
m83_56 -> m83_105  [key=1, style=dashed, color=darkseagreen4, label=method];
m83_56 -> m83_108  [key=1, style=dashed, color=darkseagreen4, label=method];
m83_56 -> m83_109  [key=1, style=dashed, color=darkseagreen4, label=method];
m83_57 -> m83_58  [key=0, style=solid];
m83_57 -> m83_113  [key=2, style=dotted];
m83_57 -> m83_131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_57 -> m83_78  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m83_57 -> m83_91  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m83_57 -> m83_99  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m83_57 -> m83_108  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m83_58 -> m83_59  [key=0, style=solid];
m83_58 -> m83_60  [key=0, style=solid];
m83_59 -> m83_60  [key=0, style=solid];
m83_59 -> m83_114  [key=2, style=dotted];
m83_64 -> m83_65  [key=0, style=solid];
m83_64 -> m83_66  [key=0, style=solid];
m83_66 -> m83_67  [key=0, style=solid];
m83_67 -> m83_68  [key=0, style=solid];
m83_67 -> m83_118  [key=2, style=dotted];
m83_67 -> m83_70  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_67 -> m83_71  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_67 -> m83_73  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_67 -> m83_76  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_67 -> m83_81  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_67 -> m83_92  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_67 -> m83_93  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_67 -> m83_94  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_67 -> m83_100  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_67 -> m83_102  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_69 -> m83_70  [key=0, style=solid];
m83_69 -> m83_71  [key=0, style=solid];
m83_70 -> m83_72  [key=0, style=solid];
m83_70 -> m83_74  [key=0, style=solid];
m83_70 -> m83_119  [key=2, style=dotted];
m83_70 -> m83_103  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_70 -> m83_111  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_82 -> m83_83  [key=0, style=solid];
m83_82 -> m83_88  [key=0, style=solid];
m83_84 -> m83_85  [key=0, style=solid];
m83_84 -> m83_125  [key=2, style=dotted];
m83_84 -> m83_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_84 -> m83_86  [key=1, style=dashed, color=darkseagreen4, label=parameter];
m83_89 -> m83_90  [key=0, style=solid];
m83_89 -> m83_91  [key=0, style=solid];
m83_95 -> m83_96  [key=0, style=solid];
m83_95 -> m83_99  [key=0, style=solid];
m83_95 -> m83_95  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_95 -> m83_98  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_95 -> m83_104  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_98 -> m83_112  [key=0, style=solid];
m83_98 -> m83_54  [key=2, style=dotted];
m83_104 -> m83_105  [key=0, style=solid];
m83_104 -> m83_108  [key=0, style=solid];
m83_104 -> m83_104  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_104 -> m83_107  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_107 -> m83_112  [key=0, style=solid];
m83_107 -> m83_54  [key=2, style=dotted];
m83_78 -> m83_79  [key=0, style=solid];
m83_78 -> n277  [key=2, style=dotted];
m83_78 -> m83_114  [key=2, style=dotted];
m83_79 -> m83_80  [key=0, style=solid];
m83_79 -> m83_120  [key=2, style=dotted];
m83_91 -> m83_92  [key=0, style=solid];
m83_91 -> n277  [key=2, style=dotted];
m83_91 -> m83_114  [key=2, style=dotted];
m83_92 -> m83_93  [key=0, style=solid];
m83_92 -> m83_120  [key=2, style=dotted];
m83_96 -> m83_97  [key=0, style=solid];
m83_96 -> m83_114  [key=2, style=dotted];
m83_99 -> m83_100  [key=0, style=solid];
m83_99 -> n277  [key=2, style=dotted];
m83_99 -> m83_114  [key=2, style=dotted];
m83_105 -> m83_106  [key=0, style=solid];
m83_105 -> m83_114  [key=2, style=dotted];
m83_108 -> m83_109  [key=0, style=solid];
m83_108 -> n277  [key=2, style=dotted];
m83_108 -> m83_114  [key=2, style=dotted];
m83_109 -> m83_110  [key=0, style=solid];
m83_109 -> m83_120  [key=2, style=dotted];
m83_60 -> m83_61  [key=0, style=solid];
m83_61 -> m83_62  [key=0, style=solid];
m83_61 -> m83_115  [key=2, style=dotted];
m83_61 -> m83_63  [key=1, style=dashed, color=darkseagreen4, label=client];
m83_61 -> m83_67  [key=1, style=dashed, color=darkseagreen4, label=client];
m83_62 -> m83_63  [key=0, style=solid];
m83_62 -> m83_116  [key=2, style=dotted];
m83_63 -> m83_64  [key=0, style=solid];
m83_63 -> m83_116  [key=2, style=dotted];
m83_65 -> m83_64  [key=0, style=solid];
m83_65 -> m83_117  [key=2, style=dotted];
m83_68 -> m83_69  [key=0, style=solid];
m83_71 -> m83_72  [key=0, style=solid];
m83_71 -> m83_74  [key=0, style=solid];
m83_71 -> m83_119  [key=2, style=dotted];
m83_71 -> m83_103  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_71 -> m83_111  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_73 -> m83_74  [key=0, style=solid];
m83_73 -> m83_120  [key=2, style=dotted];
m83_76 -> m83_77  [key=0, style=solid];
m83_76 -> m83_119  [key=2, style=dotted];
m83_76 -> m83_79  [key=1, style=dashed, color=darkseagreen4, label=fault];
m83_76 -> m83_80  [key=1, style=dashed, color=darkseagreen4, label=fault];
m83_81 -> m83_82  [key=0, style=solid];
m83_81 -> m83_89  [key=0, style=solid];
m83_81 -> m83_124  [key=2, style=dotted];
m83_93 -> m83_94  [key=0, style=solid];
m83_93 -> m83_128  [key=2, style=dotted];
m83_93 -> m83_123  [key=2, style=dotted];
m83_94 -> m83_95  [key=0, style=solid];
m83_94 -> m83_103  [key=0, style=solid];
m83_100 -> m83_101  [key=0, style=solid];
m83_100 -> m83_128  [key=2, style=dotted];
m83_100 -> m83_129  [key=2, style=dotted];
m83_100 -> m83_126  [key=2, style=dotted];
m83_100 -> m83_123  [key=2, style=dotted];
m83_102 -> m83_112  [key=0, style=solid];
m83_102 -> m83_130  [key=2, style=dotted];
m83_72 -> m83_73  [key=0, style=solid];
m83_74 -> m83_75  [key=0, style=solid];
m83_74 -> m83_94  [key=0, style=solid];
m83_103 -> m83_104  [key=0, style=solid];
m83_103 -> m83_111  [key=0, style=solid];
m83_111 -> m83_112  [key=0, style=solid];
m83_75 -> m83_76  [key=0, style=solid];
m83_77 -> m83_78  [key=0, style=solid];
m83_77 -> m83_81  [key=0, style=solid];
m83_80 -> m83_94  [key=0, style=solid];
m83_80 -> m83_122  [key=2, style=dotted];
m83_80 -> m83_123  [key=2, style=dotted];
m83_83 -> m83_84  [key=0, style=solid];
m83_83 -> m83_87  [key=1, style=dashed, color=darkseagreen4, label=orderId];
m83_88 -> m83_112  [key=0, style=solid];
m83_88 -> m83_127  [key=2, style=dotted];
m83_87 -> m83_88  [key=0, style=solid];
m83_87 -> m83_122  [key=2, style=dotted];
m83_87 -> m83_123  [key=2, style=dotted];
m83_85 -> m83_86  [key=0, style=solid];
m83_85 -> m83_87  [key=0, style=solid];
m83_86 -> m83_87  [key=0, style=solid];
m83_86 -> m83_126  [key=2, style=dotted];
m83_90 -> m83_112  [key=0, style=solid];
m83_90 -> m83_127  [key=2, style=dotted];
m83_97 -> m83_98  [key=0, style=solid];
m83_97 -> m83_117  [key=2, style=dotted];
m83_101 -> m83_102  [key=0, style=solid];
m83_106 -> m83_107  [key=0, style=solid];
m83_106 -> m83_117  [key=2, style=dotted];
m83_110 -> m83_111  [key=0, style=solid];
m83_110 -> m83_122  [key=2, style=dotted];
m83_110 -> m83_123  [key=2, style=dotted];
m83_112 -> m83_54  [key=0, style=bold, color=blue];
m83_180 -> m83_181  [key=0, style=solid];
m83_180 -> m83_182  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_181 -> m83_182  [key=0, style=solid];
m83_181 -> m83_168  [key=2, style=dotted];
m83_181 -> m83_183  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_182 -> m83_183  [key=0, style=solid];
m83_182 -> m83_170  [key=2, style=dotted];
m83_183 -> m83_184  [key=0, style=solid];
m83_183 -> m83_54  [key=2, style=dotted];
m83_184 -> m83_185  [key=0, style=solid];
m83_185 -> m83_180  [key=0, style=bold, color=blue];
m83_448 -> m83_905  [key=0, style=solid];
m83_448 -> m83_906  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_448 -> m83_907  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_448 -> m83_909  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_448 -> m83_910  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_905 -> m83_906  [key=0, style=solid];
m83_905 -> m83_446  [key=2, style=dotted];
m83_905 -> m83_907  [key=1, style=dashed, color=darkseagreen4, label=holdingQuantity];
m83_905 -> m83_909  [key=1, style=dashed, color=darkseagreen4, label=holdingQuantity];
m83_905 -> m83_910  [key=1, style=dashed, color=darkseagreen4, label=holdingQuantity];
m83_906 -> m83_907  [key=0, style=solid];
m83_906 -> m83_909  [key=0, style=solid];
m83_907 -> m83_908  [key=0, style=solid];
m83_907 -> m83_912  [key=0, style=solid];
m83_909 -> m83_910  [key=0, style=solid];
m83_909 -> m83_912  [key=0, style=solid];
m83_910 -> m83_911  [key=0, style=solid];
m83_910 -> m83_912  [key=0, style=solid];
m83_908 -> m83_913  [key=0, style=solid];
m83_912 -> m83_913  [key=0, style=solid];
m83_911 -> m83_913  [key=0, style=solid];
m83_913 -> m83_448  [key=0, style=bold, color=blue];
m83_532 -> m83_533  [key=0, style=solid];
m83_533 -> m83_534  [key=0, style=solid];
m83_534 -> m83_532  [key=0, style=bold, color=blue];
m83_256 -> m83_334  [key=0, style=solid];
m83_256 -> m83_338  [key=1, style=dashed, color=darkseagreen4, label="System.Enum"];
m83_334 -> m83_335  [key=0, style=solid];
m83_334 -> m83_340  [key=2, style=dotted];
m83_334 -> m83_341  [key=2, style=dotted];
m83_334 -> m83_342  [key=2, style=dotted];
m83_338 -> m83_339  [key=0, style=solid];
m83_338 -> m83_341  [key=2, style=dotted];
m83_335 -> m83_336  [key=0, style=solid];
m83_335 -> m83_343  [key=2, style=dotted];
m83_335 -> m83_337  [key=1, style=dashed, color=darkseagreen4, label=attributes];
m83_336 -> m83_337  [key=0, style=solid];
m83_336 -> m83_338  [key=0, style=solid];
m83_337 -> m83_339  [key=0, style=solid];
m83_339 -> m83_256  [key=0, style=bold, color=blue];
m83_359 -> m83_360  [key=0, style=solid];
m83_360 -> m83_361  [key=0, style=solid];
m83_360 -> m83_196  [key=2, style=dotted];
m83_360 -> m83_364  [key=1, style=dashed, color=darkseagreen4, label=orders];
m83_360 -> m83_365  [key=1, style=dashed, color=darkseagreen4, label=orders];
m83_361 -> m83_362  [key=0, style=solid];
m83_361 -> m83_217  [key=2, style=dotted];
m83_361 -> m83_367  [key=2, style=dotted];
m83_364 -> m83_362  [key=0, style=solid];
m83_364 -> m83_369  [key=2, style=dotted];
m83_364 -> m83_370  [key=2, style=dotted];
m83_365 -> m83_366  [key=0, style=solid];
m83_362 -> m83_363  [key=0, style=solid];
m83_362 -> m83_365  [key=0, style=solid];
m83_362 -> m83_364  [key=1, style=dashed, color=darkseagreen4, label=openOrder];
m83_363 -> m83_364  [key=0, style=solid];
m83_363 -> m83_368  [key=2, style=dotted];
m83_366 -> m83_359  [key=0, style=bold, color=blue];
m83_272 -> m83_273  [key=0, style=solid];
m83_272 -> m83_274  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_272 -> m83_275  [key=1, style=dashed, color=darkseagreen4, label=long];
m83_273 -> m83_274  [key=0, style=solid];
m83_273 -> m83_168  [key=2, style=dotted];
m83_273 -> m83_275  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_273 -> m83_276  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_274 -> m83_275  [key=0, style=solid];
m83_274 -> m83_226  [key=2, style=dotted];
m83_274 -> m83_207  [key=2, style=dotted];
m83_275 -> m83_276  [key=0, style=solid];
m83_275 -> m83_206  [key=2, style=dotted];
m83_275 -> m83_207  [key=2, style=dotted];
m83_276 -> m83_277  [key=0, style=solid];
m83_276 -> m83_276  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_277 -> m83_278  [key=0, style=solid];
m83_277 -> m83_54  [key=2, style=dotted];
m83_278 -> m83_272  [key=0, style=bold, color=blue];
m83_20 -> m83_21  [key=0, style=solid];
m83_20 -> m83_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_20 -> m83_23  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m83_20 -> m83_24  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m83_20 -> m83_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_21 -> m83_22  [key=0, style=solid];
m83_22 -> m83_23  [key=0, style=solid];
m83_23 -> m83_24  [key=0, style=solid];
m83_24 -> m83_25  [key=0, style=solid];
m83_25 -> m83_26  [key=0, style=solid];
m83_26 -> m83_27  [key=0, style=solid];
m83_26 -> m83_28  [key=0, style=solid];
m83_27 -> m83_28  [key=0, style=solid];
m83_27 -> m83_39  [key=2, style=dotted];
m83_28 -> m83_29  [key=0, style=solid];
m83_28 -> m83_30  [key=0, style=solid];
m83_29 -> m83_30  [key=0, style=solid];
m83_29 -> m83_39  [key=2, style=dotted];
m83_30 -> m83_31  [key=0, style=solid];
m83_30 -> m83_34  [key=1, style=dashed, color=darkseagreen4, label=dueTime];
m83_31 -> m83_32  [key=0, style=solid];
m83_31 -> m83_33  [key=0, style=solid];
m83_34 -> m83_35  [key=0, style=solid];
m83_34 -> m83_43  [key=2, style=dotted];
m83_32 -> m83_33  [key=0, style=solid];
m83_32 -> m83_34  [key=1, style=dashed, color=darkseagreen4, label=dueTime];
m83_33 -> m83_34  [key=0, style=solid];
m83_33 -> m83_40  [key=2, style=dotted];
m83_33 -> m83_41  [key=2, style=dotted];
m83_33 -> m83_42  [key=2, style=dotted];
m83_35 -> m83_36  [key=0, style=solid];
m83_35 -> m83_44  [key=2, style=dotted];
m83_36 -> m83_37  [key=0, style=solid];
m83_37 -> m83_38  [key=0, style=solid];
m83_37 -> m83_45  [key=2, style=dotted];
m83_38 -> m83_20  [key=0, style=bold, color=blue];
m83_394 -> m83_395  [key=0, style=solid];
m83_395 -> m83_396  [key=0, style=solid];
m83_395 -> m83_196  [key=2, style=dotted];
m83_395 -> m83_397  [key=2, style=dotted];
m83_395 -> m83_180  [key=2, style=dotted];
m83_396 -> m83_394  [key=0, style=bold, color=blue];
m83_884 -> m83_885  [key=0, style=solid];
m83_884 -> m83_886  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m83_884 -> m83_891  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_884 -> m83_892  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m83_884 -> m83_897  [key=1, style=dashed, color=darkseagreen4, label=decimal];
m83_884 -> m83_898  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderDirection"];
m83_885 -> m83_886  [key=0, style=solid];
m83_885 -> m83_891  [key=0, style=solid];
m83_886 -> m83_887  [key=0, style=solid];
m83_886 -> m83_889  [key=0, style=solid];
m83_891 -> m83_892  [key=0, style=solid];
m83_891 -> m83_897  [key=0, style=solid];
m83_892 -> m83_893  [key=0, style=solid];
m83_892 -> m83_895  [key=0, style=solid];
m83_897 -> m83_898  [key=0, style=solid];
m83_897 -> m83_903  [key=0, style=solid];
m83_898 -> m83_899  [key=0, style=solid];
m83_898 -> m83_901  [key=0, style=solid];
m83_887 -> m83_888  [key=0, style=solid];
m83_889 -> m83_890  [key=0, style=solid];
m83_888 -> m83_904  [key=0, style=solid];
m83_890 -> m83_904  [key=0, style=solid];
m83_893 -> m83_894  [key=0, style=solid];
m83_895 -> m83_896  [key=0, style=solid];
m83_894 -> m83_904  [key=0, style=solid];
m83_896 -> m83_904  [key=0, style=solid];
m83_903 -> m83_904  [key=0, style=solid];
m83_899 -> m83_900  [key=0, style=solid];
m83_901 -> m83_902  [key=0, style=solid];
m83_900 -> m83_904  [key=0, style=solid];
m83_902 -> m83_904  [key=0, style=solid];
m83_904 -> m83_884  [key=0, style=bold, color=blue];
m83_217 -> m83_218  [key=0, style=solid];
m83_218 -> m83_219  [key=0, style=solid];
m83_218 -> m83_168  [key=2, style=dotted];
m83_218 -> m83_220  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_219 -> m83_220  [key=0, style=solid];
m83_219 -> m83_226  [key=2, style=dotted];
m83_219 -> m83_207  [key=2, style=dotted];
m83_220 -> m83_221  [key=0, style=solid];
m83_220 -> m83_54  [key=2, style=dotted];
m83_220 -> m83_224  [key=1, style=dashed, color=darkseagreen4, label=ordersContainer];
m83_221 -> m83_222  [key=0, style=solid];
m83_221 -> m83_224  [key=0, style=solid];
m83_224 -> m83_225  [key=0, style=solid];
m83_222 -> m83_223  [key=0, style=solid];
m83_222 -> m83_195  [key=2, style=dotted];
m83_223 -> m83_225  [key=0, style=solid];
m83_223 -> m83_196  [key=2, style=dotted];
m83_225 -> m83_217  [key=0, style=bold, color=blue];
m83_624 -> m83_763  [key=0, style=solid];
m83_763 -> m83_764  [key=0, style=solid];
m83_763 -> m83_760  [key=2, style=dotted];
m83_764 -> m83_624  [key=0, style=bold, color=blue];
m83_398 -> m83_399  [key=0, style=solid];
m83_398 -> m83_400  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_401  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_403  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_456  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_415  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_416  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_417  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_420  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_422  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_424  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_429  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_432  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_398 -> m83_437  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_399 -> m83_400  [key=0, style=solid];
m83_399 -> m83_195  [key=2, style=dotted];
m83_400 -> m83_401  [key=0, style=solid];
m83_400 -> m83_403  [key=0, style=solid];
m83_400 -> m83_440  [key=2, style=dotted];
m83_401 -> m83_402  [key=0, style=solid];
m83_401 -> m83_195  [key=2, style=dotted];
m83_403 -> m83_404  [key=0, style=solid];
m83_403 -> m83_125  [key=2, style=dotted];
m83_403 -> m83_455  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_403 -> m83_405  [key=1, style=dashed, color=darkseagreen4, label=cachedOpenOrder];
m83_403 -> m83_409  [key=1, style=dashed, color=darkseagreen4, label=cachedOpenOrder];
m83_415 -> m83_416  [key=0, style=solid];
m83_415 -> m83_446  [key=2, style=dotted];
m83_415 -> m83_419  [key=1, style=dashed, color=darkseagreen4, label=holdingQuantity];
m83_416 -> m83_417  [key=0, style=solid];
m83_416 -> m83_447  [key=2, style=dotted];
m83_416 -> m83_421  [key=1, style=dashed, color=darkseagreen4, label=orderRequest];
m83_416 -> m83_425  [key=1, style=dashed, color=darkseagreen4, label=orderRequest];
m83_416 -> m83_434  [key=1, style=dashed, color=darkseagreen4, label=orderRequest];
m83_417 -> m83_418  [key=0, style=solid];
m83_417 -> m83_448  [key=2, style=dotted];
m83_420 -> m83_421  [key=0, style=solid];
m83_420 -> m83_422  [key=1, style=dashed, color=darkseagreen4, label=secondOrderQuantity];
m83_422 -> m83_423  [key=0, style=solid];
m83_422 -> m83_447  [key=2, style=dotted];
m83_422 -> m83_449  [key=2, style=dotted];
m83_422 -> m83_424  [key=1, style=dashed, color=darkseagreen4, label=restOfOrder];
m83_424 -> m83_425  [key=0, style=solid];
m83_424 -> m83_451  [key=2, style=dotted];
m83_424 -> m83_452  [key=2, style=dotted];
m83_429 -> m83_430  [key=0, style=solid];
m83_429 -> m83_444  [key=2, style=dotted];
m83_432 -> m83_433  [key=0, style=solid];
m83_432 -> m83_206  [key=2, style=dotted];
m83_432 -> m83_370  [key=2, style=dotted];
m83_437 -> m83_438  [key=0, style=solid];
m83_437 -> m83_206  [key=2, style=dotted];
m83_437 -> m83_370  [key=2, style=dotted];
m83_402 -> m83_439  [key=0, style=solid];
m83_404 -> m83_405  [key=0, style=solid];
m83_404 -> m83_415  [key=0, style=solid];
m83_405 -> m83_406  [key=0, style=solid];
m83_405 -> m83_441  [key=2, style=dotted];
m83_405 -> m83_410  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_405 -> m83_411  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_405 -> m83_413  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_405 -> m83_414  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_409 -> m83_415  [key=0, style=solid];
m83_409 -> m83_442  [key=2, style=dotted];
m83_406 -> m83_407  [key=0, style=solid];
m83_406 -> m83_410  [key=0, style=solid];
m83_410 -> m83_411  [key=0, style=solid];
m83_410 -> m83_415  [key=0, style=solid];
m83_410 -> m83_443  [key=2, style=dotted];
m83_411 -> m83_412  [key=0, style=solid];
m83_411 -> m83_122  [key=2, style=dotted];
m83_411 -> m83_123  [key=2, style=dotted];
m83_413 -> m83_414  [key=0, style=solid];
m83_413 -> m83_444  [key=2, style=dotted];
m83_414 -> m83_415  [key=0, style=solid];
m83_414 -> m83_445  [key=2, style=dotted];
m83_407 -> m83_408  [key=0, style=solid];
m83_408 -> m83_409  [key=0, style=solid];
m83_408 -> m83_236  [key=2, style=dotted];
m83_412 -> m83_413  [key=0, style=solid];
m83_419 -> m83_420  [key=0, style=solid];
m83_419 -> m83_421  [key=1, style=dashed, color=darkseagreen4, label=firstOrderQuantity];
m83_421 -> m83_422  [key=0, style=solid];
m83_421 -> m83_449  [key=2, style=dotted];
m83_425 -> m83_426  [key=0, style=solid];
m83_425 -> m83_453  [key=2, style=dotted];
m83_425 -> m83_431  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_434 -> m83_435  [key=0, style=solid];
m83_434 -> m83_453  [key=2, style=dotted];
m83_434 -> m83_437  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_418 -> m83_419  [key=0, style=solid];
m83_418 -> m83_434  [key=0, style=solid];
m83_423 -> m83_424  [key=0, style=solid];
m83_423 -> m83_450  [key=2, style=dotted];
m83_426 -> m83_427  [key=0, style=solid];
m83_426 -> m83_454  [key=2, style=dotted];
m83_431 -> m83_432  [key=0, style=solid];
m83_427 -> m83_428  [key=0, style=solid];
m83_427 -> m83_431  [key=0, style=solid];
m83_428 -> m83_429  [key=0, style=solid];
m83_430 -> m83_439  [key=0, style=solid];
m83_433 -> m83_439  [key=0, style=solid];
m83_435 -> m83_436  [key=0, style=solid];
m83_435 -> m83_437  [key=0, style=solid];
m83_435 -> m83_454  [key=2, style=dotted];
m83_436 -> m83_439  [key=0, style=solid];
m83_438 -> m83_439  [key=0, style=solid];
m83_439 -> m83_398  [key=0, style=bold, color=blue];
m83_227 -> m83_228  [key=0, style=solid];
m83_228 -> m83_229  [key=0, style=solid];
m83_228 -> m83_168  [key=2, style=dotted];
m83_228 -> m83_230  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_229 -> m83_230  [key=0, style=solid];
m83_229 -> m83_226  [key=2, style=dotted];
m83_229 -> m83_207  [key=2, style=dotted];
m83_230 -> m83_231  [key=0, style=solid];
m83_230 -> m83_54  [key=2, style=dotted];
m83_230 -> m83_234  [key=1, style=dashed, color=darkseagreen4, label=detailsParent];
m83_231 -> m83_232  [key=0, style=solid];
m83_231 -> m83_234  [key=0, style=solid];
m83_234 -> m83_235  [key=0, style=solid];
m83_232 -> m83_233  [key=0, style=solid];
m83_232 -> m83_236  [key=2, style=dotted];
m83_233 -> m83_235  [key=0, style=solid];
m83_233 -> m83_237  [key=2, style=dotted];
m83_235 -> m83_227  [key=0, style=bold, color=blue];
m83_703 -> m83_704  [key=0, style=solid];
m83_704 -> m83_705  [key=0, style=solid];
m83_704 -> m83_706  [key=2, style=dotted];
m83_704 -> m83_707  [key=2, style=dotted];
m83_704 -> m83_440  [key=2, style=dotted];
m83_704 -> m83_704  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<long, QuantConnect.Brokerages.Tradier.TradierOrder>"];
m83_705 -> m83_703  [key=0, style=bold, color=blue];
m83_526 -> m83_527  [key=0, style=solid];
m83_527 -> m83_528  [key=0, style=solid];
m83_528 -> m83_529  [key=0, style=solid];
m83_528 -> m83_530  [key=0, style=solid];
m83_529 -> m83_531  [key=0, style=solid];
m83_530 -> m83_531  [key=0, style=solid];
m83_530 -> m83_49  [key=2, style=dotted];
m83_531 -> m83_526  [key=0, style=bold, color=blue];
m83_123 -> m83_535  [key=0, style=solid];
m83_123 -> m83_536  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m83_123 -> m83_537  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.BrokerageMessageEvent"];
m83_535 -> m83_536  [key=0, style=solid];
m83_535 -> m83_538  [key=1, style=dashed, color=darkseagreen4, label=message];
m83_536 -> m83_537  [key=0, style=solid];
m83_536 -> m83_538  [key=0, style=solid];
m83_536 -> m83_540  [key=2, style=dotted];
m83_536 -> m83_541  [key=2, style=dotted];
m83_537 -> m83_538  [key=0, style=solid];
m83_537 -> m83_122  [key=2, style=dotted];
m83_538 -> m83_539  [key=0, style=solid];
m83_538 -> m83_542  [key=2, style=dotted];
m83_539 -> m83_123  [key=0, style=bold, color=blue];
m83_499 -> m83_811  [key=0, style=solid];
m83_499 -> m83_820  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderType"];
m83_811 -> m83_812  [key=0, style=solid];
m83_811 -> m83_814  [key=0, style=solid];
m83_811 -> m83_816  [key=0, style=solid];
m83_811 -> m83_818  [key=0, style=solid];
m83_811 -> m83_820  [key=0, style=solid];
m83_820 -> m83_821  [key=0, style=solid];
m83_820 -> m83_779  [key=2, style=dotted];
m83_812 -> m83_813  [key=0, style=solid];
m83_814 -> m83_815  [key=0, style=solid];
m83_816 -> m83_817  [key=0, style=solid];
m83_818 -> m83_819  [key=0, style=solid];
m83_813 -> m83_821  [key=0, style=solid];
m83_815 -> m83_821  [key=0, style=solid];
m83_817 -> m83_821  [key=0, style=solid];
m83_819 -> m83_821  [key=0, style=solid];
m83_821 -> m83_499  [key=0, style=bold, color=blue];
m83_738 -> m83_951  [key=0, style=solid];
m83_951 -> m83_952  [key=0, style=solid];
m83_951 -> m83_953  [key=0, style=solid];
m83_952 -> m83_954  [key=0, style=solid];
m83_953 -> m83_954  [key=0, style=solid];
m83_953 -> m83_955  [key=2, style=dotted];
m83_954 -> m83_738  [key=0, style=bold, color=blue];
m83_739 -> m83_740  [key=0, style=solid];
m83_46 -> m83_47  [key=0, style=solid];
m83_47 -> m83_48  [key=0, style=solid];
m83_47 -> m83_49  [key=2, style=dotted];
m83_48 -> m83_46  [key=0, style=bold, color=blue];
m83_50 -> m83_51  [key=0, style=solid];
m83_51 -> m83_52  [key=0, style=solid];
m83_51 -> m83_53  [key=2, style=dotted];
m83_52 -> m83_50  [key=0, style=bold, color=blue];
m83_131 -> m83_132  [key=0, style=solid];
m83_134 -> m83_135  [key=0, style=solid];
m83_132 -> m83_133  [key=0, style=solid];
m83_133 -> m83_131  [key=0, style=bold, color=blue];
m83_135 -> m83_136  [key=0, style=solid];
m83_136 -> m83_134  [key=0, style=bold, color=blue];
m83_385 -> m83_386  [key=0, style=solid];
m83_388 -> m83_389  [key=0, style=solid];
m83_391 -> m83_392  [key=0, style=solid];
m83_386 -> m83_387  [key=0, style=solid];
m83_387 -> m83_385  [key=0, style=bold, color=blue];
m83_389 -> m83_390  [key=0, style=solid];
m83_390 -> m83_388  [key=0, style=bold, color=blue];
m83_392 -> m83_393  [key=0, style=solid];
m83_393 -> m83_391  [key=0, style=bold, color=blue];
m83_456 -> m83_457  [key=0, style=solid];
m83_456 -> m83_456  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<long, QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder>"];
m83_455 -> m83_456  [key=0, style=solid];
m83_457 -> m83_455  [key=0, style=bold, color=blue];
m83_573 -> m83_574  [key=0, style=solid];
m83_573 -> m83_580  [key=2, style=dotted];
m83_573 -> m83_125  [key=2, style=dotted];
m83_573 -> m83_588  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_573 -> m83_591  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_573 -> m83_577  [key=1, style=dashed, color=darkseagreen4, label=recentOrder];
m83_573 -> m83_578  [key=1, style=dashed, color=darkseagreen4, label=recentOrder];
m83_592 -> m83_593  [key=0, style=solid];
m83_575 -> m83_576  [key=0, style=solid];
m83_575 -> m83_122  [key=2, style=dotted];
m83_575 -> m83_123  [key=2, style=dotted];
m83_577 -> m83_578  [key=0, style=solid];
m83_577 -> m83_126  [key=2, style=dotted];
m83_577 -> m83_581  [key=2, style=dotted];
m83_571 -> m83_572  [key=0, style=solid];
m83_572 -> m83_573  [key=0, style=solid];
m83_572 -> m83_217  [key=2, style=dotted];
m83_572 -> m83_367  [key=2, style=dotted];
m83_572 -> m83_582  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_572 -> m83_585  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_582 -> m83_583  [key=0, style=solid];
m83_585 -> m83_586  [key=0, style=solid];
m83_574 -> m83_575  [key=0, style=solid];
m83_574 -> m83_577  [key=0, style=solid];
m83_588 -> m83_589  [key=0, style=solid];
m83_591 -> m83_592  [key=0, style=solid];
m83_578 -> m83_579  [key=0, style=solid];
m83_578 -> m83_114  [key=2, style=dotted];
m83_576 -> m83_579  [key=0, style=solid];
m83_579 -> m83_571  [key=0, style=bold, color=blue];
m83_583 -> m83_584  [key=0, style=solid];
m83_584 -> m83_582  [key=0, style=bold, color=blue];
m83_586 -> m83_587  [key=0, style=solid];
m83_586 -> m83_16  [key=2, style=dotted];
m83_587 -> m83_585  [key=0, style=bold, color=blue];
m83_589 -> m83_590  [key=0, style=solid];
m83_590 -> m83_588  [key=0, style=bold, color=blue];
m83_593 -> m83_591  [key=0, style=bold, color=blue];
m83_631 -> m83_632  [key=0, style=solid];
m83_634 -> m83_635  [key=0, style=solid];
m83_635 -> m83_636  [key=0, style=solid];
m83_635 -> m83_227  [key=2, style=dotted];
m83_635 -> m83_635  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_635 -> m83_637  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_635 -> m83_639  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_635 -> m83_640  [key=1, style=dashed, color=darkseagreen4, label=updatedOrderLocal];
m83_648 -> m83_649  [key=0, style=solid];
m83_651 -> m83_652  [key=0, style=solid];
m83_632 -> m83_633  [key=0, style=solid];
m83_633 -> m83_631  [key=0, style=bold, color=blue];
m83_636 -> m83_637  [key=0, style=solid];
m83_636 -> m83_639  [key=0, style=solid];
m83_637 -> m83_638  [key=0, style=solid];
m83_637 -> m83_645  [key=2, style=dotted];
m83_637 -> m83_236  [key=2, style=dotted];
m83_637 -> m83_637  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_637 -> m83_639  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_639 -> m83_640  [key=0, style=solid];
m83_639 -> m83_568  [key=2, style=dotted];
m83_639 -> m83_639  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_640 -> m83_641  [key=0, style=solid];
m83_640 -> m83_644  [key=0, style=solid];
m83_640 -> m83_623  [key=2, style=dotted];
m83_640 -> m83_640  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_640 -> m83_610  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_638 -> m83_644  [key=0, style=solid];
m83_638 -> m83_646  [key=2, style=dotted];
m83_641 -> m83_642  [key=0, style=solid];
m83_644 -> m83_634  [key=0, style=bold, color=blue];
m83_642 -> m83_643  [key=0, style=solid];
m83_642 -> m83_174  [key=2, style=dotted];
m83_643 -> m83_644  [key=0, style=solid];
m83_643 -> m83_122  [key=2, style=dotted];
m83_643 -> m83_123  [key=2, style=dotted];
m83_649 -> m83_650  [key=0, style=solid];
m83_650 -> m83_648  [key=0, style=bold, color=blue];
m83_652 -> m83_653  [key=0, style=solid];
m83_652 -> m83_627  [key=2, style=dotted];
m83_652 -> m83_654  [key=1, style=dashed, color=darkseagreen4, label=localUnknownTradierOrderIDs];
m83_652 -> m83_655  [key=1, style=dashed, color=darkseagreen4, label=localUnknownTradierOrderIDs];
m83_652 -> m83_656  [key=1, style=dashed, color=darkseagreen4, label=localUnknownTradierOrderIDs];
m83_652 -> m83_665  [key=1, style=dashed, color=darkseagreen4, label=localUnknownTradierOrderIDs];
m83_652 -> m83_669  [key=1, style=dashed, color=darkseagreen4, label=localUnknownTradierOrderIDs];
m83_653 -> m83_654  [key=0, style=solid];
m83_653 -> m83_674  [key=2, style=dotted];
m83_654 -> m83_655  [key=0, style=solid];
m83_654 -> n277  [key=2, style=dotted];
m83_654 -> m83_114  [key=2, style=dotted];
m83_655 -> m83_656  [key=0, style=solid];
m83_655 -> m83_113  [key=2, style=dotted];
m83_655 -> m83_367  [key=2, style=dotted];
m83_655 -> m83_676  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_655 -> m83_680  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_655 -> m83_684  [key=1, style=dashed, color=darkseagreen4, label=orders];
m83_656 -> m83_657  [key=0, style=solid];
m83_656 -> m83_367  [key=2, style=dotted];
m83_656 -> m83_381  [key=2, style=dotted];
m83_656 -> m83_683  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_656 -> m83_659  [key=1, style=dashed, color=darkseagreen4, label=stillUnknownOrderIDs];
m83_656 -> m83_660  [key=1, style=dashed, color=darkseagreen4, label=stillUnknownOrderIDs];
m83_656 -> m83_661  [key=1, style=dashed, color=darkseagreen4, label=stillUnknownOrderIDs];
m83_665 -> m83_666  [key=0, style=solid];
m83_665 -> m83_667  [key=0, style=solid];
m83_669 -> m83_670  [key=0, style=solid];
m83_669 -> m83_671  [key=0, style=solid];
m83_676 -> m83_677  [key=0, style=solid];
m83_680 -> m83_681  [key=0, style=solid];
m83_684 -> m83_685  [key=0, style=solid];
m83_684 -> m83_686  [key=2, style=dotted];
m83_684 -> m83_687  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_657 -> m83_658  [key=0, style=solid];
m83_657 -> m83_665  [key=0, style=solid];
m83_683 -> m83_684  [key=0, style=solid];
m83_683 -> m83_688  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m83_659 -> m83_660  [key=0, style=solid];
m83_659 -> m83_675  [key=2, style=dotted];
m83_659 -> m83_700  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_660 -> m83_661  [key=0, style=solid];
m83_660 -> m83_665  [key=0, style=solid];
m83_661 -> m83_662  [key=0, style=solid];
m83_661 -> n277  [key=2, style=dotted];
m83_661 -> m83_663  [key=1, style=dashed, color=darkseagreen4, label=ids];
m83_658 -> m83_659  [key=0, style=solid];
m83_658 -> m83_217  [key=2, style=dotted];
m83_658 -> m83_367  [key=2, style=dotted];
m83_658 -> m83_627  [key=2, style=dotted];
m83_658 -> m83_691  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_658 -> m83_694  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_658 -> m83_697  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_658 -> m83_701  [key=1, style=dashed, color=darkseagreen4, label=recentOrders];
m83_691 -> m83_692  [key=0, style=solid];
m83_694 -> m83_695  [key=0, style=solid];
m83_697 -> m83_698  [key=0, style=solid];
m83_701 -> m83_702  [key=0, style=solid];
m83_701 -> m83_124  [key=2, style=dotted];
m83_700 -> m83_701  [key=0, style=solid];
m83_662 -> m83_663  [key=0, style=solid];
m83_662 -> m83_236  [key=2, style=dotted];
m83_663 -> m83_664  [key=0, style=solid];
m83_663 -> m83_122  [key=2, style=dotted];
m83_663 -> m83_123  [key=2, style=dotted];
m83_664 -> m83_673  [key=0, style=solid];
m83_666 -> m83_665  [key=0, style=solid];
m83_666 -> m83_581  [key=2, style=dotted];
m83_667 -> m83_668  [key=0, style=solid];
m83_667 -> m83_673  [key=0, style=solid];
m83_667 -> m83_195  [key=2, style=dotted];
m83_668 -> m83_669  [key=0, style=solid];
m83_673 -> m83_651  [key=0, style=bold, color=blue];
m83_670 -> m83_669  [key=0, style=solid];
m83_670 -> m83_581  [key=2, style=dotted];
m83_671 -> m83_672  [key=0, style=solid];
m83_671 -> m83_174  [key=2, style=dotted];
m83_672 -> m83_673  [key=0, style=solid];
m83_672 -> m83_122  [key=2, style=dotted];
m83_672 -> m83_123  [key=2, style=dotted];
m83_677 -> m83_678  [key=0, style=solid];
m83_677 -> m83_679  [key=2, style=dotted];
m83_678 -> m83_676  [key=0, style=bold, color=blue];
m83_681 -> m83_682  [key=0, style=solid];
m83_682 -> m83_680  [key=0, style=bold, color=blue];
m83_688 -> m83_689  [key=0, style=solid];
m83_688 -> m83_690  [key=2, style=dotted];
m83_688 -> m83_124  [key=2, style=dotted];
m83_685 -> m83_683  [key=0, style=bold, color=blue];
m83_687 -> m83_688  [key=0, style=solid];
m83_689 -> m83_687  [key=0, style=bold, color=blue];
m83_692 -> m83_693  [key=0, style=solid];
m83_693 -> m83_691  [key=0, style=bold, color=blue];
m83_695 -> m83_696  [key=0, style=solid];
m83_695 -> m83_41  [key=2, style=dotted];
m83_696 -> m83_694  [key=0, style=bold, color=blue];
m83_698 -> m83_699  [key=0, style=solid];
m83_699 -> m83_697  [key=0, style=bold, color=blue];
m83_702 -> m83_700  [key=0, style=bold, color=blue];
m83_745 -> m83_746  [key=0, style=solid];
m83_745 -> m83_753  [key=2, style=dotted];
m83_740 -> m83_741  [key=0, style=solid];
m83_740 -> m83_195  [key=2, style=dotted];
m83_743 -> m83_748  [key=0, style=solid];
m83_743 -> m83_752  [key=0, style=solid];
m83_743 -> m83_206  [key=2, style=dotted];
m83_743 -> m83_370  [key=2, style=dotted];
m83_747 -> m83_748  [key=0, style=solid];
m83_747 -> m83_752  [key=0, style=solid];
m83_747 -> m83_504  [key=2, style=dotted];
m83_747 -> m83_505  [key=2, style=dotted];
m83_751 -> m83_752  [key=0, style=solid];
m83_751 -> m83_504  [key=2, style=dotted];
m83_751 -> m83_505  [key=2, style=dotted];
m83_741 -> m83_742  [key=0, style=solid];
m83_741 -> m83_453  [key=2, style=dotted];
m83_741 -> m83_743  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_742 -> m83_743  [key=0, style=solid];
m83_742 -> m83_744  [key=0, style=solid];
m83_742 -> m83_454  [key=2, style=dotted];
m83_744 -> m83_745  [key=0, style=solid];
m83_744 -> m83_236  [key=2, style=dotted];
m83_746 -> m83_747  [key=0, style=solid];
m83_746 -> m83_122  [key=2, style=dotted];
m83_746 -> m83_123  [key=2, style=dotted];
m83_748 -> m83_749  [key=0, style=solid];
m83_749 -> m83_750  [key=0, style=solid];
m83_749 -> m83_174  [key=2, style=dotted];
m83_750 -> m83_751  [key=0, style=solid];
m83_750 -> m83_122  [key=2, style=dotted];
m83_750 -> m83_123  [key=2, style=dotted];
m83_752 -> m83_739  [key=0, style=bold, color=blue];
m83_289 -> m83_290  [key=0, style=solid];
m83_289 -> m83_291  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_289 -> m83_292  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierTimeSeriesIntervals"];
m83_289 -> m83_293  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m83_289 -> m83_294  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m83_290 -> m83_291  [key=0, style=solid];
m83_290 -> m83_168  [key=2, style=dotted];
m83_290 -> m83_292  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_290 -> m83_293  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_290 -> m83_294  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_290 -> m83_295  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_291 -> m83_292  [key=0, style=solid];
m83_291 -> m83_170  [key=2, style=dotted];
m83_292 -> m83_293  [key=0, style=solid];
m83_292 -> m83_256  [key=2, style=dotted];
m83_292 -> m83_170  [key=2, style=dotted];
m83_293 -> m83_294  [key=0, style=solid];
m83_293 -> m83_298  [key=2, style=dotted];
m83_293 -> m83_170  [key=2, style=dotted];
m83_294 -> m83_295  [key=0, style=solid];
m83_294 -> m83_298  [key=2, style=dotted];
m83_294 -> m83_170  [key=2, style=dotted];
m83_295 -> m83_296  [key=0, style=solid];
m83_295 -> m83_54  [key=2, style=dotted];
m83_296 -> m83_297  [key=0, style=solid];
m83_297 -> m83_289  [key=0, style=bold, color=blue];
m83_344 -> m83_345  [key=0, style=solid];
m83_344 -> m83_346  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_344 -> m83_347  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_344 -> m83_349  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_345 -> m83_346  [key=0, style=solid];
m83_346 -> m83_347  [key=0, style=solid];
m83_346 -> m83_352  [key=2, style=dotted];
m83_347 -> m83_348  [key=0, style=solid];
m83_347 -> m83_350  [key=0, style=solid];
m83_347 -> m83_126  [key=2, style=dotted];
m83_347 -> m83_119  [key=2, style=dotted];
m83_349 -> m83_350  [key=0, style=solid];
m83_349 -> m83_174  [key=2, style=dotted];
m83_348 -> m83_349  [key=0, style=solid];
m83_350 -> m83_351  [key=0, style=solid];
m83_351 -> m83_344  [key=0, style=bold, color=blue];
m83_623 -> m83_708  [key=0, style=solid];
m83_623 -> m83_709  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_623 -> m83_712  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder"];
m83_623 -> m83_713  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_623 -> m83_715  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder"];
m83_623 -> m83_716  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder"];
m83_623 -> m83_727  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_623 -> m83_745  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_623 -> m83_729  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_623 -> m83_730  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_623 -> m83_731  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_708 -> m83_709  [key=0, style=solid];
m83_708 -> m83_729  [key=0, style=solid];
m83_708 -> m83_733  [key=2, style=dotted];
m83_709 -> m83_710  [key=0, style=solid];
m83_709 -> m83_734  [key=2, style=dotted];
m83_709 -> m83_712  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_717  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_718  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_720  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_721  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_724  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_727  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_740  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_743  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_745  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_747  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_709 -> m83_751  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_712 -> m83_713  [key=0, style=solid];
m83_712 -> m83_504  [key=2, style=dotted];
m83_712 -> m83_733  [key=2, style=dotted];
m83_712 -> m83_714  [key=1, style=dashed, color=darkseagreen4, label=fill];
m83_712 -> m83_718  [key=1, style=dashed, color=darkseagreen4, label=fill];
m83_712 -> m83_720  [key=1, style=dashed, color=darkseagreen4, label=fill];
m83_712 -> m83_726  [key=1, style=dashed, color=darkseagreen4, label=fill];
m83_712 -> m83_728  [key=1, style=dashed, color=darkseagreen4, label=fill];
m83_713 -> m83_714  [key=0, style=solid];
m83_713 -> m83_715  [key=0, style=solid];
m83_713 -> m83_735  [key=2, style=dotted];
m83_715 -> m83_716  [key=0, style=solid];
m83_715 -> m83_719  [key=0, style=solid];
m83_716 -> m83_717  [key=0, style=solid];
m83_727 -> m83_728  [key=0, style=solid];
m83_727 -> m83_626  [key=2, style=dotted];
m83_727 -> m83_647  [key=2, style=dotted];
m83_727 -> m83_739  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_729 -> m83_730  [key=0, style=solid];
m83_729 -> m83_732  [key=0, style=solid];
m83_729 -> m83_624  [key=2, style=dotted];
m83_730 -> m83_731  [key=0, style=solid];
m83_730 -> m83_525  [key=2, style=dotted];
m83_731 -> m83_732  [key=0, style=solid];
m83_731 -> m83_444  [key=2, style=dotted];
m83_710 -> m83_711  [key=0, style=solid];
m83_717 -> m83_718  [key=0, style=solid];
m83_717 -> m83_736  [key=2, style=dotted];
m83_718 -> m83_719  [key=0, style=solid];
m83_718 -> m83_737  [key=2, style=dotted];
m83_720 -> m83_721  [key=0, style=solid];
m83_720 -> m83_728  [key=0, style=solid];
m83_720 -> m83_498  [key=2, style=dotted];
m83_720 -> m83_722  [key=1, style=dashed, color=darkseagreen4, label=contingent];
m83_720 -> m83_723  [key=1, style=dashed, color=darkseagreen4, label=contingent];
m83_721 -> m83_722  [key=0, style=solid];
m83_721 -> m83_728  [key=0, style=solid];
m83_721 -> m83_625  [key=2, style=dotted];
m83_724 -> m83_725  [key=0, style=solid];
m83_724 -> m83_444  [key=2, style=dotted];
m83_711 -> m83_712  [key=0, style=solid];
m83_711 -> m83_727  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m83_711 -> m83_747  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m83_711 -> m83_751  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m83_714 -> m83_715  [key=0, style=solid];
m83_726 -> m83_727  [key=0, style=solid];
m83_728 -> m83_729  [key=0, style=solid];
m83_728 -> m83_505  [key=2, style=dotted];
m83_719 -> m83_720  [key=0, style=solid];
m83_722 -> m83_723  [key=0, style=solid];
m83_722 -> m83_738  [key=2, style=dotted];
m83_722 -> m83_725  [key=1, style=dashed, color=darkseagreen4, label=order];
m83_722 -> m83_727  [key=1, style=dashed, color=darkseagreen4, label=order];
m83_722 -> m83_741  [key=1, style=dashed, color=darkseagreen4, label=order];
m83_723 -> m83_724  [key=0, style=solid];
m83_723 -> m83_725  [key=0, style=solid];
m83_725 -> m83_726  [key=0, style=solid];
m83_725 -> m83_728  [key=0, style=solid];
m83_732 -> m83_623  [key=0, style=bold, color=blue];
m83_450 -> m83_968  [key=0, style=solid];
m83_968 -> m83_969  [key=0, style=solid];
m83_968 -> m83_971  [key=0, style=solid];
m83_969 -> m83_970  [key=0, style=solid];
m83_971 -> m83_972  [key=0, style=solid];
m83_971 -> m83_974  [key=0, style=solid];
m83_970 -> m83_974  [key=0, style=solid];
m83_972 -> m83_973  [key=0, style=solid];
m83_973 -> m83_974  [key=0, style=solid];
m83_974 -> m83_450  [key=0, style=bold, color=blue];
m83_760 -> m83_761  [key=0, style=solid];
m83_761 -> m83_762  [key=0, style=solid];
m83_762 -> m83_760  [key=0, style=bold, color=blue];
m83_458 -> m83_459  [key=0, style=solid];
m83_458 -> m83_460  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_458 -> m83_463  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_458 -> m83_465  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_458 -> m83_469  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_458 -> m83_471  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_458 -> m83_475  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_458 -> m83_476  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_458 -> m83_477  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_458 -> m83_478  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_458 -> m83_484  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_459 -> m83_460  [key=0, style=solid];
m83_459 -> m83_195  [key=2, style=dotted];
m83_460 -> m83_461  [key=0, style=solid];
m83_460 -> m83_463  [key=0, style=solid];
m83_460 -> m83_494  [key=2, style=dotted];
m83_463 -> m83_464  [key=0, style=solid];
m83_463 -> m83_495  [key=2, style=dotted];
m83_463 -> m83_496  [key=2, style=dotted];
m83_463 -> m83_497  [key=2, style=dotted];
m83_463 -> m83_463  [key=1, style=dashed, color=darkseagreen4, label=brokerId];
m83_463 -> m83_467  [key=1, style=dashed, color=darkseagreen4, label=activeOrder];
m83_463 -> m83_479  [key=1, style=dashed, color=darkseagreen4, label=activeOrder];
m83_463 -> m83_482  [key=1, style=dashed, color=darkseagreen4, label=activeOrder];
m83_465 -> m83_466  [key=0, style=solid];
m83_465 -> m83_288  [key=2, style=dotted];
m83_465 -> m83_195  [key=2, style=dotted];
m83_469 -> m83_470  [key=0, style=solid];
m83_469 -> m83_471  [key=0, style=solid];
m83_469 -> m83_498  [key=2, style=dotted];
m83_469 -> m83_485  [key=1, style=dashed, color=darkseagreen4, label=contingent];
m83_469 -> m83_486  [key=1, style=dashed, color=darkseagreen4, label=contingent];
m83_471 -> m83_472  [key=0, style=solid];
m83_471 -> m83_475  [key=0, style=solid];
m83_475 -> m83_476  [key=0, style=solid];
m83_475 -> m83_499  [key=2, style=dotted];
m83_475 -> m83_479  [key=1, style=dashed, color=darkseagreen4, label=orderType];
m83_475 -> m83_487  [key=1, style=dashed, color=darkseagreen4, label=orderType];
m83_476 -> m83_477  [key=0, style=solid];
m83_476 -> m83_500  [key=2, style=dotted];
m83_476 -> m83_479  [key=1, style=dashed, color=darkseagreen4, label=orderDuration];
m83_476 -> m83_488  [key=1, style=dashed, color=darkseagreen4, label=orderDuration];
m83_477 -> m83_478  [key=0, style=solid];
m83_477 -> m83_501  [key=2, style=dotted];
m83_477 -> m83_479  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m83_477 -> m83_489  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m83_478 -> m83_479  [key=0, style=solid];
m83_478 -> m83_502  [key=2, style=dotted];
m83_478 -> m83_490  [key=1, style=dashed, color=darkseagreen4, label=stopPrice];
m83_484 -> m83_485  [key=0, style=solid];
m83_484 -> m83_504  [key=2, style=dotted];
m83_484 -> m83_505  [key=2, style=dotted];
m83_461 -> m83_462  [key=0, style=solid];
m83_461 -> m83_195  [key=2, style=dotted];
m83_462 -> m83_493  [key=0, style=solid];
m83_464 -> m83_465  [key=0, style=solid];
m83_464 -> m83_467  [key=0, style=solid];
m83_467 -> m83_468  [key=0, style=solid];
m83_467 -> m83_471  [key=1, style=dashed, color=darkseagreen4, label=quantity];
m83_479 -> m83_480  [key=0, style=solid];
m83_479 -> m83_503  [key=2, style=dotted];
m83_479 -> m83_481  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_482 -> m83_483  [key=0, style=solid];
m83_482 -> m83_128  [key=2, style=dotted];
m83_482 -> m83_123  [key=2, style=dotted];
m83_466 -> m83_493  [key=0, style=solid];
m83_468 -> m83_469  [key=0, style=solid];
m83_470 -> m83_471  [key=0, style=solid];
m83_485 -> m83_486  [key=0, style=solid];
m83_485 -> m83_492  [key=0, style=solid];
m83_486 -> m83_487  [key=0, style=solid];
m83_486 -> m83_492  [key=0, style=solid];
m83_486 -> m83_488  [key=1, style=dashed, color=darkseagreen4, label=orderRequest];
m83_486 -> m83_489  [key=1, style=dashed, color=darkseagreen4, label=orderRequest];
m83_486 -> m83_490  [key=1, style=dashed, color=darkseagreen4, label=orderRequest];
m83_486 -> m83_491  [key=1, style=dashed, color=darkseagreen4, label=orderRequest];
m83_472 -> m83_473  [key=0, style=solid];
m83_472 -> m83_195  [key=2, style=dotted];
m83_473 -> m83_474  [key=0, style=solid];
m83_473 -> m83_122  [key=2, style=dotted];
m83_473 -> m83_123  [key=2, style=dotted];
m83_474 -> m83_493  [key=0, style=solid];
m83_487 -> m83_488  [key=0, style=solid];
m83_488 -> m83_489  [key=0, style=solid];
m83_489 -> m83_490  [key=0, style=solid];
m83_490 -> m83_491  [key=0, style=solid];
m83_480 -> m83_481  [key=0, style=solid];
m83_480 -> m83_484  [key=0, style=solid];
m83_480 -> m83_454  [key=2, style=dotted];
m83_481 -> m83_482  [key=0, style=solid];
m83_481 -> m83_288  [key=2, style=dotted];
m83_483 -> m83_493  [key=0, style=solid];
m83_492 -> m83_493  [key=0, style=solid];
m83_491 -> m83_486  [key=0, style=solid];
m83_491 -> m83_450  [key=2, style=dotted];
m83_493 -> m83_458  [key=0, style=bold, color=blue];
m83_847 -> m83_848  [key=0, style=solid];
m83_847 -> m83_863  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderStatus"];
m83_848 -> m83_849  [key=0, style=solid];
m83_848 -> m83_851  [key=0, style=solid];
m83_848 -> m83_853  [key=0, style=solid];
m83_848 -> m83_855  [key=0, style=solid];
m83_848 -> m83_857  [key=0, style=solid];
m83_848 -> m83_859  [key=0, style=solid];
m83_848 -> m83_861  [key=0, style=solid];
m83_848 -> m83_863  [key=0, style=solid];
m83_863 -> m83_864  [key=0, style=solid];
m83_863 -> m83_779  [key=2, style=dotted];
m83_849 -> m83_850  [key=0, style=solid];
m83_851 -> m83_852  [key=0, style=solid];
m83_853 -> m83_854  [key=0, style=solid];
m83_855 -> m83_856  [key=0, style=solid];
m83_857 -> m83_858  [key=0, style=solid];
m83_859 -> m83_860  [key=0, style=solid];
m83_861 -> m83_862  [key=0, style=solid];
m83_850 -> m83_864  [key=0, style=solid];
m83_852 -> m83_864  [key=0, style=solid];
m83_854 -> m83_864  [key=0, style=solid];
m83_856 -> m83_864  [key=0, style=solid];
m83_858 -> m83_864  [key=0, style=solid];
m83_860 -> m83_864  [key=0, style=solid];
m83_862 -> m83_864  [key=0, style=solid];
m83_864 -> m83_847  [key=0, style=bold, color=blue];
m83_445 -> m83_506  [key=0, style=solid];
m83_445 -> m83_507  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_445 -> m83_511  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_445 -> m83_512  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_445 -> m83_513  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_445 -> m83_522  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_506 -> m83_507  [key=0, style=solid];
m83_506 -> m83_195  [key=2, style=dotted];
m83_507 -> m83_508  [key=0, style=solid];
m83_507 -> m83_510  [key=0, style=solid];
m83_507 -> m83_494  [key=2, style=dotted];
m83_511 -> m83_512  [key=0, style=solid];
m83_511 -> m83_444  [key=2, style=dotted];
m83_512 -> m83_513  [key=0, style=solid];
m83_512 -> m83_525  [key=2, style=dotted];
m83_513 -> m83_514  [key=0, style=solid];
m83_513 -> m83_523  [key=0, style=solid];
m83_522 -> m83_513  [key=0, style=solid];
m83_522 -> m83_504  [key=2, style=dotted];
m83_522 -> m83_505  [key=2, style=dotted];
m83_508 -> m83_509  [key=0, style=solid];
m83_508 -> m83_195  [key=2, style=dotted];
m83_510 -> m83_511  [key=0, style=solid];
m83_509 -> m83_524  [key=0, style=solid];
m83_514 -> m83_515  [key=0, style=solid];
m83_514 -> m83_495  [key=2, style=dotted];
m83_514 -> m83_520  [key=1, style=dashed, color=darkseagreen4, label=id];
m83_523 -> m83_524  [key=0, style=solid];
m83_515 -> m83_516  [key=0, style=solid];
m83_515 -> m83_272  [key=2, style=dotted];
m83_515 -> m83_518  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_520 -> m83_521  [key=0, style=solid];
m83_520 -> m83_444  [key=2, style=dotted];
m83_516 -> m83_517  [key=0, style=solid];
m83_516 -> m83_518  [key=0, style=solid];
m83_518 -> m83_519  [key=0, style=solid];
m83_518 -> m83_513  [key=0, style=solid];
m83_518 -> m83_454  [key=2, style=dotted];
m83_517 -> m83_524  [key=0, style=solid];
m83_519 -> m83_520  [key=0, style=solid];
m83_521 -> m83_522  [key=0, style=solid];
m83_524 -> m83_445  [key=0, style=bold, color=blue];
m83_759 -> m83_956  [key=0, style=solid];
m83_956 -> m83_957  [key=0, style=solid];
m83_957 -> m83_759  [key=0, style=bold, color=blue];
m83_733 -> m83_830  [key=0, style=solid];
m83_830 -> m83_831  [key=0, style=solid];
m83_830 -> m83_833  [key=0, style=solid];
m83_830 -> m83_835  [key=0, style=solid];
m83_830 -> m83_838  [key=0, style=solid];
m83_830 -> m83_841  [key=0, style=solid];
m83_830 -> m83_843  [key=0, style=solid];
m83_830 -> m83_845  [key=0, style=solid];
m83_831 -> m83_832  [key=0, style=solid];
m83_833 -> m83_834  [key=0, style=solid];
m83_835 -> m83_836  [key=0, style=solid];
m83_838 -> m83_839  [key=0, style=solid];
m83_841 -> m83_842  [key=0, style=solid];
m83_843 -> m83_844  [key=0, style=solid];
m83_845 -> m83_846  [key=0, style=solid];
m83_845 -> m83_829  [key=2, style=dotted];
m83_832 -> m83_846  [key=0, style=solid];
m83_834 -> m83_846  [key=0, style=solid];
m83_836 -> m83_837  [key=0, style=solid];
m83_837 -> m83_846  [key=0, style=solid];
m83_839 -> m83_840  [key=0, style=solid];
m83_840 -> m83_846  [key=0, style=solid];
m83_842 -> m83_846  [key=0, style=solid];
m83_844 -> m83_846  [key=0, style=solid];
m83_846 -> m83_733  [key=0, style=bold, color=blue];
m83_312 -> m83_313  [key=0, style=solid];
m83_312 -> m83_314  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_312 -> m83_315  [key=1, style=dashed, color=darkseagreen4, label=int];
m83_313 -> m83_314  [key=0, style=solid];
m83_313 -> m83_168  [key=2, style=dotted];
m83_313 -> m83_315  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_313 -> m83_316  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_314 -> m83_315  [key=0, style=solid];
m83_314 -> m83_169  [key=2, style=dotted];
m83_314 -> m83_170  [key=2, style=dotted];
m83_315 -> m83_316  [key=0, style=solid];
m83_315 -> m83_169  [key=2, style=dotted];
m83_315 -> m83_170  [key=2, style=dotted];
m83_316 -> m83_317  [key=0, style=solid];
m83_316 -> m83_54  [key=2, style=dotted];
m83_317 -> m83_318  [key=0, style=solid];
m83_318 -> m83_312  [key=0, style=bold, color=blue];
m83_502 -> m83_931  [key=0, style=solid];
m83_502 -> m83_934  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_931 -> m83_932  [key=0, style=solid];
m83_931 -> m83_933  [key=1, style=dashed, color=darkseagreen4, label=stopm];
m83_934 -> m83_935  [key=0, style=solid];
m83_934 -> m83_936  [key=1, style=dashed, color=darkseagreen4, label=stopl];
m83_932 -> m83_933  [key=0, style=solid];
m83_932 -> m83_934  [key=0, style=solid];
m83_933 -> m83_938  [key=0, style=solid];
m83_935 -> m83_936  [key=0, style=solid];
m83_935 -> m83_937  [key=0, style=solid];
m83_936 -> m83_938  [key=0, style=solid];
m83_937 -> m83_938  [key=0, style=solid];
m83_938 -> m83_502  [key=0, style=bold, color=blue];
m83_371 -> m83_372  [key=0, style=solid];
m83_372 -> m83_373  [key=0, style=solid];
m83_372 -> m83_186  [key=2, style=dotted];
m83_372 -> m83_113  [key=2, style=dotted];
m83_372 -> m83_367  [key=2, style=dotted];
m83_372 -> m83_381  [key=2, style=dotted];
m83_372 -> m83_385  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_372 -> m83_375  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m83_372 -> m83_379  [key=1, style=dashed, color=darkseagreen4, label=holdings];
m83_373 -> m83_374  [key=0, style=solid];
m83_373 -> m83_113  [key=2, style=dotted];
m83_373 -> m83_381  [key=2, style=dotted];
m83_373 -> m83_388  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_375 -> m83_376  [key=0, style=solid];
m83_375 -> m83_379  [key=0, style=solid];
m83_375 -> m83_377  [key=1, style=dashed, color=darkseagreen4, label=holding];
m83_375 -> m83_378  [key=1, style=dashed, color=darkseagreen4, label=holding];
m83_379 -> m83_380  [key=0, style=solid];
m83_374 -> m83_375  [key=0, style=solid];
m83_374 -> m83_382  [key=2, style=dotted];
m83_374 -> m83_383  [key=2, style=dotted];
m83_374 -> m83_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_374 -> m83_377  [key=1, style=dashed, color=darkseagreen4, label=quotes];
m83_377 -> m83_378  [key=0, style=solid];
m83_377 -> m83_375  [key=0, style=solid];
m83_377 -> m83_384  [key=2, style=dotted];
m83_376 -> m83_377  [key=0, style=solid];
m83_378 -> m83_375  [key=0, style=solid];
m83_378 -> m83_378  [key=1, style=dashed, color=darkseagreen4, label=holding];
m83_380 -> m83_371  [key=0, style=bold, color=blue];
m83_451 -> m83_947  [key=0, style=solid];
m83_451 -> m83_948  [key=1, style=dashed, color=darkseagreen4, label="params QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest[]"];
m83_947 -> m83_948  [key=0, style=solid];
m83_948 -> m83_949  [key=0, style=solid];
m83_948 -> m83_950  [key=2, style=dotted];
m83_949 -> m83_451  [key=0, style=bold, color=blue];
m83_299 -> m83_300  [key=0, style=solid];
m83_299 -> m83_301  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_299 -> m83_302  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m83_299 -> m83_303  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m83_299 -> m83_304  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierHistoricalDataIntervals"];
m83_300 -> m83_301  [key=0, style=solid];
m83_300 -> m83_168  [key=2, style=dotted];
m83_300 -> m83_302  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_300 -> m83_303  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_300 -> m83_304  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_300 -> m83_305  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_301 -> m83_302  [key=0, style=solid];
m83_301 -> m83_170  [key=2, style=dotted];
m83_302 -> m83_303  [key=0, style=solid];
m83_302 -> m83_298  [key=2, style=dotted];
m83_302 -> m83_170  [key=2, style=dotted];
m83_303 -> m83_304  [key=0, style=solid];
m83_303 -> m83_298  [key=2, style=dotted];
m83_303 -> m83_170  [key=2, style=dotted];
m83_304 -> m83_305  [key=0, style=solid];
m83_304 -> m83_256  [key=2, style=dotted];
m83_304 -> m83_170  [key=2, style=dotted];
m83_305 -> m83_306  [key=0, style=solid];
m83_305 -> m83_54  [key=2, style=dotted];
m83_306 -> m83_307  [key=0, style=solid];
m83_307 -> m83_299  [key=0, style=bold, color=blue];
m83_919 -> m83_920  [key=0, style=solid];
m83_919 -> m83_929  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_920 -> m83_921  [key=0, style=solid];
m83_920 -> m83_923  [key=0, style=solid];
m83_920 -> m83_925  [key=0, style=solid];
m83_920 -> m83_927  [key=0, style=solid];
m83_920 -> m83_929  [key=0, style=solid];
m83_929 -> m83_930  [key=0, style=solid];
m83_929 -> m83_779  [key=2, style=dotted];
m83_921 -> m83_922  [key=0, style=solid];
m83_923 -> m83_924  [key=0, style=solid];
m83_925 -> m83_926  [key=0, style=solid];
m83_927 -> m83_928  [key=0, style=solid];
m83_922 -> m83_930  [key=0, style=solid];
m83_924 -> m83_930  [key=0, style=solid];
m83_926 -> m83_930  [key=0, style=solid];
m83_928 -> m83_930  [key=0, style=solid];
m83_930 -> m83_919  [key=0, style=bold, color=blue];
m83_49 -> m83_137  [key=0, style=solid];
m83_137 -> m83_138  [key=0, style=solid];
m83_137 -> m83_139  [key=0, style=solid];
m83_137 -> m83_167  [key=2, style=dotted];
m83_138 -> m83_166  [key=0, style=solid];
m83_139 -> m83_140  [key=0, style=solid];
m83_140 -> m83_141  [key=0, style=solid];
m83_141 -> m83_142  [key=0, style=solid];
m83_142 -> m83_143  [key=0, style=solid];
m83_142 -> m83_115  [key=2, style=dotted];
m83_142 -> m83_147  [key=1, style=dashed, color=darkseagreen4, label=client];
m83_142 -> m83_158  [key=1, style=dashed, color=darkseagreen4, label=client];
m83_143 -> m83_144  [key=0, style=solid];
m83_143 -> m83_168  [key=2, style=dotted];
m83_143 -> m83_145  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_143 -> m83_146  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_143 -> m83_147  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_143 -> m83_158  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_147 -> m83_148  [key=0, style=solid];
m83_147 -> m83_118  [key=2, style=dotted];
m83_147 -> m83_149  [key=1, style=dashed, color=darkseagreen4, label=result];
m83_147 -> m83_155  [key=1, style=dashed, color=darkseagreen4, label=result];
m83_147 -> m83_158  [key=1, style=dashed, color=darkseagreen4, label=result];
m83_158 -> m83_159  [key=0, style=solid];
m83_158 -> m83_173  [key=2, style=dotted];
m83_158 -> m83_120  [key=2, style=dotted];
m83_144 -> m83_145  [key=0, style=solid];
m83_144 -> m83_169  [key=2, style=dotted];
m83_144 -> m83_170  [key=2, style=dotted];
m83_145 -> m83_146  [key=0, style=solid];
m83_145 -> m83_170  [key=2, style=dotted];
m83_146 -> m83_147  [key=0, style=solid];
m83_146 -> m83_170  [key=2, style=dotted];
m83_148 -> m83_149  [key=0, style=solid];
m83_148 -> m83_161  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_148 -> m83_164  [key=1, style=dashed, color=darkseagreen4, label=raw];
m83_149 -> m83_150  [key=0, style=solid];
m83_149 -> m83_119  [key=2, style=dotted];
m83_149 -> m83_151  [key=1, style=dashed, color=darkseagreen4, label=newTokens];
m83_149 -> m83_152  [key=1, style=dashed, color=darkseagreen4, label=newTokens];
m83_149 -> m83_153  [key=1, style=dashed, color=darkseagreen4, label=newTokens];
m83_149 -> m83_154  [key=1, style=dashed, color=darkseagreen4, label=newTokens];
m83_149 -> m83_156  [key=1, style=dashed, color=darkseagreen4, label=newTokens];
m83_155 -> m83_156  [key=0, style=solid];
m83_155 -> m83_114  [key=2, style=dotted];
m83_161 -> m83_162  [key=0, style=solid];
m83_161 -> m83_174  [key=2, style=dotted];
m83_164 -> m83_165  [key=0, style=solid];
m83_164 -> m83_122  [key=2, style=dotted];
m83_164 -> m83_123  [key=2, style=dotted];
m83_150 -> m83_151  [key=0, style=solid];
m83_150 -> m83_158  [key=0, style=solid];
m83_151 -> m83_152  [key=0, style=solid];
m83_152 -> m83_153  [key=0, style=solid];
m83_153 -> m83_154  [key=0, style=solid];
m83_154 -> m83_155  [key=0, style=solid];
m83_154 -> m83_171  [key=2, style=dotted];
m83_156 -> m83_157  [key=0, style=solid];
m83_156 -> m83_172  [key=2, style=dotted];
m83_157 -> m83_160  [key=0, style=solid];
m83_157 -> m83_163  [key=0, style=solid];
m83_159 -> m83_160  [key=0, style=solid];
m83_159 -> m83_163  [key=0, style=solid];
m83_160 -> m83_161  [key=0, style=solid];
m83_163 -> m83_164  [key=0, style=solid];
m83_163 -> m83_165  [key=0, style=solid];
m83_162 -> m83_163  [key=0, style=solid];
m83_162 -> m83_165  [key=1, style=dashed, color=darkseagreen4, label=success];
m83_165 -> m83_166  [key=0, style=solid];
m83_166 -> m83_49  [key=0, style=bold, color=blue];
m83_197 -> m83_198  [key=0, style=solid];
m83_197 -> m83_199  [key=1, style=dashed, color=darkseagreen4, label=long];
m83_198 -> m83_199  [key=0, style=solid];
m83_198 -> m83_168  [key=2, style=dotted];
m83_198 -> m83_200  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_199 -> m83_200  [key=0, style=solid];
m83_199 -> m83_206  [key=2, style=dotted];
m83_199 -> m83_207  [key=2, style=dotted];
m83_200 -> m83_201  [key=0, style=solid];
m83_200 -> m83_54  [key=2, style=dotted];
m83_200 -> m83_204  [key=1, style=dashed, color=darkseagreen4, label=eventContainer];
m83_201 -> m83_202  [key=0, style=solid];
m83_201 -> m83_204  [key=0, style=solid];
m83_204 -> m83_205  [key=0, style=solid];
m83_202 -> m83_203  [key=0, style=solid];
m83_202 -> m83_195  [key=2, style=dotted];
m83_203 -> m83_205  [key=0, style=solid];
m83_203 -> m83_196  [key=2, style=dotted];
m83_205 -> m83_197  [key=0, style=bold, color=blue];
m83_809 -> m83_865  [key=0, style=solid];
m83_809 -> m83_870  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_809 -> m83_875  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_865 -> m83_866  [key=0, style=solid];
m83_865 -> m83_871  [key=0, style=solid];
m83_865 -> m83_876  [key=0, style=solid];
m83_865 -> m83_878  [key=0, style=solid];
m83_870 -> m83_879  [key=0, style=solid];
m83_875 -> m83_879  [key=0, style=solid];
m83_866 -> m83_867  [key=0, style=solid];
m83_871 -> m83_872  [key=0, style=solid];
m83_876 -> m83_877  [key=0, style=solid];
m83_878 -> m83_879  [key=0, style=solid];
m83_878 -> m83_829  [key=2, style=dotted];
m83_867 -> m83_868  [key=0, style=solid];
m83_868 -> m83_869  [key=0, style=solid];
m83_869 -> m83_870  [key=0, style=solid];
m83_872 -> m83_873  [key=0, style=solid];
m83_873 -> m83_874  [key=0, style=solid];
m83_874 -> m83_875  [key=0, style=solid];
m83_877 -> m83_879  [key=0, style=solid];
m83_879 -> m83_809  [key=0, style=bold, color=blue];
m83_308 -> m83_309  [key=0, style=solid];
m83_309 -> m83_310  [key=0, style=solid];
m83_309 -> m83_168  [key=2, style=dotted];
m83_310 -> m83_311  [key=0, style=solid];
m83_310 -> m83_54  [key=2, style=dotted];
m83_311 -> m83_308  [key=0, style=bold, color=blue];
m83_501 -> m83_939  [key=0, style=solid];
m83_501 -> m83_942  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_939 -> m83_940  [key=0, style=solid];
m83_939 -> m83_941  [key=1, style=dashed, color=darkseagreen4, label=limit];
m83_942 -> m83_943  [key=0, style=solid];
m83_942 -> m83_944  [key=1, style=dashed, color=darkseagreen4, label=stopl];
m83_940 -> m83_941  [key=0, style=solid];
m83_940 -> m83_942  [key=0, style=solid];
m83_941 -> m83_946  [key=0, style=solid];
m83_943 -> m83_944  [key=0, style=solid];
m83_943 -> m83_945  [key=0, style=solid];
m83_944 -> m83_946  [key=0, style=solid];
m83_945 -> m83_946  [key=0, style=solid];
m83_946 -> m83_501  [key=0, style=bold, color=blue];
m83_453 -> m83_543  [key=0, style=solid];
m83_453 -> m83_545  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_546  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_547  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_548  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_551  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_552  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_553  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_555  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_558  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_559  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_560  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_563  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_573  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_592  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_575  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_453 -> m83_577  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_543 -> m83_544  [key=0, style=solid];
m83_543 -> m83_553  [key=1, style=dashed, color=darkseagreen4, label=classification];
m83_545 -> m83_546  [key=0, style=solid];
m83_545 -> m83_547  [key=0, style=solid];
m83_546 -> m83_547  [key=0, style=solid];
m83_546 -> m83_566  [key=2, style=dotted];
m83_547 -> m83_548  [key=0, style=solid];
m83_547 -> m83_567  [key=2, style=dotted];
m83_547 -> m83_195  [key=2, style=dotted];
m83_548 -> m83_549  [key=0, style=solid];
m83_548 -> m83_238  [key=2, style=dotted];
m83_548 -> m83_553  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_548 -> m83_557  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_548 -> m83_558  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_548 -> m83_562  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_548 -> m83_564  [key=1, style=dashed, color=darkseagreen4, label=response];
m83_551 -> m83_552  [key=0, style=solid];
m83_552 -> m83_553  [key=0, style=solid];
m83_552 -> m83_504  [key=2, style=dotted];
m83_552 -> m83_505  [key=2, style=dotted];
m83_553 -> m83_564  [key=0, style=solid];
m83_553 -> m83_237  [key=2, style=dotted];
m83_553 -> m83_196  [key=2, style=dotted];
m83_553 -> m83_568  [key=2, style=dotted];
m83_555 -> m83_556  [key=0, style=solid];
m83_555 -> m83_504  [key=2, style=dotted];
m83_555 -> m83_505  [key=2, style=dotted];
m83_558 -> m83_559  [key=0, style=solid];
m83_558 -> m83_288  [key=2, style=dotted];
m83_558 -> m83_560  [key=1, style=dashed, color=darkseagreen4, label=message];
m83_558 -> m83_561  [key=1, style=dashed, color=darkseagreen4, label=message];
m83_559 -> m83_560  [key=0, style=solid];
m83_559 -> m83_561  [key=0, style=solid];
m83_559 -> m83_569  [key=2, style=dotted];
m83_560 -> m83_561  [key=0, style=solid];
m83_563 -> m83_564  [key=0, style=solid];
m83_563 -> m83_570  [key=2, style=dotted];
m83_563 -> m83_571  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_544 -> m83_545  [key=0, style=solid];
m83_544 -> m83_547  [key=1, style=dashed, color=darkseagreen4, label=stopLimit];
m83_549 -> m83_550  [key=0, style=solid];
m83_549 -> m83_554  [key=0, style=solid];
m83_549 -> m83_454  [key=2, style=dotted];
m83_557 -> m83_558  [key=0, style=solid];
m83_557 -> m83_561  [key=0, style=solid];
m83_557 -> m83_454  [key=2, style=dotted];
m83_562 -> m83_563  [key=0, style=solid];
m83_562 -> m83_564  [key=0, style=solid];
m83_564 -> m83_565  [key=0, style=solid];
m83_550 -> m83_551  [key=0, style=solid];
m83_550 -> m83_552  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m83_554 -> m83_555  [key=0, style=solid];
m83_556 -> m83_557  [key=0, style=solid];
m83_556 -> m83_561  [key=1, style=dashed, color=darkseagreen4, label=message];
m83_561 -> m83_562  [key=0, style=solid];
m83_561 -> m83_122  [key=2, style=dotted];
m83_561 -> m83_123  [key=2, style=dotted];
m83_565 -> m83_453  [key=0, style=bold, color=blue];
m83_0 -> m83_1  [key=0, style=solid];
m83_0 -> m83_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Securities.ISecurityProvider"];
m83_0 -> m83_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_1 -> m83_2  [key=0, style=solid];
m83_2 -> m83_3  [key=0, style=solid];
m83_3 -> m83_4  [key=0, style=solid];
m83_4 -> m83_5  [key=0, style=solid];
m83_4 -> m83_13  [key=2, style=dotted];
m83_5 -> m83_6  [key=0, style=solid];
m83_5 -> m83_14  [key=2, style=dotted];
m83_6 -> m83_7  [key=0, style=solid];
m83_6 -> m83_14  [key=2, style=dotted];
m83_7 -> m83_8  [key=0, style=solid];
m83_7 -> m83_10  [key=0, style=solid];
m83_7 -> m83_15  [key=2, style=dotted];
m83_7 -> m83_9  [key=1, style=dashed, color=darkseagreen4, label=requestType];
m83_8 -> m83_9  [key=0, style=solid];
m83_8 -> m83_16  [key=2, style=dotted];
m83_8 -> m83_17  [key=2, style=dotted];
m83_10 -> m83_11  [key=0, style=solid];
m83_10 -> m83_19  [key=2, style=dotted];
m83_9 -> m83_7  [key=0, style=solid];
m83_9 -> m83_18  [key=2, style=dotted];
m83_9 -> m83_17  [key=2, style=dotted];
m83_11 -> m83_12  [key=0, style=solid];
m83_11 -> m83_19  [key=2, style=dotted];
m83_12 -> m83_0  [key=0, style=bold, color=blue];
m83_880 -> m83_881  [key=0, style=solid];
m83_881 -> m83_882  [key=0, style=solid];
m83_881 -> m83_883  [key=2, style=dotted];
m83_881 -> m83_808  [key=2, style=dotted];
m83_882 -> m83_880  [key=0, style=bold, color=blue];
m83_175 -> m83_176  [key=0, style=solid];
m83_176 -> m83_177  [key=0, style=solid];
m83_176 -> m83_168  [key=2, style=dotted];
m83_177 -> m83_178  [key=0, style=solid];
m83_177 -> m83_54  [key=2, style=dotted];
m83_178 -> m83_179  [key=0, style=solid];
m83_179 -> m83_175  [key=0, style=bold, color=blue];
m83_208 -> m83_209  [key=0, style=solid];
m83_208 -> m83_210  [key=1, style=dashed, color=darkseagreen4, label=long];
m83_209 -> m83_210  [key=0, style=solid];
m83_209 -> m83_168  [key=2, style=dotted];
m83_209 -> m83_211  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_210 -> m83_211  [key=0, style=solid];
m83_210 -> m83_206  [key=2, style=dotted];
m83_210 -> m83_207  [key=2, style=dotted];
m83_211 -> m83_212  [key=0, style=solid];
m83_211 -> m83_54  [key=2, style=dotted];
m83_211 -> m83_215  [key=1, style=dashed, color=darkseagreen4, label=gainLossContainer];
m83_212 -> m83_213  [key=0, style=solid];
m83_212 -> m83_215  [key=0, style=solid];
m83_215 -> m83_216  [key=0, style=solid];
m83_213 -> m83_214  [key=0, style=solid];
m83_213 -> m83_195  [key=2, style=dotted];
m83_214 -> m83_216  [key=0, style=solid];
m83_214 -> m83_196  [key=2, style=dotted];
m83_216 -> m83_208  [key=0, style=bold, color=blue];
m83_53 -> m83_594  [key=0, style=solid];
m83_594 -> m83_595  [key=0, style=solid];
m83_594 -> m83_596  [key=0, style=solid];
m83_594 -> m83_622  [key=2, style=dotted];
m83_595 -> m83_621  [key=0, style=solid];
m83_596 -> m83_597  [key=0, style=solid];
m83_596 -> m83_217  [key=2, style=dotted];
m83_596 -> m83_600  [key=1, style=dashed, color=darkseagreen4, label=intradayAndPendingOrders];
m83_597 -> m83_598  [key=0, style=solid];
m83_597 -> m83_600  [key=0, style=solid];
m83_600 -> m83_601  [key=0, style=solid];
m83_600 -> m83_383  [key=2, style=dotted];
m83_600 -> m83_631  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_600 -> m83_603  [key=1, style=dashed, color=darkseagreen4, label=updatedOrders];
m83_600 -> m83_611  [key=1, style=dashed, color=darkseagreen4, label=updatedOrders];
m83_598 -> m83_599  [key=0, style=solid];
m83_598 -> m83_236  [key=2, style=dotted];
m83_599 -> m83_621  [key=0, style=solid];
m83_601 -> m83_602  [key=0, style=solid];
m83_601 -> m83_611  [key=0, style=solid];
m83_601 -> m83_603  [key=1, style=dashed, color=darkseagreen4, label=cachedOrder];
m83_603 -> m83_604  [key=0, style=solid];
m83_603 -> m83_384  [key=2, style=dotted];
m83_603 -> m83_603  [key=1, style=dashed, color=darkseagreen4, label=cachedOrder];
m83_603 -> m83_605  [key=1, style=dashed, color=darkseagreen4, label=cachedOrder];
m83_603 -> m83_606  [key=1, style=dashed, color=darkseagreen4, label=updatedOrder];
m83_603 -> m83_607  [key=1, style=dashed, color=darkseagreen4, label=updatedOrder];
m83_603 -> m83_608  [key=1, style=dashed, color=darkseagreen4, label=cachedOrder];
m83_611 -> m83_612  [key=0, style=solid];
m83_611 -> m83_367  [key=2, style=dotted];
m83_611 -> m83_627  [key=2, style=dotted];
m83_611 -> m83_648  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_611 -> m83_613  [key=1, style=dashed, color=darkseagreen4, label=unknownOrderIDs];
m83_611 -> m83_614  [key=1, style=dashed, color=darkseagreen4, label=unknownOrderIDs];
m83_602 -> m83_603  [key=0, style=solid];
m83_604 -> m83_605  [key=0, style=solid];
m83_604 -> m83_608  [key=0, style=solid];
m83_605 -> m83_606  [key=0, style=solid];
m83_605 -> m83_623  [key=2, style=dotted];
m83_605 -> m83_605  [key=1, style=dashed, color=darkseagreen4, label=cachedOrder];
m83_605 -> m83_607  [key=1, style=dashed, color=darkseagreen4, label=cachedOrder];
m83_605 -> m83_608  [key=1, style=dashed, color=darkseagreen4, label=cachedOrder];
m83_606 -> m83_607  [key=0, style=solid];
m83_606 -> m83_601  [key=0, style=solid];
m83_606 -> m83_624  [key=2, style=dotted];
m83_607 -> m83_601  [key=0, style=solid];
m83_607 -> m83_568  [key=2, style=dotted];
m83_607 -> m83_607  [key=1, style=dashed, color=darkseagreen4, label=cachedOrder];
m83_607 -> m83_608  [key=1, style=dashed, color=darkseagreen4, label=cachedOrder];
m83_608 -> m83_609  [key=0, style=solid];
m83_608 -> m83_601  [key=0, style=solid];
m83_608 -> m83_625  [key=2, style=dotted];
m83_608 -> m83_608  [key=1, style=dashed, color=darkseagreen4, label=cachedOrder];
m83_609 -> m83_610  [key=0, style=solid];
m83_610 -> m83_601  [key=0, style=solid];
m83_610 -> m83_626  [key=2, style=dotted];
m83_610 -> m83_647  [key=2, style=dotted];
m83_610 -> m83_634  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_610 -> m83_635  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_610 -> m83_610  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_612 -> m83_613  [key=0, style=solid];
m83_612 -> m83_628  [key=2, style=dotted];
m83_613 -> m83_614  [key=0, style=solid];
m83_613 -> m83_616  [key=1, style=dashed, color=darkseagreen4, label=fireTask];
m83_614 -> m83_615  [key=0, style=solid];
m83_614 -> m83_616  [key=0, style=solid];
m83_616 -> m83_617  [key=0, style=solid];
m83_616 -> m83_618  [key=0, style=solid];
m83_616 -> m83_621  [key=0, style=solid];
m83_615 -> m83_614  [key=0, style=solid];
m83_615 -> m83_581  [key=2, style=dotted];
m83_617 -> m83_618  [key=0, style=solid];
m83_617 -> m83_621  [key=0, style=solid];
m83_617 -> m83_16  [key=2, style=dotted];
m83_617 -> m83_629  [key=2, style=dotted];
m83_617 -> m83_630  [key=2, style=dotted];
m83_617 -> m83_651  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m83_618 -> m83_619  [key=0, style=solid];
m83_619 -> m83_620  [key=0, style=solid];
m83_619 -> m83_174  [key=2, style=dotted];
m83_620 -> m83_621  [key=0, style=solid];
m83_620 -> m83_122  [key=2, style=dotted];
m83_620 -> m83_123  [key=2, style=dotted];
m83_621 -> m83_53  [key=0, style=bold, color=blue];
m83_735 -> m83_765  [key=0, style=solid];
m83_735 -> m83_777  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrderDirection"];
m83_765 -> m83_766  [key=0, style=solid];
m83_765 -> m83_771  [key=0, style=solid];
m83_765 -> m83_777  [key=0, style=solid];
m83_777 -> m83_778  [key=0, style=solid];
m83_777 -> m83_779  [key=2, style=dotted];
m83_766 -> m83_767  [key=0, style=solid];
m83_771 -> m83_772  [key=0, style=solid];
m83_767 -> m83_768  [key=0, style=solid];
m83_768 -> m83_769  [key=0, style=solid];
m83_769 -> m83_770  [key=0, style=solid];
m83_770 -> m83_778  [key=0, style=solid];
m83_772 -> m83_773  [key=0, style=solid];
m83_773 -> m83_774  [key=0, style=solid];
m83_774 -> m83_775  [key=0, style=solid];
m83_775 -> m83_776  [key=0, style=solid];
m83_776 -> m83_778  [key=0, style=solid];
m83_778 -> m83_735  [key=0, style=bold, color=blue];
m83_319 -> m83_320  [key=0, style=solid];
m83_319 -> m83_321  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_319 -> m83_322  [key=1, style=dashed, color=darkseagreen4, label=bool];
m83_320 -> m83_321  [key=0, style=solid];
m83_320 -> m83_168  [key=2, style=dotted];
m83_320 -> m83_322  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_320 -> m83_323  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_321 -> m83_322  [key=0, style=solid];
m83_321 -> m83_170  [key=2, style=dotted];
m83_322 -> m83_323  [key=0, style=solid];
m83_322 -> m83_326  [key=2, style=dotted];
m83_322 -> m83_170  [key=2, style=dotted];
m83_323 -> m83_324  [key=0, style=solid];
m83_323 -> m83_54  [key=2, style=dotted];
m83_324 -> m83_325  [key=0, style=solid];
m83_325 -> m83_319  [key=0, style=bold, color=blue];
m83_327 -> m83_328  [key=0, style=solid];
m83_327 -> m83_329  [key=1, style=dashed, color=darkseagreen4, label=string];
m83_327 -> m83_330  [key=1, style=dashed, color=darkseagreen4, label=bool];
m83_328 -> m83_329  [key=0, style=solid];
m83_328 -> m83_168  [key=2, style=dotted];
m83_328 -> m83_330  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_328 -> m83_331  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_329 -> m83_330  [key=0, style=solid];
m83_329 -> m83_170  [key=2, style=dotted];
m83_330 -> m83_331  [key=0, style=solid];
m83_330 -> m83_326  [key=2, style=dotted];
m83_330 -> m83_170  [key=2, style=dotted];
m83_331 -> m83_332  [key=0, style=solid];
m83_331 -> m83_54  [key=2, style=dotted];
m83_332 -> m83_333  [key=0, style=solid];
m83_333 -> m83_327  [key=0, style=bold, color=blue];
m83_186 -> m83_187  [key=0, style=solid];
m83_187 -> m83_188  [key=0, style=solid];
m83_187 -> m83_168  [key=2, style=dotted];
m83_187 -> m83_189  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_188 -> m83_189  [key=0, style=solid];
m83_188 -> m83_170  [key=2, style=dotted];
m83_189 -> m83_190  [key=0, style=solid];
m83_189 -> m83_54  [key=2, style=dotted];
m83_189 -> m83_193  [key=1, style=dashed, color=darkseagreen4, label=positionContainer];
m83_190 -> m83_191  [key=0, style=solid];
m83_190 -> m83_193  [key=0, style=solid];
m83_193 -> m83_194  [key=0, style=solid];
m83_191 -> m83_192  [key=0, style=solid];
m83_191 -> m83_195  [key=2, style=dotted];
m83_192 -> m83_194  [key=0, style=solid];
m83_192 -> m83_196  [key=2, style=dotted];
m83_194 -> m83_186  [key=0, style=bold, color=blue];
m83_500 -> m83_914  [key=0, style=solid];
m83_914 -> m83_915  [key=0, style=solid];
m83_914 -> m83_917  [key=0, style=solid];
m83_915 -> m83_916  [key=0, style=solid];
m83_917 -> m83_918  [key=0, style=solid];
m83_917 -> m83_829  [key=2, style=dotted];
m83_916 -> m83_918  [key=0, style=solid];
m83_918 -> m83_500  [key=0, style=bold, color=blue];
m83_810 -> m83_822  [key=0, style=solid];
m83_822 -> m83_823  [key=0, style=solid];
m83_822 -> m83_825  [key=0, style=solid];
m83_822 -> m83_827  [key=0, style=solid];
m83_823 -> m83_824  [key=0, style=solid];
m83_825 -> m83_826  [key=0, style=solid];
m83_827 -> m83_828  [key=0, style=solid];
m83_827 -> m83_829  [key=2, style=dotted];
m83_824 -> m83_828  [key=0, style=solid];
m83_826 -> m83_828  [key=0, style=solid];
m83_828 -> m83_810  [key=0, style=bold, color=blue];
m83_780 -> m83_781  [key=0, style=solid];
m83_780 -> m83_782  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_784  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_788  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_790  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_791  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_792  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_793  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_794  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_795  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_796  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_797  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_780 -> m83_800  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_781 -> m83_782  [key=0, style=solid];
m83_782 -> m83_783  [key=0, style=solid];
m83_782 -> m83_785  [key=0, style=solid];
m83_782 -> m83_787  [key=0, style=solid];
m83_782 -> m83_789  [key=0, style=solid];
m83_782 -> m83_791  [key=0, style=solid];
m83_784 -> m83_792  [key=0, style=solid];
m83_784 -> m83_803  [key=2, style=dotted];
m83_788 -> m83_792  [key=0, style=solid];
m83_788 -> m83_805  [key=2, style=dotted];
m83_788 -> m83_227  [key=2, style=dotted];
m83_790 -> m83_792  [key=0, style=solid];
m83_790 -> m83_806  [key=2, style=dotted];
m83_790 -> m83_227  [key=2, style=dotted];
m83_790 -> m83_793  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_790 -> m83_794  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_790 -> m83_795  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_790 -> m83_796  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_790 -> m83_799  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_790 -> m83_800  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_790 -> m83_801  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_791 -> m83_802  [key=0, style=solid];
m83_791 -> m83_807  [key=2, style=dotted];
m83_792 -> m83_793  [key=0, style=solid];
m83_792 -> m83_808  [key=2, style=dotted];
m83_793 -> m83_794  [key=0, style=solid];
m83_793 -> m83_809  [key=2, style=dotted];
m83_794 -> m83_795  [key=0, style=solid];
m83_794 -> m83_733  [key=2, style=dotted];
m83_795 -> m83_796  [key=0, style=solid];
m83_795 -> m83_206  [key=2, style=dotted];
m83_795 -> m83_370  [key=2, style=dotted];
m83_796 -> m83_797  [key=0, style=solid];
m83_796 -> m83_810  [key=2, style=dotted];
m83_797 -> m83_798  [key=0, style=solid];
m83_797 -> m83_734  [key=2, style=dotted];
m83_797 -> m83_799  [key=1, style=dashed, color=darkseagreen4, label=orderByBrokerageId];
m83_800 -> m83_801  [key=0, style=solid];
m83_783 -> m83_784  [key=0, style=solid];
m83_785 -> m83_786  [key=0, style=solid];
m83_787 -> m83_788  [key=0, style=solid];
m83_789 -> m83_790  [key=0, style=solid];
m83_786 -> m83_792  [key=0, style=solid];
m83_786 -> m83_804  [key=2, style=dotted];
m83_799 -> m83_800  [key=0, style=solid];
m83_801 -> m83_802  [key=0, style=solid];
m83_798 -> m83_799  [key=0, style=solid];
m83_798 -> m83_800  [key=0, style=solid];
m83_802 -> m83_780  [key=0, style=bold, color=blue];
m83_279 -> m83_280  [key=0, style=solid];
m83_279 -> m83_283  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.List<string>"];
m83_280 -> m83_281  [key=0, style=solid];
m83_280 -> m83_282  [key=0, style=solid];
m83_283 -> m83_284  [key=0, style=solid];
m83_283 -> m83_288  [key=2, style=dotted];
m83_281 -> m83_287  [key=0, style=solid];
m83_281 -> m83_196  [key=2, style=dotted];
m83_282 -> m83_283  [key=0, style=solid];
m83_282 -> m83_168  [key=2, style=dotted];
m83_282 -> m83_284  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_282 -> m83_285  [key=1, style=dashed, color=darkseagreen4, label=request];
m83_284 -> m83_285  [key=0, style=solid];
m83_284 -> m83_170  [key=2, style=dotted];
m83_285 -> m83_286  [key=0, style=solid];
m83_285 -> m83_54  [key=2, style=dotted];
m83_286 -> m83_287  [key=0, style=solid];
m83_287 -> m83_279  [key=0, style=bold, color=blue];
m83_975 -> m83_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_28  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_29  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_37  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_51  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_60  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_63  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_64  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_66  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_80  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_87  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_93  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_98  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_100  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_107  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_109  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_110  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_141  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_144  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_145  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_146  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_151  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_152  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_153  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_154  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_155  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_156  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_164  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_177  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_183  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_188  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_189  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_200  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_211  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_219  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_220  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_229  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_230  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_241  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_243  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_244  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_246  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_254  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_263  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_264  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_269  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_277  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_285  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_292  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_295  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_304  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_305  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_310  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_316  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_323  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_331  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_354  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_356  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_361  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_363  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_364  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_372  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_374  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_395  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_400  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_403  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_405  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_409  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_411  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_413  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_414  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_415  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_417  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_424  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_425  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_429  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_434  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_463  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_469  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_473  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_475  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_479  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_482  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_484  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_511  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_512  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_515  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_520  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_522  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_527  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_528  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_530  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_533  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_536  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_538  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_548  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_552  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_553  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_555  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_556  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_561  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_563  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_572  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_575  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_594  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_596  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_601  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_605  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_607  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_608  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_610  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_635  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_639  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_640  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_643  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_611  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_612  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_613  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_615  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_617  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_652  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_653  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_655  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_677  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_658  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_663  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_666  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_670  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_672  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_620  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_704  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_708  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_709  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_712  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_717  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_720  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_721  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_724  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_727  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_741  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_746  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_747  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_750  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_751  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_728  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_730  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_731  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_755  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_757  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_788  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_790  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_793  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_794  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_796  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_797  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_975 -> m83_905  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage"];
m83_976 -> m83_456  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.Order"];
m83_977 -> m83_573  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_977 -> m83_592  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_977 -> m83_575  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_977 -> m83_577  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_978 -> m83_635  [key=1, style=dashed, color=darkseagreen4, label=cachedOrderLocal];
m83_979 -> m83_684  [key=1, style=dashed, color=darkseagreen4, label=orders];
m83_980 -> m83_688  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Symbol"];
m83_981 -> m83_701  [key=1, style=dashed, color=darkseagreen4, label=recentOrders];
m83_982 -> m83_740  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_982 -> m83_743  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_982 -> m83_745  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_982 -> m83_747  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_982 -> m83_751  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_982 -> m83_727  [key=1, style=dashed, color=darkseagreen4, label=qcOrder];
m83_983 -> m83_741  [key=1, style=dashed, color=darkseagreen4, label=order];
m83_984 -> m83_745  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierOrder"];
m83_985 -> m83_747  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m83_985 -> m83_751  [key=1, style=dashed, color=darkseagreen4, label=orderFee];
m83_986 -> m83_947  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue"];
m83_986 -> m83_948  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue"];
m83_986 -> m83_951  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue"];
m83_986 -> m83_953  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.ContingentOrderQueue"];
m83_987 -> m83_956  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierCachedOpenOrder"];
m83_988 -> m83_958  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_959  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_960  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_961  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_962  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_963  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_964  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_965  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_966  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_968  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_969  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_970  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_971  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_972  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m83_988 -> m83_973  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Brokerages.Tradier.TradierBrokerage.TradierPlaceOrderRequest"];
m84_18 -> m84_19  [key=0, style=solid];
m84_18 -> m84_27  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m84_18 -> m84_30  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Data.Slice"];
m84_19 -> m84_20  [key=0, style=solid];
m84_19 -> m84_21  [key=0, style=solid];
m84_19 -> m84_51  [key=2, style=dotted];
m84_27 -> m84_28  [key=0, style=solid];
m84_27 -> m84_31  [key=1, style=dashed, color=darkseagreen4, label=stopPrice];
m84_30 -> m84_31  [key=0, style=solid];
m84_20 -> m84_50  [key=0, style=solid];
m84_21 -> m84_22  [key=0, style=solid];
m84_21 -> m84_34  [key=0, style=solid];
m84_22 -> m84_23  [key=0, style=solid];
m84_22 -> m84_52  [key=2, style=dotted];
m84_22 -> m84_25  [key=1, style=dashed, color=darkseagreen4, label=orderType];
m84_22 -> m84_29  [key=1, style=dashed, color=darkseagreen4, label=orderType];
m84_22 -> m84_31  [key=1, style=dashed, color=darkseagreen4, label=orderType];
m84_34 -> m84_35  [key=0, style=solid];
m84_34 -> m84_50  [key=0, style=solid];
m84_23 -> m84_24  [key=0, style=solid];
m84_23 -> m84_53  [key=2, style=dotted];
m84_23 -> m84_54  [key=2, style=dotted];
m84_25 -> m84_26  [key=0, style=solid];
m84_25 -> m84_54  [key=2, style=dotted];
m84_29 -> m84_30  [key=0, style=solid];
m84_29 -> m84_31  [key=0, style=solid];
m84_31 -> m84_32  [key=0, style=solid];
m84_31 -> m84_55  [key=2, style=dotted];
m84_31 -> n353  [key=2, style=dotted];
m84_24 -> m84_25  [key=0, style=solid];
m84_26 -> m84_27  [key=0, style=solid];
m84_26 -> m84_28  [key=1, style=dashed, color=darkseagreen4, label=isLong];
m84_26 -> m84_30  [key=1, style=dashed, color=darkseagreen4, label=isLong];
m84_28 -> m84_29  [key=0, style=solid];
m84_28 -> m84_31  [key=1, style=dashed, color=darkseagreen4, label=limitPrice];
m84_32 -> m84_33  [key=0, style=solid];
m84_32 -> m84_57  [key=2, style=dotted];
m84_33 -> m84_50  [key=0, style=solid];
m84_33 -> m84_58  [key=2, style=dotted];
m84_35 -> m84_36  [key=0, style=solid];
m84_35 -> m84_59  [key=2, style=dotted];
m84_35 -> m84_37  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_38  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_39  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_40  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_42  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_43  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_44  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_45  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_46  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_47  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_48  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_35 -> m84_49  [key=1, style=dashed, color=darkseagreen4, label=ticket];
m84_36 -> m84_37  [key=0, style=solid];
m84_36 -> m84_41  [key=0, style=solid];
m84_37 -> m84_38  [key=0, style=solid];
m84_37 -> m84_50  [key=0, style=solid];
m84_37 -> m84_60  [key=2, style=dotted];
m84_38 -> m84_39  [key=0, style=solid];
m84_38 -> m84_54  [key=2, style=dotted];
m84_39 -> m84_40  [key=0, style=solid];
m84_39 -> m84_61  [key=2, style=dotted];
m84_39 -> m84_62  [key=2, style=dotted];
m84_39 -> m84_63  [key=2, style=dotted];
m84_40 -> m84_50  [key=0, style=solid];
m84_40 -> m84_59  [key=2, style=dotted];
m84_40 -> m84_54  [key=2, style=dotted];
m84_42 -> m84_43  [key=0, style=solid];
m84_42 -> m84_50  [key=0, style=solid];
m84_42 -> m84_60  [key=2, style=dotted];
m84_43 -> m84_44  [key=0, style=solid];
m84_43 -> m84_54  [key=2, style=dotted];
m84_44 -> m84_45  [key=0, style=solid];
m84_44 -> m84_61  [key=2, style=dotted];
m84_44 -> m84_64  [key=2, style=dotted];
m84_44 -> m84_63  [key=2, style=dotted];
m84_45 -> m84_50  [key=0, style=solid];
m84_45 -> m84_59  [key=2, style=dotted];
m84_45 -> m84_54  [key=2, style=dotted];
m84_46 -> m84_47  [key=0, style=solid];
m84_46 -> m84_50  [key=0, style=solid];
m84_46 -> m84_60  [key=2, style=dotted];
m84_47 -> m84_48  [key=0, style=solid];
m84_47 -> m84_54  [key=2, style=dotted];
m84_48 -> m84_49  [key=0, style=solid];
m84_48 -> m84_65  [key=2, style=dotted];
m84_49 -> m84_50  [key=0, style=solid];
m84_49 -> m84_54  [key=2, style=dotted];
m84_41 -> m84_42  [key=0, style=solid];
m84_41 -> m84_46  [key=0, style=solid];
m84_50 -> m84_18  [key=0, style=bold, color=blue];
m84_15 -> m84_16  [key=0, style=solid];
m84_0 -> m84_1  [key=0, style=solid];
m84_1 -> m84_2  [key=0, style=solid];
m84_2 -> m84_0  [key=0, style=bold, color=blue];
m84_16 -> m84_17  [key=0, style=solid];
m84_17 -> m84_15  [key=0, style=bold, color=blue];
m84_3 -> m84_4  [key=0, style=solid];
m84_4 -> m84_5  [key=0, style=solid];
m84_4 -> m84_11  [key=2, style=dotted];
m84_5 -> m84_6  [key=0, style=solid];
m84_5 -> m84_12  [key=2, style=dotted];
m84_6 -> m84_7  [key=0, style=solid];
m84_6 -> m84_13  [key=2, style=dotted];
m84_7 -> m84_8  [key=0, style=solid];
m84_7 -> m84_14  [key=2, style=dotted];
m84_8 -> m84_9  [key=0, style=solid];
m84_9 -> m84_10  [key=0, style=solid];
m84_10 -> m84_3  [key=0, style=bold, color=blue];
m84_54 -> m84_75  [key=0, style=solid];
m84_54 -> m84_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m84_54 -> m84_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m84_75 -> m84_76  [key=0, style=solid];
m84_75 -> m84_77  [key=0, style=solid];
m84_76 -> m84_78  [key=0, style=solid];
m84_76 -> m84_79  [key=2, style=dotted];
m84_77 -> m84_78  [key=0, style=solid];
m84_77 -> m84_80  [key=2, style=dotted];
m84_78 -> m84_54  [key=0, style=bold, color=blue];
m84_66 -> m84_67  [key=0, style=solid];
m84_66 -> m84_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m84_66 -> m84_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Orders.OrderEvent"];
m84_67 -> m84_68  [key=0, style=solid];
m84_67 -> m84_69  [key=0, style=solid];
m84_68 -> m84_71  [key=0, style=solid];
m84_68 -> m84_72  [key=2, style=dotted];
m84_68 -> m84_73  [key=2, style=dotted];
m84_68 -> m84_54  [key=2, style=dotted];
m84_69 -> m84_70  [key=0, style=solid];
m84_69 -> m84_74  [key=2, style=dotted];
m84_69 -> m84_54  [key=2, style=dotted];
m84_70 -> m84_71  [key=0, style=solid];
m84_70 -> m84_59  [key=2, style=dotted];
m84_70 -> m84_54  [key=2, style=dotted];
m84_71 -> m84_66  [key=0, style=bold, color=blue];
m84_81 -> m84_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_8  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_16  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_21  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_22  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_23  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_31  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_32  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_33  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_34  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_35  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_36  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_38  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_39  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_40  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_41  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_43  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_44  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_45  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_47  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_48  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_49  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_68  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_69  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_70  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_75  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_76  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m84_81 -> m84_77  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.UpdateOrderRegressionAlgorithm"];
m86_5 -> m86_6  [key=0, style=solid];
m86_6 -> m86_7  [key=0, style=solid];
m86_6 -> m86_8  [key=1, style=dashed, color=darkseagreen4, label=pe];
m86_6 -> m86_10  [key=1, style=dashed, color=darkseagreen4, label=pe];
m86_6 -> m86_11  [key=1, style=dashed, color=darkseagreen4, label=pe];
m86_7 -> m86_8  [key=0, style=solid];
m86_7 -> m86_13  [key=2, style=dotted];
m86_8 -> m86_9  [key=0, style=solid];
m86_8 -> m86_14  [key=2, style=dotted];
m86_8 -> m86_15  [key=2, style=dotted];
m86_10 -> m86_11  [key=0, style=solid];
m86_10 -> m86_16  [key=2, style=dotted];
m86_10 -> m86_10  [key=1, style=dashed, color=darkseagreen4, label=message];
m86_11 -> m86_12  [key=0, style=solid];
m86_11 -> m86_17  [key=2, style=dotted];
m86_9 -> m86_10  [key=0, style=solid];
m86_12 -> m86_5  [key=0, style=bold, color=blue];
m86_0 -> m86_1  [key=0, style=solid, color=red];
m86_1 -> m86_2  [key=0, style=solid, color=red];
m86_1 -> m86_3  [key=2, style=dotted, color=red];
m86_1 -> m86_4  [key=2, style=dotted, color=red];
m86_2 -> m86_0  [key=0, style=bold, color=blue];
m87_23 -> m87_24  [key=0, style=solid];
m87_24 -> m87_25  [key=0, style=solid];
m87_24 -> m87_26  [key=0, style=solid];
m87_25 -> m87_27  [key=0, style=solid];
m87_25 -> m87_28  [key=2, style=dotted];
m87_26 -> m87_27  [key=0, style=solid];
m87_26 -> m87_28  [key=2, style=dotted];
m87_27 -> m87_23  [key=0, style=bold, color=blue];
m87_0 -> m87_1  [key=0, style=solid];
m87_1 -> m87_2  [key=0, style=solid];
m87_1 -> m87_14  [key=2, style=dotted];
m87_2 -> m87_3  [key=0, style=solid];
m87_2 -> m87_15  [key=2, style=dotted];
m87_3 -> m87_4  [key=0, style=solid];
m87_3 -> m87_16  [key=2, style=dotted];
m87_4 -> m87_5  [key=0, style=solid];
m87_4 -> m87_17  [key=2, style=dotted];
m87_5 -> m87_6  [key=0, style=solid];
m87_5 -> m87_18  [key=2, style=dotted];
m87_6 -> m87_7  [key=0, style=solid];
m87_6 -> m87_18  [key=2, style=dotted];
m87_7 -> m87_8  [key=0, style=solid];
m87_7 -> m87_19  [key=2, style=dotted];
m87_8 -> m87_9  [key=0, style=solid];
m87_8 -> m87_11  [key=0, style=solid];
m87_8 -> m87_10  [key=1, style=dashed, color=darkseagreen4, label=bar];
m87_9 -> m87_10  [key=0, style=solid];
m87_9 -> m87_20  [key=2, style=dotted];
m87_11 -> m87_12  [key=0, style=solid];
m87_11 -> m87_21  [key=2, style=dotted];
m87_11 -> m87_22  [key=2, style=dotted];
m87_10 -> m87_8  [key=0, style=solid];
m87_10 -> m87_20  [key=2, style=dotted];
m87_12 -> m87_13  [key=0, style=solid];
m87_12 -> m87_21  [key=2, style=dotted];
m87_12 -> m87_22  [key=2, style=dotted];
m87_13 -> m87_0  [key=0, style=bold, color=blue];
m87_29 -> m87_1  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_2  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_3  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_4  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_5  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_6  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_7  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_9  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_10  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_11  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_12  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_24  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_25  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
m87_29 -> m87_26  [key=1, style=dashed, color=darkseagreen4, label="QuantConnect.Algorithm.CSharp.WarmupHistoryAlgorithm"];
}
