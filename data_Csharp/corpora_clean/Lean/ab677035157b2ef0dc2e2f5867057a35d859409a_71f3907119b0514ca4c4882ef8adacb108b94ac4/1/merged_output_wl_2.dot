digraph  {
n0 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="127-127"];
n1 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var backwardsCompatibilityMode = false", span="130-130"];
n4 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var startingPortfolioValue = setup.StartingCapital", span="133-133"];
n5 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var backtestMode = (job.Type == PacketType.BacktestNode)", span="134-134"];
n7 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_frontier = setup.StartingDate", span="138-138"];
n9 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmId = job.AlgorithmId", span="140-140"];
n11 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_previousTime = setup.StartingDate.Date", span="142-142"];
n12 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var oldTradeBarsMethodInfo = (algorithm.GetType()).GetMethod(''OnTradeBar'',   new[] { typeof(Dictionary<string, TradeBar>) })", span="148-148"];
n13 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var oldTicksMethodInfo = (algorithm.GetType()).GetMethod(''OnTick'', new[] { typeof(Dictionary<string, List<Tick>>) })", span="149-149"];
n14 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var newTradeBarsMethodInfo = (algorithm.GetType()).GetMethod(''OnData'', new[] { tradebarsType })", span="153-153"];
n15 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var newTicksMethodInfo = (algorithm.GetType()).GetMethod(''OnData'', new[] { ticksType })", span="154-154"];
n27 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="feed.Subscriptions", span="170-170"];
n29 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var genericMethod = (algorithm.GetType()).GetMethod(''OnData'', new[] { config.Type })", span="176-176"];
n37 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="DataStream.GetData(feed, setup.StartingDate)", span="194-194"];
n44 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="realtime.SetTime(time)", span="213-213"];
n46 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.SampleEquity(_previousTime, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="219-219"];
n48 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.SamplePerformance(_previousTime.Date, 0)", span="222-222"];
n49 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.SamplePerformance(_previousTime.Date, Math.Round((algorithm.Portfolio.TotalPortfolioValue - startingPortfolioValue) * 100 / startingPortfolioValue, 10))", span="226-226"];
n50 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="startingPortfolioValue = algorithm.Portfolio.TotalPortfolioValue", span="228-228"];
n51 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="algorithm.GetQuit()", span="233-233"];
n53 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="algorithm.SetDateTime(time)", span="240-240"];
n60 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var config = feed.Subscriptions[i]", span="254-254"];
n62 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="algorithm.Securities.Update(time, dataPoint)", span="260-260"];
n94 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers[config.Type](algorithm, dataPoint)", span="323-323"];
n102 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers[tradebarsType](algorithm, oldBars)", span="343-343"];
n104 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers[ticksType](algorithm, oldTicks)", span="344-344"];
n111 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers[tradebarsType](algorithm, newBars)", span="359-359"];
n113 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers[ticksType](algorithm, newTicks)", span="360-360"];
n119 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="transactions.ProcessSynchronousEvents()", span="373-373"];
n121 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.ProcessSynchronousEvents()", span="379-379"];
n123 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="algorithm.OnEndOfAlgorithm()", span="389-389"];
n129 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.ProcessSynchronousEvents(forceProcess: true)", span="400-400"];
n132 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="algorithm.Liquidate()", span="406-406"];
n133 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.LogMessage(''Algorithm Liquidated'')", span="407-407"];
n134 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Liquidated)", span="408-408"];
n137 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.LogMessage(''Algorithm Stopped'')", span="415-415"];
n138 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Stopped)", span="416-416"];
n141 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') Deleted by request.'')", span="423-423"];
n142 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Deleted)", span="424-424"];
n143 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Completed)", span="428-428"];
n144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.SampleRange(algorithm.GetChartUpdates())", span="431-431"];
n145 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.SampleEquity(_frontier, Math.Round(algorithm.Portfolio.TotalPortfolioValue, 4))", span="432-432"];
n146 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="results.SamplePerformance(_frontier, Math.Round((algorithm.Portfolio.TotalPortfolioValue - startingPortfolioValue) * 100 / startingPortfolioValue, 10))", span="433-433"];
n2 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var tradebarsType = typeof (TradeBars)", span="131-131"];
n3 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var ticksType = typeof(Ticks)", span="132-132"];
n19 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers.Add(tradebarsType, oldTradeBarsMethodInfo.DelegateForCallMethod())", span="159-159"];
n24 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers.Add(tradebarsType, newTradeBarsMethodInfo.DelegateForCallMethod())", span="165-165"];
n21 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers.Add(ticksType, oldTicksMethodInfo.DelegateForCallMethod())", span="160-160"];
n26 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers.Add(ticksType, newTicksMethodInfo.DelegateForCallMethod())", span="166-166"];
n47 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="startingPortfolioValue == 0", span="220-220"];
n6 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var methodInvokers = new Dictionary<Type, MethodInvoker>()", span="135-135"];
n43 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=backtestMode, span="209-209"];
n148 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n30 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers.ContainsKey(config.Type)", span="179-179"];
n35 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="methodInvokers.Add(config.Type, genericMethod.DelegateForCallMethod())", span="188-188"];
n8 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=red, community=0, label="3: _runtimeError = null", span="139-139"];
n10 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState = AlgorithmStatus.Running", span="141-141"];
n149 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n150 [cluster="System.Type.GetMethod(string, System.Type[])", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
n18 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="oldTradeBarsMethodInfo != null", span="159-159"];
n20 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="oldTradeBarsMethodInfo != null", span="160-160"];
n101 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="oldTradeBarsMethodInfo != null && oldBars.Count > 0", span="343-343"];
n103 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="oldTicksMethodInfo != null && oldTicks.Count > 0", span="344-344"];
n16 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="newTradeBarsMethodInfo == null && newTicksMethodInfo == null", span="156-156"];
n23 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="newTradeBarsMethodInfo != null", span="165-165"];
n110 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="newTradeBarsMethodInfo != null && newBars.Count > 0", span="359-359"];
n25 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="newTicksMethodInfo != null", span="166-166"];
n112 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="newTicksMethodInfo != null && newTicks.Count > 0", span="360-360"];
n17 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="backwardsCompatibilityMode = true", span="158-158"];
n22 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="backwardsCompatibilityMode = false", span="164-164"];
n76 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=backwardsCompatibilityMode, span="286-286"];
n87 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=backwardsCompatibilityMode, span="307-307"];
n100 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=backwardsCompatibilityMode, span="338-338"];
n151 [cluster="Unk.DelegateForCallMethod", label="Entry Unk.DelegateForCallMethod", span=""];
n152 [cluster="Unk.Add", label="Entry Unk.Add", span=""];
n28 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="config.Type.Name != ''TradeBar'' && config.Type.Name != ''Tick''", span="173-173"];
n36 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Debug(''AlgorithmManager.Run(): Algorithm initialized, launching time loop.'')", span="193-193"];
n32 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=red, community=0, label="2: _runtimeError = new Exception(''Data event handler not found, please create a function matching this template: public void OnData('' + config.Type.Name + '' data) {  }'')", span="184-184"];
n31 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="genericMethod == null", span="182-182"];
n153 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n33 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="185-185"];
n154 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n34 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="return;", span="186-186"];
n155 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="124-124"];
n38 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState != AlgorithmStatus.Running", span="197-197"];
n122 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Trace(''AlgorithmManager.Run(): Firing On End Of Algorithm...'')", span="386-386"];
n156 [cluster="QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", label="Entry QuantConnect.Lean.Engine.DataStream.GetData(QuantConnect.Lean.Engine.DataFeeds.IDataFeed, System.DateTime)", span="58-58"];
n39 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="newData.Keys", span="200-200"];
n58 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="newData[time].Keys", span="250-250"];
n59 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var dataPoints = newData[time][i]", span="253-253"];
n40 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_frontier = time", span="203-203"];
n45 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_previousTime.Date != time.Date", span="216-216"];
n56 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var newBars = new TradeBars(time)", span="245-245"];
n57 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var newTicks = new Ticks(time)", span="246-246"];
n82 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Error(time.ToLongTimeString() + '' >> '' + bar.Time.ToLongTimeString() + '' >> '' + bar.Symbol + '' >> '' + bar.Value.ToString(''C''))", span="298-298"];
n83 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Error(''AlgorithmManager.Run(): Failed to add TradeBar ('' + bar.Symbol + '') Time: ('' + time.ToLongTimeString() + '') Count:('' + newBars.Count + '') '' + err.Message)", span="299-299"];
n120 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_previousTime = time", span="376-376"];
n41 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Isolator.IsCancellationRequested", span="206-206"];
n42 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="return;", span="206-206"];
n157 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.SetTime(System.DateTime)", span="105-105"];
n158 [cluster="System.Math.Round(decimal, int)", label="Entry System.Math.Round(decimal, int)", span="0-0"];
n159 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleEquity(System.DateTime, decimal)", span="142-142"];
n160 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SamplePerformance(System.DateTime, decimal)", span="150-150"];
n52 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState = AlgorithmStatus.Quit", span="235-235"];
n161 [cluster="QuantConnect.Interfaces.IAlgorithm.GetQuit()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetQuit()", span="417-417"];
n54 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var oldBars = new Dictionary<string, TradeBar>()", span="243-243"];
n162 [cluster="QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", label="Entry QuantConnect.Interfaces.IAlgorithm.SetDateTime(System.DateTime)", span="274-274"];
n55 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var oldTicks = new Dictionary<string, List<Tick>>()", span="244-244"];
n77 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="!oldBars.ContainsKey(bar.Symbol)", span="288-288"];
n78 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="oldBars.Add(bar.Symbol, bar)", span="288-288"];
n88 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="!oldTicks.ContainsKey(tick.Symbol)", span="308-308"];
n89 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="oldTicks.Add(tick.Symbol, new List<Tick>())", span="308-308"];
n90 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="oldTicks[tick.Symbol].Add(tick)", span="309-309"];
n163 [cluster="QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", label="Entry QuantConnect.Data.Market.TradeBars.TradeBars(System.DateTime)", span="59-59"];
n79 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="!newBars.ContainsKey(bar.Symbol)", span="292-292"];
n80 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="newBars.Add(bar.Symbol, bar)", span="292-292"];
n164 [cluster="QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", label="Entry QuantConnect.Data.Market.Ticks.Ticks(System.DateTime)", span="45-45"];
n91 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="!newTicks.ContainsKey(tick.Symbol)", span="313-313"];
n92 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="newTicks.Add(tick.Symbol, new List<Tick>())", span="313-313"];
n93 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="newTicks[tick.Symbol].Add(tick)", span="314-314"];
n61 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=dataPoints, span="257-257"];
n64 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="j < config.Consolidators.Count", span="265-265"];
n65 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="config.Consolidators[j].Update(dataPoint)", span="267-267"];
n72 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="config.Type.Name", span="278-278"];
n74 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var bar = dataPoint as TradeBar", span="281-281"];
n85 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var tick = dataPoint as Tick", span="304-304"];
n63 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="var j = 0", span="265-265"];
n165 [cluster="QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", label="Entry QuantConnect.Securities.SecurityManager.Update(System.DateTime, QuantConnect.Data.BaseData)", span="416-416"];
n66 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="j++", span="265-265"];
n67 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=Exception, span="270-270"];
n166 [cluster="QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", label="Entry QuantConnect.Data.Consolidators.IDataConsolidator.Update(QuantConnect.Data.BaseData)", span="54-54"];
n68 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=red, community=0, label="3: _runtimeError = err", span="272-272"];
n69 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="273-273"];
n70 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Error(''AlgorithmManager.Run(): RuntimeError: Consolidators update: '' + err.Message)", span="274-274"];
n71 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="return;", span="275-275"];
n167 [cluster="QuantConnect.Logging.Log.Error(string, bool)", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
n73 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="''TradeBar''", span="280-280"];
n84 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="''Tick''", span="303-303"];
n75 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="bar != null", span="284-284"];
n81 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=Exception, span="296-296"];
n169 [cluster="QuantConnect.Data.Market.TradeBars.ContainsKey(string)", label="Entry QuantConnect.Data.Market.TradeBars.ContainsKey(string)", span="199-199"];
n168 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n170 [cluster="QuantConnect.Data.Market.TradeBars.Add(string, QuantConnect.Data.Market.TradeBar)", label="Entry QuantConnect.Data.Market.TradeBars.Add(string, QuantConnect.Data.Market.TradeBar)", span="119-119"];
n171 [cluster="System.DateTime.ToLongTimeString()", label="Entry System.DateTime.ToLongTimeString()", span="0-0"];
n172 [cluster="decimal.ToString(string)", label="Entry decimal.ToString(string)", span="0-0"];
n86 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="tick != null", span="305-305"];
n173 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n175 [cluster="QuantConnect.Data.Market.Ticks.ContainsKey(string)", label="Entry QuantConnect.Data.Market.Ticks.ContainsKey(string)", span="181-181"];
n176 [cluster="QuantConnect.Data.Market.Ticks.Add(string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>)", label="Entry QuantConnect.Data.Market.Ticks.Add(string, System.Collections.Generic.List<QuantConnect.Data.Market.Tick>)", span="100-100"];
n95 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=Exception, span="325-325"];
n177 [cluster="Unk.]", label="Entry Unk.]", span=""];
n96 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=red, community=0, label="3: _runtimeError = err", span="327-327"];
n97 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="328-328"];
n98 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: Custom Data: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="329-329"];
n99 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="return;", span="330-330"];
n174 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n105 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=Exception, span="346-346"];
n106 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=red, community=0, label="3: _runtimeError = err", span="348-348"];
n107 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="349-349"];
n108 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: Backwards Compatibility Mode: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="350-350"];
n109 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="return;", span="351-351"];
n114 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=Exception, span="362-362"];
n115 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=red, community=0, label="3: _runtimeError = err", span="364-364"];
n116 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="365-365"];
n117 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Debug(''AlgorithmManager.Run(): RuntimeError: New Style Mode: '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="366-366"];
n118 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="return;", span="367-367"];
n178 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.ProcessSynchronousEvents()", span="68-68"];
n179 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.ProcessSynchronousEvents(bool)", span="228-228"];
n180 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
n124 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label=Exception, span="391-391"];
n181 [cluster="QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", label="Entry QuantConnect.Interfaces.IAlgorithm.OnEndOfAlgorithm()", span="261-261"];
n125 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState = AlgorithmStatus.RuntimeError", span="393-393"];
n126 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", color=red, community=0, label="2: _runtimeError = new Exception(''Error running OnEndOfAlgorithm(): '' + err.Message, err.InnerException)", span="394-394"];
n127 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Debug(''AlgorithmManager.OnEndOfAlgorithm(): '' + err.Message + '' STACK >>> '' + err.StackTrace)", span="395-395"];
n182 [cluster="System.Exception.Exception(string, System.Exception)", label="Entry System.Exception.Exception(string, System.Exception)", span="0-0"];
n128 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="return;", span="396-396"];
n130 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState == AlgorithmStatus.Liquidated || !Engine.LiveMode", span="403-403"];
n131 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Trace(''AlgorithmManager.Run(): Liquidating algorithm holdings...'')", span="405-405"];
n135 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState == AlgorithmStatus.Stopped", span="412-412"];
n183 [cluster="QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", label="Entry QuantConnect.Interfaces.IAlgorithm.Liquidate(string)", span="369-369"];
n184 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="107-107"];
n185 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="193-193"];
n136 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Trace(''AlgorithmManager.Run(): Stopping algorithm...'')", span="414-414"];
n139 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="_algorithmState == AlgorithmStatus.Deleted", span="420-420"];
n140 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Log.Trace(''AlgorithmManager.Run(): Deleting algorithm...'')", span="422-422"];
n186 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="95-95"];
n187 [cluster="QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", label="Entry QuantConnect.Interfaces.IAlgorithm.GetChartUpdates()", span="320-320"];
n188 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SampleRange(System.Collections.Generic.List<QuantConnect.Chart>)", span="166-166"];
n147 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="127-127"];
n189 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="439-439"];
n190 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="_frontier = new DateTime()", span="442-442"];
n191 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", color=red, community=0, label="3: _runtimeError = null", span="443-443"];
n195 [cluster="System.DateTime.DateTime()", label="Entry System.DateTime.DateTime()", span="0-0"];
n192 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="_algorithmId = ''''", span="444-444"];
n193 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="_algorithmState = AlgorithmStatus.Running", span="445-445"];
n194 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="439-439"];
n196 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="452-452"];
n197 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label=_lock, span="454-454"];
n198 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="_algorithmState = state", span="456-456"];
n199 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", label="Exit QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="452-452"];
m0_18 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="101-101"];
m0_19 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="order.Status == OrderStatus.Canceled", span="103-103"];
m0_20 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return true;", span="105-105"];
m0_21 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="return false;", span="107-107"];
m0_22 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="101-101"];
m0_8 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="73-73"];
m0_9 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BacktestingBrokerage.cs", label="3: order.Status == OrderStatus.New", span="75-75"];
m0_10 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BacktestingBrokerage.cs", label="3: return true;", span="77-77"];
m0_11 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BacktestingBrokerage.cs", label="1: return false;", span="79-79"];
m0_12 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="73-73"];
m0_4 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="50-50"];
m0_5 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="_algorithm = algorithm", span="53-53"];
m0_6 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="_orders = _algorithm.Transactions.Orders", span="54-54"];
m0_7 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm, string)", span="50-50"];
m0_0 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="38-38"];
m0_1 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="_algorithm = algorithm", span="41-41"];
m0_2 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="_orders = _algorithm.Transactions.Orders", span="42-42"];
m0_3 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.BacktestingBrokerage(QuantConnect.Interfaces.IAlgorithm)", span="38-38"];
m0_13 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="87-87"];
m0_14 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BacktestingBrokerage.cs", label="3: order.Status == OrderStatus.Update", span="89-89"];
m0_15 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BacktestingBrokerage.cs", label="3: return true;", span="91-91"];
m0_16 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", color=green, community=0, file="BacktestingBrokerage.cs", label="3: return false;", span="93-93"];
m0_17 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="87-87"];
m0_50 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopMarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopMarketOrder)", span="52-52"];
m0_48 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, string, QuantConnect.Orders.OrderStatus, decimal, int, string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, string, QuantConnect.Orders.OrderStatus, decimal, int, string)", span="92-92"];
m0_54 [cluster="Unk.Format", file="BacktestingBrokerage.cs", label="Entry Unk.Format", span=""];
m0_56 [cluster="QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="102-102"];
m0_52 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.StopLimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.StopLimitOrder)", span="61-61"];
m0_47 [cluster="Unk.GetSufficientCapitalForOrder", file="BacktestingBrokerage.cs", label="Entry Unk.GetSufficientCapitalForOrder", span=""];
m0_51 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.MarketFill(QuantConnect.Securities.Security, QuantConnect.Orders.MarketOrder)", span="44-44"];
m0_23 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="113-113"];
m0_32 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=green, community=0, file="BacktestingBrokerage.cs", label="2: fill = model.LimitFill(_algorithm.Securities[order.Symbol], order as LimitOrder)", span="148-148"];
m0_25 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=orders, span="129-129"];
m0_29 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var model = _algorithm.Securities[order.Symbol].Model", span="140-140"];
m0_31 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=green, community=0, file="BacktestingBrokerage.cs", label="2: OrderType.Limit", span="147-147"];
m0_39 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=Exception, span="161-161"];
m0_44 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Status != OrderStatus.None", span="174-174"];
m0_34 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=green, community=0, file="BacktestingBrokerage.cs", label="2: fill = model.StopMarketFill(_algorithm.Securities[order.Symbol], order as StopMarketOrder)", span="151-151"];
m0_33 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", color=green, community=0, file="BacktestingBrokerage.cs", label="2: OrderType.StopMarket", span="150-150"];
m0_30 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Type", span="145-145"];
m0_24 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var orders = (from order in _orders\r\n                          where order.Value.Status != OrderStatus.Filled &&\r\n                                order.Value.Status != OrderStatus.Canceled &&\r\n                                order.Value.Status != OrderStatus.Invalid\r\n                          orderby order.Value.Id ascending\r\n                          select order.Value)", span="121-126"];
m0_26 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var sufficientBuyingPower = _algorithm.Transactions.GetSufficientCapitalForOrder(_algorithm.Portfolio, order)", span="132-132"];
m0_36 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fill = model.MarketFill(_algorithm.Securities[order.Symbol], order as MarketOrder)", span="154-154"];
m0_38 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="fill = model.StopLimitFill(_algorithm.Securities[order.Symbol], order as StopLimitOrder)", span="157-157"];
m0_41 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Transaction model failed to fill for order type: {1} with error: {2}'', order.Id, order.Type, err.Message))", span="164-164"];
m0_43 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="_algorithm.Error(string.Format(''Order Error: id: {0}, Insufficient buying power to complete order (Value:{1}).'', order.Id, order.Value))", span="171-171"];
m0_45 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OnOrderEvent(fill)", span="177-177"];
m0_42 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="order.Status = OrderStatus.Invalid", span="170-170"];
m0_28 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label=sufficientBuyingPower, span="137-137"];
m0_40 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Log.Error(''BacktestingBrokerage.Scan(): '' + err.Message)", span="163-163"];
m0_35 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.Market", span="153-153"];
m0_37 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="OrderType.StopLimit", span="156-156"];
m0_27 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="var fill = new OrderEvent()", span="134-134"];
m0_46 [cluster="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", file="BacktestingBrokerage.cs", label="Exit QuantConnect.Brokerages.Backtesting.BacktestingBrokerage.Scan()", span="113-113"];
m0_49 [cluster="QuantConnect.Securities.Interfaces.ISecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Securities.Interfaces.ISecurityTransactionModel.LimitFill(QuantConnect.Securities.Security, QuantConnect.Orders.LimitOrder)", span="69-69"];
m0_55 [cluster="QuantConnect.Interfaces.IAlgorithm.Error(string)", file="BacktestingBrokerage.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.Error(string)", span="246-246"];
m0_61 [file="BacktestingBrokerage.cs", label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", span=""];
m1_12 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.Close()", file="Brokerage.cs", label="Entry QuantConnect.Lean.Engine.EnumerableStreamReader.Close()", span="70-70"];
m1_13 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.Close()", file="Brokerage.cs", label="Exit QuantConnect.Lean.Engine.EnumerableStreamReader.Close()", span="70-70"];
m1_14 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.Dispose()", file="Brokerage.cs", label="Entry QuantConnect.Lean.Engine.EnumerableStreamReader.Dispose()", span="77-77"];
m1_15 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.Dispose()", file="Brokerage.cs", label="_source.Dispose()", span="79-79"];
m1_16 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.Dispose()", file="Brokerage.cs", label="Exit QuantConnect.Lean.Engine.EnumerableStreamReader.Dispose()", span="77-77"];
m1_0 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.EnumerableStreamReader(QuantConnect.SubscriptionTransportMedium, System.Collections.Generic.IEnumerable<string>)", file="Brokerage.cs", label="Entry QuantConnect.Lean.Engine.EnumerableStreamReader.EnumerableStreamReader(QuantConnect.SubscriptionTransportMedium, System.Collections.Generic.IEnumerable<string>)", span="32-32"];
m1_1 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.EnumerableStreamReader(QuantConnect.SubscriptionTransportMedium, System.Collections.Generic.IEnumerable<string>)", file="Brokerage.cs", label="_medium = medium", span="34-34"];
m1_2 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.EnumerableStreamReader(QuantConnect.SubscriptionTransportMedium, System.Collections.Generic.IEnumerable<string>)", file="Brokerage.cs", label="_source = source.GetEnumerator()", span="35-35"];
m1_3 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.EnumerableStreamReader(QuantConnect.SubscriptionTransportMedium, System.Collections.Generic.IEnumerable<string>)", color=red, community=0, file="Brokerage.cs", label="2: EndOfStream = _source.MoveNext()", span="36-36"];
m1_4 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.EnumerableStreamReader(QuantConnect.SubscriptionTransportMedium, System.Collections.Generic.IEnumerable<string>)", file="Brokerage.cs", label="Exit QuantConnect.Lean.Engine.EnumerableStreamReader.EnumerableStreamReader(QuantConnect.SubscriptionTransportMedium, System.Collections.Generic.IEnumerable<string>)", span="32-32"];
m1_6 [cluster="System.Collections.IEnumerator.MoveNext()", file="Brokerage.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m1_17 [cluster="System.IDisposable.Dispose()", file="Brokerage.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m1_5 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="Brokerage.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m1_7 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.ReadLine()", file="Brokerage.cs", label="Entry QuantConnect.Lean.Engine.EnumerableStreamReader.ReadLine()", span="58-58"];
m1_8 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.ReadLine()", file="Brokerage.cs", label="var line = _source.Current", span="62-62"];
m1_9 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.ReadLine()", file="Brokerage.cs", label="EndOfStream = _source.MoveNext()", span="63-63"];
m1_10 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.ReadLine()", file="Brokerage.cs", label="return line;", span="64-64"];
m1_11 [cluster="QuantConnect.Lean.Engine.EnumerableStreamReader.ReadLine()", file="Brokerage.cs", label="Exit QuantConnect.Lean.Engine.EnumerableStreamReader.ReadLine()", span="58-58"];
m1_18 [file="Brokerage.cs", label="QuantConnect.Lean.Engine.EnumerableStreamReader", span=""];
m3_6 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="BrokerageMessageType.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m3_0 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="BrokerageMessageType.cs", label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", span="33-33"];
m3_1 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="BrokerageMessageType.cs", label="_user = user", span="35-35"];
m3_2 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="BrokerageMessageType.cs", label="_password = password", span="36-36"];
m3_3 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="BrokerageMessageType.cs", label="!IntrinioConfig.IsInitialized", span="38-38"];
m3_4 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="BrokerageMessageType.cs", label="throw new InvalidOperationException(''Please set a valid Intrinio user and password.'');", span="40-40"];
m3_5 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="BrokerageMessageType.cs", label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", span="33-33"];
m5_16 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="BrokerageTransactionHandler.cs", label="AskPrice = original.AskPrice", span="119-119"];
m5_92 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="268-268"];
m5_93 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="var source = ''''", span="270-270"];
m5_95 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label=datafeed, span="273-273"];
m5_99 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="config.SecurityType == SecurityType.Forex", span="280-280"];
m5_102 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="var symbol = String.IsNullOrEmpty(config.MappedSymbol) ? config.Symbol : config.MappedSymbol", span="285-285"];
m5_103 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="source = @''../../../Data/'' + config.SecurityType.ToString().ToLower()", span="286-286"];
m5_104 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="source += @''/'' + config.Resolution.ToString().ToLower() + @''/'' + symbol.ToLower() + @''/''", span="287-287"];
m5_105 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="source += date.ToString(dateFormat) + ''_'' + dataType.ToString().ToLower() + ''.zip''", span="288-288"];
m5_94 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="var dataType = TickType.Trade", span="271-271"];
m5_96 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataFeedEndpoint.Backtesting", span="276-276"];
m5_106 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataFeedEndpoint.LiveTrading", span="292-292"];
m5_97 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataFeedEndpoint.FileSystem", span="277-277"];
m5_98 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="var dateFormat = ''yyyyMMdd''", span="279-279"];
m5_100 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="dataType = TickType.Quote", span="282-282"];
m5_101 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="dateFormat = ''yyMMdd''", span="283-283"];
m5_107 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>.FilterEnumerator(System.Collections.Generic.IEnumerator<T>, System.Func<T, bool>)", file="BrokerageTransactionHandler.cs", label="_enumerator = enumerator", span="207-207"];
m5_108 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>.FilterEnumerator(System.Collections.Generic.IEnumerator<T>, System.Func<T, bool>)", file="BrokerageTransactionHandler.cs", label="_filter = filter", span="208-208"];
m5_109 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>.FilterEnumerator(System.Collections.Generic.IEnumerator<T>, System.Func<T, bool>)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>.FilterEnumerator(System.Collections.Generic.IEnumerator<T>, System.Func<T, bool>)", span="205-205"];
m5_110 [cluster="string.IsNullOrEmpty(string)", file="BrokerageTransactionHandler.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_111 [cluster="System.Enum.ToString()", file="BrokerageTransactionHandler.cs", label="Entry System.Enum.ToString()", span="0-0"];
m5_112 [cluster="string.ToLower()", file="BrokerageTransactionHandler.cs", label="Entry string.ToLower()", span="0-0"];
m5_12 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="BrokerageTransactionHandler.cs", label="return CreateSliceEnumerableFromSubscriptions(subscriptions, sliceTimeZone);", span="83-83"];
m5_13 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.GetHistory(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="72-72"];
m5_14 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="BrokerageTransactionHandler.cs", label="Time = new DateTime(original.Time.Ticks)", span="117-117"];
m5_15 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", span="89-89"];
m5_17 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_18 [cluster="QuantConnect.Lean.Engine.HistoricalData.SynchronizingHistoryProvider.CreateSliceEnumerableFromSubscriptions(System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.SynchronizingHistoryProvider.CreateSliceEnumerableFromSubscriptions(System.Collections.Generic.List<QuantConnect.Lean.Engine.DataFeeds.Subscription>, DateTimeZone)", span="68-68"];
m5_19 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="start = start.ConvertFromUtc(request.ExchangeHours.TimeZone)", span="92-92"];
m5_20 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="end = end.ConvertFromUtc(request.ExchangeHours.TimeZone)", span="93-93"];
m5_21 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="var config = new SubscriptionDataConfig(request.DataType, \r\n                request.Symbol, \r\n                request.Resolution, \r\n                request.TimeZone, \r\n                request.ExchangeHours.TimeZone, \r\n                request.FillForwardResolution.HasValue, \r\n                request.IncludeExtendedMarketHours, \r\n                false, \r\n                request.IsCustomData,\r\n                null,\r\n                true,\r\n                request.DataNormalizationMode\r\n                )", span="95-107"];
m5_39 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="AskPrice = ask", span="162-162"];
m5_54 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="return false;", span="142-142"];
m5_55 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="return data.EndTime > start;", span="144-144"];
m5_56 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="Exit lambda expression", span="137-145"];
m5_58 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Symbol = config.Symbol", span="200-200"];
m5_59 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Time = date.Date.AddMilliseconds(Convert.ToInt64(csv[0]))", span="201-201"];
m5_60 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Value = (csv[1].ToDecimal() / 10000m) * config.PriceScaleFactor", span="202-202"];
m5_69 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Symbol = config.Symbol", span="215-215"];
m5_63 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Quantity = Convert.ToInt32(csv[2])", span="205-205"];
m5_64 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="csv.Length > 3", span="206-206"];
m5_65 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Exchange = csv[3]", span="208-208"];
m5_66 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="SaleCondition = csv[4]", span="209-209"];
m5_67 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Suspicious = (csv[5] == ''1'')", span="210-210"];
m5_71 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Time = DateTime.ParseExact(csv[0], ''yyyyMMdd HH:mm:ss.ffff'', CultureInfo.InvariantCulture)", span="217-217"];
m5_72 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="BidPrice = csv[1].ToDecimal()", span="218-218"];
m5_73 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="AskPrice = csv[2].ToDecimal()", span="219-219"];
m5_57 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="SecurityType.Equity", span="199-199"];
m5_68 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="SecurityType.Forex", span="214-214"];
m5_61 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataType = MarketDataType.Tick", span="203-203"];
m5_62 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="TickType = TickType.Trade", span="204-204"];
m5_75 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label=Exception, span="224-224"];
m5_70 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="TickType = TickType.Quote", span="216-216"];
m5_74 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Value = BidPrice + (AskPrice - BidPrice) / 2", span="220-220"];
m5_76 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Log.Error(''Error Generating Tick: '' + err.Message)", span="226-226"];
m5_77 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="190-190"];
m5_114 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", span="308-308"];
m5_115 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Value = lastTrade", span="310-310"];
m5_116 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="BidPrice = bidPrice", span="311-311"];
m5_118 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Quantity = Convert.ToInt32(volume)", span="313-313"];
m5_117 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="AskPrice = askPrice", span="312-312"];
m5_119 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", span="308-308"];
m5_120 [cluster="System.Convert.ToInt32(decimal)", file="BrokerageTransactionHandler.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m5_51 [cluster="lambda expression", file="BrokerageTransactionHandler.cs", label="config.Resolution == Resolution.Tick", span="140-140"];
m5_81 [cluster="System.Convert.ToInt32(string)", file="BrokerageTransactionHandler.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m5_32 [cluster="System.DateTime.ConvertFromUtc(DateTimeZone, bool)", file="BrokerageTransactionHandler.cs", label="Entry System.DateTime.ConvertFromUtc(DateTimeZone, bool)", span="564-564"];
m5_33 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="161-161"];
m5_34 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.Cash, QuantConnect.Securities.SymbolProperties)", span="315-315"];
m5_35 [cluster="QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.Cash.Cash(string, decimal, decimal)", span="68-68"];
m5_36 [cluster="QuantConnect.Securities.SymbolProperties.GetDefault(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Securities.SymbolProperties.GetDefault(string)", span="84-84"];
m5_38 [cluster="QuantConnect.Interfaces.IMapFileProvider.Get(string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Interfaces.IMapFileProvider.Get(string)", span="33-33"];
m5_37 [cluster="QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.SubscriptionDataReader.SubscriptionDataReader(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Data.Auxiliary.MapFileResolver, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider, System.Collections.Generic.IEnumerable<System.DateTime>, bool, QuantConnect.Interfaces.IDataCacheProvider, bool)", span="127-127"];
m5_40 [cluster="QuantConnect.Util.Ref.CreateReadOnly<T>(System.Func<T>)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Util.Ref.CreateReadOnly<T>(System.Func<T>)", span="89-89"];
m5_22 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="var security = new Security(request.ExchangeHours, config, new Cash(CashBook.AccountCurrency, 0, 1m), SymbolProperties.GetDefault(CashBook.AccountCurrency))", span="109-109"];
m5_50 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(string, string)", span="170-170"];
m5_47 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="BrokerageTransactionHandler.cs", label="TickType = TickType.Quote", span="177-177"];
m5_53 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="BrokerageTransactionHandler.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m5_46 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="BrokerageTransactionHandler.cs", label="Value = BidPrice + (AskPrice - BidPrice) / 2", span="176-176"];
m5_48 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="BrokerageTransactionHandler.cs", label="BidPrice = Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture)", span="178-178"];
m5_52 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="BrokerageTransactionHandler.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m5_79 [cluster="System.DateTime.AddMilliseconds(double)", file="BrokerageTransactionHandler.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m5_82 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m5_83 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="241-241"];
m5_84 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="var _tick = new Tick()", span="243-243"];
m5_85 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label=datafeed, span="246-246"];
m5_88 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="_tick = new Tick(config, line, date, datafeed)", span="252-252"];
m5_86 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataFeedEndpoint.FileSystem", span="249-249"];
m5_89 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataFeedEndpoint.LiveTrading", span="254-254"];
m5_87 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="DataFeedEndpoint.Backtesting", span="250-250"];
m5_90 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="return _tick;", span="258-258"];
m5_91 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="241-241"];
m5_125 [cluster="System.Collections.IEnumerator.Reset()", file="BrokerageTransactionHandler.cs", label="Entry System.Collections.IEnumerator.Reset()", span="0-0"];
m5_113 [cluster="System.DateTime.ToString(string)", file="BrokerageTransactionHandler.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m5_23 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="IEnumerator<BaseData> reader = new SubscriptionDataReader(config, \r\n                start, \r\n                end, \r\n                ResultHandlerStub.Instance,\r\n                config.SecurityType == SecurityType.Equity ? _mapFileProvider.Get(config.Market) : MapFileResolver.Empty, \r\n                _factorFileProvider,\r\n                _dataProvider,\r\n                Time.EachTradeableDay(request.ExchangeHours, start, end), \r\n                false,\r\n                _dataCacheProvider,\r\n                false\r\n                )", span="111-122"];
m5_24 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="request.FillForwardResolution.HasValue", span="125-125"];
m5_25 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="var readOnlyRef = Ref.CreateReadOnly(() => request.FillForwardResolution.Value.ToTimeSpan())", span="127-127"];
m5_26 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="reader = new FillForwardEnumerator(reader, security.Exchange, readOnlyRef, security.IsExtendedMarketHours, end, config.Increment)", span="128-128"];
m5_27 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="reader = new SubscriptionFilterEnumerator(reader, security, end)", span="136-136"];
m5_29 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="var timeZoneOffsetProvider = new TimeZoneOffsetProvider(security.Exchange.TimeZone, start, end)", span="147-147"];
m5_30 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="return new Subscription(null, security, config, reader, timeZoneOffsetProvider, start, end, false);", span="148-148"];
m5_28 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="reader = new FilterEnumerator<BaseData>(reader, data =>\r\n            {\r\n                // allow all ticks\r\n                if (config.Resolution == Resolution.Tick) return true;\r\n                // filter out future data\r\n                if (data.EndTime > end) return false;\r\n                // filter out data before the start\r\n                return data.EndTime > start;\r\n            })", span="137-145"];
m5_31 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.CreateSubscription(QuantConnect.Data.HistoryRequest, System.DateTime, System.DateTime)", span="89-89"];
m5_122 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="BrokerageTransactionHandler.cs", label="return new Tick(this);", span="323-323"];
m5_123 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="BrokerageTransactionHandler.cs", label="Exit QuantConnect.Data.Market.Tick.Clone()", span="321-321"];
m5_124 [cluster="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>.Reset()", file="BrokerageTransactionHandler.cs", label="QuantConnect.Data.Market.Tick", span=""];
m5_45 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="BrokerageTransactionHandler.cs", label="Time = DateTime.ParseExact(csv[0], ''yyyyMMdd HH:mm:ss.ffff'', CultureInfo.InvariantCulture)", span="175-175"];
m5_41 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(string, string)", span="170-170"];
m5_0 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="97-97"];
m5_1 [cluster="QuantConnect.Data.Market.Tick.Tick()", color=red, community=0, file="BrokerageTransactionHandler.cs", label="2: Value = 0", span="99-99"];
m5_2 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="BrokerageTransactionHandler.cs", label="Time = new DateTime()", span="100-100"];
m5_3 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="BrokerageTransactionHandler.cs", label="DataType = MarketDataType.Tick", span="101-101"];
m5_4 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="BrokerageTransactionHandler.cs", label="Symbol = ''''", span="102-102"];
m5_5 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="BrokerageTransactionHandler.cs", label="TickType = TickType.Trade", span="103-103"];
m5_6 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="BrokerageTransactionHandler.cs", label="Quantity = 0", span="104-104"];
m5_7 [cluster="QuantConnect.Data.Market.Tick.Tick()", color=green, community=0, file="BrokerageTransactionHandler.cs", label="0: Exchange = ''''", span="105-105"];
m5_8 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="BrokerageTransactionHandler.cs", label="SaleCondition = ''''", span="106-106"];
m5_11 [cluster="System.DateTime.DateTime()", file="BrokerageTransactionHandler.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m5_9 [cluster="QuantConnect.Data.Market.Tick.Tick()", color=green, community=0, file="BrokerageTransactionHandler.cs", label="2: Suspicious = false", span="107-107"];
m5_10 [cluster="QuantConnect.Data.Market.Tick.Tick()", color=green, community=0, file="BrokerageTransactionHandler.cs", label="2: Exit QuantConnect.Data.Market.Tick.Tick()", span="97-97"];
m5_43 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="BrokerageTransactionHandler.cs", label="DataType = MarketDataType.Tick", span="173-173"];
m5_42 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="BrokerageTransactionHandler.cs", label="var csv = line.Split(',')", span="172-172"];
m5_80 [cluster="string.ToDecimal()", file="BrokerageTransactionHandler.cs", label="Entry string.ToDecimal()", span="156-156"];
m5_78 [cluster="System.Convert.ToInt64(string)", file="BrokerageTransactionHandler.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m5_121 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="321-321"];
m5_44 [cluster="QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.TimeZoneOffsetProvider.TimeZoneOffsetProvider(DateTimeZone, System.DateTime, System.DateTime)", span="51-51"];
m5_49 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="BrokerageTransactionHandler.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="682-682"];
m5_126 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider", span=""];
m5_127 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Data.HistoryRequest", span=""];
m5_130 [file="BrokerageTransactionHandler.cs", label="System.DateTime", span=""];
m5_129 [file="BrokerageTransactionHandler.cs", label="System.DateTime", span=""];
m5_128 [file="BrokerageTransactionHandler.cs", label=config, span=""];
m5_131 [file="BrokerageTransactionHandler.cs", label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>", span=""];
m9_7 [cluster="System.Console.WriteLine(string)", file="ConsoleLogHandler.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m9_6 [cluster="System.DateTime.ToString(string)", file="ConsoleLogHandler.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m9_11 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Trace(string)", span="41-41"];
m9_12 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="ConsoleLogHandler.cs", label="Console.WriteLine(DateTime.Now.ToString(DateFormat) + '' Trace:: '' + text)", span="43-43"];
m9_13 [cluster="QuantConnect.Logging.ConsoleLogHandler.Trace(string)", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Trace(string)", span="41-41"];
m9_0 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Error(string)", span="26-26"];
m9_1 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="var original = Console.ForegroundColor", span="28-28"];
m9_3 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="Console.WriteLine(DateTime.Now.ToString(DateFormat) + '' ERROR:: '' + text)", span="30-30"];
m9_2 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="Console.ForegroundColor = ConsoleColor.Red", span="29-29"];
m9_4 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="Console.ForegroundColor = original", span="31-31"];
m9_5 [cluster="QuantConnect.Logging.ConsoleLogHandler.Error(string)", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Error(string)", span="26-26"];
m9_14 [cluster="QuantConnect.Logging.ConsoleLogHandler.Dispose()", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Dispose()", span="47-47"];
m9_15 [cluster="QuantConnect.Logging.ConsoleLogHandler.Dispose()", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Dispose()", span="47-47"];
m9_8 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="ConsoleLogHandler.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.Debug(string)", span="35-35"];
m9_9 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="ConsoleLogHandler.cs", label="Console.WriteLine(DateTime.Now.ToString(DateFormat) + '' DEBUGGING :: '' + text)", span="37-37"];
m9_10 [cluster="QuantConnect.Logging.ConsoleLogHandler.Debug(string)", file="ConsoleLogHandler.cs", label="Exit QuantConnect.Logging.ConsoleLogHandler.Debug(string)", span="35-35"];
m10_15 [cluster="QuantConnect.Data.Consolidators.DataConsolidatedHandler.Invoke(object, QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidatedHandler.Invoke(object, QuantConnect.Data.BaseData)", span="24-24"];
m10_9 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", span="85-85"];
m10_10 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="var handler = DataConsolidated", span="87-87"];
m10_12 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="handler(this, consolidated)", span="88-88"];
m10_13 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="Consolidated = consolidated", span="93-93"];
m10_11 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="handler != null", span="88-88"];
m10_14 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", span="85-85"];
m10_0 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", span="32-32"];
m10_1 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="var typedData = data as TInput", span="34-34"];
m10_2 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="typedData == null", span="35-35"];
m10_4 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="Update(typedData)", span="39-39"];
m10_3 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="throw new ArgumentNullException(''data'');", span="37-37"];
m10_5 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", span="32-32"];
m10_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ConsoleSetupHandler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_7 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", file="ConsoleSetupHandler.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", span="78-78"];
m10_8 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", file="ConsoleSetupHandler.cs", label="Exit QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", span="78-78"];
m10_16 [file="ConsoleSetupHandler.cs", label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", span=""];
m11_0 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.GetNextTicks()", file="DataQueue.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.GetNextTicks()", span="34-34"];
m11_1 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.GetNextTicks()", color=green, community=0, file="DataQueue.cs", label="0: throw new NotImplementedException(''QuantConnect.Queues.LiveDataQueue has not implemented live data.'');", span="36-36"];
m11_2 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.GetNextTicks()", file="DataQueue.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.GetNextTicks()", span="34-34"];
m11_3 [cluster="System.NotImplementedException.NotImplementedException(string)", file="DataQueue.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m11_11 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="DataQueue.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="66-66"];
m11_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", color=green, community=0, file="DataQueue.cs", label="0: throw new NotImplementedException(''QuantConnect.Queues.LiveDataQueue has not implemented live data.'');", span="68-68"];
m11_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="DataQueue.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Unsubscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="66-66"];
m11_8 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="DataQueue.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="58-58"];
m11_9 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", color=green, community=0, file="DataQueue.cs", label="0: throw new NotImplementedException(''QuantConnect.Queues.LiveDataQueue has not implemented live data.'');", span="60-60"];
m11_10 [cluster="QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="DataQueue.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.Queues.LiveDataQueue.Subscribe(QuantConnect.Packets.LiveNodePacket, System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="58-58"];
m12_147 [cluster="QuantConnect.Interfaces.IMessagingHandler.Initialize()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.Initialize()", span="35-35"];
m12_256 [cluster="QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.BacktestingResultHandler.BacktestingResultHandler(QuantConnect.Packets.BacktestNodePacket)", span="172-172"];
m12_183 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Engine.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m12_162 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket)", span="95-95"];
m12_145 [cluster="Unk.Error", file="Engine.cs", label="Entry Unk.Error", span=""];
m12_169 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="172-172"];
m12_275 [cluster="QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.PaperTradingSetupHandler.PaperTradingSetupHandler()", span="81-81"];
m12_189 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="63-63"];
m12_0 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.Main(string[])", span="181-181"];
m12_1 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.LogHandler = IsLocal\r\n                ? (ILogHandler)new ConsoleLogHandler() \r\n                : new FileLogHandler(''log.txt'')", span="185-187"];
m12_148 [cluster="Unk.Initialize", file="Engine.cs", label="Entry Unk.Initialize", span=""];
m12_156 [cluster="QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.RuntimeError(string, string, string)", span="77-77"];
m12_139 [cluster="System.DateTime.ToShortTimeString()", file="Engine.cs", label="Entry System.DateTime.ToShortTimeString()", span="0-0"];
m12_163 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Engine.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m12_167 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLiveMode(bool)", span="389-389"];
m12_146 [cluster="QuantConnect.Interfaces.IApi.Initialize()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IApi.Initialize()", span="33-33"];
m12_195 [cluster="System.Console.ReadKey()", file="Engine.cs", label="Entry System.Console.ReadKey()", span="0-0"];
m12_173 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.SetupErrorHandler(QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IBrokerage)", span="104-104"];
m12_203 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="127-127"];
m12_132 [cluster="QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", file="Engine.cs", label="Entry QuantConnect.Logging.ConsoleLogHandler.ConsoleLogHandler()", span="21-21"];
m12_197 [cluster="lambda expression", file="Engine.cs", label="Entry lambda expression", span="331-349"];
m12_200 [cluster="lambda expression", file="Engine.cs", label="Log.Error(''Engine.Run(): Error in Algo Manager: '' + err.Message + '' ST >> '' + err.StackTrace)", span="344-344"];
m12_201 [cluster="lambda expression", file="Engine.cs", label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="347-347"];
m12_198 [cluster="lambda expression", file="Engine.cs", label="AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler)", span="339-339"];
m12_199 [cluster="lambda expression", file="Engine.cs", label=Exception, span="341-341"];
m12_202 [cluster="lambda expression", file="Engine.cs", label="Exit lambda expression", span="331-349"];
m12_177 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Engine.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m12_159 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="569-569"];
m12_244 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="Engine.cs", label="2: ResultHandlerEndpoint.Console", span="577-577"];
m12_243 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.ResultEndpoint", span="574-574"];
m12_245 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Console Output.'')", span="578-578"];
m12_240 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var rh = default(IResultHandler)", span="571-571"];
m12_241 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label=IsLocal, span="572-572"];
m12_247 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ResultHandlerEndpoint.Backtesting", span="583-583"];
m12_250 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="ResultHandlerEndpoint.LiveTrading", span="589-589"];
m12_246 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rh = new ConsoleResultHandler((BacktestNodePacket)job)", span="579-579"];
m12_248 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Backtesting API Result Endpoint.'')", span="584-584"];
m12_251 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetResultHandler(): Selected Live Trading API Result Endpoint.'')", span="590-590"];
m12_242 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return new ConsoleResultHandler(job);", span="572-572"];
m12_249 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rh = new BacktestingResultHandler((BacktestNodePacket)job)", span="585-585"];
m12_252 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rh = new LiveTradingResultHandler((LiveNodePacket)job)", span="591-591"];
m12_253 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return rh;", span="594-594"];
m12_254 [cluster="QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="569-569"];
m12_186 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="95-95"];
m12_188 [cluster="System.Diagnostics.Stopwatch.Stop()", file="Engine.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m12_187 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, System.Collections.Generic.Dictionary<string, string>, System.Collections.Generic.Dictionary<string, string>)", span="185-185"];
m12_239 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.BacktestingTransactionHandler.BacktestingTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Brokerages.Backtesting.BacktestingBrokerage)", span="33-33"];
m12_172 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="521-521"];
m12_221 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var rth = default(IRealTimeHandler)", span="523-523"];
m12_224 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected Backtesting RealTimeEvent Handler'')", span="528-528"];
m12_227 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetRealTimeHandler(): Selected LiveTrading RealTimeEvent Handler'')", span="534-534"];
m12_222 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.RealTimeEndpoint", span="524-524"];
m12_225 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rth = new BacktestingRealTimeHandler(algorithm, job)", span="529-529"];
m12_228 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="rth = new LiveTradingRealTimeHandler(algorithm, feed, results)", span="535-535"];
m12_223 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="RealTimeEndpoint.Backtesting", span="527-527"];
m12_226 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="RealTimeEndpoint.LiveTrading", span="533-533"];
m12_229 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return rth;", span="538-538"];
m12_230 [cluster="QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="521-521"];
m12_257 [cluster="QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.LiveTradingResultHandler.LiveTradingResultHandler(QuantConnect.Packets.LiveNodePacket)", span="153-153"];
m12_170 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="490-490"];
m12_210 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="Engine.cs", label="2: df = new FileSystemDataFeed(algorithm, (BacktestNodePacket)job)", span="504-504"];
m12_209 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="Engine.cs", label="2: DataFeedEndpoint.FileSystem", span="503-503"];
m12_211 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected FileSystem Datafeed'')", span="505-505"];
m12_205 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.DataEndpoint", span="493-493"];
m12_204 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var df = default(IDataFeed)", span="492-492"];
m12_207 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new BacktestingDataFeed(algorithm, (BacktestNodePacket)job)", span="498-498"];
m12_214 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="df = new PaperTradingDataFeed(algorithm, ds, (LiveNodePacket)job)", span="511-511"];
m12_216 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return df;", span="515-515"];
m12_206 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.Backtesting", span="497-497"];
m12_212 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="DataFeedEndpoint.LiveTrading", span="509-509"];
m12_208 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected Backtesting Datafeed'')", span="499-499"];
m12_215 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetDataFeedHandler(): Selected LiveTrading Datafeed'')", span="512-512"];
m12_213 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="var ds = Composer.Instance.GetExportedValueByTypeName<IDataQueueHandler>(Config.Get(''data-queue-handler'', ''LiveDataQueue''))", span="510-510"];
m12_217 [cluster="QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetDataFeedHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="490-490"];
m12_168 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="314-314"];
m12_164 [cluster="System.Exception.Exception(string)", file="Engine.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m12_161 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(string)", span="86-86"];
m12_196 [cluster="System.IDisposable.Dispose()", file="Engine.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m12_135 [cluster="System.DateTime.ToString(string)", file="Engine.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m12_218 [cluster="QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.BacktestingDataFeed.BacktestingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="50-50"];
m12_175 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Engine.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="83-83"];
m12_155 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetChannel(string)", span="41-41"];
m12_149 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Engine.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m12_144 [cluster="Unk.>", file="Engine.cs", label="Entry Unk.>", span=""];
m12_171 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="550-550"];
m12_233 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", color=green, community=0, file="Engine.cs", label="3: ITransactionHandler th", span="552-552"];
m12_234 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="job.TransactionEndpoint", span="553-553"];
m12_235 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="th = new BacktestingTransactionHandler(algorithm, brokerage as BacktestingBrokerage)", span="557-557"];
m12_236 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Log.Trace(''Engine.GetTransactionHandler(): Selected Backtesting Transaction Models.'')", span="558-558"];
m12_237 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="return th;", span="561-561"];
m12_238 [cluster="QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetTransactionHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="550-550"];
m12_154 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="58-58"];
m12_150 [cluster="System.Threading.Thread.Start()", file="Engine.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m12_184 [cluster="QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", file="Engine.cs", label="Entry QuantConnect.Statistics.Statistics.Generate(System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.IEnumerable<QuantConnect.ChartPoint>, decimal, double)", span="124-124"];
m12_143 [cluster="CompositionContainer.cstr", file="Engine.cs", label="Entry CompositionContainer.cstr", span=""];
m12_142 [cluster="Unk.Add", file="Engine.cs", label="Entry Unk.Add", span=""];
m12_255 [cluster="QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.ConsoleResultHandler.ConsoleResultHandler(QuantConnect.Packets.AlgorithmNodePacket)", span="130-130"];
m12_137 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="Engine.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m12_231 [cluster="QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.BacktestingRealTimeHandler.BacktestingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket)", span="104-104"];
m12_274 [cluster="QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.BacktestingSetupHandler.BacktestingSetupHandler()", span="115-115"];
m12_178 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="123-123"];
m12_141 [cluster="DirectoryCatalog.cstr", file="Engine.cs", label="Entry DirectoryCatalog.cstr", span=""];
m12_193 [cluster="System.Threading.Thread.Abort()", file="Engine.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m12_158 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="603-603"];
m12_269 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", color=green, community=0, file="Engine.cs", label="2: sh = new PaperTradingSetupHandler()", span="621-621"];
m12_268 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.PaperTrading", span="620-620"];
m12_270 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", color=green, community=0, file="Engine.cs", label="2: Log.Trace(''Engine.GetSetupHandler(): Selected PaperTrading Algorithm Setup Handler.'')", span="622-622"];
m12_271 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="return sh;", span="625-625"];
m12_258 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="var sh = default(ISetupHandler)", span="605-605"];
m12_261 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label=setupMethod, span="608-608"];
m12_264 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Console Algorithm Setup Handler.'')", span="613-613"];
m12_267 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Log.Trace(''Engine.GetSetupHandler(): Selected Backtesting Algorithm Setup Handler.'')", span="618-618"];
m12_259 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label=IsLocal, span="606-606"];
m12_262 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.Console", span="611-611"];
m12_265 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="SetupHandlerEndpoint.Backtesting", span="616-616"];
m12_263 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new ConsoleSetupHandler()", span="612-612"];
m12_266 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="sh = new BacktestingSetupHandler()", span="617-617"];
m12_260 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="return new ConsoleSetupHandler();", span="606-606"];
m12_272 [cluster="QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetSetupHandler(QuantConnect.SetupHandlerEndpoint)", span="603-603"];
m12_220 [cluster="QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.PaperTradingDataFeed.PaperTradingDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IDataQueueHandler, QuantConnect.Packets.LiveNodePacket)", span="26-26"];
m12_133 [cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", file="Engine.cs", label="Entry QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", span="33-33"];
m12_185 [cluster="double.ToString(string)", file="Engine.cs", label="Entry double.ToString(string)", span="0-0"];
m12_192 [cluster="System.Threading.Thread.Sleep(int)", file="Engine.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m12_191 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="218-218"];
m12_151 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.ResetManager()", span="439-439"];
m12_134 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Engine.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m12_152 [cluster="QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.NextJob(out string)", span="35-35"];
m12_232 [cluster="QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.LiveTradingRealTimeHandler.LiveTradingRealTimeHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Results.IResultHandler)", span="106-106"];
m12_11 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="Engine.cs", label="2: var catalog = new AggregateCatalog()", span="203-203"];
m12_10 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Memory '' + OS.ApplicationMemoryUsed + ''Mb-App  '' + +OS.TotalPhysicalMemoryUsed + ''Mb-Used  '' + OS.TotalPhysicalMemory + ''Mb-Total'')", span="200-200"];
m12_12 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="Engine.cs", label="2: catalog.Catalogs.Add(new DirectoryCatalog(AppDomain.CurrentDomain.BaseDirectory))", span="204-204"];
m12_13 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="Engine.cs", label="2: var container = new CompositionContainer(catalog)", span="205-205"];
m12_14 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api = Composer.Instance.GetExportedValueByTypeName<IApi>(Config.Get(''api-handler''))", span="209-209"];
m12_17 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="Engine.cs", label="2: CompositionException", span="213-213"];
m12_16 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="JobQueue = Composer.Instance.GetExportedValueByTypeName<IJobQueueHandler>(Config.Get(''job-queue-handler''))", span="211-211"];
m12_18 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Failed to load library: '' + compositionException)", span="214-214"];
m12_20 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="Engine.cs", label="2: Notify.Initialize()", span="219-219"];
m12_19 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.Initialize()", span="218-218"];
m12_21 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="JobQueue.Initialize()", span="220-220"];
m12_27 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="Engine.cs", label="2: Thread threadTransactions = null", span="236-236"];
m12_26 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadFeed = null", span="235-235"];
m12_28 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadResults = null", span="237-237"];
m12_117 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions != null && threadTransactions.IsAlive", span="443-443"];
m12_118 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions.Abort()", span="443-443"];
m12_3 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="AlgorithmNodePacket job = null", span="191-191"];
m12_72 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="Engine.cs", label="2: !complete", span="351-351"];
m12_71 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var complete = Isolator.ExecuteWithTimeLimit(SetupHandler.MaximumRuntime, () =>\r\n                            {\r\n                                try\r\n                                {\r\n                                    //Run Algorithm Job:\r\n                                    // -> Using this Data Feed, \r\n                                    // -> Send Orders to this TransactionHandler, \r\n                                    // -> Send Results to ResultHandler.\r\n                                    AlgorithmManager.Run(job, algorithm, DataFeed, TransactionHandler, ResultHandler, SetupHandler, RealTimeHandler);\r\n                                }\r\n                                catch (Exception err)\r\n                                {\r\n                                    //Debugging at this level is difficult, stack trace needed.\r\n                                    Log.Error(''Engine.Run(): Error in Algo Manager: '' + err.Message + '' ST >> '' + err.StackTrace);\r\n                                }\r\n\r\n                                Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n\r\n                            }, MaximumRamAllocation)", span="331-349"];
m12_73 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="Engine.cs", label="2: Log.Error(''Engine.Main(): Failed to complete in time: '' + SetupHandler.MaximumRuntime.ToString(''F''))", span="353-353"];
m12_75 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="AlgorithmManager.RunTimeError != null", span="358-358"];
m12_74 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="throw new Exception(''Failed to complete algorithm within '' + SetupHandler.MaximumRuntime.ToString(''F'') + '' seconds. Please make it run faster.'');", span="354-354"];
m12_122 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", color=green, community=0, file="Engine.cs", label="2: Exception", span="447-447"];
m12_121 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="445-445"];
m12_123 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Error running algorithm: '' + err.Message + '' >> '' + err.StackTrace)", span="449-449"];
m12_9 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): Started '' + DateTime.Now.ToShortTimeString())", span="199-199"];
m12_15 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify = Composer.Instance.GetExportedValueByTypeName<IMessagingHandler>(Config.Get(''messaging-handler''))", span="210-210"];
m12_22 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var statusPingThread = new Thread(StateCheck.Ping.Run)", span="223-223"];
m12_25 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var initializeComplete = false", span="234-234"];
m12_115 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed != null && threadFeed.IsAlive", span="442-442"];
m12_116 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed.Abort()", span="442-442"];
m12_29 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread threadRealTime = null", span="238-238"];
m12_66 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions = new Thread(TransactionHandler.Run, 0) {Name = ''Transaction Thread''}", span="319-319"];
m12_119 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults != null && threadResults.IsAlive", span="444-444"];
m12_2 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var algorithmPath = ''''", span="190-190"];
m12_5 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var algorithm = default(IAlgorithm)", span="193-193"];
m12_4 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var timer = Stopwatch.StartNew()", span="192-192"];
m12_30 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job = JobQueue.NextJob(out algorithmPath)", span="243-243"];
m12_44 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm = SetupHandler.CreateAlgorithmInstance(algorithmPath)", span="275-275"];
m12_36 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job = null", span="253-253"];
m12_70 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadRealTime.Start()", span="325-325"];
m12_76 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="throw AlgorithmManager.RunTimeError;", span="360-360"];
m12_77 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="363-363"];
m12_87 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var charts = new Dictionary<string, Chart>(ResultHandler.Charts)", span="386-386"];
m12_78 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Run(): Breaking out of parent try-catch: '' + err.Message + '' '' + err.StackTrace)", span="366-366"];
m12_101 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Algorithm.Node.Engine(): Error generating statistics packet: '' + err.Message)", span="414-414"];
m12_105 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Error(''Engine.Main(): Error sending analysis result: '' + err.Message + ''  ST >> '' + err.StackTrace)", span="423-423"];
m12_120 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults.Abort()", span="444-444"];
m12_124 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!IsLocal", span="465-465"];
m12_60 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed            = GetDataFeedHandler(algorithm, job)", span="307-307"];
m12_61 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="TransactionHandler  = GetTransactionHandler(algorithm, _brokerage, ResultHandler, job)", span="308-308"];
m12_8 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Main(): LEAN ALGORITHMIC TRADING ENGINE v'' + _version)", span="198-198"];
m12_83 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="371-371"];
m12_114 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="440-440"];
m12_6 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="_version = DateTime.ParseExact(Config.Get(''version'', DateTime.Now.ToString(DateFormat.UI)), DateFormat.UI, CultureInfo.InvariantCulture)", span="194-194"];
m12_23 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread.Start()", span="224-224"];
m12_127 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread != null && statusPingThread.IsAlive", span="474-474"];
m12_128 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statusPingThread.Abort()", span="474-474"];
m12_24 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="AlgorithmManager.ResetManager()", span="231-231"];
m12_65 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed = new Thread(DataFeed.Run, 0) {Name = ''DataFeed Thread''}", span="318-318"];
m12_112 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="(ResultHandler.IsActive || (TransactionHandler != null && TransactionHandler.IsActive) || (DataFeed != null && DataFeed.IsActive)) && ts.ElapsedMilliseconds < 30 * 1000", span="438-438"];
m12_37 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="job == null", span="255-255"];
m12_67 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadRealTime = new Thread(RealTimeHandler.Run, 0) {Name = ''RealTime Thread''}", span="320-320"];
m12_69 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadTransactions.Start()", span="324-324"];
m12_42 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults = new Thread(ResultHandler.Run, 0) {Name = ''Result Thread''}", span="269-269"];
m12_41 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler = GetResultHandler(job)", span="268-268"];
m12_62 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="RealTimeHandler     = GetRealTimeHandler(algorithm, _brokerage, DataFeed, ResultHandler, job)", span="309-309"];
m12_39 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="timer.Restart()", span="262-262"];
m12_102 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.DebugMessage(''Algorithm Id:('' + job.AlgorithmId + '') completed analysis in '' + timer.Elapsed.TotalSeconds.ToString(''F2'') + '' seconds'')", span="418-418"];
m12_106 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="timer.Stop()", span="427-427"];
m12_31 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!IsLocal && LiveMode && (job.Version < Version || (job.Version == Version && job.Redelivered))", span="245-245"];
m12_32 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="JobQueue.AcknowledgeJob(job)", span="249-249"];
m12_33 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, _collapseMessage)", span="250-250"];
m12_34 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.SetChannel(job.Channel)", span="251-251"];
m12_35 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.RuntimeError(job.AlgorithmId, _collapseMessage)", span="252-252"];
m12_38 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Notify.SetChannel(job.Channel)", span="259-259"];
m12_40 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler = GetSetupHandler(job.SetupEndpoint)", span="265-265"];
m12_45 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="initializeComplete = SetupHandler.Setup(algorithm, out _brokerage, job)", span="278-278"];
m12_54 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="294-294"];
m12_56 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="301-301"];
m12_64 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SendStatusUpdate(job.AlgorithmId, AlgorithmStatus.Running)", span="315-315"];
m12_86 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err.StackTrace)", span="374-374"];
m12_103 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statistics, banner)", span="419-419"];
m12_43 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadResults.Start()", span="270-270"];
m12_46 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || SetupHandler.Errors.Count > 0", span="281-281"];
m12_48 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="285-285"];
m12_57 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetLiveMode(LiveMode)", span="302-302"];
m12_58 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="algorithm.SetLocked()", span="303-303"];
m12_59 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.SetAlgorithm(algorithm)", span="306-306"];
m12_88 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var orders = new Dictionary<int, Order>(algorithm.Transactions.Orders)", span="387-387"];
m12_98 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var profitLoss =\r\n                                        new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="406-407"];
m12_81 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler != null", span="368-368"];
m12_95 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="charts.ContainsKey(strategyEquityKey) &&\r\n                                    charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                    charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey)", span="400-402"];
m12_96 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="404-404"];
m12_97 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="405-405"];
m12_50 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="throw new Exception(errorMessage);", span="287-287"];
m12_79 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed != null", span="367-367"];
m12_100 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="412-412"];
m12_104 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="421-421"];
m12_125 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="StateCheck.Ping.Exit()", span="468-468"];
m12_7 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread.CurrentThread.Name = ''Algorithm Analysis Thread''", span="197-197"];
m12_82 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var message = ''Runtime Error: '' + err.Message", span="370-370"];
m12_84 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.LogMessage(message)", span="372-372"];
m12_113 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Thread.Sleep(100)", span="440-440"];
m12_126 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Console.ReadKey()", span="471-471"];
m12_129 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.LogHandler != null", span="476-476"];
m12_68 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="threadFeed.Start()", span="323-323"];
m12_111 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var ts = Stopwatch.StartNew()", span="437-437"];
m12_63 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="SetupHandler.SetupErrorHandler(ResultHandler, _brokerage)", span="312-312"];
m12_99 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="statistics = Statistics.Statistics.Generate(equity, profitLoss, performance,\r\n                                        SetupHandler.StartingCapital, 252)", span="408-409"];
m12_107 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="TransactionHandler.Exit()", span="428-428"];
m12_55 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=initializeComplete, span="298-298"];
m12_52 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="292-292"];
m12_53 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.RuntimeError(runtimeMessage, err.StackTrace)", span="293-293"];
m12_85 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.RuntimeError(message, err.StackTrace)", span="373-373"];
m12_89 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var holdings = new Dictionary<string, Holding>()", span="388-388"];
m12_90 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var statistics = new Dictionary<string, string>()", span="389-389"];
m12_91 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="var banner = new Dictionary<string, string>()", span="390-390"];
m12_47 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="initializeComplete = false", span="283-283"];
m12_51 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label=Exception, span="290-290"];
m12_49 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="errorMessage += String.Join('','', SetupHandler.Errors)", span="286-286"];
m12_80 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed.Exit()", span="367-367"];
m12_92 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string strategyEquityKey = ''Strategy Equity''", span="395-395"];
m12_93 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string equityKey = ''Equity''", span="396-396"];
m12_94 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="397-397"];
m12_130 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Log.LogHandler.Dispose()", span="478-478"];
m12_131 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="Exit QuantConnect.Lean.Engine.Engine.Main(string[])", span="181-181"];
m12_110 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="ResultHandler.Exit()", span="434-434"];
m12_108 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="DataFeed.Exit()", span="429-429"];
m12_109 [cluster="QuantConnect.Lean.Engine.Engine.Main(string[])", file="Engine.cs", label="RealTimeHandler.Exit()", span="430-430"];
m12_190 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="110-110"];
m12_160 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="Engine.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0"];
m12_181 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m12_166 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="309-309"];
m12_174 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(string, QuantConnect.AlgorithmStatus, string)", span="193-193"];
m12_140 [cluster="AggregateCatalog.cstr", file="Engine.cs", label="Entry AggregateCatalog.cstr", span=""];
m12_273 [cluster="QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Setup.ConsoleSetupHandler.ConsoleSetupHandler()", span="62-62"];
m12_180 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Engine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m12_138 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Engine.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="104-104"];
m12_179 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="107-107"];
m12_194 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="87-87"];
m12_176 [cluster="System.TimeSpan.ToString(string)", file="Engine.cs", label="Entry System.TimeSpan.ToString(string)", span="0-0"];
m12_136 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Engine.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="89-89"];
m12_157 [cluster="System.Diagnostics.Stopwatch.Restart()", file="Engine.cs", label="Entry System.Diagnostics.Stopwatch.Restart()", span="0-0"];
m12_219 [cluster="QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.FileSystemDataFeed.FileSystemDataFeed(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.BacktestNodePacket)", span="131-131"];
m12_165 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="Engine.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="121-121"];
m12_153 [cluster="QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Engine.cs", label="Entry QuantConnect.Interfaces.IJobQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="41-41"];
m12_276 [file="Engine.cs", label=job, span=""];
m12_277 [file="Engine.cs", label=algorithm, span=""];
m13_24 [cluster="QuantConnect.Configuration.Config.GetBool(string, bool)", file="Extensions.cs", label="Entry QuantConnect.Configuration.Config.GetBool(string, bool)", span="141-141"];
m13_29 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Extensions.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m13_36 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="Extensions.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="107-107"];
m13_170 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="358-358"];
m13_164 [cluster="lambda expression", file="Extensions.cs", label="x.GetType().AssemblyQualifiedName == typeName", span="344-344"];
m13_168 [cluster="lambda expression", file="Extensions.cs", label="x.GetType().FullName == typeName", span="351-351"];
m13_171 [cluster="lambda expression", file="Extensions.cs", label="x.GetType().Name == typeName", span="358-358"];
m13_163 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="344-344"];
m13_167 [cluster="lambda expression", file="Extensions.cs", label="Entry lambda expression", span="351-351"];
m13_165 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="344-344"];
m13_169 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="351-351"];
m13_172 [cluster="lambda expression", file="Extensions.cs", label="Exit lambda expression", span="358-358"];
m13_25 [cluster="QuantConnect.Configuration.Config.GetInt(string, int)", file="Extensions.cs", label="Entry QuantConnect.Configuration.Config.GetInt(string, int)", span="152-152"];
m13_166 [cluster="Unk.GetType", file="Extensions.cs", label="Entry Unk.GetType", span=""];
m13_2 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="72-72"];
m13_3 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var errors = new List<string>()", span="74-74"];
m13_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var account = Read<string>(job.BrokerageData, ''ib-account'', errors)", span="83-83"];
m13_10 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var userId = Read<string>(job.BrokerageData, ''ib-user-name'', errors)", span="84-84"];
m13_11 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var password = Read<string>(job.BrokerageData, ''ib-password'', errors)", span="85-85"];
m13_12 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var tradingMode = Read<string>(job.BrokerageData, ''ib-trading-mode'', errors)", span="86-86"];
m13_13 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var agentDescription = Read<string>(job.BrokerageData, ''ib-agent-description'', errors)", span="87-87"];
m13_19 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var ib = new InteractiveBrokersBrokerage(algorithm.Transactions, algorithm.Portfolio, account, host, port, agentDescription)", span="103-103"];
m13_4 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var useTws = Config.GetBool(''ib-use-tws'')", span="77-77"];
m13_14 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="errors.Count != 0", span="89-89"];
m13_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="throw new Exception(string.Join(Environment.NewLine, errors));", span="92-92"];
m13_5 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var port = Config.GetInt(''ib-port'', 4001)", span="78-78"];
m13_18 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="InteractiveBrokersGatewayRunner.Start(ibControllerDirectory, twsDirectory, userId, password, tradingMode, useTws)", span="101-101"];
m13_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var host = Config.Get(''ib-host'', ''127.0.0.1'')", span="79-79"];
m13_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var twsDirectory = Config.Get(''ib-tws-dir'', ''C:\\Jts'')", span="80-80"];
m13_8 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="var ibControllerDirectory = Config.Get(''ib-controller-dir'', ''C:\\IBController'')", span="81-81"];
m13_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="tradingMode == ''''", span="95-95"];
m13_17 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="throw new Exception(''No trading mode selected. Please select either 'paper' or 'live' trading.'');", span="97-97"];
m13_20 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="Composer.Instance.AddPart<IDataQueueHandler>(ib)", span="104-104"];
m13_21 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="return ib;", span="106-106"];
m13_22 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Extensions.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.CreateBrokerage(QuantConnect.Packets.LiveNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="72-72"];
m13_28 [cluster="System.Exception.Exception(string)", file="Extensions.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m13_146 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="Extensions.cs", label="Entry QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", span="338-338"];
m13_147 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", color=green, community=0, file="Extensions.cs", label="2: var values = container.GetExportedValues<T>().ToList()", span="341-341"];
m13_148 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="Extensions.cs", label="var value = values.FirstOrDefault(x => x.GetType().AssemblyQualifiedName == typeName)", span="344-344"];
m13_151 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="Extensions.cs", label="value = values.FirstOrDefault(x => x.GetType().FullName == typeName)", span="351-351"];
m13_154 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="Extensions.cs", label="value = values.FirstOrDefault(x => x.GetType().Name == typeName)", span="358-358"];
m13_149 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", color=green, community=0, file="Extensions.cs", label="3: value != null", span="345-345"];
m13_150 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", color=green, community=0, file="Extensions.cs", label="3: return value;", span="347-347"];
m13_156 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="Extensions.cs", label="throw new ArgumentException(''Unable to locate any exports matching the requested typeName: '' + typeName, ''typeName'');", span="361-361"];
m13_152 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="Extensions.cs", label="value != null", span="352-352"];
m13_153 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="Extensions.cs", label="return value;", span="354-354"];
m13_155 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="Extensions.cs", label="value == null", span="359-359"];
m13_157 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="Extensions.cs", label="return value;", span="364-364"];
m13_158 [cluster="QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", file="Extensions.cs", label="Exit QuantConnect.Extensions.GetExportedValueByTypeName<T>(CompositionContainer, string)", span="338-338"];
m13_160 [cluster="Unk.ToList", file="Extensions.cs", label="Entry Unk.ToList", span=""];
m13_31 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", file="Extensions.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderProvider, QuantConnect.Securities.ISecurityProvider, string, string, int, string)", span="168-168"];
m13_159 [cluster="Unk.>", file="Extensions.cs", label="Entry Unk.>", span=""];
m13_32 [cluster="QuantConnect.Util.Composer.AddPart<T>(T)", file="Extensions.cs", label="Entry QuantConnect.Util.Composer.AddPart<T>(T)", span="75-75"];
m13_161 [cluster="Unk.FirstOrDefault", file="Extensions.cs", label="Entry Unk.FirstOrDefault", span=""];
m13_0 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", file="Extensions.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", span="32-32"];
m13_1 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", file="Extensions.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.InteractiveBrokersBrokerageFactory()", span="32-32"];
m13_27 [cluster="QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", file="Extensions.cs", label="Entry QuantConnect.Brokerages.BrokerageFactory.Read<T>(System.Collections.Generic.IReadOnlyDictionary<string, string>, string, System.Collections.Generic.ICollection<string>)", span="86-86"];
m13_33 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="Extensions.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", span="114-114"];
m13_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="Extensions.cs", label="InteractiveBrokersGatewayRunner.Stop()", span="116-116"];
m13_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", file="Extensions.cs", label="Exit QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageFactory.Dispose()", span="114-114"];
m13_162 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Extensions.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m13_26 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Extensions.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m13_30 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", file="Extensions.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string, string, string, string, string, bool)", span="68-68"];
m13_206 [file="Extensions.cs", label=string, span=""];
m14_4 [cluster="QuantConnect.Data.Market.FuturesContract.ToString()", file="FakeLiveQueueHandler.cs", label="Entry QuantConnect.Data.Market.FuturesContract.ToString()", span="127-127"];
m14_5 [cluster="QuantConnect.Data.Market.FuturesContract.ToString()", color=red, community=0, file="FakeLiveQueueHandler.cs", label="1: return Symbol.Value;", span="129-129"];
m14_6 [cluster="QuantConnect.Data.Market.FuturesContract.ToString()", file="FakeLiveQueueHandler.cs", label="Exit QuantConnect.Data.Market.FuturesContract.ToString()", span="127-127"];
m14_0 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="FakeLiveQueueHandler.cs", label="Entry QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="115-115"];
m14_1 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", color=red, community=0, file="FakeLiveQueueHandler.cs", label="3: Symbol = symbol", span="117-117"];
m14_2 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", color=red, community=0, file="FakeLiveQueueHandler.cs", label="1: UnderlyingSymbol = underlyingSymbol", span="118-118"];
m14_3 [cluster="QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", file="FakeLiveQueueHandler.cs", label="Exit QuantConnect.Data.Market.FuturesContract.FuturesContract(QuantConnect.Symbol, QuantConnect.Symbol)", span="115-115"];
m14_7 [file="FakeLiveQueueHandler.cs", label="QuantConnect.Data.Market.FuturesContract", span=""];
m15_5 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="FileLogHandler.cs", label="Entry QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="73-73"];
m15_6 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", color=green, community=0, file="FileLogHandler.cs", label="1: return 1m;", span="76-76"];
m15_7 [cluster="QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", file="FileLogHandler.cs", label="Exit QuantConnect.Brokerages.GDAXBrokerageModel.GetLeverage(QuantConnect.Securities.Security)", span="73-73"];
m16_162 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SetAlgorithm(QuantConnect.Interfaces.IAlgorithm)", span="193-193"];
m16_176 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.DebugMessage(string)", span="102-102"];
m16_194 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="Global.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m16_177 [cluster="QuantConnect.Isolator.Isolator()", file="Global.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m16_181 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="420-420"];
m16_243 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="Log.Error(err, ''Breaking out of parent try catch:'')", span="422-422"];
m16_247 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="var message = ''Runtime Error: '' + err", span="426-426"];
m16_250 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="_algorithmHandlers.Results.RuntimeError(message, err.StackTrace)", span="429-429"];
m16_251 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, message + '' Stack Trace: '' + err)", span="430-430"];
m16_244 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="_algorithmHandlers.DataFeed != null", span="423-423"];
m16_245 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="_algorithmHandlers.DataFeed.Exit()", span="423-423"];
m16_246 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="_algorithmHandlers.Results != null", span="424-424"];
m16_248 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="Log.Trace(''Engine.Run(): Sending runtime error to user...'')", span="427-427"];
m16_249 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="_algorithmHandlers.Results.LogMessage(message)", span="428-428"];
m16_252 [cluster="QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Engine.HandleAlgorithmError(QuantConnect.Packets.AlgorithmNodePacket, System.Exception)", span="420-420"];
m16_274 [cluster="System.DateTime.ToString(string)", file="Global.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m16_146 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Global.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m16_174 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendStatusUpdate(QuantConnect.AlgorithmStatus, string)", span="219-219"];
m16_214 [cluster="string.Format(string, object)", file="Global.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_270 [cluster="System.IO.Path.GetDirectoryName(string)", file="Global.cs", label="Entry System.IO.Path.GetDirectoryName(string)", span="0-0"];
m16_190 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="Global.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="292-292"];
m16_150 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", file="Global.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart, int)", span="0-0"];
m16_197 [cluster="string.Format(string, params object[])", file="Global.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m16_196 [cluster="long.ToString(string)", file="Global.cs", label="Entry long.ToString(string)", span="0-0"];
m16_167 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Global.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m16_189 [cluster="System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Global.cs", label="Entry System.Collections.Generic.SortedDictionary<TKey, TValue>.SortedDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m16_276 [cluster="lambda expression", file="Global.cs", label="Entry lambda expression", span="453-453"];
m16_229 [cluster="lambda expression", file="Global.cs", label="algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _algorithmHandlers.CommandQueue, isolator.CancellationToken)", span="255-255"];
m16_233 [cluster="lambda expression", file="Global.cs", label="algorithmManager.SetStatus(AlgorithmStatus.RuntimeError)", span="262-262"];
m16_210 [cluster="lambda expression", file="Global.cs", label="!algorithm.GetLocked() || algorithm.IsWarmingUp", span="140-140"];
m16_216 [cluster="lambda expression", file="Global.cs", label="algorithm.BrokerageMessageHandler.Handle(message)", span="210-210"];
m16_217 [cluster="lambda expression", file="Global.cs", label="algorithm.OnBrokerageMessage(message)", span="213-213"];
m16_220 [cluster="lambda expression", file="Global.cs", label="algorithm.OnBrokerageDisconnect()", span="217-217"];
m16_222 [cluster="lambda expression", file="Global.cs", label="algorithm.OnBrokerageReconnect()", span="220-220"];
m16_232 [cluster="lambda expression", file="Global.cs", label="algorithm.RunTimeError = err", span="261-261"];
m16_209 [cluster="lambda expression", file="Global.cs", label="Entry lambda expression", span="137-145"];
m16_218 [cluster="lambda expression", file="Global.cs", label="message.Type", span="214-214"];
m16_228 [cluster="lambda expression", file="Global.cs", label="Entry lambda expression", span="247-267"];
m16_239 [cluster="lambda expression", file="Global.cs", label="Entry lambda expression", span="319-319"];
m16_211 [cluster="lambda expression", file="Global.cs", label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress))", span="142-143"];
m16_212 [cluster="lambda expression", file="Global.cs", label="Exit lambda expression", span="137-145"];
m16_215 [cluster="lambda expression", file="Global.cs", label="Entry lambda expression", span="208-223"];
m16_219 [cluster="lambda expression", file="Global.cs", label="BrokerageMessageType.Disconnect", span="216-216"];
m16_221 [cluster="lambda expression", file="Global.cs", label="BrokerageMessageType.Reconnect", span="219-219"];
m16_223 [cluster="lambda expression", file="Global.cs", label="Exit lambda expression", span="208-223"];
m16_230 [cluster="lambda expression", file="Global.cs", label=Exception, span="257-257"];
m16_235 [cluster="lambda expression", file="Global.cs", label="Log.Trace(''Engine.Run(): Exiting Algorithm Manager'')", span="266-266"];
m16_231 [cluster="lambda expression", file="Global.cs", label="Log.Error(err)", span="260-260"];
m16_234 [cluster="lambda expression", file="Global.cs", label="return;", span="263-263"];
m16_236 [cluster="lambda expression", file="Global.cs", label="Exit lambda expression", span="247-267"];
m16_240 [cluster="lambda expression", file="Global.cs", label="x.Status.IsFill()", span="319-319"];
m16_241 [cluster="lambda expression", file="Global.cs", label="Exit lambda expression", span="319-319"];
m16_277 [cluster="lambda expression", file="Global.cs", label="x.Status.IsFill()", span="453-453"];
m16_278 [cluster="lambda expression", file="Global.cs", label="Exit lambda expression", span="453-453"];
m16_158 [cluster="QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.ZipDataCacheProvider.ZipDataCacheProvider(QuantConnect.Interfaces.IDataProvider)", span="44-44"];
m16_178 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", file="Global.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Func<string>, System.Action, long)", span="69-69"];
m16_207 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="Global.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="108-108"];
m16_258 [cluster="System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", file="Global.cs", label="Entry System.Collections.Generic.IEnumerable<T>.IsNullOrEmpty<T>()", span="105-105"];
m16_170 [cluster="QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetAlgorithmId(string)", span="437-437"];
m16_0 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70"];
m16_1 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="Global.cs", label="_liveMode = liveMode", span="72-72"];
m16_2 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="Global.cs", label="_systemHandlers = systemHandlers", span="73-73"];
m16_3 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="Global.cs", label="_algorithmHandlers = algorithmHandlers", span="74-74"];
m16_4 [cluster="QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Engine.Engine(QuantConnect.Lean.Engine.LeanEngineSystemHandlers, QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers, bool)", span="70-70"];
m16_227 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageReconnect()", span="425-425"];
m16_168 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Global.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m16_253 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.LogMessage(string)", span="120-120"];
m16_203 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", file="Global.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Exit()", span="93-93"];
m16_185 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="Global.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m16_198 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.SendFinalResult(QuantConnect.Packets.AlgorithmNodePacket, System.Collections.Generic.Dictionary<int, QuantConnect.Orders.Order>, System.Collections.Generic.Dictionary<System.DateTime, decimal>, System.Collections.Generic.Dictionary<string, QuantConnect.Holding>, QuantConnect.Statistics.StatisticsResults, System.Collections.Generic.Dictionary<string, string>)", span="212-212"];
m16_225 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="415-415"];
m16_153 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, QuantConnect.Interfaces.IDataProvider)", span="53-53"];
m16_199 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", file="Global.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Exit()", span="62-62"];
m16_187 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="451-451"];
m16_260 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="Global.cs", label="var orders = transactions.GetOrders(x => x.Status.IsFill())", span="453-453"];
m16_261 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="Global.cs", label="var path = Path.GetDirectoryName(csvFileName)", span="455-455"];
m16_264 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="Global.cs", label="var writer = new StreamWriter(csvFileName)", span="459-459"];
m16_265 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="Global.cs", label=orders, span="461-461"];
m16_262 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="Global.cs", label="path != null && !Directory.Exists(path)", span="456-456"];
m16_263 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="Global.cs", label="Directory.CreateDirectory(path)", span="457-457"];
m16_267 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="Global.cs", label="writer.WriteLine(line)", span="469-469"];
m16_266 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="Global.cs", label="var line = string.Format(''{0},{1},{2},{3},{4}'',\r\n                        order.Time.ToString(''yyyy-MM-dd HH:mm:ss''),\r\n                        order.Symbol.Value,\r\n                        order.Direction,\r\n                        order.Quantity,\r\n                        order.Price)", span="463-468"];
m16_268 [cluster="QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Engine.SaveListOfTrades(QuantConnect.Securities.IOrderProvider, string)", span="451-451"];
m16_237 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.Run(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler, QuantConnect.Interfaces.ICommandQueueHandler, System.Threading.CancellationToken)", span="132-132"];
m16_148 [cluster="QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", file="Global.cs", label="Entry QuantConnect.Interfaces.IMessagingHandler.SetAuthentication(QuantConnect.Packets.AlgorithmNodePacket)", span="44-44"];
m16_154 [cluster="QuantConnect.Interfaces.ICommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", file="Global.cs", label="Entry QuantConnect.Interfaces.ICommandQueueHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm)", span="35-35"];
m16_173 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IApi)", span="42-42"];
m16_171 [cluster="QuantConnect.Interfaces.IAlgorithm.SetLocked()", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.SetLocked()", span="442-442"];
m16_180 [cluster="System.Exception.Exception(string)", file="Global.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m16_208 [cluster="System.IDisposable.Dispose()", file="Global.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m16_172 [cluster="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler.Initialize(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Lean.Engine.Results.IResultHandler)", span="52-52"];
m16_166 [cluster="QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", file="Global.cs", label="Entry QuantConnect.Interfaces.IApi.SetAlgorithmStatus(string, QuantConnect.AlgorithmStatus, string)", span="265-265"];
m16_5 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", span="82-82"];
m16_6 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var algorithm = default(IAlgorithm)", span="84-84"];
m16_8 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var statusPing = new StateCheck.Ping(algorithmManager, _systemHandlers.Api, _algorithmHandlers.Results, _systemHandlers.Notify, job)", span="88-88"];
m16_16 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="2: _systemHandlers.Notify.SetAuthentication(job)", span="102-102"];
m16_17 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="2: _algorithmHandlers.Results.Initialize(job, _systemHandlers.Notify, _systemHandlers.Api, _algorithmHandlers.DataFeed, _algorithmHandlers.Setup, _algorithmHandlers.Transactions)", span="105-105"];
m16_21 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="algorithm = _algorithmHandlers.Setup.CreateAlgorithmInstance(job, assemblyPath)", span="114-114"];
m16_23 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="brokerage = _algorithmHandlers.Setup.CreateBrokerage(job, algorithm, out factory)", span="118-118"];
m16_24 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.DataFeed.Initialize(algorithm, job, _algorithmHandlers.Results, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, _algorithmHandlers.DataProvider)", span="121-121"];
m16_25 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.CommandQueue.Initialize(job, algorithm)", span="124-124"];
m16_27 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var historyProvider = GetHistoryProvider(job.HistoryProvider)", span="130-130"];
m16_31 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="historyProvider.Initialize(job, _algorithmHandlers.DataProvider, historyDataCacheProvider, _algorithmHandlers.MapFileProvider, _algorithmHandlers.FactorFileProvider, progress =>\r\n                    {\r\n                        // send progress updates to the result handler only during initialization\r\n                        if (!algorithm.GetLocked() || algorithm.IsWarmingUp)\r\n                        {\r\n                            _algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.History, \r\n                                string.Format(''Processing history {0}%...'', progress));\r\n                        }\r\n                    })", span="137-145"];
m16_33 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="algorithm.BrokerageMessageHandler = factory.CreateBrokerageMessageHandler(algorithm, job, _systemHandlers.Api)", span="150-150"];
m16_34 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="initializeComplete = _algorithmHandlers.Setup.Setup(algorithm, brokerage, job, _algorithmHandlers.Results, _algorithmHandlers.Transactions, _algorithmHandlers.RealTime)", span="153-153"];
m16_42 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, errorMessage)", span="167-167"];
m16_47 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_systemHandlers.Api.SetAlgorithmStatus(job.AlgorithmId, AlgorithmStatus.RuntimeError, runtimeMessage)", span="175-175"];
m16_57 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="job is LiveNodePacket", span="191-191"];
m16_61 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="algorithm.SetAlgorithmId(job.AlgorithmId)", span="200-200"];
m16_64 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.RealTime.Setup(algorithm, job, _algorithmHandlers.Results, _systemHandlers.Api)", span="205-205"];
m16_73 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Results.DebugMessage(string.Format(''Launching analysis for {0} with LEAN Engine v{1}'', job.AlgorithmId, Globals.Version))", span="239-239"];
m16_75 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="2: var complete = isolator.ExecuteWithTimeLimit(_algorithmHandlers.Setup.MaximumRuntime, algorithmManager.TimeLoopWithinLimits, () =>\r\n                        {\r\n                            try\r\n                            {\r\n                                //Run Algorithm Job:\r\n                                // -> Using this Data Feed, \r\n                                // -> Send Orders to this TransactionHandler, \r\n                                // -> Send Results to ResultHandler.\r\n                                algorithmManager.Run(job, algorithm, _algorithmHandlers.DataFeed, _algorithmHandlers.Transactions, _algorithmHandlers.Results, _algorithmHandlers.RealTime, _algorithmHandlers.CommandQueue, isolator.CancellationToken);\r\n                            }\r\n                            catch (Exception err)\r\n                            {\r\n                                //Debugging at this level is difficult, stack trace needed.\r\n                                Log.Error(err);\r\n                                algorithm.RunTimeError = err;\r\n                                algorithmManager.SetStatus(AlgorithmStatus.RuntimeError);\r\n                                return;\r\n                            }\r\n\r\n                            Log.Trace(''Engine.Run(): Exiting Algorithm Manager'');\r\n                        }, job.Controls.RamAllocation)", span="247-267"];
m16_80 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=red, community=0, file="Global.cs", label="2: HandleAlgorithmError(job, algorithm.RunTimeError)", span="279-279"];
m16_82 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="HandleAlgorithmError(job, err)", span="285-285"];
m16_113 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Results.DebugMessage(\r\n                            string.Format(''Algorithm Id:({0}) completed in {1} seconds at {2}k data points per second. Processing total of {3} data points.'',\r\n                                job.AlgorithmId, totalSeconds.ToString(''F2''), ((dataPoints/(double) 1000)/totalSeconds).ToString(''F0''),\r\n                                dataPoints.ToString(''N0'')))", span="346-349"];
m16_114 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Results.SendFinalResult(job, orders, algorithm.Transactions.TransactionRecord, holdings, statisticsResults, banner)", span="351-351"];
m16_7 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var algorithmManager = new AlgorithmManager(_liveMode)", span="85-85"];
m16_112 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var dataPoints = algorithmManager.DataPoints + algorithm.HistoryProvider.DataPointCount", span="345-345"];
m16_9 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var statusPingThread = new Thread(statusPing.Run) { IsBackground = true }", span="89-89"];
m16_121 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="statusPing.Exit()", span="366-366"];
m16_10 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="statusPingThread.Start()", span="90-90"];
m16_132 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="statusPingThread != null && statusPingThread.IsAlive", span="384-384"];
m16_133 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="statusPingThread.Abort()", span="384-384"];
m16_11 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="1: var initializeComplete = false", span="95-95"];
m16_12 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="0: Thread threadFeed = null", span="96-96"];
m16_13 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="0: Thread threadTransactions = null", span="97-97"];
m16_126 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadFeed != null && threadFeed.IsAlive", span="381-381"];
m16_127 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadFeed.Abort()", span="381-381"];
m16_14 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="0: Thread threadResults = null", span="98-98"];
m16_128 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadTransactions != null && threadTransactions.IsAlive", span="382-382"];
m16_129 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadTransactions.Abort()", span="382-382"];
m16_15 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="0: Thread threadRealTime = null", span="99-99"];
m16_18 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="2: threadResults = new Thread(_algorithmHandlers.Results.Run, 0) { IsBackground = true, Name = ''Result Thread'' }", span="107-107"];
m16_19 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="2: threadResults.Start()", span="108-108"];
m16_130 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadResults != null && threadResults.IsAlive", span="383-383"];
m16_131 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadResults.Abort()", span="383-383"];
m16_20 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="2: IBrokerage brokerage = null", span="110-110"];
m16_22 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="IBrokerageFactory factory", span="117-117"];
m16_26 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="algorithm.Transactions.SetOrderProcessor(_algorithmHandlers.Transactions)", span="127-127"];
m16_32 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="algorithm.HistoryProvider = historyProvider", span="147-147"];
m16_35 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Results.SetAlgorithm(algorithm)", span="156-156"];
m16_36 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="!initializeComplete || algorithm.ErrorMessages.Count > 0 || _algorithmHandlers.Setup.Errors.Count > 0", span="159-159"];
m16_38 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var errorMessage = String.Join('','', algorithm.ErrorMessages)", span="163-163"];
m16_55 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="algorithm != null && algorithm.HistoryProvider != null", span="187-187"];
m16_56 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''         History Provider:     '' + algorithm.HistoryProvider.GetType().FullName)", span="189-189"];
m16_62 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="algorithm.SetLocked()", span="201-201"];
m16_63 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Transactions.Initialize(algorithm, brokerage, _algorithmHandlers.Results)", span="204-204"];
m16_65 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="brokerage.Message += (sender, message) =>\r\n                    {\r\n                        algorithm.BrokerageMessageHandler.Handle(message);\r\n\r\n                        // fire brokerage message events\r\n                        algorithm.OnBrokerageMessage(message);\r\n                        switch (message.Type)\r\n                        {\r\n                            case BrokerageMessageType.Disconnect:\r\n                                algorithm.OnBrokerageDisconnect();\r\n                                break;\r\n                            case BrokerageMessageType.Reconnect:\r\n                                algorithm.OnBrokerageReconnect();\r\n                                break;\r\n                        }\r\n                    }", span="208-223"];
m16_79 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="algorithm.RunTimeError != null", span="277-277"];
m16_83 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="0: var trades = algorithm.TradeBuilder.ClosedTrades", span="290-290"];
m16_99 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var profitLoss = new SortedDictionary<DateTime, decimal>(algorithm.Transactions.TransactionRecord)", span="318-318"];
m16_100 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var totalTransactions = algorithm.Transactions.GetOrders(x => x.Status.IsFill()).Count()", span="319-319"];
m16_102 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="statisticsResults = StatisticsBuilder.Generate(trades, profitLoss, equity, performance, benchmark,\r\n                                    _algorithmHandlers.Setup.StartingPortfolioValue, algorithm.Portfolio.TotalFees, totalTransactions)", span="322-323"];
m16_103 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var netReturn = _algorithmHandlers.Setup.StartingPortfolioValue > 0 ?\r\n                                                (algorithm.Portfolio.TotalPortfolioValue - _algorithmHandlers.Setup.StartingPortfolioValue) / _algorithmHandlers.Setup.StartingPortfolioValue\r\n                                                : 0", span="326-328"];
m16_104 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="banner.Add(''Unrealized'', ''$'' + algorithm.Portfolio.TotalUnrealizedProfit.ToString(''N2''))", span="331-331"];
m16_105 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="banner.Add(''Fees'', ''-$'' + algorithm.Portfolio.TotalFees.ToString(''N2''))", span="332-332"];
m16_106 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="banner.Add(''Net Profit'', ''$'' + algorithm.Portfolio.TotalProfit.ToString(''N2''))", span="333-333"];
m16_108 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="banner.Add(''Equity'', ''$'' + algorithm.Portfolio.TotalPortfolioValue.ToString(''N2''))", span="335-335"];
m16_29 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="(historyProvider as BrokerageHistoryProvider).SetBrokerage(brokerage)", span="133-133"];
m16_58 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''         Brokerage:      '' + brokerage.GetType().FullName)", span="191-191"];
m16_134 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="brokerage != null", span="386-386"];
m16_136 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="brokerage.Disconnect()", span="389-389"];
m16_28 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="historyProvider is BrokerageHistoryProvider", span="131-131"];
m16_30 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var historyDataCacheProvider = new ZipDataCacheProvider(_algorithmHandlers.DataProvider)", span="136-136"];
m16_59 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label=initializeComplete, span="194-194"];
m16_37 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="initializeComplete = false", span="161-161"];
m16_43 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label=Exception, span="170-170"];
m16_48 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''JOB HANDLERS: '')", span="180-180"];
m16_39 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="errorMessage += String.Join('','', _algorithmHandlers.Setup.Errors)", span="164-164"];
m16_40 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Error(''Engine.Run(): '' + errorMessage)", span="165-165"];
m16_41 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Results.RuntimeError(errorMessage)", span="166-166"];
m16_44 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Error(err)", span="172-172"];
m16_45 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var runtimeMessage = ''Algorithm.Initialize() Error: '' + err.Message + '' Stack Trace: '' + err.StackTrace", span="173-173"];
m16_46 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Results.RuntimeError(runtimeMessage, err.StackTrace)", span="174-174"];
m16_49 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''         DataFeed:     '' + _algorithmHandlers.DataFeed.GetType().FullName)", span="181-181"];
m16_50 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''         Setup:        '' + _algorithmHandlers.Setup.GetType().FullName)", span="182-182"];
m16_51 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''         RealTime:     '' + _algorithmHandlers.RealTime.GetType().FullName)", span="183-183"];
m16_52 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''         Results:      '' + _algorithmHandlers.Results.GetType().FullName)", span="184-184"];
m16_53 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''         Transactions: '' + _algorithmHandlers.Transactions.GetType().FullName)", span="185-185"];
m16_54 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''         Commands:     '' + _algorithmHandlers.CommandQueue.GetType().FullName)", span="186-186"];
m16_60 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var startTime = DateTime.Now", span="197-197"];
m16_120 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Results.Exit()", span="365-365"];
m16_111 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var totalSeconds = (DateTime.Now - startTime).TotalSeconds", span="344-344"];
m16_66 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Results.SendStatusUpdate(AlgorithmStatus.Running)", span="226-226"];
m16_67 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadFeed = new Thread(_algorithmHandlers.DataFeed.Run) { IsBackground = true, Name = ''DataFeed Thread'' }", span="229-229"];
m16_68 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadTransactions = new Thread(_algorithmHandlers.Transactions.Run) { IsBackground = true, Name = ''Transaction Thread'' }", span="230-230"];
m16_70 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadFeed.Start()", span="234-234"];
m16_69 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=red, community=0, file="Global.cs", label="2: threadRealTime = new Thread(_algorithmHandlers.RealTime.Run) { IsBackground = true, Name = ''RealTime Thread'' }", span="231-231"];
m16_71 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadTransactions.Start()", span="235-235"];
m16_72 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="threadRealTime.Start()", span="236-236"];
m16_74 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var isolator = new Isolator()", span="244-244"];
m16_76 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="!complete", span="269-269"];
m16_77 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Error(''Engine.Main(): Failed to complete in time: '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F''))", span="271-271"];
m16_78 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="throw new Exception(''Failed to complete algorithm within '' + _algorithmHandlers.Setup.MaximumRuntime.ToString(''F'')\r\n                                + '' seconds. Please make it run faster.'');", span="272-273"];
m16_81 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label=Exception, span="282-282"];
m16_84 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var charts = new Dictionary<string, Chart>(_algorithmHandlers.Results.Charts)", span="291-291"];
m16_85 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var orders = new Dictionary<int, Order>(_algorithmHandlers.Transactions.Orders)", span="292-292"];
m16_96 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="charts.ContainsKey(strategyEquityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(equityKey) &&\r\n                                charts[strategyEquityKey].Series.ContainsKey(dailyPerformanceKey)", span="312-314"];
m16_97 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var equity = charts[strategyEquityKey].Series[equityKey].Values", span="316-316"];
m16_98 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var performance = charts[strategyEquityKey].Series[dailyPerformanceKey].Values", span="317-317"];
m16_101 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var benchmark = charts[benchmarkKey].Series[benchmarkKey].Values", span="320-320"];
m16_86 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var holdings = new Dictionary<string, Holding>()", span="293-293"];
m16_87 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var banner = new Dictionary<string, string>()", span="294-294"];
m16_88 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var statisticsResults = new StatisticsResults()", span="295-295"];
m16_107 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="banner.Add(''Return'', netReturn.ToString(''P''))", span="334-334"];
m16_89 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var csvTransactionsFileName = Config.Get(''transaction-log'')", span="297-297"];
m16_90 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="!string.IsNullOrEmpty(csvTransactionsFileName)", span="298-298"];
m16_91 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", color=green, community=0, file="Global.cs", label="3: SaveListOfTrades(_algorithmHandlers.Transactions, csvTransactionsFileName)", span="300-300"];
m16_92 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="string strategyEquityKey = ''Strategy Equity''", span="306-306"];
m16_93 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="string equityKey = ''Equity''", span="307-307"];
m16_94 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="string dailyPerformanceKey = ''Daily Performance''", span="308-308"];
m16_95 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="string benchmarkKey = ''Benchmark''", span="309-309"];
m16_109 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label=Exception, span="338-338"];
m16_110 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Error(err, ''Error generating statistics packet'')", span="340-340"];
m16_115 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label=Exception, span="353-353"];
m16_117 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Transactions.Exit()", span="359-359"];
m16_116 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Error(err, ''Error sending analysis results'')", span="355-355"];
m16_118 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.DataFeed.Exit()", span="360-360"];
m16_119 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.RealTime.Exit()", span="361-361"];
m16_122 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="var ts = Stopwatch.StartNew()", span="369-369"];
m16_123 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="(_algorithmHandlers.Results.IsActive \r\n                    || (_algorithmHandlers.Transactions != null && _algorithmHandlers.Transactions.IsActive) \r\n                    || (_algorithmHandlers.DataFeed != null && _algorithmHandlers.DataFeed.IsActive)\r\n                    || (_algorithmHandlers.RealTime != null && _algorithmHandlers.RealTime.IsActive))\r\n                    && ts.ElapsedMilliseconds < 30*1000", span="370-374"];
m16_124 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Thread.Sleep(100)", span="376-376"];
m16_125 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''Waiting for threads to exit...'')", span="377-377"];
m16_135 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''Engine.Run(): Disconnecting from brokerage...'')", span="388-388"];
m16_137 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Setup != null", span="391-391"];
m16_138 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''Engine.Run(): Disposing of setup handler...'')", span="393-393"];
m16_140 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Trace(''Engine.Main(): Analysis Completed and Results Posted.'')", span="396-396"];
m16_139 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="_algorithmHandlers.Setup.Dispose()", span="394-394"];
m16_141 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label=Exception, span="398-398"];
m16_143 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", span="82-82"];
m16_142 [cluster="QuantConnect.Lean.Engine.Engine.Run(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Log.Error(err, ''Error running algorithm'')", span="400-400"];
m16_273 [cluster="System.IO.StreamWriter.StreamWriter(string)", file="Global.cs", label="Entry System.IO.StreamWriter.StreamWriter(string)", span="0-0"];
m16_144 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.AlgorithmManager(bool)", span="106-106"];
m16_155 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="Global.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="374-374"];
m16_271 [cluster="System.IO.Directory.Exists(string)", file="Global.cs", label="Entry System.IO.Directory.Exists(string)", span="0-0"];
m16_204 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="Global.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m16_156 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="437-437"];
m16_254 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="Global.cs", label="historyProvider.IsNullOrEmpty()", span="439-439"];
m16_256 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="Global.cs", label="return Composer.Instance.GetExportedValueByTypeName<IHistoryProvider>(historyProvider);", span="443-443"];
m16_255 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="Global.cs", label="historyProvider = Config.Get(''history-provider'', ''SubscriptionDataReaderHistoryProvider'')", span="441-441"];
m16_257 [cluster="QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", file="Global.cs", label="Exit QuantConnect.Lean.Engine.Engine.GetHistoryProvider(string)", span="437-437"];
m16_242 [cluster="QuantConnect.Orders.OrderStatus.IsFill()", file="Global.cs", label="Entry QuantConnect.Orders.OrderStatus.IsFill()", span="50-50"];
m16_238 [cluster="QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.AlgorithmManager.SetStatus(QuantConnect.AlgorithmStatus)", span="688-688"];
m16_175 [cluster="string.Format(string, object, object)", file="Global.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m16_184 [cluster="QuantConnect.Statistics.StatisticsResults.StatisticsResults()", file="Global.cs", label="Entry QuantConnect.Statistics.StatisticsResults.StatisticsResults()", span="55-55"];
m16_182 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="Global.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m16_145 [cluster="QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Packets.AlgorithmNodePacket)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.StateCheck.Ping.Ping(QuantConnect.Lean.Engine.AlgorithmManager, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Packets.AlgorithmNodePacket)", span="46-46"];
m16_161 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.Setup(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Interfaces.IBrokerage, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Lean.Engine.Results.IResultHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler, QuantConnect.Lean.Engine.RealTime.IRealTimeHandler)", span="101-101"];
m16_191 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Global.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m16_179 [cluster="System.TimeSpan.ToString(string)", file="Global.cs", label="Entry System.TimeSpan.ToString(string)", span="0-0"];
m16_193 [cluster="decimal.ToString(string)", file="Global.cs", label="Entry decimal.ToString(string)", span="0-0"];
m16_259 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="Global.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m16_157 [cluster="QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.HistoricalData.BrokerageHistoryProvider.SetBrokerage(QuantConnect.Interfaces.IBrokerage)", span="41-41"];
m16_149 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IMessagingHandler, QuantConnect.Interfaces.IApi, QuantConnect.Lean.Engine.DataFeeds.IDataFeed, QuantConnect.Lean.Engine.Setup.ISetupHandler, QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler)", span="91-91"];
m16_188 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="Global.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m16_226 [cluster="QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.OnBrokerageDisconnect()", span="420-420"];
m16_163 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Global.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m16_164 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Global.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m16_269 [cluster="QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="Global.cs", label="Entry QuantConnect.Securities.IOrderProvider.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="65-65"];
m16_152 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateBrokerage(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IAlgorithm, out QuantConnect.Interfaces.IBrokerageFactory)", span="89-89"];
m16_160 [cluster="QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", file="Global.cs", label="Entry QuantConnect.Interfaces.IBrokerageFactory.CreateBrokerageMessageHandler(QuantConnect.Interfaces.IAlgorithm, QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IApi)", span="60-60"];
m16_272 [cluster="System.IO.Directory.CreateDirectory(string)", file="Global.cs", label="Entry System.IO.Directory.CreateDirectory(string)", span="0-0"];
m16_159 [cluster="QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", file="Global.cs", label="Entry QuantConnect.Interfaces.IHistoryProvider.Initialize(QuantConnect.Packets.AlgorithmNodePacket, QuantConnect.Interfaces.IDataProvider, QuantConnect.Interfaces.IDataCacheProvider, QuantConnect.Interfaces.IMapFileProvider, QuantConnect.Interfaces.IFactorFileProvider, System.Action<int>)", span="45-45"];
m16_147 [cluster="System.Threading.Thread.Start()", file="Global.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m16_200 [cluster="QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", file="Global.cs", label="Entry QuantConnect.Lean.Engine.DataFeeds.IDataFeed.Exit()", span="77-77"];
m16_206 [cluster="System.Threading.Thread.Abort()", file="Global.cs", label="Entry System.Threading.Thread.Abort()", span="0-0"];
m16_195 [cluster="double.ToString(string)", file="Global.cs", label="Entry double.ToString(string)", span="0-0"];
m16_205 [cluster="System.Threading.Thread.Sleep(int)", file="Global.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m16_275 [cluster="System.IO.TextWriter.WriteLine(string)", file="Global.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m16_201 [cluster="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", file="Global.cs", label="Entry QuantConnect.Lean.Engine.RealTime.IRealTimeHandler.Exit()", span="64-64"];
m16_183 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Global.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m16_224 [cluster="QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", file="Global.cs", label="Entry QuantConnect.Brokerages.IBrokerageMessageHandler.Handle(QuantConnect.Brokerages.BrokerageMessageEvent)", span="27-27"];
m16_192 [cluster="QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", file="Global.cs", label="Entry QuantConnect.Statistics.StatisticsBuilder.Generate(System.Collections.Generic.List<QuantConnect.Statistics.Trade>, System.Collections.Generic.SortedDictionary<System.DateTime, decimal>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, System.Collections.Generic.List<QuantConnect.ChartPoint>, decimal, decimal, int)", span="40-40"];
m16_151 [cluster="QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Setup.ISetupHandler.CreateAlgorithmInstance(QuantConnect.Packets.AlgorithmNodePacket, string)", span="80-80"];
m16_213 [cluster="QuantConnect.Interfaces.IAlgorithm.GetLocked()", file="Global.cs", label="Entry QuantConnect.Interfaces.IAlgorithm.GetLocked()", span="447-447"];
m16_186 [cluster="string.IsNullOrEmpty(string)", file="Global.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m16_202 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.Exit()", span="243-243"];
m16_165 [cluster="QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", file="Global.cs", label="Entry QuantConnect.Lean.Engine.Results.IResultHandler.RuntimeError(string, string)", span="134-134"];
m16_279 [file="Global.cs", label="QuantConnect.Lean.Engine.Engine", span=""];
m16_280 [file="Global.cs", label=algorithm, span=""];
m16_281 [file="Global.cs", label="QuantConnect.Packets.AlgorithmNodePacket", span=""];
m16_282 [file="Global.cs", label=algorithmManager, span=""];
m16_283 [file="Global.cs", label=isolator, span=""];
m18_8 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Disconnect()", span="70-70"];
m18_9 [cluster="QuantConnect.Interfaces.IBrokerage.Disconnect()", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IBrokerage.Disconnect()", span="70-70"];
m18_4 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="60-60"];
m18_5 [cluster="QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="60-60"];
m18_0 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="46-46"];
m18_1 [cluster="QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="46-46"];
m18_2 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="53-53"];
m18_3 [cluster="QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="53-53"];
m18_6 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="IBrokerage.cs", label="Entry QuantConnect.Interfaces.IBrokerage.Connect()", span="65-65"];
m18_7 [cluster="QuantConnect.Interfaces.IBrokerage.Connect()", file="IBrokerage.cs", label="Exit QuantConnect.Interfaces.IBrokerage.Connect()", span="65-65"];
m21_4 [cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="ILogHandler.cs", label="Entry QuantConnect.Logging.ILogHandler.Trace(string)", span="39-39"];
m21_5 [cluster="QuantConnect.Logging.ILogHandler.Trace(string)", file="ILogHandler.cs", label="Exit QuantConnect.Logging.ILogHandler.Trace(string)", span="39-39"];
m21_0 [cluster="QuantConnect.Logging.ILogHandler.Error(string)", file="ILogHandler.cs", label="Entry QuantConnect.Logging.ILogHandler.Error(string)", span="27-27"];
m21_1 [cluster="QuantConnect.Logging.ILogHandler.Error(string)", file="ILogHandler.cs", label="Exit QuantConnect.Logging.ILogHandler.Error(string)", span="27-27"];
m21_2 [cluster="QuantConnect.Logging.ILogHandler.Debug(string)", file="ILogHandler.cs", label="Entry QuantConnect.Logging.ILogHandler.Debug(string)", span="33-33"];
m21_3 [cluster="QuantConnect.Logging.ILogHandler.Debug(string)", file="ILogHandler.cs", label="Exit QuantConnect.Logging.ILogHandler.Debug(string)", span="33-33"];
m22_28 [cluster="QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Util.LeanData.GenerateZipFilePath(string, QuantConnect.Symbol, System.DateTime, QuantConnect.Resolution, QuantConnect.TickType)", span="290-290"];
m22_30 [cluster="QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.Write(System.Collections.Generic.IEnumerable<QuantConnect.Data.BaseData>)", span="73-73"];
m22_8 [cluster="System.DateTime.Parse(string, System.IFormatProvider)", file="InteractiveBrokersBrokerage.cs", label="Entry System.DateTime.Parse(string, System.IFormatProvider)", span="0-0"];
m22_38 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", span="74-74"];
m22_39 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: var filePath = LeanData.GenerateZipFilePath(_dataDirectory, _cfd, _date, Resolution.Minute, TickType.Quote)", span="76-76"];
m22_40 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", file="InteractiveBrokersBrokerage.cs", label="var leanDataWriter = new LeanDataWriter(Resolution.Minute, _cfd, _dataDirectory, TickType.Quote)", span="78-78"];
m22_42 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(File.Exists(filePath))", span="81-81"];
m22_43 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsFalse(File.Exists(filePath + ''.tmp''))", span="82-82"];
m22_44 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: var data = QuantConnect.Compression.Unzip(filePath)", span="84-84"];
m22_45 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: Assert.AreEqual(data.First().Value.Count(), 3)", span="86-86"];
m22_41 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: leanDataWriter.Write(GetQuoteBars(_cfd))", span="79-79"];
m22_46 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCfd()", span="74-74"];
m22_14 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.GetQuoteBars(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataWriterTests.GetQuoteBars(QuantConnect.Symbol)", span="47-47"];
m22_15 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.GetQuoteBars(QuantConnect.Symbol)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: return new List<QuoteBar>()\r\n            {\r\n                new QuoteBar(DateTime.Parse(''3/16/2017 12:00:00 PM'', CultureInfo.InvariantCulture), sym, new Bar(1m, 2m, 3m, 4m),  1, new Bar(5m, 6m, 7m, 8m),  2),\r\n                new QuoteBar(DateTime.Parse(''3/16/2017 12:00:01 PM'', CultureInfo.InvariantCulture), sym, new Bar(11m, 21m, 31m, 41m),  3, new Bar(51m, 61m, 71m, 81m), 4),\r\n                new QuoteBar(DateTime.Parse(''3/16/2017 12:00:02 PM'', CultureInfo.InvariantCulture), sym, new Bar(10m, 20m, 30m, 40m),  5, new Bar(50m, 60m, 70m, 80m),  6),\r\n            };", span="49-54"];
m22_16 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.GetQuoteBars(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataWriterTests.GetQuoteBars(QuantConnect.Symbol)", span="47-47"];
m22_18 [cluster="QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.Bar.Bar(decimal, decimal, decimal, decimal)", span="58-58"];
m22_33 [cluster="Unk.IsFalse", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IsFalse", span=""];
m22_34 [cluster="QuantConnect.Compression.Unzip(string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Compression.Unzip(string)", span="534-534"];
m22_17 [cluster="QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.QuoteBar.QuoteBar(System.DateTime, QuantConnect.Symbol, QuantConnect.Data.Market.IBar, decimal, QuantConnect.Data.Market.IBar, decimal, System.TimeSpan?)", span="217-217"];
m22_32 [cluster="Unk.IsTrue", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.IsTrue", span=""];
m22_56 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", span="106-106"];
m22_61 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: Assert.IsFalse(File.Exists(filePath + ''.tmp''))", span="114-114"];
m22_57 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", file="InteractiveBrokersBrokerage.cs", label="var filePath = LeanData.GenerateZipFilePath(_dataDirectory, _crypto, _date, Resolution.Second, TickType.Quote)", span="108-108"];
m22_60 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(File.Exists(filePath))", span="113-113"];
m22_62 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", file="InteractiveBrokersBrokerage.cs", label="var data = QuantConnect.Compression.Unzip(filePath)", span="116-116"];
m22_59 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: leanDataWriter.Write(GetQuoteBars(_crypto))", span="111-111"];
m22_58 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", file="InteractiveBrokersBrokerage.cs", label="var leanDataWriter = new LeanDataWriter(Resolution.Second, _crypto, _dataDirectory, TickType.Quote)", span="110-110"];
m22_63 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: Assert.AreEqual(data.First().Value.Count(), 3)", span="118-118"];
m22_64 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteCrypto()", span="106-106"];
m22_7 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m22_29 [cluster="QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.ToolBox.LeanDataWriter.LeanDataWriter(QuantConnect.Resolution, QuantConnect.Symbol, string, QuantConnect.TickType)", span="48-48"];
m22_37 [cluster="Unk.AreEqual", file="InteractiveBrokersBrokerage.cs", label="Entry Unk.AreEqual", span=""];
m22_19 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", span="58-58"];
m22_22 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", file="InteractiveBrokersBrokerage.cs", label="leanDataWriter.Write(GetQuoteBars(_forex))", span="63-63"];
m22_20 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", file="InteractiveBrokersBrokerage.cs", label="var filePath = LeanData.GenerateZipFilePath(_dataDirectory, _forex, _date, Resolution.Second, TickType.Quote)", span="60-60"];
m22_21 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", file="InteractiveBrokersBrokerage.cs", label="var leanDataWriter = new LeanDataWriter(Resolution.Second, _forex, _dataDirectory, TickType.Quote)", span="62-62"];
m22_25 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", file="InteractiveBrokersBrokerage.cs", label="var data = QuantConnect.Compression.Unzip(filePath)", span="68-68"];
m22_26 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(data.First().Value.Count(), 3)", span="70-70"];
m22_23 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsTrue(File.Exists(filePath))", span="65-65"];
m22_24 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", file="InteractiveBrokersBrokerage.cs", label="Assert.IsFalse(File.Exists(filePath + ''.tmp''))", span="66-66"];
m22_27 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteForex()", span="58-58"];
m22_31 [cluster="System.IO.File.Exists(string)", file="InteractiveBrokersBrokerage.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m22_0 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataWriterTests.Setup()", span="28-28"];
m22_4 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_date = DateTime.Parse(''3/16/2017 12:00:00 PM'', CultureInfo.InvariantCulture)", span="33-33"];
m22_1 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_forex = Symbol.Create(''EURUSD'', SecurityType.Forex, Market.FXCM)", span="30-30"];
m22_2 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_cfd = Symbol.Create(''BCOUSD'', SecurityType.Cfd, Market.Oanda)", span="31-31"];
m22_3 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_equity = Symbol.Create(''spy'', SecurityType.Equity, Market.USA)", span="32-32"];
m22_5 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="_crypto = Symbol.Create(''BTCUSD'', SecurityType.Crypto, Market.Bitfinex)", span="34-34"];
m22_6 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.Setup()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataWriterTests.Setup()", span="28-28"];
m22_9 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.GetTicks(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataWriterTests.GetTicks(QuantConnect.Symbol)", span="37-37"];
m22_10 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.GetTicks(QuantConnect.Symbol)", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: return new List<Tick>()\r\n            {\r\n                new Tick(DateTime.Parse(''3/16/2017 12:00:00 PM'', CultureInfo.InvariantCulture), sym, 1.0m, 2.0m),\r\n                new Tick(DateTime.Parse(''3/16/2017 12:00:01 PM'', CultureInfo.InvariantCulture), sym, 3.0m, 4.0m),\r\n                new Tick(DateTime.Parse(''3/16/2017 12:00:02 PM'', CultureInfo.InvariantCulture), sym, 5.0m, 6.0m),\r\n            };", span="39-44"];
m22_11 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.GetTicks(QuantConnect.Symbol)", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataWriterTests.GetTicks(QuantConnect.Symbol)", span="37-37"];
m22_47 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", span="90-90"];
m22_48 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: var filePath = LeanData.GenerateZipFilePath(_dataDirectory, _equity, _date, Resolution.Tick, TickType.Trade)", span="92-92"];
m22_49 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: var leanDataWriter = new LeanDataWriter(Resolution.Tick, _equity, _dataDirectory)", span="94-94"];
m22_51 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: Assert.IsTrue(File.Exists(filePath))", span="97-97"];
m22_52 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: Assert.IsFalse(File.Exists(filePath + ''.tmp''))", span="98-98"];
m22_53 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", file="InteractiveBrokersBrokerage.cs", label="var data = QuantConnect.Compression.Unzip(filePath)", span="100-100"];
m22_50 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", color=green, community=0, file="InteractiveBrokersBrokerage.cs", label="2: leanDataWriter.Write(GetTicks(_equity))", span="95-95"];
m22_54 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", file="InteractiveBrokersBrokerage.cs", label="Assert.AreEqual(data.First().Value.Count(), 3)", span="102-102"];
m22_55 [cluster="QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", file="InteractiveBrokersBrokerage.cs", label="Exit QuantConnect.Tests.ToolBox.LeanDataWriterTests.LeanDataWriter_CanWriteEquity()", span="90-90"];
m22_13 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", file="InteractiveBrokersBrokerage.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, QuantConnect.Symbol, decimal, decimal)", span="142-142"];
m22_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m22_36 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="InteractiveBrokersBrokerage.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m22_65 [file="InteractiveBrokersBrokerage.cs", label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", span=""];
m25_34 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="110-110"];
m25_5 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.KillGateway()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.KillGateway()", span="36-36"];
m25_6 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.KillGateway()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: InteractiveBrokersGatewayRunner.Stop()", span="38-38"];
m25_7 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.KillGateway()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: Thread.Sleep(250)", span="39-39"];
m25_8 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.KillGateway()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.KillGateway()", span="36-36"];
m25_87 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="140-140"];
m25_101 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="int quantity = 1", span="169-169"];
m25_92 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="decimal aapl = 100m", span="147-147"];
m25_93 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: decimal delta = 85.0m", span="148-148"];
m25_94 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="0: ib.OrderEvent += (sender, args) =>\r\n            {\r\n                orderFilled = true;\r\n                aapl = args.FillPrice;\r\n                delta = 0.02m;\r\n                manualResetEvent.Set();\r\n            }", span="149-155"];
m25_89 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="143-143"];
m25_90 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = new InteractiveBrokersBrokerage()", span="144-144"];
m25_95 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: int id = 0", span="158-158"];
m25_96 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: ib.PlaceOrder(new MarketOrder(''AAPL'', 1, DateTime.UtcNow, '''', SecurityType.Equity) { Id = ++id })", span="159-159"];
m25_97 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOne(2000)", span="161-161"];
m25_102 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new StopMarketOrder(''AAPL'', +quantity, aapl - delta, DateTime.Now, '''', SecurityType.Equity) { Id = ++id }", span="170-170"];
m25_104 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(new StopMarketOrder(''AAPL'', -quantity, aapl + delta, DateTime.Now, '''', SecurityType.Equity) { Id = ++id })", span="173-173"];
m25_107 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: Assert.AreEqual(OrderType.StopMarket, orderFromIB.Type)", span="178-178"];
m25_106 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="177-177"];
m25_88 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="bool orderFilled = false", span="142-142"];
m25_105 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOne(1000)", span="175-175"];
m25_103 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="171-171"];
m25_100 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="orderFilled = false", span="165-165"];
m25_91 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.Connect()", span="145-145"];
m25_98 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.Reset()", span="162-162"];
m25_99 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.IsTrue(orderFilled)", span="163-163"];
m25_108 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="140-140"];
m25_59 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="101-101"];
m25_71 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: int quantity = 1", span="127-127"];
m25_60 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: bool orderFilled = false", span="103-103"];
m25_61 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: var manualResetEvent = new ManualResetEvent(false)", span="104-104"];
m25_62 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: var ib = new InteractiveBrokersBrokerage()", span="105-105"];
m25_66 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="0: ib.OrderEvent += (sender, args) =>\r\n            {\r\n                orderFilled = true;\r\n                aapl = args.FillPrice;\r\n                delta = 0.02m;\r\n                manualResetEvent.Set();\r\n            }", span="110-116"];
m25_69 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: manualResetEvent.WaitOne(2000)", span="122-122"];
m25_70 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="0: manualResetEvent.Reset()", span="123-123"];
m25_75 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: manualResetEvent.WaitOne(1000)", span="133-133"];
m25_63 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="0: ib.Connect()", span="106-106"];
m25_68 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: ib.PlaceOrder(new MarketOrder(''AAPL'', 1, DateTime.UtcNow, '''', SecurityType.Equity) { Id = ++id })", span="120-120"];
m25_73 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: ib.PlaceOrder(order)", span="129-129"];
m25_74 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: ib.PlaceOrder(new LimitOrder(''AAPL'', -quantity, aapl + delta, DateTime.Now, '''', SecurityType.Equity) { Id = ++id })", span="131-131"];
m25_76 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="1: var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="135-135"];
m25_65 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="0: decimal delta = 85.0m", span="109-109"];
m25_67 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="int id = 0", span="119-119"];
m25_64 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: decimal aapl = 100m", span="108-108"];
m25_72 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: var order = new LimitOrder(''AAPL'', +quantity, aapl - delta, DateTime.Now, '''', SecurityType.Equity) { Id = ++id }", span="128-128"];
m25_77 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: Assert.AreEqual(OrderType.Limit, orderFromIB.Type)", span="136-136"];
m25_78 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="101-101"];
m25_147 [cluster="Unk.Pass", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Pass", span=""];
m25_15 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage()", span="69-69"];
m25_80 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="64-64"];
m25_131 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="173-173"];
m25_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Stop()", span="99-99"];
m25_79 [cluster="System.Threading.EventWaitHandle.Reset()", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m25_132 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="190-194"];
m25_40 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: manualResetEvent.Set()", span="62-62"];
m25_39 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: orderFilled = true", span="61-61"];
m25_41 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="59-63"];
m25_38 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="59-63"];
m25_57 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: manualResetEvent.Set()", span="87-87"];
m25_56 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: orderFilled = true", span="86-86"];
m25_58 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="84-88"];
m25_55 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="84-88"];
m25_85 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.Set()", span="115-115"];
m25_83 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: aapl = args.FillPrice", span="113-113"];
m25_84 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: delta = 0.02m", span="114-114"];
m25_82 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="0: orderFilled = true", span="112-112"];
m25_81 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="110-116"];
m25_86 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="110-116"];
m25_113 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: aapl = args.FillPrice", span="152-152"];
m25_115 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: manualResetEvent.Set()", span="154-154"];
m25_114 [cluster="lambda expression", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: delta = 0.02m", span="153-153"];
m25_116 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="149-155"];
m25_111 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="149-155"];
m25_112 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="orderFilled = true", span="151-151"];
m25_149 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="order.BrokerId.Any(x => x == id)", span="217-217"];
m25_134 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.Set()", span="193-193"];
m25_133 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="status = args.Status", span="192-192"];
m25_148 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="217-217"];
m25_150 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="217-217"];
m25_151 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Entry lambda expression", span="217-217"];
m25_135 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="190-194"];
m25_152 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="x == id", span="217-217"];
m25_153 [cluster="lambda expression", file="InteractiveBrokersBrokerageTests.cs", label="Exit lambda expression", span="217-217"];
m25_17 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="50-50"];
m25_20 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="1: var ib = new InteractiveBrokersBrokerage()", span="54-54"];
m25_19 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="53-53"];
m25_21 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.Connect()", span="55-55"];
m25_22 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: ib.Client.RequestOpenOrders()", span="57-57"];
m25_23 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: ib.OrderEvent += (sender, args) =>\r\n            {\r\n                orderFilled = true;\r\n                manualResetEvent.Set();\r\n            }", span="59-63"];
m25_26 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="1: ib.PlaceOrder(order)", span="68-68"];
m25_28 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="71-71"];
m25_24 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: int buyQuantity = 1", span="65-65"];
m25_27 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: manualResetEvent.WaitOne(2500)", span="70-70"];
m25_25 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: var order = new MarketOrder(''AAPL'', buyQuantity, DateTime.Now, '''', SecurityType.Equity)", span="67-67"];
m25_29 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="72-72"];
m25_18 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="bool orderFilled = false", span="52-52"];
m25_30 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="50-50"];
m25_16 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="225-225"];
m25_31 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m25_109 [cluster="Unk.IsTrue", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.IsTrue", span=""];
m25_33 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="57-57"];
m25_11 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", span="43-43"];
m25_12 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="InteractiveBrokersBrokerageTests.cs", label="var ib = new InteractiveBrokersBrokerage()", span="45-45"];
m25_13 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="InteractiveBrokersBrokerageTests.cs", label="ib.Connect()", span="46-46"];
m25_14 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", span="43-43"];
m25_117 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="182-182"];
m25_120 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: var ib = new InteractiveBrokersBrokerage()", span="187-187"];
m25_119 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="185-185"];
m25_121 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.Connect()", span="188-188"];
m25_122 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.OrderEvent += (sender, args) =>\r\n            {\r\n                status = args.Status;\r\n                manualResetEvent.Set();\r\n            }", span="190-194"];
m25_124 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="ib.PlaceOrder(order)", span="198-198"];
m25_126 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: ib.CancelOrder(order)", span="201-201"];
m25_127 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: manualResetEvent.Reset()", span="203-203"];
m25_128 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOne(2500)", span="204-204"];
m25_125 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="manualResetEvent.WaitOne(2500)", span="199-199"];
m25_123 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="var order = new LimitOrder(''AAPL'', -1, 100000, DateTime.UtcNow, '''', SecurityType.Equity)", span="197-197"];
m25_129 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Assert.AreEqual(OrderStatus.Canceled, status)", span="206-206"];
m25_118 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="OrderStatus status = OrderStatus.New", span="184-184"];
m25_130 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="182-182"];
m25_110 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="63-63"];
m25_37 [cluster="Unk.AreEqual", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.AreEqual", span=""];
m25_43 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="76-76"];
m25_44 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: bool orderFilled = false", span="78-78"];
m25_45 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: var manualResetEvent = new ManualResetEvent(false)", span="79-79"];
m25_46 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: var ib = new InteractiveBrokersBrokerage()", span="81-81"];
m25_48 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: ib.OrderEvent += (sender, args) =>\r\n            {\r\n                orderFilled = true;\r\n                manualResetEvent.Set();\r\n            }", span="84-88"];
m25_51 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: manualResetEvent.WaitOne(2500)", span="94-94"];
m25_47 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: ib.Connect()", span="82-82"];
m25_50 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="1: ib.PlaceOrder(order)", span="92-92"];
m25_52 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="96-96"];
m25_49 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: var order = new MarketOrder(''AAPL'', -1, DateTime.UtcNow, '''', SecurityType.Equity)", span="91-91"];
m25_53 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="97-97"];
m25_54 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="76-76"];
m25_146 [cluster="Unk.Fail", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Fail", span=""];
m25_10 [cluster="System.Threading.Thread.Sleep(int)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m25_145 [cluster="Unk.Any", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.Any", span=""];
m25_32 [cluster="Unk.RequestOpenOrders", file="InteractiveBrokersBrokerageTests.cs", label="Entry Unk.RequestOpenOrders", span=""];
m25_36 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="209-209"];
m25_136 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="3: !orderFilled", span="212-212"];
m25_137 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="ib.GetOpenOrders()", span="215-215"];
m25_141 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Assert.Pass(''The order was successfully filled!'')", span="225-225"];
m25_139 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", color=green, community=0, file="InteractiveBrokersBrokerageTests.cs", label="2: return openOrder;", span="219-219"];
m25_138 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="openOrder.BrokerId.Any(id => order.BrokerId.Any(x => x == id))", span="217-217"];
m25_142 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="return null;", span="226-226"];
m25_140 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Assert.Fail(''The order was not filled and was unable to be located via GetOpenOrders()'')", span="222-222"];
m25_143 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="InteractiveBrokersBrokerageTests.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="209-209"];
m25_35 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m25_42 [cluster="System.Threading.EventWaitHandle.Set()", file="InteractiveBrokersBrokerageTests.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m25_144 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="InteractiveBrokersBrokerageTests.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="197-197"];
m25_154 [file="InteractiveBrokersBrokerageTests.cs", label=manualResetEvent, span=""];
m25_155 [file="InteractiveBrokersBrokerageTests.cs", label=manualResetEvent, span=""];
m25_157 [file="InteractiveBrokersBrokerageTests.cs", label=manualResetEvent, span=""];
m25_156 [file="InteractiveBrokersBrokerageTests.cs", label=manualResetEvent, span=""];
m25_159 [file="InteractiveBrokersBrokerageTests.cs", label="QuantConnect.Orders.Order", span=""];
m25_158 [file="InteractiveBrokersBrokerageTests.cs", label=manualResetEvent, span=""];
m25_160 [file="InteractiveBrokersBrokerageTests.cs", label=long, span=""];
m28_2 [cluster="QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", file="IQueueHandler.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", span="41-41"];
m28_3 [cluster="QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", file="IQueueHandler.cs", label="Exit QuantConnect.Interfaces.IQueueHandler.NextJob(out string)", span="41-41"];
m28_8 [cluster="QuantConnect.Interfaces.IQueueHandler.OpenDataQueue()", file="IQueueHandler.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.OpenDataQueue()", span="58-58"];
m28_9 [cluster="QuantConnect.Interfaces.IQueueHandler.OpenDataQueue()", file="IQueueHandler.cs", label="Exit QuantConnect.Interfaces.IQueueHandler.OpenDataQueue()", span="58-58"];
m28_4 [cluster="QuantConnect.Interfaces.IQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="IQueueHandler.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="47-47"];
m28_5 [cluster="QuantConnect.Interfaces.IQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="IQueueHandler.cs", label="Exit QuantConnect.Interfaces.IQueueHandler.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="47-47"];
m28_14 [cluster="QuantConnect.Interfaces.IQueueHandler.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="IQueueHandler.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="75-75"];
m28_15 [cluster="QuantConnect.Interfaces.IQueueHandler.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="IQueueHandler.cs", label="Exit QuantConnect.Interfaces.IQueueHandler.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="75-75"];
m28_0 [cluster="QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", file="IQueueHandler.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", span="35-35"];
m28_1 [cluster="QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", file="IQueueHandler.cs", label="Exit QuantConnect.Interfaces.IQueueHandler.Initialize(bool)", span="35-35"];
m28_6 [cluster="QuantConnect.Interfaces.IQueueHandler.GetNextTicks()", file="IQueueHandler.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.GetNextTicks()", span="53-53"];
m28_7 [cluster="QuantConnect.Interfaces.IQueueHandler.GetNextTicks()", file="IQueueHandler.cs", label="Exit QuantConnect.Interfaces.IQueueHandler.GetNextTicks()", span="53-53"];
m28_12 [cluster="QuantConnect.Interfaces.IQueueHandler.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="IQueueHandler.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="69-69"];
m28_13 [cluster="QuantConnect.Interfaces.IQueueHandler.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="IQueueHandler.cs", label="Exit QuantConnect.Interfaces.IQueueHandler.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="69-69"];
m28_10 [cluster="QuantConnect.Interfaces.IQueueHandler.CloseDataQueue()", file="IQueueHandler.cs", label="Entry QuantConnect.Interfaces.IQueueHandler.CloseDataQueue()", span="63-63"];
m28_11 [cluster="QuantConnect.Interfaces.IQueueHandler.CloseDataQueue()", file="IQueueHandler.cs", label="Exit QuantConnect.Interfaces.IQueueHandler.CloseDataQueue()", span="63-63"];
m31_83 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="159-159"];
m31_185 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="287-287"];
m31_186 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="int id = 0", span="289-289"];
m31_187 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="290-290"];
m31_191 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="var order = new LimitOrder(Symbol, -buyQuantity, limitPrice, DateTime.UtcNow, type: Type) {Id = ++id}", span="302-302"];
m31_188 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="bool filled = false", span="292-292"];
m31_189 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    filled = true;\r\n                }\r\n            }", span="293-299"];
m31_193 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="304-304"];
m31_198 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.UpdateOrder(order)", span="312-312"];
m31_190 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="decimal limitPrice = 10000m", span="301-301"];
m31_195 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="!filled && stopwatch.Elapsed.TotalSeconds < 10", span="307-307"];
m31_199 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="Assert.IsTrue(filled)", span="315-315"];
m31_192 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="303-303"];
m31_197 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="order.LimitPrice = order.LimitPrice/2", span="311-311"];
m31_194 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="var stopwatch = Stopwatch.StartNew()", span="306-306"];
m31_196 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="Thread.Sleep(1000)", span="310-310"];
m31_200 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientUpdatesLimitOrder()", span="287-287"];
m31_39 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetAccountHoldings()", span="267-267"];
m31_226 [cluster="Unk.IsNull", file="PaperTradingDataFeed.cs", label="Entry Unk.IsNull", span=""];
m31_40 [cluster="Unk.Where", file="PaperTradingDataFeed.cs", label="Entry Unk.Where", span=""];
m31_405 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderById(int)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderById(int)", span="588-588"];
m31_406 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderById(int)", file="PaperTradingDataFeed.cs", label="return _orders.FirstOrDefault(x => x.Id == orderId);", span="590-590"];
m31_407 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderById(int)", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderById(int)", span="588-588"];
m31_43 [cluster="Unk.Trace", file="PaperTradingDataFeed.cs", label="Entry Unk.Trace", span=""];
m31_153 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="242-242"];
m31_154 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="bool orderFilled = false", span="244-244"];
m31_155 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="245-245"];
m31_156 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="246-246"];
m31_159 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                orderFilled = true;\r\n                fillPrice = args.FillPrice;\r\n                delta = 0.02m;\r\n                manualResetEvent.Set();\r\n            }", span="250-256"];
m31_164 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="manualResetEvent.WaitOne(2000)", span="264-264"];
m31_165 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="manualResetEvent.Reset()", span="265-265"];
m31_174 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="manualResetEvent.WaitOne(1000)", span="280-280"];
m31_157 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="decimal fillPrice = 100m", span="248-248"];
m31_163 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="262-262"];
m31_170 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="274-274"];
m31_173 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="278-278"];
m31_175 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="282-282"];
m31_158 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="decimal delta = 85.0m", span="249-249"];
m31_160 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="int id = 0", span="259-259"];
m31_161 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="Order order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type) { Id = ++id }", span="260-260"];
m31_162 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="261-261"];
m31_168 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="order = new StopMarketOrder(Symbol, buyQuantity, fillPrice - delta, DateTime.UtcNow, type: Type) { Id = ++id }", span="272-272"];
m31_166 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="Assert.IsTrue(orderFilled)", span="266-266"];
m31_167 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="orderFilled = false", span="268-268"];
m31_169 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="273-273"];
m31_171 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="order = new StopMarketOrder(Symbol, -buyQuantity, fillPrice + delta, DateTime.UtcNow, type: Type) { Id = ++id }", span="276-276"];
m31_172 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="277-277"];
m31_176 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="Assert.AreEqual(OrderType.StopMarket, orderFromIB.Type)", span="283-283"];
m31_177 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesStopLimitOrder()", span="242-242"];
m31_122 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="197-197"];
m31_123 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="bool orderFilled = false", span="199-199"];
m31_124 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="200-200"];
m31_125 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="201-201"];
m31_128 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n                price = orderEvent.FillPrice;\r\n                delta = 0.02m;\r\n            }", span="205-214"];
m31_133 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="manualResetEvent.WaitOne(2000)", span="222-222"];
m31_134 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="manualResetEvent.Reset()", span="223-223"];
m31_141 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="manualResetEvent.WaitOne(1000)", span="235-235"];
m31_126 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="decimal price = 100m", span="203-203"];
m31_132 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="220-220"];
m31_137 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="229-229"];
m31_140 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="233-233"];
m31_142 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="237-237"];
m31_127 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="decimal delta = 85.0m", span="204-204"];
m31_129 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="int id = 0", span="217-217"];
m31_130 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="Order order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type) { Id = ++id }", span="218-218"];
m31_131 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="219-219"];
m31_135 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="order = new LimitOrder(Symbol, buyQuantity, price - delta, DateTime.UtcNow, null, Type) { Id = ++id }", span="227-227"];
m31_136 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="228-228"];
m31_138 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="order = new LimitOrder(Symbol, -buyQuantity, price + delta, DateTime.UtcNow, null, Type) { Id = ++id }", span="231-231"];
m31_139 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="232-232"];
m31_143 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="Assert.AreEqual(OrderType.Limit, orderFromIB.Type)", span="238-238"];
m31_144 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesLimitOrder()", span="197-197"];
m31_411 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderByBrokerageId(int)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderByBrokerageId(int)", span="593-593"];
m31_412 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderByBrokerageId(int)", file="PaperTradingDataFeed.cs", label="return _orders.FirstOrDefault(x => x.BrokerId.Contains(brokerageId));", span="595-595"];
m31_413 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderByBrokerageId(int)", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.GetOrderByBrokerageId(int)", span="593-593"];
m31_396 [cluster="Unk.Pass", file="PaperTradingDataFeed.cs", label="Entry Unk.Pass", span=""];
m31_356 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetExecutions(string, Krs.Ats.IBNet.SecurityType?, string, System.DateTime?, Krs.Ats.IBNet.ActionSide?)", span="285-285"];
m31_44 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Dispose()", span="400-400"];
m31_145 [cluster="QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Orders.LimitOrder.LimitOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="63-63"];
m31_36 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.CancelOrder(QuantConnect.Orders.Order)", span="201-201"];
m31_300 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="448-448"];
m31_301 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="450-450"];
m31_302 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="var orderEventFired = new ManualResetEvent(false)", span="452-452"];
m31_303 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="453-459"];
m31_306 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="ib.AccountChanged += (sender, args) =>\r\n            {\r\n                cashBalanceUpdates.Add(args.CashBalance);\r\n                accountChangedFired.Set();\r\n            }", span="463-467"];
m31_312 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="474-474"];
m31_313 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="orderEventFired.WaitOneAssertFail(1500, ''Didnt receive order event #'' + i)", span="476-476"];
m31_314 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="orderEventFired.Reset()", span="477-477"];
m31_304 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="var cashBalanceUpdates = new List<decimal>()", span="461-461"];
m31_305 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="var accountChangedFired = new ManualResetEvent(false)", span="462-462"];
m31_318 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="Assert.AreEqual(orderCount, cashBalanceUpdates.Count)", span="483-483"];
m31_315 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="accountChangedFired.WaitOneAssertFail(1500, ''Didnt receive account event #'' + i)", span="479-479"];
m31_316 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="accountChangedFired.Reset()", span="480-480"];
m31_307 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="int orderCount = 3", span="469-469"];
m31_308 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="int i = 0", span="470-470"];
m31_309 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="i < orderCount", span="470-470"];
m31_310 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="var order = new MarketOrder(Symbol, buyQuantity*(i + 1), new DateTime(), type: Type) {Id = i + 1}", span="472-472"];
m31_317 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="i++", span="470-470"];
m31_311 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="473-473"];
m31_319 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.FiresMultipleAccountBalanceEvents()", span="448-448"];
m31_38 [cluster="System.Threading.EventWaitHandle.Reset()", file="PaperTradingDataFeed.cs", label="Entry System.Threading.EventWaitHandle.Reset()", span="0-0"];
m31_414 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="595-595"];
m31_49 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="canceledResetEvent.Set()", span="72-72"];
m31_47 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="filledResetEvent.Set()", span="68-68"];
m31_46 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderEvent.Status == OrderStatus.Filled", span="66-66"];
m31_48 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderEvent.Status == OrderStatus.Canceled", span="70-70"];
m31_52 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="92-92"];
m31_55 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="100-100"];
m31_58 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="104-104"];
m31_61 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="104-104"];
m31_45 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="64-74"];
m31_50 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="64-74"];
m31_53 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="x.Quantity != 0", span="92-92"];
m31_54 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="92-92"];
m31_56 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="x.Symbol + '' '' + x.Quantity", span="100-100"];
m31_57 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="100-100"];
m31_59 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="x.Quantity != 0", span="104-104"];
m31_60 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="104-104"];
m31_62 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="x.Symbol + '' '' + x.Quantity", span="104-104"];
m31_63 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="104-104"];
m31_103 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="manualResetEvent.Set()", span="155-155"];
m31_101 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderEvent.Status == OrderStatus.Filled", span="152-152"];
m31_100 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="150-157"];
m31_102 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderFilled = true", span="154-154"];
m31_104 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="150-157"];
m31_120 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="manualResetEvent.Set()", span="181-181"];
m31_118 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderEvent.Status == OrderStatus.Filled", span="178-178"];
m31_117 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="176-183"];
m31_119 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderFilled = true", span="180-180"];
m31_121 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="176-183"];
m31_149 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="manualResetEvent.Set()", span="210-210"];
m31_147 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderEvent.Status == OrderStatus.Filled", span="207-207"];
m31_150 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="price = orderEvent.FillPrice", span="212-212"];
m31_146 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="205-214"];
m31_148 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderFilled = true", span="209-209"];
m31_152 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="205-214"];
m31_151 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="delta = 0.02m", span="213-213"];
m31_183 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="manualResetEvent.Set()", span="255-255"];
m31_181 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="fillPrice = args.FillPrice", span="253-253"];
m31_179 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="250-256"];
m31_180 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderFilled = true", span="252-252"];
m31_184 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="250-256"];
m31_182 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="delta = 0.02m", span="254-254"];
m31_205 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="args.Status == OrderStatus.Filled", span="295-295"];
m31_204 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="293-299"];
m31_206 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="filled = true", span="297-297"];
m31_207 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="293-299"];
m31_229 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderedResetEvent.Set()", span="330-330"];
m31_231 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="canceledResetEvent.Set()", span="334-334"];
m31_228 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderEvent.Status == OrderStatus.Submitted", span="328-328"];
m31_230 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderEvent.Status == OrderStatus.Canceled", span="332-332"];
m31_234 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="x.BrokerId.Contains(order.BrokerId[0])", span="351-351"];
m31_233 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="351-351"];
m31_227 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="326-336"];
m31_232 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="326-336"];
m31_235 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="351-351"];
m31_254 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="order.Status = fill.Status", span="374-374"];
m31_253 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderFilledResetEvent.Set()", span="370-370"];
m31_251 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="fill.Status == OrderStatus.Filled", span="367-367"];
m31_252 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderFilledEventCount++", span="369-369"];
m31_250 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="365-375"];
m31_255 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="365-375"];
m31_281 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="394-394"];
m31_286 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderResetEvent.Set()", span="404-404"];
m31_285 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="fill.Status == OrderStatus.Filled", span="404-404"];
m31_289 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="portfolioResetEvent.Set()", span="410-410"];
m31_291 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="425-425"];
m31_282 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="x.Symbol", span="394-394"];
m31_283 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="394-394"];
m31_284 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="402-405"];
m31_287 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="402-405"];
m31_288 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="408-411"];
m31_290 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="408-411"];
m31_292 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="x.Symbol", span="425-425"];
m31_293 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="425-425"];
m31_323 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderEventFired.Set()", span="457-457"];
m31_322 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="args.Status == OrderStatus.Filled", span="455-455"];
m31_326 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="cashBalanceUpdates.Add(args.CashBalance)", span="465-465"];
m31_327 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="accountChangedFired.Set()", span="466-466"];
m31_321 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="453-459"];
m31_324 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="453-459"];
m31_325 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="463-467"];
m31_328 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="463-467"];
m31_342 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="manualResetEvent.Set()", span="495-495"];
m31_341 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="495-495"];
m31_343 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="495-495"];
m31_360 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderEventFired.Set()", span="518-518"];
m31_359 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="args.Status == OrderStatus.Filled", span="516-516"];
m31_363 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="order.BrokerId.Any(id => executions.Any(e => e.OrderId == id))", span="529-529"];
m31_366 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="executions.Any(e => e.OrderId == id)", span="529-529"];
m31_362 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="529-529"];
m31_358 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="514-520"];
m31_361 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="514-520"];
m31_364 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="529-529"];
m31_365 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="529-529"];
m31_369 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="e.OrderId == id", span="529-529"];
m31_367 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="529-529"];
m31_368 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="529-529"];
m31_370 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="529-529"];
m31_385 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="orderEventFired.Set()", span="542-542"];
m31_384 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="args.Status == OrderStatus.Submitted", span="540-540"];
m31_383 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="538-544"];
m31_386 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="538-544"];
m31_398 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="order.BrokerId.Any(x => x == id)", span="567-567"];
m31_397 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="567-567"];
m31_401 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="x == id", span="567-567"];
m31_399 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="567-567"];
m31_400 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="567-567"];
m31_402 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="567-567"];
m31_409 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="x.Id == orderId", span="590-590"];
m31_408 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Entry lambda expression", span="590-590"];
m31_410 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="590-590"];
m31_415 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="x.BrokerId.Contains(brokerageId)", span="595-595"];
m31_416 [cluster="lambda expression", file="PaperTradingDataFeed.cs", label="Exit lambda expression", span="595-595"];
m31_203 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="180-180"];
m31_84 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="PaperTradingDataFeed.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m31_237 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="356-356"];
m31_238 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="358-358"];
m31_239 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="var order = new MarketOrder(Symbol, buyQuantity, new DateTime(), type: Type) {Id = 1}", span="360-360"];
m31_243 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilledEventCount++;\r\n                    orderFilledResetEvent.Set();\r\n                }\r\n\r\n                // mimic what the transaction handler would do\r\n                order.Status = fill.Status;\r\n            }", span="365-375"];
m31_244 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="377-377"];
m31_240 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="361-361"];
m31_241 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="int orderFilledEventCount = 0", span="363-363"];
m31_242 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="var orderFilledResetEvent = new ManualResetEvent(false)", span="364-364"];
m31_245 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="orderFilledResetEvent.WaitOneAssertFail(2500, ''Didnt fire order filled event'')", span="379-379"];
m31_247 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="Assert.AreEqual(1, orderFilledEventCount)", span="384-384"];
m31_246 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="Thread.Sleep(2000)", span="382-382"];
m31_248 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientFiresSingleOrderFilledEvent()", span="356-356"];
m31_329 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="487-487"];
m31_330 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="489-489"];
m31_331 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="decimal balance = ib.GetCashBalance()", span="491-491"];
m31_333 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="ib.AccountChanged += (sender, orderEvent) => manualResetEvent.Set()", span="495-495"];
m31_336 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="499-499"];
m31_338 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="decimal balanceAfterTrade = ib.GetCashBalance()", span="503-503"];
m31_332 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="494-494"];
m31_339 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="Assert.AreNotEqual(balance, balanceAfterTrade)", span="505-505"];
m31_337 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="manualResetEvent.WaitOneAssertFail(1500, ''Didn't receive account changed event'')", span="501-501"];
m31_334 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="var order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type)", span="497-497"];
m31_335 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="498-498"];
m31_340 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterTrade()", span="487-487"];
m31_9 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.Connect()", span="339-339"];
m31_86 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="144-144"];
m31_87 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="bool orderFilled = false", span="146-146"];
m31_88 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="147-147"];
m31_89 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="148-148"];
m31_90 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="150-157"];
m31_94 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="manualResetEvent.WaitOne(2500)", span="163-163"];
m31_93 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="161-161"];
m31_95 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="164-164"];
m31_91 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="var order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type) {Id = 1}", span="159-159"];
m31_92 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="160-160"];
m31_96 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="165-165"];
m31_97 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientPlacesMarketOrder()", span="144-144"];
m31_34 [cluster="System.Threading.ManualResetEvent.ManualResetEvent(bool)", file="PaperTradingDataFeed.cs", label="Entry System.Threading.ManualResetEvent.ManualResetEvent(bool)", span="0-0"];
m31_280 [cluster="Unk.ContainsKey", file="PaperTradingDataFeed.cs", label="Entry Unk.ContainsKey", span=""];
m31_68 [cluster="Unk.IsTrue", file="PaperTradingDataFeed.cs", label="Entry Unk.IsTrue", span=""];
m31_81 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(string, int, System.DateTime, string, QuantConnect.SecurityType)", span="57-57"];
m31_64 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", span="118-118"];
m31_65 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="120-120"];
m31_66 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="PaperTradingDataFeed.cs", label="Assert.IsTrue(ib.IsConnected)", span="121-121"];
m31_67 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientConnects()", span="118-118"];
m31_344 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="509-509"];
m31_345 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="511-511"];
m31_346 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="var orderEventFired = new ManualResetEvent(false)", span="513-513"];
m31_347 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Filled)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="514-520"];
m31_350 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="524-524"];
m31_352 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="var executions = ib.GetExecutions(null, null, null, DateTime.UtcNow.AddDays(-1), null)", span="527-527"];
m31_351 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="orderEventFired.WaitOne(1500)", span="525-525"];
m31_348 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="var order = new MarketOrder(Symbol, -buyQuantity, new DateTime(), type: Type)", span="522-522"];
m31_349 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="523-523"];
m31_353 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="Assert.IsTrue(executions.Any(x => order.BrokerId.Any(id => executions.Any(e => e.OrderId == id))))", span="529-529"];
m31_354 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetExecutions()", span="509-509"];
m31_6 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersGatewayRunner.Start(string)", span="44-44"];
m31_249 [cluster="System.DateTime.DateTime()", file="PaperTradingDataFeed.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m31_178 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder(string, int, decimal, System.DateTime, string, QuantConnect.SecurityType)", span="63-63"];
m31_208 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="319-319"];
m31_209 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="var orderedResetEvent = new ManualResetEvent(false)", span="321-321"];
m31_210 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="var canceledResetEvent = new ManualResetEvent(false)", span="322-322"];
m31_212 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderedResetEvent.Set();\r\n                }\r\n                if (orderEvent.Status == OrderStatus.Canceled)\r\n                {\r\n                    canceledResetEvent.Set();\r\n                }\r\n            }", span="326-336"];
m31_216 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="orderedResetEvent.WaitOneAssertFail(2500, ''Limit order failed to be submitted.'')", span="342-342"];
m31_211 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="324-324"];
m31_219 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="canceledResetEvent.WaitOneAssertFail(2500, ''Canceled event did not fire.'')", span="348-348"];
m31_215 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="341-341"];
m31_218 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="ib.CancelOrder(order)", span="346-346"];
m31_220 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="var openOrders = ib.GetOpenOrders()", span="350-350"];
m31_213 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="var order = new LimitOrder(Symbol, -buyQuantity, 100000, DateTime.UtcNow, null, Type)", span="339-339"];
m31_214 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="340-340"];
m31_221 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="var cancelledOrder = openOrders.FirstOrDefault(x => x.BrokerId.Contains(order.BrokerId[0]))", span="351-351"];
m31_217 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="Thread.Sleep(500)", span="344-344"];
m31_222 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="Assert.IsNull(cancelledOrder)", span="352-352"];
m31_223 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientCancelsLimitOrder()", span="319-319"];
m31_256 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="388-388"];
m31_257 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="390-390"];
m31_258 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="Thread.Sleep(500)", span="392-392"];
m31_259 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="var previousHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="394-394"];
m31_263 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, fill) =>\r\n            {\r\n                if (fill.Status == OrderStatus.Filled) orderResetEvent.Set();\r\n            }", span="402-405"];
m31_265 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="ib.SecurityHoldingUpdated += (sender, update) =>\r\n            {\r\n                portfolioResetEvent.Set();\r\n            }", span="408-411"];
m31_269 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="417-417"];
m31_272 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="var newHoldings = ib.GetAccountHoldings().ToDictionary(x => x.Symbol)", span="425-425"];
m31_260 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="Log.Trace(''Quantity: '' + previousHoldings[Symbol].Quantity)", span="396-396"];
m31_261 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="bool hasSymbol = previousHoldings.ContainsKey(Symbol)", span="398-398"];
m31_275 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="Assert.AreEqual(previousHoldings[Symbol].Quantity, newHoldings[Symbol].Quantity - quantity)", span="430-430"];
m31_262 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="var orderResetEvent = new ManualResetEvent(false)", span="401-401"];
m31_274 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label=hasSymbol, span="428-428"];
m31_270 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="orderResetEvent.WaitOneAssertFail(2500, ''Didn't receive order event'')", span="420-420"];
m31_264 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="var portfolioResetEvent = new ManualResetEvent(false)", span="407-407"];
m31_271 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="portfolioResetEvent.WaitOneAssertFail(1500, ''Didn't receive portfolio update event'')", span="423-423"];
m31_266 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="int quantity = -buyQuantity", span="414-414"];
m31_267 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="var order = new MarketOrder(Symbol, quantity, DateTime.UtcNow, type: Type)", span="415-415"];
m31_277 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="Assert.AreEqual(newHoldings[Symbol].Quantity, quantity)", span="435-435"];
m31_268 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="416-416"];
m31_273 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="Log.Trace(''New Quantity: '' + newHoldings[Symbol].Quantity)", span="426-426"];
m31_276 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="Assert.IsTrue(newHoldings.ContainsKey(Symbol))", span="434-434"];
m31_278 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsAccountHoldings()", span="388-388"];
m31_294 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="440-440"];
m31_295 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="442-442"];
m31_296 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="PaperTradingDataFeed.cs", label="var cashBalance = ib.GetCashBalance()", span="443-443"];
m31_297 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="PaperTradingDataFeed.cs", label="Assert.AreNotEqual(0m, cashBalance)", span="444-444"];
m31_298 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetsCashBalanceAfterConnect()", span="440-440"];
m31_355 [cluster="System.DateTime.AddDays(double)", file="PaperTradingDataFeed.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m31_371 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="533-533"];
m31_372 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="535-535"];
m31_373 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="var orderEventFired = new ManualResetEvent(false)", span="537-537"];
m31_374 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, args) =>\r\n            {\r\n                if (args.Status == OrderStatus.Submitted)\r\n                {\r\n                    orderEventFired.Set();\r\n                }\r\n            }", span="538-544"];
m31_377 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="548-548"];
m31_380 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="var openOrders = ib.GetOpenOrders()", span="554-554"];
m31_378 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="orderEventFired.WaitOne(1500)", span="550-550"];
m31_375 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="var order = new LimitOrder(Symbol, buyQuantity, 0.01m, DateTime.UtcNow, type: Type)", span="546-546"];
m31_376 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="547-547"];
m31_379 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="Thread.Sleep(250)", span="552-552"];
m31_381 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="Assert.AreNotEqual(0, openOrders.Count)", span="556-556"];
m31_382 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.GetOpenOrders()", span="533-533"];
m31_0 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", span="44-44"];
m31_1 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", color=green, community=0, file="PaperTradingDataFeed.cs", label="2: InteractiveBrokersGatewayRunner.Start(Config.Get(''ib-account''))", span="46-46"];
m31_2 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="PaperTradingDataFeed.cs", label="_interactiveBrokersBrokerage = new InteractiveBrokersBrokerage(new OrderMapping(_orders))", span="49-49"];
m31_3 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", color=red, community=0, file="PaperTradingDataFeed.cs", label="2: _interactiveBrokersBrokerage.Connect()", span="50-50"];
m31_4 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.InitializeBrokerage()", span="44-44"];
m31_99 [cluster="Unk.AreEqual", file="PaperTradingDataFeed.cs", label="Entry Unk.AreEqual", span=""];
m31_105 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="169-169"];
m31_106 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="bool orderFilled = false", span="171-171"];
m31_107 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="var manualResetEvent = new ManualResetEvent(false)", span="172-172"];
m31_108 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="174-174"];
m31_109 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="ib.OrderStatusChanged += (sender, orderEvent) =>\r\n            {\r\n                if (orderEvent.Status == OrderStatus.Filled)\r\n                {\r\n                    orderFilled = true;\r\n                    manualResetEvent.Set();\r\n                }\r\n            }", span="176-183"];
m31_113 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="manualResetEvent.WaitOne(2500)", span="190-190"];
m31_112 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="188-188"];
m31_114 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="var orderFromIB = AssertOrderOpened(orderFilled, ib, order)", span="192-192"];
m31_110 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="var order = new MarketOrder(Symbol, -buyQuantity, DateTime.UtcNow, type: Type)", span="186-186"];
m31_111 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="187-187"];
m31_115 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="Assert.AreEqual(OrderType.Market, orderFromIB.Type)", span="193-193"];
m31_116 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.ClientSellsMarketOrder()", span="169-169"];
m31_225 [cluster="Unk.FirstOrDefault", file="PaperTradingDataFeed.cs", label="Entry Unk.FirstOrDefault", span=""];
m31_236 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="PaperTradingDataFeed.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m31_395 [cluster="Unk.Fail", file="PaperTradingDataFeed.cs", label="Entry Unk.Fail", span=""];
m31_202 [cluster="System.Threading.Thread.Sleep(int)", file="PaperTradingDataFeed.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m31_357 [cluster="Unk.Any", file="PaperTradingDataFeed.cs", label="Entry Unk.Any", span=""];
m31_201 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="PaperTradingDataFeed.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m31_42 [cluster="Unk.Join", file="PaperTradingDataFeed.cs", label="Entry Unk.Join", span=""];
m31_224 [cluster="System.Threading.WaitHandle.WaitOneAssertFail(int, string)", file="PaperTradingDataFeed.cs", label="Entry System.Threading.WaitHandle.WaitOneAssertFail(int, string)", span="32-32"];
m31_10 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", span="54-54"];
m31_11 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="Log.Trace(''-----'')", span="58-58"];
m31_12 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Starting teardown...'')", span="59-59"];
m31_13 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="Log.Trace(''-----'')", span="60-60"];
m31_14 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="var canceledResetEvent = new ManualResetEvent(false)", span="62-62"];
m31_15 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="var filledResetEvent = new ManualResetEvent(false)", span="63-63"];
m31_16 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="_interactiveBrokersBrokerage.OrderStatusChanged += (sender, orderEvent) =>\r\n                {\r\n                    if (orderEvent.Status == OrderStatus.Filled)\r\n                    {\r\n                        filledResetEvent.Set();\r\n                    }\r\n                    if (orderEvent.Status == OrderStatus.Canceled)\r\n                    {\r\n                        canceledResetEvent.Set();\r\n                    }\r\n                }", span="64-74"];
m31_21 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="canceledResetEvent.WaitOne(3000)", span="84-84"];
m31_22 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="canceledResetEvent.Reset()", span="85-85"];
m31_17 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Canceling open orders...'')", span="78-78"];
m31_18 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="var orders = _interactiveBrokersBrokerage.GetOpenOrders()", span="80-80"];
m31_19 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label=orders, span="81-81"];
m31_20 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="_interactiveBrokersBrokerage.CancelOrder(order)", span="83-83"];
m31_23 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Liquidating open positions...'')", span="88-88"];
m31_24 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="var holdings = _interactiveBrokersBrokerage.GetAccountHoldings()", span="91-91"];
m31_25 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="holdings.Where(x => x.Quantity != 0)", span="92-92"];
m31_26 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="var openOrdersText = _interactiveBrokersBrokerage.GetOpenOrders().Select(x => x.Symbol + '' '' + x.Quantity)", span="100-100"];
m31_27 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Open orders: '' + string.Join('', '', openOrdersText))", span="101-101"];
m31_28 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="var holdingsText = _interactiveBrokersBrokerage.GetAccountHoldings().Where(x => x.Quantity != 0).Select(x => x.Symbol + '' '' + x.Quantity)", span="104-104"];
m31_29 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="Log.Trace(''InteractiveBrokersBrokerageTests.Teardown(): Account holdings: '' + string.Join('', '', holdingsText))", span="105-105"];
m31_30 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="_interactiveBrokersBrokerage.Dispose()", span="108-108"];
m31_31 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="_interactiveBrokersBrokerage = null", span="109-109"];
m31_32 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.Teardown()", span="54-54"];
m31_82 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PaperTradingDataFeed.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m31_7 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.InteractiveBrokersBrokerage(QuantConnect.Securities.IOrderIDMapping)", span="77-77"];
m31_85 [cluster="Unk.AreNotEqual", file="PaperTradingDataFeed.cs", label="Entry Unk.AreNotEqual", span=""];
m31_299 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetCashBalance()", span="276-276"];
m31_8 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.OrderMapping(System.Collections.Generic.IReadOnlyList<QuantConnect.Orders.Order>)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.OrderMapping(System.Collections.Generic.IReadOnlyList<QuantConnect.Orders.Order>)", span="583-583"];
m31_403 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.OrderMapping(System.Collections.Generic.IReadOnlyList<QuantConnect.Orders.Order>)", file="PaperTradingDataFeed.cs", label="_orders = orders", span="585-585"];
m31_404 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.OrderMapping(System.Collections.Generic.IReadOnlyList<QuantConnect.Orders.Order>)", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping.OrderMapping(System.Collections.Generic.IReadOnlyList<QuantConnect.Orders.Order>)", span="583-583"];
m31_33 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="100-100"];
m31_98 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="559-559"];
m31_387 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="!orderFilled", span="562-562"];
m31_388 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="ib.GetOpenOrders()", span="565-565"];
m31_389 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="openOrder.BrokerId.Any(id => order.BrokerId.Any(x => x == id))", span="567-567"];
m31_392 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="Assert.Pass(''The order was successfully filled!'')", span="575-575"];
m31_391 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="Assert.Fail(''The order was not filled and was unable to be located via GetOpenOrders()'')", span="572-572"];
m31_390 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="return openOrder;", span="569-569"];
m31_393 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="return null;", span="576-576"];
m31_394 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.AssertOrderOpened(bool, QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage, QuantConnect.Orders.Order)", span="559-559"];
m31_279 [cluster="Unk.ToDictionary", file="PaperTradingDataFeed.cs", label="Entry Unk.ToDictionary", span=""];
m31_37 [cluster="System.Threading.WaitHandle.WaitOne(int)", file="PaperTradingDataFeed.cs", label="Entry System.Threading.WaitHandle.WaitOne(int)", span="0-0"];
m31_41 [cluster="Unk.Select", file="PaperTradingDataFeed.cs", label="Entry Unk.Select", span=""];
m31_51 [cluster="System.Threading.EventWaitHandle.Set()", file="PaperTradingDataFeed.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m31_5 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="87-87"];
m31_35 [cluster="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage.GetOpenOrders()", span="227-227"];
m31_69 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="Entry QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", span="125-125"];
m31_70 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="var ib = _interactiveBrokersBrokerage", span="127-127"];
m31_71 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="var order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type)", span="129-129"];
m31_73 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="131-131"];
m31_78 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="ib.PlaceOrder(order)", span="138-138"];
m31_72 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="130-130"];
m31_74 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="var brokerageID = order.BrokerId.Single()", span="133-133"];
m31_75 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="Assert.AreNotEqual(0, brokerageID)", span="134-134"];
m31_79 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="Assert.AreNotEqual(brokerageID, order.BrokerId.Single())", span="140-140"];
m31_76 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="order = new MarketOrder(Symbol, buyQuantity, DateTime.UtcNow, type: Type)", span="136-136"];
m31_77 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="_orders.Add(order)", span="137-137"];
m31_80 [cluster="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", file="PaperTradingDataFeed.cs", label="Exit QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.PlacedOrderHasNewBrokerageOrderID()", span="125-125"];
m31_417 [file="PaperTradingDataFeed.cs", label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", span=""];
m31_418 [file="PaperTradingDataFeed.cs", label=filledResetEvent, span=""];
m31_419 [file="PaperTradingDataFeed.cs", label=canceledResetEvent, span=""];
m31_420 [file="PaperTradingDataFeed.cs", label=manualResetEvent, span=""];
m31_421 [file="PaperTradingDataFeed.cs", label=manualResetEvent, span=""];
m31_422 [file="PaperTradingDataFeed.cs", label=manualResetEvent, span=""];
m31_423 [file="PaperTradingDataFeed.cs", label=manualResetEvent, span=""];
m31_424 [file="PaperTradingDataFeed.cs", label=orderedResetEvent, span=""];
m31_425 [file="PaperTradingDataFeed.cs", label=canceledResetEvent, span=""];
m31_426 [file="PaperTradingDataFeed.cs", label=order, span=""];
m31_427 [file="PaperTradingDataFeed.cs", label=orderFilledEventCount, span=""];
m31_428 [file="PaperTradingDataFeed.cs", label=orderFilledResetEvent, span=""];
m31_429 [file="PaperTradingDataFeed.cs", label=order, span=""];
m31_430 [file="PaperTradingDataFeed.cs", label=orderResetEvent, span=""];
m31_431 [file="PaperTradingDataFeed.cs", label=portfolioResetEvent, span=""];
m31_432 [file="PaperTradingDataFeed.cs", label=orderEventFired, span=""];
m31_433 [file="PaperTradingDataFeed.cs", label=cashBalanceUpdates, span=""];
m31_434 [file="PaperTradingDataFeed.cs", label=accountChangedFired, span=""];
m31_435 [file="PaperTradingDataFeed.cs", label=manualResetEvent, span=""];
m31_436 [file="PaperTradingDataFeed.cs", label=orderEventFired, span=""];
m31_437 [file="PaperTradingDataFeed.cs", label=order, span=""];
m31_438 [file="PaperTradingDataFeed.cs", label=executions, span=""];
m31_439 [file="PaperTradingDataFeed.cs", label=long, span=""];
m31_440 [file="PaperTradingDataFeed.cs", label=orderEventFired, span=""];
m31_441 [file="PaperTradingDataFeed.cs", label="QuantConnect.Orders.Order", span=""];
m31_442 [file="PaperTradingDataFeed.cs", label=long, span=""];
m31_443 [file="PaperTradingDataFeed.cs", label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping", span=""];
m31_444 [file="PaperTradingDataFeed.cs", label=int, span=""];
m31_445 [file="PaperTradingDataFeed.cs", label=int, span=""];
m32_37 [cluster="QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.Util.Composer.GetExportedValueByTypeName<T>(string)", span="101-101"];
m32_169 [cluster="QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", span="627-627"];
m32_170 [cluster="QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="return _properties == other._properties \r\n                && _symbol == other._symbol \r\n                && _underlying == other._underlying;", span="629-631"];
m32_171 [cluster="QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.Equals(QuantConnect.SecurityIdentifier)", span="627-627"];
m32_96 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", span="461-461"];
m32_97 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="PaperTradingSetupHandler.cs", label="var stack = new Stack<char>()", span="463-463"];
m32_98 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="PaperTradingSetupHandler.cs", label="data != 0", span="464-464"];
m32_99 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="PaperTradingSetupHandler.cs", label="var value = data % 36", span="466-466"];
m32_102 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="PaperTradingSetupHandler.cs", label="data /= 36", span="472-472"];
m32_101 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="PaperTradingSetupHandler.cs", label="stack.Push(c)", span="471-471"];
m32_103 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="PaperTradingSetupHandler.cs", label="return new string(stack.ToArray());", span="474-474"];
m32_100 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="PaperTradingSetupHandler.cs", label="var c = value < 10\r\n                    ? (char)(value + '0')\r\n                    : (char)(value - 10 + 'A')", span="467-469"];
m32_104 [cluster="QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.EncodeBase36(ulong)", span="461-461"];
m32_125 [cluster="Unk.Pow", file="PaperTradingSetupHandler.cs", label="Entry Unk.Pow", span=""];
m32_163 [cluster="string.Split(params char[])", file="PaperTradingSetupHandler.cs", label="Entry string.Split(params char[])", span="0-0"];
m32_190 [cluster="QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="671-671"];
m32_191 [cluster="QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="return !Equals(left, right);", span="673-673"];
m32_192 [cluster="QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.operator !=(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="671-671"];
m32_179 [cluster="object.ReferenceEquals(object, object)", file="PaperTradingSetupHandler.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m32_52 [cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateForex(string, string)", span="374-374"];
m32_53 [cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="PaperTradingSetupHandler.cs", label="return Generate(DefaultDate, symbol, SecurityType.Forex, market);", span="376-376"];
m32_54 [cluster="QuantConnect.SecurityIdentifier.GenerateForex(string, string)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateForex(string, string)", span="374-374"];
m32_162 [cluster="string.IsNullOrWhiteSpace(string)", file="PaperTradingSetupHandler.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m32_44 [cluster="lambda expression", file="PaperTradingSetupHandler.cs", label="Entry lambda expression", span="340-340"];
m32_45 [cluster="lambda expression", file="PaperTradingSetupHandler.cs", label="x.Date", span="340-340"];
m32_46 [cluster="lambda expression", file="PaperTradingSetupHandler.cs", label="Exit lambda expression", span="340-340"];
m32_105 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="PaperTradingSetupHandler.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m32_186 [cluster="QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="663-663"];
m32_187 [cluster="QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="return Equals(left, right);", span="665-665"];
m32_188 [cluster="QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.operator ==(QuantConnect.SecurityIdentifier, QuantConnect.SecurityIdentifier)", span="663-663"];
m32_193 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.ToString()", span="683-683"];
m32_194 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="PaperTradingSetupHandler.cs", label="var props = EncodeBase36(_properties)", span="685-685"];
m32_195 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="PaperTradingSetupHandler.cs", label=HasUnderlying, span="686-686"];
m32_196 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="PaperTradingSetupHandler.cs", label="return _symbol + ' ' + props + '|' + _underlying.SecurityIdentifier;", span="688-688"];
m32_197 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="PaperTradingSetupHandler.cs", label="return _symbol + ' ' + props;", span="690-690"];
m32_198 [cluster="QuantConnect.SecurityIdentifier.ToString()", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.ToString()", span="683-683"];
m32_185 [cluster="ulong.GetHashCode()", file="PaperTradingSetupHandler.cs", label="Entry ulong.GetHashCode()", span="0-0"];
m32_107 [cluster="string.String(char[])", file="PaperTradingSetupHandler.cs", label="Entry string.String(char[])", span="0-0"];
m32_39 [cluster="QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.Data.Auxiliary.MapFileResolver.ResolveMapFile(string, System.DateTime)", span="124-124"];
m32_80 [cluster="QuantConnect.Market.Encode(string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.Market.Encode(string)", span="117-117"];
m32_83 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", span="481-481"];
m32_109 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="var str = strike", span="483-483"];
m32_110 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="strike == 0", span="485-485"];
m32_113 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="strike *= StrikeDefaultScaleExpanded", span="492-492"];
m32_119 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="throw new ArgumentException(''The specified strike price's precision is too high: '' + str);", span="503-503"];
m32_111 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="scale = 0", span="487-487"];
m32_112 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="return 0;", span="488-488"];
m32_114 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="scale = 0", span="494-494"];
m32_115 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="strike % 10 == 0", span="495-495"];
m32_116 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="strike /= 10", span="497-497"];
m32_118 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="strike >= 1000000", span="501-501"];
m32_120 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="return (ulong)strike;", span="506-506"];
m32_117 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="scale++", span="498-498"];
m32_121 [cluster="QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.NormalizeStrike(decimal, out ulong)", span="481-481"];
m32_201 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", span="706-706"];
m32_202 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="ReferenceEquals(null, other)", span="708-708"];
m32_204 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="ReferenceEquals(this, other)", span="709-709"];
m32_206 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="return SecurityIdentifier.Equals(other.SecurityIdentifier);", span="710-710"];
m32_203 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="return false;", span="708-708"];
m32_205 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="return true;", span="709-709"];
m32_207 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.Equals(QuantConnect.SecurityIdentifier.SidBox)", span="706-706"];
m32_208 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.Equals(object)", span="712-712"];
m32_209 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="PaperTradingSetupHandler.cs", label="ReferenceEquals(null, obj)", span="714-714"];
m32_211 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="PaperTradingSetupHandler.cs", label="ReferenceEquals(this, obj)", span="715-715"];
m32_213 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="PaperTradingSetupHandler.cs", label="return obj is SidBox && Equals((SidBox)obj);", span="716-716"];
m32_210 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="PaperTradingSetupHandler.cs", label="return false;", span="714-714"];
m32_212 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="PaperTradingSetupHandler.cs", label="return true;", span="715-715"];
m32_214 [cluster="QuantConnect.SecurityIdentifier.SidBox.Equals(object)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.Equals(object)", span="712-712"];
m32_215 [cluster="QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", span="718-718"];
m32_216 [cluster="QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", file="PaperTradingSetupHandler.cs", label="return SecurityIdentifier.GetHashCode();", span="720-720"];
m32_217 [cluster="QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.GetHashCode()", span="718-718"];
m32_218 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="722-722"];
m32_219 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="return Equals(left, right);", span="724-724"];
m32_220 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.operator ==(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="722-722"];
m32_221 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="726-726"];
m32_222 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="return !Equals(left, right);", span="728-728"];
m32_223 [cluster="QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.operator !=(QuantConnect.SecurityIdentifier.SidBox, QuantConnect.SecurityIdentifier.SidBox)", span="726-726"];
m32_165 [cluster="System.FormatException.FormatException(string)", file="PaperTradingSetupHandler.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m32_0 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", span="250-250"];
m32_1 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="PaperTradingSetupHandler.cs", label="symbol == null", span="252-252"];
m32_3 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="PaperTradingSetupHandler.cs", label="symbol.IndexOfAny(InvalidCharacters) != -1", span="256-256"];
m32_5 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="PaperTradingSetupHandler.cs", label="_symbol = symbol", span="260-260"];
m32_6 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="PaperTradingSetupHandler.cs", label="_properties = properties", span="261-261"];
m32_2 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="PaperTradingSetupHandler.cs", label="throw new ArgumentNullException(''symbol'', ''SecurityIdentifier requires a non-null string 'symbol''');", span="254-254"];
m32_4 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="PaperTradingSetupHandler.cs", label="throw new ArgumentException(''symbol must not contain the characters '|' or ' '.'', ''symbol'');", span="258-258"];
m32_7 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="PaperTradingSetupHandler.cs", label="_underlying = null", span="262-262"];
m32_8 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong)", span="250-250"];
m32_12 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", span="272-272"];
m32_13 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="symbol == null", span="275-275"];
m32_15 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="_symbol = symbol", span="279-279"];
m32_16 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="_properties = properties", span="280-280"];
m32_17 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="underlying != Empty", span="281-281"];
m32_18 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="_underlying = new SidBox(underlying)", span="283-283"];
m32_14 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="throw new ArgumentNullException(''symbol'', ''SecurityIdentifier requires a non-null string 'symbol''');", span="277-277"];
m32_19 [cluster="QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.SecurityIdentifier(string, ulong, QuantConnect.SecurityIdentifier)", span="272-272"];
m32_21 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="301-301"];
m32_22 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="PaperTradingSetupHandler.cs", label="return Generate(expiry, underlying.Symbol, SecurityType.Option, market, strike, optionRight, optionStyle, underlying);", span="308-308"];
m32_23 [cluster="QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateOption(System.DateTime, QuantConnect.SecurityIdentifier, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle)", span="301-301"];
m32_78 [cluster="string.ToLower()", file="PaperTradingSetupHandler.cs", label="Entry string.ToLower()", span="0-0"];
m32_166 [cluster="QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", span="611-611"];
m32_167 [cluster="QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", file="PaperTradingSetupHandler.cs", label="return (_properties/offset)%width;", span="613-613"];
m32_168 [cluster="QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.ExtractFromProperties(ulong, ulong)", span="611-611"];
m32_122 [cluster="System.ArgumentException.ArgumentException(string)", file="PaperTradingSetupHandler.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m32_133 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", span="563-563"];
m32_138 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="PaperTradingSetupHandler.cs", label="!TryParseProperties(value, out exception, out identifier)", span="565-565"];
m32_139 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="PaperTradingSetupHandler.cs", label="return false;", span="567-567"];
m32_140 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="PaperTradingSetupHandler.cs", label="return true;", span="570-570"];
m32_141 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier, out System.Exception)", span="563-563"];
m32_172 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.Equals(object)", span="641-641"];
m32_173 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="PaperTradingSetupHandler.cs", label="ReferenceEquals(null, obj)", span="643-643"];
m32_175 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="PaperTradingSetupHandler.cs", label="obj.GetType() != GetType()", span="644-644"];
m32_177 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="PaperTradingSetupHandler.cs", label="return Equals((SecurityIdentifier)obj);", span="645-645"];
m32_174 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="PaperTradingSetupHandler.cs", label="return false;", span="643-643"];
m32_176 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="PaperTradingSetupHandler.cs", label="return false;", span="644-644"];
m32_178 [cluster="QuantConnect.SecurityIdentifier.Equals(object)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.Equals(object)", span="641-641"];
m32_189 [cluster="object.Equals(object, object)", file="PaperTradingSetupHandler.cs", label="Entry object.Equals(object, object)", span="0-0"];
m32_79 [cluster="string.ToUpper()", file="PaperTradingSetupHandler.cs", label="Entry string.ToUpper()", span="0-0"];
m32_24 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", span="394-394"];
m32_58 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="(ulong)securityType >= SecurityTypeWidth || securityType < 0", span="403-403"];
m32_60 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="(int)optionRight > 1 || optionRight < 0", span="407-407"];
m32_62 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="market = market.ToLower()", span="413-413"];
m32_63 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="symbol = symbol.ToUpper()", span="414-414"];
m32_67 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="var days = (ulong)date.ToOADate() * DaysOffset", span="423-423"];
m32_70 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="var strk = NormalizeStrike(strike, out strikeScale) * StrikeOffset", span="427-427"];
m32_72 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="var style = (ulong)optionStyle * OptionStyleOffset", span="429-429"];
m32_73 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="var putcall = (ulong)optionRight * PutCallOffset", span="430-430"];
m32_74 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="var otherData = putcall + days + style + strk + strikeScale + marketCode + (ulong)securityType", span="432-432"];
m32_75 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="return new SecurityIdentifier(symbol, otherData, underlying ?? Empty);", span="434-434"];
m32_59 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="throw new ArgumentOutOfRangeException(''securityType'', ''securityType must be between 0 and 99'');", span="405-405"];
m32_61 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="throw new ArgumentOutOfRangeException(''optionRight'', ''optionType must be either 0 or 1'');", span="409-409"];
m32_64 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="var marketIdentifier = QuantConnect.Market.Encode(market)", span="416-416"];
m32_66 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="throw new ArgumentOutOfRangeException(''market'', string.Format(''The specified market wasn't found in the markets lookup. Requested: {0}. '' +\r\n                    ''You can add markets by calling QuantConnect.Market.AddMarket(string,ushort)'', market));", span="419-420"];
m32_65 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="!marketIdentifier.HasValue", span="417-417"];
m32_68 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="var marketCode = (ulong)marketIdentifier * MarketOffset", span="424-424"];
m32_69 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="ulong strikeScale", span="426-426"];
m32_71 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="strikeScale *= StrikeScaleOffset", span="428-428"];
m32_76 [cluster="QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.Generate(System.DateTime, string, QuantConnect.SecurityType, string, decimal, QuantConnect.OptionRight, QuantConnect.OptionStyle, QuantConnect.SecurityIdentifier?)", span="394-394"];
m32_20 [cluster="QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", span="702-702"];
m32_199 [cluster="QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="SecurityIdentifier = securityIdentifier", span="704-704"];
m32_200 [cluster="QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.SidBox.SidBox(QuantConnect.SecurityIdentifier)", span="702-702"];
m32_82 [cluster="System.DateTime.ToOADate()", file="PaperTradingSetupHandler.cs", label="Entry System.DateTime.ToOADate()", span="0-0"];
m32_184 [cluster="string.GetHashCode()", file="PaperTradingSetupHandler.cs", label="Entry string.GetHashCode()", span="0-0"];
m32_81 [cluster="string.Format(string, object)", file="PaperTradingSetupHandler.cs", label="Entry string.Format(string, object)", span="0-0"];
m32_84 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.DecodeBase36(string)", span="440-440"];
m32_85 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="int pos = 0", span="442-442"];
m32_87 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="int i = symbol.Length - 1", span="444-444"];
m32_89 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="var c = symbol[i]", span="446-446"];
m32_86 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="ulong result = 0", span="443-443"];
m32_91 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="result += value * Pow(36, pos++)", span="453-453"];
m32_93 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="return result;", span="455-455"];
m32_88 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="i > -1", span="444-444"];
m32_92 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="i--", span="444-444"];
m32_90 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="var value = (uint)(c <= 57\r\n                    ? c - '0'\r\n                    : c - 'A' + 10)", span="449-451"];
m32_94 [cluster="QuantConnect.SecurityIdentifier.DecodeBase36(string)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.DecodeBase36(string)", span="440-440"];
m32_77 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="PaperTradingSetupHandler.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m32_38 [cluster="QuantConnect.Interfaces.IMapFileProvider.Get(string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.Interfaces.IMapFileProvider.Get(string)", span="33-33"];
m32_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="PaperTradingSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m32_10 [cluster="string.IndexOfAny(char[])", file="PaperTradingSetupHandler.cs", label="Entry string.IndexOfAny(char[])", span="0-0"];
m32_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="PaperTradingSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m32_55 [cluster="QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", span="385-385"];
m32_56 [cluster="QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", file="PaperTradingSetupHandler.cs", label="return Generate(DefaultDate, symbol, SecurityType.Cfd, market);", span="387-387"];
m32_57 [cluster="QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateCfd(string, string)", span="385-385"];
m32_126 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.Parse(string)", span="534-534"];
m32_127 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="PaperTradingSetupHandler.cs", label="Exception exception", span="536-536"];
m32_129 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="PaperTradingSetupHandler.cs", label="!TryParse(value, out identifier, out exception)", span="538-538"];
m32_128 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="PaperTradingSetupHandler.cs", label="SecurityIdentifier identifier", span="537-537"];
m32_130 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="PaperTradingSetupHandler.cs", label="throw exception;", span="540-540"];
m32_131 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="PaperTradingSetupHandler.cs", label="return identifier;", span="543-543"];
m32_132 [cluster="QuantConnect.SecurityIdentifier.Parse(string)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.Parse(string)", span="534-534"];
m32_106 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="PaperTradingSetupHandler.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m32_25 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, QuantConnect.SecurityIdentifier, string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, QuantConnect.SecurityIdentifier, string)", span="318-318"];
m32_26 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, QuantConnect.SecurityIdentifier, string)", file="PaperTradingSetupHandler.cs", label="return Generate(expiry, underlying.Symbol, SecurityType.Future, market, 0, 0, 0, underlying);", span="322-322"];
m32_27 [cluster="QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, QuantConnect.SecurityIdentifier, string)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateFuture(System.DateTime, QuantConnect.SecurityIdentifier, string)", span="318-318"];
m32_164 [cluster="string.Split(char[], System.StringSplitOptions)", file="PaperTradingSetupHandler.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m32_181 [cluster="QuantConnect.SecurityIdentifier.GetHashCode()", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.GetHashCode()", span="655-655"];
m32_182 [cluster="QuantConnect.SecurityIdentifier.GetHashCode()", file="PaperTradingSetupHandler.cs", label="return (_symbol.GetHashCode()*397) ^ _properties.GetHashCode();", span="657-657"];
m32_183 [cluster="QuantConnect.SecurityIdentifier.GetHashCode()", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.GetHashCode()", span="655-655"];
m32_134 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", span="554-554"];
m32_135 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Exception exception", span="556-556"];
m32_136 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="return TryParse(value, out identifier, out exception);", span="557-557"];
m32_137 [cluster="QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.TryParse(string, out QuantConnect.SecurityIdentifier)", span="554-554"];
m32_11 [cluster="System.ArgumentException.ArgumentException(string, string)", file="PaperTradingSetupHandler.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m32_142 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", span="576-576"];
m32_143 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="exception = null", span="578-578"];
m32_145 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="string.IsNullOrWhiteSpace(value)", span="581-581"];
m32_147 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="var sids = value.Split('|')", span="586-586"];
m32_144 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="identifier = Empty", span="579-579"];
m32_158 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="identifier = new SecurityIdentifier(symbol, props, identifier)", span="602-602"];
m32_146 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="return true;", span="583-583"];
m32_148 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="var i = sids.Length - 1", span="587-587"];
m32_150 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="var current = sids[i]", span="589-589"];
m32_149 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="i > -1", span="587-587"];
m32_159 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="i--", span="587-587"];
m32_160 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="return true;", span="605-605"];
m32_151 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="var parts = current.Split(new[] { ' ' }, StringSplitOptions.RemoveEmptyEntries)", span="590-590"];
m32_152 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="parts.Length != 2", span="591-591"];
m32_155 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="var symbol = parts[0]", span="597-597"];
m32_156 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="var otherData = parts[1]", span="598-598"];
m32_153 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="exception = new FormatException(''The string must be splittable on space into two parts.'')", span="593-593"];
m32_154 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="return false;", span="594-594"];
m32_157 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="var props = DecodeBase36(otherData)", span="599-599"];
m32_161 [cluster="QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.TryParseProperties(string, out System.Exception, out QuantConnect.SecurityIdentifier)", span="576-576"];
m32_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="PaperTradingSetupHandler.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m32_49 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="363-363"];
m32_50 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="PaperTradingSetupHandler.cs", label="return Generate(DefaultDate, symbol, SecurityType.Base, market);", span="365-365"];
m32_51 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="363-363"];
m32_43 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="352-352"];
m32_47 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="PaperTradingSetupHandler.cs", label="return Generate(date, symbol, SecurityType.Equity, market);", span="354-354"];
m32_48 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateEquity(System.DateTime, string, string)", span="352-352"];
m32_28 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", span="332-332"];
m32_29 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", file="PaperTradingSetupHandler.cs", label="var provider = Composer.Instance.GetExportedValueByTypeName<IMapFileProvider>(MapFileProviderTypeName)", span="334-334"];
m32_30 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", file="PaperTradingSetupHandler.cs", label="var resolver = provider.Get(market)", span="335-335"];
m32_31 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", file="PaperTradingSetupHandler.cs", label="var mapFile = resolver.ResolveMapFile(symbol, DateTime.Today)", span="336-336"];
m32_35 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", file="PaperTradingSetupHandler.cs", label="return GenerateEquity(firstDate, symbol, market);", span="342-342"];
m32_32 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", file="PaperTradingSetupHandler.cs", label="var firstDate = mapFile.FirstDate", span="337-337"];
m32_33 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", file="PaperTradingSetupHandler.cs", label="mapFile.Any()", span="338-338"];
m32_34 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", file="PaperTradingSetupHandler.cs", label="symbol = mapFile.OrderBy(x => x.Date).First().MappedSymbol", span="340-340"];
m32_36 [cluster="QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.GenerateEquity(string, string)", span="332-332"];
m32_9 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="PaperTradingSetupHandler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m32_95 [cluster="QuantConnect.SecurityIdentifier.Pow(uint, int)", file="PaperTradingSetupHandler.cs", label="Entry QuantConnect.SecurityIdentifier.Pow(uint, int)", span="512-512"];
m32_123 [cluster="QuantConnect.SecurityIdentifier.Pow(uint, int)", file="PaperTradingSetupHandler.cs", label="return (ulong)BigInteger.Pow(x, pow);", span="515-515"];
m32_124 [cluster="QuantConnect.SecurityIdentifier.Pow(uint, int)", file="PaperTradingSetupHandler.cs", label="Exit QuantConnect.SecurityIdentifier.Pow(uint, int)", span="512-512"];
m32_108 [cluster="System.Collections.Generic.Stack<T>.ToArray()", file="PaperTradingSetupHandler.cs", label="Entry System.Collections.Generic.Stack<T>.ToArray()", span="0-0"];
m32_224 [file="PaperTradingSetupHandler.cs", label="out QuantConnect.SecurityIdentifier", span=""];
m32_225 [file="PaperTradingSetupHandler.cs", label="out QuantConnect.SecurityIdentifier", span=""];
m32_226 [file="PaperTradingSetupHandler.cs", label="QuantConnect.SecurityIdentifier", span=""];
m32_227 [file="PaperTradingSetupHandler.cs", label="ref QuantConnect.SecurityIdentifier", span=""];
m32_228 [file="PaperTradingSetupHandler.cs", label="ref QuantConnect.SecurityIdentifier", span=""];
m32_229 [file="PaperTradingSetupHandler.cs", label="QuantConnect.SecurityIdentifier.SidBox", span=""];
m33_15 [cluster="QuantConnect.Data.Consolidators.DataConsolidatedHandler.Invoke(object, QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidatedHandler.Invoke(object, QuantConnect.Data.BaseData)", span="24-24"];
m33_9 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", span="85-85"];
m33_10 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="var handler = DataConsolidated", span="87-87"];
m33_12 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="handler(this, consolidated)", span="88-88"];
m33_13 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="Consolidated = consolidated", span="93-93"];
m33_11 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="handler != null", span="88-88"];
m33_14 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="Exit QuantConnect.Data.Consolidators.DataConsolidator<TInput>.OnDataConsolidated(QuantConnect.Data.BaseData)", span="85-85"];
m33_0 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", span="32-32"];
m33_1 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="var typedData = data as TInput", span="34-34"];
m33_2 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="typedData == null", span="35-35"];
m33_4 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="Update(typedData)", span="39-39"];
m33_3 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", color=red, community=0, file="PortfolioEvent.cs", label="2: throw new ArgumentNullException(''data'');", span="37-37"];
m33_5 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", file="PortfolioEvent.cs", label="Exit QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(QuantConnect.Data.BaseData)", span="32-32"];
m33_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="PortfolioEvent.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m33_7 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", file="PortfolioEvent.cs", label="Entry QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", span="78-78"];
m33_8 [cluster="QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", file="PortfolioEvent.cs", label="Exit QuantConnect.Data.Consolidators.DataConsolidator<TInput>.Update(TInput)", span="78-78"];
m33_16 [file="PortfolioEvent.cs", label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", span=""];
m34_2 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.NextJob(out string)", span="77-77"];
m34_3 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="location = AlgorithmLocation", span="79-79"];
m34_4 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="!BacktestingMode", span="82-82"];
m34_5 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", color=red, community=0, file="Queue.cs", label="0: var liveJob = new LiveNodePacket\r\n                {\r\n                    ResultEndpoint = ResultHandlerEndpoint.LiveTrading,\r\n                    SetupEndpoint = SetupHandlerEndpoint.PaperTrading,\r\n                    DataEndpoint = DataFeedEndpoint.LiveTrading,\r\n                    TransactionEndpoint = TransactionHandlerEndpoint.Backtesting,\r\n                    RealTimeEndpoint = RealTimeEndpoint.LiveTrading,\r\n                    Type = PacketType.LiveNode,\r\n                    Algorithm = File.ReadAllBytes(AlgorithmLocation)\r\n                }", span="84-93"];
m34_7 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="var backtestJob = new BacktestNodePacket(0, 0, '''', new byte[] {}, 10000, ''local'')\r\n            {\r\n                ResultEndpoint = ResultHandlerEndpoint.Console,\r\n                SetupEndpoint = SetupHandlerEndpoint.Console,\r\n                DataEndpoint = DataFeedEndpoint.FileSystem,\r\n                TransactionEndpoint = TransactionHandlerEndpoint.Backtesting,\r\n                RealTimeEndpoint = RealTimeEndpoint.Backtesting,\r\n                Type = PacketType.BacktestNode,\r\n                Algorithm = File.ReadAllBytes(AlgorithmLocation)\r\n            }", span="98-107"];
m34_6 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="return liveJob;", span="94-94"];
m34_8 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="return backtestJob;", span="108-108"];
m34_9 [cluster="QuantConnect.Queues.Queue.NextJob(out string)", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.NextJob(out string)", span="77-77"];
m34_21 [cluster="QuantConnect.Queues.Queue.CloseDataQueue()", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.CloseDataQueue()", span="141-141"];
m34_22 [cluster="QuantConnect.Queues.Queue.CloseDataQueue()", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.CloseDataQueue()", span="141-141"];
m34_26 [cluster="QuantConnect.Queues.Queue.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="157-157"];
m34_27 [cluster="QuantConnect.Queues.Queue.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", color=red, community=0, file="Queue.cs", label="0: throw new NotImplementedException(''QuantConnect.Queues.Queue has not implemented live data.'');", span="159-159"];
m34_28 [cluster="QuantConnect.Queues.Queue.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.Unsubscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="157-157"];
m34_23 [cluster="QuantConnect.Queues.Queue.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="149-149"];
m34_24 [cluster="QuantConnect.Queues.Queue.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", color=red, community=0, file="Queue.cs", label="0: throw new NotImplementedException(''QuantConnect.Queues.Queue has not implemented live data.'');", span="151-151"];
m34_25 [cluster="QuantConnect.Queues.Queue.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.Subscribe(System.Collections.Generic.IDictionary<QuantConnect.SecurityType, System.Collections.Generic.List<string>>)", span="149-149"];
m34_13 [cluster="QuantConnect.Queues.Queue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="115-115"];
m34_14 [cluster="QuantConnect.Queues.Queue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.AcknowledgeJob(QuantConnect.Packets.AlgorithmNodePacket)", span="115-115"];
m34_15 [cluster="QuantConnect.Queues.Queue.GetNextTicks()", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.GetNextTicks()", span="124-124"];
m34_16 [cluster="QuantConnect.Queues.Queue.GetNextTicks()", color=red, community=0, file="Queue.cs", label="2: throw new NotImplementedException(''QuantConnect.Queues.Queue has not implemented live data.'');", span="126-126"];
m34_17 [cluster="QuantConnect.Queues.Queue.GetNextTicks()", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.GetNextTicks()", span="124-124"];
m34_19 [cluster="QuantConnect.Queues.Queue.OpenDataQueue()", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.OpenDataQueue()", span="133-133"];
m34_20 [cluster="QuantConnect.Queues.Queue.OpenDataQueue()", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.OpenDataQueue()", span="133-133"];
m34_0 [cluster="QuantConnect.Queues.Queue.Initialize(bool)", file="Queue.cs", label="Entry QuantConnect.Queues.Queue.Initialize(bool)", span="68-68"];
m34_1 [cluster="QuantConnect.Queues.Queue.Initialize(bool)", file="Queue.cs", label="Exit QuantConnect.Queues.Queue.Initialize(bool)", span="68-68"];
m34_12 [cluster="QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", file="Queue.cs", label="Entry QuantConnect.Packets.BacktestNodePacket.BacktestNodePacket(int, int, string, byte[], decimal, string, QuantConnect.UserPlan)", span="87-87"];
m34_11 [cluster="System.IO.File.ReadAllBytes(string)", file="Queue.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m34_10 [cluster="QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", file="Queue.cs", label="Entry QuantConnect.Packets.LiveNodePacket.LiveNodePacket()", span="90-90"];
m34_18 [cluster="System.NotImplementedException.NotImplementedException(string)", file="Queue.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m34_29 [file="Queue.cs", label="QuantConnect.Queues.Queue", span=""];
m35_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="168-168"];
m35_82 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", file="SecurityHolding.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol, System.Func<QuantConnect.Data.BaseData, decimal>)", span="148-148"];
m35_0 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", span="37-37"];
m35_1 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="SetStartDate(2013, 10, 08)", span="39-39"];
m35_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1557-1557"];
m35_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="270-270"];
m35_83 [cluster="System.Collections.Generic.IEnumerable<decimal>.ToDoubleArray()", file="SecurityHolding.cs", label="Entry System.Collections.Generic.IEnumerable<decimal>.ToDoubleArray()", span="166-166"];
m35_77 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>.Get<T>(QuantConnect.Symbol, string)", file="SecurityHolding.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>.Get<T>(QuantConnect.Symbol, string)", span="82-82"];
m35_4 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Daily)", span="44-44"];
m35_5 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AddData<QuandlFuture>(''CHRIS/CME_SP1'', Resolution.Daily)", span="45-45"];
m35_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1065-1065"];
m35_65 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", file="SecurityHolding.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", span="56-56"];
m35_64 [cluster="QuantConnect.Securities.Equity.EquityExchange.EquityExchange()", file="SecurityHolding.cs", label="Entry QuantConnect.Securities.Equity.EquityExchange.EquityExchange()", span="35-35"];
m35_80 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="359-359"];
m35_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1613-1613"];
m35_74 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="184-184"];
m35_81 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="SecurityHolding.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
m35_78 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="127-127"];
m35_66 [cluster="System.TimeSpan.FromDays(double)", file="SecurityHolding.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m35_70 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SecurityHolding.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m35_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1090-1090"];
m35_76 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>.Get<T>(QuantConnect.Symbol)", file="SecurityHolding.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Market.DataDictionary<T>>.Get<T>(QuantConnect.Symbol)", span="68-68"];
m35_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="233-233"];
m35_73 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="153-153"];
m35_29 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", color=green, community=0, file="SecurityHolding.cs", label="2: allQuandlData = History<QuandlFuture>(Securities.Keys, TimeSpan.FromDays(365))", span="112-112"];
m35_28 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History<QuandlFuture>(Securities.Keys, 14)'', allQuandlData, 14)", span="99-99"];
m35_30 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", color=green, community=0, file="SecurityHolding.cs", label="2: AssertHistoryCount(''History<QuandlFuture>(Securities.Keys, TimeSpan.FromDays(365))'', allQuandlData, 250)", span="113-113"];
m35_31 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label=allQuandlData, span="117-117"];
m35_33 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="var singleSymbolQuandl = allQuandlData.Get(''CHRIS/CME_SP1'')", span="125-125"];
m35_36 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="var quandlSpyLows = allQuandlData.Get(''CHRIS/CME_SP1'', ''Low'')", span="134-134"];
m35_34 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", color=green, community=0, file="SecurityHolding.cs", label="0: AssertHistoryCount(''allQuandlData.Get(\''CHRIS/CME_SP1\'')'', singleSymbolQuandl, 250)", span="126-126"];
m35_35 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label=singleSymbolQuandl, span="127-127"];
m35_2 [cluster="QuantConnect.Lean.Engine.IStreamReader.Close()", file="SecurityHolding.cs", label="Entry QuantConnect.Lean.Engine.IStreamReader.Close()", span="41-41"];
m35_3 [cluster="QuantConnect.Lean.Engine.IStreamReader.Close()", file="SecurityHolding.cs", label="Exit QuantConnect.Lean.Engine.IStreamReader.Close()", span="41-41"];
m35_6 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="Securities[''CHRIS/CME_SP1''].Exchange = new EquityExchange()", span="47-47"];
m35_7 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="spyDailySma = new SimpleMovingAverage(14)", span="50-50"];
m35_8 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="var tradeBarHistory = History<TradeBar>(''SPY'', TimeSpan.FromDays(365))", span="53-53"];
m35_10 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="tradeBarHistory = History<TradeBar>(''SPY'', TimeSpan.FromDays(1), Resolution.Minute)", span="57-57"];
m35_12 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="tradeBarHistory = History<TradeBar>(''SPY'', 14).ToList()", span="61-61"];
m35_14 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="tradeBarHistory = History<TradeBar>(''SPY'', 14, Resolution.Minute)", span="65-65"];
m35_17 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="spyDailySma.Update(tradeBar.EndTime, tradeBar.Close)", span="72-72"];
m35_18 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="var quandlHistory = History<QuandlFuture>(''CHRIS/CME_SP1'', TimeSpan.FromDays(365))", span="76-76"];
m35_20 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="quandlHistory = History<QuandlFuture>(''CHRIS/CME_SP1'', 14)", span="80-80"];
m35_22 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="spyDailySma.Reset()", span="87-87"];
m35_24 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="spyDailySma.Update(quandl.EndTime, quandl.Value)", span="90-90"];
m35_25 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="var allQuandlData = History<QuandlFuture>(TimeSpan.FromDays(365))", span="94-94"];
m35_27 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="allQuandlData = History<QuandlFuture>(Securities.Keys, 14)", span="98-98"];
m35_39 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="var allHistory = History(TimeSpan.FromDays(365))", span="144-144"];
m35_41 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="allHistory = History(TimeSpan.FromDays(1), Resolution.Minute)", span="148-148"];
m35_43 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="allHistory = History(Securities.Keys, 100)", span="152-152"];
m35_45 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="allHistory = History(Securities.Keys, 100, Resolution.Minute)", span="156-156"];
m35_47 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="allHistory = History(Securities.Keys, TimeSpan.FromDays(365))", span="160-160"];
m35_49 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="allHistory = History(Securities.Keys, TimeSpan.FromDays(1), Resolution.Minute)", span="163-163"];
m35_32 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="var quandl = quandlsDataDictionary[''CHRIS/CME_SP1'']", span="120-120"];
m35_37 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''allQuandlData.Get(\''CHRIS/CME_SP1\'', \''Low\'')'', quandlSpyLows, 250)", span="135-135"];
m35_38 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label=quandlSpyLows, span="136-136"];
m35_9 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History<TradeBar>(\''SPY\'', TimeSpan.FromDays(365))'', tradeBarHistory, 250)", span="54-54"];
m35_11 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History<TradeBar>(\''SPY\'', TimeSpan.FromDays(1), Resolution.Minute)'', tradeBarHistory, 390)", span="58-58"];
m35_13 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History<TradeBar>(\''SPY\'', 14)'', tradeBarHistory, 14)", span="62-62"];
m35_15 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History<TradeBar>(\''SPY\'', 14, Resolution.Minute)'', tradeBarHistory, 14)", span="66-66"];
m35_19 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History<Quandl>(\''CHRIS/CME_SP1\'', TimeSpan.FromDays(365))'', quandlHistory, 250)", span="77-77"];
m35_21 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History<Quandl>(\''CHRIS/CME_SP1\'', 14)'', quandlHistory, 14)", span="81-81"];
m35_26 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History<QuandlFuture>(TimeSpan.FromDays(365))'', allQuandlData, 250)", span="95-95"];
m35_40 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History(TimeSpan.FromDays(365))'', allHistory, 250)", span="145-145"];
m35_42 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History(TimeSpan.FromDays(1), Resolution.Minute)'', allHistory, 391)", span="149-149"];
m35_44 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History(Securities.Keys, 100)'', allHistory, 100)", span="153-153"];
m35_46 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History(Securities.Keys, 100, Resolution.Minute)'', allHistory, 101)", span="157-157"];
m35_48 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History(Securities.Keys, TimeSpan.FromDays(365))'', allHistory, 250)", span="161-161"];
m35_50 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''History(Securities.Keys, TimeSpan.FromDays(1), Resolution.Minute)'', allHistory, 391)", span="164-164"];
m35_53 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''allHistory.Get(\''SPY\'')'', tradeBarHistory, 390)", span="177-177"];
m35_55 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="AssertHistoryCount(''allHistory.Get(\''SPY\'', Field.Close)'', closeHistory, 390)", span="181-181"];
m35_16 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label=tradeBarHistory, span="70-70"];
m35_23 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label=quandlHistory, span="88-88"];
m35_51 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label=allHistory, span="167-167"];
m35_52 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="tradeBarHistory = allHistory.Get<TradeBar>(''SPY'')", span="176-176"];
m35_54 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="var closeHistory = allHistory.Get(''SPY'', Field.Close)", span="180-180"];
m35_56 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label=closeHistory, span="182-182"];
m35_57 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="double[] doubleArray = closeHistory.ToDoubleArray()", span="188-188"];
m35_58 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", file="SecurityHolding.cs", label="Exit QuantConnect.Algorithm.CSharp.HistoryAlgorithm.Initialize()", span="37-37"];
m35_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="1014-1014"];
m35_79 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="373-373"];
m35_68 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", span="211-211"];
m35_95 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", file="SecurityHolding.cs", label="var count = tradeBarHistory.Count()", span="213-213"];
m35_96 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", file="SecurityHolding.cs", label="count != expected", span="214-214"];
m35_97 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", file="SecurityHolding.cs", label="throw new Exception(methodCall + '' expected '' + expected + '', but received '' + count);", span="216-216"];
m35_98 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", file="SecurityHolding.cs", label="Exit QuantConnect.Algorithm.CSharp.HistoryAlgorithm.AssertHistoryCount<T>(string, System.Collections.Generic.IEnumerable<T>, int)", span="211-211"];
m35_84 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", span="195-195"];
m35_85 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="SecurityHolding.cs", label="_count++", span="197-197"];
m35_86 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="SecurityHolding.cs", label="_count > 5", span="199-199"];
m35_88 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="SecurityHolding.cs", label="!Portfolio.Invested", span="204-204"];
m35_89 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="SecurityHolding.cs", label="SetHoldings(''SPY'', 1)", span="206-206"];
m35_90 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="SecurityHolding.cs", label="Debug(''Purchased Stock'')", span="207-207"];
m35_87 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="SecurityHolding.cs", label="throw new Exception(''Invalid number of bars arrived. Expected exactly 5'');", span="201-201"];
m35_91 [cluster="QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", file="SecurityHolding.cs", label="Exit QuantConnect.Algorithm.CSharp.HistoryAlgorithm.OnData(QuantConnect.Data.Slice)", span="195-195"];
m35_71 [cluster="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", file="SecurityHolding.cs", label="Entry QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>.Update(System.DateTime, decimal)", span="36-36"];
m35_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1257-1257"];
m35_72 [cluster="QuantConnect.Indicators.SimpleMovingAverage.Reset()", file="SecurityHolding.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.Reset()", span="36-36"];
m35_99 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SecurityHolding.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m35_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", file="SecurityHolding.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, int, bool, string)", span="861-861"];
m35_100 [file="SecurityHolding.cs", label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", span=""];
m38_97 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", file="TestHelper.cs", label="yield break;", span="205-205"];
m38_98 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", file="TestHelper.cs", label="string[] header = enumerator.Current.Split(',')", span="208-208"];
m38_99 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", file="TestHelper.cs", label="enumerator.MoveNext()", span="209-209"];
m38_120 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetTradeBarStream(string, bool)", color=green, community=0, file="TestHelper.cs", label="0: return GetCsvFileStream(externalDataFilename).Select(values => new TradeBar\r\n            {\r\n                Time = Time.ParseDate(values.GetCsvValue(''date'', ''time'')),\r\n                Open = values.GetCsvValue(''open'').ToDecimal(),\r\n                High = values.GetCsvValue(''high'').ToDecimal(),\r\n                Low = values.GetCsvValue(''low'').ToDecimal(),\r\n                Close = values.GetCsvValue(''close'').ToDecimal(),\r\n                Volume = fileHasVolume ? long.Parse(values.GetCsvValue(''volume''), NumberStyles.AllowExponent | NumberStyles.AllowDecimalPoint) : 0\r\n            });", span="220-228"];
m38_121 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetTradeBarStream(string, bool)", file="TestHelper.cs", label="Exit QuantConnect.Tests.Indicators.TestHelper.GetTradeBarStream(string, bool)", span="218-218"];
m38_126 [cluster="System.Collections.Generic.IReadOnlyDictionary<string, string>.GetCsvValue(params string[])", file="TestHelper.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<string, string>.GetCsvValue(params string[])", span="270-270"];
m38_100 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", file="TestHelper.cs", label="var values = enumerator.Current.Split(',')", span="211-211"];
m38_101 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", file="TestHelper.cs", label="var headerAndValues = header.Zip(values, (h, v) => new {h, v})", span="212-212"];
m38_102 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", file="TestHelper.cs", label="var dictionary = headerAndValues.ToDictionary(x => x.h.Trim(), x => x.v.Trim(), StringComparer.OrdinalIgnoreCase)", span="213-213"];
m38_103 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", file="TestHelper.cs", label="yield return new ReadOnlyDictionary<string, string>(dictionary);", span="214-214"];
m38_104 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", file="TestHelper.cs", label="Exit QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", span="200-200"];
m38_113 [cluster="lambda expression", file="TestHelper.cs", label="Entry lambda expression", span="213-213"];
m38_105 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="TestHelper.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m38_106 [cluster="System.Collections.IEnumerator.MoveNext()", file="TestHelper.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m38_107 [cluster="System.Collections.Generic.IEnumerable<TFirst>.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", file="TestHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TFirst>.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", span="0-0"];
m38_108 [cluster="Unk.ToDictionary", file="TestHelper.cs", label="Entry Unk.ToDictionary", span=""];
m38_109 [cluster="ReadOnlyDictionary<string, string>.cstr", file="TestHelper.cs", label="Entry ReadOnlyDictionary<string, string>.cstr", span=""];
m38_110 [cluster="lambda expression", file="TestHelper.cs", label="Entry lambda expression", span="212-212"];
m38_111 [cluster="lambda expression", file="TestHelper.cs", label="new {h, v}", span="212-212"];
m38_112 [cluster="lambda expression", file="TestHelper.cs", label="Exit lambda expression", span="212-212"];
m38_114 [cluster="lambda expression", file="TestHelper.cs", label="x.h.Trim()", span="213-213"];
m38_115 [cluster="lambda expression", file="TestHelper.cs", label="Exit lambda expression", span="213-213"];
m38_116 [cluster="lambda expression", file="TestHelper.cs", label="Entry lambda expression", span="213-213"];
m38_118 [cluster="lambda expression", file="TestHelper.cs", label="Exit lambda expression", span="213-213"];
m38_119 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetTradeBarStream(string, bool)", file="TestHelper.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.GetTradeBarStream(string, bool)", span="218-218"];
m38_117 [cluster="lambda expression", file="TestHelper.cs", label="x.v.Trim()", span="213-213"];
m38_122 [cluster="Unk.Select", file="TestHelper.cs", label="Entry Unk.Select", span=""];
m38_123 [cluster="lambda expression", file="TestHelper.cs", label="Entry lambda expression", span="220-228"];
m38_125 [cluster="lambda expression", file="TestHelper.cs", label="Exit lambda expression", span="220-228"];
m38_124 [cluster="lambda expression", color=green, community=0, file="TestHelper.cs", label="3: new TradeBar\r\n            {\r\n                Time = Time.ParseDate(values.GetCsvValue(''date'', ''time'')),\r\n                Open = values.GetCsvValue(''open'').ToDecimal(),\r\n                High = values.GetCsvValue(''high'').ToDecimal(),\r\n                Low = values.GetCsvValue(''low'').ToDecimal(),\r\n                Close = values.GetCsvValue(''close'').ToDecimal(),\r\n                Volume = fileHasVolume ? long.Parse(values.GetCsvValue(''volume''), NumberStyles.AllowExponent | NumberStyles.AllowDecimalPoint) : 0\r\n            }", span="220-228"];
m38_127 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="TestHelper.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", span="235-235"];
m38_54 [cluster="QuantConnect.Indicators.IndicatorBase<T>.Update(T)", file="TestHelper.cs", label="Entry QuantConnect.Indicators.IndicatorBase<T>.Update(T)", span="82-82"];
m38_49 [cluster="string.Split(char[], System.StringSplitOptions)", file="TestHelper.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m38_63 [cluster="QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="TestHelper.cs", label="Entry QuantConnect.Brokerages.Brokerage.OnMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="170-170"];
m38_68 [cluster="lambda expression", file="TestHelper.cs", label="Assert.AreEqual(expected, selector(indicator), epsilon, ''Failed at '' + i.Current.Time.ToString(''o''))", span="145-145"];
m38_53 [cluster="QuantConnect.Time.ParseDate(string)", file="TestHelper.cs", label="Entry QuantConnect.Time.ParseDate(string)", span="118-118"];
m38_96 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", file="TestHelper.cs", label="!enumerator.MoveNext()", span="203-203"];
m38_143 [cluster="lambda expression", file="TestHelper.cs", label="Exit lambda expression", span="254-264"];
m38_144 [cluster="System.Math.Abs(double)", file="TestHelper.cs", label="Entry System.Math.Abs(double)", span="0-0"];
m38_145 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvValue(System.Collections.Generic.IReadOnlyDictionary<string, string>, params string[])", file="TestHelper.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.GetCsvValue(System.Collections.Generic.IReadOnlyDictionary<string, string>, params string[])", span="270-270"];
m38_185 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Dispose()", file="TestHelper.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Dispose()", span="329-329"];
m38_186 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Dispose()", file="TestHelper.cs", label="_publicEndpointRateLimiter.Dispose()", span="331-331"];
m38_187 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Dispose()", file="TestHelper.cs", label="_privateEndpointRateLimiter.Dispose()", span="332-332"];
m38_188 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Dispose()", file="TestHelper.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Dispose()", span="329-329"];
m38_57 [cluster="Unk.GetAuthenticationToken", file="TestHelper.cs", label="Entry Unk.GetAuthenticationToken", span=""];
m38_58 [cluster="Unk.ExecuteRestRequest", file="TestHelper.cs", label="Entry Unk.ExecuteRestRequest", span=""];
m38_59 [cluster="Unk.>", file="TestHelper.cs", label="Entry Unk.>", span=""];
m38_17 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var response = ExecuteRestRequest(req, GdaxEndpointType.Private)", span="71-71"];
m38_151 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TestHelper.cs", label="response.StatusCode != HttpStatusCode.OK", span="261-261"];
m38_136 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertDeltaDecreases(double)", file="TestHelper.cs", label="return (indicator, expected) =>\r\n            {\r\n                // the delta should be forever decreasing\r\n                var currentDelta = Math.Abs((double) indicator.Current.Value - expected);\r\n                if (currentDelta - delta > epsilon)\r\n                {\r\n                    Assert.Fail(''The delta increased!'');\r\n                    //Console.WriteLine(indicator.Value.Time.Date.ToShortDateString() + '' - '' + indicator.Value.Data.ToString(''000.000'') + '' \t '' + expected.ToString(''000.000'') + '' \t '' + currentDelta.ToString(''0.000''));\r\n                }\r\n                delta = currentDelta;\r\n            };", span="254-264"];
m38_66 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator<T>(T, string, string, System.Func<T, double>, double)", file="TestHelper.cs", label="Exit QuantConnect.Tests.Indicators.TestHelper.TestIndicator<T>(T, string, string, System.Func<T, double>, double)", span="142-142"];
m38_146 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvValue(System.Collections.Generic.IReadOnlyDictionary<string, string>, params string[])", file="TestHelper.cs", label="string value = null", span="272-272"];
m38_147 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvValue(System.Collections.Generic.IReadOnlyDictionary<string, string>, params string[])", file="TestHelper.cs", label="keys.Any(key => dictionary.TryGetValue(key, out value))", span="273-273"];
m38_148 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvValue(System.Collections.Generic.IReadOnlyDictionary<string, string>, params string[])", file="TestHelper.cs", label="return value;", span="275-275"];
m38_156 [cluster="lambda expression", file="TestHelper.cs", label="Exit lambda expression", span="273-273"];
m38_159 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TestHelper.cs", label=double, span=""];
m38_161 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TestHelper.cs", label="System.Func<T, double>", span=""];
m38_162 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TestHelper.cs", label=double, span=""];
m38_149 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvValue(System.Collections.Generic.IReadOnlyDictionary<string, string>, params string[])", file="TestHelper.cs", label="throw new ArgumentException(''Unable to find column: '' + string.Join('', '', keys));", span="278-278"];
m38_150 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvValue(System.Collections.Generic.IReadOnlyDictionary<string, string>, params string[])", file="TestHelper.cs", label="Exit QuantConnect.Tests.Indicators.TestHelper.GetCsvValue(System.Collections.Generic.IReadOnlyDictionary<string, string>, params string[])", span="270-270"];
m38_152 [cluster="System.ArgumentException.ArgumentException(string)", file="TestHelper.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m38_153 [cluster="string.Join(string, params string[])", file="TestHelper.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m38_154 [cluster="lambda expression", file="TestHelper.cs", label="Entry lambda expression", span="273-273"];
m38_155 [cluster="lambda expression", file="TestHelper.cs", label="dictionary.TryGetValue(key, out value)", span="273-273"];
m38_157 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="TestHelper.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m38_158 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TestHelper.cs", label=double, span=""];
m38_160 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TestHelper.cs", label=T, span=""];
m38_163 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetCashBalance()", file="TestHelper.cs", label=bool, span=""];
m38_10 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="payload.overdraft_enabled = true", span="56-56"];
m38_55 [cluster="double.Parse(string)", file="TestHelper.cs", label="Entry double.Parse(string)", span="0-0"];
m38_189 [cluster="QuantConnect.Util.RateGate.Dispose()", file="TestHelper.cs", label="Entry QuantConnect.Util.RateGate.Dispose()", span="196-196"];
m38_134 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertDeltaDecreases(double)", file="TestHelper.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.AssertDeltaDecreases(double)", span="251-251"];
m38_141 [cluster="lambda expression", file="TestHelper.cs", label="Assert.Fail(''The delta increased!'')", span="260-260"];
m38_73 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="bool fileHasVolume = false", span="159-159"];
m38_51 [cluster="Unk.Fail", file="TestHelper.cs", label="Entry Unk.Fail", span=""];
m38_87 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="double expected = double.Parse(parts[targetIndex])", span="195-195"];
m38_133 [cluster="Unk.IsFalse", file="TestHelper.cs", label="Entry Unk.IsFalse", span=""];
m38_135 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertDeltaDecreases(double)", file="TestHelper.cs", label="double delta = double.MaxValue", span="253-253"];
m38_61 [cluster="lambda expression", file="TestHelper.cs", label="Assert.AreEqual(expected, (double)i.Current.Value, epsilon, ''Failed at '' + i.Current.Time.ToString(''o''))", span="130-130"];
m38_22 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid, Message = errorMessage })", span="80-80"];
m38_40 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="UnlockStream()", span="115-115"];
m38_39 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Information, -1, ''Order completed successfully orderid:'' + order.Id))", span="113-113"];
m38_27 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var errorMessage = ''Reject reason: '' + raw.RejectReason", span="89-89"];
m38_41 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="return true;", span="116-116"];
m38_26 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="raw.Status == ''rejected''", span="87-87"];
m38_24 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="UnlockStream()", span="83-83"];
m38_28 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid, Message = errorMessage })", span="90-90"];
m38_33 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="CachedOrderIDs.ContainsKey(order.Id)", span="98-98"];
m38_31 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="return true;", span="94-94"];
m38_32 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var brokerId = raw.Id", span="97-97"];
m38_34 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="CachedOrderIDs[order.Id].BrokerId.Add(brokerId)", span="100-100"];
m38_43 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Invalid })", span="120-120"];
m38_44 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, -1, message))", span="121-121"];
m38_42 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var message = $''Order failed, Order Id: {order.Id} timestamp: {order.Time} quantity: {order.Quantity} content: {response.Content}''", span="119-119"];
m38_38 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="OnOrderEvent(new OrderEvent(order, DateTime.UtcNow, 0, ''GDAX Order Event'') { Status = OrderStatus.Submitted })", span="112-112"];
m38_45 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="UnlockStream()", span="123-123"];
m38_25 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="return true;", span="84-84"];
m38_37 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="FillSplit.TryAdd(order.Id, new GDAXFill(order))", span="109-109"];
m38_23 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, (int)response.StatusCode, errorMessage))", span="81-81"];
m38_29 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="OnMessage(new BrokerageMessageEvent(BrokerageMessageType.Warning, (int)response.StatusCode, errorMessage))", span="91-91"];
m38_30 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="UnlockStream()", span="93-93"];
m38_36 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="CachedOrderIDs.TryAdd(order.Id, order)", span="105-105"];
m38_35 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="order.BrokerId.Add(brokerId)", span="104-104"];
m38_46 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="return true;", span="124-124"];
m38_85 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="indicator.Update(tradebar)", span="188-188"];
m38_130 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="TestHelper.cs", label="Assert.AreEqual(0, indicator.Samples)", span="240-240"];
m38_18 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="response.StatusCode == HttpStatusCode.OK && response.Content != null", span="73-73"];
m38_88 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="customAssertion.Invoke(indicator, expected)", span="196-196"];
m38_89 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="Exit QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", span="155-155"];
m38_90 [cluster="string.Split(params char[])", file="TestHelper.cs", label="Entry string.Split(params char[])", span="0-0"];
m38_139 [cluster="lambda expression", file="TestHelper.cs", label="var currentDelta = Math.Abs((double) indicator.Current.Value - expected)", span="257-257"];
m38_138 [cluster="lambda expression", file="TestHelper.cs", label="Entry lambda expression", span="254-264"];
m38_140 [cluster="lambda expression", file="TestHelper.cs", label="currentDelta - delta > epsilon", span="258-258"];
m38_12 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="orderProperties != null", span="60-60"];
m38_142 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="TestHelper.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m38_11 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var orderProperties = order.Properties as GDAXOrderProperties", span="59-59"];
m38_13 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="order.Type == OrderType.Limit", span="62-62"];
m38_67 [cluster="Unk.Add", file="TestHelper.cs", label="Entry Unk.Add", span=""];
m38_69 [cluster="QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", file="TestHelper.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXFill.GDAXFill(QuantConnect.Orders.Order)", span="49-49"];
m38_19 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var raw = JsonConvert.DeserializeObject<Messages.Order>(response.Content)", span="75-75"];
m38_60 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="TestHelper.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="144-144"];
m38_62 [cluster="QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", file="TestHelper.cs", label="Entry QuantConnect.Brokerages.BrokerageMessageEvent.BrokerageMessageEvent(QuantConnect.Brokerages.BrokerageMessageType, int, string)", span="43-43"];
m38_20 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="raw?.Id == null", span="77-77"];
m38_50 [cluster="string.Trim()", file="TestHelper.cs", label="Entry string.Trim()", span="0-0"];
m38_65 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator<T>(T, string, string, System.Func<T, double>, double)", file="TestHelper.cs", label="TestIndicator(indicator, externalDataFilename, targetColumn, (i, expected) => Assert.AreEqual(expected, selector(indicator), epsilon, ''Failed at '' + i.Current.Time.ToString(''o'')))", span="145-145"];
m38_168 [cluster="Unk.Create", file="TestHelper.cs", label="Entry Unk.Create", span=""];
m38_93 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="TestHelper.cs", label="WebSocket.Close()", span="168-168"];
m38_74 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="File.ReadLines(Path.Combine(''TestData'', externalDataFilename))", span="160-160"];
m38_75 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="var parts = line.Split(',')", span="162-162"];
m38_76 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label=first, span="163-163"];
m38_82 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="targetIndex = i", span="171-171"];
m38_80 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="i < parts.Length", span="167-167"];
m38_83 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="i++", span="167-167"];
m38_77 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="fileHasVolume = parts[5].Trim() == ''Volume''", span="165-165"];
m38_78 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="first = false", span="166-166"];
m38_79 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="int i = 0", span="167-167"];
m38_81 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="parts[i].Trim() == targetColumn", span="169-169"];
m38_84 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="var tradebar = new TradeBar\r\n                {\r\n                    Time = Time.ParseDate(parts[0]),\r\n                    Open = parts[1].ToDecimal(),\r\n                    High = parts[2].ToDecimal(),\r\n                    Low = parts[3].ToDecimal(),\r\n                    Close = parts[4].ToDecimal(),\r\n                    Volume = fileHasVolume ? long.Parse(parts[5], NumberStyles.AllowExponent | NumberStyles.AllowDecimalPoint) : 0\r\n                }", span="178-186"];
m38_129 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="TestHelper.cs", label="Assert.AreEqual(DateTime.MinValue, indicator.Current.Time)", span="239-239"];
m38_70 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="132-132"];
m38_71 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="throw new NotSupportedException(''GDAXBrokerage.UpdateOrder: Order update not supported. Please cancel and re-create.'');", span="134-134"];
m38_72 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.UpdateOrder(QuantConnect.Orders.Order)", span="132-132"];
m38_86 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, string, string, System.Action<QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>, double>)", file="TestHelper.cs", label="!indicator.IsReady || parts[targetIndex].Trim() == string.Empty", span="190-190"];
m38_52 [cluster="decimal.Parse(string)", file="TestHelper.cs", label="Entry decimal.Parse(string)", span="0-0"];
m38_166 [cluster="Unk.GetConversionRate", file="TestHelper.cs", label="System.Collections.Generic.IReadOnlyDictionary<string, string>", span=""];
m38_64 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator<T>(T, string, string, System.Func<T, double>, double)", file="TestHelper.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator<T>(T, string, string, System.Func<T, double>, double)", span="142-142"];
m38_48 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", file="TestHelper.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.LockStream()", span="105-105"];
m38_164 [cluster="Cash.cstr", file="TestHelper.cs", label=double, span=""];
m38_0 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", span="40-40"];
m38_4 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="payload.size = Math.Abs(order.Quantity)", span="48-48"];
m38_5 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="payload.side = order.Direction.ToString().ToLower()", span="49-49"];
m38_3 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="dynamic payload = new ExpandoObject()", span="46-46"];
m38_6 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="payload.type = ConvertOrderType(order.Type)", span="50-50"];
m38_1 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="LockStream()", span="42-42"];
m38_2 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var req = new RestRequest(''/orders'', Method.POST)", span="44-44"];
m38_7 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.PlaceOrder(QuantConnect.Orders.Order)", file="TestHelper.cs", label="payload.price = (order as LimitOrder)?.LimitPrice ?? ((order as StopMarketOrder)?.StopPrice ?? 0)", span="51-51"];
m38_167 [cluster="Unk.ToUpper", file="TestHelper.cs", label="Entry Unk.ToUpper", span=""];
m38_169 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", file="TestHelper.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetTick(QuantConnect.Symbol)", span="441-441"];
m38_8 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", file="TestHelper.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(System.DateTime, decimal)", span="40-40"];
m38_15 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", file="TestHelper.cs", label="TestIndicator(indicator, ''spy_with_indicators.txt'', targetColumn, (i, expected) => Assert.AreEqual(expected, (double) i.Current.Value, epsilon))", span="59-59"];
m38_16 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", file="TestHelper.cs", label="Exit QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", span="57-57"];
m38_14 [cluster="QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", file="TestHelper.cs", label="Entry QuantConnect.Tests.Indicators.TestHelper.TestIndicator(QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, string, double)", span="57-57"];
m38_9 [cluster="System.DateTime.AddSeconds(double)", file="TestHelper.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m38_21 [cluster="Unk.AreEqual", file="TestHelper.cs", label="Entry Unk.AreEqual", span=""];
m38_47 [cluster="System.IO.Path.Combine(string, string)", file="TestHelper.cs", label="Entry System.IO.Path.Combine(string, string)", span="0-0"];
m38_95 [cluster="QuantConnect.Tests.Indicators.TestHelper.GetCsvFileStream(string)", file="TestHelper.cs", label="var enumerator = File.ReadLines(Path.Combine(''TestData'', externalDataFilename)).GetEnumerator()", span="202-202"];
m38_128 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertIndicatorIsInDefaultState<T>(QuantConnect.Indicators.IndicatorBase<T>)", file="TestHelper.cs", label="Assert.AreEqual(0m, indicator.Current.Value)", span="238-238"];
m38_56 [cluster="Unk.AddJsonBody", file="TestHelper.cs", label="Entry Unk.AddJsonBody", span=""];
m38_170 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="297-297"];
m38_171 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var gdaxOrderProperties = order.Properties as GDAXOrderProperties", span="299-299"];
m38_172 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="order.Type == OrderType.Limit && gdaxOrderProperties?.PostOnly == true", span="300-300"];
m38_175 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="order.BrokerId", span="307-307"];
m38_173 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="return 0m;", span="302-302"];
m38_174 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var totalFee = 0m", span="305-305"];
m38_182 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="totalFee += (decimal)fill.fill_fees", span="320-320"];
m38_183 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="return totalFee;", span="323-323"];
m38_176 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var req = new RestRequest(''/orders/'' + item, Method.GET)", span="309-309"];
m38_177 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="GetAuthenticationToken(req)", span="310-310"];
m38_178 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var response = ExecuteRestRequest(req, GdaxEndpointType.Private)", span="311-311"];
m38_179 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="response.StatusCode != HttpStatusCode.OK", span="313-313"];
m38_180 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="throw new Exception($''GDAXBrokerage.GetFee: request failed: [{(int)response.StatusCode}] {response.StatusDescription}, Content: {response.Content}, ErrorMessage: {response.ErrorMessage}'');", span="315-315"];
m38_181 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="var fill = JsonConvert.DeserializeObject<dynamic>(response.Content)", span="318-318"];
m38_184 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", file="TestHelper.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.GetFee(QuantConnect.Orders.Order)", span="297-297"];
m38_131 [cluster="QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", file="TestHelper.cs", label="Entry QuantConnect.Orders.StopMarketOrder.StopMarketOrder()", span="42-42"];
m38_132 [cluster="Unk.ConvertProductId", file="TestHelper.cs", label="Entry Unk.ConvertProductId", span=""];
m38_94 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="TestHelper.cs", label="Exit QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="164-164"];
m38_137 [cluster="QuantConnect.Tests.Indicators.TestHelper.AssertDeltaDecreases(double)", file="TestHelper.cs", label="Exit QuantConnect.Tests.Indicators.TestHelper.AssertDeltaDecreases(double)", span="251-251"];
m38_91 [cluster="QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", file="TestHelper.cs", label="Entry QuantConnect.Brokerages.GDAX.GDAXBrokerage.Disconnect()", span="164-164"];
m38_92 [cluster="string.ToDecimal()", file="TestHelper.cs", label="Entry string.ToDecimal()", span="155-155"];
m38_165 [cluster="Unk.Contains", file="TestHelper.cs", label=delta, span=""];
m38_190 [file="TestHelper.cs", label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", span=""];
m38_191 [file="TestHelper.cs", label=item, span=""];
m39_33 [cluster="System.Text.Encoding.GetBytes(string)", file="TestLiveTradingDataFeed.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m39_36 [cluster="System.Convert.ToBase64String(byte[])", file="TestLiveTradingDataFeed.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m39_38 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", file="TestLiveTradingDataFeed.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium)", span="51-51"];
m39_31 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="TestLiveTradingDataFeed.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m39_32 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", span="207-207"];
m39_50 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="var item = ''level''", span="209-209"];
m39_51 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label=dataTransformation, span="210-210"];
m39_52 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="IntrinioDataTransformation.Roc", span="212-212"];
m39_54 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="IntrinioDataTransformation.AnnualyRoc", span="215-215"];
m39_56 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="IntrinioDataTransformation.CompoundedAnnualRoc", span="218-218"];
m39_58 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="IntrinioDataTransformation.AnnualyCCRoc", span="221-221"];
m39_60 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="IntrinioDataTransformation.CCRoc", span="224-224"];
m39_62 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="IntrinioDataTransformation.Level", span="227-227"];
m39_64 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="IntrinioDataTransformation.Ln", span="230-230"];
m39_66 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="IntrinioDataTransformation.Pc", span="233-233"];
m39_68 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="IntrinioDataTransformation.AnnualyPc", span="236-236"];
m39_53 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="item = ''change''", span="213-213"];
m39_55 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="item = ''yr_change''", span="216-216"];
m39_57 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="item = ''c_annual_roc''", span="219-219"];
m39_59 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="item = ''cc_annual_roc''", span="222-222"];
m39_61 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="item = ''cc_roc''", span="225-225"];
m39_63 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="item = ''level''", span="228-228"];
m39_65 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="item = ''log''", span="231-231"];
m39_67 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="item = ''percent_change''", span="234-234"];
m39_69 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="item = ''yr_percent_change''", span="237-237"];
m39_70 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="return item;", span="240-240"];
m39_71 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetStringForDataTransformation(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", span="207-207"];
m39_2 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", span="100-100"];
m39_3 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="_dataTransformation = dataTransformation", span="102-102"];
m39_4 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", file="TestLiveTradingDataFeed.cs", label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData(QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation)", span="100-100"];
m39_0 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData()", file="TestLiveTradingDataFeed.cs", label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData()", span="92-92"];
m39_1 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData()", file="TestLiveTradingDataFeed.cs", label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.IntrinioEconomicData()", span="92-92"];
m39_35 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TestLiveTradingDataFeed.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m39_48 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="TestLiveTradingDataFeed.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m39_37 [cluster="QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="TestLiveTradingDataFeed.cs", label="Entry QuantConnect.Data.SubscriptionDataSource.SubscriptionDataSource(string, QuantConnect.SubscriptionTransportMedium, QuantConnect.Data.FileFormat, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="75-75"];
m39_47 [cluster="string.Split(params char[])", file="TestLiveTradingDataFeed.cs", label="Entry string.Split(params char[])", span="0-0"];
m39_30 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", file="TestLiveTradingDataFeed.cs", label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioConfig.SetUserAndPassword(string, string)", span="33-33"];
m39_39 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="191-191"];
m39_40 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var obs = line.Split(',')", span="193-193"];
m39_45 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="return new IntrinioEconomicData\r\n            {\r\n                Symbol = config.Symbol,\r\n                Time = time,\r\n                EndTime = time + QuantConnect.Time.OneDay,\r\n                Value = value\r\n            };", span="198-204"];
m39_41 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var time = DateTime.MinValue", span="194-194"];
m39_42 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="!DateTime.TryParseExact(obs[0], ''yyyy-MM-dd'', CultureInfo.InvariantCulture, DateTimeStyles.None,\r\n                                        out time)", span="195-196"];
m39_44 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var value = obs[1].ToDecimal()", span="197-197"];
m39_43 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="return null;", span="196-196"];
m39_46 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, bool)", span="191-191"];
m39_5 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="Entry QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="120-120"];
m39_6 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="!IntrinioConfig.IsInitialized", span="123-123"];
m39_16 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label=isLiveMode, span="146-146"];
m39_21 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var url = $''{_baseUrl}identifier={config.Symbol.Value}&item={item}&sort_order={order}''", span="160-160"];
m39_7 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var user = Config.Get(''intrinio-username'')", span="126-126"];
m39_12 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="SubscriptionDataSource subscription", span="138-138"];
m39_8 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var password = Config.Get(''intrinio-password'')", span="127-127"];
m39_9 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="IntrinioConfig.SetUserAndPassword(user, password)", span="128-128"];
m39_10 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="!IntrinioConfig.IsInitialized", span="131-131"];
m39_11 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="throw new InvalidOperationException(''Please set a valid Intrinio user and password using the 'IntrinioEconomicData.SetUserAndPassword' static method. '' +\r\n                    ''For local backtesting, the user and password can be set in the 'config.json' file.'');", span="133-134"];
m39_13 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var intrinioApiCallLimit = 1000 - (int)(DateTime.Now - LastIntrinoAPICall).TotalMilliseconds", span="139-139"];
m39_14 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="_firstTime || intrinioApiCallLimit > 0", span="143-143"];
m39_15 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var order = string.Empty", span="145-145"];
m39_26 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="subscription = new SubscriptionDataSource('''', SubscriptionTransportMedium.LocalFile)", span="174-174"];
m39_17 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="order = ''desc''", span="149-149"];
m39_18 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="order = ''asc''", span="154-154"];
m39_19 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="_firstTime = false", span="156-156"];
m39_20 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var item = GetStringForDataTransformation(_dataTransformation)", span="159-159"];
m39_22 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var byteKey = Encoding.ASCII.GetBytes($''{IntrinioConfig.User}:{IntrinioConfig.Password}'')", span="161-161"];
m39_24 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="subscription = new SubscriptionDataSource(url, SubscriptionTransportMedium.RemoteFile, FileFormat.Csv,\r\n                                                          authorizationHeaders)", span="168-169"];
m39_23 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="var authorizationHeaders = new List<KeyValuePair<string, string>>\r\n                {\r\n                    new KeyValuePair<string, string>(''Authorization'',\r\n                                                     $''Basic ({Convert.ToBase64String(byteKey)})'')\r\n                }", span="162-166"];
m39_25 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="LastIntrinoAPICall = DateTime.Now", span="170-170"];
m39_27 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="return subscription;", span="176-176"];
m39_28 [cluster="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", file="TestLiveTradingDataFeed.cs", label="Exit QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, bool)", span="120-120"];
m39_29 [cluster="QuantConnect.Configuration.Config.Get(string, string)", file="TestLiveTradingDataFeed.cs", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
m39_49 [cluster="string.ToDecimal()", file="TestLiveTradingDataFeed.cs", label="Entry string.ToDecimal()", span="250-250"];
m39_72 [file="TestLiveTradingDataFeed.cs", label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData", span=""];
m40_92 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="269-269"];
m40_93 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="var source = ''''", span="271-271"];
m40_95 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label=datafeed, span="274-274"];
m40_99 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="config.Security == SecurityType.Forex", span="281-281"];
m40_102 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="var symbol = String.IsNullOrEmpty(config.MappedSymbol) ? config.Symbol : config.MappedSymbol", span="286-286"];
m40_103 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="source = @''../../../Data/'' + config.Security.ToString().ToLower()", span="287-287"];
m40_104 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="source += @''/'' + config.Resolution.ToString().ToLower() + @''/'' + symbol.ToLower() + @''/''", span="288-288"];
m40_105 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="source += date.ToString(dateFormat) + ''_'' + dataType.ToString().ToLower() + ''.zip''", span="289-289"];
m40_94 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="var dataType = TickType.Trade", span="272-272"];
m40_96 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="DataFeedEndpoint.Backtesting", span="277-277"];
m40_106 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="DataFeedEndpoint.LiveTrading", span="293-293"];
m40_97 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="DataFeedEndpoint.FileSystem", span="278-278"];
m40_98 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="var dateFormat = ''yyyyMMdd''", span="280-280"];
m40_100 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="dataType = TickType.Quote", span="283-283"];
m40_101 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="dateFormat = ''yyMMdd''", span="284-284"];
m40_107 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="source = ''''", span="294-294"];
m40_108 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="return source;", span="297-297"];
m40_109 [cluster="QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.GetSource(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, QuantConnect.DataFeedEndpoint)", span="269-269"];
m40_12 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.Add(QuantConnect.Data.BaseData)", file="Tick.cs", label="_data.Add(data)", span="93-93"];
m40_13 [cluster="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.Add(QuantConnect.Data.BaseData)", file="Tick.cs", label="Exit QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket.Add(QuantConnect.Data.BaseData)", span="91-91"];
m40_14 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Tick.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m40_15 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket", span=""];
m40_16 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="AskPrice = original.AskPrice", span="119-119"];
m40_17 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Exchange = original.Exchange", span="120-120"];
m40_18 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="SaleCondition = original.SaleCondition", span="121-121"];
m40_19 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Quantity = original.Quantity", span="122-122"];
m40_20 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Suspicious = original.Suspicious", span="123-123"];
m40_21 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.Market.Tick)", span="114-114"];
m40_54 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="190-190"];
m40_55 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="var csv = line.Split(',')", span="194-194"];
m40_56 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="config.Security", span="197-197"];
m40_58 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Symbol = config.Symbol", span="200-200"];
m40_59 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Time = date.Date.AddMilliseconds(Convert.ToInt64(csv[0]))", span="201-201"];
m40_60 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Value = (csv[1].ToDecimal() / 10000m) * config.PriceScaleFactor", span="202-202"];
m40_69 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Symbol = config.Symbol", span="215-215"];
m40_63 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Quantity = Convert.ToInt32(csv[2])", span="205-205"];
m40_64 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="csv.Length > 3", span="206-206"];
m40_65 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Exchange = csv[3]", span="208-208"];
m40_66 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="SaleCondition = csv[4]", span="209-209"];
m40_67 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Suspicious = (csv[5] == ''1'')", span="210-210"];
m40_71 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Time = DateTime.ParseExact(csv[0], ''yyyyMMdd HH:mm:ss.ffff'', CultureInfo.InvariantCulture)", span="217-217"];
m40_72 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="BidPrice = csv[1].ToDecimal()", span="218-218"];
m40_73 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="AskPrice = csv[2].ToDecimal()", span="219-219"];
m40_57 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="SecurityType.Equity", span="199-199"];
m40_68 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="SecurityType.Forex", span="214-214"];
m40_61 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="203-203"];
m40_62 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="TickType = TickType.Trade", span="204-204"];
m40_75 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label=Exception, span="224-224"];
m40_70 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="TickType = TickType.Quote", span="216-216"];
m40_74 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Value = BidPrice + (AskPrice - BidPrice) / 2", span="220-220"];
m40_76 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Log.Error(''Error Generating Tick: '' + err.Message)", span="226-226"];
m40_77 [cluster="QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="190-190"];
m40_6 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Quantity = 0", span="104-104"];
m40_7 [cluster="QuantConnect.Data.Market.Tick.Tick()", color=green, community=0, file="Tick.cs", label="3: Exchange = ''''", span="105-105"];
m40_8 [cluster="QuantConnect.Data.Market.Tick.Tick()", color=green, community=0, file="Tick.cs", label="2: SaleCondition = ''''", span="106-106"];
m40_9 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Suspicious = false", span="107-107"];
m40_10 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick()", span="97-97"];
m40_0 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick()", span="97-97"];
m40_1 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Value = 0", span="99-99"];
m40_2 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Time = new DateTime()", span="100-100"];
m40_3 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="DataType = MarketDataType.Tick", span="101-101"];
m40_4 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="Symbol = ''''", span="102-102"];
m40_51 [cluster="string.Split(params char[])", file="Tick.cs", label="Entry string.Split(params char[])", span="0-0"];
m40_81 [cluster="System.Convert.ToInt32(string)", file="Tick.cs", label="Entry System.Convert.ToInt32(string)", span="0-0"];
m40_32 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", span="154-154"];
m40_33 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="156-156"];
m40_34 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="Time = time", span="157-157"];
m40_35 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="Symbol = symbol", span="158-158"];
m40_36 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="Value = last", span="159-159"];
m40_38 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="BidPrice = bid", span="161-161"];
m40_39 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="AskPrice = ask", span="162-162"];
m40_37 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="TickType = TickType.Quote", span="160-160"];
m40_40 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal, decimal)", span="154-154"];
m40_22 [cluster="System.DateTime.DateTime(long)", file="Tick.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m40_79 [cluster="System.DateTime.AddMilliseconds(double)", file="Tick.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m40_82 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Tick.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="86-86"];
m40_83 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="241-241"];
m40_84 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="var _tick = new Tick()", span="243-243"];
m40_85 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label=datafeed, span="246-246"];
m40_88 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="_tick = new Tick(config, line, date, datafeed)", span="252-252"];
m40_86 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="DataFeedEndpoint.FileSystem", span="249-249"];
m40_89 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="DataFeedEndpoint.LiveTrading", span="254-254"];
m40_87 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="DataFeedEndpoint.Backtesting", span="250-250"];
m40_90 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="return _tick;", span="258-258"];
m40_91 [cluster="QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Reader(QuantConnect.Data.SubscriptionDataConfig, string, System.DateTime, QuantConnect.DataFeedEndpoint)", span="241-241"];
m40_23 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", span="134-134"];
m40_24 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="136-136"];
m40_25 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="Time = time", span="137-137"];
m40_26 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="Symbol = symbol", span="138-138"];
m40_27 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="Value = bid + (ask - bid) / 2", span="139-139"];
m40_29 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="BidPrice = bid", span="141-141"];
m40_30 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="AskPrice = ask", span="142-142"];
m40_28 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="TickType = TickType.Quote", span="140-140"];
m40_31 [cluster="QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(System.DateTime, string, decimal, decimal)", span="134-134"];
m40_113 [cluster="System.DateTime.ToString(string)", file="Tick.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m40_114 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", span="308-308"];
m40_115 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="Value = lastTrade", span="310-310"];
m40_116 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="BidPrice = bidPrice", span="311-311"];
m40_117 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="AskPrice = askPrice", span="312-312"];
m40_118 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="Quantity = Convert.ToInt32(volume)", span="313-313"];
m40_119 [cluster="QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Update(decimal, decimal, decimal, decimal)", span="308-308"];
m40_112 [cluster="string.ToLower()", file="Tick.cs", label="Entry string.ToLower()", span="0-0"];
m40_52 [cluster="System.DateTime.ParseExact(string, string, System.IFormatProvider)", file="Tick.cs", label="Entry System.DateTime.ParseExact(string, string, System.IFormatProvider)", span="0-0"];
m40_111 [cluster="System.Enum.ToString()", file="Tick.cs", label="Entry System.Enum.ToString()", span="0-0"];
m40_80 [cluster="string.ToDecimal()", file="Tick.cs", label="Entry string.ToDecimal()", span="155-155"];
m40_120 [cluster="System.Convert.ToInt32(decimal)", file="Tick.cs", label="Entry System.Convert.ToInt32(decimal)", span="0-0"];
m40_78 [cluster="System.Convert.ToInt64(string)", file="Tick.cs", label="Entry System.Convert.ToInt64(string)", span="0-0"];
m40_110 [cluster="string.IsNullOrEmpty(string)", file="Tick.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m40_11 [cluster="System.DateTime.DateTime()", file="Tick.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m40_41 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Tick(string, string)", span="170-170"];
m40_42 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="var csv = line.Split(',')", span="172-172"];
m40_44 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="Symbol = symbol", span="174-174"];
m40_43 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="DataType = MarketDataType.Tick", span="173-173"];
m40_45 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="Time = DateTime.ParseExact(csv[0], ''yyyyMMdd HH:mm:ss.ffff'', CultureInfo.InvariantCulture)", span="175-175"];
m40_48 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="BidPrice = Convert.ToDecimal(csv[1], CultureInfo.InvariantCulture)", span="178-178"];
m40_49 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="AskPrice = Convert.ToDecimal(csv[2], CultureInfo.InvariantCulture)", span="179-179"];
m40_46 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="Value = BidPrice + (AskPrice - BidPrice) / 2", span="176-176"];
m40_47 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="TickType = TickType.Quote", span="177-177"];
m40_50 [cluster="QuantConnect.Data.Market.Tick.Tick(string, string)", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Tick(string, string)", span="170-170"];
m40_5 [cluster="QuantConnect.Data.Market.Tick.Tick()", file="Tick.cs", label="TickType = TickType.Trade", span="103-103"];
m40_121 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="Entry QuantConnect.Data.Market.Tick.Clone()", span="321-321"];
m40_122 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="return new Tick(this);", span="323-323"];
m40_123 [cluster="QuantConnect.Data.Market.Tick.Clone()", file="Tick.cs", label="Exit QuantConnect.Data.Market.Tick.Clone()", span="321-321"];
m40_53 [cluster="System.Convert.ToDecimal(string, System.IFormatProvider)", file="Tick.cs", label="Entry System.Convert.ToDecimal(string, System.IFormatProvider)", span="0-0"];
m40_124 [file="Tick.cs", label="QuantConnect.Data.Market.Tick", span=""];
n0 -> n1  [key=0, style=solid];
n0 -> n4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
n0 -> n5  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n0 -> n7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
n0 -> n9  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n0 -> n11  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Setup.ISetupHandler", style=dashed];
n0 -> n12  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n13  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n14  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n15  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
n0 -> n29  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n37  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
n0 -> n44  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.RealTime.IRealTimeHandler", style=dashed];
n0 -> n46  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n48  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n0 -> n49  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n50  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n51  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n53  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n60  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.IDataFeed", style=dashed];
n0 -> n62  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n94  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n102  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n104  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n111  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n113  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n119  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler", style=dashed];
n0 -> n121  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n0 -> n123  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n129  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n0 -> n132  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n133  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n0 -> n134  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n0 -> n137  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Results.IResultHandler", style=dashed];
n0 -> n138  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n0 -> n141  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n0 -> n142  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n0 -> n143  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
n0 -> n144  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n145  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n0 -> n146  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n1  [color=darkorchid, key=3, label="Local variable bool backwardsCompatibilityMode", style=bold];
n4 -> n5  [key=0, style=solid];
n4 -> n47  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
n4 -> n49  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
n4 -> n146  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
n5 -> n6  [key=0, style=solid];
n5 -> n43  [color=darkseagreen4, key=1, label=backtestMode, style=dashed];
n7 -> n8  [color=red, key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n149  [key=2, style=dotted];
n12 -> n150  [key=2, style=dotted];
n12 -> n18  [color=darkseagreen4, key=1, label=oldTradeBarsMethodInfo, style=dashed];
n12 -> n19  [color=darkseagreen4, key=1, label=oldTradeBarsMethodInfo, style=dashed];
n12 -> n20  [color=darkseagreen4, key=1, label=oldTradeBarsMethodInfo, style=dashed];
n12 -> n101  [color=darkseagreen4, key=1, label=oldTradeBarsMethodInfo, style=dashed];
n13 -> n14  [key=0, style=solid];
n13 -> n149  [key=2, style=dotted];
n13 -> n150  [key=2, style=dotted];
n13 -> n21  [color=darkseagreen4, key=1, label=oldTicksMethodInfo, style=dashed];
n13 -> n103  [color=darkseagreen4, key=1, label=oldTicksMethodInfo, style=dashed];
n14 -> n15  [key=0, style=solid];
n14 -> n149  [key=2, style=dotted];
n14 -> n150  [key=2, style=dotted];
n14 -> n16  [color=darkseagreen4, key=1, label=newTradeBarsMethodInfo, style=dashed];
n14 -> n23  [color=darkseagreen4, key=1, label=newTradeBarsMethodInfo, style=dashed];
n14 -> n24  [color=darkseagreen4, key=1, label=newTradeBarsMethodInfo, style=dashed];
n14 -> n110  [color=darkseagreen4, key=1, label=newTradeBarsMethodInfo, style=dashed];
n15 -> n16  [key=0, style=solid];
n15 -> n149  [key=2, style=dotted];
n15 -> n150  [key=2, style=dotted];
n15 -> n25  [color=darkseagreen4, key=1, label=newTicksMethodInfo, style=dashed];
n15 -> n26  [color=darkseagreen4, key=1, label=newTicksMethodInfo, style=dashed];
n15 -> n112  [color=darkseagreen4, key=1, label=newTicksMethodInfo, style=dashed];
n27 -> n28  [key=0, style=solid];
n27 -> n36  [key=0, style=solid];
n27 -> n29  [color=darkseagreen4, key=1, label=config, style=dashed];
n27 -> n30  [color=darkseagreen4, key=1, label=config, style=dashed];
n27 -> n32  [color=red, key=1, label=config, style=dashed];
n27 -> n35  [color=darkseagreen4, key=1, label=config, style=dashed];
n29 -> n30  [key=0, style=solid];
n29 -> n149  [key=2, style=dotted];
n29 -> n150  [key=2, style=dotted];
n29 -> n31  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n29 -> n35  [color=darkseagreen4, key=1, label=genericMethod, style=dashed];
n37 -> n38  [key=0, style=solid];
n37 -> n122  [key=0, style=solid];
n37 -> n156  [key=2, style=dotted];
n37 -> n39  [color=darkseagreen4, key=1, label=newData, style=dashed];
n37 -> n58  [color=darkseagreen4, key=1, label=newData, style=dashed];
n37 -> n59  [color=darkseagreen4, key=1, label=newData, style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n157  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n158  [key=2, style=dotted];
n46 -> n159  [key=2, style=dotted];
n48 -> n50  [key=0, style=solid];
n48 -> n160  [key=2, style=dotted];
n49 -> n50  [key=0, style=solid];
n49 -> n158  [key=2, style=dotted];
n49 -> n160  [key=2, style=dotted];
n50 -> n51  [key=0, style=solid];
n50 -> n146  [color=darkseagreen4, key=1, label=startingPortfolioValue, style=dashed];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [key=0, style=solid];
n51 -> n161  [key=2, style=dotted];
n53 -> n54  [key=0, style=solid];
n53 -> n162  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n64  [color=darkseagreen4, key=1, label=config, style=dashed];
n60 -> n65  [color=darkseagreen4, key=1, label=config, style=dashed];
n60 -> n72  [color=darkseagreen4, key=1, label=config, style=dashed];
n60 -> n94  [color=darkseagreen4, key=1, label=config, style=dashed];
n62 -> n63  [key=0, style=solid];
n62 -> n165  [key=2, style=dotted];
n94 -> n95  [key=0, style=solid];
n94 -> n61  [key=0, style=solid];
n94 -> n177  [key=2, style=dotted];
n102 -> n103  [key=0, style=solid];
n102 -> n177  [key=2, style=dotted];
n104 -> n105  [key=0, style=solid];
n104 -> n119  [key=0, style=solid];
n104 -> n177  [key=2, style=dotted];
n111 -> n112  [key=0, style=solid];
n111 -> n177  [key=2, style=dotted];
n113 -> n114  [key=0, style=solid];
n113 -> n119  [key=0, style=solid];
n113 -> n177  [key=2, style=dotted];
n119 -> n120  [key=0, style=solid];
n119 -> n178  [key=2, style=dotted];
n121 -> n39  [key=0, style=solid];
n121 -> n179  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n129  [key=0, style=solid];
n123 -> n181  [key=2, style=dotted];
n129 -> n130  [key=0, style=solid];
n129 -> n179  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n132 -> n183  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n184  [key=2, style=dotted];
n134 -> n135  [key=0, style=solid];
n134 -> n185  [key=2, style=dotted];
n137 -> n138  [key=0, style=solid];
n137 -> n184  [key=2, style=dotted];
n138 -> n139  [key=0, style=solid];
n138 -> n185  [key=2, style=dotted];
n141 -> n142  [key=0, style=solid];
n141 -> n186  [key=2, style=dotted];
n142 -> n143  [key=0, style=solid];
n142 -> n185  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n185  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n187  [key=2, style=dotted];
n144 -> n188  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n158  [key=2, style=dotted];
n145 -> n159  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n146 -> n158  [key=2, style=dotted];
n146 -> n160  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n14  [color=darkseagreen4, key=1, label=tradebarsType, style=dashed];
n2 -> n19  [color=darkseagreen4, key=1, label=tradebarsType, style=dashed];
n2 -> n24  [color=darkseagreen4, key=1, label=tradebarsType, style=dashed];
n2 -> n102  [color=darkseagreen4, key=1, label=tradebarsType, style=dashed];
n2 -> n111  [color=darkseagreen4, key=1, label=tradebarsType, style=dashed];
n3 -> n4  [key=0, style=solid];
n3 -> n15  [color=darkseagreen4, key=1, label=ticksType, style=dashed];
n3 -> n21  [color=darkseagreen4, key=1, label=ticksType, style=dashed];
n3 -> n26  [color=darkseagreen4, key=1, label=ticksType, style=dashed];
n3 -> n104  [color=darkseagreen4, key=1, label=ticksType, style=dashed];
n3 -> n113  [color=darkseagreen4, key=1, label=ticksType, style=dashed];
n19 -> n20  [key=0, style=solid];
n19 -> n151  [key=2, style=dotted];
n19 -> n152  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n151  [key=2, style=dotted];
n24 -> n152  [key=2, style=dotted];
n21 -> n27  [key=0, style=solid];
n21 -> n151  [key=2, style=dotted];
n21 -> n152  [key=2, style=dotted];
n26 -> n27  [key=0, style=solid];
n26 -> n151  [key=2, style=dotted];
n26 -> n152  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n49  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n148  [key=2, style=dotted];
n6 -> n19  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n6 -> n21  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n6 -> n24  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n6 -> n26  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n6 -> n30  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n6 -> n35  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n6 -> n94  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n6 -> n102  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n6 -> n104  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n6 -> n111  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n6 -> n113  [color=darkseagreen4, key=1, label=methodInvokers, style=dashed];
n43 -> n44  [key=0, style=solid];
n43 -> n51  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n27  [key=0, style=solid];
n30 -> n153  [key=2, style=dotted];
n35 -> n27  [key=0, style=solid];
n35 -> n151  [key=2, style=dotted];
n35 -> n152  [key=2, style=dotted];
n8 -> n9  [color=red, key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n20 -> n27  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n101 -> n103  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n103 -> n105  [key=0, style=solid];
n103 -> n119  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n22  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=0, style=solid];
n110 -> n111  [key=0, style=solid];
n110 -> n112  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n112 -> n114  [key=0, style=solid];
n112 -> n119  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n76  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
n17 -> n87  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
n17 -> n100  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
n22 -> n23  [key=0, style=solid];
n22 -> n76  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
n22 -> n87  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
n22 -> n100  [color=darkseagreen4, key=1, label=backwardsCompatibilityMode, style=dashed];
n76 -> n77  [key=0, style=solid];
n76 -> n79  [key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n87 -> n91  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n110  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n27  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n155  [key=2, style=dotted];
n32 -> n33  [color=red, key=0, style=solid];
n32 -> n154  [color=red, key=2, style=dotted];
n31 -> n32  [color=red, key=0, style=solid];
n31 -> n35  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n34 -> n147  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n38 -> n122  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n180  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n37  [key=0, style=solid];
n39 -> n44  [color=darkseagreen4, key=1, label=time, style=dashed];
n39 -> n45  [color=darkseagreen4, key=1, label=time, style=dashed];
n39 -> n53  [color=darkseagreen4, key=1, label=time, style=dashed];
n39 -> n56  [color=darkseagreen4, key=1, label=time, style=dashed];
n39 -> n57  [color=darkseagreen4, key=1, label=time, style=dashed];
n39 -> n58  [color=darkseagreen4, key=1, label=time, style=dashed];
n39 -> n59  [color=darkseagreen4, key=1, label=time, style=dashed];
n39 -> n62  [color=darkseagreen4, key=1, label=time, style=dashed];
n39 -> n82  [color=darkseagreen4, key=1, label=time, style=dashed];
n39 -> n83  [color=darkseagreen4, key=1, label=time, style=dashed];
n39 -> n120  [color=darkseagreen4, key=1, label=time, style=dashed];
n58 -> n59  [key=0, style=solid];
n58 -> n100  [key=0, style=solid];
n58 -> n60  [color=darkseagreen4, key=1, label=i, style=dashed];
n59 -> n60  [key=0, style=solid];
n59 -> n61  [color=darkseagreen4, key=1, label=dataPoints, style=dashed];
n40 -> n41  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n45 -> n51  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n56 -> n163  [key=2, style=dotted];
n56 -> n79  [color=darkseagreen4, key=1, label=newBars, style=dashed];
n56 -> n80  [color=darkseagreen4, key=1, label=newBars, style=dashed];
n56 -> n83  [color=darkseagreen4, key=1, label=newBars, style=dashed];
n56 -> n110  [color=darkseagreen4, key=1, label=newBars, style=dashed];
n56 -> n111  [color=darkseagreen4, key=1, label=newBars, style=dashed];
n57 -> n58  [key=0, style=solid];
n57 -> n164  [key=2, style=dotted];
n57 -> n91  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
n57 -> n92  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
n57 -> n93  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
n57 -> n112  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
n57 -> n113  [color=darkseagreen4, key=1, label=newTicks, style=dashed];
n82 -> n83  [key=0, style=solid];
n82 -> n171  [key=2, style=dotted];
n82 -> n172  [key=2, style=dotted];
n82 -> n167  [key=2, style=dotted];
n83 -> n61  [key=0, style=solid];
n83 -> n171  [key=2, style=dotted];
n83 -> n167  [key=2, style=dotted];
n120 -> n121  [key=0, style=solid];
n41 -> n42  [key=0, style=solid];
n41 -> n43  [key=0, style=solid];
n42 -> n147  [key=0, style=solid];
n52 -> n37  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n54 -> n148  [key=2, style=dotted];
n54 -> n77  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
n54 -> n78  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
n54 -> n101  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
n54 -> n102  [color=darkseagreen4, key=1, label=oldBars, style=dashed];
n55 -> n56  [key=0, style=solid];
n55 -> n148  [key=2, style=dotted];
n55 -> n88  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
n55 -> n89  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
n55 -> n90  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
n55 -> n103  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
n55 -> n104  [color=darkseagreen4, key=1, label=oldTicks, style=dashed];
n77 -> n78  [key=0, style=solid];
n77 -> n81  [key=0, style=solid];
n77 -> n61  [key=0, style=solid];
n77 -> n153  [key=2, style=dotted];
n78 -> n81  [key=0, style=solid];
n78 -> n61  [key=0, style=solid];
n78 -> n168  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n90  [key=0, style=solid];
n88 -> n153  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n173  [key=2, style=dotted];
n89 -> n168  [key=2, style=dotted];
n90 -> n61  [key=0, style=solid];
n90 -> n174  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n81  [key=0, style=solid];
n79 -> n61  [key=0, style=solid];
n79 -> n169  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n61  [key=0, style=solid];
n80 -> n170  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n93  [key=0, style=solid];
n91 -> n175  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n173  [key=2, style=dotted];
n92 -> n176  [key=2, style=dotted];
n93 -> n61  [key=0, style=solid];
n93 -> n174  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n61 -> n58  [key=0, style=solid];
n61 -> n65  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n61 -> n74  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n61 -> n85  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n61 -> n94  [color=darkseagreen4, key=1, label=dataPoint, style=dashed];
n64 -> n65  [key=0, style=solid];
n64 -> n67  [key=0, style=solid];
n64 -> n72  [key=0, style=solid];
n64 -> n48  [color=darkorchid, key=3, label="Local variable int j", style=bold];
n65 -> n66  [key=0, style=solid];
n65 -> n166  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n84  [key=0, style=solid];
n72 -> n94  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n74 -> n77  [color=darkseagreen4, key=1, label=bar, style=dashed];
n74 -> n78  [color=darkseagreen4, key=1, label=bar, style=dashed];
n74 -> n79  [color=darkseagreen4, key=1, label=bar, style=dashed];
n74 -> n80  [color=darkseagreen4, key=1, label=bar, style=dashed];
n74 -> n82  [color=darkseagreen4, key=1, label=bar, style=dashed];
n74 -> n83  [color=darkseagreen4, key=1, label=bar, style=dashed];
n85 -> n86  [key=0, style=solid];
n85 -> n88  [color=darkseagreen4, key=1, label=tick, style=dashed];
n85 -> n89  [color=darkseagreen4, key=1, label=tick, style=dashed];
n85 -> n90  [color=darkseagreen4, key=1, label=tick, style=dashed];
n85 -> n91  [color=darkseagreen4, key=1, label=tick, style=dashed];
n85 -> n92  [color=darkseagreen4, key=1, label=tick, style=dashed];
n85 -> n93  [color=darkseagreen4, key=1, label=tick, style=dashed];
n63 -> n64  [key=0, style=solid];
n63 -> n65  [color=darkseagreen4, key=1, label=j, style=dashed];
n63 -> n66  [color=darkseagreen4, key=1, label=j, style=dashed];
n66 -> n64  [key=0, style=solid];
n66 -> n66  [color=darkseagreen4, key=1, label=j, style=dashed];
n67 -> n68  [color=red, key=0, style=solid];
n68 -> n69  [color=red, key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n70 -> n167  [key=2, style=dotted];
n71 -> n147  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n81  [key=0, style=solid];
n75 -> n61  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n61  [key=0, style=solid];
n95 -> n96  [color=red, key=0, style=solid];
n96 -> n97  [color=red, key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n98 -> n155  [key=2, style=dotted];
n99 -> n147  [key=0, style=solid];
n105 -> n106  [color=red, key=0, style=solid];
n106 -> n107  [color=red, key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n108 -> n109  [key=0, style=solid];
n108 -> n155  [key=2, style=dotted];
n109 -> n147  [key=0, style=solid];
n114 -> n115  [color=red, key=0, style=solid];
n115 -> n116  [color=red, key=0, style=solid];
n116 -> n117  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n117 -> n155  [key=2, style=dotted];
n118 -> n147  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n125 -> n126  [color=red, key=0, style=solid];
n126 -> n127  [color=red, key=0, style=solid];
n126 -> n182  [color=red, key=2, style=dotted];
n127 -> n128  [key=0, style=solid];
n127 -> n155  [key=2, style=dotted];
n128 -> n147  [key=0, style=solid];
n130 -> n131  [key=0, style=solid];
n130 -> n135  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n131 -> n180  [key=2, style=dotted];
n135 -> n136  [key=0, style=solid];
n135 -> n139  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n136 -> n180  [key=2, style=dotted];
n139 -> n140  [key=0, style=solid];
n139 -> n143  [key=0, style=solid];
n140 -> n141  [key=0, style=solid];
n140 -> n180  [key=2, style=dotted];
n147 -> n0  [color=blue, key=0, style=bold];
n189 -> n190  [key=0, style=solid];
n190 -> n191  [color=red, key=0, style=solid];
n190 -> n195  [key=2, style=dotted];
n191 -> n192  [color=red, key=0, style=solid];
n192 -> n193  [key=0, style=solid];
n193 -> n194  [key=0, style=solid];
n194 -> n189  [color=blue, key=0, style=bold];
n196 -> n197  [key=0, style=solid];
n196 -> n198  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmStatus", style=dashed];
n197 -> n198  [key=0, style=solid];
n198 -> n199  [key=0, style=solid];
n199 -> n196  [color=blue, key=0, style=bold];
m0_18 -> m0_11  [color=green, key=3, label="method methodReturn bool CancelOrder", style=bold];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_18  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> m0_11  [color=green, key=3, label="method methodReturn bool PlaceOrder", style=bold];
m0_9 -> m0_10  [color=green, key=0, style=solid];
m0_9 -> m0_11  [color=green, key=0, style=solid];
m0_10 -> m0_12  [color=green, key=0, style=solid];
m0_11 -> m0_12  [color=green, key=0, style=solid];
m0_12 -> m0_8  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_4  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_13 -> m0_11  [color=green, key=3, label="method methodReturn bool UpdateOrder", style=bold];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_14 -> m0_16  [color=green, key=0, style=solid];
m0_15 -> m0_17  [color=green, key=0, style=solid];
m0_16 -> m0_17  [color=green, key=0, style=solid];
m0_17 -> m0_13  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_32 -> m0_39  [color=green, key=0, style=solid];
m0_32 -> m0_44  [color=green, key=0, style=solid];
m0_32 -> m0_49  [color=green, key=2, style=dotted];
m0_25 -> m0_32  [color=green, key=1, label=order, style=dashed];
m0_25 -> m0_34  [color=green, key=1, label=order, style=dashed];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_46  [key=0, style=solid];
m0_25 -> m0_29  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_25 -> m0_30  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_25 -> m0_36  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_25 -> m0_38  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_25 -> m0_41  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_25 -> m0_42  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_25 -> m0_44  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_29 -> m0_32  [color=green, key=1, label=model, style=dashed];
m0_29 -> m0_34  [color=green, key=1, label=model, style=dashed];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_36  [color=darkseagreen4, key=1, label=model, style=dashed];
m0_29 -> m0_38  [color=darkseagreen4, key=1, label=model, style=dashed];
m0_31 -> m0_32  [color=green, key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_44 -> m0_25  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_34 -> m0_39  [color=green, key=0, style=solid];
m0_34 -> m0_44  [color=green, key=0, style=solid];
m0_34 -> m0_50  [color=green, key=2, style=dotted];
m0_33 -> m0_34  [color=green, key=0, style=solid];
m0_30 -> m0_31  [color=green, key=0, style=solid];
m0_30 -> m0_33  [color=green, key=0, style=solid];
m0_30 -> m0_35  [key=0, style=solid];
m0_30 -> m0_37  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_24  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_47  [key=2, style=dotted];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=sufficientBuyingPower, style=dashed];
m0_36 -> m0_39  [key=0, style=solid];
m0_36 -> m0_44  [key=0, style=solid];
m0_36 -> m0_51  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_44  [key=0, style=solid];
m0_38 -> m0_52  [key=2, style=dotted];
m0_38 -> m0_45  [color=darkseagreen4, key=1, label=fill, style=dashed];
m0_41 -> m0_44  [key=0, style=solid];
m0_41 -> m0_54  [key=2, style=dotted];
m0_41 -> m0_55  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_54  [key=2, style=dotted];
m0_43 -> m0_55  [key=2, style=dotted];
m0_45 -> m0_25  [key=0, style=solid];
m0_45 -> m0_56  [key=2, style=dotted];
m0_42 -> m0_44  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_42  [color=darkseagreen4, key=1, label=order, style=dashed];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_42  [key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> n167  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_27 -> m0_45  [color=darkseagreen4, key=1, label=fill, style=dashed];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_48  [key=2, style=dotted];
m0_46 -> m0_23  [color=blue, key=0, style=bold];
m0_61 -> m0_32  [color=green, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_34  [color=green, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_2  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_5  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_6  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_26  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_36  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_41  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_43  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m0_61 -> m0_45  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.Backtesting.BacktestingBrokerage", style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_12  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=2, style=dotted];
m1_16 -> m1_14  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [color=red, key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_3 -> m1_6  [color=red, key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=line, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_6  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_7  [color=blue, key=0, style=bold];
m1_18 -> m1_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.EnumerableStreamReader", style=dashed];
m1_18 -> m1_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.EnumerableStreamReader", style=dashed];
m1_18 -> m1_3  [color=red, key=1, label="QuantConnect.Lean.Engine.EnumerableStreamReader", style=dashed];
m1_18 -> m1_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.EnumerableStreamReader", style=dashed];
m1_18 -> m1_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.EnumerableStreamReader", style=dashed];
m1_18 -> m1_15  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.EnumerableStreamReader", style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_6  [key=2, style=dotted];
m3_5 -> m3_0  [color=blue, key=0, style=bold];
m5_16 -> m5_17  [key=0, style=solid];
m5_92 -> m5_93  [key=0, style=solid];
m5_92 -> m5_95  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m5_92 -> m5_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_92 -> m5_102  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_92 -> m5_103  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_92 -> m5_104  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_92 -> m5_105  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_93 -> m5_94  [key=0, style=solid];
m5_95 -> m5_96  [key=0, style=solid];
m5_95 -> m5_106  [key=0, style=solid];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_102  [key=0, style=solid];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_110  [key=2, style=dotted];
m5_102 -> m5_104  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m5_103 -> m5_104  [key=0, style=solid];
m5_103 -> m5_111  [key=2, style=dotted];
m5_103 -> m5_112  [key=2, style=dotted];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_111  [key=2, style=dotted];
m5_104 -> m5_112  [key=2, style=dotted];
m5_104 -> m5_104  [color=darkseagreen4, key=1, label=source, style=dashed];
m5_105 -> m5_108  [key=0, style=solid];
m5_105 -> m5_113  [key=2, style=dotted];
m5_105 -> m5_111  [key=2, style=dotted];
m5_105 -> m5_112  [key=2, style=dotted];
m5_105 -> m5_105  [color=darkseagreen4, key=1, label=source, style=dashed];
m5_94 -> m5_95  [key=0, style=solid];
m5_94 -> m5_105  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m5_96 -> m5_97  [key=0, style=solid];
m5_106 -> m5_107  [key=0, style=solid];
m5_97 -> m5_98  [key=0, style=solid];
m5_98 -> m5_99  [key=0, style=solid];
m5_98 -> m5_105  [color=darkseagreen4, key=1, label=dateFormat, style=dashed];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_105  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m5_101 -> m5_102  [key=0, style=solid];
m5_101 -> m5_105  [color=darkseagreen4, key=1, label=dateFormat, style=dashed];
m5_107 -> m5_108  [key=0, style=solid];
m5_108 -> m5_109  [key=0, style=solid];
m5_109 -> m5_92  [color=blue, key=0, style=bold];
m5_109 -> m5_43  [color=blue, key=0, style=bold];
m5_110 -> m5_111  [key=0, style=solid];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_113  [key=2, style=dotted];
m5_112 -> m5_110  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_12 -> m5_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_12 -> m5_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_12 -> m5_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_12 -> m5_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_12 -> m5_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_12 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_6  [color=blue, key=0, style=bold];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_22  [key=2, style=dotted];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_19  [key=0, style=solid];
m5_15 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m5_15 -> m5_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m5_15 -> m5_22  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m5_15 -> m5_23  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m5_15 -> m5_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m5_15 -> m5_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m5_15 -> m5_47  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_23  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_19 -> m5_19  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_19 -> m5_32  [key=2, style=dotted];
m5_19 -> m5_28  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_19 -> m5_55  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_19 -> m5_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_19 -> m5_30  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_23  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_20 -> m5_20  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_20 -> m5_32  [key=2, style=dotted];
m5_20 -> m5_26  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_20 -> m5_27  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_20 -> m5_28  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_20 -> m5_53  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_20 -> m5_29  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_20 -> m5_30  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_21 -> m5_12  [color=blue, key=0, style=bold];
m5_21 -> m5_23  [color=darkseagreen4, key=1, label=config, style=dashed];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_33  [key=2, style=dotted];
m5_21 -> m5_26  [color=darkseagreen4, key=1, label=config, style=dashed];
m5_21 -> m5_28  [color=darkseagreen4, key=1, label=config, style=dashed];
m5_21 -> m5_51  [color=darkseagreen4, key=1, label=config, style=dashed];
m5_21 -> m5_30  [color=darkseagreen4, key=1, label=config, style=dashed];
m5_39 -> m5_40  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_54 -> m5_58  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_54 -> m5_59  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_54 -> m5_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_54 -> m5_69  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_51  [key=2, style=dotted];
m5_55 -> m5_59  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_55 -> m5_60  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_55 -> m5_63  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_55 -> m5_64  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_55 -> m5_65  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_55 -> m5_66  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_55 -> m5_67  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_55 -> m5_71  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_55 -> m5_72  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_55 -> m5_73  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_56 -> m5_57  [key=0, style=solid];
m5_56 -> m5_68  [key=0, style=solid];
m5_56 -> m5_50  [color=blue, key=0, style=bold];
m5_58 -> m5_59  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_78  [key=2, style=dotted];
m5_59 -> m5_79  [key=2, style=dotted];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_80  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_63 -> m5_64  [key=0, style=solid];
m5_63 -> m5_81  [key=2, style=dotted];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_75  [key=0, style=solid];
m5_64 -> m5_77  [key=0, style=solid];
m5_65 -> m5_66  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_67 -> m5_75  [key=0, style=solid];
m5_67 -> m5_77  [key=0, style=solid];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_52  [key=2, style=dotted];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_80  [key=2, style=dotted];
m5_73 -> m5_74  [key=0, style=solid];
m5_73 -> m5_80  [key=2, style=dotted];
m5_57 -> m5_58  [key=0, style=solid];
m5_68 -> m5_69  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_62 -> m5_63  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_77  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_82  [key=2, style=dotted];
m5_77 -> m5_54  [color=blue, key=0, style=bold];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_116  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_114 -> m5_117  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_114 -> m5_118  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_115 -> m5_116  [key=0, style=solid];
m5_115 -> m5_118  [key=0, style=solid];
m5_115 -> m5_120  [key=2, style=dotted];
m5_116 -> m5_115  [key=0, style=solid];
m5_116 -> m5_117  [key=0, style=solid];
m5_116 -> m5_121  [key=2, style=dotted];
m5_118 -> m5_119  [key=0, style=solid];
m5_118 -> m5_120  [key=2, style=dotted];
m5_117 -> m5_119  [key=0, style=solid];
m5_117 -> m5_118  [key=0, style=solid];
m5_119 -> m5_114  [color=blue, key=0, style=bold];
m5_51 -> m5_53  [key=0, style=solid];
m5_51 -> m5_52  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_34  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_32 -> m5_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_32 -> m5_36  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_32 -> m5_38  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_32 -> m5_39  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_33 -> m5_34  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_36 -> m5_37  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_37 -> m5_38  [key=0, style=solid];
m5_40 -> m5_32  [color=blue, key=0, style=bold];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_34  [key=2, style=dotted];
m5_22 -> m5_35  [key=2, style=dotted];
m5_22 -> m5_36  [key=2, style=dotted];
m5_22 -> m5_26  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_22 -> m5_27  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_22 -> m5_29  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_22 -> m5_30  [color=darkseagreen4, key=1, label=security, style=dashed];
m5_50 -> m5_55  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m5_50 -> m5_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m5_50 -> m5_51  [key=0, style=solid];
m5_50 -> m5_41  [color=blue, key=0, style=bold];
m5_47 -> m5_48  [key=0, style=solid];
m5_47 -> m5_49  [key=2, style=dotted];
m5_53 -> m5_55  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_46 -> m5_47  [key=0, style=solid];
m5_48 -> m5_46  [color=blue, key=0, style=bold];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_53  [key=2, style=dotted];
m5_52 -> m5_56  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_85  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m5_83 -> m5_88  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_0  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_89  [key=0, style=solid];
m5_88 -> m5_90  [key=0, style=solid];
m5_88 -> m5_54  [key=2, style=dotted];
m5_86 -> m5_87  [key=0, style=solid];
m5_89 -> m5_90  [key=0, style=solid];
m5_87 -> m5_88  [key=0, style=solid];
m5_90 -> m5_91  [key=0, style=solid];
m5_91 -> m5_83  [color=blue, key=0, style=bold];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_25  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_23 -> m5_26  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_23 -> m5_27  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_23 -> m5_29  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_23 -> m5_30  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m5_23 -> m5_37  [key=2, style=dotted];
m5_23 -> m5_38  [key=2, style=dotted];
m5_23 -> m5_39  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_27  [key=0, style=solid];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_40  [key=2, style=dotted];
m5_25 -> m5_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_26  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_26 -> m5_41  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_27  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_27 -> m5_42  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_44  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_45  [key=2, style=dotted];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_30  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_28 -> m5_28  [color=darkseagreen4, key=1, label=reader, style=dashed];
m5_28 -> m5_43  [key=2, style=dotted];
m5_28 -> m5_53  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m5_28 -> m5_55  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m5_31 -> m5_23  [color=blue, key=0, style=bold];
m5_31 -> m5_15  [color=blue, key=0, style=bold];
m5_122 -> m5_123  [key=0, style=solid];
m5_122 -> m5_12  [key=2, style=dotted];
m5_123 -> m5_124  [key=0, style=solid];
m5_123 -> m5_125  [key=2, style=dotted];
m5_123 -> m5_121  [color=blue, key=0, style=bold];
m5_124 -> m5_122  [color=blue, key=0, style=bold];
m5_124 -> m5_1  [color=red, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_39  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_45  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_47  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_58  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_59  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_61  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_66  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_67  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_69  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_70  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_71  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_72  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_73  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_74  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_115  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_116  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_117  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_124 -> m5_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m5_45 -> m5_46  [key=0, style=solid];
m5_45 -> m5_52  [key=2, style=dotted];
m5_41 -> m5_42  [key=0, style=solid];
m5_41 -> m5_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_0 -> m5_1  [color=red, key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IFactorFileProvider", style=dashed];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IDataProvider", style=dashed];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IDataCacheProvider", style=dashed];
m5_1 -> m5_2  [color=red, key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_11  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_0  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [color=green, key=0, style=solid];
m5_6 -> m5_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>", style=dashed];
m5_6 -> m5_12  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m5_7 -> m5_8  [color=green, key=0, style=solid];
m5_7 -> n173  [color=green, key=2, style=dotted];
m5_7 -> m5_11  [color=green, key=1, label=subscriptions, style=dashed];
m5_7 -> m5_12  [color=green, key=1, label=subscriptions, style=dashed];
m5_8 -> m5_9  [color=green, key=0, style=solid];
m5_8 -> m5_12  [key=0, style=solid];
m5_11 -> m5_8  [key=0, style=solid];
m5_11 -> m5_17  [key=2, style=dotted];
m5_9 -> m5_10  [color=green, key=0, style=solid];
m5_9 -> m5_15  [color=green, key=2, style=dotted];
m5_9 -> m5_11  [color=green, key=1, label=subscription, style=dashed];
m5_10 -> m5_11  [color=green, key=0, style=solid];
m5_10 -> m5_16  [color=green, key=2, style=dotted];
m5_10 -> m5_0  [color=blue, key=0, style=bold];
m5_43 -> m5_107  [key=0, style=solid];
m5_43 -> m5_108  [color=darkseagreen4, key=1, label="System.Func<T, bool>", style=dashed];
m5_43 -> m5_44  [key=0, style=solid];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_51  [key=2, style=dotted];
m5_42 -> m5_45  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_42 -> m5_48  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_42 -> m5_49  [color=darkseagreen4, key=1, label=csv, style=dashed];
m5_121 -> m5_122  [key=0, style=solid];
m5_44 -> m5_45  [key=0, style=solid];
m5_49 -> m5_50  [key=0, style=solid];
m5_49 -> m5_53  [key=2, style=dotted];
m5_126 -> m5_9  [color=green, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider", style=dashed];
m5_126 -> m5_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider", style=dashed];
m5_126 -> m5_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider", style=dashed];
m5_126 -> m5_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider", style=dashed];
m5_126 -> m5_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider", style=dashed];
m5_126 -> m5_4  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider", style=dashed];
m5_126 -> m5_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider", style=dashed];
m5_127 -> m5_47  [color=darkseagreen4, key=1, label="QuantConnect.Data.HistoryRequest", style=dashed];
m5_130 -> m5_55  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_129 -> m5_53  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m5_128 -> m5_51  [color=darkseagreen4, key=1, label=config, style=dashed];
m5_131 -> m5_107  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>", style=dashed];
m5_131 -> m5_108  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>", style=dashed];
m5_131 -> m5_111  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>", style=dashed];
m5_131 -> m5_115  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>", style=dashed];
m5_131 -> m5_116  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>", style=dashed];
m5_131 -> m5_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.HistoricalData.SubscriptionDataReaderHistoryProvider.FilterEnumerator<T>", style=dashed];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_6  [key=2, style=dotted];
m9_12 -> m9_7  [key=2, style=dotted];
m9_13 -> m9_11  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_4  [color=darkseagreen4, key=1, label=original, style=dashed];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_6  [key=2, style=dotted];
m9_3 -> m9_7  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_0  [color=blue, key=0, style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_14  [color=blue, key=0, style=bold];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_6  [key=2, style=dotted];
m9_9 -> m9_7  [key=2, style=dotted];
m9_10 -> m9_8  [color=blue, key=0, style=bold];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m10_9 -> m10_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_12  [color=darkseagreen4, key=1, label=handler, style=dashed];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_15  [key=2, style=dotted];
m10_13 -> m10_14  [key=0, style=solid];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_13  [key=0, style=solid];
m10_14 -> m10_9  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_4  [color=darkseagreen4, key=1, label=typedData, style=dashed];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_7  [key=2, style=dotted];
m10_3 -> m10_5  [key=0, style=solid];
m10_3 -> m10_6  [key=2, style=dotted];
m10_5 -> m10_0  [color=blue, key=0, style=bold];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_1  [color=darkorchid, key=3, label="Parameter variable TInput data", style=bold];
m10_8 -> m10_7  [color=blue, key=0, style=bold];
m10_16 -> m10_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m10_16 -> m10_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m10_16 -> m10_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m10_16 -> m10_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m11_0 -> m11_1  [color=green, key=0, style=solid];
m11_1 -> m11_2  [color=green, key=0, style=solid];
m11_1 -> m11_3  [color=green, key=2, style=dotted];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_11 -> m11_12  [color=green, key=0, style=solid];
m11_12 -> m11_13  [color=green, key=0, style=solid];
m11_12 -> m11_3  [color=green, key=2, style=dotted];
m11_13 -> m11_11  [color=blue, key=0, style=bold];
m11_8 -> m11_9  [color=green, key=0, style=solid];
m11_9 -> m11_10  [color=green, key=0, style=solid];
m11_9 -> m11_3  [color=green, key=2, style=dotted];
m11_10 -> m11_8  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_0  [color=blue, key=0, style=bold];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_132  [key=2, style=dotted];
m12_1 -> m12_133  [key=2, style=dotted];
m12_156 -> m12_171  [color=darkorchid, key=3, label="Field variable QuantConnect.Lean.Engine.TransactionHandlers.ITransactionHandler TransactionHandler", style=bold];
m12_197 -> m12_198  [key=0, style=solid];
m12_200 -> m12_177  [key=2, style=dotted];
m12_200 -> m12_201  [key=0, style=solid];
m12_201 -> m12_138  [key=2, style=dotted];
m12_201 -> m12_202  [key=0, style=solid];
m12_198 -> m12_201  [key=0, style=solid];
m12_198 -> m12_199  [key=0, style=solid];
m12_198 -> m12_203  [key=2, style=dotted];
m12_199 -> m12_200  [key=0, style=solid];
m12_202 -> m12_197  [color=blue, key=0, style=bold];
m12_159 -> m12_3  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m12_159 -> m12_243  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m12_159 -> m12_240  [key=0, style=solid];
m12_159 -> m12_242  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m12_159 -> m12_246  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m12_159 -> m12_249  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m12_159 -> m12_252  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m12_244 -> m12_245  [color=green, key=0, style=solid];
m12_243 -> m12_244  [color=green, key=0, style=solid];
m12_243 -> m12_247  [key=0, style=solid];
m12_243 -> m12_250  [key=0, style=solid];
m12_245 -> m12_246  [key=0, style=solid];
m12_245 -> m12_138  [key=2, style=dotted];
m12_240 -> m12_3  [color=darkorchid, key=3, label="Local variable QuantConnect.Lean.Engine.Results.IResultHandler rh", style=bold];
m12_240 -> m12_241  [key=0, style=solid];
m12_241 -> m12_243  [key=0, style=solid];
m12_241 -> m12_242  [key=0, style=solid];
m12_247 -> m12_248  [key=0, style=solid];
m12_250 -> m12_251  [key=0, style=solid];
m12_246 -> m12_253  [key=0, style=solid];
m12_246 -> m12_255  [key=2, style=dotted];
m12_248 -> m12_138  [key=2, style=dotted];
m12_248 -> m12_249  [key=0, style=solid];
m12_251 -> m12_138  [key=2, style=dotted];
m12_251 -> m12_252  [key=0, style=solid];
m12_242 -> m12_254  [key=0, style=solid];
m12_242 -> m12_255  [key=2, style=dotted];
m12_249 -> m12_253  [key=0, style=solid];
m12_249 -> m12_256  [key=2, style=dotted];
m12_252 -> m12_253  [key=0, style=solid];
m12_252 -> m12_257  [key=2, style=dotted];
m12_253 -> m12_254  [key=0, style=solid];
m12_254 -> m12_159  [color=blue, key=0, style=bold];
m12_172 -> m12_3  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m12_172 -> m12_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m12_172 -> m12_221  [key=0, style=solid];
m12_172 -> m12_222  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m12_172 -> m12_225  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m12_172 -> m12_228  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m12_172 -> m12_154  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IBrokerage brokerage", style=bold];
m12_221 -> m12_3  [color=darkorchid, key=3, label="Local variable QuantConnect.Lean.Engine.RealTime.IRealTimeHandler rth", style=bold];
m12_221 -> m12_222  [key=0, style=solid];
m12_224 -> m12_138  [key=2, style=dotted];
m12_224 -> m12_225  [key=0, style=solid];
m12_227 -> m12_138  [key=2, style=dotted];
m12_227 -> m12_228  [key=0, style=solid];
m12_222 -> m12_223  [key=0, style=solid];
m12_222 -> m12_226  [key=0, style=solid];
m12_225 -> m12_229  [key=0, style=solid];
m12_225 -> m12_231  [key=2, style=dotted];
m12_228 -> m12_229  [key=0, style=solid];
m12_228 -> m12_232  [key=2, style=dotted];
m12_223 -> m12_224  [key=0, style=solid];
m12_226 -> m12_227  [key=0, style=solid];
m12_229 -> m12_230  [key=0, style=solid];
m12_230 -> m12_172  [color=blue, key=0, style=bold];
m12_170 -> m12_210  [color=green, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m12_170 -> m12_3  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m12_170 -> m12_204  [key=0, style=solid];
m12_170 -> m12_205  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m12_170 -> m12_207  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m12_170 -> m12_214  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m12_170 -> m12_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m12_210 -> m12_211  [color=green, key=0, style=solid];
m12_210 -> m12_219  [color=green, key=2, style=dotted];
m12_209 -> m12_210  [color=green, key=0, style=solid];
m12_211 -> m12_216  [key=0, style=solid];
m12_211 -> m12_138  [key=2, style=dotted];
m12_205 -> m12_209  [color=green, key=0, style=solid];
m12_205 -> m12_206  [key=0, style=solid];
m12_205 -> m12_212  [key=0, style=solid];
m12_204 -> m12_3  [color=darkorchid, key=3, label="Local variable QuantConnect.Lean.Engine.DataFeeds.IDataFeed df", style=bold];
m12_204 -> m12_205  [key=0, style=solid];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_218  [key=2, style=dotted];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_220  [key=2, style=dotted];
m12_214 -> m12_216  [color=darkseagreen4, key=1, label=df, style=dashed];
m12_216 -> m12_217  [key=0, style=solid];
m12_206 -> m12_207  [key=0, style=solid];
m12_212 -> m12_213  [key=0, style=solid];
m12_208 -> m12_138  [key=2, style=dotted];
m12_208 -> m12_216  [key=0, style=solid];
m12_215 -> m12_138  [key=2, style=dotted];
m12_215 -> m12_216  [key=0, style=solid];
m12_213 -> m12_136  [key=2, style=dotted];
m12_213 -> m12_144  [key=2, style=dotted];
m12_213 -> m12_214  [key=0, style=solid];
m12_217 -> m12_170  [color=blue, key=0, style=bold];
m12_171 -> m12_233  [color=green, key=0, style=solid];
m12_171 -> m12_3  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m12_171 -> m12_234  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m12_171 -> m12_235  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m12_171 -> m12_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m12_171 -> m12_154  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IBrokerage brokerage", style=bold];
m12_233 -> m12_234  [color=green, key=0, style=solid];
m12_234 -> m12_235  [key=0, style=solid];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_239  [key=2, style=dotted];
m12_235 -> m12_237  [color=darkseagreen4, key=1, label=th, style=dashed];
m12_236 -> m12_138  [key=2, style=dotted];
m12_236 -> m12_237  [key=0, style=solid];
m12_237 -> m12_238  [key=0, style=solid];
m12_238 -> m12_171  [color=blue, key=0, style=bold];
m12_158 -> m12_258  [key=0, style=solid];
m12_158 -> m12_261  [color=darkseagreen4, key=1, label="QuantConnect.SetupHandlerEndpoint", style=dashed];
m12_269 -> m12_270  [color=green, key=0, style=solid];
m12_269 -> m12_275  [color=green, key=2, style=dotted];
m12_269 -> m12_271  [color=green, key=1, label=sh, style=dashed];
m12_268 -> m12_269  [color=green, key=0, style=solid];
m12_270 -> m12_271  [color=green, key=0, style=solid];
m12_270 -> m12_138  [color=green, key=2, style=dotted];
m12_271 -> m12_272  [key=0, style=solid];
m12_258 -> m12_3  [color=darkorchid, key=3, label="Local variable QuantConnect.Lean.Engine.Setup.ISetupHandler sh", style=bold];
m12_258 -> m12_259  [key=0, style=solid];
m12_261 -> m12_268  [key=0, style=solid];
m12_261 -> m12_262  [key=0, style=solid];
m12_261 -> m12_265  [key=0, style=solid];
m12_264 -> m12_271  [key=0, style=solid];
m12_264 -> m12_138  [key=2, style=dotted];
m12_267 -> m12_271  [key=0, style=solid];
m12_267 -> m12_138  [key=2, style=dotted];
m12_259 -> m12_261  [key=0, style=solid];
m12_259 -> m12_260  [key=0, style=solid];
m12_262 -> m12_263  [key=0, style=solid];
m12_265 -> m12_266  [key=0, style=solid];
m12_263 -> m12_264  [key=0, style=solid];
m12_263 -> m12_273  [key=2, style=dotted];
m12_266 -> m12_267  [key=0, style=solid];
m12_266 -> m12_274  [key=2, style=dotted];
m12_260 -> m12_272  [key=0, style=solid];
m12_260 -> m12_273  [key=2, style=dotted];
m12_272 -> m12_158  [color=blue, key=0, style=bold];
m12_11 -> m12_12  [color=green, key=0, style=solid];
m12_11 -> m12_140  [color=green, key=2, style=dotted];
m12_11 -> m12_13  [color=green, key=1, label=catalog, style=dashed];
m12_10 -> m12_11  [color=green, key=0, style=solid];
m12_10 -> m12_138  [key=2, style=dotted];
m12_12 -> m12_13  [color=green, key=0, style=solid];
m12_12 -> m12_141  [color=green, key=2, style=dotted];
m12_12 -> m12_142  [color=green, key=2, style=dotted];
m12_13 -> m12_14  [color=green, key=0, style=solid];
m12_13 -> m12_143  [color=green, key=2, style=dotted];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_136  [key=2, style=dotted];
m12_14 -> m12_144  [key=2, style=dotted];
m12_17 -> m12_18  [color=green, key=0, style=solid];
m12_16 -> m12_17  [color=green, key=0, style=solid];
m12_16 -> m12_19  [key=0, style=solid];
m12_16 -> m12_136  [key=2, style=dotted];
m12_16 -> m12_144  [key=2, style=dotted];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_145  [key=2, style=dotted];
m12_20 -> m12_21  [color=green, key=0, style=solid];
m12_20 -> m12_147  [color=green, key=2, style=dotted];
m12_19 -> m12_20  [color=green, key=0, style=solid];
m12_19 -> m12_146  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_148  [key=2, style=dotted];
m12_27 -> m12_28  [color=green, key=0, style=solid];
m12_27 -> m12_117  [color=green, key=1, label=threadTransactions, style=dashed];
m12_27 -> m12_118  [color=green, key=1, label=threadTransactions, style=dashed];
m12_27 -> m12_3  [color=green, key=3, label="Local variable System.Threading.Thread threadTransactions", style=bold];
m12_26 -> m12_27  [color=green, key=0, style=solid];
m12_26 -> m12_115  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m12_26 -> m12_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m12_26 -> m12_3  [color=darkorchid, key=3, label="Local variable System.Threading.Thread threadFeed", style=bold];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_3  [color=darkorchid, key=3, label="Local variable System.Threading.Thread threadResults", style=bold];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_119  [key=0, style=solid];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_193  [key=2, style=dotted];
m12_3 -> m12_3  [color=darkorchid, key=3, label="Local variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m12_3 -> m12_4  [key=0, style=solid];
m12_72 -> m12_73  [color=green, key=0, style=solid];
m12_72 -> m12_75  [color=green, key=0, style=solid];
m12_71 -> m12_72  [color=green, key=0, style=solid];
m12_71 -> m12_175  [key=2, style=dotted];
m12_71 -> m12_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_73 -> m12_74  [color=green, key=0, style=solid];
m12_73 -> m12_176  [color=green, key=2, style=dotted];
m12_73 -> m12_177  [color=green, key=2, style=dotted];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_77  [key=0, style=solid];
m12_75 -> m12_87  [key=0, style=solid];
m12_74 -> m12_87  [key=0, style=solid];
m12_74 -> m12_164  [key=2, style=dotted];
m12_74 -> m12_176  [key=2, style=dotted];
m12_122 -> m12_123  [color=green, key=0, style=solid];
m12_121 -> m12_122  [color=green, key=0, style=solid];
m12_121 -> m12_124  [key=0, style=solid];
m12_121 -> m12_138  [key=2, style=dotted];
m12_123 -> m12_177  [key=2, style=dotted];
m12_123 -> m12_124  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_138  [key=2, style=dotted];
m12_9 -> m12_139  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_136  [key=2, style=dotted];
m12_15 -> m12_144  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_149  [key=2, style=dotted];
m12_22 -> m12_127  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m12_22 -> m12_128  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_25  [color=darkorchid, key=3, label="Local variable bool initializeComplete", style=bold];
m12_115 -> m12_117  [key=0, style=solid];
m12_115 -> m12_116  [key=0, style=solid];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_193  [key=2, style=dotted];
m12_29 -> m12_3  [color=darkorchid, key=3, label="Local variable System.Threading.Thread threadRealTime", style=bold];
m12_29 -> m12_30  [key=0, style=solid];
m12_66 -> m12_117  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m12_66 -> m12_118  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_160  [key=2, style=dotted];
m12_66 -> m12_69  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m12_119 -> m12_121  [key=0, style=solid];
m12_119 -> m12_120  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_2  [color=darkorchid, key=3, label="Local variable string algorithmPath", style=bold];
m12_5 -> m12_3  [color=darkorchid, key=3, label="Local variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m12_5 -> m12_6  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_134  [key=2, style=dotted];
m12_4 -> m12_39  [color=darkseagreen4, key=1, label=timer, style=dashed];
m12_4 -> m12_102  [color=darkseagreen4, key=1, label=timer, style=dashed];
m12_4 -> m12_106  [color=darkseagreen4, key=1, label=timer, style=dashed];
m12_30 -> m12_71  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_152  [key=2, style=dotted];
m12_30 -> m12_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_44  [color=darkseagreen4, key=1, label=algorithmPath, style=dashed];
m12_30 -> m12_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_198  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_102  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_30 -> m12_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_44 -> m12_71  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_161  [key=2, style=dotted];
m12_44 -> m12_46  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_48  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_56  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_57  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_58  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_59  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_60  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_61  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_62  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_198  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_88  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_98  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_44 -> m12_103  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m12_36 -> m12_71  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_61  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_62  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_198  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_86  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_102  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_36 -> m12_103  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_150  [key=2, style=dotted];
m12_76 -> m12_87  [key=0, style=solid];
m12_77 -> m12_78  [key=0, style=solid];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_180  [key=2, style=dotted];
m12_87 -> m12_95  [color=darkseagreen4, key=1, label=charts, style=dashed];
m12_87 -> m12_96  [color=darkseagreen4, key=1, label=charts, style=dashed];
m12_87 -> m12_97  [color=darkseagreen4, key=1, label=charts, style=dashed];
m12_78 -> m12_177  [key=2, style=dotted];
m12_78 -> m12_79  [key=0, style=solid];
m12_101 -> m12_177  [key=2, style=dotted];
m12_101 -> m12_102  [key=0, style=solid];
m12_105 -> m12_177  [key=2, style=dotted];
m12_105 -> m12_106  [key=0, style=solid];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_193  [key=2, style=dotted];
m12_124 -> m12_23  [key=0, style=solid];
m12_124 -> m12_125  [key=0, style=solid];
m12_60 -> m12_170  [key=2, style=dotted];
m12_60 -> m12_61  [key=0, style=solid];
m12_61 -> m12_171  [key=2, style=dotted];
m12_61 -> m12_62  [key=0, style=solid];
m12_8 -> m12_138  [key=2, style=dotted];
m12_8 -> m12_9  [key=0, style=solid];
m12_83 -> m12_138  [key=2, style=dotted];
m12_83 -> m12_84  [key=0, style=solid];
m12_114 -> m12_138  [key=2, style=dotted];
m12_114 -> m12_112  [key=0, style=solid];
m12_6 -> m12_136  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_135  [key=2, style=dotted];
m12_6 -> m12_137  [key=2, style=dotted];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_150  [key=2, style=dotted];
m12_127 -> m12_128  [key=0, style=solid];
m12_127 -> m12_129  [key=0, style=solid];
m12_128 -> m12_193  [key=2, style=dotted];
m12_128 -> m12_129  [key=0, style=solid];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_151  [key=2, style=dotted];
m12_65 -> m12_115  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m12_65 -> m12_116  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_160  [key=2, style=dotted];
m12_65 -> m12_68  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m12_112 -> m12_115  [key=0, style=solid];
m12_112 -> m12_113  [key=0, style=solid];
m12_37 -> m12_29  [key=0, style=solid];
m12_37 -> m12_38  [key=0, style=solid];
m12_67 -> m12_70  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_160  [key=2, style=dotted];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_150  [key=2, style=dotted];
m12_42 -> m12_119  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m12_42 -> m12_120  [color=darkseagreen4, key=1, label=threadResults, style=dashed];
m12_42 -> m12_160  [key=2, style=dotted];
m12_42 -> m12_43  [key=0, style=solid];
m12_41 -> m12_159  [key=2, style=dotted];
m12_41 -> m12_42  [key=0, style=solid];
m12_62 -> m12_172  [key=2, style=dotted];
m12_62 -> m12_63  [key=0, style=solid];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_157  [key=2, style=dotted];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_185  [key=2, style=dotted];
m12_102 -> m12_186  [key=2, style=dotted];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_188  [key=2, style=dotted];
m12_31 -> m12_37  [key=0, style=solid];
m12_31 -> m12_32  [key=0, style=solid];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_153  [key=2, style=dotted];
m12_33 -> m12_154  [key=2, style=dotted];
m12_33 -> m12_34  [key=0, style=solid];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_155  [key=2, style=dotted];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_156  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_155  [key=2, style=dotted];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_158  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_162  [key=2, style=dotted];
m12_45 -> m12_55  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m12_54 -> m12_154  [key=2, style=dotted];
m12_54 -> m12_55  [key=0, style=solid];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_166  [key=2, style=dotted];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_174  [key=2, style=dotted];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_154  [key=2, style=dotted];
m12_103 -> m12_106  [key=0, style=solid];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_187  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_150  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_51  [key=0, style=solid];
m12_46 -> m12_55  [key=0, style=solid];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_163  [key=2, style=dotted];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_167  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_168  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_169  [key=2, style=dotted];
m12_88 -> m12_103  [color=darkseagreen4, key=1, label=orders, style=dashed];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_180  [key=2, style=dotted];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_183  [key=2, style=dotted];
m12_81 -> m12_87  [key=0, style=solid];
m12_81 -> m12_82  [key=0, style=solid];
m12_95 -> m12_102  [key=0, style=solid];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_100  [key=0, style=solid];
m12_95 -> n153  [key=2, style=dotted];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_99  [color=darkseagreen4, key=1, label=equity, style=dashed];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_99  [color=darkseagreen4, key=1, label=performance, style=dashed];
m12_50 -> m12_164  [key=2, style=dotted];
m12_50 -> m12_55  [key=0, style=solid];
m12_79 -> m12_81  [key=0, style=solid];
m12_79 -> m12_80  [key=0, style=solid];
m12_100 -> m12_101  [key=0, style=solid];
m12_104 -> m12_105  [key=0, style=solid];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_194  [key=2, style=dotted];
m12_7 -> m12_8  [key=0, style=solid];
m12_82 -> m12_83  [key=0, style=solid];
m12_82 -> m12_86  [color=darkseagreen4, key=1, label=message, style=dashed];
m12_82 -> m12_84  [color=darkseagreen4, key=1, label=message, style=dashed];
m12_82 -> m12_85  [color=darkseagreen4, key=1, label=message, style=dashed];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_179  [key=2, style=dotted];
m12_113 -> m12_114  [key=0, style=solid];
m12_113 -> m12_192  [key=2, style=dotted];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_195  [key=2, style=dotted];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_131  [key=0, style=solid];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_150  [key=2, style=dotted];
m12_111 -> m12_112  [key=0, style=solid];
m12_111 -> m12_134  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_173  [key=2, style=dotted];
m12_99 -> m12_102  [key=0, style=solid];
m12_99 -> m12_103  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_184  [key=2, style=dotted];
m12_107 -> m12_108  [key=0, style=solid];
m12_107 -> m12_189  [key=2, style=dotted];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_110  [key=0, style=solid];
m12_52 -> m12_54  [color=darkseagreen4, key=1, label=runtimeMessage, style=dashed];
m12_52 -> m12_53  [key=0, style=solid];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_165  [key=2, style=dotted];
m12_85 -> m12_86  [key=0, style=solid];
m12_85 -> m12_165  [key=2, style=dotted];
m12_89 -> m12_103  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_181  [key=2, style=dotted];
m12_90 -> m12_103  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_181  [key=2, style=dotted];
m12_91 -> m12_103  [color=darkseagreen4, key=1, label=banner, style=dashed];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_181  [key=2, style=dotted];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_55  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m12_51 -> m12_52  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_49  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m12_49 -> m12_163  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_178  [key=2, style=dotted];
m12_92 -> m12_95  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m12_92 -> m12_96  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m12_92 -> m12_97  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m12_92 -> m12_92  [color=darkorchid, key=3, label="Local variable string strategyEquityKey", style=bold];
m12_92 -> m12_93  [key=0, style=solid];
m12_93 -> m12_95  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m12_93 -> m12_96  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m12_93 -> m12_93  [color=darkorchid, key=3, label="Local variable string equityKey", style=bold];
m12_93 -> m12_94  [key=0, style=solid];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_97  [color=darkseagreen4, key=1, label=dailyPerformanceKey, style=dashed];
m12_94 -> m12_94  [color=darkorchid, key=3, label="Local variable string dailyPerformanceKey", style=bold];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_196  [key=2, style=dotted];
m12_131 -> m12_0  [color=blue, key=0, style=bold];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_191  [key=2, style=dotted];
m12_108 -> m12_109  [key=0, style=solid];
m12_108 -> m12_178  [key=2, style=dotted];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_190  [key=2, style=dotted];
m12_276 -> m12_198  [color=darkseagreen4, key=1, label=job, style=dashed];
m12_277 -> m12_198  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m13_170 -> m13_171  [key=0, style=solid];
m13_164 -> m13_165  [key=0, style=solid];
m13_164 -> m13_166  [key=2, style=dotted];
m13_168 -> m13_169  [key=0, style=solid];
m13_168 -> m13_166  [key=2, style=dotted];
m13_171 -> m13_172  [key=0, style=solid];
m13_171 -> m13_166  [key=2, style=dotted];
m13_163 -> m13_164  [key=0, style=solid];
m13_167 -> m13_168  [key=0, style=solid];
m13_165 -> m13_163  [color=blue, key=0, style=bold];
m13_169 -> m13_167  [color=blue, key=0, style=bold];
m13_172 -> m13_170  [color=blue, key=0, style=bold];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_9  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m13_2 -> m13_10  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m13_2 -> m13_11  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m13_2 -> m13_12  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m13_2 -> m13_13  [color=darkseagreen4, key=1, label="QuantConnect.Packets.LiveNodePacket", style=dashed];
m13_2 -> m13_19  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> n173  [key=2, style=dotted];
m13_3 -> m13_9  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3 -> m13_10  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3 -> m13_11  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3 -> m13_12  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3 -> m13_13  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3 -> m13_14  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_3 -> m13_15  [color=darkseagreen4, key=1, label=errors, style=dashed];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_27  [key=2, style=dotted];
m13_9 -> m13_19  [color=darkseagreen4, key=1, label=account, style=dashed];
m13_10 -> m13_11  [key=0, style=solid];
m13_10 -> m13_27  [key=2, style=dotted];
m13_10 -> m13_18  [color=darkseagreen4, key=1, label=userId, style=dashed];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_27  [key=2, style=dotted];
m13_11 -> m13_18  [color=darkseagreen4, key=1, label=password, style=dashed];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_27  [key=2, style=dotted];
m13_12 -> m13_16  [color=darkseagreen4, key=1, label=tradingMode, style=dashed];
m13_12 -> m13_18  [color=darkseagreen4, key=1, label=tradingMode, style=dashed];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_27  [key=2, style=dotted];
m13_13 -> m13_19  [color=darkseagreen4, key=1, label=agentDescription, style=dashed];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_31  [key=2, style=dotted];
m13_19 -> m13_21  [color=darkseagreen4, key=1, label=ib, style=dashed];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_24  [key=2, style=dotted];
m13_4 -> m13_18  [color=darkseagreen4, key=1, label=useTws, style=dashed];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_16  [key=0, style=solid];
m13_15 -> m13_22  [key=0, style=solid];
m13_15 -> m13_28  [key=2, style=dotted];
m13_15 -> m13_29  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_25  [key=2, style=dotted];
m13_5 -> m13_19  [color=darkseagreen4, key=1, label=port, style=dashed];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_30  [key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_26  [key=2, style=dotted];
m13_6 -> m13_19  [color=darkseagreen4, key=1, label=host, style=dashed];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_26  [key=2, style=dotted];
m13_7 -> m13_18  [color=darkseagreen4, key=1, label=twsDirectory, style=dashed];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_26  [key=2, style=dotted];
m13_8 -> m13_18  [color=darkseagreen4, key=1, label=ibControllerDirectory, style=dashed];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_18  [key=0, style=solid];
m13_17 -> m13_22  [key=0, style=solid];
m13_17 -> m13_28  [key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_32  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid];
m13_22 -> m13_2  [color=blue, key=0, style=bold];
m13_146 -> m13_147  [color=green, key=0, style=solid];
m13_146 -> m13_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_146 -> m13_164  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_146 -> m13_151  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_146 -> m13_168  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_146 -> m13_154  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_146 -> m13_171  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_146 -> m13_156  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_147 -> m13_148  [color=green, key=0, style=solid];
m13_147 -> m13_159  [color=green, key=2, style=dotted];
m13_147 -> m13_160  [color=green, key=2, style=dotted];
m13_147 -> m13_151  [color=green, key=1, label=values, style=dashed];
m13_147 -> m13_154  [color=green, key=1, label=values, style=dashed];
m13_148 -> m13_149  [color=green, key=0, style=solid];
m13_148 -> m13_150  [color=green, key=1, label=value, style=dashed];
m13_148 -> m13_161  [key=2, style=dotted];
m13_148 -> m13_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_151 -> m13_152  [key=0, style=solid];
m13_151 -> m13_161  [key=2, style=dotted];
m13_151 -> m13_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_151 -> m13_153  [color=darkseagreen4, key=1, label=value, style=dashed];
m13_154 -> m13_155  [key=0, style=solid];
m13_154 -> m13_161  [key=2, style=dotted];
m13_154 -> m13_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_154 -> m13_157  [color=darkseagreen4, key=1, label=value, style=dashed];
m13_149 -> m13_150  [color=green, key=0, style=solid];
m13_149 -> m13_151  [color=green, key=0, style=solid];
m13_150 -> m13_158  [color=green, key=0, style=solid];
m13_156 -> m13_158  [key=0, style=solid];
m13_156 -> m13_162  [key=2, style=dotted];
m13_152 -> m13_154  [key=0, style=solid];
m13_152 -> m13_153  [key=0, style=solid];
m13_153 -> m13_158  [key=0, style=solid];
m13_155 -> m13_156  [key=0, style=solid];
m13_155 -> m13_157  [key=0, style=solid];
m13_157 -> m13_158  [key=0, style=solid];
m13_158 -> m13_146  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m13_33 -> m13_34  [key=0, style=solid];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_36  [key=2, style=dotted];
m13_35 -> m13_33  [color=blue, key=0, style=bold];
m13_206 -> m13_164  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_206 -> m13_168  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_206 -> m13_171  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_4 -> m14_5  [color=red, key=0, style=solid];
m14_5 -> m14_6  [color=red, key=0, style=solid];
m14_6 -> m14_4  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [color=red, key=0, style=solid];
m14_0 -> m14_2  [color=red, key=1, label="QuantConnect.Symbol", style=dashed];
m14_1 -> m14_2  [color=red, key=0, style=solid];
m14_2 -> m14_3  [color=red, key=0, style=solid];
m14_3 -> m14_0  [color=blue, key=0, style=bold];
m14_7 -> m14_1  [color=red, key=1, label="QuantConnect.Data.Market.FuturesContract", style=dashed];
m14_7 -> m14_2  [color=red, key=1, label="QuantConnect.Data.Market.FuturesContract", style=dashed];
m14_7 -> m14_5  [color=red, key=1, label="QuantConnect.Data.Market.FuturesContract", style=dashed];
m15_5 -> m15_6  [color=green, key=0, style=solid];
m15_6 -> m15_7  [color=green, key=0, style=solid];
m15_7 -> m15_5  [color=blue, key=0, style=bold];
m16_181 -> m16_243  [key=0, style=solid];
m16_181 -> m16_247  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m16_181 -> m16_250  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m16_181 -> m16_251  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_181 -> m16_5  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Packets.AlgorithmNodePacket job", style=bold];
m16_181 -> m16_81  [color=green, key=3, label="Parameter variable System.Exception err", style=bold];
m16_243 -> m16_244  [key=0, style=solid];
m16_243 -> m16_167  [key=2, style=dotted];
m16_247 -> m16_248  [key=0, style=solid];
m16_247 -> m16_249  [color=darkseagreen4, key=1, label=message, style=dashed];
m16_247 -> m16_250  [color=darkseagreen4, key=1, label=message, style=dashed];
m16_247 -> m16_251  [color=darkseagreen4, key=1, label=message, style=dashed];
m16_250 -> m16_251  [key=0, style=solid];
m16_250 -> m16_165  [key=2, style=dotted];
m16_251 -> m16_252  [key=0, style=solid];
m16_251 -> m16_166  [key=2, style=dotted];
m16_244 -> m16_245  [key=0, style=solid];
m16_244 -> m16_246  [key=0, style=solid];
m16_245 -> m16_246  [key=0, style=solid];
m16_245 -> m16_200  [key=2, style=dotted];
m16_246 -> m16_247  [key=0, style=solid];
m16_246 -> m16_252  [key=0, style=solid];
m16_248 -> m16_249  [key=0, style=solid];
m16_248 -> m16_168  [key=2, style=dotted];
m16_249 -> m16_250  [key=0, style=solid];
m16_249 -> m16_253  [key=2, style=dotted];
m16_252 -> m16_181  [color=blue, key=0, style=bold];
m16_276 -> m16_277  [key=0, style=solid];
m16_229 -> m16_230  [key=0, style=solid];
m16_229 -> m16_235  [key=0, style=solid];
m16_229 -> m16_237  [key=2, style=dotted];
m16_233 -> m16_234  [key=0, style=solid];
m16_233 -> m16_238  [key=2, style=dotted];
m16_210 -> m16_211  [key=0, style=solid];
m16_210 -> m16_212  [key=0, style=solid];
m16_210 -> m16_213  [key=2, style=dotted];
m16_216 -> m16_217  [key=0, style=solid];
m16_216 -> m16_224  [key=2, style=dotted];
m16_217 -> m16_218  [key=0, style=solid];
m16_217 -> m16_225  [key=2, style=dotted];
m16_220 -> m16_223  [key=0, style=solid];
m16_220 -> m16_226  [key=2, style=dotted];
m16_222 -> m16_223  [key=0, style=solid];
m16_222 -> m16_227  [key=2, style=dotted];
m16_232 -> m16_233  [key=0, style=solid];
m16_209 -> m16_210  [key=0, style=solid];
m16_209 -> m16_211  [color=darkseagreen4, key=1, label=int, style=dashed];
m16_218 -> m16_219  [key=0, style=solid];
m16_218 -> m16_221  [key=0, style=solid];
m16_228 -> m16_229  [key=0, style=solid];
m16_239 -> m16_240  [key=0, style=solid];
m16_211 -> m16_212  [key=0, style=solid];
m16_211 -> m16_214  [key=2, style=dotted];
m16_211 -> m16_174  [key=2, style=dotted];
m16_212 -> m16_209  [color=blue, key=0, style=bold];
m16_215 -> m16_216  [key=0, style=solid];
m16_215 -> m16_217  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m16_215 -> m16_218  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m16_219 -> m16_220  [key=0, style=solid];
m16_221 -> m16_222  [key=0, style=solid];
m16_223 -> m16_215  [color=blue, key=0, style=bold];
m16_230 -> m16_231  [key=0, style=solid];
m16_235 -> m16_236  [key=0, style=solid];
m16_235 -> m16_168  [key=2, style=dotted];
m16_231 -> m16_232  [key=0, style=solid];
m16_231 -> m16_167  [key=2, style=dotted];
m16_234 -> m16_236  [key=0, style=solid];
m16_236 -> m16_228  [color=blue, key=0, style=bold];
m16_240 -> m16_241  [key=0, style=solid];
m16_240 -> m16_242  [key=2, style=dotted];
m16_241 -> m16_239  [color=blue, key=0, style=bold];
m16_277 -> m16_278  [key=0, style=solid];
m16_277 -> m16_242  [key=2, style=dotted];
m16_278 -> m16_276  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineSystemHandlers", style=dashed];
m16_0 -> m16_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers", style=dashed];
m16_1 -> m16_2  [key=0, style=solid];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_0  [color=blue, key=0, style=bold];
m16_187 -> m16_89  [color=darkorchid, key=3, label="Parameter variable string csvFileName", style=bold];
m16_187 -> m16_260  [key=0, style=solid];
m16_187 -> m16_261  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_187 -> m16_264  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_260 -> m16_261  [key=0, style=solid];
m16_260 -> m16_269  [key=2, style=dotted];
m16_260 -> m16_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_260 -> m16_265  [color=darkseagreen4, key=1, label=orders, style=dashed];
m16_261 -> m16_262  [key=0, style=solid];
m16_261 -> m16_270  [key=2, style=dotted];
m16_261 -> m16_263  [color=darkseagreen4, key=1, label=path, style=dashed];
m16_264 -> m16_265  [key=0, style=solid];
m16_264 -> m16_273  [key=2, style=dotted];
m16_264 -> m16_267  [color=darkseagreen4, key=1, label=writer, style=dashed];
m16_265 -> m16_266  [key=0, style=solid];
m16_265 -> m16_268  [key=0, style=solid];
m16_262 -> m16_263  [key=0, style=solid];
m16_262 -> m16_264  [key=0, style=solid];
m16_262 -> m16_271  [key=2, style=dotted];
m16_263 -> m16_264  [key=0, style=solid];
m16_263 -> m16_272  [key=2, style=dotted];
m16_267 -> m16_265  [key=0, style=solid];
m16_267 -> m16_275  [key=2, style=dotted];
m16_266 -> m16_267  [key=0, style=solid];
m16_266 -> m16_274  [key=2, style=dotted];
m16_266 -> m16_197  [key=2, style=dotted];
m16_268 -> m16_187  [color=blue, key=0, style=bold];
m16_148 -> m16_0  [color=darkorchid, key=3, label="Field variable bool _liveMode", style=bold];
m16_148 -> m16_192  [color=darkorchid, key=3, label="Field variable string EXT", style=bold];
m16_173 -> m16_192  [color=darkorchid, key=3, label="Field variable string UI", style=bold];
m16_5 -> m16_16  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_17  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_75  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_8  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_21  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_23  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_24  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_25  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_27  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_31  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_33  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_34  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_42  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_47  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_57  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_61  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_64  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_73  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_229  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_80  [color=red, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_82  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_113  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_5 -> m16_114  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_6  [color=green, key=3, label="Local variable QuantConnect.Interfaces.IAlgorithm algorithm", style=bold];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_145  [key=2, style=dotted];
m16_8 -> m16_121  [color=darkseagreen4, key=1, label=statusPing, style=dashed];
m16_16 -> m16_17  [color=green, key=0, style=solid];
m16_16 -> m16_148  [color=green, key=2, style=dotted];
m16_17 -> m16_18  [color=green, key=0, style=solid];
m16_17 -> m16_149  [color=green, key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_151  [key=2, style=dotted];
m16_21 -> m16_23  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_24  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_25  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_26  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_31  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_210  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_32  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_33  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_34  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_35  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_36  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_38  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_55  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_56  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_61  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_62  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_63  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_64  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_65  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_216  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_217  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_220  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_222  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_75  [color=green, key=1, label=algorithm, style=dashed];
m16_21 -> m16_229  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_232  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_79  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_80  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_83  [color=green, key=1, label=algorithm, style=dashed];
m16_21 -> m16_99  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_100  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_102  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_103  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_104  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_105  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_106  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_108  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_112  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_21 -> m16_114  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_152  [key=2, style=dotted];
m16_23 -> m16_29  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m16_23 -> m16_33  [color=darkseagreen4, key=1, label=factory, style=dashed];
m16_23 -> m16_34  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m16_23 -> m16_58  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m16_23 -> m16_63  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m16_23 -> m16_65  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m16_23 -> m16_134  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m16_23 -> m16_136  [color=darkseagreen4, key=1, label=brokerage, style=dashed];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_153  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_154  [key=2, style=dotted];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_156  [key=2, style=dotted];
m16_27 -> m16_29  [color=darkseagreen4, key=1, label=historyProvider, style=dashed];
m16_27 -> m16_31  [color=darkseagreen4, key=1, label=historyProvider, style=dashed];
m16_27 -> m16_32  [color=darkseagreen4, key=1, label=historyProvider, style=dashed];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_159  [key=2, style=dotted];
m16_31 -> m16_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_160  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_161  [key=2, style=dotted];
m16_34 -> m16_36  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m16_34 -> m16_59  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_48  [key=0, style=solid];
m16_42 -> m16_166  [key=2, style=dotted];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_166  [key=2, style=dotted];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_59  [key=0, style=solid];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_170  [key=2, style=dotted];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_173  [key=2, style=dotted];
m16_73 -> m16_74  [key=0, style=solid];
m16_73 -> m16_175  [key=2, style=dotted];
m16_73 -> m16_176  [key=2, style=dotted];
m16_75 -> m16_76  [color=green, key=0, style=solid];
m16_75 -> m16_178  [color=green, key=2, style=dotted];
m16_75 -> m16_228  [color=green, key=1, label="lambda expression", style=dashed];
m16_80 -> m16_81  [color=red, key=0, style=solid];
m16_80 -> m16_83  [color=green, key=0, style=solid];
m16_80 -> m16_181  [color=red, key=2, style=dotted];
m16_82 -> m16_83  [color=green, key=0, style=solid];
m16_82 -> m16_181  [key=2, style=dotted];
m16_113 -> m16_114  [key=0, style=solid];
m16_113 -> m16_195  [key=2, style=dotted];
m16_113 -> m16_196  [key=2, style=dotted];
m16_113 -> m16_197  [key=2, style=dotted];
m16_113 -> m16_176  [key=2, style=dotted];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_117  [key=0, style=solid];
m16_114 -> m16_198  [key=2, style=dotted];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_144  [key=2, style=dotted];
m16_7 -> m16_75  [color=green, key=1, label=algorithmManager, style=dashed];
m16_7 -> m16_229  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m16_7 -> m16_233  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m16_7 -> m16_112  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m16_7 -> m16_7  [color=darkorchid, key=3, label="Local variable int rounding", style=bold];
m16_112 -> m16_113  [key=0, style=solid];
m16_112 -> m16_120  [color=green, key=3, label="Field variable QuantConnect.AlgorithmStatus Status", style=bold];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_146  [key=2, style=dotted];
m16_9 -> m16_132  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m16_9 -> m16_133  [color=darkseagreen4, key=1, label=statusPingThread, style=dashed];
m16_121 -> m16_122  [key=0, style=solid];
m16_121 -> m16_203  [key=2, style=dotted];
m16_10 -> m16_11  [color=green, key=0, style=solid];
m16_10 -> m16_147  [key=2, style=dotted];
m16_132 -> m16_133  [key=0, style=solid];
m16_132 -> m16_134  [key=0, style=solid];
m16_133 -> m16_134  [key=0, style=solid];
m16_133 -> m16_206  [key=2, style=dotted];
m16_11 -> m16_12  [color=green, key=0, style=solid];
m16_11 -> m16_11  [color=green, key=3, label="Local variable bool initializeComplete", style=bold];
m16_12 -> m16_13  [color=green, key=0, style=solid];
m16_12 -> m16_126  [color=green, key=1, label=threadFeed, style=dashed];
m16_12 -> m16_127  [color=green, key=1, label=threadFeed, style=dashed];
m16_12 -> m16_6  [color=green, key=3, label="Local variable System.Threading.Thread threadFeed", style=bold];
m16_13 -> m16_14  [color=green, key=0, style=solid];
m16_13 -> m16_128  [color=green, key=1, label=threadTransactions, style=dashed];
m16_13 -> m16_129  [color=green, key=1, label=threadTransactions, style=dashed];
m16_13 -> m16_6  [color=green, key=3, label="Local variable System.Threading.Thread threadTransactions", style=bold];
m16_126 -> m16_127  [key=0, style=solid];
m16_126 -> m16_128  [key=0, style=solid];
m16_127 -> m16_128  [key=0, style=solid];
m16_127 -> m16_206  [key=2, style=dotted];
m16_14 -> m16_15  [color=green, key=0, style=solid];
m16_14 -> m16_6  [color=green, key=3, label="Local variable System.Threading.Thread threadResults", style=bold];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_130  [key=0, style=solid];
m16_129 -> m16_130  [key=0, style=solid];
m16_129 -> m16_206  [key=2, style=dotted];
m16_15 -> m16_16  [color=green, key=0, style=solid];
m16_15 -> m16_6  [color=green, key=3, label="Local variable System.Threading.Thread threadRealTime", style=bold];
m16_18 -> m16_19  [color=green, key=0, style=solid];
m16_18 -> m16_150  [color=green, key=2, style=dotted];
m16_18 -> m16_130  [color=green, key=1, label=threadResults, style=dashed];
m16_18 -> m16_131  [color=green, key=1, label=threadResults, style=dashed];
m16_19 -> m16_20  [color=green, key=0, style=solid];
m16_19 -> m16_147  [color=green, key=2, style=dotted];
m16_130 -> m16_131  [key=0, style=solid];
m16_130 -> m16_132  [key=0, style=solid];
m16_131 -> m16_132  [key=0, style=solid];
m16_131 -> m16_206  [key=2, style=dotted];
m16_20 -> m16_21  [color=green, key=0, style=solid];
m16_20 -> m16_6  [color=green, key=3, label="Local variable QuantConnect.Interfaces.IBrokerage brokerage", style=bold];
m16_22 -> m16_23  [key=0, style=solid];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_155  [key=2, style=dotted];
m16_32 -> m16_33  [key=0, style=solid];
m16_35 -> m16_36  [key=0, style=solid];
m16_35 -> m16_162  [key=2, style=dotted];
m16_36 -> m16_37  [key=0, style=solid];
m16_36 -> m16_43  [key=0, style=solid];
m16_36 -> m16_48  [key=0, style=solid];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_163  [key=2, style=dotted];
m16_55 -> m16_56  [key=0, style=solid];
m16_55 -> m16_57  [key=0, style=solid];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> n149  [key=2, style=dotted];
m16_56 -> m16_168  [key=2, style=dotted];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_171  [key=2, style=dotted];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_172  [key=2, style=dotted];
m16_65 -> m16_66  [key=0, style=solid];
m16_65 -> m16_216  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m16_65 -> m16_217  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m16_65 -> m16_218  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.BrokerageMessageEvent", style=dashed];
m16_79 -> m16_80  [color=red, key=0, style=solid];
m16_79 -> m16_81  [key=0, style=solid];
m16_79 -> m16_83  [color=green, key=0, style=solid];
m16_83 -> m16_84  [color=green, key=0, style=solid];
m16_83 -> m16_102  [color=green, key=1, label=trades, style=dashed];
m16_99 -> m16_100  [key=0, style=solid];
m16_99 -> m16_189  [key=2, style=dotted];
m16_99 -> m16_102  [color=darkseagreen4, key=1, label=profitLoss, style=dashed];
m16_100 -> m16_101  [key=0, style=solid];
m16_100 -> m16_190  [key=2, style=dotted];
m16_100 -> m16_191  [key=2, style=dotted];
m16_100 -> m16_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_100 -> m16_102  [color=darkseagreen4, key=1, label=totalTransactions, style=dashed];
m16_102 -> m16_103  [key=0, style=solid];
m16_102 -> m16_192  [key=2, style=dotted];
m16_102 -> m16_114  [color=darkseagreen4, key=1, label=statisticsResults, style=dashed];
m16_103 -> m16_104  [key=0, style=solid];
m16_103 -> m16_107  [color=darkseagreen4, key=1, label=netReturn, style=dashed];
m16_104 -> m16_105  [key=0, style=solid];
m16_104 -> m16_193  [key=2, style=dotted];
m16_104 -> m16_194  [key=2, style=dotted];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_193  [key=2, style=dotted];
m16_105 -> m16_194  [key=2, style=dotted];
m16_106 -> m16_107  [key=0, style=solid];
m16_106 -> m16_193  [key=2, style=dotted];
m16_106 -> m16_194  [key=2, style=dotted];
m16_108 -> m16_109  [key=0, style=solid];
m16_108 -> m16_111  [key=0, style=solid];
m16_108 -> m16_193  [key=2, style=dotted];
m16_108 -> m16_194  [key=2, style=dotted];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_157  [key=2, style=dotted];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> n149  [key=2, style=dotted];
m16_58 -> m16_168  [key=2, style=dotted];
m16_134 -> m16_135  [key=0, style=solid];
m16_134 -> m16_137  [key=0, style=solid];
m16_136 -> m16_137  [key=0, style=solid];
m16_136 -> m16_207  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_30  [key=0, style=solid];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_158  [key=2, style=dotted];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_120  [key=0, style=solid];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_59  [color=darkseagreen4, key=1, label=initializeComplete, style=dashed];
m16_43 -> m16_44  [key=0, style=solid];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_168  [key=2, style=dotted];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_163  [key=2, style=dotted];
m16_39 -> m16_39  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m16_39 -> m16_41  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m16_39 -> m16_42  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_164  [key=2, style=dotted];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_165  [key=2, style=dotted];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_167  [key=2, style=dotted];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_47  [color=darkseagreen4, key=1, label=runtimeMessage, style=dashed];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_165  [key=2, style=dotted];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> n149  [key=2, style=dotted];
m16_49 -> m16_168  [key=2, style=dotted];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> n149  [key=2, style=dotted];
m16_50 -> m16_168  [key=2, style=dotted];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> n149  [key=2, style=dotted];
m16_51 -> m16_168  [key=2, style=dotted];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> n149  [key=2, style=dotted];
m16_52 -> m16_168  [key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> n149  [key=2, style=dotted];
m16_53 -> m16_168  [key=2, style=dotted];
m16_54 -> m16_55  [key=0, style=solid];
m16_54 -> n149  [key=2, style=dotted];
m16_54 -> m16_168  [key=2, style=dotted];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_111  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m16_120 -> m16_121  [key=0, style=solid];
m16_120 -> m16_202  [key=2, style=dotted];
m16_111 -> m16_112  [key=0, style=solid];
m16_111 -> m16_113  [color=darkseagreen4, key=1, label=totalSeconds, style=dashed];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_174  [key=2, style=dotted];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_146  [key=2, style=dotted];
m16_67 -> m16_70  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m16_67 -> m16_126  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m16_67 -> m16_127  [color=darkseagreen4, key=1, label=threadFeed, style=dashed];
m16_68 -> m16_69  [color=red, key=0, style=solid];
m16_68 -> m16_146  [key=2, style=dotted];
m16_68 -> m16_71  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m16_68 -> m16_128  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m16_68 -> m16_129  [color=darkseagreen4, key=1, label=threadTransactions, style=dashed];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_147  [key=2, style=dotted];
m16_69 -> m16_70  [color=red, key=0, style=solid];
m16_69 -> m16_146  [color=red, key=2, style=dotted];
m16_69 -> m16_72  [color=darkseagreen4, key=1, label=threadRealTime, style=dashed];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_147  [key=2, style=dotted];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_147  [key=2, style=dotted];
m16_74 -> m16_75  [color=green, key=0, style=solid];
m16_74 -> m16_177  [key=2, style=dotted];
m16_74 -> m16_229  [color=darkseagreen4, key=1, label=isolator, style=dashed];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_79  [key=0, style=solid];
m16_77 -> m16_78  [key=0, style=solid];
m16_77 -> m16_179  [key=2, style=dotted];
m16_77 -> m16_164  [key=2, style=dotted];
m16_78 -> m16_83  [color=green, key=0, style=solid];
m16_78 -> m16_180  [key=2, style=dotted];
m16_78 -> m16_179  [key=2, style=dotted];
m16_81 -> m16_82  [key=0, style=solid];
m16_84 -> m16_85  [key=0, style=solid];
m16_84 -> m16_182  [key=2, style=dotted];
m16_84 -> m16_96  [color=darkseagreen4, key=1, label=charts, style=dashed];
m16_84 -> m16_97  [color=darkseagreen4, key=1, label=charts, style=dashed];
m16_84 -> m16_98  [color=darkseagreen4, key=1, label=charts, style=dashed];
m16_84 -> m16_101  [color=darkseagreen4, key=1, label=charts, style=dashed];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_182  [key=2, style=dotted];
m16_85 -> m16_114  [color=darkseagreen4, key=1, label=orders, style=dashed];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_109  [key=0, style=solid];
m16_96 -> m16_111  [key=0, style=solid];
m16_96 -> m16_188  [key=2, style=dotted];
m16_97 -> m16_98  [key=0, style=solid];
m16_97 -> m16_102  [color=darkseagreen4, key=1, label=equity, style=dashed];
m16_98 -> m16_99  [key=0, style=solid];
m16_98 -> m16_102  [color=darkseagreen4, key=1, label=performance, style=dashed];
m16_101 -> m16_102  [key=0, style=solid];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_183  [key=2, style=dotted];
m16_86 -> m16_114  [color=darkseagreen4, key=1, label=holdings, style=dashed];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_183  [key=2, style=dotted];
m16_87 -> m16_104  [color=darkseagreen4, key=1, label=banner, style=dashed];
m16_87 -> m16_105  [color=darkseagreen4, key=1, label=banner, style=dashed];
m16_87 -> m16_106  [color=darkseagreen4, key=1, label=banner, style=dashed];
m16_87 -> m16_107  [color=darkseagreen4, key=1, label=banner, style=dashed];
m16_87 -> m16_108  [color=darkseagreen4, key=1, label=banner, style=dashed];
m16_87 -> m16_114  [color=darkseagreen4, key=1, label=banner, style=dashed];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_184  [key=2, style=dotted];
m16_88 -> m16_114  [color=darkseagreen4, key=1, label=statisticsResults, style=dashed];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_193  [key=2, style=dotted];
m16_107 -> m16_194  [key=2, style=dotted];
m16_89 -> m16_90  [key=0, style=solid];
m16_89 -> m16_185  [key=2, style=dotted];
m16_89 -> m16_91  [color=green, key=1, label=csvTransactionsFileName, style=dashed];
m16_90 -> m16_91  [color=green, key=0, style=solid];
m16_90 -> m16_92  [key=0, style=solid];
m16_90 -> m16_186  [key=2, style=dotted];
m16_91 -> m16_92  [color=green, key=0, style=solid];
m16_91 -> m16_187  [color=green, key=2, style=dotted];
m16_92 -> m16_93  [key=0, style=solid];
m16_92 -> m16_96  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m16_92 -> m16_97  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m16_92 -> m16_98  [color=darkseagreen4, key=1, label=strategyEquityKey, style=dashed];
m16_92 -> m16_92  [color=darkorchid, key=3, label="Local variable string strategyEquityKey", style=bold];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_96  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m16_93 -> m16_97  [color=darkseagreen4, key=1, label=equityKey, style=dashed];
m16_93 -> m16_93  [color=green, key=3, label="Local variable string equityKey", style=bold];
m16_94 -> m16_95  [key=0, style=solid];
m16_94 -> m16_96  [color=darkseagreen4, key=1, label=dailyPerformanceKey, style=dashed];
m16_94 -> m16_98  [color=darkseagreen4, key=1, label=dailyPerformanceKey, style=dashed];
m16_94 -> m16_94  [color=green, key=3, label="Local variable string dailyPerformanceKey", style=bold];
m16_95 -> m16_96  [key=0, style=solid];
m16_95 -> m16_101  [color=darkseagreen4, key=1, label=benchmarkKey, style=dashed];
m16_95 -> m16_95  [color=green, key=3, label="Local variable string benchmarkKey", style=bold];
m16_109 -> m16_110  [key=0, style=solid];
m16_110 -> m16_111  [key=0, style=solid];
m16_110 -> m16_167  [key=2, style=dotted];
m16_115 -> m16_116  [key=0, style=solid];
m16_117 -> m16_118  [key=0, style=solid];
m16_117 -> m16_199  [key=2, style=dotted];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_167  [key=2, style=dotted];
m16_118 -> m16_119  [key=0, style=solid];
m16_118 -> m16_200  [key=2, style=dotted];
m16_119 -> m16_120  [key=0, style=solid];
m16_119 -> m16_201  [key=2, style=dotted];
m16_122 -> m16_123  [key=0, style=solid];
m16_122 -> m16_204  [key=2, style=dotted];
m16_123 -> m16_124  [key=0, style=solid];
m16_123 -> m16_126  [key=0, style=solid];
m16_124 -> m16_125  [key=0, style=solid];
m16_124 -> m16_205  [key=2, style=dotted];
m16_125 -> m16_123  [key=0, style=solid];
m16_125 -> m16_168  [key=2, style=dotted];
m16_135 -> m16_136  [key=0, style=solid];
m16_135 -> m16_168  [key=2, style=dotted];
m16_137 -> m16_138  [key=0, style=solid];
m16_137 -> m16_140  [key=0, style=solid];
m16_138 -> m16_139  [key=0, style=solid];
m16_138 -> m16_168  [key=2, style=dotted];
m16_140 -> m16_141  [key=0, style=solid];
m16_140 -> m16_143  [key=0, style=solid];
m16_140 -> m16_168  [key=2, style=dotted];
m16_139 -> m16_140  [key=0, style=solid];
m16_139 -> m16_208  [key=2, style=dotted];
m16_141 -> m16_142  [key=0, style=solid];
m16_143 -> m16_5  [color=blue, key=0, style=bold];
m16_142 -> m16_143  [key=0, style=solid];
m16_142 -> m16_167  [key=2, style=dotted];
m16_156 -> m16_254  [key=0, style=solid];
m16_156 -> m16_256  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_254 -> m16_255  [key=0, style=solid];
m16_254 -> m16_256  [key=0, style=solid];
m16_254 -> m16_258  [key=2, style=dotted];
m16_256 -> m16_257  [key=0, style=solid];
m16_256 -> m16_259  [key=2, style=dotted];
m16_255 -> m16_256  [key=0, style=solid];
m16_255 -> m16_185  [key=2, style=dotted];
m16_257 -> m16_156  [color=blue, key=0, style=bold];
m16_145 -> m16_145  [color=darkorchid, key=3, label="Field variable string US", style=bold];
m16_145 -> m16_0  [color=green, key=3, label="Field variable QuantConnect.Lean.Engine.LeanEngineAlgorithmHandlers _algorithmHandlers", style=bold];
m16_160 -> m16_160  [color=darkorchid, key=3, label="Field variable string Symbol", style=bold];
m16_159 -> m16_0  [color=green, key=3, label="Field variable QuantConnect.Lean.Engine.LeanEngineSystemHandlers _systemHandlers", style=bold];
m16_192 -> m16_192  [color=darkorchid, key=3, label="Field variable string DB", style=bold];
m16_279 -> m16_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_7  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_8  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_16  [color=green, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_17  [color=green, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_18  [color=green, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_21  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_23  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_24  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_25  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_26  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_27  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_30  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_31  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_211  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_33  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_34  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_35  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_36  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_39  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_41  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_42  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_46  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_47  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_49  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_50  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_51  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_52  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_53  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_54  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_63  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_64  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_66  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_67  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_68  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_69  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_73  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_75  [color=green, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_229  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_77  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_78  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_80  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_82  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_84  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_85  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_91  [color=green, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_102  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_103  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_113  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_114  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_117  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_118  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_119  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_120  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_123  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_137  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_139  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_244  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_245  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_246  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_249  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_250  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_279 -> m16_251  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.Engine", style=dashed];
m16_280 -> m16_210  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_280 -> m16_216  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_280 -> m16_217  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_280 -> m16_220  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_280 -> m16_222  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_280 -> m16_229  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_280 -> m16_232  [color=darkseagreen4, key=1, label=algorithm, style=dashed];
m16_281 -> m16_229  [color=darkseagreen4, key=1, label="QuantConnect.Packets.AlgorithmNodePacket", style=dashed];
m16_282 -> m16_229  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m16_282 -> m16_233  [color=darkseagreen4, key=1, label=algorithmManager, style=dashed];
m16_283 -> m16_229  [color=darkseagreen4, key=1, label=isolator, style=dashed];
m18_8 -> m18_9  [key=0, style=solid];
m18_9 -> m18_8  [color=blue, key=0, style=bold];
m18_4 -> m18_5  [key=0, style=solid];
m18_5 -> m18_4  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [color=blue, key=0, style=bold];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_2  [color=blue, key=0, style=bold];
m18_6 -> m18_7  [key=0, style=solid];
m18_7 -> m18_6  [color=blue, key=0, style=bold];
m21_4 -> m21_5  [key=0, style=solid];
m21_5 -> m21_4  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [color=blue, key=0, style=bold];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_2  [color=blue, key=0, style=bold];
m22_38 -> m22_39  [color=green, key=0, style=solid];
m22_39 -> m22_40  [color=green, key=0, style=solid];
m22_39 -> m22_28  [color=green, key=2, style=dotted];
m22_39 -> m22_42  [color=green, key=1, label=filePath, style=dashed];
m22_39 -> m22_43  [color=green, key=1, label=filePath, style=dashed];
m22_39 -> m22_44  [color=green, key=1, label=filePath, style=dashed];
m22_40 -> m22_41  [color=green, key=0, style=solid];
m22_40 -> m22_29  [key=2, style=dotted];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_31  [key=2, style=dotted];
m22_42 -> m22_32  [key=2, style=dotted];
m22_43 -> m22_44  [color=green, key=0, style=solid];
m22_43 -> m22_31  [key=2, style=dotted];
m22_43 -> m22_33  [key=2, style=dotted];
m22_44 -> m22_45  [color=green, key=0, style=solid];
m22_44 -> m22_34  [color=green, key=2, style=dotted];
m22_45 -> m22_46  [color=green, key=0, style=solid];
m22_45 -> m22_35  [color=green, key=2, style=dotted];
m22_45 -> m22_36  [color=green, key=2, style=dotted];
m22_45 -> m22_37  [color=green, key=2, style=dotted];
m22_41 -> m22_42  [color=green, key=0, style=solid];
m22_41 -> m22_14  [color=green, key=2, style=dotted];
m22_41 -> m22_30  [color=green, key=2, style=dotted];
m22_46 -> m22_38  [color=blue, key=0, style=bold];
m22_14 -> m22_15  [color=green, key=0, style=solid];
m22_15 -> m22_16  [color=green, key=0, style=solid];
m22_15 -> n173  [color=green, key=2, style=dotted];
m22_15 -> m22_17  [color=green, key=2, style=dotted];
m22_15 -> m22_8  [color=green, key=2, style=dotted];
m22_15 -> m22_18  [color=green, key=2, style=dotted];
m22_16 -> m22_14  [color=blue, key=0, style=bold];
m22_56 -> m22_57  [key=0, style=solid];
m22_61 -> m22_62  [color=green, key=0, style=solid];
m22_61 -> m22_31  [color=green, key=2, style=dotted];
m22_61 -> m22_33  [color=green, key=2, style=dotted];
m22_57 -> m22_61  [color=green, key=1, label=filePath, style=dashed];
m22_57 -> m22_28  [key=2, style=dotted];
m22_57 -> m22_58  [key=0, style=solid];
m22_57 -> m22_60  [color=darkseagreen4, key=1, label=filePath, style=dashed];
m22_57 -> m22_62  [color=darkseagreen4, key=1, label=filePath, style=dashed];
m22_60 -> m22_61  [color=green, key=0, style=solid];
m22_60 -> m22_31  [key=2, style=dotted];
m22_60 -> m22_32  [key=2, style=dotted];
m22_62 -> m22_63  [color=green, key=0, style=solid];
m22_62 -> m22_34  [key=2, style=dotted];
m22_59 -> m22_60  [color=green, key=0, style=solid];
m22_59 -> m22_14  [color=green, key=2, style=dotted];
m22_59 -> m22_30  [color=green, key=2, style=dotted];
m22_58 -> m22_59  [color=green, key=0, style=solid];
m22_58 -> m22_29  [key=2, style=dotted];
m22_63 -> m22_64  [color=green, key=0, style=solid];
m22_63 -> m22_35  [color=green, key=2, style=dotted];
m22_63 -> m22_36  [color=green, key=2, style=dotted];
m22_63 -> m22_37  [color=green, key=2, style=dotted];
m22_64 -> m22_56  [color=blue, key=0, style=bold];
m22_19 -> m22_20  [key=0, style=solid];
m22_22 -> m22_14  [key=2, style=dotted];
m22_22 -> m22_30  [key=2, style=dotted];
m22_22 -> m22_23  [key=0, style=solid];
m22_20 -> m22_28  [key=2, style=dotted];
m22_20 -> m22_21  [key=0, style=solid];
m22_20 -> m22_23  [color=darkseagreen4, key=1, label=filePath, style=dashed];
m22_20 -> m22_24  [color=darkseagreen4, key=1, label=filePath, style=dashed];
m22_20 -> m22_25  [color=darkseagreen4, key=1, label=filePath, style=dashed];
m22_21 -> m22_29  [key=2, style=dotted];
m22_21 -> m22_22  [key=0, style=solid];
m22_25 -> m22_34  [key=2, style=dotted];
m22_25 -> m22_26  [key=0, style=solid];
m22_26 -> m22_35  [key=2, style=dotted];
m22_26 -> m22_36  [key=2, style=dotted];
m22_26 -> m22_37  [key=2, style=dotted];
m22_26 -> m22_27  [key=0, style=solid];
m22_23 -> m22_31  [key=2, style=dotted];
m22_23 -> m22_32  [key=2, style=dotted];
m22_23 -> m22_24  [key=0, style=solid];
m22_24 -> m22_31  [key=2, style=dotted];
m22_24 -> m22_33  [key=2, style=dotted];
m22_24 -> m22_25  [key=0, style=solid];
m22_27 -> m22_19  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [key=0, style=solid];
m22_4 -> m22_8  [key=2, style=dotted];
m22_4 -> m22_5  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_7  [key=2, style=dotted];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_7  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_7  [key=2, style=dotted];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_7  [key=2, style=dotted];
m22_6 -> m22_0  [color=blue, key=0, style=bold];
m22_9 -> m22_10  [color=green, key=0, style=solid];
m22_10 -> m22_11  [color=green, key=0, style=solid];
m22_10 -> n173  [color=green, key=2, style=dotted];
m22_10 -> m22_13  [color=green, key=2, style=dotted];
m22_10 -> m22_8  [color=green, key=2, style=dotted];
m22_11 -> m22_9  [color=blue, key=0, style=bold];
m22_47 -> m22_48  [color=green, key=0, style=solid];
m22_48 -> m22_49  [color=green, key=0, style=solid];
m22_48 -> m22_28  [color=green, key=2, style=dotted];
m22_48 -> m22_51  [color=green, key=1, label=filePath, style=dashed];
m22_48 -> m22_52  [color=green, key=1, label=filePath, style=dashed];
m22_48 -> m22_53  [color=green, key=1, label=filePath, style=dashed];
m22_49 -> m22_50  [color=green, key=0, style=solid];
m22_49 -> m22_29  [color=green, key=2, style=dotted];
m22_51 -> m22_52  [color=green, key=0, style=solid];
m22_51 -> m22_31  [color=green, key=2, style=dotted];
m22_51 -> m22_32  [color=green, key=2, style=dotted];
m22_52 -> m22_53  [color=green, key=0, style=solid];
m22_52 -> m22_31  [color=green, key=2, style=dotted];
m22_52 -> m22_33  [color=green, key=2, style=dotted];
m22_53 -> m22_34  [key=2, style=dotted];
m22_53 -> m22_54  [key=0, style=solid];
m22_50 -> m22_51  [color=green, key=0, style=solid];
m22_50 -> m22_9  [color=green, key=2, style=dotted];
m22_50 -> m22_30  [color=green, key=2, style=dotted];
m22_54 -> m22_35  [key=2, style=dotted];
m22_54 -> m22_36  [key=2, style=dotted];
m22_54 -> m22_37  [key=2, style=dotted];
m22_54 -> m22_55  [key=0, style=solid];
m22_55 -> m22_47  [color=blue, key=0, style=bold];
m22_65 -> m22_39  [color=green, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_41  [color=green, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_48  [color=green, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_49  [color=green, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_50  [color=green, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_59  [color=green, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_4  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_5  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_20  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_21  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_22  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_40  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_57  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m22_65 -> m22_58  [color=darkseagreen4, key=1, label="QuantConnect.Tests.ToolBox.LeanDataWriterTests", style=dashed];
m25_5 -> m25_6  [color=green, key=0, style=solid];
m25_6 -> m25_7  [color=green, key=0, style=solid];
m25_6 -> m25_9  [color=green, key=2, style=dotted];
m25_7 -> m25_8  [color=green, key=0, style=solid];
m25_7 -> m25_10  [color=green, key=2, style=dotted];
m25_8 -> m25_5  [color=blue, key=0, style=bold];
m25_87 -> m25_88  [key=0, style=solid];
m25_101 -> m25_24  [color=green, key=3, label="Local variable int quantity", style=bold];
m25_101 -> m25_102  [key=0, style=solid];
m25_101 -> m25_104  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m25_92 -> m25_64  [color=green, key=3, label="Local variable decimal aapl", style=bold];
m25_92 -> m25_93  [color=green, key=0, style=solid];
m25_93 -> m25_65  [color=green, key=3, label="Local variable decimal delta", style=bold];
m25_93 -> m25_94  [color=green, key=0, style=solid];
m25_94 -> m25_95  [color=green, key=0, style=solid];
m25_94 -> m25_113  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_89 -> m25_94  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_89 -> m25_115  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_89 -> m25_31  [key=2, style=dotted];
m25_89 -> m25_90  [key=0, style=solid];
m25_89 -> m25_97  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_89 -> m25_98  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_89 -> m25_105  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_90 -> m25_94  [color=green, key=1, label=ib, style=dashed];
m25_90 -> m25_96  [color=green, key=1, label=ib, style=dashed];
m25_90 -> m25_15  [key=2, style=dotted];
m25_90 -> m25_91  [key=0, style=solid];
m25_90 -> m25_103  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_90 -> m25_104  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_90 -> m25_106  [color=darkseagreen4, key=1, label=ib, style=dashed];
m25_95 -> m25_96  [color=green, key=0, style=solid];
m25_95 -> m25_67  [color=green, key=3, label="Local variable int id", style=bold];
m25_96 -> m25_96  [color=green, key=1, label=id, style=dashed];
m25_96 -> m25_97  [color=green, key=0, style=solid];
m25_96 -> m25_33  [color=green, key=2, style=dotted];
m25_96 -> m25_34  [color=green, key=2, style=dotted];
m25_96 -> m25_102  [color=green, key=1, label=id, style=dashed];
m25_97 -> m25_35  [key=2, style=dotted];
m25_97 -> m25_98  [key=0, style=solid];
m25_102 -> m25_102  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_102 -> m25_103  [key=0, style=solid];
m25_102 -> m25_110  [key=2, style=dotted];
m25_102 -> m25_104  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_102 -> m25_106  [color=darkseagreen4, key=1, label=order, style=dashed];
m25_104 -> m25_34  [key=2, style=dotted];
m25_104 -> m25_104  [color=darkseagreen4, key=1, label=id, style=dashed];
m25_104 -> m25_105  [key=0, style=solid];
m25_104 -> m25_110  [key=2, style=dotted];
m25_107 -> m25_108  [color=green, key=0, style=solid];
m25_107 -> m25_37  [color=green, key=2, style=dotted];
m25_106 -> m25_107  [color=green, key=0, style=solid];
m25_106 -> m25_36  [key=2, style=dotted];
m25_88 -> m25_18  [color=darkorchid, key=3, label="Local variable bool orderFilled", style=bold];
m25_88 -> m25_89  [key=0, style=solid];
m25_105 -> m25_35  [key=2, style=dotted];
m25_105 -> m25_106  [key=0, style=solid];
m25_103 -> m25_34  [key=2, style=dotted];
m25_103 -> m25_104  [key=0, style=solid];
m25_100 -> m25_101  [key=0, style=solid];
m25_100 -> m25_106  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_91 -> m25_16  [key=2, style=dotted];
m25_91 -> m25_92  [key=0, style=solid];
m25_98 -> m25_79  [key=2, style=dotted];
m25_98 -> m25_99  [key=0, style=solid];
m25_99 -> m25_100  [key=0, style=solid];
m25_99 -> m25_109  [key=2, style=dotted];
m25_108 -> m25_87  [color=blue, key=0, style=bold];
m25_59 -> m25_60  [color=green, key=0, style=solid];
m25_71 -> m25_24  [color=green, key=3, label="Local variable int quantity", style=bold];
m25_71 -> m25_74  [color=green, key=1, label=quantity, style=dashed];
m25_71 -> m25_72  [color=green, key=0, style=solid];
m25_60 -> m25_61  [color=green, key=0, style=solid];
m25_60 -> m25_18  [color=green, key=3, label="Local variable bool orderFilled", style=bold];
m25_61 -> m25_62  [color=green, key=0, style=solid];
m25_61 -> m25_31  [color=green, key=2, style=dotted];
m25_61 -> m25_66  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_61 -> m25_85  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_61 -> m25_69  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_61 -> m25_70  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_61 -> m25_75  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_62 -> m25_63  [color=green, key=0, style=solid];
m25_62 -> m25_15  [color=green, key=2, style=dotted];
m25_62 -> m25_66  [color=green, key=1, label=ib, style=dashed];
m25_62 -> m25_68  [color=green, key=1, label=ib, style=dashed];
m25_62 -> m25_73  [color=green, key=1, label=ib, style=dashed];
m25_62 -> m25_74  [color=green, key=1, label=ib, style=dashed];
m25_62 -> m25_76  [color=green, key=1, label=ib, style=dashed];
m25_66 -> m25_67  [color=green, key=0, style=solid];
m25_66 -> m25_83  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_69 -> m25_70  [color=green, key=0, style=solid];
m25_69 -> m25_35  [color=green, key=2, style=dotted];
m25_70 -> m25_71  [color=green, key=0, style=solid];
m25_70 -> m25_79  [color=green, key=2, style=dotted];
m25_75 -> m25_76  [color=green, key=0, style=solid];
m25_75 -> m25_35  [color=green, key=2, style=dotted];
m25_63 -> m25_64  [color=green, key=0, style=solid];
m25_63 -> m25_16  [color=green, key=2, style=dotted];
m25_68 -> m25_69  [color=green, key=0, style=solid];
m25_68 -> m25_68  [color=green, key=1, label=id, style=dashed];
m25_68 -> m25_33  [color=green, key=2, style=dotted];
m25_68 -> m25_34  [color=green, key=2, style=dotted];
m25_68 -> m25_72  [color=green, key=1, label=id, style=dashed];
m25_73 -> m25_74  [color=green, key=0, style=solid];
m25_73 -> m25_34  [color=green, key=2, style=dotted];
m25_74 -> m25_75  [color=green, key=0, style=solid];
m25_74 -> m25_74  [color=green, key=1, label=id, style=dashed];
m25_74 -> m25_80  [color=green, key=2, style=dotted];
m25_74 -> m25_34  [color=green, key=2, style=dotted];
m25_76 -> m25_77  [color=green, key=0, style=solid];
m25_76 -> m25_36  [color=green, key=2, style=dotted];
m25_65 -> m25_66  [color=green, key=0, style=solid];
m25_65 -> m25_65  [color=green, key=3, label="Local variable decimal delta", style=bold];
m25_67 -> m25_68  [color=green, key=0, style=solid];
m25_67 -> m25_67  [color=darkorchid, key=3, label="Local variable int id", style=bold];
m25_64 -> m25_64  [color=green, key=3, label="Local variable decimal aapl", style=bold];
m25_64 -> m25_65  [color=green, key=0, style=solid];
m25_72 -> m25_73  [color=green, key=0, style=solid];
m25_72 -> m25_74  [color=green, key=1, label=id, style=dashed];
m25_72 -> m25_76  [color=green, key=1, label=order, style=dashed];
m25_72 -> m25_72  [color=green, key=1, label=id, style=dashed];
m25_72 -> m25_80  [color=green, key=2, style=dotted];
m25_77 -> m25_78  [color=green, key=0, style=solid];
m25_77 -> m25_37  [color=green, key=2, style=dotted];
m25_78 -> m25_59  [color=blue, key=0, style=bold];
m25_132 -> m25_133  [key=0, style=solid];
m25_40 -> m25_41  [color=green, key=0, style=solid];
m25_40 -> m25_42  [color=green, key=2, style=dotted];
m25_39 -> m25_40  [color=green, key=0, style=solid];
m25_39 -> m25_28  [color=green, key=1, label=orderFilled, style=dashed];
m25_39 -> m25_41  [color=green, key=1, label=orderFilled, style=dashed];
m25_41 -> m25_38  [color=blue, key=0, style=bold];
m25_38 -> m25_39  [color=green, key=0, style=solid];
m25_57 -> m25_58  [color=green, key=0, style=solid];
m25_57 -> m25_42  [color=green, key=2, style=dotted];
m25_56 -> m25_57  [color=green, key=0, style=solid];
m25_56 -> m25_52  [color=green, key=1, label=orderFilled, style=dashed];
m25_56 -> m25_58  [color=green, key=1, label=orderFilled, style=dashed];
m25_58 -> m25_55  [color=blue, key=0, style=bold];
m25_55 -> m25_56  [color=green, key=0, style=solid];
m25_85 -> m25_42  [key=2, style=dotted];
m25_85 -> m25_86  [key=0, style=solid];
m25_83 -> m25_74  [color=green, key=1, label=aapl, style=dashed];
m25_83 -> m25_84  [color=green, key=0, style=solid];
m25_83 -> m25_72  [color=green, key=1, label=aapl, style=dashed];
m25_83 -> m25_86  [color=green, key=1, label=aapl, style=dashed];
m25_84 -> m25_74  [color=green, key=1, label=delta, style=dashed];
m25_84 -> m25_72  [color=green, key=1, label=delta, style=dashed];
m25_84 -> m25_85  [color=green, key=0, style=solid];
m25_84 -> m25_86  [color=green, key=1, label=delta, style=dashed];
m25_82 -> m25_76  [color=green, key=1, label=orderFilled, style=dashed];
m25_82 -> m25_83  [color=green, key=0, style=solid];
m25_82 -> m25_86  [color=green, key=1, label=orderFilled, style=dashed];
m25_81 -> m25_83  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_81 -> m25_82  [color=green, key=0, style=solid];
m25_86 -> m25_81  [color=blue, key=0, style=bold];
m25_113 -> m25_114  [color=green, key=0, style=solid];
m25_113 -> m25_102  [color=green, key=1, label=aapl, style=dashed];
m25_113 -> m25_104  [color=green, key=1, label=aapl, style=dashed];
m25_113 -> m25_116  [color=green, key=1, label=aapl, style=dashed];
m25_115 -> m25_116  [color=green, key=0, style=solid];
m25_115 -> m25_42  [color=green, key=2, style=dotted];
m25_114 -> m25_115  [color=green, key=0, style=solid];
m25_114 -> m25_102  [color=green, key=1, label=delta, style=dashed];
m25_114 -> m25_104  [color=green, key=1, label=delta, style=dashed];
m25_114 -> m25_116  [color=green, key=1, label=delta, style=dashed];
m25_116 -> m25_111  [color=blue, key=0, style=bold];
m25_111 -> m25_113  [color=green, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_111 -> m25_112  [key=0, style=solid];
m25_112 -> m25_113  [color=green, key=0, style=solid];
m25_112 -> m25_116  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_112 -> m25_99  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m25_149 -> m25_150  [key=0, style=solid];
m25_149 -> m25_145  [key=2, style=dotted];
m25_149 -> m25_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_134 -> m25_42  [key=2, style=dotted];
m25_134 -> m25_135  [key=0, style=solid];
m25_133 -> m25_134  [key=0, style=solid];
m25_133 -> m25_129  [color=darkseagreen4, key=1, label=status, style=dashed];
m25_133 -> m25_135  [color=darkseagreen4, key=1, label=status, style=dashed];
m25_148 -> m25_149  [key=0, style=solid];
m25_148 -> m25_152  [color=darkseagreen4, key=1, label=long, style=dashed];
m25_150 -> m25_148  [color=blue, key=0, style=bold];
m25_151 -> m25_152  [key=0, style=solid];
m25_135 -> m25_132  [color=blue, key=0, style=bold];
m25_152 -> m25_153  [key=0, style=solid];
m25_153 -> m25_151  [color=blue, key=0, style=bold];
m25_17 -> m25_18  [key=0, style=solid];
m25_20 -> m25_21  [color=green, key=0, style=solid];
m25_20 -> m25_15  [color=green, key=2, style=dotted];
m25_20 -> m25_22  [color=green, key=1, label=ib, style=dashed];
m25_20 -> m25_23  [color=green, key=1, label=ib, style=dashed];
m25_20 -> m25_26  [color=green, key=1, label=ib, style=dashed];
m25_20 -> m25_28  [color=green, key=1, label=ib, style=dashed];
m25_19 -> m25_20  [color=green, key=0, style=solid];
m25_19 -> m25_23  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_19 -> m25_40  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_19 -> m25_27  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_19 -> m25_31  [key=2, style=dotted];
m25_21 -> m25_22  [color=green, key=0, style=solid];
m25_21 -> m25_16  [key=2, style=dotted];
m25_22 -> m25_23  [color=green, key=0, style=solid];
m25_22 -> m25_32  [color=green, key=2, style=dotted];
m25_23 -> m25_24  [color=green, key=0, style=solid];
m25_26 -> m25_27  [color=green, key=0, style=solid];
m25_26 -> m25_34  [color=green, key=2, style=dotted];
m25_28 -> m25_29  [color=green, key=0, style=solid];
m25_28 -> m25_36  [color=green, key=2, style=dotted];
m25_24 -> m25_24  [color=green, key=3, label="Local variable int buyQuantity", style=bold];
m25_24 -> m25_25  [color=green, key=0, style=solid];
m25_27 -> m25_28  [color=green, key=0, style=solid];
m25_27 -> m25_35  [color=green, key=2, style=dotted];
m25_25 -> m25_26  [color=green, key=0, style=solid];
m25_25 -> m25_28  [color=green, key=1, label=order, style=dashed];
m25_25 -> m25_33  [color=green, key=2, style=dotted];
m25_29 -> m25_30  [color=green, key=0, style=solid];
m25_29 -> m25_37  [color=green, key=2, style=dotted];
m25_18 -> m25_19  [key=0, style=solid];
m25_18 -> m25_18  [color=darkorchid, key=3, label="Local variable bool orderFilled", style=bold];
m25_30 -> m25_17  [color=blue, key=0, style=bold];
m25_11 -> m25_12  [key=0, style=solid];
m25_12 -> m25_15  [key=2, style=dotted];
m25_12 -> m25_13  [key=0, style=solid];
m25_13 -> m25_16  [key=2, style=dotted];
m25_13 -> m25_14  [key=0, style=solid];
m25_14 -> m25_11  [color=blue, key=0, style=bold];
m25_117 -> m25_118  [key=0, style=solid];
m25_120 -> m25_121  [color=green, key=0, style=solid];
m25_120 -> m25_15  [color=green, key=2, style=dotted];
m25_120 -> m25_122  [color=green, key=1, label=ib, style=dashed];
m25_120 -> m25_124  [color=green, key=1, label=ib, style=dashed];
m25_120 -> m25_126  [color=green, key=1, label=ib, style=dashed];
m25_119 -> m25_120  [color=green, key=0, style=solid];
m25_119 -> m25_127  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_119 -> m25_31  [key=2, style=dotted];
m25_119 -> m25_122  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_119 -> m25_134  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_119 -> m25_125  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_119 -> m25_128  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_121 -> m25_16  [key=2, style=dotted];
m25_121 -> m25_122  [key=0, style=solid];
m25_122 -> m25_123  [key=0, style=solid];
m25_122 -> m25_133  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m25_124 -> m25_34  [key=2, style=dotted];
m25_124 -> m25_125  [key=0, style=solid];
m25_126 -> m25_127  [color=green, key=0, style=solid];
m25_126 -> m25_131  [color=green, key=2, style=dotted];
m25_127 -> m25_128  [color=green, key=0, style=solid];
m25_127 -> m25_79  [color=green, key=2, style=dotted];
m25_128 -> m25_35  [key=2, style=dotted];
m25_128 -> m25_129  [key=0, style=solid];
m25_125 -> m25_126  [color=green, key=0, style=solid];
m25_125 -> m25_35  [key=2, style=dotted];
m25_123 -> m25_126  [color=green, key=1, label=order, style=dashed];
m25_123 -> m25_80  [key=2, style=dotted];
m25_123 -> m25_124  [key=0, style=solid];
m25_129 -> m25_37  [key=2, style=dotted];
m25_129 -> m25_130  [key=0, style=solid];
m25_118 -> m25_119  [key=0, style=solid];
m25_130 -> m25_117  [color=blue, key=0, style=bold];
m25_43 -> m25_44  [color=green, key=0, style=solid];
m25_44 -> m25_45  [color=green, key=0, style=solid];
m25_44 -> m25_18  [color=green, key=3, label="Local variable bool orderFilled", style=bold];
m25_45 -> m25_46  [color=green, key=0, style=solid];
m25_45 -> m25_31  [color=green, key=2, style=dotted];
m25_45 -> m25_48  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_45 -> m25_57  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_45 -> m25_51  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_46 -> m25_47  [color=green, key=0, style=solid];
m25_46 -> m25_15  [color=green, key=2, style=dotted];
m25_46 -> m25_48  [color=green, key=1, label=ib, style=dashed];
m25_46 -> m25_50  [color=green, key=1, label=ib, style=dashed];
m25_46 -> m25_52  [color=green, key=1, label=ib, style=dashed];
m25_48 -> m25_49  [color=green, key=0, style=solid];
m25_51 -> m25_52  [color=green, key=0, style=solid];
m25_51 -> m25_35  [color=green, key=2, style=dotted];
m25_47 -> m25_48  [color=green, key=0, style=solid];
m25_47 -> m25_16  [color=green, key=2, style=dotted];
m25_50 -> m25_51  [color=green, key=0, style=solid];
m25_50 -> m25_34  [color=green, key=2, style=dotted];
m25_52 -> m25_53  [color=green, key=0, style=solid];
m25_52 -> m25_36  [color=green, key=2, style=dotted];
m25_49 -> m25_50  [color=green, key=0, style=solid];
m25_49 -> m25_52  [color=green, key=1, label=order, style=dashed];
m25_49 -> m25_33  [color=green, key=2, style=dotted];
m25_53 -> m25_54  [color=green, key=0, style=solid];
m25_53 -> m25_37  [color=green, key=2, style=dotted];
m25_54 -> m25_43  [color=blue, key=0, style=bold];
m25_36 -> m25_20  [color=green, key=3, label="Parameter variable QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage ib", style=bold];
m25_36 -> m25_25  [color=green, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m25_36 -> m25_44  [color=green, key=3, label="Parameter variable bool orderFilled", style=bold];
m25_36 -> m25_46  [color=green, key=3, label="Parameter variable QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage ib", style=bold];
m25_36 -> m25_49  [color=green, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m25_36 -> m25_60  [color=green, key=3, label="Parameter variable bool orderFilled", style=bold];
m25_36 -> m25_62  [color=green, key=3, label="Parameter variable QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage ib", style=bold];
m25_36 -> m25_72  [color=green, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m25_36 -> m25_136  [color=green, key=0, style=solid];
m25_36 -> m25_137  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m25_36 -> m25_138  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m25_36 -> m25_149  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m25_36 -> m25_18  [color=darkorchid, key=3, label="Parameter variable bool orderFilled", style=bold];
m25_36 -> m25_88  [color=darkorchid, key=3, label="Parameter variable bool orderFilled", style=bold];
m25_36 -> m25_90  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage ib", style=bold];
m25_36 -> m25_102  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Orders.Order order", style=bold];
m25_36 -> m25_142  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Orders.Order AssertOrderOpened", style=bold];
m25_136 -> m25_137  [color=green, key=0, style=solid];
m25_136 -> m25_141  [color=green, key=0, style=solid];
m25_137 -> m25_139  [color=green, key=1, label=openOrder, style=dashed];
m25_137 -> m25_138  [key=0, style=solid];
m25_137 -> m25_140  [key=0, style=solid];
m25_137 -> m25_144  [key=2, style=dotted];
m25_141 -> m25_142  [key=0, style=solid];
m25_141 -> m25_147  [key=2, style=dotted];
m25_139 -> m25_143  [color=green, key=0, style=solid];
m25_138 -> m25_139  [color=green, key=0, style=solid];
m25_138 -> m25_137  [key=0, style=solid];
m25_138 -> m25_145  [key=2, style=dotted];
m25_138 -> m25_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_142 -> m25_143  [key=0, style=solid];
m25_140 -> m25_141  [key=0, style=solid];
m25_140 -> m25_146  [key=2, style=dotted];
m25_143 -> m25_36  [color=blue, key=0, style=bold];
m25_154 -> m25_40  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_155 -> m25_57  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_157 -> m25_115  [color=green, key=1, label=manualResetEvent, style=dashed];
m25_156 -> m25_85  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_159 -> m25_149  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m25_158 -> m25_134  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m25_160 -> m25_152  [color=darkseagreen4, key=1, label=long, style=dashed];
m28_2 -> m28_3  [key=0, style=solid];
m28_3 -> m28_2  [color=blue, key=0, style=bold];
m28_8 -> m28_9  [key=0, style=solid];
m28_9 -> m28_8  [color=blue, key=0, style=bold];
m28_4 -> m28_5  [key=0, style=solid];
m28_5 -> m28_4  [color=blue, key=0, style=bold];
m28_14 -> m28_15  [key=0, style=solid];
m28_15 -> m28_14  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [color=blue, key=0, style=bold];
m28_6 -> m28_7  [key=0, style=solid];
m28_7 -> m28_6  [color=blue, key=0, style=bold];
m28_12 -> m28_13  [key=0, style=solid];
m28_13 -> m28_12  [color=blue, key=0, style=bold];
m28_10 -> m28_11  [key=0, style=solid];
m28_11 -> m28_10  [color=blue, key=0, style=bold];
m31_185 -> m31_186  [key=0, style=solid];
m31_186 -> m31_187  [key=0, style=solid];
m31_186 -> m31_191  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_187 -> m31_188  [key=0, style=solid];
m31_187 -> m31_189  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_187 -> m31_193  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_187 -> m31_198  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_191 -> m31_192  [key=0, style=solid];
m31_191 -> m31_145  [key=2, style=dotted];
m31_191 -> m31_191  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_191 -> m31_193  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_191 -> m31_197  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_191 -> m31_198  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_188 -> m31_189  [key=0, style=solid];
m31_189 -> m31_190  [key=0, style=solid];
m31_189 -> m31_205  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_189 -> m31_195  [color=darkseagreen4, key=1, label=filled, style=dashed];
m31_189 -> m31_199  [color=darkseagreen4, key=1, label=filled, style=dashed];
m31_193 -> m31_194  [key=0, style=solid];
m31_193 -> m31_83  [key=2, style=dotted];
m31_198 -> m31_195  [key=0, style=solid];
m31_198 -> m31_203  [key=2, style=dotted];
m31_190 -> m31_191  [key=0, style=solid];
m31_195 -> m31_196  [key=0, style=solid];
m31_195 -> m31_199  [key=0, style=solid];
m31_199 -> m31_200  [key=0, style=solid];
m31_199 -> m31_68  [key=2, style=dotted];
m31_192 -> m31_193  [key=0, style=solid];
m31_192 -> m31_82  [key=2, style=dotted];
m31_197 -> m31_198  [key=0, style=solid];
m31_194 -> m31_195  [key=0, style=solid];
m31_194 -> m31_201  [key=2, style=dotted];
m31_196 -> m31_197  [key=0, style=solid];
m31_196 -> m31_202  [key=2, style=dotted];
m31_200 -> m31_185  [color=blue, key=0, style=bold];
m31_405 -> m31_406  [key=0, style=solid];
m31_405 -> m31_409  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_406 -> m31_407  [key=0, style=solid];
m31_406 -> m31_225  [key=2, style=dotted];
m31_406 -> m31_408  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_407 -> m31_405  [color=blue, key=0, style=bold];
m31_153 -> m31_154  [key=0, style=solid];
m31_154 -> m31_155  [key=0, style=solid];
m31_155 -> m31_156  [key=0, style=solid];
m31_155 -> m31_34  [key=2, style=dotted];
m31_155 -> m31_159  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_155 -> m31_183  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_155 -> m31_164  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_155 -> m31_165  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_155 -> m31_174  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_156 -> m31_157  [key=0, style=solid];
m31_156 -> m31_159  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_156 -> m31_163  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_156 -> m31_170  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_156 -> m31_173  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_156 -> m31_175  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_159 -> m31_160  [key=0, style=solid];
m31_159 -> m31_181  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_164 -> m31_165  [key=0, style=solid];
m31_164 -> m31_37  [key=2, style=dotted];
m31_165 -> m31_166  [key=0, style=solid];
m31_165 -> m31_38  [key=2, style=dotted];
m31_174 -> m31_175  [key=0, style=solid];
m31_174 -> m31_37  [key=2, style=dotted];
m31_157 -> m31_158  [key=0, style=solid];
m31_163 -> m31_164  [key=0, style=solid];
m31_163 -> m31_83  [key=2, style=dotted];
m31_170 -> m31_171  [key=0, style=solid];
m31_170 -> m31_83  [key=2, style=dotted];
m31_173 -> m31_174  [key=0, style=solid];
m31_173 -> m31_83  [key=2, style=dotted];
m31_175 -> m31_176  [key=0, style=solid];
m31_175 -> m31_98  [key=2, style=dotted];
m31_158 -> m31_159  [key=0, style=solid];
m31_160 -> m31_161  [key=0, style=solid];
m31_161 -> m31_162  [key=0, style=solid];
m31_161 -> m31_81  [key=2, style=dotted];
m31_161 -> m31_161  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_161 -> m31_163  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_161 -> m31_168  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_162 -> m31_163  [key=0, style=solid];
m31_162 -> m31_82  [key=2, style=dotted];
m31_168 -> m31_169  [key=0, style=solid];
m31_168 -> m31_178  [key=2, style=dotted];
m31_168 -> m31_168  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_168 -> m31_170  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_168 -> m31_171  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_166 -> m31_167  [key=0, style=solid];
m31_166 -> m31_68  [key=2, style=dotted];
m31_167 -> m31_168  [key=0, style=solid];
m31_167 -> m31_175  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_169 -> m31_170  [key=0, style=solid];
m31_169 -> m31_82  [key=2, style=dotted];
m31_171 -> m31_172  [key=0, style=solid];
m31_171 -> m31_178  [key=2, style=dotted];
m31_171 -> m31_171  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_171 -> m31_173  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_171 -> m31_175  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_172 -> m31_173  [key=0, style=solid];
m31_172 -> m31_82  [key=2, style=dotted];
m31_176 -> m31_177  [key=0, style=solid];
m31_176 -> m31_99  [key=2, style=dotted];
m31_177 -> m31_153  [color=blue, key=0, style=bold];
m31_122 -> m31_123  [key=0, style=solid];
m31_123 -> m31_124  [key=0, style=solid];
m31_124 -> m31_125  [key=0, style=solid];
m31_124 -> m31_34  [key=2, style=dotted];
m31_124 -> m31_128  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_124 -> m31_149  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_124 -> m31_133  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_124 -> m31_134  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_124 -> m31_141  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_125 -> m31_126  [key=0, style=solid];
m31_125 -> m31_128  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_125 -> m31_132  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_125 -> m31_137  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_125 -> m31_140  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_125 -> m31_142  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_128 -> m31_129  [key=0, style=solid];
m31_128 -> m31_147  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_128 -> m31_150  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_128 -> m31_142  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_133 -> m31_134  [key=0, style=solid];
m31_133 -> m31_37  [key=2, style=dotted];
m31_134 -> m31_135  [key=0, style=solid];
m31_134 -> m31_38  [key=2, style=dotted];
m31_141 -> m31_142  [key=0, style=solid];
m31_141 -> m31_37  [key=2, style=dotted];
m31_126 -> m31_127  [key=0, style=solid];
m31_132 -> m31_133  [key=0, style=solid];
m31_132 -> m31_83  [key=2, style=dotted];
m31_137 -> m31_138  [key=0, style=solid];
m31_137 -> m31_83  [key=2, style=dotted];
m31_140 -> m31_141  [key=0, style=solid];
m31_140 -> m31_83  [key=2, style=dotted];
m31_142 -> m31_143  [key=0, style=solid];
m31_142 -> m31_98  [key=2, style=dotted];
m31_127 -> m31_128  [key=0, style=solid];
m31_129 -> m31_130  [key=0, style=solid];
m31_130 -> m31_131  [key=0, style=solid];
m31_130 -> m31_81  [key=2, style=dotted];
m31_130 -> m31_130  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_130 -> m31_132  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_130 -> m31_135  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_131 -> m31_132  [key=0, style=solid];
m31_131 -> m31_82  [key=2, style=dotted];
m31_135 -> m31_136  [key=0, style=solid];
m31_135 -> m31_145  [key=2, style=dotted];
m31_135 -> m31_135  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_135 -> m31_137  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_135 -> m31_138  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_136 -> m31_137  [key=0, style=solid];
m31_136 -> m31_82  [key=2, style=dotted];
m31_138 -> m31_139  [key=0, style=solid];
m31_138 -> m31_145  [key=2, style=dotted];
m31_138 -> m31_138  [color=darkseagreen4, key=1, label=id, style=dashed];
m31_138 -> m31_140  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_138 -> m31_142  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_139 -> m31_140  [key=0, style=solid];
m31_139 -> m31_82  [key=2, style=dotted];
m31_143 -> m31_144  [key=0, style=solid];
m31_143 -> m31_99  [key=2, style=dotted];
m31_144 -> m31_122  [color=blue, key=0, style=bold];
m31_411 -> m31_412  [key=0, style=solid];
m31_411 -> m31_415  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_412 -> m31_413  [key=0, style=solid];
m31_412 -> m31_225  [key=2, style=dotted];
m31_412 -> m31_414  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_413 -> m31_411  [color=blue, key=0, style=bold];
m31_300 -> m31_301  [key=0, style=solid];
m31_301 -> m31_302  [key=0, style=solid];
m31_301 -> m31_303  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_301 -> m31_306  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_301 -> m31_312  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_302 -> m31_303  [key=0, style=solid];
m31_302 -> m31_34  [key=2, style=dotted];
m31_302 -> m31_323  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m31_302 -> m31_313  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m31_302 -> m31_314  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m31_303 -> m31_304  [key=0, style=solid];
m31_303 -> m31_322  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_306 -> m31_307  [key=0, style=solid];
m31_306 -> m31_326  [color=darkseagreen4, key=1, label="QuantConnect.Securities.AccountEvent", style=dashed];
m31_312 -> m31_313  [key=0, style=solid];
m31_312 -> m31_83  [key=2, style=dotted];
m31_313 -> m31_314  [key=0, style=solid];
m31_313 -> m31_224  [key=2, style=dotted];
m31_314 -> m31_315  [key=0, style=solid];
m31_314 -> m31_38  [key=2, style=dotted];
m31_304 -> m31_305  [key=0, style=solid];
m31_304 -> n173  [key=2, style=dotted];
m31_304 -> m31_306  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m31_304 -> m31_326  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m31_304 -> m31_318  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m31_305 -> m31_306  [key=0, style=solid];
m31_305 -> m31_34  [key=2, style=dotted];
m31_305 -> m31_327  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m31_305 -> m31_315  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m31_305 -> m31_316  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m31_318 -> m31_319  [key=0, style=solid];
m31_318 -> m31_99  [key=2, style=dotted];
m31_315 -> m31_316  [key=0, style=solid];
m31_315 -> m31_224  [key=2, style=dotted];
m31_316 -> m31_317  [key=0, style=solid];
m31_316 -> m31_38  [key=2, style=dotted];
m31_307 -> m31_308  [key=0, style=solid];
m31_307 -> m31_309  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m31_307 -> m31_318  [color=darkseagreen4, key=1, label=orderCount, style=dashed];
m31_308 -> m31_309  [key=0, style=solid];
m31_308 -> m31_310  [color=darkseagreen4, key=1, label=i, style=dashed];
m31_308 -> m31_313  [color=darkseagreen4, key=1, label=i, style=dashed];
m31_308 -> m31_315  [color=darkseagreen4, key=1, label=i, style=dashed];
m31_308 -> m31_317  [color=darkseagreen4, key=1, label=i, style=dashed];
m31_309 -> m31_310  [key=0, style=solid];
m31_309 -> m31_318  [key=0, style=solid];
m31_310 -> m31_311  [key=0, style=solid];
m31_310 -> m31_81  [key=2, style=dotted];
m31_310 -> m31_249  [key=2, style=dotted];
m31_310 -> m31_312  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_317 -> m31_309  [key=0, style=solid];
m31_317 -> m31_317  [color=darkseagreen4, key=1, label=i, style=dashed];
m31_311 -> m31_312  [key=0, style=solid];
m31_311 -> m31_82  [key=2, style=dotted];
m31_319 -> m31_300  [color=blue, key=0, style=bold];
m31_414 -> m31_415  [key=0, style=solid];
m31_49 -> m31_50  [key=0, style=solid];
m31_49 -> m31_51  [key=2, style=dotted];
m31_47 -> m31_48  [key=0, style=solid];
m31_47 -> m31_51  [key=2, style=dotted];
m31_46 -> m31_47  [key=0, style=solid];
m31_46 -> m31_48  [key=0, style=solid];
m31_48 -> m31_49  [key=0, style=solid];
m31_48 -> m31_50  [key=0, style=solid];
m31_52 -> m31_53  [key=0, style=solid];
m31_55 -> m31_56  [key=0, style=solid];
m31_58 -> m31_59  [key=0, style=solid];
m31_61 -> m31_62  [key=0, style=solid];
m31_45 -> m31_46  [key=0, style=solid];
m31_45 -> m31_48  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_50 -> m31_45  [color=blue, key=0, style=bold];
m31_53 -> m31_54  [key=0, style=solid];
m31_54 -> m31_52  [color=blue, key=0, style=bold];
m31_56 -> m31_57  [key=0, style=solid];
m31_57 -> m31_55  [color=blue, key=0, style=bold];
m31_59 -> m31_60  [key=0, style=solid];
m31_60 -> m31_58  [color=blue, key=0, style=bold];
m31_62 -> m31_63  [key=0, style=solid];
m31_63 -> m31_61  [color=blue, key=0, style=bold];
m31_103 -> m31_104  [key=0, style=solid];
m31_103 -> m31_51  [key=2, style=dotted];
m31_101 -> m31_102  [key=0, style=solid];
m31_101 -> m31_104  [key=0, style=solid];
m31_100 -> m31_101  [key=0, style=solid];
m31_102 -> m31_103  [key=0, style=solid];
m31_102 -> m31_95  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_102 -> m31_104  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_104 -> m31_100  [color=blue, key=0, style=bold];
m31_120 -> m31_121  [key=0, style=solid];
m31_120 -> m31_51  [key=2, style=dotted];
m31_118 -> m31_119  [key=0, style=solid];
m31_118 -> m31_121  [key=0, style=solid];
m31_117 -> m31_118  [key=0, style=solid];
m31_119 -> m31_120  [key=0, style=solid];
m31_119 -> m31_114  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_119 -> m31_121  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_121 -> m31_117  [color=blue, key=0, style=bold];
m31_149 -> m31_150  [key=0, style=solid];
m31_149 -> m31_51  [key=2, style=dotted];
m31_147 -> m31_148  [key=0, style=solid];
m31_147 -> m31_150  [key=0, style=solid];
m31_150 -> m31_151  [key=0, style=solid];
m31_150 -> m31_135  [color=darkseagreen4, key=1, label=price, style=dashed];
m31_150 -> m31_138  [color=darkseagreen4, key=1, label=price, style=dashed];
m31_150 -> m31_152  [color=darkseagreen4, key=1, label=price, style=dashed];
m31_146 -> m31_147  [key=0, style=solid];
m31_146 -> m31_150  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_148 -> m31_149  [key=0, style=solid];
m31_148 -> m31_142  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_148 -> m31_152  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_152 -> m31_146  [color=blue, key=0, style=bold];
m31_151 -> m31_152  [key=0, style=solid];
m31_151 -> m31_135  [color=darkseagreen4, key=1, label=delta, style=dashed];
m31_151 -> m31_138  [color=darkseagreen4, key=1, label=delta, style=dashed];
m31_183 -> m31_184  [key=0, style=solid];
m31_183 -> m31_51  [key=2, style=dotted];
m31_181 -> m31_182  [key=0, style=solid];
m31_181 -> m31_168  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m31_181 -> m31_171  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m31_181 -> m31_184  [color=darkseagreen4, key=1, label=fillPrice, style=dashed];
m31_179 -> m31_180  [key=0, style=solid];
m31_179 -> m31_181  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_180 -> m31_181  [key=0, style=solid];
m31_180 -> m31_166  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_180 -> m31_184  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_184 -> m31_179  [color=blue, key=0, style=bold];
m31_182 -> m31_183  [key=0, style=solid];
m31_182 -> m31_168  [color=darkseagreen4, key=1, label=delta, style=dashed];
m31_182 -> m31_171  [color=darkseagreen4, key=1, label=delta, style=dashed];
m31_182 -> m31_184  [color=darkseagreen4, key=1, label=delta, style=dashed];
m31_205 -> m31_206  [key=0, style=solid];
m31_205 -> m31_207  [key=0, style=solid];
m31_204 -> m31_205  [key=0, style=solid];
m31_206 -> m31_207  [key=0, style=solid];
m31_206 -> m31_195  [color=darkseagreen4, key=1, label=filled, style=dashed];
m31_206 -> m31_199  [color=darkseagreen4, key=1, label=filled, style=dashed];
m31_207 -> m31_204  [color=blue, key=0, style=bold];
m31_229 -> m31_230  [key=0, style=solid];
m31_229 -> m31_51  [key=2, style=dotted];
m31_231 -> m31_232  [key=0, style=solid];
m31_231 -> m31_51  [key=2, style=dotted];
m31_228 -> m31_229  [key=0, style=solid];
m31_228 -> m31_230  [key=0, style=solid];
m31_230 -> m31_231  [key=0, style=solid];
m31_230 -> m31_232  [key=0, style=solid];
m31_234 -> m31_235  [key=0, style=solid];
m31_234 -> m31_236  [key=2, style=dotted];
m31_233 -> m31_234  [key=0, style=solid];
m31_227 -> m31_228  [key=0, style=solid];
m31_227 -> m31_230  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_232 -> m31_227  [color=blue, key=0, style=bold];
m31_235 -> m31_233  [color=blue, key=0, style=bold];
m31_254 -> m31_255  [key=0, style=solid];
m31_253 -> m31_254  [key=0, style=solid];
m31_253 -> m31_51  [key=2, style=dotted];
m31_251 -> m31_252  [key=0, style=solid];
m31_251 -> m31_254  [key=0, style=solid];
m31_252 -> m31_253  [key=0, style=solid];
m31_252 -> m31_252  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m31_252 -> m31_247  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m31_252 -> m31_255  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m31_250 -> m31_251  [key=0, style=solid];
m31_250 -> m31_254  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_255 -> m31_250  [color=blue, key=0, style=bold];
m31_281 -> m31_282  [key=0, style=solid];
m31_286 -> m31_287  [key=0, style=solid];
m31_286 -> m31_51  [key=2, style=dotted];
m31_285 -> m31_286  [key=0, style=solid];
m31_285 -> m31_287  [key=0, style=solid];
m31_289 -> m31_290  [key=0, style=solid];
m31_289 -> m31_51  [key=2, style=dotted];
m31_291 -> m31_292  [key=0, style=solid];
m31_282 -> m31_283  [key=0, style=solid];
m31_283 -> m31_281  [color=blue, key=0, style=bold];
m31_284 -> m31_285  [key=0, style=solid];
m31_287 -> m31_284  [color=blue, key=0, style=bold];
m31_288 -> m31_289  [key=0, style=solid];
m31_290 -> m31_288  [color=blue, key=0, style=bold];
m31_292 -> m31_293  [key=0, style=solid];
m31_293 -> m31_291  [color=blue, key=0, style=bold];
m31_323 -> m31_324  [key=0, style=solid];
m31_323 -> m31_51  [key=2, style=dotted];
m31_322 -> m31_323  [key=0, style=solid];
m31_322 -> m31_324  [key=0, style=solid];
m31_326 -> m31_327  [key=0, style=solid];
m31_326 -> m31_82  [key=2, style=dotted];
m31_327 -> m31_328  [key=0, style=solid];
m31_327 -> m31_51  [key=2, style=dotted];
m31_321 -> m31_322  [key=0, style=solid];
m31_324 -> m31_321  [color=blue, key=0, style=bold];
m31_325 -> m31_326  [key=0, style=solid];
m31_328 -> m31_325  [color=blue, key=0, style=bold];
m31_342 -> m31_343  [key=0, style=solid];
m31_342 -> m31_51  [key=2, style=dotted];
m31_341 -> m31_342  [key=0, style=solid];
m31_343 -> m31_341  [color=blue, key=0, style=bold];
m31_360 -> m31_361  [key=0, style=solid];
m31_360 -> m31_51  [key=2, style=dotted];
m31_359 -> m31_360  [key=0, style=solid];
m31_359 -> m31_361  [key=0, style=solid];
m31_363 -> m31_364  [key=0, style=solid];
m31_363 -> m31_357  [key=2, style=dotted];
m31_363 -> m31_365  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_366 -> m31_367  [key=0, style=solid];
m31_366 -> m31_357  [key=2, style=dotted];
m31_366 -> m31_368  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_362 -> m31_363  [key=0, style=solid];
m31_358 -> m31_359  [key=0, style=solid];
m31_361 -> m31_358  [color=blue, key=0, style=bold];
m31_364 -> m31_362  [color=blue, key=0, style=bold];
m31_365 -> m31_366  [key=0, style=solid];
m31_365 -> m31_369  [color=darkseagreen4, key=1, label=long, style=dashed];
m31_369 -> m31_370  [key=0, style=solid];
m31_367 -> m31_365  [color=blue, key=0, style=bold];
m31_368 -> m31_369  [key=0, style=solid];
m31_370 -> m31_368  [color=blue, key=0, style=bold];
m31_385 -> m31_386  [key=0, style=solid];
m31_385 -> m31_51  [key=2, style=dotted];
m31_384 -> m31_385  [key=0, style=solid];
m31_384 -> m31_386  [key=0, style=solid];
m31_383 -> m31_384  [key=0, style=solid];
m31_386 -> m31_383  [color=blue, key=0, style=bold];
m31_398 -> m31_399  [key=0, style=solid];
m31_398 -> m31_357  [key=2, style=dotted];
m31_398 -> m31_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_397 -> m31_398  [key=0, style=solid];
m31_397 -> m31_401  [color=darkseagreen4, key=1, label=long, style=dashed];
m31_401 -> m31_402  [key=0, style=solid];
m31_399 -> m31_397  [color=blue, key=0, style=bold];
m31_400 -> m31_401  [key=0, style=solid];
m31_402 -> m31_400  [color=blue, key=0, style=bold];
m31_409 -> m31_410  [key=0, style=solid];
m31_408 -> m31_409  [key=0, style=solid];
m31_410 -> m31_408  [color=blue, key=0, style=bold];
m31_415 -> m31_416  [key=0, style=solid];
m31_415 -> m31_236  [key=2, style=dotted];
m31_416 -> m31_414  [color=blue, key=0, style=bold];
m31_237 -> m31_238  [key=0, style=solid];
m31_238 -> m31_239  [key=0, style=solid];
m31_238 -> m31_243  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_238 -> m31_244  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_239 -> m31_240  [key=0, style=solid];
m31_239 -> m31_81  [key=2, style=dotted];
m31_239 -> m31_249  [key=2, style=dotted];
m31_239 -> m31_243  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_239 -> m31_254  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_239 -> m31_244  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_243 -> m31_244  [key=0, style=solid];
m31_243 -> m31_243  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m31_243 -> m31_251  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_243 -> m31_252  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m31_243 -> m31_254  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_243 -> m31_247  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m31_244 -> m31_245  [key=0, style=solid];
m31_244 -> m31_83  [key=2, style=dotted];
m31_240 -> m31_241  [key=0, style=solid];
m31_240 -> m31_82  [key=2, style=dotted];
m31_241 -> m31_242  [key=0, style=solid];
m31_241 -> m31_243  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m31_242 -> m31_243  [key=0, style=solid];
m31_242 -> m31_34  [key=2, style=dotted];
m31_242 -> m31_253  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m31_242 -> m31_245  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m31_245 -> m31_246  [key=0, style=solid];
m31_245 -> m31_224  [key=2, style=dotted];
m31_247 -> m31_248  [key=0, style=solid];
m31_247 -> m31_99  [key=2, style=dotted];
m31_246 -> m31_247  [key=0, style=solid];
m31_246 -> m31_202  [key=2, style=dotted];
m31_248 -> m31_237  [color=blue, key=0, style=bold];
m31_329 -> m31_330  [key=0, style=solid];
m31_330 -> m31_331  [key=0, style=solid];
m31_330 -> m31_333  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_330 -> m31_336  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_330 -> m31_338  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_331 -> m31_332  [key=0, style=solid];
m31_331 -> m31_299  [key=2, style=dotted];
m31_331 -> m31_339  [color=darkseagreen4, key=1, label=balance, style=dashed];
m31_333 -> m31_334  [key=0, style=solid];
m31_336 -> m31_337  [key=0, style=solid];
m31_336 -> m31_83  [key=2, style=dotted];
m31_338 -> m31_339  [key=0, style=solid];
m31_338 -> m31_299  [key=2, style=dotted];
m31_332 -> m31_333  [key=0, style=solid];
m31_332 -> m31_34  [key=2, style=dotted];
m31_332 -> m31_342  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_332 -> m31_337  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_339 -> m31_340  [key=0, style=solid];
m31_339 -> m31_85  [key=2, style=dotted];
m31_337 -> m31_338  [key=0, style=solid];
m31_337 -> m31_224  [key=2, style=dotted];
m31_334 -> m31_335  [key=0, style=solid];
m31_334 -> m31_81  [key=2, style=dotted];
m31_334 -> m31_336  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_335 -> m31_336  [key=0, style=solid];
m31_335 -> m31_82  [key=2, style=dotted];
m31_340 -> m31_329  [color=blue, key=0, style=bold];
m31_86 -> m31_87  [key=0, style=solid];
m31_86 -> m31_90  [color=green, key=3, label="method methodReturn bool Setup", style=bold];
m31_87 -> m31_88  [key=0, style=solid];
m31_88 -> m31_89  [key=0, style=solid];
m31_88 -> m31_34  [key=2, style=dotted];
m31_88 -> m31_90  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_88 -> m31_103  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_88 -> m31_94  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_89 -> m31_90  [key=0, style=solid];
m31_89 -> m31_93  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_89 -> m31_95  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_90 -> m31_91  [key=0, style=solid];
m31_90 -> m31_101  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_90 -> m31_95  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_94 -> m31_95  [key=0, style=solid];
m31_94 -> m31_37  [key=2, style=dotted];
m31_94 -> m31_94  [color=green, key=3, label="Local variable System.EventHandler<QuantConnect.Brokerages.BrokerageMessageEvent> brokerageOnMessage", style=bold];
m31_93 -> m31_94  [key=0, style=solid];
m31_93 -> m31_83  [key=2, style=dotted];
m31_95 -> m31_96  [key=0, style=solid];
m31_95 -> m31_98  [key=2, style=dotted];
m31_91 -> m31_92  [key=0, style=solid];
m31_91 -> m31_81  [key=2, style=dotted];
m31_91 -> m31_93  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_91 -> m31_95  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_92 -> m31_93  [key=0, style=solid];
m31_92 -> m31_82  [key=2, style=dotted];
m31_96 -> m31_97  [key=0, style=solid];
m31_96 -> m31_99  [key=2, style=dotted];
m31_97 -> m31_86  [color=blue, key=0, style=bold];
m31_64 -> m31_65  [key=0, style=solid];
m31_65 -> m31_66  [key=0, style=solid];
m31_66 -> m31_67  [key=0, style=solid];
m31_66 -> m31_68  [key=2, style=dotted];
m31_67 -> m31_64  [color=blue, key=0, style=bold];
m31_344 -> m31_345  [key=0, style=solid];
m31_345 -> m31_346  [key=0, style=solid];
m31_345 -> m31_347  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_345 -> m31_350  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_345 -> m31_352  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_346 -> m31_347  [key=0, style=solid];
m31_346 -> m31_34  [key=2, style=dotted];
m31_346 -> m31_360  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m31_346 -> m31_351  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m31_347 -> m31_348  [key=0, style=solid];
m31_347 -> m31_359  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_350 -> m31_351  [key=0, style=solid];
m31_350 -> m31_83  [key=2, style=dotted];
m31_352 -> m31_353  [key=0, style=solid];
m31_352 -> m31_355  [key=2, style=dotted];
m31_352 -> m31_356  [key=2, style=dotted];
m31_352 -> m31_363  [color=darkseagreen4, key=1, label=executions, style=dashed];
m31_352 -> m31_366  [color=darkseagreen4, key=1, label=executions, style=dashed];
m31_351 -> m31_352  [key=0, style=solid];
m31_351 -> m31_37  [key=2, style=dotted];
m31_348 -> m31_349  [key=0, style=solid];
m31_348 -> m31_81  [key=2, style=dotted];
m31_348 -> m31_249  [key=2, style=dotted];
m31_348 -> m31_350  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_348 -> m31_353  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_348 -> m31_363  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_349 -> m31_350  [key=0, style=solid];
m31_349 -> m31_82  [key=2, style=dotted];
m31_353 -> m31_354  [key=0, style=solid];
m31_353 -> m31_357  [key=2, style=dotted];
m31_353 -> m31_68  [key=2, style=dotted];
m31_353 -> m31_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_354 -> m31_344  [color=blue, key=0, style=bold];
m31_208 -> m31_209  [key=0, style=solid];
m31_209 -> m31_210  [key=0, style=solid];
m31_209 -> m31_34  [key=2, style=dotted];
m31_209 -> m31_212  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m31_209 -> m31_229  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m31_209 -> m31_216  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m31_210 -> m31_211  [key=0, style=solid];
m31_210 -> m31_34  [key=2, style=dotted];
m31_210 -> m31_212  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m31_210 -> m31_231  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m31_210 -> m31_219  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m31_212 -> m31_213  [key=0, style=solid];
m31_212 -> m31_228  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_212 -> m31_230  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_216 -> m31_217  [key=0, style=solid];
m31_216 -> m31_224  [key=2, style=dotted];
m31_211 -> m31_212  [key=0, style=solid];
m31_211 -> m31_215  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_211 -> m31_218  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_211 -> m31_220  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_219 -> m31_220  [key=0, style=solid];
m31_219 -> m31_224  [key=2, style=dotted];
m31_215 -> m31_216  [key=0, style=solid];
m31_215 -> m31_83  [key=2, style=dotted];
m31_218 -> m31_219  [key=0, style=solid];
m31_218 -> m31_36  [key=2, style=dotted];
m31_220 -> m31_221  [key=0, style=solid];
m31_220 -> m31_35  [key=2, style=dotted];
m31_213 -> m31_214  [key=0, style=solid];
m31_213 -> m31_145  [key=2, style=dotted];
m31_213 -> m31_215  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_213 -> m31_218  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_213 -> m31_221  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_213 -> m31_234  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_214 -> m31_215  [key=0, style=solid];
m31_214 -> m31_82  [key=2, style=dotted];
m31_221 -> m31_222  [key=0, style=solid];
m31_221 -> m31_225  [key=2, style=dotted];
m31_221 -> m31_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_217 -> m31_218  [key=0, style=solid];
m31_217 -> m31_202  [key=2, style=dotted];
m31_222 -> m31_223  [key=0, style=solid];
m31_222 -> m31_226  [key=2, style=dotted];
m31_223 -> m31_208  [color=blue, key=0, style=bold];
m31_256 -> m31_257  [key=0, style=solid];
m31_257 -> m31_258  [key=0, style=solid];
m31_257 -> m31_259  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_257 -> m31_263  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_257 -> m31_265  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_257 -> m31_269  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_257 -> m31_272  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_258 -> m31_259  [key=0, style=solid];
m31_258 -> m31_202  [key=2, style=dotted];
m31_259 -> m31_260  [key=0, style=solid];
m31_259 -> m31_39  [key=2, style=dotted];
m31_259 -> m31_279  [key=2, style=dotted];
m31_259 -> m31_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_259 -> m31_261  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m31_259 -> m31_275  [color=darkseagreen4, key=1, label=previousHoldings, style=dashed];
m31_263 -> m31_264  [key=0, style=solid];
m31_263 -> m31_285  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_265 -> m31_266  [key=0, style=solid];
m31_269 -> m31_270  [key=0, style=solid];
m31_269 -> m31_83  [key=2, style=dotted];
m31_272 -> m31_273  [key=0, style=solid];
m31_272 -> m31_39  [key=2, style=dotted];
m31_272 -> m31_279  [key=2, style=dotted];
m31_272 -> m31_291  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_272 -> m31_275  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m31_272 -> m31_276  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m31_272 -> m31_277  [color=darkseagreen4, key=1, label=newHoldings, style=dashed];
m31_260 -> m31_261  [key=0, style=solid];
m31_260 -> m31_43  [key=2, style=dotted];
m31_261 -> m31_262  [key=0, style=solid];
m31_261 -> m31_280  [key=2, style=dotted];
m31_261 -> m31_274  [color=darkseagreen4, key=1, label=hasSymbol, style=dashed];
m31_275 -> m31_278  [key=0, style=solid];
m31_275 -> m31_99  [key=2, style=dotted];
m31_262 -> m31_263  [key=0, style=solid];
m31_262 -> m31_34  [key=2, style=dotted];
m31_262 -> m31_286  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m31_262 -> m31_270  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m31_262 -> m31_90  [color=green, key=3, label="Parameter variable string message", style=bold];
m31_262 -> m31_159  [color=green, key=3, label="Parameter variable string message", style=bold];
m31_274 -> m31_275  [key=0, style=solid];
m31_274 -> m31_276  [key=0, style=solid];
m31_270 -> m31_271  [key=0, style=solid];
m31_270 -> m31_224  [key=2, style=dotted];
m31_264 -> m31_265  [key=0, style=solid];
m31_264 -> m31_34  [key=2, style=dotted];
m31_264 -> m31_289  [color=darkseagreen4, key=1, label=portfolioResetEvent, style=dashed];
m31_264 -> m31_271  [color=darkseagreen4, key=1, label=portfolioResetEvent, style=dashed];
m31_271 -> m31_272  [key=0, style=solid];
m31_271 -> m31_224  [key=2, style=dotted];
m31_266 -> m31_267  [key=0, style=solid];
m31_266 -> m31_275  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m31_266 -> m31_277  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m31_267 -> m31_268  [key=0, style=solid];
m31_267 -> m31_81  [key=2, style=dotted];
m31_267 -> m31_269  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_277 -> m31_278  [key=0, style=solid];
m31_277 -> m31_99  [key=2, style=dotted];
m31_268 -> m31_269  [key=0, style=solid];
m31_268 -> m31_82  [key=2, style=dotted];
m31_273 -> m31_274  [key=0, style=solid];
m31_273 -> m31_43  [key=2, style=dotted];
m31_276 -> m31_277  [key=0, style=solid];
m31_276 -> m31_280  [key=2, style=dotted];
m31_276 -> m31_68  [key=2, style=dotted];
m31_278 -> m31_256  [color=blue, key=0, style=bold];
m31_294 -> m31_295  [key=0, style=solid];
m31_295 -> m31_296  [key=0, style=solid];
m31_296 -> m31_297  [key=0, style=solid];
m31_296 -> m31_299  [key=2, style=dotted];
m31_297 -> m31_298  [key=0, style=solid];
m31_297 -> m31_85  [key=2, style=dotted];
m31_298 -> m31_294  [color=blue, key=0, style=bold];
m31_371 -> m31_372  [key=0, style=solid];
m31_372 -> m31_373  [key=0, style=solid];
m31_372 -> m31_374  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_372 -> m31_377  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_372 -> m31_380  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_373 -> m31_374  [key=0, style=solid];
m31_373 -> m31_34  [key=2, style=dotted];
m31_373 -> m31_385  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m31_373 -> m31_378  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m31_374 -> m31_375  [key=0, style=solid];
m31_374 -> m31_384  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_377 -> m31_378  [key=0, style=solid];
m31_377 -> m31_83  [key=2, style=dotted];
m31_380 -> m31_381  [key=0, style=solid];
m31_380 -> m31_35  [key=2, style=dotted];
m31_378 -> m31_379  [key=0, style=solid];
m31_378 -> m31_37  [key=2, style=dotted];
m31_375 -> m31_376  [key=0, style=solid];
m31_375 -> m31_145  [key=2, style=dotted];
m31_375 -> m31_377  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_376 -> m31_377  [key=0, style=solid];
m31_376 -> m31_82  [key=2, style=dotted];
m31_379 -> m31_380  [key=0, style=solid];
m31_379 -> m31_202  [key=2, style=dotted];
m31_381 -> m31_382  [key=0, style=solid];
m31_381 -> m31_85  [key=2, style=dotted];
m31_382 -> m31_371  [color=blue, key=0, style=bold];
m31_0 -> m31_1  [color=green, key=0, style=solid];
m31_1 -> m31_2  [color=green, key=0, style=solid];
m31_1 -> m31_5  [color=green, key=2, style=dotted];
m31_1 -> m31_6  [color=green, key=2, style=dotted];
m31_2 -> m31_3  [color=red, key=0, style=solid];
m31_2 -> m31_7  [key=2, style=dotted];
m31_2 -> m31_8  [key=2, style=dotted];
m31_3 -> m31_4  [color=red, key=0, style=solid];
m31_3 -> m31_9  [color=red, key=2, style=dotted];
m31_4 -> m31_0  [color=blue, key=0, style=bold];
m31_105 -> m31_106  [key=0, style=solid];
m31_106 -> m31_107  [key=0, style=solid];
m31_107 -> m31_108  [key=0, style=solid];
m31_107 -> m31_34  [key=2, style=dotted];
m31_107 -> m31_109  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_107 -> m31_120  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_107 -> m31_113  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_108 -> m31_109  [key=0, style=solid];
m31_108 -> m31_112  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_108 -> m31_114  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_109 -> m31_110  [key=0, style=solid];
m31_109 -> m31_118  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_109 -> m31_114  [color=darkseagreen4, key=1, label=orderFilled, style=dashed];
m31_113 -> m31_114  [key=0, style=solid];
m31_113 -> m31_37  [key=2, style=dotted];
m31_112 -> m31_113  [key=0, style=solid];
m31_112 -> m31_83  [key=2, style=dotted];
m31_114 -> m31_115  [key=0, style=solid];
m31_114 -> m31_98  [key=2, style=dotted];
m31_110 -> m31_111  [key=0, style=solid];
m31_110 -> m31_81  [key=2, style=dotted];
m31_110 -> m31_112  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_110 -> m31_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_111 -> m31_112  [key=0, style=solid];
m31_111 -> m31_82  [key=2, style=dotted];
m31_115 -> m31_116  [key=0, style=solid];
m31_115 -> m31_99  [key=2, style=dotted];
m31_116 -> m31_105  [color=blue, key=0, style=bold];
m31_10 -> m31_11  [key=0, style=solid];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_33  [key=2, style=dotted];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_33  [key=2, style=dotted];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_33  [key=2, style=dotted];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_34  [key=2, style=dotted];
m31_14 -> m31_16  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m31_14 -> m31_49  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m31_14 -> m31_21  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m31_14 -> m31_22  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_34  [key=2, style=dotted];
m31_15 -> m31_47  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_46  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_16 -> m31_48  [color=darkseagreen4, key=1, label="QuantConnect.Orders.OrderEvent", style=dashed];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_37  [key=2, style=dotted];
m31_21 -> m31_5  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Interfaces.IAlgorithm CreateAlgorithmInstance", style=bold];
m31_22 -> m31_19  [key=0, style=solid];
m31_22 -> m31_38  [key=2, style=dotted];
m31_17 -> m31_18  [key=0, style=solid];
m31_17 -> m31_33  [key=2, style=dotted];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_35  [key=2, style=dotted];
m31_19 -> m31_20  [key=0, style=solid];
m31_19 -> m31_23  [key=0, style=solid];
m31_20 -> m31_21  [key=0, style=solid];
m31_20 -> m31_36  [key=2, style=dotted];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_33  [key=2, style=dotted];
m31_24 -> m31_25  [key=0, style=solid];
m31_24 -> m31_39  [key=2, style=dotted];
m31_25 -> m31_25  [key=0, style=solid];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_40  [key=2, style=dotted];
m31_25 -> m31_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_35  [key=2, style=dotted];
m31_26 -> m31_41  [key=2, style=dotted];
m31_26 -> m31_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_42  [key=2, style=dotted];
m31_27 -> m31_43  [key=2, style=dotted];
m31_28 -> m31_29  [key=0, style=solid];
m31_28 -> m31_39  [key=2, style=dotted];
m31_28 -> m31_40  [key=2, style=dotted];
m31_28 -> m31_41  [key=2, style=dotted];
m31_28 -> m31_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_28 -> m31_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_29 -> m31_30  [key=0, style=solid];
m31_29 -> m31_42  [key=2, style=dotted];
m31_29 -> m31_43  [key=2, style=dotted];
m31_30 -> m31_31  [key=0, style=solid];
m31_30 -> m31_44  [key=2, style=dotted];
m31_31 -> m31_32  [key=0, style=solid];
m31_32 -> m31_10  [color=blue, key=0, style=bold];
m31_8 -> m31_403  [key=0, style=solid];
m31_403 -> m31_404  [key=0, style=solid];
m31_404 -> m31_8  [color=blue, key=0, style=bold];
m31_98 -> m31_387  [key=0, style=solid];
m31_98 -> m31_388  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerage", style=dashed];
m31_98 -> m31_389  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_98 -> m31_398  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_387 -> m31_388  [key=0, style=solid];
m31_387 -> m31_392  [key=0, style=solid];
m31_388 -> m31_389  [key=0, style=solid];
m31_388 -> m31_391  [key=0, style=solid];
m31_388 -> m31_35  [key=2, style=dotted];
m31_388 -> m31_390  [color=darkseagreen4, key=1, label=openOrder, style=dashed];
m31_389 -> m31_390  [key=0, style=solid];
m31_389 -> m31_388  [key=0, style=solid];
m31_389 -> m31_357  [key=2, style=dotted];
m31_389 -> m31_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_392 -> m31_393  [key=0, style=solid];
m31_392 -> m31_396  [key=2, style=dotted];
m31_391 -> m31_392  [key=0, style=solid];
m31_391 -> m31_395  [key=2, style=dotted];
m31_390 -> m31_394  [key=0, style=solid];
m31_393 -> m31_394  [key=0, style=solid];
m31_394 -> m31_98  [color=blue, key=0, style=bold];
m31_69 -> m31_70  [key=0, style=solid];
m31_70 -> m31_71  [key=0, style=solid];
m31_70 -> m31_73  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_70 -> m31_78  [color=darkseagreen4, key=1, label=ib, style=dashed];
m31_71 -> m31_72  [key=0, style=solid];
m31_71 -> m31_81  [key=2, style=dotted];
m31_71 -> m31_73  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_71 -> m31_74  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_73 -> m31_74  [key=0, style=solid];
m31_73 -> m31_83  [key=2, style=dotted];
m31_78 -> m31_79  [key=0, style=solid];
m31_78 -> m31_83  [key=2, style=dotted];
m31_72 -> m31_73  [key=0, style=solid];
m31_72 -> m31_82  [key=2, style=dotted];
m31_74 -> m31_75  [key=0, style=solid];
m31_74 -> m31_84  [key=2, style=dotted];
m31_74 -> m31_79  [color=darkseagreen4, key=1, label=brokerageID, style=dashed];
m31_75 -> m31_76  [key=0, style=solid];
m31_75 -> m31_85  [key=2, style=dotted];
m31_79 -> m31_80  [key=0, style=solid];
m31_79 -> m31_84  [key=2, style=dotted];
m31_79 -> m31_85  [key=2, style=dotted];
m31_76 -> m31_77  [key=0, style=solid];
m31_76 -> m31_81  [key=2, style=dotted];
m31_76 -> m31_78  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_76 -> m31_79  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_77 -> m31_78  [key=0, style=solid];
m31_77 -> m31_82  [key=2, style=dotted];
m31_80 -> m31_69  [color=blue, key=0, style=bold];
m31_417 -> m31_2  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_3  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_16  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_18  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_20  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_24  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_26  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_28  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_30  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_31  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_65  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_70  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_72  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_77  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_89  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_92  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_108  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_111  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_125  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_131  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_136  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_139  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_156  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_162  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_169  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_172  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_187  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_192  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_211  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_214  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_238  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_240  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_257  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_268  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_295  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_301  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_311  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_330  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_335  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_345  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_349  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_372  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_417 -> m31_376  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests", style=dashed];
m31_418 -> m31_47  [color=darkseagreen4, key=1, label=filledResetEvent, style=dashed];
m31_419 -> m31_49  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m31_420 -> m31_103  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_421 -> m31_120  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_422 -> m31_149  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_423 -> m31_183  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_424 -> m31_229  [color=darkseagreen4, key=1, label=orderedResetEvent, style=dashed];
m31_425 -> m31_231  [color=darkseagreen4, key=1, label=canceledResetEvent, style=dashed];
m31_426 -> m31_234  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_427 -> m31_252  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m31_427 -> m31_255  [color=darkseagreen4, key=1, label=orderFilledEventCount, style=dashed];
m31_428 -> m31_253  [color=darkseagreen4, key=1, label=orderFilledResetEvent, style=dashed];
m31_429 -> m31_254  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_430 -> m31_286  [color=darkseagreen4, key=1, label=orderResetEvent, style=dashed];
m31_431 -> m31_289  [color=darkseagreen4, key=1, label=portfolioResetEvent, style=dashed];
m31_432 -> m31_323  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m31_433 -> m31_326  [color=darkseagreen4, key=1, label=cashBalanceUpdates, style=dashed];
m31_434 -> m31_327  [color=darkseagreen4, key=1, label=accountChangedFired, style=dashed];
m31_435 -> m31_342  [color=darkseagreen4, key=1, label=manualResetEvent, style=dashed];
m31_436 -> m31_360  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m31_437 -> m31_363  [color=darkseagreen4, key=1, label=order, style=dashed];
m31_438 -> m31_363  [color=darkseagreen4, key=1, label=executions, style=dashed];
m31_438 -> m31_366  [color=darkseagreen4, key=1, label=executions, style=dashed];
m31_439 -> m31_369  [color=darkseagreen4, key=1, label=long, style=dashed];
m31_440 -> m31_385  [color=darkseagreen4, key=1, label=orderEventFired, style=dashed];
m31_441 -> m31_398  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m31_442 -> m31_401  [color=darkseagreen4, key=1, label=long, style=dashed];
m31_443 -> m31_403  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping", style=dashed];
m31_443 -> m31_406  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping", style=dashed];
m31_443 -> m31_412  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Brokerages.InteractiveBrokers.InteractiveBrokersBrokerageTests.OrderMapping", style=dashed];
m31_444 -> m31_409  [color=darkseagreen4, key=1, label=int, style=dashed];
m31_445 -> m31_415  [color=darkseagreen4, key=1, label=int, style=dashed];
m32_169 -> m32_170  [key=0, style=solid];
m32_170 -> m32_171  [key=0, style=solid];
m32_171 -> m32_169  [color=blue, key=0, style=bold];
m32_96 -> m32_97  [key=0, style=solid];
m32_96 -> m32_98  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m32_96 -> m32_99  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m32_96 -> m32_102  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m32_97 -> m32_98  [key=0, style=solid];
m32_97 -> m32_105  [key=2, style=dotted];
m32_97 -> m32_101  [color=darkseagreen4, key=1, label=stack, style=dashed];
m32_97 -> m32_103  [color=darkseagreen4, key=1, label=stack, style=dashed];
m32_98 -> m32_99  [key=0, style=solid];
m32_98 -> m32_103  [key=0, style=solid];
m32_99 -> m32_100  [key=0, style=solid];
m32_102 -> m32_98  [key=0, style=solid];
m32_102 -> m32_102  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m32_101 -> m32_102  [key=0, style=solid];
m32_101 -> m32_106  [key=2, style=dotted];
m32_103 -> m32_104  [key=0, style=solid];
m32_103 -> m32_107  [key=2, style=dotted];
m32_103 -> m32_108  [key=2, style=dotted];
m32_100 -> m32_101  [key=0, style=solid];
m32_104 -> m32_96  [color=blue, key=0, style=bold];
m32_190 -> m32_191  [key=0, style=solid];
m32_191 -> m32_192  [key=0, style=solid];
m32_191 -> m32_189  [key=2, style=dotted];
m32_192 -> m32_190  [color=blue, key=0, style=bold];
m32_52 -> m32_53  [key=0, style=solid];
m32_53 -> m32_54  [key=0, style=solid];
m32_53 -> m32_24  [key=2, style=dotted];
m32_54 -> m32_52  [color=blue, key=0, style=bold];
m32_44 -> m32_45  [key=0, style=solid];
m32_45 -> m32_46  [key=0, style=solid];
m32_46 -> m32_44  [color=blue, key=0, style=bold];
m32_186 -> m32_187  [key=0, style=solid];
m32_187 -> m32_188  [key=0, style=solid];
m32_187 -> m32_189  [key=2, style=dotted];
m32_188 -> m32_186  [color=blue, key=0, style=bold];
m32_193 -> m32_194  [key=0, style=solid];
m32_194 -> m32_195  [key=0, style=solid];
m32_194 -> m32_96  [key=2, style=dotted];
m32_194 -> m32_196  [color=darkseagreen4, key=1, label=props, style=dashed];
m32_194 -> m32_197  [color=darkseagreen4, key=1, label=props, style=dashed];
m32_195 -> m32_196  [key=0, style=solid];
m32_195 -> m32_197  [key=0, style=solid];
m32_195 -> m32_228  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_196 -> m32_198  [key=0, style=solid];
m32_197 -> m32_198  [key=0, style=solid];
m32_198 -> m32_193  [color=blue, key=0, style=bold];
m32_83 -> m32_109  [key=0, style=solid];
m32_83 -> m32_110  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_83 -> m32_113  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_109 -> m32_110  [key=0, style=solid];
m32_109 -> m32_119  [color=darkseagreen4, key=1, label=str, style=dashed];
m32_110 -> m32_111  [key=0, style=solid];
m32_110 -> m32_113  [key=0, style=solid];
m32_113 -> m32_114  [key=0, style=solid];
m32_113 -> m32_113  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_113 -> m32_115  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_113 -> m32_116  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_113 -> m32_118  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_113 -> m32_120  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_119 -> m32_121  [key=0, style=solid];
m32_119 -> m32_122  [key=2, style=dotted];
m32_111 -> m32_112  [key=0, style=solid];
m32_112 -> m32_121  [key=0, style=solid];
m32_114 -> m32_115  [key=0, style=solid];
m32_114 -> m32_117  [color=darkseagreen4, key=1, label="out ulong", style=dashed];
m32_114 -> m32_121  [color=darkseagreen4, key=1, label="out ulong", style=dashed];
m32_115 -> m32_116  [key=0, style=solid];
m32_115 -> m32_118  [key=0, style=solid];
m32_116 -> m32_117  [key=0, style=solid];
m32_116 -> m32_116  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_116 -> m32_118  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_116 -> m32_120  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_118 -> m32_119  [key=0, style=solid];
m32_118 -> m32_120  [key=0, style=solid];
m32_120 -> m32_121  [key=0, style=solid];
m32_117 -> m32_115  [key=0, style=solid];
m32_117 -> m32_117  [color=darkseagreen4, key=1, label="out ulong", style=dashed];
m32_117 -> m32_121  [color=darkseagreen4, key=1, label="out ulong", style=dashed];
m32_121 -> m32_83  [color=blue, key=0, style=bold];
m32_201 -> m32_202  [key=0, style=solid];
m32_201 -> m32_204  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m32_201 -> m32_206  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m32_202 -> m32_203  [key=0, style=solid];
m32_202 -> m32_204  [key=0, style=solid];
m32_202 -> m32_179  [key=2, style=dotted];
m32_204 -> m32_205  [key=0, style=solid];
m32_204 -> m32_206  [key=0, style=solid];
m32_204 -> m32_179  [key=2, style=dotted];
m32_206 -> m32_207  [key=0, style=solid];
m32_206 -> m32_169  [key=2, style=dotted];
m32_203 -> m32_207  [key=0, style=solid];
m32_205 -> m32_207  [key=0, style=solid];
m32_207 -> m32_201  [color=blue, key=0, style=bold];
m32_208 -> m32_209  [key=0, style=solid];
m32_208 -> m32_211  [color=darkseagreen4, key=1, label=object, style=dashed];
m32_208 -> m32_213  [color=darkseagreen4, key=1, label=object, style=dashed];
m32_209 -> m32_210  [key=0, style=solid];
m32_209 -> m32_211  [key=0, style=solid];
m32_209 -> m32_179  [key=2, style=dotted];
m32_211 -> m32_212  [key=0, style=solid];
m32_211 -> m32_213  [key=0, style=solid];
m32_211 -> m32_179  [key=2, style=dotted];
m32_213 -> m32_214  [key=0, style=solid];
m32_213 -> m32_201  [key=2, style=dotted];
m32_210 -> m32_214  [key=0, style=solid];
m32_212 -> m32_214  [key=0, style=solid];
m32_214 -> m32_208  [color=blue, key=0, style=bold];
m32_215 -> m32_216  [key=0, style=solid];
m32_216 -> m32_217  [key=0, style=solid];
m32_216 -> m32_181  [key=2, style=dotted];
m32_217 -> m32_215  [color=blue, key=0, style=bold];
m32_218 -> m32_219  [key=0, style=solid];
m32_219 -> m32_220  [key=0, style=solid];
m32_219 -> m32_189  [key=2, style=dotted];
m32_220 -> m32_218  [color=blue, key=0, style=bold];
m32_221 -> m32_222  [key=0, style=solid];
m32_222 -> m32_223  [key=0, style=solid];
m32_222 -> m32_189  [key=2, style=dotted];
m32_223 -> m32_221  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [key=0, style=solid];
m32_0 -> m32_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_0 -> m32_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_0 -> m32_6  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m32_1 -> m32_2  [key=0, style=solid];
m32_1 -> m32_3  [key=0, style=solid];
m32_3 -> m32_4  [key=0, style=solid];
m32_3 -> m32_5  [key=0, style=solid];
m32_3 -> m32_10  [key=2, style=dotted];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_224  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_6 -> m32_7  [key=0, style=solid];
m32_6 -> m32_224  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_2 -> m32_8  [key=0, style=solid];
m32_2 -> m32_9  [key=2, style=dotted];
m32_4 -> m32_8  [key=0, style=solid];
m32_4 -> m32_11  [key=2, style=dotted];
m32_7 -> m32_8  [key=0, style=solid];
m32_7 -> m32_224  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_8 -> m32_0  [color=blue, key=0, style=bold];
m32_12 -> m32_13  [key=0, style=solid];
m32_12 -> m32_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_12 -> m32_16  [color=darkseagreen4, key=1, label=ulong, style=dashed];
m32_12 -> m32_17  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_12 -> m32_18  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_13 -> m32_14  [key=0, style=solid];
m32_13 -> m32_15  [key=0, style=solid];
m32_15 -> m32_16  [key=0, style=solid];
m32_15 -> m32_225  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_16 -> m32_17  [key=0, style=solid];
m32_16 -> m32_225  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_19  [key=0, style=solid];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_20  [key=2, style=dotted];
m32_18 -> m32_225  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_14 -> m32_19  [key=0, style=solid];
m32_14 -> m32_9  [key=2, style=dotted];
m32_19 -> m32_12  [color=blue, key=0, style=bold];
m32_21 -> m32_22  [key=0, style=solid];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_24  [key=2, style=dotted];
m32_22 -> m32_22  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_23 -> m32_21  [color=blue, key=0, style=bold];
m32_166 -> m32_167  [key=0, style=solid];
m32_167 -> m32_168  [key=0, style=solid];
m32_168 -> m32_166  [color=blue, key=0, style=bold];
m32_133 -> m32_138  [key=0, style=solid];
m32_138 -> m32_139  [key=0, style=solid];
m32_138 -> m32_140  [key=0, style=solid];
m32_138 -> m32_142  [key=2, style=dotted];
m32_138 -> m32_141  [color=darkseagreen4, key=1, label="out QuantConnect.SecurityIdentifier", style=dashed];
m32_139 -> m32_141  [key=0, style=solid];
m32_140 -> m32_141  [key=0, style=solid];
m32_141 -> m32_133  [color=blue, key=0, style=bold];
m32_172 -> m32_173  [key=0, style=solid];
m32_172 -> m32_175  [color=darkseagreen4, key=1, label=object, style=dashed];
m32_172 -> m32_177  [color=darkseagreen4, key=1, label=object, style=dashed];
m32_173 -> m32_174  [key=0, style=solid];
m32_173 -> m32_175  [key=0, style=solid];
m32_173 -> m32_179  [key=2, style=dotted];
m32_175 -> m32_176  [key=0, style=solid];
m32_175 -> m32_177  [key=0, style=solid];
m32_175 -> n149  [key=2, style=dotted];
m32_177 -> m32_178  [key=0, style=solid];
m32_177 -> m32_169  [key=2, style=dotted];
m32_177 -> m32_227  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_174 -> m32_178  [key=0, style=solid];
m32_176 -> m32_178  [key=0, style=solid];
m32_178 -> m32_172  [color=blue, key=0, style=bold];
m32_24 -> m32_58  [key=0, style=solid];
m32_24 -> m32_60  [color=darkseagreen4, key=1, label="QuantConnect.OptionRight", style=dashed];
m32_24 -> m32_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_24 -> m32_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_24 -> m32_67  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m32_24 -> m32_70  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m32_24 -> m32_72  [color=darkseagreen4, key=1, label="QuantConnect.OptionStyle", style=dashed];
m32_24 -> m32_73  [color=darkseagreen4, key=1, label="QuantConnect.OptionRight", style=dashed];
m32_24 -> m32_74  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m32_24 -> m32_75  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier?", style=dashed];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_60  [key=0, style=solid];
m32_60 -> m32_61  [key=0, style=solid];
m32_60 -> m32_62  [key=0, style=solid];
m32_62 -> m32_63  [key=0, style=solid];
m32_62 -> m32_78  [key=2, style=dotted];
m32_62 -> m32_62  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_62 -> m32_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_62 -> m32_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_63 -> m32_64  [key=0, style=solid];
m32_63 -> m32_79  [key=2, style=dotted];
m32_63 -> m32_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_63 -> m32_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_67 -> m32_68  [key=0, style=solid];
m32_67 -> m32_82  [key=2, style=dotted];
m32_67 -> m32_74  [color=darkseagreen4, key=1, label=days, style=dashed];
m32_70 -> m32_71  [key=0, style=solid];
m32_70 -> m32_83  [key=2, style=dotted];
m32_70 -> m32_74  [color=darkseagreen4, key=1, label=strk, style=dashed];
m32_72 -> m32_73  [key=0, style=solid];
m32_72 -> m32_74  [color=darkseagreen4, key=1, label=style, style=dashed];
m32_73 -> m32_74  [key=0, style=solid];
m32_74 -> m32_75  [key=0, style=solid];
m32_75 -> m32_76  [key=0, style=solid];
m32_75 -> m32_12  [key=2, style=dotted];
m32_59 -> m32_76  [key=0, style=solid];
m32_59 -> m32_77  [key=2, style=dotted];
m32_61 -> m32_76  [key=0, style=solid];
m32_61 -> m32_77  [key=2, style=dotted];
m32_64 -> m32_65  [key=0, style=solid];
m32_64 -> m32_80  [key=2, style=dotted];
m32_64 -> m32_68  [color=darkseagreen4, key=1, label=marketIdentifier, style=dashed];
m32_66 -> m32_76  [key=0, style=solid];
m32_66 -> m32_77  [key=2, style=dotted];
m32_66 -> m32_81  [key=2, style=dotted];
m32_65 -> m32_66  [key=0, style=solid];
m32_65 -> m32_67  [key=0, style=solid];
m32_68 -> m32_69  [key=0, style=solid];
m32_68 -> m32_74  [color=darkseagreen4, key=1, label=marketCode, style=dashed];
m32_69 -> m32_70  [key=0, style=solid];
m32_71 -> m32_72  [key=0, style=solid];
m32_71 -> m32_71  [color=darkseagreen4, key=1, label=strikeScale, style=dashed];
m32_71 -> m32_74  [color=darkseagreen4, key=1, label=strikeScale, style=dashed];
m32_76 -> m32_24  [color=blue, key=0, style=bold];
m32_20 -> m32_199  [key=0, style=solid];
m32_199 -> m32_200  [key=0, style=solid];
m32_200 -> m32_20  [color=blue, key=0, style=bold];
m32_84 -> m32_85  [key=0, style=solid];
m32_84 -> m32_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_84 -> m32_89  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_85 -> m32_86  [key=0, style=solid];
m32_85 -> m32_91  [color=darkseagreen4, key=1, label=pos, style=dashed];
m32_87 -> m32_88  [key=0, style=solid];
m32_87 -> m32_89  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_87 -> m32_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_89 -> m32_90  [key=0, style=solid];
m32_86 -> m32_87  [key=0, style=solid];
m32_86 -> m32_91  [color=darkseagreen4, key=1, label=result, style=dashed];
m32_86 -> m32_93  [color=darkseagreen4, key=1, label=result, style=dashed];
m32_91 -> m32_92  [key=0, style=solid];
m32_91 -> m32_95  [key=2, style=dotted];
m32_91 -> m32_91  [color=darkseagreen4, key=1, label=result, style=dashed];
m32_91 -> m32_93  [color=darkseagreen4, key=1, label=result, style=dashed];
m32_93 -> m32_94  [key=0, style=solid];
m32_88 -> m32_89  [key=0, style=solid];
m32_88 -> m32_93  [key=0, style=solid];
m32_92 -> m32_88  [key=0, style=solid];
m32_92 -> m32_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_90 -> m32_91  [key=0, style=solid];
m32_94 -> m32_84  [color=blue, key=0, style=bold];
m32_55 -> m32_56  [key=0, style=solid];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> m32_24  [key=2, style=dotted];
m32_57 -> m32_55  [color=blue, key=0, style=bold];
m32_126 -> m32_127  [key=0, style=solid];
m32_126 -> m32_129  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_127 -> m32_128  [key=0, style=solid];
m32_129 -> m32_130  [key=0, style=solid];
m32_129 -> m32_131  [key=0, style=solid];
m32_129 -> m32_133  [key=2, style=dotted];
m32_128 -> m32_129  [key=0, style=solid];
m32_130 -> m32_132  [key=0, style=solid];
m32_131 -> m32_132  [key=0, style=solid];
m32_132 -> m32_126  [color=blue, key=0, style=bold];
m32_25 -> m32_26  [key=0, style=solid];
m32_26 -> m32_27  [key=0, style=solid];
m32_26 -> m32_24  [key=2, style=dotted];
m32_26 -> m32_26  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_27 -> m32_25  [color=blue, key=0, style=bold];
m32_181 -> m32_182  [key=0, style=solid];
m32_182 -> m32_183  [key=0, style=solid];
m32_182 -> m32_184  [key=2, style=dotted];
m32_182 -> m32_185  [key=2, style=dotted];
m32_183 -> m32_181  [color=blue, key=0, style=bold];
m32_134 -> m32_135  [key=0, style=solid];
m32_134 -> m32_136  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_135 -> m32_136  [key=0, style=solid];
m32_136 -> m32_137  [key=0, style=solid];
m32_136 -> m32_133  [key=2, style=dotted];
m32_137 -> m32_134  [color=blue, key=0, style=bold];
m32_142 -> m32_143  [key=0, style=solid];
m32_142 -> m32_145  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_142 -> m32_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_143 -> m32_144  [key=0, style=solid];
m32_143 -> m32_161  [color=darkseagreen4, key=1, label="out System.Exception", style=dashed];
m32_145 -> m32_146  [key=0, style=solid];
m32_145 -> m32_147  [key=0, style=solid];
m32_145 -> m32_162  [key=2, style=dotted];
m32_147 -> m32_148  [key=0, style=solid];
m32_147 -> m32_163  [key=2, style=dotted];
m32_147 -> m32_150  [color=darkseagreen4, key=1, label=sids, style=dashed];
m32_144 -> m32_145  [key=0, style=solid];
m32_144 -> m32_158  [color=darkseagreen4, key=1, label="out QuantConnect.SecurityIdentifier", style=dashed];
m32_144 -> m32_161  [color=darkseagreen4, key=1, label="out QuantConnect.SecurityIdentifier", style=dashed];
m32_158 -> m32_159  [key=0, style=solid];
m32_158 -> m32_12  [key=2, style=dotted];
m32_158 -> m32_158  [color=darkseagreen4, key=1, label="out QuantConnect.SecurityIdentifier", style=dashed];
m32_158 -> m32_161  [color=darkseagreen4, key=1, label="out QuantConnect.SecurityIdentifier", style=dashed];
m32_146 -> m32_161  [key=0, style=solid];
m32_148 -> m32_149  [key=0, style=solid];
m32_148 -> m32_150  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_148 -> m32_159  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_150 -> m32_151  [key=0, style=solid];
m32_149 -> m32_150  [key=0, style=solid];
m32_149 -> m32_160  [key=0, style=solid];
m32_159 -> m32_149  [key=0, style=solid];
m32_159 -> m32_159  [color=darkseagreen4, key=1, label=i, style=dashed];
m32_160 -> m32_161  [key=0, style=solid];
m32_151 -> m32_152  [key=0, style=solid];
m32_151 -> m32_164  [key=2, style=dotted];
m32_151 -> m32_155  [color=darkseagreen4, key=1, label=parts, style=dashed];
m32_151 -> m32_156  [color=darkseagreen4, key=1, label=parts, style=dashed];
m32_152 -> m32_153  [key=0, style=solid];
m32_152 -> m32_155  [key=0, style=solid];
m32_155 -> m32_156  [key=0, style=solid];
m32_155 -> m32_158  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m32_156 -> m32_157  [key=0, style=solid];
m32_153 -> m32_154  [key=0, style=solid];
m32_153 -> m32_165  [key=2, style=dotted];
m32_153 -> m32_161  [color=darkseagreen4, key=1, label="out System.Exception", style=dashed];
m32_154 -> m32_161  [key=0, style=solid];
m32_157 -> m32_158  [key=0, style=solid];
m32_157 -> m32_84  [key=2, style=dotted];
m32_161 -> m32_142  [color=blue, key=0, style=bold];
m32_49 -> m32_50  [key=0, style=solid];
m32_50 -> m32_51  [key=0, style=solid];
m32_50 -> m32_24  [key=2, style=dotted];
m32_51 -> m32_49  [color=blue, key=0, style=bold];
m32_43 -> m32_47  [key=0, style=solid];
m32_47 -> m32_48  [key=0, style=solid];
m32_47 -> m32_24  [key=2, style=dotted];
m32_48 -> m32_43  [color=blue, key=0, style=bold];
m32_28 -> m32_29  [key=0, style=solid];
m32_28 -> m32_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_28 -> m32_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_28 -> m32_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_29 -> m32_30  [key=0, style=solid];
m32_29 -> m32_37  [key=2, style=dotted];
m32_30 -> m32_31  [key=0, style=solid];
m32_30 -> m32_38  [key=2, style=dotted];
m32_31 -> m32_32  [key=0, style=solid];
m32_31 -> m32_39  [key=2, style=dotted];
m32_31 -> m32_33  [color=darkseagreen4, key=1, label=mapFile, style=dashed];
m32_31 -> m32_34  [color=darkseagreen4, key=1, label=mapFile, style=dashed];
m32_35 -> m32_36  [key=0, style=solid];
m32_35 -> m32_43  [key=2, style=dotted];
m32_32 -> m32_33  [key=0, style=solid];
m32_32 -> m32_35  [color=darkseagreen4, key=1, label=firstDate, style=dashed];
m32_33 -> m32_34  [key=0, style=solid];
m32_33 -> m32_35  [key=0, style=solid];
m32_33 -> m32_40  [key=2, style=dotted];
m32_34 -> m32_35  [key=0, style=solid];
m32_34 -> m32_41  [key=2, style=dotted];
m32_34 -> m32_42  [key=2, style=dotted];
m32_34 -> m32_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_36 -> m32_28  [color=blue, key=0, style=bold];
m32_95 -> m32_123  [key=0, style=solid];
m32_123 -> m32_124  [key=0, style=solid];
m32_123 -> m32_125  [key=2, style=dotted];
m32_124 -> m32_95  [color=blue, key=0, style=bold];
m32_226 -> m32_167  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_226 -> m32_170  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_226 -> m32_175  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_226 -> m32_177  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_226 -> m32_182  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_226 -> m32_194  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_226 -> m32_195  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_226 -> m32_196  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_226 -> m32_197  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier", style=dashed];
m32_227 -> m32_178  [color=darkseagreen4, key=1, label="ref QuantConnect.SecurityIdentifier", style=dashed];
m32_228 -> m32_198  [color=darkseagreen4, key=1, label="ref QuantConnect.SecurityIdentifier", style=dashed];
m32_229 -> m32_199  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m32_229 -> m32_204  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m32_229 -> m32_206  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m32_229 -> m32_211  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m32_229 -> m32_213  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m32_229 -> m32_216  [color=darkseagreen4, key=1, label="QuantConnect.SecurityIdentifier.SidBox", style=dashed];
m33_9 -> m33_10  [key=0, style=solid];
m33_9 -> m33_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m33_9 -> m33_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.BaseData", style=dashed];
m33_10 -> m33_11  [key=0, style=solid];
m33_10 -> m33_12  [color=darkseagreen4, key=1, label=handler, style=dashed];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_15  [key=2, style=dotted];
m33_13 -> m33_14  [key=0, style=solid];
m33_11 -> m33_12  [key=0, style=solid];
m33_11 -> m33_13  [key=0, style=solid];
m33_14 -> m33_9  [color=blue, key=0, style=bold];
m33_0 -> m33_1  [key=0, style=solid];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_4  [color=darkseagreen4, key=1, label=typedData, style=dashed];
m33_2 -> m33_3  [color=red, key=0, style=solid];
m33_2 -> m33_4  [key=0, style=solid];
m33_4 -> m33_5  [key=0, style=solid];
m33_4 -> m33_7  [key=2, style=dotted];
m33_3 -> m33_5  [color=red, key=0, style=solid];
m33_3 -> m33_6  [color=red, key=2, style=dotted];
m33_5 -> m33_0  [color=blue, key=0, style=bold];
m33_7 -> m33_8  [key=0, style=solid];
m33_8 -> m33_7  [color=blue, key=0, style=bold];
m33_16 -> m33_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m33_16 -> m33_10  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m33_16 -> m33_12  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m33_16 -> m33_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Consolidators.DataConsolidator<TInput>", style=dashed];
m34_2 -> m34_3  [key=0, style=solid];
m34_2 -> m34_5  [color=red, key=3, label="method methodReturn QuantConnect.Packets.AlgorithmNodePacket NextJob", style=bold];
m34_2 -> m34_7  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Packets.AlgorithmNodePacket NextJob", style=bold];
m34_3 -> m34_4  [key=0, style=solid];
m34_3 -> m34_9  [color=darkseagreen4, key=1, label="out string", style=dashed];
m34_4 -> m34_5  [color=red, key=0, style=solid];
m34_4 -> m34_7  [key=0, style=solid];
m34_5 -> m34_6  [color=red, key=0, style=solid];
m34_5 -> m34_10  [color=red, key=2, style=dotted];
m34_5 -> m34_11  [color=red, key=2, style=dotted];
m34_7 -> m34_8  [key=0, style=solid];
m34_7 -> m34_12  [key=2, style=dotted];
m34_7 -> m34_11  [key=2, style=dotted];
m34_6 -> m34_9  [key=0, style=solid];
m34_8 -> m34_9  [key=0, style=solid];
m34_9 -> m34_2  [color=blue, key=0, style=bold];
m34_21 -> m34_22  [key=0, style=solid];
m34_22 -> m34_21  [color=blue, key=0, style=bold];
m34_26 -> m34_27  [color=red, key=0, style=solid];
m34_27 -> m34_28  [color=red, key=0, style=solid];
m34_27 -> m34_18  [color=red, key=2, style=dotted];
m34_28 -> m34_26  [color=blue, key=0, style=bold];
m34_23 -> m34_24  [color=red, key=0, style=solid];
m34_24 -> m34_25  [color=red, key=0, style=solid];
m34_24 -> m34_18  [color=red, key=2, style=dotted];
m34_25 -> m34_23  [color=blue, key=0, style=bold];
m34_13 -> m34_14  [key=0, style=solid];
m34_14 -> m34_13  [color=blue, key=0, style=bold];
m34_15 -> m34_16  [color=red, key=0, style=solid];
m34_16 -> m34_17  [color=red, key=0, style=solid];
m34_16 -> m34_18  [color=red, key=2, style=dotted];
m34_17 -> m34_15  [color=blue, key=0, style=bold];
m34_19 -> m34_20  [key=0, style=solid];
m34_20 -> m34_19  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_0  [color=blue, key=0, style=bold];
m34_29 -> m34_3  [color=darkseagreen4, key=1, label="QuantConnect.Queues.Queue", style=dashed];
m34_29 -> m34_4  [color=darkseagreen4, key=1, label="QuantConnect.Queues.Queue", style=dashed];
m34_29 -> m34_5  [color=red, key=1, label="QuantConnect.Queues.Queue", style=dashed];
m34_29 -> m34_7  [color=darkseagreen4, key=1, label="QuantConnect.Queues.Queue", style=dashed];
m35_0 -> m35_1  [key=0, style=solid];
m35_0 -> m35_64  [color=darkorchid, key=3, label="Field variable decimal _price", style=bold];
m35_1 -> m35_0  [color=blue, key=0, style=bold];
m35_1 -> m35_1  [color=darkorchid, key=3, label="Field variable string _symbol", style=bold];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_59  [key=2, style=dotted];
m35_1 -> m35_13  [color=darkorchid, key=3, label="Field variable string _symbol", style=bold];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_62  [key=2, style=dotted];
m35_4 -> m35_64  [color=darkorchid, key=3, label="Field variable decimal _totalFees", style=bold];
m35_5 -> m35_4  [color=blue, key=0, style=bold];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_63  [key=2, style=dotted];
m35_5 -> m35_13  [color=darkorchid, key=3, label="Field variable QuantConnect.Securities.Interfaces.ISecurityTransactionModel _model", style=bold];
m35_64 -> m35_64  [color=darkorchid, key=3, label="Field variable decimal _averagePrice", style=bold];
m35_29 -> m35_30  [color=green, key=0, style=solid];
m35_29 -> m35_66  [color=green, key=2, style=dotted];
m35_29 -> m35_75  [color=green, key=2, style=dotted];
m35_29 -> m35_31  [color=green, key=1, label=allQuandlData, style=dashed];
m35_29 -> m35_33  [color=green, key=1, label=allQuandlData, style=dashed];
m35_29 -> m35_36  [color=green, key=1, label=allQuandlData, style=dashed];
m35_28 -> m35_29  [color=green, key=0, style=solid];
m35_28 -> m35_68  [key=2, style=dotted];
m35_30 -> m35_31  [color=green, key=0, style=solid];
m35_30 -> m35_68  [color=green, key=2, style=dotted];
m35_31 -> m35_32  [key=0, style=solid];
m35_31 -> m35_33  [key=0, style=solid];
m35_33 -> m35_34  [color=green, key=0, style=solid];
m35_33 -> m35_76  [key=2, style=dotted];
m35_33 -> m35_35  [color=darkseagreen4, key=1, label=singleSymbolQuandl, style=dashed];
m35_36 -> m35_37  [key=0, style=solid];
m35_36 -> m35_77  [key=2, style=dotted];
m35_36 -> m35_38  [color=darkseagreen4, key=1, label=quandlSpyLows, style=dashed];
m35_34 -> m35_35  [color=green, key=0, style=solid];
m35_34 -> m35_68  [color=green, key=2, style=dotted];
m35_35 -> m35_36  [key=0, style=solid];
m35_35 -> m35_35  [key=0, style=solid];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_60  [key=2, style=dotted];
m35_2 -> m35_13  [color=darkorchid, key=3, label="Field variable QuantConnect.SecurityType _securityType", style=bold];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_61  [key=2, style=dotted];
m35_3 -> m35_64  [color=darkorchid, key=3, label="Field variable decimal _totalSaleVolume", style=bold];
m35_3 -> m35_2  [color=blue, key=0, style=bold];
m35_6 -> m35_7  [key=0, style=solid];
m35_6 -> m35_64  [key=2, style=dotted];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_65  [key=2, style=dotted];
m35_8 -> m35_66  [key=2, style=dotted];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_67  [key=2, style=dotted];
m35_10 -> m35_66  [key=2, style=dotted];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_67  [key=2, style=dotted];
m35_12 -> m35_13  [key=0, style=solid];
m35_12 -> m35_69  [key=2, style=dotted];
m35_12 -> m35_70  [key=2, style=dotted];
m35_14 -> m35_15  [key=0, style=solid];
m35_14 -> m35_69  [key=2, style=dotted];
m35_14 -> m35_16  [color=darkseagreen4, key=1, label=tradeBarHistory, style=dashed];
m35_17 -> m35_16  [key=0, style=solid];
m35_17 -> m35_71  [key=2, style=dotted];
m35_18 -> m35_66  [key=2, style=dotted];
m35_18 -> m35_19  [key=0, style=solid];
m35_18 -> m35_67  [key=2, style=dotted];
m35_20 -> m35_21  [key=0, style=solid];
m35_20 -> m35_69  [key=2, style=dotted];
m35_20 -> m35_23  [color=darkseagreen4, key=1, label=quandlHistory, style=dashed];
m35_22 -> m35_23  [key=0, style=solid];
m35_22 -> m35_72  [key=2, style=dotted];
m35_24 -> m35_23  [key=0, style=solid];
m35_24 -> m35_71  [key=2, style=dotted];
m35_25 -> m35_66  [key=2, style=dotted];
m35_25 -> m35_26  [key=0, style=solid];
m35_25 -> m35_73  [key=2, style=dotted];
m35_27 -> m35_28  [key=0, style=solid];
m35_27 -> m35_74  [key=2, style=dotted];
m35_39 -> m35_66  [key=2, style=dotted];
m35_39 -> m35_40  [key=0, style=solid];
m35_39 -> m35_78  [key=2, style=dotted];
m35_41 -> m35_66  [key=2, style=dotted];
m35_41 -> m35_42  [key=0, style=solid];
m35_41 -> m35_78  [key=2, style=dotted];
m35_43 -> m35_44  [key=0, style=solid];
m35_43 -> m35_79  [key=2, style=dotted];
m35_45 -> m35_46  [key=0, style=solid];
m35_45 -> m35_79  [key=2, style=dotted];
m35_47 -> m35_66  [key=2, style=dotted];
m35_47 -> m35_48  [key=0, style=solid];
m35_47 -> m35_80  [key=2, style=dotted];
m35_49 -> m35_66  [key=2, style=dotted];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_80  [key=2, style=dotted];
m35_49 -> m35_51  [color=darkseagreen4, key=1, label=allHistory, style=dashed];
m35_49 -> m35_52  [color=darkseagreen4, key=1, label=allHistory, style=dashed];
m35_49 -> m35_54  [color=darkseagreen4, key=1, label=allHistory, style=dashed];
m35_32 -> m35_31  [key=0, style=solid];
m35_37 -> m35_68  [key=2, style=dotted];
m35_37 -> m35_38  [key=0, style=solid];
m35_38 -> m35_39  [key=0, style=solid];
m35_38 -> m35_38  [key=0, style=solid];
m35_9 -> m35_68  [key=2, style=dotted];
m35_9 -> m35_10  [key=0, style=solid];
m35_11 -> m35_68  [key=2, style=dotted];
m35_11 -> m35_12  [key=0, style=solid];
m35_13 -> m35_68  [key=2, style=dotted];
m35_13 -> m35_14  [key=0, style=solid];
m35_15 -> m35_68  [key=2, style=dotted];
m35_15 -> m35_16  [key=0, style=solid];
m35_19 -> m35_68  [key=2, style=dotted];
m35_19 -> m35_20  [key=0, style=solid];
m35_21 -> m35_68  [key=2, style=dotted];
m35_21 -> m35_22  [key=0, style=solid];
m35_26 -> m35_68  [key=2, style=dotted];
m35_26 -> m35_27  [key=0, style=solid];
m35_40 -> m35_68  [key=2, style=dotted];
m35_40 -> m35_41  [key=0, style=solid];
m35_42 -> m35_68  [key=2, style=dotted];
m35_42 -> m35_43  [key=0, style=solid];
m35_42 -> m35_0  [color=darkorchid, key=3, label="Property variable decimal Price", style=bold];
m35_44 -> m35_68  [key=2, style=dotted];
m35_44 -> m35_45  [key=0, style=solid];
m35_46 -> m35_68  [key=2, style=dotted];
m35_46 -> m35_47  [key=0, style=solid];
m35_48 -> m35_68  [key=2, style=dotted];
m35_48 -> m35_49  [key=0, style=solid];
m35_50 -> m35_68  [key=2, style=dotted];
m35_50 -> m35_51  [key=0, style=solid];
m35_53 -> m35_68  [key=2, style=dotted];
m35_53 -> m35_54  [key=0, style=solid];
m35_55 -> m35_68  [key=2, style=dotted];
m35_55 -> m35_56  [key=0, style=solid];
m35_16 -> m35_17  [key=0, style=solid];
m35_16 -> m35_18  [key=0, style=solid];
m35_23 -> m35_24  [key=0, style=solid];
m35_23 -> m35_25  [key=0, style=solid];
m35_51 -> m35_51  [key=0, style=solid];
m35_51 -> m35_52  [key=0, style=solid];
m35_52 -> m35_53  [key=0, style=solid];
m35_52 -> m35_81  [key=2, style=dotted];
m35_54 -> m35_55  [key=0, style=solid];
m35_54 -> m35_82  [key=2, style=dotted];
m35_54 -> m35_56  [color=darkseagreen4, key=1, label=closeHistory, style=dashed];
m35_54 -> m35_57  [color=darkseagreen4, key=1, label=closeHistory, style=dashed];
m35_56 -> m35_56  [key=0, style=solid];
m35_56 -> m35_57  [key=0, style=solid];
m35_57 -> m35_58  [key=0, style=solid];
m35_57 -> m35_83  [key=2, style=dotted];
m35_58 -> m35_0  [color=blue, key=0, style=bold];
m35_68 -> m35_95  [key=0, style=solid];
m35_68 -> m35_96  [color=darkseagreen4, key=1, label=int, style=dashed];
m35_68 -> m35_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m35_95 -> m35_96  [key=0, style=solid];
m35_95 -> m35_99  [key=2, style=dotted];
m35_95 -> m35_97  [color=darkseagreen4, key=1, label=count, style=dashed];
m35_96 -> m35_98  [key=0, style=solid];
m35_96 -> m35_97  [key=0, style=solid];
m35_97 -> m35_98  [key=0, style=solid];
m35_97 -> n154  [key=2, style=dotted];
m35_98 -> m35_68  [color=blue, key=0, style=bold];
m35_84 -> m35_85  [key=0, style=solid];
m35_85 -> m35_86  [key=0, style=solid];
m35_86 -> m35_87  [key=0, style=solid];
m35_86 -> m35_88  [key=0, style=solid];
m35_88 -> m35_89  [key=0, style=solid];
m35_88 -> m35_91  [key=0, style=solid];
m35_89 -> m35_90  [key=0, style=solid];
m35_89 -> m35_93  [key=2, style=dotted];
m35_90 -> m35_91  [key=0, style=solid];
m35_90 -> m35_94  [key=2, style=dotted];
m35_87 -> m35_91  [key=0, style=solid];
m35_87 -> n154  [key=2, style=dotted];
m35_91 -> m35_84  [color=blue, key=0, style=bold];
m35_71 -> m35_64  [color=darkorchid, key=3, label="Field variable int _quantity", style=bold];
m35_100 -> m35_29  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_43  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_45  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_47  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_49  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_85  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_86  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_89  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m35_100 -> m35_90  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.HistoryAlgorithm", style=dashed];
m38_97 -> m38_98  [key=0, style=solid];
m38_98 -> m38_99  [key=0, style=solid];
m38_98 -> m38_85  [key=2, style=dotted];
m38_98 -> m38_120  [color=darkseagreen4, key=1, label=list, style=dashed];
m38_98 -> m38_121  [color=darkseagreen4, key=1, label=list, style=dashed];
m38_98 -> m38_126  [color=darkseagreen4, key=1, label=list, style=dashed];
m38_98 -> m38_90  [key=2, style=dotted];
m38_98 -> m38_101  [color=darkseagreen4, key=1, label=header, style=dashed];
m38_99 -> m38_100  [key=0, style=solid];
m38_99 -> m38_49  [key=2, style=dotted];
m38_99 -> m38_101  [color=darkseagreen4, key=1, label=req, style=dashed];
m38_99 -> m38_104  [key=0, style=solid];
m38_99 -> m38_106  [key=2, style=dotted];
m38_120 -> m38_105  [key=0, style=solid];
m38_120 -> n174  [key=2, style=dotted];
m38_120 -> m38_121  [color=green, key=0, style=solid];
m38_120 -> m38_94  [color=green, key=2, style=dotted];
m38_120 -> m38_122  [color=green, key=2, style=dotted];
m38_120 -> m38_123  [color=green, key=1, label="lambda expression", style=dashed];
m38_121 -> m38_122  [key=0, style=solid];
m38_121 -> m38_126  [key=0, style=solid];
m38_121 -> m38_123  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_121 -> m38_139  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_121 -> m38_125  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_121 -> m38_119  [color=blue, key=0, style=bold];
m38_126 -> m38_127  [key=0, style=solid];
m38_126 -> m38_120  [color=green, key=3, label="Parameter variable string[] keys", style=bold];
m38_126 -> m38_146  [color=darkorchid, key=3, label="method methodReturn string GetCsvValue", style=bold];
m38_100 -> m38_101  [key=0, style=solid];
m38_100 -> m38_57  [key=2, style=dotted];
m38_100 -> m38_90  [key=2, style=dotted];
m38_101 -> m38_102  [key=0, style=solid];
m38_101 -> m38_58  [key=2, style=dotted];
m38_101 -> m38_103  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_101 -> m38_104  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_101 -> m38_113  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_101 -> m38_107  [key=2, style=dotted];
m38_101 -> m38_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_102 -> m38_103  [key=0, style=solid];
m38_102 -> m38_104  [key=0, style=solid];
m38_102 -> m38_108  [key=2, style=dotted];
m38_102 -> m38_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_102 -> m38_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_103 -> m38_127  [key=0, style=solid];
m38_103 -> m38_128  [key=2, style=dotted];
m38_103 -> m38_99  [key=0, style=solid];
m38_103 -> m38_109  [key=2, style=dotted];
m38_104 -> m38_105  [key=0, style=solid];
m38_104 -> m38_59  [key=2, style=dotted];
m38_104 -> m38_94  [color=blue, key=0, style=bold];
m38_113 -> m38_105  [key=0, style=solid];
m38_113 -> m38_65  [key=2, style=dotted];
m38_113 -> m38_63  [key=2, style=dotted];
m38_113 -> m38_114  [key=0, style=solid];
m38_105 -> m38_106  [key=0, style=solid];
m38_105 -> m38_121  [key=0, style=solid];
m38_105 -> m38_107  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_108  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_109  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_110  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_111  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_112  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_113  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_114  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_115  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_116  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_118  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_105 -> m38_119  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_106 -> m38_107  [key=0, style=solid];
m38_106 -> m38_114  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_106 -> m38_115  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_106 -> m38_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_106 -> m38_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_106 -> m38_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_106 -> m38_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_106 -> m38_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_107 -> m38_108  [key=0, style=solid];
m38_107 -> m38_109  [key=0, style=solid];
m38_108 -> m38_114  [key=0, style=solid];
m38_108 -> m38_129  [key=2, style=dotted];
m38_108 -> m38_115  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_108 -> m38_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_108 -> m38_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_108 -> m38_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_108 -> m38_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_108 -> m38_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_109 -> m38_110  [key=0, style=solid];
m38_109 -> m38_111  [key=0, style=solid];
m38_110 -> m38_114  [key=0, style=solid];
m38_110 -> m38_130  [key=2, style=dotted];
m38_110 -> m38_115  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_110 -> m38_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_110 -> m38_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_110 -> m38_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_110 -> m38_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_110 -> m38_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_110 -> m38_111  [key=0, style=solid];
m38_111 -> m38_112  [key=0, style=solid];
m38_111 -> m38_113  [key=0, style=solid];
m38_112 -> m38_114  [key=0, style=solid];
m38_112 -> m38_131  [key=2, style=dotted];
m38_112 -> m38_115  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_112 -> m38_116  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_112 -> m38_117  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_112 -> m38_118  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_112 -> m38_119  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_112 -> m38_120  [color=darkseagreen4, key=1, label=order, style=dashed];
m38_112 -> m38_110  [color=blue, key=0, style=bold];
m38_114 -> m38_115  [key=0, style=solid];
m38_114 -> m38_50  [key=2, style=dotted];
m38_115 -> m38_116  [key=0, style=solid];
m38_115 -> m38_85  [key=2, style=dotted];
m38_115 -> m38_113  [color=blue, key=0, style=bold];
m38_116 -> m38_117  [key=0, style=solid];
m38_116 -> m38_132  [key=2, style=dotted];
m38_118 -> m38_119  [key=0, style=solid];
m38_118 -> m38_133  [key=2, style=dotted];
m38_118 -> m38_116  [color=blue, key=0, style=bold];
m38_119 -> m38_120  [color=green, key=0, style=solid];
m38_119 -> m38_124  [color=green, key=1, label=bool, style=dashed];
m38_117 -> m38_118  [key=0, style=solid];
m38_117 -> m38_50  [key=2, style=dotted];
m38_122 -> m38_123  [key=0, style=solid];
m38_122 -> m38_121  [key=0, style=solid];
m38_122 -> m38_134  [key=2, style=dotted];
m38_123 -> m38_124  [color=green, key=0, style=solid];
m38_123 -> m38_135  [key=2, style=dotted];
m38_123 -> m38_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_123 -> m38_125  [color=darkseagreen4, key=1, label=cached, style=dashed];
m38_125 -> m38_121  [key=0, style=solid];
m38_125 -> m38_137  [key=2, style=dotted];
m38_125 -> m38_123  [color=blue, key=0, style=bold];
m38_124 -> m38_125  [color=green, key=0, style=solid];
m38_124 -> m38_121  [key=0, style=solid];
m38_124 -> m38_136  [key=2, style=dotted];
m38_124 -> m38_91  [color=green, key=2, style=dotted];
m38_124 -> m38_126  [color=green, key=2, style=dotted];
m38_124 -> m38_53  [color=green, key=2, style=dotted];
m38_124 -> m38_92  [color=green, key=2, style=dotted];
m38_124 -> m38_93  [color=green, key=2, style=dotted];
m38_127 -> m38_97  [color=blue, key=0, style=bold];
m38_127 -> m38_128  [key=0, style=solid];
m38_127 -> m38_129  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m38_127 -> m38_130  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m38_127 -> m38_131  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<T>", style=dashed];
m38_68 -> m38_10  [key=2, style=dotted];
m38_68 -> m38_69  [key=0, style=solid];
m38_68 -> m38_63  [key=2, style=dotted];
m38_68 -> m38_21  [key=2, style=dotted];
m38_96 -> m38_97  [key=0, style=solid];
m38_96 -> m38_98  [key=0, style=solid];
m38_96 -> m38_106  [key=2, style=dotted];
m38_143 -> m38_144  [key=0, style=solid];
m38_143 -> m38_138  [color=blue, key=0, style=bold];
m38_144 -> m38_145  [key=0, style=solid];
m38_144 -> m38_85  [key=2, style=dotted];
m38_145 -> m38_143  [color=blue, key=0, style=bold];
m38_145 -> m38_146  [key=0, style=solid];
m38_145 -> m38_147  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m38_145 -> m38_155  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m38_145 -> m38_149  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m38_185 -> m38_186  [key=0, style=solid];
m38_186 -> m38_187  [key=0, style=solid];
m38_186 -> m38_189  [key=2, style=dotted];
m38_187 -> m38_188  [key=0, style=solid];
m38_187 -> m38_189  [key=2, style=dotted];
m38_188 -> m38_185  [color=blue, key=0, style=bold];
m38_57 -> m38_61  [color=darkseagreen4, key=1, label=double, style=dashed];
m38_57 -> m38_58  [key=0, style=solid];
m38_58 -> m38_17  [key=2, style=dotted];
m38_58 -> m38_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_58 -> m38_59  [key=0, style=solid];
m38_59 -> m38_57  [color=blue, key=0, style=bold];
m38_17 -> m38_18  [key=0, style=solid];
m38_17 -> m38_58  [key=2, style=dotted];
m38_17 -> m38_19  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_17 -> m38_21  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_17 -> m38_23  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_17 -> m38_29  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_17 -> m38_42  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_151 -> m38_152  [key=0, style=solid];
m38_151 -> m38_153  [key=0, style=solid];
m38_136 -> m38_140  [color=darkseagreen4, key=1, label=delta, style=dashed];
m38_136 -> m38_137  [key=0, style=solid];
m38_136 -> m38_139  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m38_66 -> m38_64  [color=blue, key=0, style=bold];
m38_146 -> m38_147  [key=0, style=solid];
m38_146 -> m38_146  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m38_146 -> m38_148  [color=darkorchid, key=3, label="Local variable double delta", style=bold];
m38_147 -> m38_148  [key=0, style=solid];
m38_147 -> m38_85  [key=2, style=dotted];
m38_147 -> m38_156  [color=darkseagreen4, key=1, label=list, style=dashed];
m38_147 -> m38_159  [color=darkseagreen4, key=1, label=list, style=dashed];
m38_147 -> m38_161  [color=darkseagreen4, key=1, label=list, style=dashed];
m38_147 -> m38_162  [color=darkseagreen4, key=1, label=list, style=dashed];
m38_147 -> m38_149  [key=0, style=solid];
m38_147 -> m38_151  [key=2, style=dotted];
m38_147 -> m38_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_148 -> m38_149  [key=0, style=solid];
m38_148 -> m38_49  [key=2, style=dotted];
m38_148 -> m38_150  [color=darkseagreen4, key=1, label=request, style=dashed];
m38_156 -> m38_153  [key=0, style=solid];
m38_156 -> m38_164  [key=2, style=dotted];
m38_156 -> n174  [key=2, style=dotted];
m38_156 -> m38_156  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m38_156 -> m38_154  [color=blue, key=0, style=bold];
m38_159 -> m38_153  [key=0, style=solid];
m38_159 -> m38_164  [key=2, style=dotted];
m38_159 -> m38_167  [key=2, style=dotted];
m38_159 -> n174  [key=2, style=dotted];
m38_159 -> m38_61  [color=darkseagreen4, key=1, label=double, style=dashed];
m38_161 -> m38_153  [key=0, style=solid];
m38_161 -> m38_164  [key=2, style=dotted];
m38_161 -> m38_167  [key=2, style=dotted];
m38_161 -> n174  [key=2, style=dotted];
m38_161 -> m38_68  [color=darkseagreen4, key=1, label="System.Func<T, double>", style=dashed];
m38_162 -> m38_163  [key=0, style=solid];
m38_162 -> m38_68  [color=darkseagreen4, key=1, label=double, style=dashed];
m38_149 -> m38_150  [key=0, style=solid];
m38_149 -> m38_57  [key=2, style=dotted];
m38_149 -> m38_152  [key=2, style=dotted];
m38_149 -> m38_153  [key=2, style=dotted];
m38_150 -> m38_151  [key=0, style=solid];
m38_150 -> m38_58  [key=2, style=dotted];
m38_150 -> m38_152  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_150 -> m38_153  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_150 -> m38_145  [color=blue, key=0, style=bold];
m38_152 -> m38_163  [key=0, style=solid];
m38_152 -> m38_128  [key=2, style=dotted];
m38_153 -> m38_154  [key=0, style=solid];
m38_153 -> m38_162  [key=0, style=solid];
m38_153 -> m38_59  [key=2, style=dotted];
m38_153 -> m38_155  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_153 -> m38_156  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_153 -> m38_157  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_153 -> m38_158  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_153 -> m38_159  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_153 -> m38_160  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_153 -> m38_161  [color=darkseagreen4, key=1, label=item, style=dashed];
m38_154 -> m38_155  [key=0, style=solid];
m38_154 -> m38_153  [key=0, style=solid];
m38_155 -> m38_156  [key=0, style=solid];
m38_155 -> m38_157  [key=0, style=solid];
m38_155 -> m38_122  [color=darkorchid, key=3, label="Parameter variable string[] keys", style=bold];
m38_155 -> m38_123  [color=darkorchid, key=3, label="Parameter variable string[] keys", style=bold];
m38_155 -> m38_124  [color=darkorchid, key=3, label="Parameter variable string[] keys", style=bold];
m38_155 -> m38_125  [color=darkorchid, key=3, label="Parameter variable string[] keys", style=bold];
m38_157 -> m38_158  [key=0, style=solid];
m38_157 -> m38_160  [key=0, style=solid];
m38_157 -> m38_165  [key=2, style=dotted];
m38_158 -> m38_159  [key=0, style=solid];
m38_158 -> m38_166  [key=2, style=dotted];
m38_158 -> m38_19  [color=darkseagreen4, key=1, label=double, style=dashed];
m38_160 -> m38_161  [key=0, style=solid];
m38_160 -> m38_168  [key=2, style=dotted];
m38_160 -> m38_169  [key=2, style=dotted];
m38_160 -> m38_68  [color=darkseagreen4, key=1, label=T, style=dashed];
m38_163 -> m38_146  [color=blue, key=0, style=bold];
m38_163 -> m38_124  [color=green, key=1, label=bool, style=dashed];
m38_10 -> m38_11  [key=0, style=solid];
m38_134 -> m38_140  [color=darkseagreen4, key=1, label=double, style=dashed];
m38_134 -> m38_135  [key=0, style=solid];
m38_134 -> m38_136  [color=darkseagreen4, key=1, label=double, style=dashed];
m38_141 -> m38_51  [key=2, style=dotted];
m38_141 -> m38_142  [key=0, style=solid];
m38_73 -> m38_84  [color=darkseagreen4, key=1, label=fileHasVolume, style=dashed];
m38_73 -> m38_73  [color=darkorchid, key=3, label="Local variable bool fileHasVolume", style=bold];
m38_73 -> m38_74  [key=0, style=solid];
m38_87 -> m38_88  [key=0, style=solid];
m38_87 -> m38_55  [key=2, style=dotted];
m38_135 -> m38_136  [key=0, style=solid];
m38_135 -> m38_135  [color=darkorchid, key=3, label="Local variable double delta", style=bold];
m38_61 -> m38_63  [key=2, style=dotted];
m38_61 -> m38_21  [key=2, style=dotted];
m38_61 -> m38_62  [key=0, style=solid];
m38_22 -> m38_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_22 -> m38_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_22 -> m38_43  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m38_22 -> m38_42  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m38_22 -> m38_23  [key=0, style=solid];
m38_22 -> m38_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_22 -> m38_45  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>", style=dashed];
m38_22 -> m38_60  [key=2, style=dotted];
m38_22 -> m38_61  [key=2, style=dotted];
m38_40 -> m38_53  [key=2, style=dotted];
m38_40 -> m38_41  [key=0, style=solid];
m38_40 -> m38_64  [key=2, style=dotted];
m38_39 -> m38_40  [key=0, style=solid];
m38_39 -> m38_52  [key=2, style=dotted];
m38_39 -> m38_41  [color=darkseagreen4, key=1, label=close, style=dashed];
m38_39 -> m38_62  [key=2, style=dotted];
m38_39 -> m38_63  [key=2, style=dotted];
m38_27 -> m38_40  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_27 -> m38_39  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_27 -> m38_28  [key=0, style=solid];
m38_27 -> m38_49  [key=2, style=dotted];
m38_27 -> m38_31  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_27 -> m38_32  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_27 -> m38_34  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_27 -> m38_43  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_27 -> m38_44  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_27 -> m38_29  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m38_41 -> m38_42  [key=0, style=solid];
m38_41 -> m38_8  [key=2, style=dotted];
m38_41 -> m38_47  [key=0, style=solid];
m38_26 -> m38_47  [key=2, style=dotted];
m38_26 -> m38_48  [key=2, style=dotted];
m38_26 -> m38_27  [key=0, style=solid];
m38_26 -> m38_46  [key=0, style=solid];
m38_26 -> m38_38  [color=darkseagreen4, key=1, label=line, style=dashed];
m38_26 -> m38_32  [key=0, style=solid];
m38_24 -> m38_39  [color=darkseagreen4, key=1, label=closeIndex, style=dashed];
m38_24 -> m38_24  [color=darkorchid, key=3, label="Local variable int closeIndex", style=bold];
m38_24 -> m38_25  [key=0, style=solid];
m38_24 -> m38_37  [color=darkseagreen4, key=1, label=closeIndex, style=dashed];
m38_24 -> m38_31  [color=darkorchid, key=3, label="Local variable int closeIndex", style=bold];
m38_24 -> m38_64  [key=2, style=dotted];
m38_28 -> m38_39  [key=0, style=solid];
m38_28 -> m38_29  [key=0, style=solid];
m38_28 -> m38_60  [key=2, style=dotted];
m38_28 -> m38_61  [key=2, style=dotted];
m38_33 -> m38_39  [color=darkseagreen4, key=1, label=closeIndex, style=dashed];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_37  [color=darkseagreen4, key=1, label=closeIndex, style=dashed];
m38_33 -> m38_35  [key=0, style=solid];
m38_33 -> m38_66  [key=2, style=dotted];
m38_31 -> m38_32  [key=0, style=solid];
m38_31 -> m38_37  [key=0, style=solid];
m38_31 -> m38_4  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m38_31 -> m38_47  [key=0, style=solid];
m38_32 -> m38_50  [key=2, style=dotted];
m38_32 -> m38_33  [key=0, style=solid];
m38_32 -> m38_34  [key=0, style=solid];
m38_32 -> m38_35  [color=darkseagreen4, key=1, label=brokerId, style=dashed];
m38_34 -> m38_50  [key=2, style=dotted];
m38_34 -> m38_35  [key=0, style=solid];
m38_34 -> m38_36  [key=0, style=solid];
m38_34 -> m38_37  [key=0, style=solid];
m38_34 -> m38_67  [key=2, style=dotted];
m38_43 -> m38_26  [key=0, style=solid];
m38_43 -> m38_50  [key=2, style=dotted];
m38_43 -> m38_44  [key=0, style=solid];
m38_43 -> m38_60  [key=2, style=dotted];
m38_43 -> m38_61  [key=2, style=dotted];
m38_44 -> m38_45  [key=0, style=solid];
m38_44 -> m38_55  [key=2, style=dotted];
m38_44 -> m38_62  [key=2, style=dotted];
m38_44 -> m38_63  [key=2, style=dotted];
m38_42 -> m38_54  [key=2, style=dotted];
m38_42 -> m38_43  [key=0, style=solid];
m38_42 -> m38_44  [color=darkseagreen4, key=1, label=message, style=dashed];
m38_38 -> m38_26  [key=0, style=solid];
m38_38 -> m38_51  [key=2, style=dotted];
m38_38 -> m38_39  [key=0, style=solid];
m38_38 -> m38_60  [key=2, style=dotted];
m38_38 -> m38_61  [key=2, style=dotted];
m38_45 -> m38_26  [key=0, style=solid];
m38_45 -> m38_56  [key=2, style=dotted];
m38_45 -> m38_46  [key=0, style=solid];
m38_45 -> m38_64  [key=2, style=dotted];
m38_25 -> m38_26  [key=0, style=solid];
m38_25 -> m38_24  [color=darkorchid, key=3, label="Local variable int targetIndex", style=bold];
m38_25 -> m38_31  [color=darkorchid, key=3, label="Local variable int targetIndex", style=bold];
m38_25 -> m38_43  [color=darkseagreen4, key=1, label=targetIndex, style=dashed];
m38_25 -> m38_44  [color=darkseagreen4, key=1, label=targetIndex, style=dashed];
m38_25 -> m38_37  [color=darkseagreen4, key=1, label=targetIndex, style=dashed];
m38_25 -> m38_47  [key=0, style=solid];
m38_25 -> m38_2  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m38_37 -> m38_26  [key=0, style=solid];
m38_37 -> m38_38  [key=0, style=solid];
m38_37 -> m38_69  [key=2, style=dotted];
m38_37 -> m38_68  [key=2, style=dotted];
m38_23 -> m38_24  [key=0, style=solid];
m38_23 -> m38_28  [color=darkseagreen4, key=1, label=first, style=dashed];
m38_23 -> m38_23  [color=darkorchid, key=3, label="Local variable bool first", style=bold];
m38_23 -> m38_62  [key=2, style=dotted];
m38_23 -> m38_63  [key=2, style=dotted];
m38_29 -> m38_30  [key=0, style=solid];
m38_29 -> m38_65  [key=2, style=dotted];
m38_29 -> m38_63  [key=2, style=dotted];
m38_30 -> m38_33  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_30 -> m38_31  [key=0, style=solid];
m38_30 -> m38_32  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_30 -> m38_34  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_30 -> m38_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_30 -> m38_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_30 -> m38_64  [key=2, style=dotted];
m38_36 -> m38_31  [key=0, style=solid];
m38_36 -> m38_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_36 -> m38_37  [key=0, style=solid];
m38_36 -> m38_68  [key=2, style=dotted];
m38_35 -> m38_43  [color=darkseagreen4, key=1, label=targetIndex, style=dashed];
m38_35 -> m38_44  [color=darkseagreen4, key=1, label=targetIndex, style=dashed];
m38_35 -> m38_37  [color=darkseagreen4, key=1, label=targetIndex, style=dashed];
m38_35 -> m38_36  [key=0, style=solid];
m38_35 -> m38_67  [key=2, style=dotted];
m38_46 -> m38_22  [color=blue, key=0, style=bold];
m38_46 -> m38_47  [key=0, style=solid];
m38_85 -> m38_86  [key=0, style=solid];
m38_85 -> m38_54  [key=2, style=dotted];
m38_130 -> m38_21  [key=2, style=dotted];
m38_130 -> m38_131  [key=0, style=solid];
m38_18 -> m38_19  [key=0, style=solid];
m38_18 -> m38_42  [key=0, style=solid];
m38_88 -> m38_89  [key=0, style=solid];
m38_88 -> m38_74  [key=0, style=solid];
m38_88 -> m38_56  [key=2, style=dotted];
m38_89 -> m38_90  [key=0, style=solid];
m38_89 -> m38_70  [color=blue, key=0, style=bold];
m38_90 -> m38_88  [color=blue, key=0, style=bold];
m38_139 -> m38_140  [key=0, style=solid];
m38_139 -> m38_141  [key=2, style=dotted];
m38_139 -> m38_142  [key=2, style=dotted];
m38_139 -> m38_139  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<int, QuantConnect.Orders.Order>", style=dashed];
m38_139 -> m38_144  [key=2, style=dotted];
m38_138 -> m38_139  [key=0, style=solid];
m38_140 -> m38_138  [color=blue, key=0, style=bold];
m38_140 -> m38_141  [key=0, style=solid];
m38_140 -> m38_142  [key=0, style=solid];
m38_12 -> m38_13  [key=0, style=solid];
m38_12 -> m38_15  [key=0, style=solid];
m38_142 -> m38_143  [key=0, style=solid];
m38_11 -> m38_12  [key=0, style=solid];
m38_11 -> m38_14  [color=darkseagreen4, key=1, label=orderProperties, style=dashed];
m38_13 -> m38_11  [color=blue, key=0, style=bold];
m38_13 -> m38_14  [key=0, style=solid];
m38_13 -> m38_15  [key=0, style=solid];
m38_67 -> m38_68  [key=0, style=solid];
m38_69 -> m38_67  [color=blue, key=0, style=bold];
m38_19 -> m38_21  [key=2, style=dotted];
m38_19 -> m38_20  [key=0, style=solid];
m38_19 -> m38_59  [key=2, style=dotted];
m38_19 -> m38_26  [color=darkseagreen4, key=1, label=raw, style=dashed];
m38_19 -> m38_27  [color=darkseagreen4, key=1, label=raw, style=dashed];
m38_19 -> m38_32  [color=darkseagreen4, key=1, label=raw, style=dashed];
m38_19 -> m38_19  [color=darkorchid, key=3, label="Local variable int closeIndex", style=bold];
m38_19 -> m38_25  [color=darkorchid, key=3, label="Local variable int closeIndex", style=bold];
m38_60 -> m38_61  [key=0, style=solid];
m38_62 -> m38_60  [color=blue, key=0, style=bold];
m38_20 -> m38_18  [color=blue, key=0, style=bold];
m38_20 -> m38_21  [key=0, style=solid];
m38_20 -> m38_26  [key=0, style=solid];
m38_65 -> m38_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_65 -> m38_66  [key=0, style=solid];
m38_65 -> m38_17  [key=2, style=dotted];
m38_93 -> m38_94  [key=0, style=solid];
m38_93 -> m38_96  [key=2, style=dotted];
m38_74 -> m38_75  [key=0, style=solid];
m38_74 -> m38_76  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_74 -> m38_82  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_74 -> m38_47  [key=2, style=dotted];
m38_74 -> m38_48  [key=2, style=dotted];
m38_74 -> m38_89  [key=0, style=solid];
m38_75 -> m38_76  [key=0, style=solid];
m38_75 -> m38_85  [key=2, style=dotted];
m38_75 -> m38_80  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_75 -> m38_83  [color=darkseagreen4, key=1, label=success, style=dashed];
m38_75 -> m38_84  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_75 -> m38_90  [key=2, style=dotted];
m38_75 -> m38_77  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_75 -> m38_81  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_75 -> m38_86  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_75 -> m38_87  [color=darkseagreen4, key=1, label=parts, style=dashed];
m38_76 -> m38_77  [key=0, style=solid];
m38_76 -> m38_83  [key=0, style=solid];
m38_76 -> m38_84  [key=0, style=solid];
m38_82 -> m38_76  [key=0, style=solid];
m38_82 -> m38_60  [key=2, style=dotted];
m38_82 -> m38_61  [key=2, style=dotted];
m38_82 -> m38_74  [key=0, style=solid];
m38_82 -> m38_86  [color=darkseagreen4, key=1, label=targetIndex, style=dashed];
m38_82 -> m38_87  [color=darkseagreen4, key=1, label=targetIndex, style=dashed];
m38_80 -> m38_81  [key=0, style=solid];
m38_80 -> n174  [key=2, style=dotted];
m38_80 -> m38_74  [key=0, style=solid];
m38_80 -> m38_4  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m38_83 -> m38_84  [key=0, style=solid];
m38_83 -> m38_87  [key=2, style=dotted];
m38_83 -> m38_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_83 -> m38_19  [color=darkorchid, key=3, label="Local variable int targetIndex", style=bold];
m38_83 -> m38_80  [key=0, style=solid];
m38_83 -> m38_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_77 -> m38_78  [key=0, style=solid];
m38_77 -> m38_49  [key=2, style=dotted];
m38_77 -> m38_79  [color=darkseagreen4, key=1, label=req, style=dashed];
m38_77 -> m38_84  [color=darkseagreen4, key=1, label=fileHasVolume, style=dashed];
m38_77 -> m38_50  [key=2, style=dotted];
m38_78 -> m38_79  [key=0, style=solid];
m38_78 -> m38_57  [key=2, style=dotted];
m38_79 -> m38_80  [key=0, style=solid];
m38_79 -> m38_58  [key=2, style=dotted];
m38_79 -> m38_81  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_79 -> m38_82  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_79 -> m38_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_81 -> m38_82  [key=0, style=solid];
m38_81 -> m38_76  [key=0, style=solid];
m38_81 -> m38_83  [key=0, style=solid];
m38_81 -> m38_50  [key=2, style=dotted];
m38_84 -> m38_74  [color=blue, key=0, style=bold];
m38_84 -> m38_91  [key=2, style=dotted];
m38_84 -> m38_53  [key=2, style=dotted];
m38_84 -> m38_92  [key=2, style=dotted];
m38_84 -> m38_93  [key=2, style=dotted];
m38_84 -> m38_85  [key=0, style=solid];
m38_129 -> m38_21  [key=2, style=dotted];
m38_129 -> m38_130  [key=0, style=solid];
m38_70 -> m38_85  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>", style=dashed];
m38_70 -> m38_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_70 -> m38_71  [key=0, style=solid];
m38_70 -> m38_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m38_70 -> m38_86  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>", style=dashed];
m38_70 -> m38_88  [color=darkseagreen4, key=1, label="QuantConnect.Indicators.IndicatorBase<QuantConnect.Data.Market.TradeBar>", style=dashed];
m38_71 -> m38_76  [color=darkseagreen4, key=1, label=first, style=dashed];
m38_71 -> m38_72  [key=0, style=solid];
m38_71 -> m38_23  [color=darkorchid, key=3, label="Local variable bool first", style=bold];
m38_71 -> m38_73  [key=2, style=dotted];
m38_72 -> m38_73  [key=0, style=solid];
m38_72 -> m38_86  [color=darkseagreen4, key=1, label=targetIndex, style=dashed];
m38_72 -> m38_87  [color=darkseagreen4, key=1, label=targetIndex, style=dashed];
m38_72 -> m38_24  [color=darkorchid, key=3, label="Local variable int targetIndex", style=bold];
m38_72 -> m38_80  [color=darkorchid, key=3, label="Local variable int targetIndex", style=bold];
m38_72 -> m38_70  [color=blue, key=0, style=bold];
m38_86 -> m38_74  [key=0, style=solid];
m38_86 -> m38_87  [key=0, style=solid];
m38_86 -> m38_50  [key=2, style=dotted];
m38_166 -> m38_155  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m38_64 -> m38_68  [color=darkseagreen4, key=1, label=T, style=dashed];
m38_64 -> m38_65  [key=0, style=solid];
m38_164 -> m38_140  [color=darkseagreen4, key=1, label=double, style=dashed];
m38_0 -> m38_4  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_5  [color=crimson, key=0, style=bold];
m38_0 -> m38_1  [key=0, style=solid];
m38_0 -> m38_2  [color=darkseagreen4, key=1, label="System.Func<int, decimal>", style=dashed];
m38_0 -> m38_6  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_7  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_8  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_11  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_13  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_22  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_28  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_33  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_34  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_35  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_36  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_37  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_38  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_39  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_42  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_0 -> m38_43  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_4 -> m38_4  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m38_4 -> m38_5  [key=0, style=solid];
m38_4 -> m38_7  [key=0, style=solid];
m38_4 -> m38_51  [key=2, style=dotted];
m38_5 -> m38_8  [key=2, style=dotted];
m38_5 -> m38_6  [key=0, style=solid];
m38_5 -> m38_9  [key=2, style=dotted];
m38_5 -> m38_10  [key=2, style=dotted];
m38_5 -> m38_52  [key=2, style=dotted];
m38_5 -> m38_53  [key=2, style=dotted];
m38_3 -> m38_4  [key=0, style=solid];
m38_3 -> m38_5  [color=darkseagreen4, key=1, label=payload, style=dashed];
m38_3 -> m38_6  [color=darkseagreen4, key=1, label=payload, style=dashed];
m38_3 -> m38_50  [key=2, style=dotted];
m38_3 -> m38_7  [color=darkseagreen4, key=1, label=payload, style=dashed];
m38_3 -> m38_8  [color=darkseagreen4, key=1, label=payload, style=dashed];
m38_3 -> m38_10  [color=darkseagreen4, key=1, label=payload, style=dashed];
m38_3 -> m38_14  [color=darkseagreen4, key=1, label=payload, style=dashed];
m38_3 -> m38_15  [color=darkseagreen4, key=1, label=payload, style=dashed];
m38_6 -> m38_4  [key=0, style=solid];
m38_6 -> m38_6  [color=darkseagreen4, key=1, label=i, style=dashed];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_54  [key=2, style=dotted];
m38_1 -> m38_5  [color=darkseagreen4, key=1, label=reference, style=dashed];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_48  [key=2, style=dotted];
m38_2 -> m38_5  [color=darkseagreen4, key=1, label="System.Func<int, decimal>", style=dashed];
m38_2 -> m38_3  [key=0, style=solid];
m38_2 -> m38_2  [color=darkseagreen4, key=1, label="System.Func<int, decimal>", style=dashed];
m38_2 -> m38_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m38_2 -> m38_49  [key=2, style=dotted];
m38_2 -> m38_15  [color=darkseagreen4, key=1, label=req, style=dashed];
m38_2 -> m38_16  [color=darkseagreen4, key=1, label=req, style=dashed];
m38_2 -> m38_17  [color=darkseagreen4, key=1, label=req, style=dashed];
m38_7 -> m38_0  [color=blue, key=0, style=bold];
m38_7 -> m38_8  [key=0, style=solid];
m38_8 -> m38_9  [key=0, style=solid];
m38_8 -> m38_55  [key=2, style=dotted];
m38_15 -> m38_16  [key=0, style=solid];
m38_15 -> m38_56  [key=2, style=dotted];
m38_15 -> m38_17  [key=2, style=dotted];
m38_15 -> m38_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m38_16 -> m38_17  [key=0, style=solid];
m38_16 -> m38_57  [key=2, style=dotted];
m38_16 -> m38_14  [color=blue, key=0, style=bold];
m38_14 -> m38_15  [key=0, style=solid];
m38_14 -> m38_19  [color=darkseagreen4, key=1, label=double, style=dashed];
m38_9 -> m38_10  [key=0, style=solid];
m38_9 -> m38_11  [key=0, style=solid];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_23  [color=darkseagreen4, key=1, label=errorMessage, style=dashed];
m38_47 -> m38_0  [color=blue, key=0, style=bold];
m38_95 -> m38_96  [key=0, style=solid];
m38_95 -> m38_47  [key=2, style=dotted];
m38_95 -> m38_48  [key=2, style=dotted];
m38_95 -> m38_105  [key=2, style=dotted];
m38_95 -> m38_98  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m38_95 -> m38_99  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m38_95 -> m38_100  [color=darkseagreen4, key=1, label=enumerator, style=dashed];
m38_128 -> m38_21  [key=2, style=dotted];
m38_128 -> m38_129  [key=0, style=solid];
m38_170 -> m38_171  [key=0, style=solid];
m38_170 -> m38_172  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_170 -> m38_175  [color=darkseagreen4, key=1, label="QuantConnect.Orders.Order", style=dashed];
m38_171 -> m38_172  [key=0, style=solid];
m38_172 -> m38_173  [key=0, style=solid];
m38_172 -> m38_174  [key=0, style=solid];
m38_175 -> m38_176  [key=0, style=solid];
m38_175 -> m38_183  [key=0, style=solid];
m38_173 -> m38_184  [key=0, style=solid];
m38_174 -> m38_175  [key=0, style=solid];
m38_174 -> m38_182  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m38_174 -> m38_183  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m38_182 -> m38_175  [key=0, style=solid];
m38_182 -> m38_182  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m38_182 -> m38_183  [color=darkseagreen4, key=1, label=totalFee, style=dashed];
m38_183 -> m38_184  [key=0, style=solid];
m38_176 -> m38_177  [key=0, style=solid];
m38_176 -> m38_49  [key=2, style=dotted];
m38_176 -> m38_178  [color=darkseagreen4, key=1, label=req, style=dashed];
m38_177 -> m38_178  [key=0, style=solid];
m38_177 -> m38_57  [key=2, style=dotted];
m38_178 -> m38_179  [key=0, style=solid];
m38_178 -> m38_58  [key=2, style=dotted];
m38_178 -> m38_180  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_178 -> m38_181  [color=darkseagreen4, key=1, label=response, style=dashed];
m38_179 -> m38_180  [key=0, style=solid];
m38_179 -> m38_181  [key=0, style=solid];
m38_180 -> m38_184  [key=0, style=solid];
m38_180 -> m38_128  [key=2, style=dotted];
m38_181 -> m38_182  [key=0, style=solid];
m38_181 -> m38_59  [key=2, style=dotted];
m38_184 -> m38_170  [color=blue, key=0, style=bold];
m38_131 -> m38_132  [key=0, style=solid];
m38_131 -> m38_133  [key=2, style=dotted];
m38_132 -> m38_127  [color=blue, key=0, style=bold];
m38_94 -> m38_119  [color=darkorchid, key=3, label="Parameter variable string externalDataFilename", style=bold];
m38_94 -> m38_95  [key=0, style=solid];
m38_94 -> m38_97  [color=crimson, key=0, style=bold];
m38_94 -> m38_103  [color=crimson, key=0, style=bold];
m38_94 -> m38_91  [color=blue, key=0, style=bold];
m38_137 -> m38_134  [color=blue, key=0, style=bold];
m38_91 -> m38_92  [key=0, style=solid];
m38_92 -> m38_93  [key=0, style=solid];
m38_92 -> m38_95  [key=2, style=dotted];
m38_165 -> m38_140  [color=darkseagreen4, key=1, label=delta, style=dashed];
m38_190 -> m38_1  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_9  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_16  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_17  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_22  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_23  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_24  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_28  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_29  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_30  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_33  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_34  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_36  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_37  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_38  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_39  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_40  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_43  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_44  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_45  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_78  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_79  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_82  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_92  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_93  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_100  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_101  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_113  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_116  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_118  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_123  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_125  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_149  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_150  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_158  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_160  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_177  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_178  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_186  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_190 -> m38_187  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.GDAX.GDAXBrokerage", style=dashed];
m38_191 -> m38_139  [color=darkseagreen4, key=1, label=item, style=dashed];
m39_32 -> m39_50  [key=0, style=solid];
m39_32 -> m39_51  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.Intrinio.IntrinioDataTransformation", style=dashed];
m39_50 -> m39_51  [key=0, style=solid];
m39_51 -> m39_52  [key=0, style=solid];
m39_51 -> m39_54  [key=0, style=solid];
m39_51 -> m39_56  [key=0, style=solid];
m39_51 -> m39_58  [key=0, style=solid];
m39_51 -> m39_60  [key=0, style=solid];
m39_51 -> m39_62  [key=0, style=solid];
m39_51 -> m39_64  [key=0, style=solid];
m39_51 -> m39_66  [key=0, style=solid];
m39_51 -> m39_68  [key=0, style=solid];
m39_52 -> m39_53  [key=0, style=solid];
m39_54 -> m39_55  [key=0, style=solid];
m39_56 -> m39_57  [key=0, style=solid];
m39_58 -> m39_59  [key=0, style=solid];
m39_60 -> m39_61  [key=0, style=solid];
m39_62 -> m39_63  [key=0, style=solid];
m39_64 -> m39_65  [key=0, style=solid];
m39_66 -> m39_67  [key=0, style=solid];
m39_68 -> m39_69  [key=0, style=solid];
m39_53 -> m39_70  [key=0, style=solid];
m39_55 -> m39_70  [key=0, style=solid];
m39_57 -> m39_70  [key=0, style=solid];
m39_59 -> m39_70  [key=0, style=solid];
m39_61 -> m39_70  [key=0, style=solid];
m39_63 -> m39_70  [key=0, style=solid];
m39_65 -> m39_70  [key=0, style=solid];
m39_67 -> m39_70  [key=0, style=solid];
m39_69 -> m39_70  [key=0, style=solid];
m39_70 -> m39_71  [key=0, style=solid];
m39_71 -> m39_32  [color=blue, key=0, style=bold];
m39_2 -> m39_3  [key=0, style=solid];
m39_3 -> m39_4  [key=0, style=solid];
m39_4 -> m39_2  [color=blue, key=0, style=bold];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_0  [color=blue, key=0, style=bold];
m39_39 -> m39_40  [key=0, style=solid];
m39_39 -> m39_45  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m39_40 -> m39_41  [key=0, style=solid];
m39_40 -> m39_47  [key=2, style=dotted];
m39_40 -> m39_42  [color=darkseagreen4, key=1, label=obs, style=dashed];
m39_40 -> m39_44  [color=darkseagreen4, key=1, label=obs, style=dashed];
m39_45 -> m39_46  [key=0, style=solid];
m39_45 -> m39_0  [key=2, style=dotted];
m39_41 -> m39_42  [key=0, style=solid];
m39_42 -> m39_43  [key=0, style=solid];
m39_42 -> m39_44  [key=0, style=solid];
m39_42 -> m39_48  [key=2, style=dotted];
m39_42 -> m39_45  [color=darkseagreen4, key=1, label=time, style=dashed];
m39_44 -> m39_45  [key=0, style=solid];
m39_44 -> m39_49  [key=2, style=dotted];
m39_43 -> m39_46  [key=0, style=solid];
m39_46 -> m39_39  [color=blue, key=0, style=bold];
m39_5 -> m39_6  [key=0, style=solid];
m39_5 -> m39_16  [color=darkseagreen4, key=1, label=bool, style=dashed];
m39_5 -> m39_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m39_6 -> m39_7  [key=0, style=solid];
m39_6 -> m39_12  [key=0, style=solid];
m39_16 -> m39_17  [key=0, style=solid];
m39_16 -> m39_18  [key=0, style=solid];
m39_21 -> m39_22  [key=0, style=solid];
m39_21 -> m39_24  [color=darkseagreen4, key=1, label=url, style=dashed];
m39_7 -> m39_8  [key=0, style=solid];
m39_7 -> m39_29  [key=2, style=dotted];
m39_7 -> m39_9  [color=darkseagreen4, key=1, label=user, style=dashed];
m39_12 -> m39_13  [key=0, style=solid];
m39_8 -> m39_9  [key=0, style=solid];
m39_8 -> m39_29  [key=2, style=dotted];
m39_9 -> m39_10  [key=0, style=solid];
m39_9 -> m39_30  [key=2, style=dotted];
m39_10 -> m39_11  [key=0, style=solid];
m39_10 -> m39_12  [key=0, style=solid];
m39_11 -> m39_28  [key=0, style=solid];
m39_11 -> m39_31  [key=2, style=dotted];
m39_13 -> m39_14  [key=0, style=solid];
m39_14 -> m39_15  [key=0, style=solid];
m39_14 -> m39_26  [key=0, style=solid];
m39_15 -> m39_16  [key=0, style=solid];
m39_26 -> m39_27  [key=0, style=solid];
m39_26 -> m39_38  [key=2, style=dotted];
m39_17 -> m39_20  [key=0, style=solid];
m39_17 -> m39_21  [color=darkseagreen4, key=1, label=order, style=dashed];
m39_18 -> m39_19  [key=0, style=solid];
m39_18 -> m39_21  [color=darkseagreen4, key=1, label=order, style=dashed];
m39_19 -> m39_20  [key=0, style=solid];
m39_20 -> m39_21  [key=0, style=solid];
m39_20 -> m39_32  [key=2, style=dotted];
m39_22 -> m39_23  [key=0, style=solid];
m39_22 -> m39_33  [key=2, style=dotted];
m39_24 -> m39_25  [key=0, style=solid];
m39_24 -> m39_37  [key=2, style=dotted];
m39_24 -> m39_27  [color=darkseagreen4, key=1, label=subscription, style=dashed];
m39_23 -> m39_24  [key=0, style=solid];
m39_23 -> n173  [key=2, style=dotted];
m39_23 -> m39_35  [key=2, style=dotted];
m39_23 -> m39_36  [key=2, style=dotted];
m39_25 -> m39_27  [key=0, style=solid];
m39_27 -> m39_28  [key=0, style=solid];
m39_28 -> m39_5  [color=blue, key=0, style=bold];
m39_72 -> m39_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData", style=dashed];
m39_72 -> m39_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData", style=dashed];
m39_72 -> m39_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData", style=dashed];
m39_72 -> m39_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData", style=dashed];
m39_72 -> m39_21  [color=darkseagreen4, key=1, label="QuantConnect.Data.Custom.Intrinio.IntrinioEconomicData", style=dashed];
m40_92 -> m40_93  [key=0, style=solid];
m40_92 -> m40_95  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m40_92 -> m40_99  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_92 -> m40_102  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_92 -> m40_103  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_92 -> m40_104  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_92 -> m40_105  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m40_93 -> m40_94  [key=0, style=solid];
m40_95 -> m40_96  [key=0, style=solid];
m40_95 -> m40_106  [key=0, style=solid];
m40_99 -> m40_100  [key=0, style=solid];
m40_99 -> m40_102  [key=0, style=solid];
m40_102 -> m40_103  [key=0, style=solid];
m40_102 -> m40_110  [key=2, style=dotted];
m40_102 -> m40_104  [color=darkseagreen4, key=1, label=symbol, style=dashed];
m40_103 -> m40_104  [key=0, style=solid];
m40_103 -> m40_111  [key=2, style=dotted];
m40_103 -> m40_112  [key=2, style=dotted];
m40_104 -> m40_105  [key=0, style=solid];
m40_104 -> m40_111  [key=2, style=dotted];
m40_104 -> m40_112  [key=2, style=dotted];
m40_104 -> m40_104  [color=darkseagreen4, key=1, label=source, style=dashed];
m40_105 -> m40_108  [key=0, style=solid];
m40_105 -> m40_113  [key=2, style=dotted];
m40_105 -> m40_111  [key=2, style=dotted];
m40_105 -> m40_112  [key=2, style=dotted];
m40_105 -> m40_105  [color=darkseagreen4, key=1, label=source, style=dashed];
m40_94 -> m40_95  [key=0, style=solid];
m40_94 -> m40_105  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m40_96 -> m40_97  [key=0, style=solid];
m40_106 -> m40_107  [key=0, style=solid];
m40_97 -> m40_98  [key=0, style=solid];
m40_98 -> m40_99  [key=0, style=solid];
m40_98 -> m40_105  [color=darkseagreen4, key=1, label=dateFormat, style=dashed];
m40_98 -> m40_98  [color=darkorchid, key=3, label="Local variable string dateFormat", style=bold];
m40_100 -> m40_101  [key=0, style=solid];
m40_100 -> m40_105  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m40_101 -> m40_102  [key=0, style=solid];
m40_101 -> m40_105  [color=darkseagreen4, key=1, label=dateFormat, style=dashed];
m40_107 -> m40_108  [key=0, style=solid];
m40_108 -> m40_109  [key=0, style=solid];
m40_109 -> m40_92  [color=blue, key=0, style=bold];
m40_12 -> m40_13  [key=0, style=solid];
m40_12 -> m40_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_12 -> m40_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_12 -> m40_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_12 -> m40_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_12 -> m40_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_12 -> m40_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_12 -> m40_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_13 -> m40_14  [key=0, style=solid];
m40_13 -> m40_11  [color=blue, key=0, style=bold];
m40_14 -> m40_15  [key=0, style=solid];
m40_14 -> m40_22  [key=2, style=dotted];
m40_15 -> m40_16  [key=0, style=solid];
m40_15 -> m40_7  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket", style=dashed];
m40_15 -> m40_8  [color=green, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket", style=dashed];
m40_15 -> m40_1  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket", style=dashed];
m40_15 -> m40_2  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket", style=dashed];
m40_15 -> m40_3  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket", style=dashed];
m40_15 -> m40_9  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket", style=dashed];
m40_15 -> m40_12  [color=darkseagreen4, key=1, label="QuantConnect.Lean.Engine.DataFeeds.DataFeedPacket", style=dashed];
m40_16 -> m40_17  [key=0, style=solid];
m40_17 -> m40_18  [key=0, style=solid];
m40_18 -> m40_19  [key=0, style=solid];
m40_19 -> m40_20  [key=0, style=solid];
m40_20 -> m40_21  [key=0, style=solid];
m40_21 -> m40_12  [color=blue, key=0, style=bold];
m40_54 -> m40_55  [key=0, style=solid];
m40_54 -> m40_56  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_54 -> m40_58  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_54 -> m40_59  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m40_54 -> m40_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_54 -> m40_69  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_55 -> m40_56  [key=0, style=solid];
m40_55 -> m40_51  [key=2, style=dotted];
m40_55 -> m40_59  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_55 -> m40_60  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_55 -> m40_63  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_55 -> m40_64  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_55 -> m40_65  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_55 -> m40_66  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_55 -> m40_67  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_55 -> m40_71  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_55 -> m40_72  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_55 -> m40_73  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_56 -> m40_57  [key=0, style=solid];
m40_56 -> m40_68  [key=0, style=solid];
m40_58 -> m40_59  [key=0, style=solid];
m40_59 -> m40_60  [key=0, style=solid];
m40_59 -> m40_78  [key=2, style=dotted];
m40_59 -> m40_79  [key=2, style=dotted];
m40_60 -> m40_61  [key=0, style=solid];
m40_60 -> m40_80  [key=2, style=dotted];
m40_69 -> m40_70  [key=0, style=solid];
m40_63 -> m40_64  [key=0, style=solid];
m40_63 -> m40_81  [key=2, style=dotted];
m40_64 -> m40_65  [key=0, style=solid];
m40_64 -> m40_75  [key=0, style=solid];
m40_64 -> m40_77  [key=0, style=solid];
m40_65 -> m40_66  [key=0, style=solid];
m40_66 -> m40_67  [key=0, style=solid];
m40_67 -> m40_75  [key=0, style=solid];
m40_67 -> m40_77  [key=0, style=solid];
m40_71 -> m40_72  [key=0, style=solid];
m40_71 -> m40_52  [key=2, style=dotted];
m40_72 -> m40_73  [key=0, style=solid];
m40_72 -> m40_80  [key=2, style=dotted];
m40_73 -> m40_74  [key=0, style=solid];
m40_73 -> m40_80  [key=2, style=dotted];
m40_57 -> m40_58  [key=0, style=solid];
m40_68 -> m40_69  [key=0, style=solid];
m40_61 -> m40_62  [key=0, style=solid];
m40_62 -> m40_63  [key=0, style=solid];
m40_75 -> m40_76  [key=0, style=solid];
m40_70 -> m40_71  [key=0, style=solid];
m40_74 -> m40_75  [key=0, style=solid];
m40_74 -> m40_77  [key=0, style=solid];
m40_76 -> m40_77  [key=0, style=solid];
m40_76 -> m40_82  [key=2, style=dotted];
m40_77 -> m40_54  [color=blue, key=0, style=bold];
m40_6 -> m40_7  [color=green, key=0, style=solid];
m40_6 -> m40_8  [color=green, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_6 -> m40_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.List<QuantConnect.Data.BaseData>", style=dashed];
m40_7 -> m40_8  [color=green, key=0, style=solid];
m40_8 -> m40_9  [color=green, key=0, style=solid];
m40_9 -> m40_10  [key=0, style=solid];
m40_10 -> m40_6  [color=blue, key=0, style=bold];
m40_10 -> m40_0  [color=blue, key=0, style=bold];
m40_0 -> m40_1  [key=0, style=solid];
m40_0 -> m40_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_1 -> m40_2  [key=0, style=solid];
m40_2 -> m40_2  [color=darkorchid, key=3, label="Field variable decimal AskPrice", style=bold];
m40_2 -> m40_3  [key=0, style=solid];
m40_2 -> m40_11  [key=2, style=dotted];
m40_3 -> m40_4  [key=0, style=solid];
m40_3 -> n173  [key=2, style=dotted];
m40_4 -> m40_0  [color=blue, key=0, style=bold];
m40_4 -> m40_5  [key=0, style=solid];
m40_32 -> m40_33  [key=0, style=solid];
m40_32 -> m40_34  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m40_32 -> m40_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_32 -> m40_36  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_32 -> m40_38  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_32 -> m40_39  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_33 -> m40_34  [key=0, style=solid];
m40_34 -> m40_35  [key=0, style=solid];
m40_35 -> m40_36  [key=0, style=solid];
m40_36 -> m40_37  [key=0, style=solid];
m40_38 -> m40_39  [key=0, style=solid];
m40_39 -> m40_40  [key=0, style=solid];
m40_37 -> m40_38  [key=0, style=solid];
m40_40 -> m40_32  [color=blue, key=0, style=bold];
m40_83 -> m40_84  [key=0, style=solid];
m40_83 -> m40_85  [color=darkseagreen4, key=1, label="QuantConnect.DataFeedEndpoint", style=dashed];
m40_83 -> m40_88  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m40_84 -> m40_85  [key=0, style=solid];
m40_84 -> m40_0  [key=2, style=dotted];
m40_85 -> m40_86  [key=0, style=solid];
m40_85 -> m40_89  [key=0, style=solid];
m40_88 -> m40_90  [key=0, style=solid];
m40_88 -> m40_54  [key=2, style=dotted];
m40_86 -> m40_87  [key=0, style=solid];
m40_89 -> m40_90  [key=0, style=solid];
m40_87 -> m40_88  [key=0, style=solid];
m40_90 -> m40_91  [key=0, style=solid];
m40_91 -> m40_83  [color=blue, key=0, style=bold];
m40_23 -> m40_24  [key=0, style=solid];
m40_23 -> m40_25  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m40_23 -> m40_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_23 -> m40_27  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_23 -> m40_29  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_23 -> m40_30  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_24 -> m40_25  [key=0, style=solid];
m40_25 -> m40_26  [key=0, style=solid];
m40_26 -> m40_27  [key=0, style=solid];
m40_27 -> m40_28  [key=0, style=solid];
m40_29 -> m40_30  [key=0, style=solid];
m40_30 -> m40_31  [key=0, style=solid];
m40_28 -> m40_29  [key=0, style=solid];
m40_31 -> m40_23  [color=blue, key=0, style=bold];
m40_114 -> m40_115  [key=0, style=solid];
m40_114 -> m40_116  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_114 -> m40_117  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_114 -> m40_118  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m40_115 -> m40_116  [key=0, style=solid];
m40_116 -> m40_117  [key=0, style=solid];
m40_117 -> m40_118  [key=0, style=solid];
m40_118 -> m40_119  [key=0, style=solid];
m40_118 -> m40_120  [key=2, style=dotted];
m40_119 -> m40_114  [color=blue, key=0, style=bold];
m40_11 -> m40_12  [key=0, style=solid];
m40_41 -> m40_42  [key=0, style=solid];
m40_41 -> m40_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m40_42 -> m40_43  [key=0, style=solid];
m40_42 -> m40_51  [key=2, style=dotted];
m40_42 -> m40_45  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_42 -> m40_48  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_42 -> m40_49  [color=darkseagreen4, key=1, label=csv, style=dashed];
m40_44 -> m40_45  [key=0, style=solid];
m40_43 -> m40_44  [key=0, style=solid];
m40_45 -> m40_46  [key=0, style=solid];
m40_45 -> m40_52  [key=2, style=dotted];
m40_48 -> m40_49  [key=0, style=solid];
m40_48 -> m40_53  [key=2, style=dotted];
m40_49 -> m40_50  [key=0, style=solid];
m40_49 -> m40_53  [key=2, style=dotted];
m40_46 -> m40_47  [key=0, style=solid];
m40_47 -> m40_48  [key=0, style=solid];
m40_50 -> m40_41  [color=blue, key=0, style=bold];
m40_5 -> m40_6  [key=0, style=solid];
m40_121 -> m40_122  [key=0, style=solid];
m40_122 -> m40_123  [key=0, style=solid];
m40_122 -> m40_12  [key=2, style=dotted];
m40_123 -> m40_121  [color=blue, key=0, style=bold];
m40_124 -> m40_1  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_2  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_3  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_4  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_5  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_6  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_7  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_8  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_9  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_13  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_14  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_15  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_16  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_17  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_18  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_19  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_20  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_24  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_25  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_26  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_27  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_28  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_29  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_30  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_33  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_35  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_36  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_37  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_38  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_39  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_43  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_44  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_45  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_46  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_47  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_48  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_49  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_58  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_59  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_60  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_61  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_62  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_63  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_65  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_66  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_67  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_69  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_70  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_71  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_72  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_73  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_74  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_115  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_116  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_117  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_118  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
m40_124 -> m40_122  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.Tick", style=dashed];
}
