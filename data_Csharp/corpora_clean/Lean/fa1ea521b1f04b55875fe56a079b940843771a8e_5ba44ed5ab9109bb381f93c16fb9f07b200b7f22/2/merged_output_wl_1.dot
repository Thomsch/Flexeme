digraph  {
d70 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", color=green, community=0, label="0: return (from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                    where type.IsAssignableFrom(sub.Type)\r\n                    select sub).FirstOrDefault();", span="106-108"];
d20 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", label="Entry QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="103-103"];
d71 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", label="Exit QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.GetMatchingSubscription(QuantConnect.Securities.Security, System.Type)", span="103-103"];
d72 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderByDescending<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
d52 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
d48 [cluster="Unk.FirstOrDefault", label="Entry Unk.FirstOrDefault", span=""];
d73 [cluster="lambda expression", label="Entry lambda expression", span="106-106"];
d74 [cluster="lambda expression", color=green, community=0, label="0: s.Resolution", span="106-106"];
d75 [cluster="lambda expression", label="Exit lambda expression", span="106-106"];
d5 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(forexTrade, typeof(QuoteBar)) != null)", span="29-29"];
d13 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(forexQuote, typeof(TradeBar)) != null)", span="44-44"];
d29 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(forex, typeof(QuoteBar)) != null)", span="56-56"];
d32 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(equity, typeof(TradeBar)) != null)", span="61-61"];
d35 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(option, typeof(ZipEntryName)) != null)", span="66-66"];
d38 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(cfd, typeof(QuoteBar)) != null)", span="71-71"];
d44 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(crypto, typeof(QuoteBar)) != null)", span="81-81"];
d45 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(GetMatchingSubscription(crypto, typeof(TradeBar)) != null)", span="82-82"];
d3 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="var forexTrade = algo.AddForex(''EURUSD'')", span="27-27"];
d11 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="var forexQuote = algo.AddForex(''EURUSD'')", span="42-42"];
d27 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var forex = algo.AddSecurity(SecurityType.Forex, ''eurusd'')", span="54-54"];
d30 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var equity = algo.AddSecurity(SecurityType.Equity, ''goog'')", span="59-59"];
d33 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var option = algo.AddSecurity(SecurityType.Option, ''goog'')", span="64-64"];
d36 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var cfd = algo.AddSecurity(SecurityType.Cfd, ''abc'')", span="69-69"];
d42 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var crypto = algo.AddSecurity(SecurityType.Crypto, ''btcusd'', Resolution.Daily)", span="79-79"];
d50 [cluster="lambda expression", label="typeof(ZipEntryName).IsAssignableFrom(x.Type)", span="76-76"];
d41 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(future.Subscriptions.FirstOrDefault(x => typeof(ZipEntryName).IsAssignableFrom(x.Type)) != null)", span="76-76"];
d56 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="var bitcoinSubscription = qcAlgorithm.SubscriptionManager.Subscriptions.FirstOrDefault(x => x.Type == typeof(Bitcoin))", span="93-93"];
d59 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="var quandlSubscription = qcAlgorithm.SubscriptionManager.Subscriptions.FirstOrDefault(x => x.Type == typeof(Quandl))", span="98-98"];
d4 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Assert.IsTrue(forexTrade.Subscriptions.Count() == 1)", span="28-28"];
d6 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="var dataFeedsConfigString = Config.Get(''security-data-feeds'')", span="32-32"];
d19 [cluster="Unk.IsTrue", label="Entry Unk.IsTrue", span=""];
d12 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Assert.IsTrue(forexQuote.Subscriptions.Count() == 1)", span="43-43"];
d14 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Exit QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", span="21-21"];
d28 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(forex.Subscriptions.Count() == 1)", span="55-55"];
d31 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(equity.Subscriptions.Count() == 1)", span="60-60"];
d34 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(option.Subscriptions.Count() == 1)", span="65-65"];
d37 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(cfd.Subscriptions.Count() == 1)", span="70-70"];
d39 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var future = algo.AddSecurity(SecurityType.Future, ''ES'')", span="74-74"];
d43 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(crypto.Subscriptions.Count() == 2)", span="80-80"];
d46 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Exit QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", span="49-49"];
d2 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="var algo = new QCAlgorithm()", span="24-24"];
d17 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1585-1585"];
d10 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="algo.SetAvailableDataTypes(dataFeeds)", span="39-39"];
d26 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="var algo = new QCAlgorithm()", span="51-51"];
d47 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1346-1346"];
d49 [cluster="lambda expression", label="Entry lambda expression", span="76-76"];
d51 [cluster="lambda expression", label="Exit lambda expression", span="76-76"];
d40 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Assert.IsTrue(future.Subscriptions.Count() == 1)", span="75-75"];
d54 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="var qcAlgorithm = new QCAlgorithm()", span="89-89"];
d55 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="qcAlgorithm.AddData<Bitcoin>(''BTC'')", span="92-92"];
d57 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="Assert.AreEqual(bitcoinSubscription.Type, typeof(Bitcoin))", span="94-94"];
d64 [cluster="lambda expression", label="Entry lambda expression", span="93-93"];
d58 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="qcAlgorithm.AddData<Quandl>(''EURCAD'')", span="97-97"];
d60 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="Assert.AreEqual(quandlSubscription.Type, typeof(Quandl))", span="99-99"];
d67 [cluster="lambda expression", label="Entry lambda expression", span="98-98"];
d18 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
d7 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Dictionary<SecurityType, List<TickType>> dataFeeds = new Dictionary<SecurityType, List<TickType>>()", span="33-33"];
d21 [cluster="QuantConnect.Configuration.Config.Get(string, string)", label="Entry QuantConnect.Configuration.Config.Get(string, string)", span="90-90"];
d8 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="dataFeedsConfigString != string.Empty", span="34-34"];
d9 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="dataFeeds = JsonConvert.DeserializeObject<Dictionary<SecurityType, List<TickType>>>(dataFeedsConfigString)", span="36-36"];
d0 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Entry QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", span="21-21"];
d25 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", label="Entry QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_AreAdded_Successfully()", span="49-49"];
d1 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.DefaultDataFeeds_CanBeOverwritten_Successfully()", label="Config.Set(''security-data-feeds'', ''{ Forex: [\''Trade\''] }'')", span="23-23"];
d16 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", label="Entry QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="96-96"];
d24 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="607-607"];
d53 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="Entry QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", span="87-87"];
d62 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1667-1667"];
d63 [cluster="Unk.AreEqual", label="Entry Unk.AreEqual", span=""];
d66 [cluster="lambda expression", label="Exit lambda expression", span="93-93"];
d65 [cluster="lambda expression", label="x.Type == typeof(Bitcoin)", span="93-93"];
d61 [cluster="QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", label="Exit QuantConnect.Tests.Algorithm.AlgorithmAddDataTests.CustomDataTypes_AreAddedToSubscriptions_Successfully()", span="87-87"];
d69 [cluster="lambda expression", label="Exit lambda expression", span="98-98"];
d68 [cluster="lambda expression", label="x.Type == typeof(Quandl)", span="98-98"];
d22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
d23 [cluster="Unk.>", label="Entry Unk.>", span=""];
d15 [cluster="QuantConnect.Configuration.Config.Set(string, string)", label="Entry QuantConnect.Configuration.Config.Set(string, string)", span="118-118"];
m3_334 [cluster="QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.DelayedSettlementModel.DelayedSettlementModel(int, System.TimeSpan)", span="33-33"];
m3_253 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", span="393-393"];
m3_263 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(0, securities[Symbols.AAPL].Holdings.Quantity)", span="407-407"];
m3_262 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="406-406"];
m3_254 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="var securities = new SecurityManager(TimeKeeper)", span="395-395"];
m3_256 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="397-397"];
m3_261 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="portfolio.ProcessFill(fill)", span="404-404"];
m3_255 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="var transactions = new SecurityTransactionManager(securities)", span="396-396"];
m3_258 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), 1))", span="400-400"];
m3_259 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="401-401"];
m3_257 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="portfolio.SetCash(0)", span="398-398"];
m3_260 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="403-403"];
m3_264 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromLongAddsToCash()", span="393-393"];
m3_335 [cluster="System.TimeSpan.FromHours(double)", file="BacktestingSetupHandler.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m3_0 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", span="51-51"];
m3_3 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="var fills = XDocument.Load(fillsFile).Descendants(''OrderEvent'').Select(x => new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue, \r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0m)\r\n                ).ToList()", span="59-70"];
m3_4 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="var equity = XDocument.Load(equityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="72-74"];
m3_1 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="string fillsFile = ''TestData\\test_cash_fills.xml''", span="56-56"];
m3_2 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="string equityFile = ''TestData\\test_cash_equity.xml''", span="57-57"];
m3_5 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(fills.Count + 1, equity.Count)", span="76-76"];
m3_14 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="i < fills.Count", span="87-87"];
m3_15 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="var fill = fills[i]", span="90-90"];
m3_12 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="portfolio.SetCash(equity[0])", span="85-85"];
m3_20 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(equity[i + 1], portfolio.TotalPortfolioValue, ''Failed on '' + i)", span="98-98"];
m3_6 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="var subscriptions = new SubscriptionManager(TimeKeeper)", span="79-79"];
m3_13 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="int i = 0", span="87-87"];
m3_21 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="i++", span="87-87"];
m3_16 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="var time = DateTime.Today.AddDays(i)", span="91-91"];
m3_19 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="portfolio.ProcessFill(fill)", span="97-97"];
m3_11 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="84-84"];
m3_7 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="var securities = new SecurityManager(TimeKeeper)", span="80-80"];
m3_8 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="var security = new Security(SecurityExchangeHours, subscriptions.Add(CASH, Resolution.Daily, TimeZones.NewYork, TimeZones.NewYork), leverage: 10)", span="81-81"];
m3_18 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="security.SetMarketPrice(new IndicatorDataPoint(CASH, time, i + 1))", span="95-95"];
m3_17 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="TimeKeeper.SetUtcDateTime(time.ConvertToUtc(TimeZones.NewYork))", span="92-92"];
m3_10 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="var transactions = new SecurityTransactionManager(securities)", span="83-83"];
m3_9 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="securities.Add(CASH, security)", span="82-82"];
m3_22 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.TestCashFills()", span="51-51"];
m3_107 [cluster="QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Cash.Update(QuantConnect.Data.BaseData)", span="82-82"];
m3_110 [cluster="System.Console.WriteLine(string)", file="BacktestingSetupHandler.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m3_32 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Symbol, QuantConnect.Securities.Security)", span="69-69"];
m3_26 [cluster="Unk.ToList", file="BacktestingSetupHandler.cs", label="Entry Unk.ToList", span=""];
m3_180 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.OrderProcessor()", span="512-512"];
m3_34 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m3_106 [cluster="QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.CashBook.EnsureCurrencyDataFeeds(QuantConnect.Securities.SecurityManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase)", span="75-75"];
m3_336 [cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="BacktestingSetupHandler.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0"];
m3_198 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="462-462"];
m3_200 [cluster="Unk.GreaterOrEqual", file="BacktestingSetupHandler.cs", label="Entry Unk.GreaterOrEqual", span=""];
m3_251 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="467-467"];
m3_33 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="48-48"];
m3_50 [cluster="Unk.Parse", file="BacktestingSetupHandler.cs", label="Entry Unk.Parse", span=""];
m3_104 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="82-82"];
m3_194 [cluster="QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.GetSufficientCapitalForOrder(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Orders.Order)", span="284-284"];
m3_369 [cluster="Unk.Where", file="BacktestingSetupHandler.cs", label="Entry Unk.Where", span=""];
m3_333 [cluster="QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Equity.Equity.Equity(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", span="50-50"];
m3_189 [cluster="QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SetOrderId(int)", span="107-107"];
m3_362 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="535-535"];
m3_111 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="113-123"];
m3_112 [cluster="lambda expression", color=green, community=0, file="BacktestingSetupHandler.cs", label="0: new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0)", span="113-123"];
m3_113 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="113-123"];
m3_114 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="127-127"];
m3_43 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue, \r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0m)", span="59-69"];
m3_120 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="135-135"];
m3_117 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="131-131"];
m3_116 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="127-127"];
m3_115 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="127-127"];
m3_42 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="59-69"];
m3_47 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Entry lambda expression", span="73-73"];
m3_44 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="59-69"];
m3_122 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="135-135"];
m3_121 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="135-135"];
m3_119 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="131-131"];
m3_118 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="131-131"];
m3_49 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="73-73"];
m3_48 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="decimal.Parse(x.Value, CultureInfo.InvariantCulture)", span="73-73"];
m3_363 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="x.BrokerId.Contains(brokerageId)", span="535-535"];
m3_364 [cluster="lambda expression", file="BacktestingSetupHandler.cs", label="Exit lambda expression", span="535-535"];
m3_38 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m3_265 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", span="411-411"];
m3_273 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(-100, securities[Symbols.AAPL].Holdings.Quantity)", span="422-422"];
m3_276 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(-200, securities[Symbols.AAPL].Holdings.Quantity)", span="426-426"];
m3_275 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="425-425"];
m3_266 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="var securities = new SecurityManager(TimeKeeper)", span="413-413"];
m3_272 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue,  OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="421-421"];
m3_274 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="portfolio.ProcessFill(fill)", span="423-423"];
m3_268 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="415-415"];
m3_267 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="var transactions = new SecurityTransactionManager(securities)", span="414-414"];
m3_270 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), 1))", span="418-418"];
m3_271 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, -100)", span="419-419"];
m3_269 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="portfolio.SetCash(0)", span="416-416"];
m3_277 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromShortAddsToCash()", span="411-411"];
m3_40 [cluster="QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Security.SetMarketPrice(QuantConnect.Data.BaseData)", span="450-450"];
m3_185 [cluster="QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string, QuantConnect.SecurityType)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Orders.MarketOrder.MarketOrder(QuantConnect.Symbol, int, System.DateTime, string, QuantConnect.SecurityType)", span="47-47"];
m3_51 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="103-103"];
m3_56 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", color=green, community=0, file="BacktestingSetupHandler.cs", label="0: var fills = XDocument.Load(fillsFile).Descendants(''OrderEvent'').Select(x => new OrderEvent(\r\n                x.Get<int>(''OrderId''),\r\n                SymbolMap[x.Get<string>(''Symbol'')],\r\n                DateTime.MinValue,\r\n                x.Get<OrderStatus>(''Status''),\r\n                x.Get<int>(''FillQuantity'') < 0 ? OrderDirection.Sell \r\n              : x.Get<int>(''FillQuantity'') > 0 ? OrderDirection.Buy \r\n                                               : OrderDirection.Hold,\r\n                x.Get<decimal>(''FillPrice''),\r\n                x.Get<int>(''FillQuantity''),\r\n                0)\r\n                ).ToList()", span="113-124"];
m3_52 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="string fillsFile = ''TestData\\test_forex_fills.xml''", span="108-108"];
m3_55 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="string jwbQuantityFile = ''TestData\\test_forex_fills_jwb_quantity.xml''", span="111-111"];
m3_57 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var equity = XDocument.Load(equityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="126-128"];
m3_60 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(fills.Count + 1, equity.Count)", span="138-138"];
m3_82 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="i < fills.Count", span="168-168"];
m3_83 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var fill = fills[i]", span="171-171"];
m3_53 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="string equityFile = ''TestData\\test_forex_equity.xml''", span="109-109"];
m3_54 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="string mchQuantityFile = ''TestData\\test_forex_fills_mch_quantity.xml''", span="110-110"];
m3_59 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var jwbQuantity = XDocument.Load(jwbQuantityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="134-136"];
m3_58 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var mchQuantity = XDocument.Load(mchQuantityFile).Descendants(''decimal'')\r\n                .Select(x => decimal.Parse(x.Value, CultureInfo.InvariantCulture))\r\n                .ToList()", span="130-132"];
m3_65 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="portfolio.SetCash(equity[0])", span="145-145"];
m3_61 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var subscriptions = new SubscriptionManager(TimeKeeper)", span="141-141"];
m3_81 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="int i = 0", span="168-168"];
m3_99 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="i++", span="168-168"];
m3_84 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var time = DateTime.Today.AddDays(i)", span="172-172"];
m3_95 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="portfolio.ProcessFill(fill)", span="199-199"];
m3_67 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="portfolio.CashBook.Add(''JWB'', jwbQuantity[0], 0)", span="147-147"];
m3_98 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual((double) jwbQuantity[i + 1], (double)portfolio.CashBook[''JWB''].Amount)", span="213-213"];
m3_66 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="portfolio.CashBook.Add(''MCH'', mchQuantity[0], 0)", span="146-146"];
m3_97 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual((double) mchQuantity[i + 1], (double)portfolio.CashBook[''MCH''].Amount)", span="212-212"];
m3_64 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="144-144"];
m3_62 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var securities = new SecurityManager(TimeKeeper)", span="142-142"];
m3_71 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var mchJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, jwbCash, subscriptions.Add(MCHJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), leverage: 10)", span="153-153"];
m3_72 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var mchUsdSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, subscriptions.Add(MCHUSD, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), leverage: 10)", span="154-154"];
m3_73 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var usdJwbSecurity = new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, mchCash, subscriptions.Add(USDJWB, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork), leverage: 10)", span="155-155"];
m3_80 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="portfolio.CashBook.EnsureCurrencyDataFeeds(securities, subscriptions, MarketHoursDatabase.FromDataFolder())", span="166-166"];
m3_88 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual((double)mchJwb, (double)(mchUsd*usdJwb), 1e-10)", span="179-179"];
m3_85 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="decimal mchJwb = i + 1", span="176-176"];
m3_86 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="decimal mchUsd = (i + 1)/(i + 2m)", span="177-177"];
m3_87 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="decimal usdJwb = i + 2", span="178-178"];
m3_96 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="Console.WriteLine(i + 1 + ''   '' + portfolio.TotalPortfolioValue.ToString(''C''))", span="210-210"];
m3_89 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="jwbCash.Update(new IndicatorDataPoint(MCHJWB, time, mchJwb))", span="183-183"];
m3_90 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="usdCash.Update(new IndicatorDataPoint(MCHUSD, time, mchUsd))", span="184-184"];
m3_91 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="mchCash.Update(new IndicatorDataPoint(JWBUSD, time, usdJwb))", span="185-185"];
m3_92 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var updateData = new Dictionary<Security, BaseData>\r\n                {\r\n                    {mchJwbSecurity, new IndicatorDataPoint(MCHJWB, time, mchJwb)},\r\n                    {mchUsdSecurity, new IndicatorDataPoint(MCHUSD, time, mchUsd)},\r\n                    {usdJwbSecurity, new IndicatorDataPoint(JWBUSD, time, usdJwb)}\r\n                }", span="187-192"];
m3_93 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label=updateData, span="194-194"];
m3_68 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var jwbCash = portfolio.CashBook[''JWB'']", span="149-149"];
m3_63 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var transactions = new SecurityTransactionManager(securities)", span="143-143"];
m3_69 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var mchCash = portfolio.CashBook[''MCH'']", span="150-150"];
m3_70 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="var usdCash = portfolio.CashBook[''USD'']", span="151-151"];
m3_77 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="securities.Add(mchJwbSecurity)", span="162-162"];
m3_78 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="securities.Add(usdJwbSecurity)", span="163-163"];
m3_79 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="securities.Add(mchUsdSecurity)", span="164-164"];
m3_74 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="mchJwbSecurity.TransactionModel = new SecurityTransactionModel()", span="158-158"];
m3_75 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="mchUsdSecurity.TransactionModel = new SecurityTransactionModel()", span="159-159"];
m3_76 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="usdJwbSecurity.TransactionModel = new SecurityTransactionModel()", span="160-160"];
m3_94 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="kvp.Key.SetMarketPrice(kvp.Value)", span="196-196"];
m3_100 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexCashFills()", span="103-103"];
m3_101 [cluster="Unk.Add", file="BacktestingSetupHandler.cs", label="Entry Unk.Add", span=""];
m3_192 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ProcessFill(QuantConnect.Orders.OrderEvent)", span="524-524"];
m3_347 [cluster="System.Enum.ToString()", file="BacktestingSetupHandler.cs", label="Entry System.Enum.ToString()", span="0-0"];
m3_28 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.TimeKeeper)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.TimeKeeper)", span="37-37"];
m3_37 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="BacktestingSetupHandler.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="449-449"];
m3_41 [cluster="Unk.ProcessFill", file="BacktestingSetupHandler.cs", label="Entry Unk.ProcessFill", span=""];
m3_190 [cluster="QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Orders.OrderTicket.OrderTicket(QuantConnect.Securities.SecurityTransactionManager, QuantConnect.Orders.SubmitOrderRequest)", span="194-194"];
m3_25 [cluster="Unk.Select", file="BacktestingSetupHandler.cs", label="Entry Unk.Select", span=""];
m3_36 [cluster="System.DateTime.AddDays(double)", file="BacktestingSetupHandler.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m3_105 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="115-115"];
m3_346 [cluster="System.NotImplementedException.NotImplementedException(string)", file="BacktestingSetupHandler.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m3_191 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="521-521"];
m3_350 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="BacktestingSetupHandler.cs", label="_tickets[ticket.OrderId] = ticket", span="523-523"];
m3_351 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddTicket(QuantConnect.Orders.OrderTicket)", span="521-521"];
m3_358 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="533-533"];
m3_359 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="BacktestingSetupHandler.cs", label="return _orders.Values.FirstOrDefault(x => x.BrokerId.Contains(brokerageId));", span="535-535"];
m3_360 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderByBrokerageId(string)", span="533-533"];
m3_197 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForMarginCall(out bool)", span="536-536"];
m3_35 [cluster="Unk.SetCash", file="BacktestingSetupHandler.cs", label="Entry Unk.SetCash", span=""];
m3_27 [cluster="Unk.AreEqual", file="BacktestingSetupHandler.cs", label="Entry Unk.AreEqual", span=""];
m3_361 [cluster="Unk.FirstOrDefault", file="BacktestingSetupHandler.cs", label="Entry Unk.FirstOrDefault", span=""];
m3_181 [cluster="QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SetOrderProcessor(QuantConnect.Securities.IOrderProcessor)", span="326-326"];
m3_365 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m3_332 [cluster="QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="177-177"];
m3_366 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="538-538"];
m3_367 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BacktestingSetupHandler.cs", label="return _tickets.Values.Where(filter ?? (x => true));", span="540-540"];
m3_368 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderTickets(System.Func<QuantConnect.Orders.OrderTicket, bool>)", span="538-538"];
m3_184 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar(System.DateTime, QuantConnect.Symbol, decimal, decimal, decimal, decimal, long, System.TimeSpan?)", span="158-158"];
m3_123 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="221-221"];
m3_147 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="251-251"];
m3_148 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(quantity, portfolio.TotalPortfolioValue)", span="252-252"];
m3_155 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(quantity, portfolio.MarginRemaining)", span="265-265"];
m3_156 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="266-266"];
m3_157 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(quantity * 2, portfolio.TotalPortfolioValue)", span="267-267"];
m3_164 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(-quantity/2m, portfolio.MarginRemaining)", span="280-280"];
m3_165 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(quantity, portfolio.TotalMarginUsed)", span="281-281"];
m3_166 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(quantity/2m, portfolio.TotalPortfolioValue)", span="282-282"];
m3_144 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(portfolio.CashBook[''USD''].Amount, fill.FillPrice*fill.FillQuantity)", span="246-246"];
m3_146 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(0, portfolio.MarginRemaining)", span="250-250"];
m3_174 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(0, portfolio.TotalPortfolioValue)", span="298-298"];
m3_177 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(-security.Holdings.Quantity, marginCallOrders[0].Quantity)", span="302-302"];
m3_169 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(0, marginCallOrders.Count)", span="288-288"];
m3_125 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="int quantity = (int) (1000*leverage)", span="224-224"];
m3_130 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="229-229"];
m3_149 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var newOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) {Price = buyPrice}", span="255-255"];
m3_154 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, highPrice, highPrice, highPrice, highPrice, 1))", span="263-263"];
m3_158 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var anotherOrder = new MarketOrder(Symbols.AAPL, 1, time.AddSeconds(1)) { Price = highPrice }", span="270-270"];
m3_163 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, lowPrice, lowPrice, lowPrice, lowPrice, 1))", span="278-278"];
m3_167 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="bool issueMarginCallWarning", span="286-286"];
m3_139 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="241-241"];
m3_143 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="245-245"];
m3_145 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="portfolio.ProcessFill(fill)", span="248-248"];
m3_173 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="portfolio.ProcessFill(fill)", span="296-296"];
m3_175 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="300-300"];
m3_136 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var security = securities[Symbols.AAPL]", span="237-237"];
m3_176 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.AreNotEqual(0, marginCallOrders.Count)", span="301-301"];
m3_178 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.GreaterOrEqual(-portfolio.MarginRemaining, security.Price * marginCallOrders[0].Quantity)", span="303-303"];
m3_168 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var marginCallOrders = portfolio.ScanForMarginCall(out issueMarginCallWarning)", span="287-287"];
m3_170 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="security.SetLeverage(leverage * 2)", span="291-291"];
m3_152 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="time = time.AddDays(1)", span="261-261"];
m3_161 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="time = time.AddDays(1)", span="276-276"];
m3_126 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var securities = new SecurityManager(TimeKeeper)", span="225-225"];
m3_124 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="decimal leverage = 1m", span="223-223"];
m3_131 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="portfolio.CashBook[''USD''].SetAmount(quantity)", span="230-230"];
m3_138 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var order = new MarketOrder(Symbols.AAPL, quantity, time) {Price = buyPrice}", span="240-240"];
m3_171 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="order = new MarketOrder(Symbols.AAPL, quantity, time) { Price = buyPrice }", span="293-293"];
m3_172 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="fill = new OrderEvent(order, DateTime.UtcNow, 0) { FillPrice = buyPrice, FillQuantity = quantity }", span="294-294"];
m3_127 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var transactions = new SecurityTransactionManager(securities)", span="226-226"];
m3_129 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="228-228"];
m3_150 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="bool sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, newOrder)", span="256-256"];
m3_159 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, anotherOrder)", span="271-271"];
m3_134 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var time = DateTime.Now", span="235-235"];
m3_135 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="decimal buyPrice = 1m", span="236-236"];
m3_153 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="decimal highPrice = buyPrice * 2", span="262-262"];
m3_162 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="decimal lowPrice = buyPrice/2", span="277-277"];
m3_140 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="orderProcessor.AddOrder(order)", span="242-242"];
m3_128 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var orderProcessor = new OrderProcessor()", span="227-227"];
m3_141 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var request = new SubmitOrderRequest(OrderType.Market, security.Type, security.Symbol, order.Quantity, 0, 0, order.Time, null)", span="243-243"];
m3_142 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="request.SetOrderId(0)", span="244-244"];
m3_137 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="security.SetMarketPrice(new TradeBar(time, Symbols.AAPL, buyPrice, buyPrice, buyPrice, buyPrice, 1))", span="238-238"];
m3_151 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.IsFalse(sufficientCapital)", span="257-257"];
m3_160 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Assert.IsTrue(sufficientCapital)", span="272-272"];
m3_133 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="securities.Add(new Security(SecurityExchangeHours, config, leverage))", span="233-233"];
m3_132 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="var config = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="232-232"];
m3_179 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ComputeMarginProperlyAsSecurityPriceFluctuates()", span="221-221"];
m3_23 [cluster="Unk.Load", file="BacktestingSetupHandler.cs", label="Entry Unk.Load", span=""];
m3_183 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="498-498"];
m3_339 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="BacktestingSetupHandler.cs", label="type == SecurityType.Equity", span="500-500"];
m3_340 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="BacktestingSetupHandler.cs", label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="501-501"];
m3_341 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="BacktestingSetupHandler.cs", label="type == SecurityType.Forex", span="502-502"];
m3_342 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="BacktestingSetupHandler.cs", label="return new SubscriptionDataConfig(typeof (TradeBar), symbol, Resolution.Minute, TimeZones.NewYork, TimeZones.NewYork, true, true, true);", span="503-503"];
m3_343 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="BacktestingSetupHandler.cs", label="throw new NotImplementedException(type.ToString());", span="504-504"];
m3_344 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.CreateTradeBarDataConfig(QuantConnect.SecurityType, QuantConnect.Symbol)", span="498-498"];
m3_239 [cluster="QuantConnect.Data.Market.TradeBar.TradeBar()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.Market.TradeBar.TradeBar()", span="120-120"];
m3_109 [cluster="decimal.ToString(string)", file="BacktestingSetupHandler.cs", label="Entry decimal.ToString(string)", span="0-0"];
m3_186 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(QuantConnect.Orders.Order, System.DateTime, decimal, string)", span="115-115"];
m3_297 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="453-453"];
m3_307 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(1000, portfolio.Cash)", span="464-464"];
m3_308 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="465-465"];
m3_314 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(-1, portfolio.Cash)", span="473-473"];
m3_315 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="474-474"];
m3_321 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(-2, portfolio.Cash)", span="482-482"];
m3_322 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="483-483"];
m3_325 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(-2, portfolio.Cash)", span="488-488"];
m3_326 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(1000, portfolio.UnsettledCash)", span="489-489"];
m3_329 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(998, portfolio.Cash)", span="494-494"];
m3_330 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(0, portfolio.UnsettledCash)", span="495-495"];
m3_306 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="463-463"];
m3_313 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(10, security.Holdings.Quantity)", span="472-472"];
m3_320 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="481-481"];
m3_301 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="458-458"];
m3_309 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="var timeUtc = new DateTime(2015, 10, 26, 15, 30, 0)", span="468-468"];
m3_316 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="timeUtc = timeUtc.AddDays(1)", span="477-477"];
m3_323 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="timeUtc = timeUtc.AddDays(2)", span="486-486"];
m3_324 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="portfolio.ScanForCashSettlement(timeUtc)", span="487-487"];
m3_327 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="timeUtc = timeUtc.AddDays(1).Date.Add(securityExchangeHours.MarketHours[timeUtc.DayOfWeek].MarketOpen).ConvertToUtc(securityExchangeHours.TimeZone)", span="492-492"];
m3_328 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="portfolio.ScanForCashSettlement(timeUtc)", span="493-493"];
m3_304 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="var security = securities[Symbols.AAPL]", span="461-461"];
m3_305 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="security.SettlementModel = new DelayedSettlementModel(3, TimeSpan.FromHours(8))", span="462-462"];
m3_312 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="portfolio.ProcessFill(fill)", span="471-471"];
m3_319 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="portfolio.ProcessFill(fill)", span="480-480"];
m3_299 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="var securities = new SecurityManager(TimeKeeper)", span="456-456"];
m3_300 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="var transactions = new SecurityTransactionManager(securities)", span="457-457"];
m3_302 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="portfolio.SetCash(1000)", span="459-459"];
m3_310 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="var orderFee = security.FeeModel.GetOrderFee(security,new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="469-469"];
m3_311 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Buy, 100, 10, orderFee)", span="470-470"];
m3_317 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.AAPL, 10, timeUtc))", span="478-478"];
m3_318 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="fill = new OrderEvent(2, Symbols.AAPL, timeUtc, OrderStatus.Filled, OrderDirection.Sell, 100, -10, orderFee)", span="479-479"];
m3_298 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="var securityExchangeHours = SecurityExchangeHoursTests.CreateUsEquitySecurityExchangeHours()", span="455-455"];
m3_303 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="securities.Add(Symbols.AAPL, new QuantConnect.Securities.Equity.Equity(securityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), 1))", span="460-460"];
m3_331 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.EquitySellAppliesSettlementCorrectly()", span="453-453"];
m3_102 [cluster="QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Forex.Forex.Forex(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Securities.Cash, QuantConnect.Data.SubscriptionDataConfig, decimal)", span="48-48"];
m3_237 [cluster="QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.CashBook.Add(string, decimal, decimal)", span="62-62"];
m3_373 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="543-543"];
m3_374 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BacktestingSetupHandler.cs", label="return _orders.Values.Where(filter ?? (x => true));", span="545-545"];
m3_375 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrders(System.Func<QuantConnect.Orders.Order, bool>)", span="543-543"];
m3_240 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", span="376-376"];
m3_249 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(-100, securities[Symbols.AAPL].Holdings.Quantity)", span="389-389"];
m3_248 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(100 * 100, portfolio.Cash)", span="388-388"];
m3_241 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="var securities = new SecurityManager(TimeKeeper)", span="378-378"];
m3_243 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="380-380"];
m3_247 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="portfolio.ProcessFill(fill)", span="386-386"];
m3_242 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="var transactions = new SecurityTransactionManager(securities)", span="379-379"];
m3_245 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="securities.Add(Symbols.AAPL, new Security(SecurityExchangeHours, CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL), 1))", span="383-383"];
m3_244 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="portfolio.SetCash(0)", span="381-381"];
m3_246 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="var fill = new OrderEvent(1, Symbols.AAPL, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Sell,  100, -100, 0)", span="385-385"];
m3_250 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.SellingShortFromZeroAddsToCash()", span="376-376"];
m3_31 [cluster="QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.SubscriptionManager.Add(QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool)", span="67-67"];
m3_45 [cluster="OrderEvent.cstr", file="BacktestingSetupHandler.cs", label="Entry OrderEvent.cstr", span=""];
m3_195 [cluster="Unk.IsFalse", file="BacktestingSetupHandler.cs", label="Entry Unk.IsFalse", span=""];
m3_338 [cluster="System.DateTime.Add(System.TimeSpan)", file="BacktestingSetupHandler.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m3_24 [cluster="Unk.Descendants", file="BacktestingSetupHandler.cs", label="Entry Unk.Descendants", span=""];
m3_29 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="56-56"];
m3_46 [cluster="Unk.>", file="BacktestingSetupHandler.cs", label="Entry Unk.>", span=""];
m3_357 [cluster="System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_182 [cluster="QuantConnect.Securities.Cash.SetAmount(decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Cash.SetAmount(decimal)", span="113-113"];
m3_352 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="526-526"];
m3_354 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="BacktestingSetupHandler.cs", label="_orders.TryGetValue(orderId, out order)", span="529-529"];
m3_353 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="BacktestingSetupHandler.cs", label="Order order", span="528-528"];
m3_355 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="BacktestingSetupHandler.cs", label="return order;", span="530-530"];
m3_356 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.GetOrderById(int)", span="526-526"];
m3_39 [cluster="QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Indicators.IndicatorDataPoint.IndicatorDataPoint(QuantConnect.Symbol, System.DateTime, decimal)", span="52-52"];
m3_187 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="516-516"];
m3_348 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="BacktestingSetupHandler.cs", label="_orders[order.Id] = order", span="518-518"];
m3_349 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor.AddOrder(QuantConnect.Orders.Order)", span="516-516"];
m3_188 [cluster="QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Orders.SubmitOrderRequest.SubmitOrderRequest(QuantConnect.Orders.OrderType, QuantConnect.SecurityType, QuantConnect.Symbol, int, decimal, decimal, System.DateTime, string)", span="92-92"];
m3_337 [cluster="QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.ScanForCashSettlement(System.DateTime)", span="705-705"];
m3_103 [cluster="QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityTransactionModel.SecurityTransactionModel()", span="37-37"];
m3_201 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="307-307"];
m3_206 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="313-313"];
m3_202 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var securities = new SecurityManager(TimeKeeper)", span="309-309"];
m3_219 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, usdCash, config2, 100))", span="333-333"];
m3_223 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="securities.Add(new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, gbpCash, config3, 100))", span="342-342"];
m3_203 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var transactions = new SecurityTransactionManager(securities)", span="310-310"];
m3_205 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="transactions.SetOrderProcessor(orderProcessor)", span="312-312"];
m3_207 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="portfolio.CashBook[''USD''].SetAmount(1000)", span="314-314"];
m3_208 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="portfolio.CashBook.Add(''EUR'',  1000, 1.1m)", span="315-315"];
m3_209 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="portfolio.CashBook.Add(''GBP'', -1000, 2.0m)", span="316-316"];
m3_210 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var eurCash = portfolio.CashBook[''EUR'']", span="318-318"];
m3_211 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var gbpCash = portfolio.CashBook[''GBP'']", span="319-319"];
m3_212 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var usdCash = portfolio.CashBook[''USD'']", span="320-320"];
m3_231 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, acceptedOrder)", span="367-367"];
m3_234 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="sufficientCapital = transactions.GetSufficientCapitalForOrder(portfolio, rejectedOrder)", span="371-371"];
m3_215 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="securities.Add(new Security(SecurityExchangeHours, config1, 2))", span="324-324"];
m3_216 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="securities[Symbols.AAPL].Holdings.SetHoldings(100, 100)", span="325-325"];
m3_217 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="securities[Symbols.AAPL].SetMarketPrice(new TradeBar{Time = time, Value = 100})", span="326-326"];
m3_220 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="securities[Symbols.EURUSD].Holdings.SetHoldings(1.1m, 1000)", span="334-334"];
m3_221 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="securities[Symbols.EURUSD].SetMarketPrice(new TradeBar { Time = time, Value = 1.1m })", span="335-335"];
m3_224 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="securities[Symbols.EURGBP].Holdings.SetHoldings(1m, 1000)", span="343-343"];
m3_225 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="securities[Symbols.EURGBP].SetMarketPrice(new TradeBar { Time = time, Value = 1m })", span="344-344"];
m3_218 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var config2 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD)", span="332-332"];
m3_222 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var config3 = CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURGBP)", span="341-341"];
m3_226 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var acceptedOrder = new MarketOrder(Symbols.AAPL, 101, DateTime.Now) { Price = 100 }", span="362-362"];
m3_233 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var rejectedOrder = new MarketOrder(Symbols.AAPL, 102, DateTime.Now) { Price = 100 }", span="370-370"];
m3_230 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="orderProcessor.AddTicket(new OrderTicket(null, request))", span="366-366"];
m3_204 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var orderProcessor = new OrderProcessor()", span="311-311"];
m3_213 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var time = DateTime.Now", span="322-322"];
m3_232 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="Assert.IsTrue(sufficientCapital)", span="368-368"];
m3_235 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="Assert.IsFalse(sufficientCapital)", span="372-372"];
m3_214 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var config1 = CreateTradeBarDataConfig(SecurityType.Equity, Symbols.AAPL)", span="323-323"];
m3_227 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="orderProcessor.AddOrder(acceptedOrder)", span="363-363"];
m3_228 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="var request = new SubmitOrderRequest(OrderType.Market, acceptedOrder.SecurityType, acceptedOrder.Symbol, acceptedOrder.Quantity, 0, 0, acceptedOrder.Time, null)", span="364-364"];
m3_229 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="request.SetOrderId(0)", span="365-365"];
m3_236 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.MarginComputesProperlyWithMultipleSecurities()", span="307-307"];
m3_278 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="430-430"];
m3_287 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(1000, portfolio.Cash)", span="441-441"];
m3_292 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(998, portfolio.Cash)", span="447-447"];
m3_293 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(100, portfolio.CashBook[''EUR''].Amount)", span="448-448"];
m3_294 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(888, portfolio.CashBook[''USD''].Amount)", span="449-449"];
m3_286 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(0, security.Holdings.Quantity)", span="440-440"];
m3_291 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="Assert.AreEqual(100, security.Holdings.Quantity)", span="446-446"];
m3_281 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="var portfolio = new SecurityPortfolioManager(securities, transactions)", span="434-434"];
m3_288 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="var orderFee = security.FeeModel.GetOrderFee(security, new MarketOrder(Symbols.EURUSD, 100, DateTime.MinValue))", span="443-443"];
m3_285 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="var security = securities[Symbols.EURUSD]", span="439-439"];
m3_290 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="portfolio.ProcessFill(fill)", span="445-445"];
m3_279 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="var securities = new SecurityManager(TimeKeeper)", span="432-432"];
m3_284 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="securities.Add(Symbols.EURUSD, new QuantConnect.Securities.Forex.Forex(SecurityExchangeHours, portfolio.CashBook[''USD''], CreateTradeBarDataConfig(SecurityType.Forex, Symbols.EURUSD), 1))", span="438-438"];
m3_280 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="var transactions = new SecurityTransactionManager(securities)", span="433-433"];
m3_282 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="portfolio.SetCash(1000)", span="435-435"];
m3_283 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="portfolio.CashBook.Add(''EUR'', 0, 1.1000m)", span="436-436"];
m3_289 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="var fill = new OrderEvent(1, Symbols.EURUSD, DateTime.MinValue, OrderStatus.Filled, OrderDirection.Buy, 1.1000m, 100, orderFee)", span="444-444"];
m3_295 [cluster="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", file="BacktestingSetupHandler.cs", label="Exit QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.ForexFillUpdatesCashCorrectly()", span="430-430"];
m3_296 [cluster="QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Orders.Fees.IFeeModel.GetOrderFee(QuantConnect.Securities.Security, QuantConnect.Orders.Order)", span="31-31"];
m3_193 [cluster="System.DateTime.AddSeconds(double)", file="BacktestingSetupHandler.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m3_30 [cluster="QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.Security.Security(QuantConnect.Securities.SecurityExchangeHours, QuantConnect.Data.SubscriptionDataConfig, decimal)", span="261-261"];
m3_108 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BacktestingSetupHandler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_199 [cluster="Unk.AreNotEqual", file="BacktestingSetupHandler.cs", label="Entry Unk.AreNotEqual", span=""];
m3_252 [cluster="QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Orders.OrderEvent.OrderEvent(int, QuantConnect.Symbol, System.DateTime, QuantConnect.Orders.OrderStatus, QuantConnect.Orders.OrderDirection, decimal, int, decimal, string)", span="95-95"];
m3_238 [cluster="QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Securities.SecurityHolding.SetHoldings(decimal, int)", span="343-343"];
m3_345 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool)", file="BacktestingSetupHandler.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool)", span="145-145"];
m3_383 [file="BacktestingSetupHandler.cs", label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", span=""];
m3_384 [file="BacktestingSetupHandler.cs", label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", span=""];
m3_385 [file="BacktestingSetupHandler.cs", label=string, span=""];
m4_41 [cluster="Unk.Where", file="CashBuyingPowerModel.cs", label="Entry Unk.Where", span=""];
m4_25 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", span="69-69"];
m4_26 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="return new HashSet<T>(enumerable);", span="71-71"];
m4_27 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.ToHashSet<T>(System.Collections.Generic.IEnumerable<T>)", span="69-69"];
m4_45 [cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0"];
m4_135 [cluster="System.Collections.IEnumerator.MoveNext()", file="CashBuyingPowerModel.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m4_46 [cluster="QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", span="118-118"];
m4_47 [cluster="QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="return enumerable == null || !enumerable.Any();", span="120-120"];
m4_48 [cluster="QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)", span="118-118"];
m4_136 [cluster="System.Collections.Generic.List<T>.List()", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_24 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m4_64 [cluster="QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", span="151-151"];
m4_65 [cluster="QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", file="CashBuyingPowerModel.cs", label="return collection.Select(selector).Median();", span="153-153"];
m4_66 [cluster="QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.Median<T, TProperty>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TProperty>)", span="151-151"];
m4_99 [cluster="QuantConnect.Util.MemoizingEnumerable<T>.MemoizingEnumerable(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.MemoizingEnumerable<T>.MemoizingEnumerable(System.Collections.Generic.IEnumerable<T>)", span="40-40"];
m4_120 [cluster="System.Collections.Generic.HashSet<T>.Add(T)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.HashSet<T>.Add(T)", span="0-0"];
m4_117 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Entry lambda expression", span="280-280"];
m4_4 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Entry lambda expression", span="36-36"];
m4_7 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Entry lambda expression", span="36-36"];
m4_5 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="grouping.Key", span="36-36"];
m4_6 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Exit lambda expression", span="36-36"];
m4_8 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="grouping.ToList()", span="36-36"];
m4_9 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Exit lambda expression", span="36-36"];
m4_14 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Entry lambda expression", span="48-48"];
m4_17 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Entry lambda expression", span="48-48"];
m4_15 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="kvp.Key", span="48-48"];
m4_16 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Exit lambda expression", span="48-48"];
m4_18 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="kvp.Value", span="48-48"];
m4_19 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Exit lambda expression", span="48-48"];
m4_43 [cluster="lambda expression", color=red, community=0, file="CashBuyingPowerModel.cs", label="0: !set.Contains(item)", span="109-109"];
m4_42 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Entry lambda expression", span="109-109"];
m4_44 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Exit lambda expression", span="109-109"];
m4_61 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Entry lambda expression", span="140-140"];
m4_62 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label=x, span="140-140"];
m4_63 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Exit lambda expression", span="140-140"];
m4_118 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="hash.Add(selector(x))", span="280-280"];
m4_119 [cluster="lambda expression", file="CashBuyingPowerModel.cs", label="Exit lambda expression", span="280-280"];
m4_90 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", span="220-220"];
m4_91 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", file="CashBuyingPowerModel.cs", label="return list.BinarySearch(value, comparer.Compare);", span="222-222"];
m4_92 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem, System.Collections.Generic.IComparer<TItem>)", span="220-220"];
m4_0 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Linq.ILookup<K, V>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Linq.ILookup<K, V>)", span="34-34"];
m4_1 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Linq.ILookup<K, V>)", file="CashBuyingPowerModel.cs", label="return lookup.ToDictionary(grouping => grouping.Key, grouping => grouping.ToList());", span="36-36"];
m4_2 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Linq.ILookup<K, V>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Linq.ILookup<K, V>)", span="34-34"];
m4_110 [cluster="System.IComparable.CompareTo(object)", file="CashBuyingPowerModel.cs", label="Entry System.IComparable.CompareTo(object)", span="0-0"];
m4_116 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m4_87 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", span="207-207"];
m4_88 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", file="CashBuyingPowerModel.cs", label="return BinarySearch(list, value, Comparer<TItem>.Default);", span="209-209"];
m4_89 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.BinarySearch<TItem>(System.Collections.Generic.IList<TItem>, TItem)", span="207-207"];
m4_50 [cluster="QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", span="126-126"];
m4_51 [cluster="QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", file="CashBuyingPowerModel.cs", label="return enumerable.Select(selector).DefaultIfEmpty(defaultValue);", span="128-128"];
m4_52 [cluster="QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.DefaultIfEmpty<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>, TResult)", span="126-126"];
m4_34 [cluster="QuantConnect.Util.LinqExtensions.ToList<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.ToList<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="95-95"];
m4_35 [cluster="QuantConnect.Util.LinqExtensions.ToList<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="CashBuyingPowerModel.cs", label="return enumerable.Select(selector).ToList();", span="97-97"];
m4_36 [cluster="QuantConnect.Util.LinqExtensions.ToList<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.ToList<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="95-95"];
m4_32 [cluster="HashSet<TResult>.cstr", file="CashBuyingPowerModel.cs", label="Entry HashSet<TResult>.cstr", span=""];
m4_85 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CashBuyingPowerModel.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_37 [cluster="Unk.ToList", file="CashBuyingPowerModel.cs", label="Entry Unk.ToList", span=""];
m4_67 [cluster="Unk.Median", file="CashBuyingPowerModel.cs", label="Entry Unk.Median", span=""];
m4_121 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", span="292-292"];
m4_122 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="var e = enumerable.GetEnumerator()", span="294-294"];
m4_129 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="yield return list;", span="308-308"];
m4_132 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="yield return list;", span="313-313"];
m4_127 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="grouper(pred, e.Current)", span="302-302"];
m4_123 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="e.MoveNext()", span="296-296"];
m4_124 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="var list = new List<T> {e.Current}", span="298-298"];
m4_125 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="var pred = e.Current", span="299-299"];
m4_126 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="e.MoveNext()", span="300-300"];
m4_128 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="list.Add(e.Current)", span="304-304"];
m4_130 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="list = new List<T> {e.Current}", span="309-309"];
m4_131 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="pred = e.Current", span="311-311"];
m4_133 [cluster="QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.GroupAdjacentBy<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, bool>)", span="292-292"];
m4_11 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", span="46-46"];
m4_12 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CashBuyingPowerModel.cs", label="return enumerable.ToDictionary(kvp => kvp.Key, kvp => kvp.Value);", span="48-48"];
m4_13 [cluster="QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.ToDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", span="46-46"];
m4_86 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="CashBuyingPowerModel.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m4_29 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="82-82"];
m4_30 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="CashBuyingPowerModel.cs", label="return new HashSet<TResult>(enumerable.Select(selector));", span="84-84"];
m4_31 [cluster="QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.ToHashSet<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="82-82"];
m4_94 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", span="231-231"];
m4_95 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="enumerable is MemoizingEnumerable<T>", span="233-233"];
m4_96 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="return enumerable;", span="233-233"];
m4_97 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="return new MemoizingEnumerable<T>(enumerable);", span="234-234"];
m4_98 [cluster="QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.Memoize<T>(System.Collections.Generic.IEnumerable<T>)", span="231-231"];
m4_138 [cluster="QuantConnect.Util.LinqExtensions.AreDifferent<T>(System.Collections.Generic.ISet<T>, System.Collections.Generic.ISet<T>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.AreDifferent<T>(System.Collections.Generic.ISet<T>, System.Collections.Generic.ISet<T>)", span="327-327"];
m4_139 [cluster="QuantConnect.Util.LinqExtensions.AreDifferent<T>(System.Collections.Generic.ISet<T>, System.Collections.Generic.ISet<T>)", file="CashBuyingPowerModel.cs", label="return left.Except(right).Any() || right.Except(left).Any();", span="329-329"];
m4_140 [cluster="QuantConnect.Util.LinqExtensions.AreDifferent<T>(System.Collections.Generic.ISet<T>, System.Collections.Generic.ISet<T>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.AreDifferent<T>(System.Collections.Generic.ISet<T>, System.Collections.Generic.ISet<T>)", span="327-327"];
m4_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_93 [cluster="System.Collections.Generic.IList<TItem>.BinarySearch<TItem, TSearch>(TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.IList<TItem>.BinarySearch<TItem, TSearch>(TSearch, System.Func<TSearch, TItem, int>)", span="165-165"];
m4_134 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m4_23 [cluster="System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>.ReadOnlyDictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m4_58 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m4_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m4_28 [cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m4_141 [cluster="System.Collections.Generic.IEnumerable<T>.Except<T>(System.Collections.Generic.ISet<T>)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Except<T>(System.Collections.Generic.ISet<T>)", span="107-107"];
m4_59 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m4_100 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", span="247-247"];
m4_101 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CashBuyingPowerModel.cs", label="var current = start", span="250-250"];
m4_104 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CashBuyingPowerModel.cs", label="yield return current;", span="255-255"];
m4_107 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CashBuyingPowerModel.cs", label="yield return current;", span="263-263"];
m4_102 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CashBuyingPowerModel.cs", label=includeEndPoint, span="251-251"];
m4_103 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CashBuyingPowerModel.cs", label="current.CompareTo(end) <= 0", span="253-253"];
m4_105 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CashBuyingPowerModel.cs", label="current = incrementer(current)", span="256-256"];
m4_106 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CashBuyingPowerModel.cs", label="current.CompareTo(end) < 0", span="261-261"];
m4_108 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CashBuyingPowerModel.cs", label="current = incrementer(current)", span="264-264"];
m4_109 [cluster="QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.Range<T>(T, T, System.Func<T, T>, bool)", span="247-247"];
m4_111 [cluster="System.Func<T, TResult>.Invoke(T)", file="CashBuyingPowerModel.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_137 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m4_38 [cluster="QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", span="107-107"];
m4_39 [cluster="QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", color=red, community=0, file="CashBuyingPowerModel.cs", label="0: return enumerable.Where(item => !set.Contains(item));", span="109-109"];
m4_40 [cluster="QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.Except<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.ISet<T>)", span="107-107"];
m4_68 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", span="165-165"];
m4_69 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="list == null", span="167-167"];
m4_71 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="comparer == null", span="171-171"];
m4_74 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="var upper = list.Count - 1", span="177-177"];
m4_77 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="var comparisonResult = comparer(value, list[middle])", span="182-182"];
m4_70 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="throw new ArgumentNullException(''list'');", span="169-169"];
m4_72 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="throw new ArgumentNullException(''comparer'');", span="173-173"];
m4_73 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="var lower = 0", span="176-176"];
m4_75 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="lower <= upper", span="179-179"];
m4_76 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="var middle = lower + (upper - lower) / 2", span="181-181"];
m4_83 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="return ~lower;", span="197-197"];
m4_79 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="upper = middle - 1", span="185-185"];
m4_81 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="lower = middle + 1", span="189-189"];
m4_82 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="return middle;", span="193-193"];
m4_78 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="comparisonResult < 0", span="183-183"];
m4_80 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="comparisonResult > 0", span="187-187"];
m4_84 [cluster="QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.BinarySearch<TItem, TSearch>(System.Collections.Generic.IList<TItem>, TSearch, System.Func<TSearch, TItem, int>)", span="165-165"];
m4_112 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", span="277-277"];
m4_113 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="CashBuyingPowerModel.cs", label="var hash = new HashSet<TPropery>()", span="279-279"];
m4_114 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="CashBuyingPowerModel.cs", label="return enumerable.Where(x => hash.Add(selector(x)));", span="280-280"];
m4_115 [cluster="QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.DistinctBy<T, TPropery>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TPropery>)", span="277-277"];
m4_60 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="CashBuyingPowerModel.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m4_20 [cluster="QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", span="58-58"];
m4_21 [cluster="QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CashBuyingPowerModel.cs", label="return new ReadOnlyDictionary<K, V>(enumerable.ToDictionary());", span="60-60"];
m4_22 [cluster="QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.ToReadOnlyDictionary<K, V>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>)", span="58-58"];
m4_54 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Entry QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", span="137-137"];
m4_55 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="var collection = enumerable.ToList()", span="139-139"];
m4_56 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="return collection.OrderBy(x => x).Skip(collection.Count/2).First();", span="140-140"];
m4_57 [cluster="QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", file="CashBuyingPowerModel.cs", label="Exit QuantConnect.Util.LinqExtensions.Median<T>(System.Collections.Generic.IEnumerable<T>)", span="137-137"];
m4_33 [cluster="Unk.Select", file="CashBuyingPowerModel.cs", label="Entry Unk.Select", span=""];
m4_3 [cluster="Unk.ToDictionary", file="CashBuyingPowerModel.cs", label="Entry Unk.ToDictionary", span=""];
m4_53 [cluster="Unk.DefaultIfEmpty", file="CashBuyingPowerModel.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m4_142 [file="CashBuyingPowerModel.cs", label="System.Collections.Generic.ISet<T>", span=""];
m4_143 [file="CashBuyingPowerModel.cs", label="System.Func<T, TPropery>", span=""];
m4_144 [file="CashBuyingPowerModel.cs", label=hash, span=""];
m9_12 [cluster="QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.Order.CopyTo(QuantConnect.Orders.Order)", span="230-230"];
m9_2 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47"];
m9_3 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, int, System.DateTime, string)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder(QuantConnect.Symbol, int, System.DateTime, string)", span="47-47"];
m9_0 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m9_1 [cluster="QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.MarketOnCloseOrder()", span="36-36"];
m9_7 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.Clone()", span="65-65"];
m9_8 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="GDAXBrokerageTests.cs", label="var order = new MarketOnCloseOrder()", span="67-67"];
m9_9 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="GDAXBrokerageTests.cs", label="CopyTo(order)", span="68-68"];
m9_10 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="GDAXBrokerageTests.cs", label="return order;", span="69-69"];
m9_11 [cluster="QuantConnect.Orders.MarketOnCloseOrder.Clone()", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.Clone()", span="65-65"];
m9_4 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="Entry QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m9_5 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="return Quantity*security.Price;", span="58-58"];
m9_6 [cluster="QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", file="GDAXBrokerageTests.cs", label="Exit QuantConnect.Orders.MarketOnCloseOrder.GetValueImpl(QuantConnect.Securities.Security)", span="56-56"];
m9_13 [file="GDAXBrokerageTests.cs", label="QuantConnect.Orders.MarketOnCloseOrder", span=""];
m10_44 [cluster="Unk.All", file="HistoryAlgorithm.cs", label="Entry Unk.All", span=""];
m10_29 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", span="79-79"];
m10_30 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="!_ribbon.All(x => x.IsReady)", span="82-82"];
m10_34 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="Plot(''Ribbon'', ''Price'', data[_spy].Price)", span="87-87"];
m10_31 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="return;", span="82-82"];
m10_32 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="HistoryAlgorithm.cs", label="0: _previous.Date == Time.Date", span="85-85"];
m10_33 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="HistoryAlgorithm.cs", label="0: return;", span="85-85"];
m10_35 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="Plot(''Ribbon'', _ribbon)", span="88-88"];
m10_36 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="var values = _ribbon.Select(x => x.Current.Value).ToArray()", span="92-92"];
m10_37 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="var holding = Portfolio[_spy]", span="94-94"];
m10_38 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="holding.Quantity <= 0 && IsAscending(values)", span="95-95"];
m10_40 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", color=green, community=0, file="HistoryAlgorithm.cs", label="0: holding.Quantity > 0 && IsDescending(values)", span="99-99"];
m10_39 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="SetHoldings(_spy, 1.0)", span="97-97"];
m10_41 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="Liquidate(_spy)", span="101-101"];
m10_42 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="_previous = Time", span="104-104"];
m10_43 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", file="HistoryAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.OnData(QuantConnect.Data.Market.TradeBars)", span="79-79"];
m10_0 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", span="44-44"];
m10_1 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", file="HistoryAlgorithm.cs", label="SetStartDate(2009, 01, 01)", span="46-46"];
m10_2 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", file="HistoryAlgorithm.cs", label="SetEndDate(2015, 01, 01)", span="47-47"];
m10_3 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", color=green, community=1, file="HistoryAlgorithm.cs", label="0: AddSecurity(SecurityType.Equity, ''SPY'', Resolution.Daily)", span="49-49"];
m10_4 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", file="HistoryAlgorithm.cs", label="int count = 6", span="51-51"];
m10_5 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", file="HistoryAlgorithm.cs", label="int offset = 5", span="52-52"];
m10_8 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", color=green, community=0, file="HistoryAlgorithm.cs", label="0: _ribbon = Enumerable.Range(0, count).Select(x =>\r\n            {\r\n                // define our offset to the zero sma, these various offsets will create our 'displaced' ribbon\r\n                var delay = new Delay(offset*(x+1));\r\n\r\n                // define an indicator that takes the output of the sma and pipes it into our delay indicator\r\n                var delayedSma = delay.Of(sma);\r\n\r\n                // register our new 'delayedSma' for automaic updates on a daily resolution\r\n                RegisterIndicator(_spy, delayedSma, Resolution.Daily, data => data.Value);\r\n\r\n                return delayedSma;\r\n            }).ToArray()", span="58-70"];
m10_6 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", file="HistoryAlgorithm.cs", label="int period = 15", span="53-53"];
m10_7 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", file="HistoryAlgorithm.cs", label="var sma = new SimpleMovingAverage(period)", span="56-56"];
m10_9 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", file="HistoryAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.Initialize()", span="44-44"];
m10_57 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", span="110-110"];
m10_58 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="decimal? last = null", span="112-112"];
m10_59 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label=values, span="113-113"];
m10_60 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="last == null", span="115-115"];
m10_62 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="last.Value < val", span="121-121"];
m10_65 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="return true;", span="127-127"];
m10_61 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", color=green, community=0, file="HistoryAlgorithm.cs", label="1: last = val", span="117-117"];
m10_64 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="last = val", span="125-125"];
m10_63 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="return false;", span="123-123"];
m10_66 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsAscending(System.Collections.Generic.IEnumerable<decimal>)", span="110-110"];
m10_16 [cluster="Unk.ToArray", file="HistoryAlgorithm.cs", label="Entry Unk.ToArray", span=""];
m10_67 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", span="133-133"];
m10_68 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="decimal? last = null", span="135-135"];
m10_69 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label=values, span="136-136"];
m10_70 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="last == null", span="138-138"];
m10_72 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="last.Value > val", span="144-144"];
m10_75 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="return true;", span="150-150"];
m10_71 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="last = val", span="140-140"];
m10_74 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="last = val", span="148-148"];
m10_73 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="return false;", span="146-146"];
m10_76 [cluster="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", file="HistoryAlgorithm.cs", label="Exit QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon.IsDescending(System.Collections.Generic.IEnumerable<decimal>)", span="133-133"];
m10_54 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="Entry lambda expression", span="92-92"];
m10_18 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="var delay = new Delay(offset*(x+1))", span="61-61"];
m10_19 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="var delayedSma = delay.Of(sma)", span="64-64"];
m10_17 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="Entry lambda expression", span="58-70"];
m10_20 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="RegisterIndicator(_spy, delayedSma, Resolution.Daily, data => data.Value)", span="67-67"];
m10_21 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="return delayedSma;", span="69-69"];
m10_26 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="Entry lambda expression", span="67-67"];
m10_22 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="Exit lambda expression", span="58-70"];
m10_27 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="data.Value", span="67-67"];
m10_28 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="Exit lambda expression", span="67-67"];
m10_51 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="Entry lambda expression", span="82-82"];
m10_52 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="x.IsReady", span="82-82"];
m10_53 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="Exit lambda expression", span="82-82"];
m10_55 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="x.Current.Value", span="92-92"];
m10_56 [cluster="lambda expression", file="HistoryAlgorithm.cs", label="Exit lambda expression", span="92-92"];
m10_24 [cluster="TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", file="HistoryAlgorithm.cs", label="Entry TSecond.Of<T, TSecond>(QuantConnect.Indicators.IndicatorBase<T>, bool)", span="48-48"];
m10_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1172-1172"];
m10_13 [cluster="QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Indicators.SimpleMovingAverage.SimpleMovingAverage(int)", span="56-56"];
m10_23 [cluster="QuantConnect.Indicators.Delay.Delay(int)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Indicators.Delay.Delay(int)", span="26-26"];
m10_46 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot<T>(string, params QuantConnect.Indicators.IndicatorBase<T>[])", span="231-231"];
m10_49 [cluster="Unk.IsDescending", file="HistoryAlgorithm.cs", label="Entry Unk.IsDescending", span=""];
m10_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1197-1197"];
m10_14 [cluster="System.Linq.Enumerable.Range(int, int)", file="HistoryAlgorithm.cs", label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0"];
m10_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="770-770"];
m10_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RegisterIndicator(QuantConnect.Symbol, QuantConnect.Indicators.IndicatorBase<QuantConnect.Indicators.IndicatorDataPoint>, QuantConnect.Resolution?, System.Func<QuantConnect.Data.IBaseData, decimal>)", span="1361-1361"];
m10_48 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHoldings(QuantConnect.Symbol, double, bool)", span="844-844"];
m10_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", file="HistoryAlgorithm.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Plot(string, string, decimal)", span="157-157"];
m10_47 [cluster="Unk.IsAscending", file="HistoryAlgorithm.cs", label="Entry Unk.IsAscending", span=""];
m10_15 [cluster="Unk.Select", file="HistoryAlgorithm.cs", label="Entry Unk.Select", span=""];
m10_77 [file="HistoryAlgorithm.cs", label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", span=""];
m10_78 [file="HistoryAlgorithm.cs", label=offset, span=""];
m10_79 [file="HistoryAlgorithm.cs", label=sma, span=""];
m11_2 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41"];
m11_3 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="IExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41"];
m11_0 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.CanInterpret(System.Exception)", file="IExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.IExceptionInterpreter.CanInterpret(System.Exception)", span="30-30"];
m11_1 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.CanInterpret(System.Exception)", file="IExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.IExceptionInterpreter.CanInterpret(System.Exception)", span="30-30"];
m13_64 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="Loader.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m13_119 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", span="303-303"];
m13_126 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="var types = new List<string>()", span="305-305"];
m13_128 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="assemblyTypes = assembly.GetTypes()", span="311-311"];
m13_127 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="Type[] assemblyTypes", span="308-308"];
m13_136 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="return types;", span="338-338"];
m13_129 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label=ReflectionTypeLoadException, span="313-313"];
m13_131 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="assemblyTypes != null && assemblyTypes.Length > 0", span="318-318"];
m13_130 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="assemblyTypes = e.Types", span="315-315"];
m13_132 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="types = (from t in assemblyTypes\r\n                             where t.IsClass                                    // require class\r\n                             where !t.IsAbstract                                // require concrete impl\r\n                             where AlgorithmInterfaceType.IsAssignableFrom(t)   // require derived from IAlgorithm\r\n                             where t.FullName != AlgorithmBaseTypeFullName      // require not equal to QuantConnect.QCAlgorithm\r\n                             where t.GetConstructor(Type.EmptyTypes) != null    // require default ctor\r\n                             select t.FullName).ToList()", span="320-326"];
m13_133 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="Log.Error(''API.GetExtendedTypeNames(): No types found in assembly.'')", span="330-330"];
m13_134 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label=Exception, span="333-333"];
m13_135 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="Log.Error(err)", span="335-335"];
m13_137 [cluster="QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.GetExtendedTypeNames(System.Reflection.Assembly)", span="303-303"];
m13_140 [cluster="Unk.IsAssignableFrom", file="Loader.cs", label="Entry Unk.IsAssignableFrom", span=""];
m13_57 [cluster="Unk.Initialize", file="Loader.cs", label="Entry Unk.Initialize", span=""];
m13_138 [cluster="System.Collections.Generic.List<T>.List()", file="Loader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m13_125 [cluster="object.GetType()", file="Loader.cs", label="Entry object.GetType()", span="0-0"];
m13_120 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Loader.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m13_15 [cluster="System.Environment.SetEnvironmentVariable(string, string)", file="Loader.cs", label="Entry System.Environment.SetEnvironmentVariable(string, string)", span="0-0"];
m13_5 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="Loader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m13_157 [cluster="lambda expression", file="Loader.cs", label="Entry lambda expression", span="356-359"];
m13_2 [cluster="lambda expression", file="Loader.cs", label="Entry lambda expression", span="64-64"];
m13_3 [cluster="lambda expression", file="Loader.cs", label="names.SingleOrDefault()", span="64-64"];
m13_4 [cluster="lambda expression", file="Loader.cs", label="Exit lambda expression", span="64-64"];
m13_158 [cluster="lambda expression", file="Loader.cs", label="success = TryCreateAlgorithmInstance(assemblyPath, out instance, out error)", span="358-358"];
m13_159 [cluster="lambda expression", file="Loader.cs", label="Exit lambda expression", span="356-359"];
m13_114 [cluster="string.Substring(int, int)", file="Loader.cs", label="Entry string.Substring(int, int)", span="0-0"];
m13_16 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="106-106"];
m13_17 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = null", span="109-109"];
m13_19 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="!File.Exists(assemblyPath)", span="113-113"];
m13_23 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="TryCreatePythonAlgorithm(assemblyPath, out algorithmInstance, out errorMessage)", span="121-121"];
m13_24 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="TryCreateILAlgorithm(assemblyPath, out algorithmInstance, out errorMessage)", span="125-125"];
m13_18 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''''", span="110-110"];
m13_20 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="115-115"];
m13_21 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label=_language, span="118-118"];
m13_22 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Language.Python", span="120-120"];
m13_25 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return algorithmInstance != null;", span="130-130"];
m13_26 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstance(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="106-106"];
m13_118 [cluster="QuantConnect.Logging.Log.Error(string, bool)", file="Loader.cs", label="Entry QuantConnect.Logging.Log.Error(string, bool)", span="65-65"];
m13_143 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349"];
m13_144 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="IAlgorithm instance = null", span="351-351"];
m13_148 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var complete = isolator.ExecuteWithTimeLimit(_loaderTimeLimit, () =>\r\n            {\r\n                success = TryCreateAlgorithmInstance(assemblyPath, out instance, out error);\r\n            }, ramLimit)", span="356-359"];
m13_145 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var error = string.Empty", span="352-352"];
m13_146 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var success = false", span="354-354"];
m13_147 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var isolator = new Isolator()", span="355-355"];
m13_149 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = instance", span="361-361"];
m13_150 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = error", span="362-362"];
m13_151 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="!complete", span="365-365"];
m13_152 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''Failed to create algorithm instance within 10 seconds. Try re-building algorithm. '' + error", span="367-367"];
m13_153 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return complete && success && algorithmInstance != null;", span="370-370"];
m13_154 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.TryCreateAlgorithmInstanceWithIsolator(string, int, out QuantConnect.Interfaces.IAlgorithm, out string)", span="349-349"];
m13_141 [cluster="Unk.GetConstructor", file="Loader.cs", label="Entry Unk.GetConstructor", span=""];
m13_58 [cluster="Unk.BeginAllowThreads", file="Loader.cs", label="Entry Unk.BeginAllowThreads", span=""];
m13_29 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="202-202"];
m13_65 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''''", span="204-204"];
m13_68 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var directoryName = new FileInfo(assemblyPath).DirectoryName", span="213-213"];
m13_70 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var mdbFilename = assemblyPath + ''.mdb''", span="217-217"];
m13_71 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var pdbFilename = assemblyPath.Substring(0, assemblyPath.Length - 4) + ''.pdb''", span="218-218"];
m13_79 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="assembly = Assembly.LoadFrom(assemblyPath)", span="235-235"];
m13_81 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var assemblyBytes = File.ReadAllBytes(assemblyPath)", span="240-240"];
m13_66 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = null", span="205-205"];
m13_67 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="byte[] debugInformationBytes = null", span="209-209"];
m13_77 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="debugInformationBytes == null", span="232-232"];
m13_82 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="assembly = Assembly.Load(assemblyBytes, debugInformationBytes)", span="241-241"];
m13_69 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="directoryName != null && directoryName.TrimEnd(Path.DirectorySeparatorChar) != AppDomain.CurrentDomain.BaseDirectory.TrimEnd(Path.DirectorySeparatorChar)", span="214-214"];
m13_76 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Assembly assembly", span="231-231"];
m13_74 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="File.Exists(mdbFilename)", span="224-224"];
m13_75 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="debugInformationBytes = File.ReadAllBytes(mdbFilename)", span="226-226"];
m13_72 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="File.Exists(pdbFilename)", span="219-219"];
m13_73 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="debugInformationBytes = File.ReadAllBytes(pdbFilename)", span="221-221"];
m13_78 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Trace(''Loader.TryCreateILAlgorithm(): Loading only the algorithm assembly'')", span="234-234"];
m13_80 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Trace(''Loader.TryCreateILAlgorithm(): Loading debug information with algorithm'')", span="239-239"];
m13_83 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="assembly == null", span="243-243"];
m13_87 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var types = GetExtendedTypeNames(assembly)", span="251-251"];
m13_99 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = (IAlgorithm)assembly.CreateInstance(types[0], true)", span="275-275"];
m13_84 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''Assembly is null.''", span="245-245"];
m13_85 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(''Loader.TryCreateILAlgorithm(): Assembly is null'')", span="246-246"];
m13_86 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="247-247"];
m13_88 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Debug(''Loader.TryCreateILAlgorithm(): Assembly types: '' + string.Join('','', types))", span="252-252"];
m13_89 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="types.Count == 0", span="255-255"];
m13_93 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="types.Count > 1", span="262-262"];
m13_94 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="types[0] = _multipleTypeNameResolverFunction.Invoke(types)", span="265-265"];
m13_95 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="string.IsNullOrEmpty(types[0])", span="267-267"];
m13_90 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''Algorithm type was not found.''", span="257-257"];
m13_91 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(''Loader.TryCreateILAlgorithm(): Types array empty, no algorithm type found.'')", span="258-258"];
m13_92 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="259-259"];
m13_96 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = ''Please verify algorithm type name matches the algorithm name in the configuration file. Unable to resolve multiple algorithm types to a single type.''", span="269-269"];
m13_97 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(''Loader.TryCreateILAlgorithm(): Failed resolving multiple algorithm types to a single type.'')", span="270-270"];
m13_98 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="271-271"];
m13_100 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance != null", span="277-277"];
m13_101 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Trace(''Loader.TryCreateILAlgorithm(): Loaded '' + algorithmInstance.GetType().Name)", span="279-279"];
m13_102 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label=ReflectionTypeLoadException, span="283-283"];
m13_107 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label=Exception, span="289-289"];
m13_111 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return true;", span="295-295"];
m13_103 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(err)", span="285-285"];
m13_104 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(''Loader.TryCreateILAlgorithm(1): '' + err.LoaderExceptions[0])", span="286-286"];
m13_105 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="err.InnerException != null", span="287-287"];
m13_106 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = err.InnerException.Message", span="287-287"];
m13_108 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(err)", span="291-291"];
m13_109 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="err.InnerException != null", span="292-292"];
m13_110 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = err.InnerException.Message", span="292-292"];
m13_112 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.TryCreateILAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="202-202"];
m13_155 [cluster="QuantConnect.Isolator.Isolator()", file="Loader.cs", label="Entry QuantConnect.Isolator.Isolator()", span="55-55"];
m13_14 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Loader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m13_116 [cluster="System.Reflection.Assembly.LoadFrom(string)", file="Loader.cs", label="Entry System.Reflection.Assembly.LoadFrom(string)", span="0-0"];
m13_62 [cluster="AlgorithmPythonWrapper.cstr", file="Loader.cs", label="Entry AlgorithmPythonWrapper.cstr", span=""];
m13_142 [cluster="Unk.ToList", file="Loader.cs", label="Entry Unk.ToList", span=""];
m13_156 [cluster="QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", file="Loader.cs", label="Entry QuantConnect.Isolator.ExecuteWithTimeLimit(System.TimeSpan, System.Action, long)", span="145-145"];
m13_113 [cluster="string.TrimEnd(params char[])", file="Loader.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m13_56 [cluster="string.Replace(string, string)", file="Loader.cs", label="Entry string.Replace(string, string)", span="0-0"];
m13_121 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="Loader.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m13_27 [cluster="System.IO.File.Exists(string)", file="Loader.cs", label="Entry System.IO.File.Exists(string)", span="0-0"];
m13_61 [cluster="Unk.Import", file="Loader.cs", label="Entry Unk.Import", span=""];
m13_59 [cluster="Unk.GIL", file="Loader.cs", label="Entry Unk.GIL", span=""];
m13_0 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader()", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader()", span="63-63"];
m13_1 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader()", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.Loader()", span="63-63"];
m13_160 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Unload()", span="379-379"];
m13_161 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="Loader.cs", label="appDomain != null", span="380-380"];
m13_162 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="Loader.cs", label="AppDomain.Unload(appDomain)", span="382-382"];
m13_163 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="Loader.cs", label="appDomain = null", span="383-383"];
m13_164 [cluster="QuantConnect.AlgorithmFactory.Loader.Unload()", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.Unload()", span="379-379"];
m13_139 [cluster="System.Reflection.Assembly.GetTypes()", file="Loader.cs", label="Entry System.Reflection.Assembly.GetTypes()", span="0-0"];
m13_117 [cluster="System.Reflection.Assembly.Load(byte[], byte[])", file="Loader.cs", label="Entry System.Reflection.Assembly.Load(byte[], byte[])", span="0-0"];
m13_122 [cluster="System.Func<T, TResult>.Invoke(T)", file="Loader.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m13_124 [cluster="System.Reflection.Assembly.CreateInstance(string, bool)", file="Loader.cs", label="Entry System.Reflection.Assembly.CreateInstance(string, bool)", span="0-0"];
m13_55 [cluster="System.IO.FileInfo.FileInfo(string)", file="Loader.cs", label="Entry System.IO.FileInfo.FileInfo(string)", span="0-0"];
m13_6 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82"];
m13_7 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="_language = language", span="84-84"];
m13_8 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="multipleTypeNameResolverFunction == null", span="86-86"];
m13_10 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="_loaderTimeLimit = loaderTimeLimit", span="91-91"];
m13_11 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="_multipleTypeNameResolverFunction = multipleTypeNameResolverFunction", span="92-92"];
m13_9 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="throw new ArgumentNullException(''multipleTypeNameResolverFunction'');", span="88-88"];
m13_12 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="Environment.SetEnvironmentVariable(''PYTHONPATH'', Environment.CurrentDirectory)", span="95-95"];
m13_13 [cluster="QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.Loader(QuantConnect.Language, System.TimeSpan, System.Func<System.Collections.Generic.List<string>, string>)", span="82-82"];
m13_165 [cluster="System.AppDomain.Unload(System.AppDomain)", file="Loader.cs", label="Entry System.AppDomain.Unload(System.AppDomain)", span="0-0"];
m13_28 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Entry QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="140-140"];
m13_30 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = null", span="142-142"];
m13_32 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="!File.Exists(assemblyPath)", span="146-146"];
m13_33 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = $''Loader.TryCreatePythonAlgorithm(): Unable to find py file: {assemblyPath}''", span="148-148"];
m13_35 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var pythonFile = new FileInfo(assemblyPath)", span="154-154"];
m13_45 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = $''Loader.TryCreatePythonAlgorithm(): Unable to import python module {assemblyPath}. Check for errors in the python scripts.''", span="175-175"];
m13_52 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = $''Loader.TryCreatePythonAlgorithm(): Unable to import python module {assemblyPath}. {e.Message}''", span="188-188"];
m13_31 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="errorMessage = string.Empty", span="143-143"];
m13_34 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="149-149"];
m13_36 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var moduleName = pythonFile.Name.Replace(''.pyc'', '''').Replace(''.py'', '''')", span="155-155"];
m13_37 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Environment.SetEnvironmentVariable(''PYTHONPATH'', pythonFile.DirectoryName)", span="158-158"];
m13_42 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Trace($''Loader.TryCreatePythonAlgorithm(): Python version {PythonEngine.Version}: Importing python module {moduleName}'')", span="170-170"];
m13_43 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="var module = Py.Import(moduleName)", span="171-171"];
m13_38 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="!PythonEngine.IsInitialized", span="161-161"];
m13_39 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="PythonEngine.Initialize()", span="163-163"];
m13_41 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Py.GIL()", span="168-168"];
m13_40 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="PythonEngine.BeginAllowThreads()", span="164-164"];
m13_44 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="module == null", span="173-173"];
m13_48 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="algorithmInstance = new AlgorithmPythonWrapper(module)", span="181-181"];
m13_49 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", color=red, community=0, file="Loader.cs", label="0: ObjectActivator.SetPythonModule(module)", span="182-182"];
m13_47 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Trace(''Loader.TryCreatePythonAlgorithm(): Creating IAlgorithm instance.'')", span="179-179"];
m13_46 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return false;", span="176-176"];
m13_53 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="return algorithmInstance != null;", span="192-192"];
m13_50 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label=Exception, span="185-185"];
m13_51 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Log.Error(e)", span="187-187"];
m13_54 [cluster="QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", file="Loader.cs", label="Exit QuantConnect.AlgorithmFactory.Loader.TryCreatePythonAlgorithm(string, out QuantConnect.Interfaces.IAlgorithm, out string)", span="140-140"];
m13_63 [cluster="Unk.SetPythonModule", file="Loader.cs", label="Entry Unk.SetPythonModule", span=""];
m13_115 [cluster="System.IO.File.ReadAllBytes(string)", file="Loader.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m13_123 [cluster="string.IsNullOrEmpty(string)", file="Loader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m13_60 [cluster="QuantConnect.Logging.Log.Trace(string, bool)", file="Loader.cs", label="Entry QuantConnect.Logging.Log.Trace(string, bool)", span="106-106"];
m13_166 [file="Loader.cs", label="QuantConnect.AlgorithmFactory.Loader", span=""];
m13_167 [file="Loader.cs", label=string, span=""];
m14_19 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var dropboxBaseDataUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''67''},\r\n                {''Average Win'', ''1.13%''},\r\n                {''Average Loss'', ''-0.69%''},\r\n                {''Compounding Annual Return'', ''17.718%''},\r\n                {''Drawdown'', ''5.100%''},\r\n                {''Expectancy'', ''0.813''},\r\n                {''Net Profit'', ''17.718%''},\r\n                {''Sharpe Ratio'', ''1.38''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.64''},\r\n                {''Alpha'', ''0.055''},\r\n                {''Beta'', ''0.379''},\r\n                {''Annual Standard Deviation'', ''0.099''},\r\n                {''Annual Variance'', ''0.01''},\r\n                {''Information Ratio'', ''-0.703''},\r\n                {''Tracking Error'', ''0.11''},\r\n                {''Treynor Ratio'', ''0.359''},\r\n                {''Total Fees'', ''$300.15''}\r\n            }", span="226-247"];
m14_20 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var dropboxUniverseSelectionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''49''},\r\n                {''Average Win'', ''1.58%''},\r\n                {''Average Loss'', ''-1.03%''},\r\n                {''Compounding Annual Return'', ''21.281%''},\r\n                {''Drawdown'', ''8.200%''},\r\n                {''Expectancy'', ''0.646''},\r\n                {''Net Profit'', ''21.281%''},\r\n                {''Sharpe Ratio'', ''1.362''},\r\n                {''Loss Rate'', ''35%''},\r\n                {''Win Rate'', ''65%''},\r\n                {''Profit-Loss Ratio'', ''1.52''},\r\n                {''Alpha'', ''0.012''},\r\n                {''Beta'', ''0.705''},\r\n                {''Annual Standard Deviation'', ''0.12''},\r\n                {''Annual Variance'', ''0.014''},\r\n                {''Information Ratio'', ''-0.51''},\r\n                {''Tracking Error'', ''0.101''},\r\n                {''Treynor Ratio'', ''0.232''},\r\n                {''Total Fees'', ''$232.92''}\r\n            }", span="249-270"];
m14_21 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var parameterizedStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''278.616%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''11.017''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.553''},\r\n                {''Beta'', ''0.364''},\r\n                {''Annual Standard Deviation'', ''0.078''},\r\n                {''Annual Variance'', ''0.006''},\r\n                {''Information Ratio'', ''0.101''},\r\n                {''Tracking Error'', ''0.127''},\r\n                {''Treynor Ratio'', ''2.367''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="272-293"];
m14_22 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var historyAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''372.677%''},\r\n                {''Drawdown'', ''1.100%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''4.521''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.006''},\r\n                {''Beta'', ''0.997''},\r\n                {''Annual Standard Deviation'', ''0.193''},\r\n                {''Annual Variance'', ''0.037''},\r\n                {''Information Ratio'', ''6.231''},\r\n                {''Tracking Error'', ''0.001''},\r\n                {''Treynor Ratio'', ''0.876''},\r\n                {''Total Fees'', ''$3.09''},\r\n            }", span="295-316"];
m14_23 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var coarseFundamentalTop5AlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''10''},\r\n                {''Average Win'', ''1.15%''},\r\n                {''Average Loss'', ''-0.47%''},\r\n                {''Compounding Annual Return'', ''-0.746%''},\r\n                {''Drawdown'', ''3.000%''},\r\n                {''Expectancy'', ''-0.313''},\r\n                {''Net Profit'', ''-0.746%''},\r\n                {''Sharpe Ratio'', ''-0.242''},\r\n                {''Loss Rate'', ''80%''},\r\n                {''Win Rate'', ''20%''},\r\n                {''Profit-Loss Ratio'', ''2.44''},\r\n                {''Alpha'', ''-0.01''},\r\n                {''Beta'', ''0.044''},\r\n                {''Annual Standard Deviation'', ''0.024''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-0.973''},\r\n                {''Tracking Error'', ''0.1''},\r\n                {''Treynor Ratio'', ''-0.13''},\r\n                {''Total Fees'', ''$10.61''},\r\n            }", span="318-339"];
m14_36 [cluster="System.Collections.Generic.List<T>.List()", file="MovingAverageConvergenceDivergence.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m14_39 [cluster="Unk.ToArray", file="MovingAverageConvergenceDivergence.cs", label="Entry Unk.ToArray", span=""];
m14_16 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var universeSelectionRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.70%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''-73.872%''},\r\n                {''Drawdown'', ''6.600%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''-6.060%''},\r\n                {''Sharpe Ratio'', ''-3.562''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.681''},\r\n                {''Beta'', ''2.014''},\r\n                {''Annual Standard Deviation'', ''0.284''},\r\n                {''Annual Variance'', ''0.08''},\r\n                {''Information Ratio'', ''-3.67''},\r\n                {''Tracking Error'', ''0.231''},\r\n                {''Treynor Ratio'', ''-0.502''},\r\n                {''Total Fees'', ''$5.00''}\r\n            }", span="157-178"];
m14_17 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var customDataRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''1''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''155.210%''},\r\n                {''Drawdown'', ''84.800%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0%''},\r\n                {''Sharpe Ratio'', ''1.199''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.99''},\r\n                {''Beta'', ''0.168''},\r\n                {''Annual Standard Deviation'', ''0.84''},\r\n                {''Annual Variance'', ''0.706''},\r\n                {''Information Ratio'', ''1.072''},\r\n                {''Tracking Error'', ''0.845''},\r\n                {''Treynor Ratio'', ''5.997''},\r\n                {''Total Fees'', ''$0.00''}\r\n            }", span="180-201"];
m14_18 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var addRemoveSecurityRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5''},\r\n                {''Average Win'', ''0.49%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''307.853%''},\r\n                {''Drawdown'', ''1.400%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''1.814%''},\r\n                {''Sharpe Ratio'', ''6.474''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.306''},\r\n                {''Beta'', ''0.718''},\r\n                {''Annual Standard Deviation'', ''0.141''},\r\n                {''Annual Variance'', ''0.02''},\r\n                {''Information Ratio'', ''1.077''},\r\n                {''Tracking Error'', ''0.062''},\r\n                {''Treynor Ratio'', ''1.275''},\r\n                {''Total Fees'', ''$25.20''}\r\n            }", span="203-224"];
m14_13 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var limitFillRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''34''},\r\n                {''Average Win'', ''0.02%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''8.350%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''0.447''},\r\n                {''Net Profit'', ''0.103%''},\r\n                {''Sharpe Ratio'', ''1.747''},\r\n                {''Loss Rate'', ''31%''},\r\n                {''Win Rate'', ''69%''},\r\n                {''Profit-Loss Ratio'', ''1.10''},\r\n                {''Alpha'', ''-0.077''},\r\n                {''Beta'', ''0.152''},\r\n                {''Annual Standard Deviation'', ''0.03''},\r\n                {''Annual Variance'', ''0.001''},\r\n                {''Information Ratio'', ''-4.87''},\r\n                {''Tracking Error'', ''0.164''},\r\n                {''Treynor Ratio'', ''0.343''},\r\n                {''Total Fees'', ''$34.00''}\r\n            }", span="88-109"];
m14_14 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var updateOrderRegressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''21''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-1.71%''},\r\n                {''Compounding Annual Return'', ''-8.289%''},\r\n                {''Drawdown'', ''16.700%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-15.892%''},\r\n                {''Sharpe Ratio'', ''-1.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0.011''},\r\n                {''Beta'', ''-0.469''},\r\n                {''Annual Standard Deviation'', ''0.056''},\r\n                {''Annual Variance'', ''0.003''},\r\n                {''Information Ratio'', ''-1.573''},\r\n                {''Tracking Error'', ''0.152''},\r\n                {''Treynor Ratio'', ''0.147''},\r\n                {''Total Fees'', ''$21.00''}\r\n            }", span="111-132"];
m14_15 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var regressionStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''5433''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0.00%''},\r\n                {''Compounding Annual Return'', ''-3.886%''},\r\n                {''Drawdown'', ''0.100%''},\r\n                {''Expectancy'', ''-0.991''},\r\n                {''Net Profit'', ''-0.054%''},\r\n                {''Sharpe Ratio'', ''-30.336''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''2.40''},\r\n                {''Alpha'', ''-0.022''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-4.198''},\r\n                {''Tracking Error'', ''0.174''},\r\n                {''Treynor Ratio'', ''35.023''},\r\n                {''Total Fees'', ''$5433.00''}\r\n            }", span="134-155"];
m14_31 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var optionExerciseAssignRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0.30%''},\r\n                {''Average Loss'', ''-0.20%''},\r\n                {''Compounding Annual Return'', ''-42.722%''},\r\n                {''Drawdown'', ''0.400%''},\r\n                {''Expectancy'', ''-0.168''},\r\n                {''Net Profit'', ''-0.103%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''67%''},\r\n                {''Win Rate'', ''33%''},\r\n                {''Profit-Loss Ratio'', ''1.50''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="501-522"];
m14_30 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var weeklyUniverseSelectionRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''8''},\r\n                {''Average Win'', ''1.68%''},\r\n                {''Average Loss'', ''-0.77%''},\r\n                {''Compounding Annual Return'', ''23.389%''},\r\n                {''Drawdown'', ''1.900%''},\r\n                {''Expectancy'', ''0.597''},\r\n                {''Net Profit'', ''1.801%''},\r\n                {''Sharpe Ratio'', ''1.884''},\r\n                {''Loss Rate'', ''50%''},\r\n                {''Win Rate'', ''50%''},\r\n                {''Profit-Loss Ratio'', ''2.19''},\r\n                {''Alpha'', ''-0.003''},\r\n                {''Beta'', ''0.421''},\r\n                {''Annual Standard Deviation'', ''0.087''},\r\n                {''Annual Variance'', ''0.008''},\r\n                {''Information Ratio'', ''-2.459''},\r\n                {''Tracking Error'', ''0.094''},\r\n                {''Treynor Ratio'', ''0.391''},\r\n                {''Total Fees'', ''$23.05''},\r\n            }", span="479-500"];
m14_40 [cluster="lambda expression", file="MovingAverageConvergenceDivergence.cs", label="Entry lambda expression", span="578-578"];
m14_5 [cluster="lambda expression", file="MovingAverageConvergenceDivergence.cs", label="new StreamWriter(File.Open(filepath, FileMode.Append, FileAccess.Write, FileShare.Read))", span="36-36"];
m14_4 [cluster="lambda expression", file="MovingAverageConvergenceDivergence.cs", label="Entry lambda expression", span="36-36"];
m14_6 [cluster="lambda expression", file="MovingAverageConvergenceDivergence.cs", label="Exit lambda expression", span="36-36"];
m14_41 [cluster="lambda expression", file="MovingAverageConvergenceDivergence.cs", label="new TestCaseData(x).SetName(x.Language + ''/'' + x.Algorithm)", span="578-578"];
m14_42 [cluster="lambda expression", file="MovingAverageConvergenceDivergence.cs", label="Exit lambda expression", span="578-578"];
m14_12 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=green, community=0, file="MovingAverageConvergenceDivergence.cs", label="0: var basicTemplateOptionsStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.28%''},\r\n                {''Compounding Annual Return'', ''-78.105%''},\r\n                {''Drawdown'', ''0.300%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.280%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="65-86"];
m14_25 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var macdTrendAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''127''},\r\n                {''Average Win'', ''3.65%''},\r\n                {''Average Loss'', ''-2.38%''},\r\n                {''Compounding Annual Return'', ''2.295%''},\r\n                {''Drawdown'', ''31.900%''},\r\n                {''Expectancy'', ''0.209''},\r\n                {''Net Profit'', ''28.377%''},\r\n                {''Sharpe Ratio'', ''0.226''},\r\n                {''Loss Rate'', ''52%''},\r\n                {''Win Rate'', ''48%''},\r\n                {''Profit-Loss Ratio'', ''1.54''},\r\n                {''Alpha'', ''-0.006''},\r\n                {''Beta'', ''0.394''},\r\n                {''Annual Standard Deviation'', ''0.108''},\r\n                {''Annual Variance'', ''0.012''},\r\n                {''Information Ratio'', ''-0.392''},\r\n                {''Tracking Error'', ''0.135''},\r\n                {''Treynor Ratio'', ''0.062''},\r\n                {''Total Fees'', ''$604.31''},\r\n            }", span="364-385"];
m14_26 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var optionSplitRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0.00%''},\r\n                {''Average Loss'', ''0%''},\r\n                {''Compounding Annual Return'', ''0.198%''},\r\n                {''Drawdown'', ''0.500%''},\r\n                {''Expectancy'', ''0''},\r\n                {''Net Profit'', ''0.002%''},\r\n                {''Sharpe Ratio'', ''0.609''},\r\n                {''Loss Rate'', ''0%''},\r\n                {''Win Rate'', ''100%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.013''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''7.935''},\r\n                {''Tracking Error'', ''6.787''},\r\n                {''Treynor Ratio'', ''-4.913''},\r\n                {''Total Fees'', ''$1.25''},\r\n            }", span="387-408"];
m14_27 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", color=red, community=0, file="MovingAverageConvergenceDivergence.cs", label="0: var optionRenameRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''4''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.02%''},\r\n                {''Compounding Annual Return'', ''-0.472%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.006%''},\r\n                {''Sharpe Ratio'', ''-3.235''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.016''},\r\n                {''Beta'', ''-0.001''},\r\n                {''Annual Standard Deviation'', ''0.002''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''10.014''},\r\n                {''Tracking Error'', ''0.877''},\r\n                {''Treynor Ratio'', ''3.955''},\r\n                {''Total Fees'', ''$2.50''},\r\n            }", span="410-431"];
m14_28 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var optionOpenInterestRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.01%''},\r\n                {''Compounding Annual Return'', ''-2.042%''},\r\n                {''Drawdown'', ''0.000%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-0.010%''},\r\n                {''Sharpe Ratio'', ''-11.225''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''-0.036''},\r\n                {''Annual Standard Deviation'', ''0.001''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''-11.225''},\r\n                {''Tracking Error'', ''0.033''},\r\n                {''Treynor Ratio'', ''0.355''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="433-454"];
m14_37 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="587-587"];
m14_45 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MovingAverageConvergenceDivergence.cs", label="Algorithm = algorithm", span="589-589"];
m14_46 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MovingAverageConvergenceDivergence.cs", label="Statistics = statistics", span="590-590"];
m14_47 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MovingAverageConvergenceDivergence.cs", label="Language = language", span="591-591"];
m14_48 [cluster="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters.AlgorithmStatisticsTestParameters(string, System.Collections.Generic.Dictionary<string, string>, QuantConnect.Language)", span="587-587"];
m14_29 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var optionChainConsistencyRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''2''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-3.86%''},\r\n                {''Compounding Annual Return'', ''-100.000%''},\r\n                {''Drawdown'', ''3.900%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-3.855%''},\r\n                {''Sharpe Ratio'', ''0''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''0''},\r\n                {''Beta'', ''0''},\r\n                {''Annual Standard Deviation'', ''0''},\r\n                {''Annual Variance'', ''0''},\r\n                {''Information Ratio'', ''0''},\r\n                {''Tracking Error'', ''0''},\r\n                {''Treynor Ratio'', ''0''},\r\n                {''Total Fees'', ''$0.50''},\r\n            }", span="456-477"];
m14_43 [cluster="TestCaseData.cstr", file="MovingAverageConvergenceDivergence.cs", label="Entry TestCaseData.cstr", span=""];
m14_3 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="MovingAverageConvergenceDivergence.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m14_8 [cluster="System.IO.File.Open(string, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)", file="MovingAverageConvergenceDivergence.cs", label="Entry System.IO.File.Open(string, System.IO.FileMode, System.IO.FileAccess, System.IO.FileShare)", span="0-0"];
m14_0 [cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", span="33-33"];
m14_1 [cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", file="MovingAverageConvergenceDivergence.cs", label="_writer = new Lazy<TextWriter>(\r\n                () => new StreamWriter(File.Open(filepath, FileMode.Append, FileAccess.Write, FileShare.Read))\r\n                )", span="35-37"];
m14_2 [cluster="QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Logging.FileLogHandler.FileLogHandler(string)", span="33-33"];
m14_7 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="MovingAverageConvergenceDivergence.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m14_24 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="var coarseFineFundamentalRegressionAlgorithmStatistics = new Dictionary<string, string>\r\n            {\r\n                {''Total Trades'', ''6''},\r\n                {''Average Win'', ''0%''},\r\n                {''Average Loss'', ''-0.84%''},\r\n                {''Compounding Annual Return'', ''-57.345%''},\r\n                {''Drawdown'', ''9.100%''},\r\n                {''Expectancy'', ''-1''},\r\n                {''Net Profit'', ''-6.763%''},\r\n                {''Sharpe Ratio'', ''-3.025''},\r\n                {''Loss Rate'', ''100%''},\r\n                {''Win Rate'', ''0%''},\r\n                {''Profit-Loss Ratio'', ''0''},\r\n                {''Alpha'', ''-0.754''},\r\n                {''Beta'', ''1.258''},\r\n                {''Annual Standard Deviation'', ''0.217''},\r\n                {''Annual Variance'', ''0.047''},\r\n                {''Information Ratio'', ''-4.525''},\r\n                {''Tracking Error'', ''0.162''},\r\n                {''Treynor Ratio'', ''-0.521''},\r\n                {''Total Fees'', ''$13.92''},\r\n            }", span="341-362"];
m14_44 [cluster="Unk.SetName", file="MovingAverageConvergenceDivergence.cs", label="Entry Unk.SetName", span=""];
m14_10 [cluster="QuantConnect.Logging.FileLogHandler.Error(string)", file="MovingAverageConvergenceDivergence.cs", label="WriteMessage(text, ''ERROR'')", span="43-43"];
m14_11 [cluster="QuantConnect.Logging.FileLogHandler.Error(string)", color=green, community=0, file="MovingAverageConvergenceDivergence.cs", label="0: Exit QuantConnect.Logging.FileLogHandler.Error(string)", span="41-41"];
m14_33 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label=string, span=""];
m14_32 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="QuantConnect.Logging.FileLogHandler", span=""];
m14_34 [cluster="QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", file="MovingAverageConvergenceDivergence.cs", label="Exit QuantConnect.Tests.RegressionTests.GetRegressionTestParameters()", span="40-40"];
m14_38 [cluster="Unk.Select", file="MovingAverageConvergenceDivergence.cs", label="Entry Unk.Select", span=""];
m14_9 [cluster="QuantConnect.Logging.FileLogHandler.Error(string)", file="MovingAverageConvergenceDivergence.cs", label="Entry QuantConnect.Logging.FileLogHandler.Error(string)", span="41-41"];
m14_49 [file="MovingAverageConvergenceDivergence.cs", label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", span=""];
m16_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="Status = AlgorithmStatus.Running", span="91-91"];
m16_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="IsWarmingUp = true", span="94-94"];
m16_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="_startDate = new DateTime(1998, 01, 01)", span="101-101"];
m16_4 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="_endDate = DateTime.Now.AddDays(-1)", span="102-102"];
m16_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="_timeKeeper = new TimeKeeper(_startDate, new[] { TimeZones.NewYork })", span="105-105"];
m16_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(TimeZones.NewYork)", span="107-107"];
m16_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="Settings = new AlgorithmSettings()", span="109-109"];
m16_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="SubscriptionManager = new SubscriptionManager(Settings, _timeKeeper)", span="112-112"];
m16_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="Securities = new SecurityManager(_timeKeeper)", span="114-114"];
m16_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="Transactions = new SecurityTransactionManager(Securities)", span="115-115"];
m16_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="Portfolio = new SecurityPortfolioManager(Securities, Transactions)", span="116-116"];
m16_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="BrokerageModel = new DefaultBrokerageModel()", span="117-117"];
m16_13 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="Notify = new NotificationManager(false)", span="118-118"];
m16_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="_runMode = RunMode.Series", span="121-121"];
m16_15 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="_locked = false", span="124-124"];
m16_16 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="_marketHoursDatabase = MarketHoursDatabase.FromDataFolder()", span="127-127"];
m16_17 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="_symbolPropertiesDatabase = SymbolPropertiesDatabase.FromDataFolder()", span="130-130"];
m16_18 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="UniverseManager = new UniverseManager()", span="133-133"];
m16_19 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="Universe = new UniverseDefinitions(this)", span="134-134"];
m16_20 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="UniverseSettings = new UniverseSettings(Resolution.Minute, 2m, true, false, TimeSpan.FromDays(1))", span="135-135"];
m16_21 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="Schedule = new ScheduleManager(Securities, TimeZone)", span="138-138"];
m16_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="TradeBuilder = new TradeBuilder(FillGroupingMethod.FillToFill, FillMatchingMethod.FIFO)", span="141-141"];
m16_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", color=red, community=0, file="ObjectActivator.cs", label="0: SecurityInitializer = new BrokerageModelSecurityInitializer(new DefaultBrokerageModel(AccountType.Margin),\r\n                                                                        new FuncSecuritySeeder(GetLastKnownPrice))", span="143-144"];
m16_24 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="CandlestickPatterns = new CandlestickPatterns(this)", span="146-146"];
m16_25 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", color=red, community=0, file="ObjectActivator.cs", label="0: TradingCalendar = new TradingCalendar(Securities, _marketHoursDatabase)", span="149-149"];
m16_26 [cluster="QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.QCAlgorithm()", span="89-89"];
m16_205 [cluster="QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", file="ObjectActivator.cs", label="Entry QuantConnect.TimeKeeper.AddTimeZone(DateTimeZone)", span="108-108"];
m16_134 [cluster="System.Type.GetMethods()", file="ObjectActivator.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m16_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="833-833"];
m16_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="ObjectActivator.cs", label=_locked, span="835-835"];
m16_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="ObjectActivator.cs", label="timeZone == null", span="840-840"];
m16_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="ObjectActivator.cs", label="_timeKeeper.AddTimeZone(timeZone)", span="841-841"];
m16_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="ObjectActivator.cs", label="_localTimeKeeper = _timeKeeper.GetLocalTimeKeeper(timeZone)", span="842-842"];
m16_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="ObjectActivator.cs", label="TimeRules.SetDefaultTimeZone(timeZone)", span="845-845"];
m16_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="ObjectActivator.cs", label="throw new Exception(''Algorithm.SetTimeZone(): Cannot change time zone after algorithm running.'');", span="837-837"];
m16_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="ObjectActivator.cs", label="throw new ArgumentNullException(''timeZone'');", span="840-840"];
m16_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(DateTimeZone)", span="833-833"];
m16_424 [cluster="QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", file="ObjectActivator.cs", label="Entry QuantConnect.Data.UniverseSelection.FuturesChainUniverse.FuturesChainUniverse(QuantConnect.Securities.Future.Future, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.ISecurityInitializer)", span="48-48"];
m16_133 [cluster="object.GetType()", file="ObjectActivator.cs", label="Entry object.GetType()", span="0-0"];
m16_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1200-1200"];
m16_326 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="ObjectActivator.cs", label="return _locked;", span="1202-1202"];
m16_327 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLocked()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLocked()", span="1200-1200"];
m16_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="814-814"];
m16_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="ObjectActivator.cs", label="DateTimeZone tz", span="816-816"];
m16_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="ObjectActivator.cs", label="tz = DateTimeZoneProviders.Tzdb[timeZone]", span="819-819"];
m16_189 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="ObjectActivator.cs", label="throw new ArgumentException(string.Format(''TimeZone with id '{0}' was not found. For a complete list of time zones please visit: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones'', timeZone));", span="823-823"];
m16_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="ObjectActivator.cs", label=DateTimeZoneNotFoundException, span="821-821"];
m16_190 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="ObjectActivator.cs", label="SetTimeZone(tz)", span="826-826"];
m16_191 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTimeZone(string)", span="814-814"];
m16_76 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddToUserDefinedUniverse(QuantConnect.Securities.Security)", span="325-325"];
m16_100 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="547-547"];
m16_101 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="ObjectActivator.cs", label=availableDataTypes, span="549-549"];
m16_102 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="ObjectActivator.cs", label="SubscriptionManager.AvailableDataTypes[dataFeed.Key] = dataFeed.Value", span="551-551"];
m16_103 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAvailableDataTypes(System.Collections.Generic.Dictionary<QuantConnect.SecurityType, System.Collections.Generic.List<QuantConnect.TickType>>)", span="547-547"];
m16_206 [cluster="QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", file="ObjectActivator.cs", label="Entry QuantConnect.Scheduling.TimeRules.SetDefaultTimeZone(DateTimeZone)", span="48-48"];
m16_484 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ObjectActivator.cs", label="var security = SecurityManager.CreateSecurity(new List<Type>() { typeof(T) }, Portfolio, SubscriptionManager, marketHoursDbEntry.ExchangeHours, marketHoursDbEntry.DataTimeZone, \r\n                symbolProperties, SecurityInitializer, symbolObject, resolution, fillDataForward, leverage, true, false, true, LiveMode)", span="1575-1576"];
m16_480 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1565-1565"];
m16_481 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ObjectActivator.cs", label="var marketHoursDbEntry = _marketHoursDatabase.GetEntry(Market.USA, symbol, SecurityType.Base, timeZone)", span="1568-1568"];
m16_482 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ObjectActivator.cs", label="var symbolObject = new Symbol(SecurityIdentifier.GenerateBase(symbol, Market.USA), symbol)", span="1571-1571"];
m16_483 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ObjectActivator.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(Market.USA, symbol, SecurityType.Base, CashBook.AccountCurrency)", span="1572-1572"];
m16_485 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ObjectActivator.cs", label="AddToUserDefinedUniverse(security)", span="1578-1578"];
m16_486 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, DateTimeZone, bool, decimal)", span="1565-1565"];
m16_520 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1664-1664"];
m16_521 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="ObjectActivator.cs", label="return SymbolCache.GetSymbol(ticker);", span="1666-1666"];
m16_522 [cluster="QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Symbol(string)", span="1664-1664"];
m16_253 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="987-987"];
m16_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="ObjectActivator.cs", label="SetCash((decimal)startingCash)", span="989-989"];
m16_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(double)", span="987-987"];
m16_423 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="227-227"];
m16_35 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SecurityPortfolioManager(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.SecurityTransactionManager)", span="65-65"];
m16_193 [cluster="string.Format(string, object)", file="ObjectActivator.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_523 [cluster="QuantConnect.SymbolCache.GetSymbol(string)", file="ObjectActivator.cs", label="Entry QuantConnect.SymbolCache.GetSymbol(string)", span="47-47"];
m16_279 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1074-1074"];
m16_280 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="ObjectActivator.cs", label="var end = new DateTime(year, month, day)", span="1078-1078"];
m16_281 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="ObjectActivator.cs", label="end = end.Date.AddDays(1).Subtract(TimeSpan.FromTicks(1))", span="1081-1081"];
m16_282 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="ObjectActivator.cs", label="SetEndDate(end)", span="1083-1083"];
m16_283 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="ObjectActivator.cs", label=Exception, span="1085-1085"];
m16_284 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="ObjectActivator.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1087-1087"];
m16_285 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(int, int, int)", span="1074-1074"];
m16_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="714-714"];
m16_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCallWarning()", span="714-714"];
m16_463 [cluster="Unk.Any", file="ObjectActivator.cs", label="Entry Unk.Any", span=""];
m16_217 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="877-877"];
m16_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="ObjectActivator.cs", label="BrokerageModel = model", span="879-879"];
m16_220 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="ObjectActivator.cs", label="SecurityInitializer = new BrokerageModelSecurityInitializer(model, new FuncSecuritySeeder(GetLastKnownPrice))", span="883-883"];
m16_219 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="ObjectActivator.cs", label="!_userSetSecurityInitializer", span="880-880"];
m16_221 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="ObjectActivator.cs", label="Securities.Values", span="886-886"];
m16_222 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="ObjectActivator.cs", label="var leverage = security.Leverage", span="891-891"];
m16_223 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="ObjectActivator.cs", label="SecurityInitializer.Initialize(security, false)", span="894-894"];
m16_224 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="ObjectActivator.cs", label="security.SetLeverage(leverage)", span="897-897"];
m16_225 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.IBrokerageModel)", span="877-877"];
m16_257 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="998-998"];
m16_258 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="ObjectActivator.cs", label="SetCash((decimal)startingCash)", span="1000-1000"];
m16_259 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(int)", span="998-998"];
m16_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1153-1153"];
m16_309 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label=_liveMode, span="1156-1156"];
m16_311 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="end > DateTime.Now.Date.AddDays(-1)", span="1160-1160"];
m16_314 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="end < _startDate", span="1168-1168"];
m16_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="end = end.RoundDown(TimeSpan.FromDays(1)).AddDays(1).AddTicks(-1)", span="1175-1175"];
m16_310 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="return;", span="1156-1156"];
m16_312 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="end = DateTime.Now.Date.AddDays(-1)", span="1162-1162"];
m16_313 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="_startDate != new DateTime()", span="1166-1166"];
m16_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="throw new Exception(''Please select end date greater than start date.'');", span="1170-1170"];
m16_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="!_locked", span="1178-1178"];
m16_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="_endDate = end", span="1180-1180"];
m16_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="throw new Exception(''Algorithm.SetEndDate(): Cannot change end date after algorithm initialized.'');", span="1184-1184"];
m16_320 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetEndDate(System.DateTime)", span="1153-1153"];
m16_462 [cluster="QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityManager.Remove(QuantConnect.Symbol)", span="173-173"];
m16_227 [cluster="QuantConnect.Securities.Security.SetLeverage(decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.Security.SetLeverage(decimal)", span="639-639"];
m16_264 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(decimal)", span="472-472"];
m16_34 [cluster="QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.SecurityTransactionManager(QuantConnect.Securities.SecurityManager)", span="49-49"];
m16_338 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1227-1227"];
m16_339 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="ObjectActivator.cs", label="TradeBuilder = tradeBuilder", span="1229-1229"];
m16_340 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="ObjectActivator.cs", label="TradeBuilder.SetLiveMode(LiveMode)", span="1230-1230"];
m16_341 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetTradeBuilder(QuantConnect.Interfaces.ITradeBuilder)", span="1227-1227"];
m16_541 [cluster="Unk.CreateSymbol", file="ObjectActivator.cs", label="Entry Unk.CreateSymbol", span=""];
m16_397 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Type>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(System.Collections.Generic.List<System.Type>, QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Securities.SymbolProperties, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool, bool)", span="309-309"];
m16_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="771-771"];
m16_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnAssignmentOrderEvent(QuantConnect.Orders.OrderEvent)", span="771-771"];
m16_512 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1637-1637"];
m16_513 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="ObjectActivator.cs", label="Debug(''Quit(): '' + message)", span="1639-1639"];
m16_514 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="ObjectActivator.cs", label="Status = AlgorithmStatus.Stopped", span="1640-1640"];
m16_515 [cluster="QuantConnect.Algorithm.QCAlgorithm.Quit(string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Quit(string)", span="1637-1637"];
m16_36 [cluster="QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", file="ObjectActivator.cs", label="Entry QuantConnect.Brokerages.DefaultBrokerageModel.DefaultBrokerageModel(QuantConnect.AccountType)", span="70-70"];
m16_441 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1491-1491"];
m16_442 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Security security", span="1493-1493"];
m16_443 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Securities.TryGetValue(symbol, out security)", span="1494-1494"];
m16_447 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="var universe = UniverseManager.Values.OfType<UserDefinedUniverse>().FirstOrDefault(x => x.Members.ContainsKey(symbol))", span="1502-1502"];
m16_449 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="var ret = universe.Remove(symbol)", span="1505-1505"];
m16_450 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="symbol == _benchmarkSymbol", span="1508-1508"];
m16_451 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Securities.Remove(symbol)", span="1510-1510"];
m16_444 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Transactions.CancelOpenOrders(security.Symbol)", span="1497-1497"];
m16_456 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="return false;", span="1521-1521"];
m16_445 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="security.Invested", span="1500-1500"];
m16_446 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Liquidate(security.Symbol)", span="1500-1500"];
m16_448 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="universe != null", span="1503-1503"];
m16_454 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="SubscriptionManager.HasCustomData = universe.Members.Any(x => x.Value.Subscriptions.Any(y => y.IsCustomData))", span="1516-1516"];
m16_455 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="return ret;", span="1518-1518"];
m16_452 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="security = CreateBenchmarkSecurity()", span="1512-1512"];
m16_453 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="AddToUserDefinedUniverse(security)", span="1513-1513"];
m16_457 [cluster="QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.RemoveSecurity(QuantConnect.Symbol)", span="1491-1491"];
m16_398 [cluster="QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityManager.Add(QuantConnect.Securities.Security)", span="82-82"];
m16_81 [cluster="Unk.AddEquity", file="ObjectActivator.cs", label="Entry Unk.AddEquity", span=""];
m16_135 [cluster="Unk.Where", file="ObjectActivator.cs", label="Entry Unk.Where", span=""];
m16_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="722-722"];
m16_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay()", span="722-722"];
m16_287 [cluster="System.DateTime.Subtract(System.TimeSpan)", file="ObjectActivator.cs", label="Entry System.DateTime.Subtract(System.TimeSpan)", span="0-0"];
m16_39 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.FromDataFolder()", span="87-87"];
m16_86 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="519-519"];
m16_87 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="ObjectActivator.cs", label="string value", span="521-521"];
m16_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="ObjectActivator.cs", label="return _parameters.TryGetValue(name, out value) ? value : null;", span="522-522"];
m16_89 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetParameter(string)", span="519-519"];
m16_265 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1026-1026"];
m16_266 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="ObjectActivator.cs", label="!_locked", span="1028-1028"];
m16_267 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="ObjectActivator.cs", label="Portfolio.SetCash(symbol, startingCash, conversionRate)", span="1030-1030"];
m16_268 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="ObjectActivator.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1034-1034"];
m16_269 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(string, decimal, decimal)", span="1026-1026"];
m16_44 [cluster="QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", file="ObjectActivator.cs", label="Entry QuantConnect.Scheduling.ScheduleManager.ScheduleManager(QuantConnect.Securities.SecurityManager, DateTimeZone)", span="51-51"];
m16_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="855-855"];
m16_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="ObjectActivator.cs", label="mode != RunMode.Parallel", span="857-857"];
m16_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="ObjectActivator.cs", label="return;", span="857-857"];
m16_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="ObjectActivator.cs", label="Debug(''Algorithm.SetRunMode(): RunMode-Parallel Type has been deprecated. Series analysis selected instead'')", span="858-858"];
m16_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunMode(QuantConnect.RunMode)", span="855-855"];
m16_396 [cluster="System.Collections.Generic.List<T>.List()", file="ObjectActivator.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_422 [cluster="QuantConnect.Symbol.IsCanonical()", file="ObjectActivator.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="164-164"];
m16_337 [cluster="QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Interfaces.ITradeBuilder.SetLiveMode(bool)", span="30-30"];
m16_474 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1531-1531"];
m16_475 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="ObjectActivator.cs", label="AddData<T>(symbol, resolution, fillDataForward: false, leverage: 1m)", span="1538-1538"];
m16_476 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution)", span="1531-1531"];
m16_471 [cluster="lambda expression", file="ObjectActivator.cs", label="Entry lambda expression", span="1516-1516"];
m16_83 [cluster="lambda expression", file="ObjectActivator.cs", label="Entry lambda expression", span="490-490"];
m16_84 [cluster="lambda expression", file="ObjectActivator.cs", label="x.Value", span="490-490"];
m16_85 [cluster="lambda expression", file="ObjectActivator.cs", label="Exit lambda expression", span="490-490"];
m16_116 [cluster="lambda expression", file="ObjectActivator.cs", label="securityInitializer(security)", span="581-581"];
m16_115 [cluster="lambda expression", file="ObjectActivator.cs", label="Entry lambda expression", span="581-581"];
m16_117 [cluster="lambda expression", file="ObjectActivator.cs", label="Exit lambda expression", span="581-581"];
m16_142 [cluster="lambda expression", file="ObjectActivator.cs", label="Entry lambda expression", span="606-606"];
m16_145 [cluster="lambda expression", file="ObjectActivator.cs", label="Entry lambda expression", span="607-607"];
m16_148 [cluster="lambda expression", file="ObjectActivator.cs", label="Entry lambda expression", span="608-608"];
m16_152 [cluster="lambda expression", file="ObjectActivator.cs", label="Entry lambda expression", span="609-609"];
m16_143 [cluster="lambda expression", file="ObjectActivator.cs", label="x.Name == ''OnData''", span="606-606"];
m16_144 [cluster="lambda expression", file="ObjectActivator.cs", label="Exit lambda expression", span="606-606"];
m16_146 [cluster="lambda expression", file="ObjectActivator.cs", label="x.DeclaringType != typeof(QCAlgorithm)", span="607-607"];
m16_147 [cluster="lambda expression", file="ObjectActivator.cs", label="Exit lambda expression", span="607-607"];
m16_149 [cluster="lambda expression", file="ObjectActivator.cs", label="x.GetParameters().Length == 1", span="608-608"];
m16_150 [cluster="lambda expression", file="ObjectActivator.cs", label="Exit lambda expression", span="608-608"];
m16_153 [cluster="lambda expression", file="ObjectActivator.cs", label="x.GetParameters()[0].ParameterType == typeof (Slice)", span="609-609"];
m16_154 [cluster="lambda expression", file="ObjectActivator.cs", label="Exit lambda expression", span="609-609"];
m16_244 [cluster="lambda expression", file="ObjectActivator.cs", label="x.Key.Value == symbol", span="945-945"];
m16_243 [cluster="lambda expression", file="ObjectActivator.cs", label="Entry lambda expression", span="945-945"];
m16_245 [cluster="lambda expression", file="ObjectActivator.cs", label="Exit lambda expression", span="945-945"];
m16_465 [cluster="lambda expression", file="ObjectActivator.cs", label="x.Members.ContainsKey(symbol)", span="1502-1502"];
m16_464 [cluster="lambda expression", file="ObjectActivator.cs", label="Entry lambda expression", span="1502-1502"];
m16_468 [cluster="lambda expression", file="ObjectActivator.cs", label="Entry lambda expression", span="1516-1516"];
m16_466 [cluster="lambda expression", file="ObjectActivator.cs", label="Exit lambda expression", span="1502-1502"];
m16_469 [cluster="lambda expression", file="ObjectActivator.cs", label="x.Value.Subscriptions.Any(y => y.IsCustomData)", span="1516-1516"];
m16_470 [cluster="lambda expression", file="ObjectActivator.cs", label="Exit lambda expression", span="1516-1516"];
m16_472 [cluster="lambda expression", file="ObjectActivator.cs", label="y.IsCustomData", span="1516-1516"];
m16_473 [cluster="lambda expression", file="ObjectActivator.cs", label="Exit lambda expression", span="1516-1516"];
m16_139 [cluster="Unk.Call", file="ObjectActivator.cs", label="Entry Unk.Call", span=""];
m16_184 [cluster="QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", file="ObjectActivator.cs", label="Entry QuantConnect.TimeKeeper.SetUtcDateTime(System.DateTime)", span="68-68"];
m16_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="795-795"];
m16_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageReconnect()", span="795-795"];
m16_27 [cluster="System.DateTime.DateTime(int, int, int)", file="ObjectActivator.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m16_111 [cluster="QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.FuncSecurityInitializer.FuncSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="31-31"];
m16_460 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ObjectActivator.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m16_542 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1725-1725"];
m16_543 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="ObjectActivator.cs", label="historyProvider == null", span="1727-1727"];
m16_545 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="ObjectActivator.cs", label="HistoryProvider = historyProvider", span="1731-1731"];
m16_544 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="ObjectActivator.cs", label="throw new ArgumentNullException(''Algorithm.SetHistoryProvider(): Historical data provider cannot be null.'');", span="1729-1729"];
m16_546 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetHistoryProvider(QuantConnect.Interfaces.IHistoryProvider)", span="1725-1725"];
m16_216 [cluster="QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="ObjectActivator.cs", label="Entry QuantConnect.Brokerages.BrokerageModel.Create(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="136-136"];
m16_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="927-927"];
m16_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="ObjectActivator.cs", label="var market = securityType == SecurityType.Forex ? Market.FXCM : Market.USA", span="929-929"];
m16_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="ObjectActivator.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(symbol, securityType, market)", span="930-930"];
m16_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.SecurityType, string)", span="927-927"];
m16_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="941-941"];
m16_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="ObjectActivator.cs", label="symbol = symbol.ToUpper()", span="944-944"];
m16_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="ObjectActivator.cs", label="var security = Securities.FirstOrDefault(x => x.Key.Value == symbol).Value", span="945-945"];
m16_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="ObjectActivator.cs", label="_benchmarkSymbol = security == null \r\n                ? QuantConnect.Symbol.Create(symbol, SecurityType.Equity, Market.USA)\r\n                : security.Symbol", span="946-948"];
m16_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(string)", span="941-941"];
m16_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1587-1587"];
m16_489 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="ObjectActivator.cs", label="!_liveMode && (message == '''' || _previousDebugMessage == message)", span="1589-1589"];
m16_491 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="ObjectActivator.cs", label="_debugMessages.Enqueue(message)", span="1590-1590"];
m16_492 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="ObjectActivator.cs", label="_previousDebugMessage = message", span="1591-1591"];
m16_490 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="ObjectActivator.cs", label="return;", span="1589-1589"];
m16_493 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1587-1587"];
m16_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="805-805"];
m16_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="ObjectActivator.cs", label="_timeKeeper.SetUtcDateTime(frontier)", span="807-807"];
m16_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetDateTime(System.DateTime)", span="805-805"];
m16_370 [cluster="QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityManager.CreateSecurity(QuantConnect.Securities.SecurityPortfolioManager, QuantConnect.Data.SubscriptionManager, QuantConnect.Securities.MarketHoursDatabase, QuantConnect.Securities.SymbolPropertiesDatabase, QuantConnect.Securities.ISecurityInitializer, QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal, bool, bool, bool, bool, bool)", span="436-436"];
m16_495 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1600-1600"];
m16_496 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="ObjectActivator.cs", label="!_liveMode && message == ''''", span="1602-1602"];
m16_498 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="ObjectActivator.cs", label="_logMessages.Enqueue(message)", span="1603-1603"];
m16_497 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="ObjectActivator.cs", label="return;", span="1602-1602"];
m16_499 [cluster="QuantConnect.Algorithm.QCAlgorithm.Log(string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Log(string)", span="1600-1600"];
m16_49 [cluster="QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", file="ObjectActivator.cs", label="Entry QuantConnect.TradingCalendar.TradingCalendar(QuantConnect.Securities.SecurityManager, QuantConnect.Securities.MarketHoursDatabase)", span="18-18"];
m16_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="751-751"];
m16_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfAlgorithm()", span="751-751"];
m16_249 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="965-965"];
m16_250 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="ObjectActivator.cs", label="Benchmark = new FuncBenchmark(benchmark)", span="967-967"];
m16_251 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(System.Func<System.DateTime, decimal>)", span="965-965"];
m16_308 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="ObjectActivator.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="576-576"];
m16_48 [cluster="QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.CandlestickPatterns.CandlestickPatterns(QuantConnect.Algorithm.QCAlgorithm)", span="34-34"];
m16_400 [cluster="QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Data.UniverseSelection.OptionChainUniverse.OptionChainUniverse(QuantConnect.Securities.Option.Option, QuantConnect.Data.UniverseSelection.UniverseSettings, QuantConnect.Securities.ISecurityInitializer, bool)", span="49-49"];
m16_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="955-955"];
m16_247 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="ObjectActivator.cs", label="_benchmarkSymbol = symbol", span="957-957"];
m16_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBenchmark(QuantConnect.Symbol)", span="955-955"];
m16_306 [cluster="System.DateTime.DateTime()", file="ObjectActivator.cs", label="Entry System.DateTime.DateTime()", span="0-0"];
m16_78 [cluster="Unk.Select", file="ObjectActivator.cs", label="Entry Unk.Select", span=""];
m16_28 [cluster="System.DateTime.AddDays(double)", file="ObjectActivator.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m16_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="570-570"];
m16_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="ObjectActivator.cs", label="SetSecurityInitializer(new FuncSecurityInitializer(securityInitializer))", span="572-572"];
m16_110 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security, bool>)", span="570-570"];
m16_98 [cluster="QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", file="ObjectActivator.cs", label="Entry QuantConnect.Parameters.ParameterAttribute.ApplyAttributes(System.Collections.Generic.Dictionary<string, string>, object)", span="60-60"];
m16_90 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ObjectActivator.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m16_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="761-761"];
m16_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnOrderEvent(QuantConnect.Orders.OrderEvent)", span="761-761"];
m16_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="707-707"];
m16_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnMarginCall(System.Collections.Generic.List<QuantConnect.Orders.SubmitOrderRequest>)", span="707-707"];
m16_155 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="633-633"];
m16_156 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnSecuritiesChanged(QuantConnect.Data.UniverseSelection.SecurityChanges)", span="633-633"];
m16_38 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="119-119"];
m16_53 [cluster="System.NotImplementedException.NotImplementedException(string)", file="ObjectActivator.cs", label="Entry System.NotImplementedException.NotImplementedException(string)", span="0-0"];
m16_99 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1612-1612"];
m16_500 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="ObjectActivator.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1614-1614"];
m16_502 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="ObjectActivator.cs", label="_errorMessages.Enqueue(message)", span="1615-1615"];
m16_503 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="ObjectActivator.cs", label="_previousErrorMessage = message", span="1616-1616"];
m16_501 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="ObjectActivator.cs", label="return;", span="1614-1614"];
m16_504 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(string)", span="1612-1612"];
m16_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="779-779"];
m16_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageMessage(QuantConnect.Brokerages.BrokerageMessageEvent)", span="779-779"];
m16_80 [cluster="Unk.TryGetValue", file="ObjectActivator.cs", label="Entry Unk.TryGetValue", span=""];
m16_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1096-1096"];
m16_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="ObjectActivator.cs", label="_algorithmId = algorithmId", span="1098-1098"];
m16_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetAlgorithmId(string)", span="1096-1096"];
m16_168 [cluster="QuantConnect.Symbol.ToString()", file="ObjectActivator.cs", label="Entry QuantConnect.Symbol.ToString()", span="350-350"];
m16_345 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1256-1256"];
m16_346 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="ObjectActivator.cs", label="return AddSecurity(securityType, symbol, resolution, null, fillDataForward, leverage, extendedMarketHours);", span="1258-1258"];
m16_347 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, decimal, bool)", span="1256-1256"];
m16_552 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1752-1752"];
m16_553 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="ObjectActivator.cs", label="Status = status", span="1754-1754"];
m16_554 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStatus(QuantConnect.AlgorithmStatus)", span="1752-1752"];
m16_270 [cluster="QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityPortfolioManager.SetCash(string, decimal, decimal)", span="483-483"];
m16_46 [cluster="QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.BrokerageModelSecurityInitializer.BrokerageModelSecurityInitializer(QuantConnect.Brokerages.IBrokerageModel, QuantConnect.Securities.ISecuritySeeder)", span="38-38"];
m16_203 [cluster="System.Exception.Exception(string)", file="ObjectActivator.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m16_31 [cluster="QuantConnect.AlgorithmSettings.AlgorithmSettings()", file="ObjectActivator.cs", label="Entry QuantConnect.AlgorithmSettings.AlgorithmSettings()", span="36-36"];
m16_371 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1323-1323"];
m16_372 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="return AddSecurity<Equity>(SecurityType.Equity, ticker, resolution, market, fillDataForward, leverage, extendedMarketHours);", span="1325-1325"];
m16_373 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddEquity(string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1323-1323"];
m16_271 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1049-1049"];
m16_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="ObjectActivator.cs", label="var start = new DateTime(year, month, day)", span="1053-1053"];
m16_273 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="ObjectActivator.cs", label="start = start.Date", span="1056-1056"];
m16_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="ObjectActivator.cs", label="SetStartDate(start)", span="1058-1058"];
m16_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="ObjectActivator.cs", label=Exception, span="1060-1060"];
m16_276 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="ObjectActivator.cs", label="throw new Exception(''Date Invalid: '' + err.Message);", span="1062-1062"];
m16_277 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(int, int, int)", span="1049-1049"];
m16_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="463-463"];
m16_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="Benchmark == null", span="466-466"];
m16_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="_benchmarkSymbol == null || _benchmarkSymbol == QuantConnect.Symbol.Empty", span="469-469"];
m16_63 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="Securities.Select(x => x.Value).OfType<Option>()", span="490-490"];
m16_57 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="_benchmarkSymbol = QuantConnect.Symbol.Create(''SPY'', SecurityType.Equity, Market.USA)", span="471-471"];
m16_58 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="Security security", span="477-477"];
m16_59 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="!Securities.TryGetValue(_benchmarkSymbol, out security)", span="478-478"];
m16_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="security = CreateBenchmarkSecurity()", span="481-481"];
m16_62 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="Benchmark = new SecurityBenchmark(security)", span="486-486"];
m16_61 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="AddToUserDefinedUniverse(security)", span="482-482"];
m16_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="var underlying = option.Symbol.Underlying", span="492-492"];
m16_67 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="equity = AddEquity(underlying.Value, option.Resolution, underlying.ID.Market, false)", span="497-497"];
m16_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="option.Underlying = equity", span="501-501"];
m16_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="Security equity", span="493-493"];
m16_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="!Securities.TryGetValue(underlying, out equity)", span="494-494"];
m16_69 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="equity.VolatilityModel == VolatilityModel.Null", span="504-504"];
m16_71 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="equity.VolatilityModel = new StandardDeviationOfReturnsVolatilityModel(periods)", span="507-507"];
m16_70 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="int periods = 30", span="506-506"];
m16_72 [cluster="QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.PostInitialize()", span="463-463"];
m16_430 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1448-1448"];
m16_431 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="var option = (Option)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1450-1451"];
m16_432 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="AddToUserDefinedUniverse(option)", span="1453-1453"];
m16_433 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="return option;", span="1455-1455"];
m16_434 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOptionContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1448-1448"];
m16_192 [cluster="System.ArgumentException.ArgumentException(string)", file="ObjectActivator.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m16_141 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="ObjectActivator.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m16_151 [cluster="Unk.GetParameters", file="ObjectActivator.cs", label="Entry Unk.GetParameters", span=""];
m16_82 [cluster="QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.StandardDeviationOfReturnsVolatilityModel.StandardDeviationOfReturnsVolatilityModel(int)", span="67-67"];
m16_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="743-743"];
m16_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="ObjectActivator.cs", label="OnEndOfDay(symbol.ToString())", span="745-745"];
m16_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(QuantConnect.Symbol)", span="743-743"];
m16_43 [cluster="System.TimeSpan.FromDays(double)", file="ObjectActivator.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m16_136 [cluster="Unk.FirstOrDefault", file="ObjectActivator.cs", label="Entry Unk.FirstOrDefault", span=""];
m16_401 [cluster="QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.UniverseManager.Add(QuantConnect.Symbol, QuantConnect.Data.UniverseSelection.Universe)", span="161-161"];
m16_75 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1698-1698"];
m16_534 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="ObjectActivator.cs", label="Resolution resolution", span="1701-1701"];
m16_535 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="ObjectActivator.cs", label=_liveMode, span="1702-1702"];
m16_536 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="ObjectActivator.cs", label="resolution = Resolution.Second", span="1704-1704"];
m16_537 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="ObjectActivator.cs", label="var hasNonAddSecurityUniverses = (\r\n                    from kvp in UniverseManager\r\n                    let config = kvp.Value.Configuration\r\n                    let symbol = UserDefinedUniverse.CreateSymbol(config.SecurityType, config.Market)\r\n                    where config.Symbol != symbol\r\n                    select kvp).Any()", span="1709-1714"];
m16_538 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="ObjectActivator.cs", label="resolution = hasNonAddSecurityUniverses ? UniverseSettings.Resolution : Resolution.Daily", span="1716-1716"];
m16_539 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="ObjectActivator.cs", label="return SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer, _benchmarkSymbol, resolution, true, 1m, false, true, false, LiveMode);", span="1718-1718"];
m16_540 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBenchmarkSecurity()", span="1698-1698"];
m16_77 [cluster="QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", file="ObjectActivator.cs", label="Entry QuantConnect.Benchmarks.SecurityBenchmark.SecurityBenchmark(QuantConnect.Securities.Security)", span="31-31"];
m16_328 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1208-1208"];
m16_329 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="ObjectActivator.cs", label="!_locked", span="1210-1210"];
m16_330 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="ObjectActivator.cs", label="_liveMode = live", span="1212-1212"];
m16_331 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="ObjectActivator.cs", label="Notify = new NotificationManager(live)", span="1213-1213"];
m16_332 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="ObjectActivator.cs", label="TradeBuilder.SetLiveMode(live)", span="1214-1214"];
m16_333 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="ObjectActivator.cs", label=live, span="1216-1216"];
m16_334 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="ObjectActivator.cs", label="_startDate = DateTime.Today", span="1218-1218"];
m16_335 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="ObjectActivator.cs", label="_endDate = QuantConnect.Time.EndOfTime", span="1219-1219"];
m16_336 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLiveMode(bool)", span="1208-1208"];
m16_91 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="529-529"];
m16_92 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="ObjectActivator.cs", label="_parameters = parameters.ToDictionary()", span="532-532"];
m16_93 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="ObjectActivator.cs", label="ParameterAttribute.ApplyAttributes(parameters, this)", span="535-535"];
m16_94 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="ObjectActivator.cs", label=Exception, span="537-537"];
m16_95 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="ObjectActivator.cs", label="Error(''Error applying parameter values: '' + err.Message)", span="539-539"];
m16_96 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetParameters(System.Collections.Generic.Dictionary<string, string>)", span="529-529"];
m16_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="867-867"];
m16_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="ObjectActivator.cs", label="SetBrokerageModel(Brokerages.BrokerageModel.Create(brokerage, accountType))", span="869-869"];
m16_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageModel(QuantConnect.Brokerages.BrokerageName, QuantConnect.AccountType)", span="867-867"];
m16_286 [cluster="System.TimeSpan.FromTicks(long)", file="ObjectActivator.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m16_138 [cluster="System.Linq.Expressions.Expression.Parameter(System.Type, string)", file="ObjectActivator.cs", label="Entry System.Linq.Expressions.Expression.Parameter(System.Type, string)", span="0-0"];
m16_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="453-453"];
m16_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="ObjectActivator.cs", label="throw new NotImplementedException(''Please override the Initialize() method'');", span="456-456"];
m16_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.Initialize()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Initialize()", span="453-453"];
m16_374 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1672-1672"];
m16_524 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="market == null", span="1675-1675"];
m16_525 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1677-1677"];
m16_526 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1679-1679"];
m16_528 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="!SymbolCache.TryGetSymbol(ticker, out symbol)", span="1684-1684"];
m16_529 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="symbol = QuantConnect.Symbol.Create(ticker, securityType, market)", span="1686-1686"];
m16_530 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1689-1690"];
m16_527 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="Symbol symbol", span="1683-1683"];
m16_531 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="AddToUserDefinedUniverse(security)", span="1691-1691"];
m16_532 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="return (T)security;", span="1692-1692"];
m16_533 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity<T>(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1672-1672"];
m16_140 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="ObjectActivator.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m16_487 [cluster="QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", file="ObjectActivator.cs", label="Entry QuantConnect.Symbol.Symbol(QuantConnect.SecurityIdentifier, string)", span="217-217"];
m16_395 [cluster="QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SymbolPropertiesDatabase.GetSymbolProperties(string, string, QuantConnect.SecurityType, string)", span="46-46"];
m16_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="559-559"];
m16_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="ObjectActivator.cs", label="_userSetSecurityInitializer = true", span="562-562"];
m16_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="ObjectActivator.cs", label="SecurityInitializer = securityInitializer", span="563-563"];
m16_107 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(QuantConnect.Securities.ISecurityInitializer)", span="559-559"];
m16_256 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1008-1008"];
m16_260 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="ObjectActivator.cs", label="!_locked", span="1010-1010"];
m16_261 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="ObjectActivator.cs", label="Portfolio.SetCash(startingCash)", span="1012-1012"];
m16_262 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="ObjectActivator.cs", label="throw new Exception(''Algorithm.SetCash(): Cannot change cash available after algorithm initialized.'');", span="1016-1016"];
m16_263 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetCash(decimal)", span="1008-1008"];
m16_342 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1241-1241"];
m16_343 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="ObjectActivator.cs", label="return AddSecurity(securityType, symbol, resolution, fillDataForward, 0, extendedMarketHours);", span="1243-1243"];
m16_344 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, bool, bool)", span="1241-1241"];
m16_488 [cluster="QuantConnect.SecurityIdentifier.GenerateBase(string, string)", file="ObjectActivator.cs", label="Entry QuantConnect.SecurityIdentifier.GenerateBase(string, string)", span="373-373"];
m16_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="787-787"];
m16_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnBrokerageDisconnect()", span="787-787"];
m16_40 [cluster="QuantConnect.Securities.UniverseManager.UniverseManager()", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.UniverseManager.UniverseManager()", span="40-40"];
m16_119 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="598-598"];
m16_120 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="!_checkedForOnDataSlice", span="601-601"];
m16_131 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="_onDataSlice(slice)", span="625-625"];
m16_121 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="_checkedForOnDataSlice = true", span="603-603"];
m16_130 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="_onDataSlice != null", span="623-623"];
m16_122 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="var method = GetType().GetMethods()\r\n                    .Where(x => x.Name == ''OnData'')\r\n                    .Where(x => x.DeclaringType != typeof(QCAlgorithm))\r\n                    .Where(x => x.GetParameters().Length == 1)\r\n                    .FirstOrDefault(x => x.GetParameters()[0].ParameterType == typeof (Slice))", span="605-609"];
m16_123 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="method == null", span="611-611"];
m16_127 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="var call = Expression.Call(self, method, parameter)", span="618-618"];
m16_124 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="return;", span="613-613"];
m16_125 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="var self = Expression.Constant(this)", span="616-616"];
m16_126 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="var parameter = Expression.Parameter(typeof (Slice), ''data'')", span="617-617"];
m16_128 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="var lambda = Expression.Lambda<Action<Slice>>(call, parameter)", span="619-619"];
m16_129 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="_onDataSlice = lambda.Compile()", span="620-620"];
m16_132 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnData(QuantConnect.Data.Slice)", span="598-598"];
m16_384 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var canonicalSecurity = (Option) SecurityManager.CreateSecurity(new List<Type>() { typeof(ZipEntryName) }, Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1356-1358"];
m16_366 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1337-1337"];
m16_375 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="market == null", span="1339-1339"];
m16_379 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var alias = ''?'' + underlying", span="1348-1348"];
m16_381 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(underlying, SecurityType.Option, market, alias)", span="1351-1351"];
m16_382 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, underlying, SecurityType.Option)", span="1354-1354"];
m16_383 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, underlying, SecurityType.Option, CashBook.AccountCurrency)", span="1355-1355"];
m16_389 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1366-1366"];
m16_376 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Option, out market)", span="1341-1341"];
m16_378 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Symbol canonicalSymbol", span="1347-1347"];
m16_377 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Option);", span="1343-1343"];
m16_380 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1349-1349"];
m16_388 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1364-1364"];
m16_391 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1368-1368"];
m16_385 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="canonicalSecurity.IsTradable = false", span="1359-1359"];
m16_386 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Securities.Add(canonicalSecurity)", span="1360-1360"];
m16_390 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="universe = new OptionChainUniverse(canonicalSecurity, settings, SecurityInitializer, LiveMode)", span="1367-1367"];
m16_392 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="return canonicalSecurity;", span="1371-1371"];
m16_387 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Universe universe", span="1363-1363"];
m16_393 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddOption(string, QuantConnect.Resolution, string, bool, decimal)", span="1337-1337"];
m16_399 [cluster="QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.UniverseManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Data.UniverseSelection.Universe)", span="194-194"];
m16_467 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ObjectActivator.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m16_368 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ObjectActivator.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m16_547 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1738-1738"];
m16_548 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="ObjectActivator.cs", label="exception == null", span="1740-1740"];
m16_550 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="ObjectActivator.cs", label="RunTimeError = exception", span="1745-1745"];
m16_549 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="ObjectActivator.cs", label="throw new ArgumentNullException(''Algorithm.SetRunTimeError(): Algorithm.RunTimeError cannot be set to null.'');", span="1742-1742"];
m16_551 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetRunTimeError(System.Exception)", span="1738-1738"];
m16_97 [cluster="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", file="ObjectActivator.cs", label="Entry System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<K, V>>.ToDictionary<K, V>()", span="46-46"];
m16_369 [cluster="QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", file="ObjectActivator.cs", label="Entry QuantConnect.SymbolCache.TryGetSymbol(string, out QuantConnect.Symbol)", span="60-60"];
m16_425 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1430-1430"];
m16_426 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="var future = (Future)SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                symbol, resolution, fillDataForward, leverage, false, false, false, LiveMode)", span="1432-1433"];
m16_427 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="AddToUserDefinedUniverse(future)", span="1435-1435"];
m16_428 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="return future;", span="1437-1437"];
m16_429 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFutureContract(QuantConnect.Symbol, QuantConnect.Resolution, bool, decimal)", span="1430-1430"];
m16_226 [cluster="QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.ISecurityInitializer.Initialize(QuantConnect.Securities.Security, bool)", span="28-28"];
m16_41 [cluster="QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.UniverseDefinitions.UniverseDefinitions(QuantConnect.Algorithm.QCAlgorithm)", span="45-45"];
m16_412 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var canonicalSecurity = (Future)SecurityManager.CreateSecurity(types, Portfolio, SubscriptionManager,\r\n                marketHoursEntry.ExchangeHours, marketHoursEntry.DataTimeZone, symbolProperties, SecurityInitializer, canonicalSymbol, resolution,\r\n                fillDataForward, leverage, false, false, false, LiveMode, true, false)", span="1404-1406"];
m16_367 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1383-1383"];
m16_402 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="market == null", span="1385-1385"];
m16_406 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var alias = ''/'' + symbol", span="1394-1394"];
m16_408 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="canonicalSymbol = QuantConnect.Symbol.Create(symbol, SecurityType.Future, market, alias)", span="1397-1397"];
m16_409 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var marketHoursEntry = _marketHoursDatabase.GetEntry(market, symbol, SecurityType.Future)", span="1400-1400"];
m16_410 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var symbolProperties = _symbolPropertiesDatabase.GetSymbolProperties(market, symbol, SecurityType.Future, CashBook.AccountCurrency)", span="1401-1401"];
m16_411 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var types = SubscriptionManager.LookupSubscriptionConfigDataTypes(SecurityType.Future, resolution, canonicalSymbol.IsCanonical())", span="1402-1402"];
m16_417 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="var settings = new UniverseSettings(resolution, leverage, true, false, TimeSpan.Zero)", span="1414-1414"];
m16_403 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(SecurityType.Future, out market)", span="1387-1387"];
m16_405 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Symbol canonicalSymbol", span="1393-1393"];
m16_404 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="throw new Exception(''No default market set for security type: '' + SecurityType.Future);", span="1389-1389"];
m16_407 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="!SymbolCache.TryGetSymbol(alias, out canonicalSymbol)", span="1395-1395"];
m16_416 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="!UniverseManager.TryGetValue(canonicalSymbol, out universe)", span="1412-1412"];
m16_419 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="UniverseManager.Add(canonicalSymbol, universe)", span="1416-1416"];
m16_413 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="canonicalSecurity.IsTradable = false", span="1407-1407"];
m16_414 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Securities.Add(canonicalSecurity)", span="1408-1408"];
m16_418 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="universe = new FuturesChainUniverse(canonicalSecurity, settings, SubscriptionManager, SecurityInitializer)", span="1415-1415"];
m16_420 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="return canonicalSecurity;", span="1419-1419"];
m16_415 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Universe universe", span="1411-1411"];
m16_421 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddFuture(string, QuantConnect.Resolution, string, bool, decimal)", span="1383-1383"];
m16_45 [cluster="QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", file="ObjectActivator.cs", label="Entry QuantConnect.Statistics.TradeBuilder.TradeBuilder(QuantConnect.Statistics.FillGroupingMethod, QuantConnect.Statistics.FillMatchingMethod)", span="61-61"];
m16_47 [cluster="QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.FuncSecuritySeeder.FuncSecuritySeeder(System.Func<QuantConnect.Securities.Security, QuantConnect.Data.BaseData>)", span="33-33"];
m16_42 [cluster="QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", file="ObjectActivator.cs", label="Entry QuantConnect.Data.UniverseSelection.UniverseSettings.UniverseSettings(QuantConnect.Resolution, decimal, bool, bool, System.TimeSpan)", span="59-59"];
m16_252 [cluster="QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", file="ObjectActivator.cs", label="Entry QuantConnect.Benchmarks.FuncBenchmark.FuncBenchmark(System.Func<System.DateTime, decimal>)", span="30-30"];
m16_394 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, string, QuantConnect.SecurityType, DateTimeZone)", span="163-163"];
m16_321 [cluster="System.DateTime.AddTicks(long)", file="ObjectActivator.cs", label="Entry System.DateTime.AddTicks(long)", span="0-0"];
m16_348 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1271-1271"];
m16_349 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="securityType == SecurityType.Option", span="1274-1274"];
m16_350 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="return AddOption(symbol, resolution, market, fillDataForward, leverage);", span="1276-1276"];
m16_351 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="securityType == SecurityType.Future", span="1279-1279"];
m16_352 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="return AddFuture(symbol, resolution, market, fillDataForward, leverage);", span="1281-1281"];
m16_353 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="market == null", span="1286-1286"];
m16_354 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="!BrokerageModel.DefaultMarkets.TryGetValue(securityType, out market)", span="1288-1288"];
m16_355 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="throw new Exception(''No default market set for security type: '' + securityType);", span="1290-1290"];
m16_357 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="!SymbolCache.TryGetSymbol(symbol, out symbolObject)", span="1295-1295"];
m16_358 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="symbolObject = QuantConnect.Symbol.Create(symbol, securityType, market)", span="1297-1297"];
m16_359 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="var security = SecurityManager.CreateSecurity(Portfolio, SubscriptionManager, _marketHoursDatabase, _symbolPropertiesDatabase, SecurityInitializer,\r\n                    symbolObject, resolution, fillDataForward, leverage, extendedMarketHours, false, false, LiveMode)", span="1300-1301"];
m16_356 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="Symbol symbolObject", span="1294-1294"];
m16_360 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="AddToUserDefinedUniverse(security)", span="1303-1303"];
m16_361 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="return security;", span="1304-1304"];
m16_362 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label=Exception, span="1306-1306"];
m16_363 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="Error(''Algorithm.AddSecurity(): '' + err)", span="1308-1308"];
m16_364 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="return null;", span="1309-1309"];
m16_365 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddSecurity(QuantConnect.SecurityType, string, QuantConnect.Resolution, string, bool, decimal, bool)", span="1271-1271"];
m16_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="735-735"];
m16_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.OnEndOfDay(string)", span="735-735"];
m16_33 [cluster="QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityManager.SecurityManager(QuantConnect.TimeKeeper)", span="56-56"];
m16_477 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1550-1550"];
m16_478 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="AddData<T>(symbol, resolution, TimeZones.NewYork, fillDataForward, leverage)", span="1553-1553"];
m16_479 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddData<T>(string, QuantConnect.Resolution, bool, decimal)", span="1550-1550"];
m16_204 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ObjectActivator.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m16_307 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="ObjectActivator.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="475-475"];
m16_435 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1467-1467"];
m16_436 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="return AddSecurity<Forex>(SecurityType.Forex, ticker, resolution, market, fillDataForward, leverage, false);", span="1469-1469"];
m16_437 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddForex(string, QuantConnect.Resolution, string, bool, decimal)", span="1467-1467"];
m16_73 [cluster="QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", file="ObjectActivator.cs", label="Entry QuantConnect.Symbol.Create(string, QuantConnect.SecurityType, string, string)", span="45-45"];
m16_516 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1649-1649"];
m16_517 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="ObjectActivator.cs", label=quit, span="1651-1651"];
m16_518 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="ObjectActivator.cs", label="Status = AlgorithmStatus.Stopped", span="1653-1653"];
m16_519 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetQuit(bool)", span="1649-1649"];
m16_79 [cluster="Unk.>", file="ObjectActivator.cs", label="Entry Unk.>", span=""];
m16_30 [cluster="QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", file="ObjectActivator.cs", label="Entry QuantConnect.TimeKeeper.GetLocalTimeKeeper(DateTimeZone)", span="93-93"];
m16_438 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1481-1481"];
m16_439 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="return AddSecurity<Cfd>(SecurityType.Cfd, ticker, resolution, market, fillDataForward, leverage, false);", span="1483-1483"];
m16_440 [cluster="QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.AddCfd(string, QuantConnect.Resolution, string, bool, decimal)", span="1481-1481"];
m16_242 [cluster="string.ToUpper()", file="ObjectActivator.cs", label="Entry string.ToUpper()", span="0-0"];
m16_112 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="579-579"];
m16_113 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="ObjectActivator.cs", label="SetSecurityInitializer(new FuncSecurityInitializer((security, seedSecurity) => securityInitializer(security)))", span="581-581"];
m16_114 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetSecurityInitializer(System.Action<QuantConnect.Securities.Security>)", span="579-579"];
m16_32 [cluster="QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", file="ObjectActivator.cs", label="Entry QuantConnect.Data.SubscriptionManager.SubscriptionManager(QuantConnect.AlgorithmSettings, QuantConnect.TimeKeeper)", span="57-57"];
m16_29 [cluster="QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", file="ObjectActivator.cs", label="Entry QuantConnect.TimeKeeper.TimeKeeper(System.DateTime, params DateTimeZone[])", span="46-46"];
m16_74 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="200-200"];
m16_228 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="909-909"];
m16_229 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="ObjectActivator.cs", label="handler == null", span="911-911"];
m16_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="ObjectActivator.cs", label="BrokerageMessageHandler = handler", span="916-916"];
m16_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="ObjectActivator.cs", label="throw new ArgumentNullException(''handler'');", span="913-913"];
m16_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetBrokerageMessageHandler(QuantConnect.Brokerages.IBrokerageMessageHandler)", span="909-909"];
m16_278 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1107-1107"];
m16_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label=_liveMode, span="1110-1110"];
m16_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="start < (new DateTime(1900, 01, 01))", span="1114-1114"];
m16_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="start > _endDate", span="1122-1122"];
m16_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="start = start.RoundDown(TimeSpan.FromDays(1))", span="1129-1129"];
m16_293 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="return;", span="1110-1110"];
m16_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="throw new Exception(''Please select a start date after January 1st, 1900.'');", span="1116-1116"];
m16_296 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="_endDate != new DateTime()", span="1120-1120"];
m16_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="throw new Exception(''Please select start date less than end date.'');", span="1124-1124"];
m16_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="!_locked", span="1132-1132"];
m16_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="_startDate = start", span="1137-1137"];
m16_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="!LiveMode", span="1135-1135"];
m16_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="throw new Exception(''Algorithm.SetStartDate(): Cannot change start date after algorithm initialized.'');", span="1143-1143"];
m16_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="SetDateTime(_startDate.ConvertToUtc(TimeZone))", span="1138-1138"];
m16_305 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetStartDate(System.DateTime)", span="1107-1107"];
m16_459 [cluster="QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Liquidate(QuantConnect.Symbol, string)", span="760-760"];
m16_505 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1625-1625"];
m16_506 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="ObjectActivator.cs", label="var message = error.Message", span="1627-1627"];
m16_507 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="ObjectActivator.cs", label="!_liveMode && (message == '''' || _previousErrorMessage == message)", span="1628-1628"];
m16_509 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="ObjectActivator.cs", label="_errorMessages.Enqueue(message)", span="1629-1629"];
m16_510 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="ObjectActivator.cs", label="_previousErrorMessage = message", span="1630-1630"];
m16_508 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="ObjectActivator.cs", label="return;", span="1628-1628"];
m16_511 [cluster="QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.Error(System.Exception)", span="1625-1625"];
m16_118 [cluster="System.Action<T>.Invoke(T)", file="ObjectActivator.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m16_494 [cluster="System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", file="ObjectActivator.cs", label="Entry System.Collections.Concurrent.ConcurrentQueue<T>.Enqueue(T)", span="0-0"];
m16_137 [cluster="System.Linq.Expressions.Expression.Constant(object)", file="ObjectActivator.cs", label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0"];
m16_37 [cluster="QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", file="ObjectActivator.cs", label="Entry QuantConnect.Notifications.NotificationManager.NotificationManager(bool)", span="41-41"];
m16_458 [cluster="QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", file="ObjectActivator.cs", label="Entry QuantConnect.Securities.SecurityTransactionManager.CancelOpenOrders(QuantConnect.Symbol)", span="174-174"];
m16_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="ObjectActivator.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1192-1192"];
m16_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="ObjectActivator.cs", label="_locked = true", span="1194-1194"];
m16_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetLocked()", file="ObjectActivator.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetLocked()", span="1192-1192"];
m16_461 [cluster="Unk.Remove", file="ObjectActivator.cs", label="Entry Unk.Remove", span=""];
m16_555 [file="ObjectActivator.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m16_556 [file="ObjectActivator.cs", label="System.Action<QuantConnect.Securities.Security>", span=""];
m16_557 [file="ObjectActivator.cs", label=string, span=""];
m16_558 [file="ObjectActivator.cs", label="QuantConnect.Symbol", span=""];
m18_61 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", span="249-249"];
m18_62 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="var day = from.Date", span="251-251"];
m18_63 [cluster="QuantConnect.Time.EachDay(System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="day.Date <= thru.Date", span="251-251"];
m18_30 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="SetWarmup(barCount, resolution)", span="136-136"];
m18_293 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(QuantConnect.Data.SubscriptionDataConfig, QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime)", span="139-139"];
m18_223 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetDataTimeZone(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="87-87"];
m18_0 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", span="51-51"];
m18_1 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="_warmupBarCount = null", span="53-53"];
m18_2 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="_warmupTimeSpan = timeSpan", span="54-54"];
m18_3 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan)", file="QCAlgorithm.History.cs", label="_warmupResolution = null", span="55-55"];
m18_152 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="477-477"];
m18_192 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="return History(new[] { request }).Memoize();", span="479-479"];
m18_193 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Data.HistoryRequest)", span="477-477"];
m18_314 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(System.Type, QuantConnect.Symbol, QuantConnect.Resolution, DateTimeZone, DateTimeZone, bool, bool, bool, bool, QuantConnect.TickType?, bool, QuantConnect.DataNormalizationMode)", span="157-157"];
m18_121 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="406-406"];
m18_125 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="int i = 0", span="414-414"];
m18_127 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="var previous = current", span="416-416"];
m18_129 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="exchange.IsOpen(current, previous, extendedMarketHours)", span="418-418"];
m18_131 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="return current;", span="423-423"];
m18_132 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="406-406"];
m18_133 [cluster="System.ArgumentException.ArgumentException(string, string)", file="QCAlgorithm.History.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m18_124 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="var current = end.RoundDown(barSize)", span="413-413"];
m18_126 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="i < barCount", span="414-414"];
m18_128 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="current = current - barSize", span="417-417"];
m18_130 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="i++", span="420-420"];
m18_123 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''barSize must be greater than TimeSpan.Zero'', ''barSize'');", span="410-410"];
m18_122 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="barSize <= TimeSpan.Zero", span="408-408"];
m18_134 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="476-476"];
m18_68 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="242-242"];
m18_69 [cluster="Unk.Select", file="QCAlgorithm.History.cs", label="Entry Unk.Select", span=""];
m18_72 [cluster="Unk.>", file="QCAlgorithm.History.cs", label="Entry Unk.>", span=""];
m18_70 [cluster="Unk.Where", file="QCAlgorithm.History.cs", label="Entry Unk.Where", span=""];
m18_71 [cluster="Unk.History", file="QCAlgorithm.History.cs", label="Entry Unk.History", span=""];
m18_73 [cluster="Unk.Memoize", file="QCAlgorithm.History.cs", label="Entry Unk.Memoize", span=""];
m18_74 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="245-253"];
m18_23 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", span="110-110"];
m18_247 [cluster="Unk.ToList", file="QCAlgorithm.History.cs", label="Entry Unk.ToList", span=""];
m18_24 [cluster="QuantConnect.Time.TimeStamp()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.TimeStamp()", span="166-166"];
m18_25 [cluster="QuantConnect.Time.TimeStamp()", file="QCAlgorithm.History.cs", label="return DateTimeToUnixTimeStamp(DateTime.UtcNow);", span="168-168"];
m18_26 [cluster="QuantConnect.Time.TimeStamp()", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Time.TimeStamp()", span="166-166"];
m18_27 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="174-174"];
m18_28 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.History.cs", label="return TimeSpan.FromTicks(Math.Max(one.Ticks, two.Ticks));", span="176-176"];
m18_306 [cluster="System.Type.IsAssignableFrom(System.Type)", file="QCAlgorithm.History.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m18_109 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="symbol == null", span="305-305"];
m18_307 [cluster="QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.SubscriptionManager.LookupSubscriptionConfigDataTypes(QuantConnect.SecurityType, QuantConnect.Resolution, bool)", span="244-244"];
m18_227 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m18_191 [cluster="System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertTo(DateTimeZone, DateTimeZone, bool)", span="586-586"];
m18_100 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="270-276"];
m18_48 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.History.cs", label="DateTime.TryParseExact(dateToParse.Substring(0, 19), DateFormat.JsonFormat, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="221-221"];
m18_228 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m18_47 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.History.cs", label="return date;", span="219-219"];
m18_254 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var requests = new List<HistoryRequest>();\r\n\r\n                foreach (var config in GetMatchingSubscriptions(x, typeof(BaseData)))\r\n                {\r\n                    var request = CreateHistoryRequest(config, startAlgoTz, endAlgoTz, resolution);\r\n\r\n                    // apply overrides\r\n                    var res = GetResolution(x, resolution);\r\n                    if (fillForward.HasValue) request.FillForwardResolution = fillForward.Value ? res : null;\r\n                    if (extendedMarket.HasValue) request.IncludeExtendedMarketHours = extendedMarket.Value;\r\n\r\n                    requests.Add(request);\r\n                }\r\n\r\n                return requests;\r\n            });", span="600-617"];
m18_255 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateDateRangeHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="598-598"];
m18_86 [cluster="QuantConnect.Resolution.ToTimeSpan()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Resolution.ToTimeSpan()", span="723-723"];
m18_64 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="267-267"];
m18_65 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="242-242"];
m18_66 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requests = symbols.Select(x =>\r\n            {\r\n                var config = GetMatchingSubscription(x, typeof(T));\r\n                if (config == null) return null;\r\n\r\n                var res = GetResolution(x, resolution);\r\n                var start = GetStartTimeAlgoTz(x, periods, res).ConvertToUtc(TimeZone);\r\n                return CreateHistoryRequest(config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), res);\r\n            })", span="245-253"];
m18_60 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(System.TimeSpan, QuantConnect.Resolution?)", span="211-211"];
m18_273 [cluster="System.Collections.Generic.List<T>.Add(T)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m18_256 [cluster="Unk.SelectMany", file="QCAlgorithm.History.cs", label="Entry Unk.SelectMany", span=""];
m18_92 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="var currentInTimeZoneEod = currentInTimeZone.Date.AddDays(1)", span="327-327"];
m18_93 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone) > thru", span="330-330"];
m18_94 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="currentInTimeZoneEod = thru.ConvertTo(exchange.TimeZone, timeZone)", span="332-332"];
m18_229 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m18_217 [cluster="System.Math.Max(int, int)", file="QCAlgorithm.History.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m18_14 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="SetWarmup(timeSpan, resolution)", span="86-86"];
m18_79 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(x, periods, res).ConvertToUtc(TimeZone)", span="251-251"];
m18_80 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return CreateHistoryRequest(config, start, UtcTime.RoundDown(res.Value.ToTimeSpan()), res);", span="252-252"];
m18_83 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", span="690-690"];
m18_81 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="245-253"];
m18_82 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Symbol, System.Type)", span="654-654"];
m18_84 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="457-457"];
m18_85 [cluster="System.DateTime.ConvertToUtc(DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.ConvertToUtc(DateTimeZone, bool)", span="617-617"];
m18_320 [cluster="QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.GetEntry(string, QuantConnect.Symbol, QuantConnect.SecurityType)", span="202-202"];
m18_4 [cluster="System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime, System.TimeZoneInfo)", file="QCAlgorithm.History.cs", label="Entry System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime, System.TimeZoneInfo)", span="0-0"];
m18_101 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="278-278"];
m18_32 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", span="142-142"];
m18_33 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="IsWarmingUp = false", span="144-144"];
m18_34 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetFinishedWarmingUp()", file="QCAlgorithm.History.cs", label="OnWarmupFinished()", span="147-147"];
m18_226 [cluster="System.Collections.Generic.List<T>.List()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m18_225 [cluster="QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetCommonTickTypeForCommonDataTypes(System.Type, QuantConnect.SecurityType)", span="750-750"];
m18_216 [cluster="QuantConnect.Symbol.IsCanonical()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.IsCanonical()", span="168-168"];
m18_308 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="666-666"];
m18_250 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="572-572"];
m18_251 [cluster="lambda expression", color=green, community=0, file="QCAlgorithm.History.cs", label="0: !UniverseManager.ContainsKey(hr.Symbol)", span="572-572"];
m18_252 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="572-572"];
m18_75 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", span="352-352"];
m18_78 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="282-282"];
m18_96 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="exchange.IsOpen(currentExchangeTime, currentExchangeTimeEod, includeExtendedMarketHours)", span="337-337"];
m18_99 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", span="319-319"];
m18_262 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="GetMatchingSubscriptions(x, typeof(BaseData))", span="604-604"];
m18_263 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var request = CreateHistoryRequest(config, startAlgoTz, endAlgoTz, resolution)", span="606-606"];
m18_264 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var res = GetResolution(x, resolution)", span="609-609"];
m18_280 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var res = GetResolution(x, resolution)", span="627-627"];
m18_281 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var start = GetStartTimeAlgoTz(x, periods, res)", span="628-628"];
m18_282 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var end = Time.RoundDown(res.Value.ToTimeSpan())", span="629-629"];
m18_283 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(x, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(config, start, end, resolution));", span="631-632"];
m18_286 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="CreateHistoryRequest(config, start, end, resolution)", span="632-632"];
m18_312 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="new SubscriptionDataConfig(x.Item1, symbol, resolution, timeZone, timeZone, UniverseSettings.FillForward, UniverseSettings.ExtendedMarketHours, false, false, x.Item2)", span="675-675"];
m18_76 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", span="282-282"];
m18_89 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="thru = thru.Date.AddDays(1)", span="322-322"];
m18_95 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="var currentExchangeTimeEod = currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone)", span="336-336"];
m18_97 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="yield return currentInTimeZone.Date;", span="339-339"];
m18_139 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="339-339"];
m18_154 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="365-365"];
m18_257 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="600-600"];
m18_260 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="600-617"];
m18_261 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="var requests = new List<HistoryRequest>()", span="602-602"];
m18_269 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="requests.Add(request)", span="613-613"];
m18_270 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="return requests;", span="616-616"];
m18_266 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="request.FillForwardResolution = fillForward.Value ? res : null", span="610-610"];
m18_268 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="request.IncludeExtendedMarketHours = extendedMarket.Value", span="611-611"];
m18_265 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="fillForward.HasValue", span="610-610"];
m18_276 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="625-625"];
m18_279 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="625-633"];
m18_284 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="625-633"];
m18_285 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="632-632"];
m18_287 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="632-632"];
m18_311 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Entry lambda expression", span="675-675"];
m18_313 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="675-675"];
m18_267 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="extendedMarket.HasValue", span="611-611"];
m18_77 [cluster="QuantConnect.Time.EachTradeableDay(QuantConnect.Securities.Security, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="return EachTradeableDay(security.Exchange.Hours, from, thru);", span="284-284"];
m18_91 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="var currentInTimeZone = currentExchangeTime.ConvertTo(exchange.TimeZone, timeZone)", span="326-326"];
m18_90 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="currentExchangeTime < thru", span="323-323"];
m18_98 [cluster="QuantConnect.Time.EachTradeableDayInTimeZone(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.DateTime, DateTimeZone, bool)", file="QCAlgorithm.History.cs", label="currentExchangeTime = currentInTimeZoneEod.ConvertTo(timeZone, exchange.TimeZone)", span="342-342"];
m18_103 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.History.cs", label="security.Exchange.IsOpenDuringBar(day.Date, day.Date.AddDays(1), security.IsExtendedMarketHours)", span="358-358"];
m18_102 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.History.cs", label=securities, span="356-356"];
m18_141 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="339-339"];
m18_140 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Type.Name", span="339-339"];
m18_156 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="365-365"];
m18_155 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="x.Type.Name", span="365-365"];
m18_258 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsCanonical()", span="600-600"];
m18_277 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="!x.IsCanonical()", span="625-625"];
m18_259 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="600-600"];
m18_271 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="600-617"];
m18_278 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="625-625"];
m18_309 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="s.Resolution", span="666-666"];
m18_310 [cluster="lambda expression", file="QCAlgorithm.History.cs", label="Exit lambda expression", span="666-666"];
m18_5 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="62-62"];
m18_6 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="SetWarmup(timeSpan)", span="64-64"];
m18_7 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(System.TimeSpan)", span="62-62"];
m18_9 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="_warmupBarCount = null", span="74-74"];
m18_8 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", span="72-72"];
m18_11 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="_warmupResolution = resolution", span="76-76"];
m18_10 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="_warmupTimeSpan = timeSpan", span="75-75"];
m18_12 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.SetWarmup(System.TimeSpan, QuantConnect.Resolution)", span="72-72"];
m18_137 [cluster="ArgumentException.cstr", file="QCAlgorithm.History.cs", label="Entry ArgumentException.cstr", span=""];
m18_248 [cluster="QuantConnect.Algorithm.QCAlgorithm.Debug(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.Debug(string)", span="1727-1727"];
m18_67 [cluster="System.DateTime.AddDays(double)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m18_249 [cluster="Unk.GetHistory", file="QCAlgorithm.History.cs", label="Entry Unk.GetHistory", span=""];
m18_157 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="380-380"];
m18_160 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling History<TradeBar> method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="385-385"];
m18_161 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] { symbol }, span, resolution).Get(symbol).Memoize();", span="388-388"];
m18_159 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="383-383"];
m18_158 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="382-382"];
m18_162 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="380-380"];
m18_322 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Securities.TryGetValue(symbol, out security)", span="693-693"];
m18_324 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return resolution ?? UniverseSettings.Resolution;", span="699-699"];
m18_321 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Security security", span="692-692"];
m18_323 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return resolution ?? security.Resolution;", span="695-695"];
m18_325 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetResolution(QuantConnect.Symbol, QuantConnect.Resolution?)", span="690-690"];
m18_272 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", span="660-660"];
m18_298 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="Securities.TryGetValue(symbol, out security)", span="663-663"];
m18_300 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="var resolution = UniverseSettings.Resolution", span="672-672"];
m18_301 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="var timeZone = GetExchangeHours(symbol).TimeZone", span="673-673"];
m18_302 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="var subscriptionDataTypes = SubscriptionManager.LookupSubscriptionConfigDataTypes(symbol.SecurityType, resolution, symbol.IsCanonical())", span="674-674"];
m18_303 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="return subscriptionDataTypes.Select(x => new SubscriptionDataConfig(x.Item1, symbol, resolution, timeZone, timeZone, UniverseSettings.FillForward, UniverseSettings.ExtendedMarketHours, false, false, x.Item2));", span="675-675"];
m18_297 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="Security security", span="662-662"];
m18_299 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="return from sub in security.Subscriptions.OrderByDescending(s => s.Resolution)\r\n                       where type.IsAssignableFrom(sub.Type)\r\n                       select sub;", span="666-668"];
m18_304 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscriptions(QuantConnect.Symbol, System.Type)", span="660-660"];
m18_37 [cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="return one > two ? one : two;", span="191-191"];
m18_38 [cluster="QuantConnect.Time.Max(System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Time.Max(System.DateTime, System.DateTime)", span="189-189"];
m18_39 [cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.Min(System.DateTime, System.DateTime)", span="197-197"];
m18_40 [cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="return one < two ? one : two;", span="199-199"];
m18_41 [cluster="QuantConnect.Time.Min(System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Time.Min(System.DateTime, System.DateTime)", span="197-197"];
m18_42 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.ParseDate(string)", span="207-207"];
m18_43 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.History.cs", label="DateTime date", span="212-212"];
m18_44 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.History.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.SixCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="213-213"];
m18_176 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="487-487"];
m18_194 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="return History(requests, TimeZone).Memoize();", span="489-489"];
m18_195 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>)", span="487-487"];
m18_196 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="568-568"];
m18_236 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", color=green, community=0, file="QCAlgorithm.History.cs", label="0: var reqs = requests.Where(hr => !UniverseManager.ContainsKey(hr.Symbol)) .ToList()", span="572-572"];
m18_235 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="var sentMessage = false", span="570-570"];
m18_237 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label=reqs, span="573-573"];
m18_245 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="return ((IAlgorithm)this).HistoryProvider.GetHistory(reqs, timeZone);", span="592-592"];
m18_238 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.EndTimeUtc > UtcTime", span="576-576"];
m18_239 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.EndTimeUtc = UtcTime", span="578-578"];
m18_244 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Debug(''Request for future history modified to end now.'')", span="586-586"];
m18_242 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="!sentMessage", span="583-583"];
m18_240 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.StartTimeUtc > request.EndTimeUtc", span="579-579"];
m18_241 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="request.StartTimeUtc = request.EndTimeUtc", span="581-581"];
m18_243 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="sentMessage = true", span="585-585"];
m18_246 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>, DateTimeZone)", span="568-568"];
m18_57 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Time.ParseDate(string)", span="207-207"];
m18_174 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(CreateBarCountHistoryRequests(symbols, periods, resolution)).Memoize();", span="436-436"];
m18_172 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution == Resolution.Tick", span="435-435"];
m18_173 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''History functions that accept a 'periods' parameter can not be used with Resolution.Tick'');", span="435-435"];
m18_175 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="433-433"];
m18_188 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", span="679-679"];
m18_316 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Securities.TryGetValue(symbol, out security)", span="682-682"];
m18_318 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="return MarketHoursDatabase.GetEntry(symbol.ID.Market, symbol, symbol.ID.SecurityType).ExchangeHours;", span="687-687"];
m18_315 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Security security", span="681-681"];
m18_317 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="return security.Exchange.Hours;", span="684-684"];
m18_319 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetExchangeHours(QuantConnect.Symbol)", span="679-679"];
m18_220 [cluster="QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.SubscriptionDataConfig.SubscriptionDataConfig(QuantConnect.Data.SubscriptionDataConfig, System.Type, QuantConnect.Symbol, QuantConnect.Resolution?, DateTimeZone, DateTimeZone, bool?, bool?, bool?, bool?, QuantConnect.TickType?, bool?, QuantConnect.DataNormalizationMode?)", span="236-236"];
m18_120 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get(QuantConnect.Symbol)", span="55-55"];
m18_87 [cluster="System.DateTime.RoundDown(System.TimeSpan)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.RoundDown(System.TimeSpan)", span="477-477"];
m18_88 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="636-636"];
m18_46 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.History.cs", label="DateTime.TryParseExact(dateToParse, DateFormat.EightCharacter, CultureInfo.InvariantCulture, DateTimeStyles.None, out date)", span="217-217"];
m18_221 [cluster="QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Data.HistoryRequest.HistoryRequest(System.DateTime, System.DateTime, System.Type, QuantConnect.Symbol, QuantConnect.Resolution, QuantConnect.Securities.SecurityExchangeHours, DateTimeZone, QuantConnect.Resolution?, bool, bool, QuantConnect.DataNormalizationMode, QuantConnect.TickType)", span="105-105"];
m18_53 [cluster="QuantConnect.Time.ParseDate(string)", file="QCAlgorithm.History.cs", label="return date;", span="231-231"];
m18_222 [cluster="QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.MarketHoursDatabase.FromDataFolder()", span="98-98"];
m18_119 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="376-376"];
m18_138 [cluster="QuantConnect.Symbol.ToString()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Symbol.ToString()", span="354-354"];
m18_294 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="return GetMatchingSubscriptions(symbol, type).FirstOrDefault();", span="657-657"];
m18_295 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Symbol, System.Type)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetMatchingSubscription(QuantConnect.Symbol, System.Type)", span="654-654"];
m18_50 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, Time - span, Time, resolution).Memoize();", span="187-187"];
m18_52 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="449-449"];
m18_45 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="623-623"];
m18_49 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="185-185"];
m18_51 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.TimeSpan, QuantConnect.Resolution?)", span="185-185"];
m18_54 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="198-198"];
m18_56 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", span="198-198"];
m18_55 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(Securities.Keys, periods, resolution).Memoize();", span="200-200"];
m18_224 [cluster="QuantConnect.Securities.Security.IsCustomData()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.Security.IsCustomData()", span="568-568"];
m18_218 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="557-557"];
m18_232 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(security.Exchange.Hours, UtcTime.ConvertFromUtc(security.Exchange.TimeZone), timeSpan, periods, security.IsExtendedMarketHours)", span="564-564"];
m18_233 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(security.Exchange.TimeZone, TimeZone);", span="565-565"];
m18_231 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="562-562"];
m18_230 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = (resolution ?? security.Resolution).ToTimeSpan()", span="559-559"];
m18_234 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTzForSecurity(QuantConnect.Securities.Security, int, QuantConnect.Resolution?)", span="557-557"];
m18_118 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="return count;", span="394-394"];
m18_163 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="419-419"];
m18_170 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(symbols, Time - span, Time, resolution).Memoize();", span="421-421"];
m18_171 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.TimeSpan, QuantConnect.Resolution?)", span="419-419"];
m18_153 [cluster="System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<QuantConnect.Data.Slice>.Get<T>(QuantConnect.Symbol)", span="134-134"];
m18_22 [cluster="QuantConnect.Algorithm.QCAlgorithm.SetWarmUp(int)", file="QCAlgorithm.History.cs", label="SetWarmup(barCount)", span="112-112"];
m18_136 [cluster="Unk.FirstOrDefault", file="QCAlgorithm.History.cs", label="Entry Unk.FirstOrDefault", span=""];
m18_29 [cluster="QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Time.Max(System.TimeSpan, System.TimeSpan)", span="174-174"];
m18_31 [cluster="System.TimeSpan.FromTicks(long)", file="QCAlgorithm.History.cs", label="Entry System.TimeSpan.FromTicks(long)", span="0-0"];
m18_58 [cluster="System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.TryParseExact(string, string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTime)", span="0-0"];
m18_59 [cluster="string.Substring(int, int)", file="QCAlgorithm.History.cs", label="Entry string.Substring(int, int)", span="0-0"];
m18_177 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="return History(CreateDateRangeHistoryRequests(symbols, start, end, resolution, fillForward, extendedMarket)).Memoize();", span="451-451"];
m18_178 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, System.DateTime, System.DateTime, QuantConnect.Resolution?, bool?, bool?)", span="449-449"];
m18_107 [cluster="QuantConnect.Time.TradableDate(System.Collections.Generic.IEnumerable<QuantConnect.Securities.Security>, System.DateTime)", file="QCAlgorithm.History.cs", label="return false;", span="365-365"];
m18_143 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(_symbolEmptyErrorMessage);", span="359-359"];
m18_145 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var config = GetMatchingSubscription(symbol, requestedType)", span="362-362"];
m18_147 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var actualType = Securities[symbol].Subscriptions.Select(x => x.Type.Name).DefaultIfEmpty(''[None]'').FirstOrDefault()", span="365-365"];
m18_149 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = CreateHistoryRequest(config, start, end, resolution)", span="369-369"];
m18_150 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(request).Get<T>(symbol).Memoize();", span="370-370"];
m18_142 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="symbol == null", span="359-359"];
m18_144 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var requestedType = typeof(T)", span="361-361"];
m18_146 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="config == null", span="363-363"];
m18_148 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="throw new ArgumentException(''The specified security is not of the requested type. Symbol: '' + symbol.ToString() + '' Requested Type: '' + requestedType.Name + '' Actual Type: '' + actualType);", span="366-366"];
m18_151 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="356-356"];
m18_290 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(subscription, GetExchangeHours(subscription.Symbol), startAlgoTz.ConvertToUtc(TimeZone), endAlgoTz.ConvertToUtc(TimeZone))\r\n            {\r\n                DataType = dataType,\r\n                Resolution = resolution.Value,\r\n                FillForwardResolution = subscription.FillDataForward ? resolution : null,\r\n                TickType = subscription.TickType\r\n            }", span="643-649"];
m18_288 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution = resolution ?? subscription.Resolution", span="638-638"];
m18_289 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var dataType = subscription.IsCustomData ? subscription.Type : LeanData.GetDataType(resolution.Value, subscription.TickType)", span="641-641"];
m18_291 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return request;", span="651-651"];
m18_292 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateHistoryRequest(QuantConnect.Data.SubscriptionDataConfig, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="636-636"];
m18_105 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History<T>(symbol, Time - span, Time, resolution).Memoize();", span="292-292"];
m18_104 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="289-289"];
m18_106 [cluster="QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History<T>(QuantConnect.Symbol, System.TimeSpan, QuantConnect.Resolution?)", span="289-289"];
m18_108 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="303-303"];
m18_253 [cluster="QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.UniverseManager.ContainsKey(QuantConnect.Symbol)", span="149-149"];
m18_21 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148"];
m18_219 [cluster="QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Util.LeanData.GetDataType(QuantConnect.Resolution, QuantConnect.TickType)", span="311-311"];
m18_13 [cluster="System.DateTime.AddSeconds(double)", file="QCAlgorithm.History.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m18_15 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", span="148-148"];
m18_36 [cluster="QuantConnect.Algorithm.QCAlgorithm.OnWarmupFinished()", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.OnWarmupFinished()", span="569-569"];
m18_180 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="resolution = GetResolution(symbol, resolution)", span="461-461"];
m18_181 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var exchange = GetExchangeHours(symbol)", span="462-462"];
m18_182 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var isExtendedMarketHours = Securities.TryGetValue(symbol, out security) ? security.IsExtendedMarketHours : false", span="463-463"];
m18_185 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var localStartTime = QuantConnect.Time.GetStartTimeForTradeBars(exchange, UtcTime.ConvertFromUtc(exchange.TimeZone), timeSpan, periods, isExtendedMarketHours)", span="468-468"];
m18_186 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return localStartTime.ConvertTo(exchange.TimeZone, TimeZone);", span="469-469"];
m18_179 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Security security", span="459-459"];
m18_183 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var timeSpan = resolution.Value.ToTimeSpan()", span="465-465"];
m18_184 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="timeSpan = timeSpan < QuantConnect.Time.OneSecond ? QuantConnect.Time.OneSecond : timeSpan", span="467-467"];
m18_187 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetStartTimeAlgoTz(QuantConnect.Symbol, int, QuantConnect.Resolution?)", span="457-457"];
m18_16 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.History.cs", label="double timestamp = 0", span="150-150"];
m18_17 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.History.cs", label="timestamp = (time - new DateTime(1970, 1, 1, 0, 0, 0, 0)).TotalSeconds", span="153-153"];
m18_18 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.History.cs", label=Exception, span="155-155"];
m18_19 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.History.cs", label="Log.Error(err, time.ToString(''o''))", span="157-157"];
m18_20 [cluster="QuantConnect.Time.DateTimeToUnixTimeStamp(System.DateTime)", file="QCAlgorithm.History.cs", label="return timestamp;", span="159-159"];
m18_35 [cluster="System.Math.Min(long, long)", file="QCAlgorithm.History.cs", label="Entry System.Math.Min(long, long)", span="0-0"];
m18_296 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="QCAlgorithm.History.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m18_110 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", span="376-376"];
m18_113 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="EachDay(start, finish)", span="382-382"];
m18_114 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="TradableDate(securities, day)", span="384-384"];
m18_115 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="count++", span="386-386"];
m18_116 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label=Exception, span="390-390"];
m18_112 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Log.Trace(''Time.TradeableDates(): Security Count: '' + securities.Count)", span="379-379"];
m18_111 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="var count = 0", span="378-378"];
m18_117 [cluster="QuantConnect.Time.TradeableDates(System.Collections.Generic.ICollection<QuantConnect.Securities.Security>, System.DateTime, System.DateTime)", file="QCAlgorithm.History.cs", label="Log.Error(err)", span="392-392"];
m18_189 [cluster="QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Securities.SecurityManager.TryGetValue(QuantConnect.Symbol, out QuantConnect.Securities.Security)", span="193-193"];
m18_164 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="399-399"];
m18_167 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Error(''Calling History<TradeBar> method on a Forex or CFD security will return an empty result. Please use the generic version with QuoteBar type parameter.'')", span="404-404"];
m18_168 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return History(new[] { symbol }, start, end, resolution).Get(symbol).Memoize();", span="407-407"];
m18_166 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="securityType == SecurityType.Forex || securityType == SecurityType.Cfd", span="402-402"];
m18_165 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="var securityType = symbol.ID.SecurityType", span="401-401"];
m18_169 [cluster="QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.History(QuantConnect.Symbol, System.DateTime, System.DateTime, QuantConnect.Resolution?)", span="399-399"];
m18_197 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="498-498"];
m18_198 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="security.Symbol.IsCanonical() || HistoryProvider == null", span="500-500"];
m18_201 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var startTime = GetStartTimeAlgoTzForSecurity(security, 1, resolution)", span="508-508"];
m18_202 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var endTime   = Time.RoundDown(resolution.ToTimeSpan())", span="509-509"];
m18_206 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var subscriptionDataConfig = GetMatchingSubscription(security.Symbol, dataType)", span="519-519"];
m18_210 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var request = new HistoryRequest(\r\n                startTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                endTime.ConvertToUtc(_localTimeKeeper.TimeZone),\r\n                subscriptionDataConfig == null ? typeof(TradeBar) : subscriptionDataConfig.Type,\r\n                security.Symbol,\r\n                resolution,\r\n                security.Exchange.Hours,\r\n                MarketHoursDatabase.FromDataFolder().GetDataTimeZone(security.Symbol.ID.Market, security.Symbol, security.Symbol.SecurityType),\r\n                resolution,\r\n                security.IsExtendedMarketHours,\r\n                security.IsCustomData(),\r\n                security.DataNormalizationMode,\r\n                subscriptionDataConfig == null ? LeanData.GetCommonTickTypeForCommonDataTypes(typeof(TradeBar), security.Type) : subscriptionDataConfig.TickType\r\n            )", span="528-541"];
m18_211 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var history = History(new List<HistoryRequest> { request }).ToList()", span="543-543"];
m18_199 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="502-502"];
m18_200 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var resolution = (Resolution)Math.Max((int)Resolution.Minute, (int)security.Resolution)", span="506-506"];
m18_203 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="var dataType = typeof(BaseData)", span="512-512"];
m18_204 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="security.Type == SecurityType.Option || security.Type == SecurityType.Future", span="513-513"];
m18_205 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="dataType = LeanData.GetDataType(resolution, TickType.Quote)", span="515-515"];
m18_207 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig != null && subscriptionDataConfig.Resolution == Resolution.Tick", span="522-522"];
m18_208 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="dataType = LeanData.GetDataType(resolution, subscriptionDataConfig.TickType)", span="524-524"];
m18_209 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="subscriptionDataConfig = new SubscriptionDataConfig(subscriptionDataConfig, dataType, resolution: resolution)", span="525-525"];
m18_212 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="history.Any() && history.First().Values.Any()", span="545-545"];
m18_213 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return history.First().Values.First();", span="547-547"];
m18_214 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="return null;", span="550-550"];
m18_215 [cluster="QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.GetLastKnownPrice(QuantConnect.Securities.Security)", span="498-498"];
m18_274 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="return symbols.Where(x => !x.IsCanonical()).SelectMany(x =>\r\n            {\r\n                var res = GetResolution(x, resolution);\r\n                var start = GetStartTimeAlgoTz(x, periods, res);\r\n                var end = Time.RoundDown(res.Value.ToTimeSpan());\r\n\r\n                return GetMatchingSubscriptions(x, typeof(BaseData))\r\n                    .Select(config => CreateHistoryRequest(config, start, end, resolution));\r\n            });", span="625-633"];
m18_275 [cluster="QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", file="QCAlgorithm.History.cs", label="Exit QuantConnect.Algorithm.QCAlgorithm.CreateBarCountHistoryRequests(System.Collections.Generic.IEnumerable<QuantConnect.Symbol>, int, QuantConnect.Resolution?)", span="623-623"];
m18_190 [cluster="QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", file="QCAlgorithm.History.cs", label="Entry QuantConnect.Time.GetStartTimeForTradeBars(QuantConnect.Securities.SecurityExchangeHours, System.DateTime, System.TimeSpan, int, bool)", span="427-427"];
m18_135 [cluster="Unk.DefaultIfEmpty", file="QCAlgorithm.History.cs", label="out QuantConnect.Time.DateTimeWithZone", span=""];
m18_326 [file="QCAlgorithm.History.cs", label="QuantConnect.Algorithm.QCAlgorithm", span=""];
m18_327 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m18_328 [file="QCAlgorithm.History.cs", label=int, span=""];
m18_329 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m18_330 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m18_331 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m18_332 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m18_333 [file="QCAlgorithm.History.cs", label="System.DateTime", span=""];
m18_334 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m18_337 [file="QCAlgorithm.History.cs", label="QuantConnect.Resolution?", span=""];
m18_338 [file="QCAlgorithm.History.cs", label=int, span=""];
m18_339 [file="QCAlgorithm.History.cs", label=start, span=""];
m18_340 [file="QCAlgorithm.History.cs", label=end, span=""];
m18_341 [file="QCAlgorithm.History.cs", label="QuantConnect.Symbol", span=""];
m18_342 [file="QCAlgorithm.History.cs", label=resolution, span=""];
m18_343 [file="QCAlgorithm.History.cs", label=timeZone, span=""];
m18_335 [file="QCAlgorithm.History.cs", label="bool?", span=""];
m18_336 [file="QCAlgorithm.History.cs", label="bool?", span=""];
m19_12 [cluster="QuantConnect.Scheduling.ScheduledEventException.ScheduledEventException(string, string, System.Exception)", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Scheduling.ScheduledEventException.ScheduledEventException(string, string, System.Exception)", span="271-271"];
m19_10 [cluster="string.Contains(string)", file="ScheduledEventExceptionInterpreter.cs", label="Entry string.Contains(string)", span="0-0"];
m19_0 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.CanInterpret(System.Exception)", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.CanInterpret(System.Exception)", span="30-30"];
m19_1 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.CanInterpret(System.Exception)", file="ScheduledEventExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.CanInterpret(System.Exception)", span="30-30"];
m19_11 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41"];
m19_2 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="ScheduledEventExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41"];
m19_3 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="ScheduledEventExceptionInterpreter.cs", label="var see = (ScheduledEventException) exception", span="43-43"];
m19_4 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", color=green, community=0, file="ScheduledEventExceptionInterpreter.cs", label="1: var message = exception.Message", span="46-46"];
m19_7 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", color=red, community=0, file="ScheduledEventExceptionInterpreter.cs", label="0: var inner = innerInterpreter.Interpret(see.InnerException, innerInterpreter)", span="52-52"];
m19_5 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="ScheduledEventExceptionInterpreter.cs", label="!message.Contains(see.ScheduledEventName)", span="47-47"];
m19_6 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", color=red, community=0, file="ScheduledEventExceptionInterpreter.cs", label="0: message = $''In Scheduled Event '{see.ScheduledEventName}', {message}''", span="49-49"];
m19_8 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="ScheduledEventExceptionInterpreter.cs", label="return new ScheduledEventException(see.ScheduledEventName, message, inner);", span="53-53"];
m19_9 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="ScheduledEventExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41"];
m20_18 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", file="ScheduledEventExceptionProjectionTests.cs", label="Entry QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", span="56-56"];
m20_24 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: var expectedProjectedMessage = $''In Scheduled Event '{name}', {message}''", span="64-64"];
m20_20 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", file="ScheduledEventExceptionProjectionTests.cs", label="var name = id.ToString(''D'')", span="59-59"];
m20_21 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", file="ScheduledEventExceptionProjectionTests.cs", label="var message = id.ToString(''N'')", span="60-60"];
m20_23 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: var projected = new ScheduledEventExceptionInterpreter().Interpret(exception, NullExceptionInterpreter.Instance)", span="62-62"];
m20_25 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: Assert.AreEqual(expectedProjectedMessage, projected.Message)", span="65-65"];
m20_22 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", file="ScheduledEventExceptionProjectionTests.cs", label="var exception = new ScheduledEventException(name, message, null)", span="61-61"];
m20_19 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", file="ScheduledEventExceptionProjectionTests.cs", label="var id = Guid.NewGuid()", span="58-58"];
m20_26 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", file="ScheduledEventExceptionProjectionTests.cs", label="Exit QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.PrependsScheduledEventName()", span="56-56"];
m20_0 [cluster="QuantConnect.Securities.Cash.Cash.Cash(string, QuantConnect.Resolution)", file="ScheduledEventExceptionProjectionTests.cs", label="Entry QuantConnect.Securities.Cash.Cash.Cash(string, QuantConnect.Resolution)", span="10-10"];
m20_2 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CanProjectReturnsTrueForOnlyScheduledEventExceptionType(System.Type)", file="ScheduledEventExceptionProjectionTests.cs", label="return new ScheduledEventExceptionInterpreter().CanInterpret(exception);", span="38-38"];
m20_1 [cluster="QuantConnect.Securities.Cash.Cash.Cash(string, QuantConnect.Resolution)", file="ScheduledEventExceptionProjectionTests.cs", label="Exit QuantConnect.Securities.Cash.Cash.Cash(string, QuantConnect.Resolution)", span="10-10"];
m20_3 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CanProjectReturnsTrueForOnlyScheduledEventExceptionType(System.Type)", file="ScheduledEventExceptionProjectionTests.cs", label="Exit QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CanProjectReturnsTrueForOnlyScheduledEventExceptionType(System.Type)", span="35-35"];
m20_48 [cluster="Mock<IExceptionInterpreter>.cstr", file="ScheduledEventExceptionProjectionTests.cs", label="Entry Mock<IExceptionInterpreter>.cstr", span=""];
m20_6 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.CanInterpret(System.Exception)", file="ScheduledEventExceptionProjectionTests.cs", label="Entry QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.CanInterpret(System.Exception)", span="30-30"];
m20_51 [cluster="Unk.Verifiable", file="ScheduledEventExceptionProjectionTests.cs", label="Entry Unk.Verifiable", span=""];
m20_17 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="ScheduledEventExceptionProjectionTests.cs", label="Entry QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41"];
m20_28 [cluster="System.Guid.ToString(string)", file="ScheduledEventExceptionProjectionTests.cs", label="Entry System.Guid.ToString(string)", span="0-0"];
m20_54 [cluster="Unk.Verify", file="ScheduledEventExceptionProjectionTests.cs", label="Entry Unk.Verify", span=""];
m20_67 [cluster="System.Activator.CreateInstance(System.Type)", file="ScheduledEventExceptionProjectionTests.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m20_5 [cluster="QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.ScheduledEventExceptionInterpreter()", file="ScheduledEventExceptionProjectionTests.cs", label="Entry QuantConnect.Exceptions.ScheduledEventExceptionInterpreter.ScheduledEventExceptionInterpreter()", span="23-23"];
m20_58 [cluster="lambda expression", file="ScheduledEventExceptionProjectionTests.cs", label="Entry lambda expression", span="91-91"];
m20_15 [cluster="lambda expression", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: projection.Interpret(exception, NullExceptionInterpreter.Instance)", span="52-52"];
m20_14 [cluster="lambda expression", file="ScheduledEventExceptionProjectionTests.cs", label="Entry lambda expression", span="52-52"];
m20_16 [cluster="lambda expression", file="ScheduledEventExceptionProjectionTests.cs", label="Exit lambda expression", span="52-52"];
m20_55 [cluster="lambda expression", file="ScheduledEventExceptionProjectionTests.cs", label="Entry lambda expression", span="83-83"];
m20_56 [cluster="lambda expression", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: iep.Interpret(inner, mockInnerProjection.Object)", span="83-83"];
m20_57 [cluster="lambda expression", file="ScheduledEventExceptionProjectionTests.cs", label="Exit lambda expression", span="83-83"];
m20_59 [cluster="lambda expression", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: iep.Interpret(inner, mockInnerProjection.Object)", span="91-91"];
m20_60 [cluster="lambda expression", file="ScheduledEventExceptionProjectionTests.cs", label="Exit lambda expression", span="91-91"];
m20_49 [cluster="Unk.Setup", file="ScheduledEventExceptionProjectionTests.cs", label="Entry Unk.Setup", span=""];
m20_52 [cluster="Unk.Interpret", file="ScheduledEventExceptionProjectionTests.cs", label="Entry Unk.Interpret", span=""];
m20_47 [cluster="System.Exception.Exception(string)", file="ScheduledEventExceptionProjectionTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m20_66 [cluster="System.Guid.ToString()", file="ScheduledEventExceptionProjectionTests.cs", label="Entry System.Guid.ToString()", span="0-0"];
m20_7 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.ProjectThrowsForNonScheduledEventExceptionTypes(System.Type, bool)", file="ScheduledEventExceptionProjectionTests.cs", label="Entry QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.ProjectThrowsForNonScheduledEventExceptionTypes(System.Type, bool)", span="47-47"];
m20_9 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.ProjectThrowsForNonScheduledEventExceptionTypes(System.Type, bool)", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: var projection = new ScheduledEventExceptionInterpreter()", span="50-50"];
m20_8 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.ProjectThrowsForNonScheduledEventExceptionTypes(System.Type, bool)", file="ScheduledEventExceptionProjectionTests.cs", label="var exception = CreateExceptionFromType(exceptionType)", span="49-49"];
m20_10 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.ProjectThrowsForNonScheduledEventExceptionTypes(System.Type, bool)", file="ScheduledEventExceptionProjectionTests.cs", label="var constraint = expectThrow ? (IResolveConstraint)Throws.Exception : Throws.Nothing", span="51-51"];
m20_11 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.ProjectThrowsForNonScheduledEventExceptionTypes(System.Type, bool)", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: Assert.That(() => projection.Interpret(exception, NullExceptionInterpreter.Instance), constraint)", span="52-52"];
m20_12 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.ProjectThrowsForNonScheduledEventExceptionTypes(System.Type, bool)", file="ScheduledEventExceptionProjectionTests.cs", label="Exit QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.ProjectThrowsForNonScheduledEventExceptionTypes(System.Type, bool)", span="47-47"];
m20_38 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", file="ScheduledEventExceptionProjectionTests.cs", label="Entry QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", span="78-78"];
m20_42 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: mockInnerProjection.Setup(iep => iep.Interpret(inner, mockInnerProjection.Object))\r\n                .Returns(new Exception(''Projected '' + inner.Message))\r\n                .Verifiable()", span="83-85"];
m20_39 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", file="ScheduledEventExceptionProjectionTests.cs", label="var inner = new Exception(''inner'')", span="80-80"];
m20_41 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: var mockInnerProjection = new Mock<IExceptionInterpreter>()", span="82-82"];
m20_43 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: var projection = new ScheduledEventExceptionInterpreter()", span="87-87"];
m20_45 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: mockInnerProjection.Verify(iep => iep.Interpret(inner, mockInnerProjection.Object), Times.Exactly(1))", span="91-91"];
m20_44 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: projection.Interpret(exception, mockInnerProjection.Object)", span="89-89"];
m20_40 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", file="ScheduledEventExceptionProjectionTests.cs", label="var exception = new ScheduledEventException(''name'', ''message'', inner)", span="81-81"];
m20_46 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", file="ScheduledEventExceptionProjectionTests.cs", label="Exit QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.InvokesInnerExceptionProjectionOnInnerException()", span="78-78"];
m20_50 [cluster="Unk.Returns", file="ScheduledEventExceptionProjectionTests.cs", label="Entry Unk.Returns", span=""];
m20_4 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CreateExceptionFromType(System.Type)", file="ScheduledEventExceptionProjectionTests.cs", label="Entry QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CreateExceptionFromType(System.Type)", span="94-94"];
m20_62 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CreateExceptionFromType(System.Type)", file="ScheduledEventExceptionProjectionTests.cs", label="var inner = new Exception(''Sample inner message'')", span="98-98"];
m20_61 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CreateExceptionFromType(System.Type)", file="ScheduledEventExceptionProjectionTests.cs", label="type == typeof(ScheduledEventException)", span="96-96"];
m20_64 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CreateExceptionFromType(System.Type)", file="ScheduledEventExceptionProjectionTests.cs", label="return (Exception)Activator.CreateInstance(type);", span="102-102"];
m20_63 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CreateExceptionFromType(System.Type)", file="ScheduledEventExceptionProjectionTests.cs", label="return new ScheduledEventException(Guid.NewGuid().ToString(), ''Sample error message'', inner);", span="99-99"];
m20_65 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CreateExceptionFromType(System.Type)", file="ScheduledEventExceptionProjectionTests.cs", label="Exit QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.CreateExceptionFromType(System.Type)", span="94-94"];
m20_27 [cluster="System.Guid.NewGuid()", file="ScheduledEventExceptionProjectionTests.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m20_31 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.WrapsScheduledEventExceptionInnerException()", file="ScheduledEventExceptionProjectionTests.cs", label="Entry QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.WrapsScheduledEventExceptionInnerException()", span="69-69"];
m20_35 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.WrapsScheduledEventExceptionInnerException()", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: Assert.AreEqual(inner, projected.InnerException)", span="74-74"];
m20_32 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.WrapsScheduledEventExceptionInnerException()", file="ScheduledEventExceptionProjectionTests.cs", label="var inner = new Exception()", span="71-71"];
m20_34 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.WrapsScheduledEventExceptionInnerException()", color=green, community=0, file="ScheduledEventExceptionProjectionTests.cs", label="0: var projected = new ScheduledEventExceptionInterpreter().Interpret(exception, NullExceptionInterpreter.Instance)", span="73-73"];
m20_33 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.WrapsScheduledEventExceptionInnerException()", file="ScheduledEventExceptionProjectionTests.cs", label="var exception = new ScheduledEventException(''name'', ''message'', inner)", span="72-72"];
m20_36 [cluster="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.WrapsScheduledEventExceptionInnerException()", file="ScheduledEventExceptionProjectionTests.cs", label="Exit QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests.WrapsScheduledEventExceptionInnerException()", span="69-69"];
m20_13 [cluster="Unk.That", file="ScheduledEventExceptionProjectionTests.cs", label="Entry Unk.That", span=""];
m20_29 [cluster="QuantConnect.Scheduling.ScheduledEventException.ScheduledEventException(string, string, System.Exception)", file="ScheduledEventExceptionProjectionTests.cs", label="Entry QuantConnect.Scheduling.ScheduledEventException.ScheduledEventException(string, string, System.Exception)", span="271-271"];
m20_37 [cluster="System.Exception.Exception()", file="ScheduledEventExceptionProjectionTests.cs", label="Entry System.Exception.Exception()", span="0-0"];
m20_53 [cluster="Unk.Exactly", file="ScheduledEventExceptionProjectionTests.cs", label="Entry Unk.Exactly", span=""];
m20_69 [file="ScheduledEventExceptionProjectionTests.cs", label=exception, span=""];
m20_70 [file="ScheduledEventExceptionProjectionTests.cs", label=projection, span=""];
m20_71 [file="ScheduledEventExceptionProjectionTests.cs", label=inner, span=""];
m20_72 [file="ScheduledEventExceptionProjectionTests.cs", label=mockInnerProjection, span=""];
m20_68 [file="ScheduledEventExceptionProjectionTests.cs", label="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests", span=""];
m21_23 [cluster="QuantConnect.Logging.Log.Error(System.Exception, string, bool)", file="StackExceptionInterpreter.cs", label="Entry QuantConnect.Logging.Log.Error(System.Exception, string, bool)", span="98-98"];
m21_0 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.StackExceptionInterpreter(System.Collections.Generic.IEnumerable<QuantConnect.Exceptions.IExceptionInterpreter>)", file="StackExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.StackExceptionInterpreter(System.Collections.Generic.IEnumerable<QuantConnect.Exceptions.IExceptionInterpreter>)", span="34-34"];
m21_1 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.StackExceptionInterpreter(System.Collections.Generic.IEnumerable<QuantConnect.Exceptions.IExceptionInterpreter>)", file="StackExceptionInterpreter.cs", label="_interpreters = interpreters.ToList()", span="36-36"];
m21_2 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.StackExceptionInterpreter(System.Collections.Generic.IEnumerable<QuantConnect.Exceptions.IExceptionInterpreter>)", file="StackExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.StackExceptionInterpreter.StackExceptionInterpreter(System.Collections.Generic.IEnumerable<QuantConnect.Exceptions.IExceptionInterpreter>)", span="34-34"];
m21_22 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.IExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="41-41"];
m21_41 [cluster="Unk.IsAssignableFrom", file="StackExceptionInterpreter.cs", label="Entry Unk.IsAssignableFrom", span=""];
m21_11 [cluster="QuantConnect.Exceptions.IExceptionInterpreter.CanInterpret(System.Exception)", file="StackExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.IExceptionInterpreter.CanInterpret(System.Exception)", span="30-30"];
m21_12 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="63-63"];
m21_13 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label="exception == null", span="65-65"];
m21_16 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label="interpreter.CanInterpret(exception)", span="74-74"];
m21_17 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label="return interpreter.Interpret(exception, innerInterpreter ?? this);", span="77-77"];
m21_20 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label="return exception;", span="86-86"];
m21_14 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label="return null;", span="67-67"];
m21_15 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label=_interpreters, span="70-70"];
m21_18 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label=Exception, span="80-80"];
m21_19 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label="Log.Error(err)", span="82-82"];
m21_21 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", file="StackExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.StackExceptionInterpreter.Interpret(System.Exception, QuantConnect.Exceptions.IExceptionInterpreter)", span="63-63"];
m21_45 [cluster="object.GetType()", file="StackExceptionInterpreter.cs", label="Entry object.GetType()", span="0-0"];
m21_24 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.GetExceptionMessageHeader(System.Exception)", file="StackExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.GetExceptionMessageHeader(System.Exception)", span="94-94"];
m21_25 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.GetExceptionMessageHeader(System.Exception)", file="StackExceptionInterpreter.cs", label="return string.Join('' '', InnersAndSelf(exception).Select(e => e.Message));", span="96-96"];
m21_26 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.GetExceptionMessageHeader(System.Exception)", file="StackExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.StackExceptionInterpreter.GetExceptionMessageHeader(System.Exception)", span="94-94"];
m21_30 [cluster="lambda expression", file="StackExceptionInterpreter.cs", label="Entry lambda expression", span="96-96"];
m21_9 [cluster="lambda expression", color=green, community=0, file="StackExceptionInterpreter.cs", label="0: interpreter.CanInterpret(exception)", span="51-51"];
m21_8 [cluster="lambda expression", file="StackExceptionInterpreter.cs", label="Entry lambda expression", span="51-51"];
m21_10 [cluster="lambda expression", file="StackExceptionInterpreter.cs", label="Exit lambda expression", span="51-51"];
m21_31 [cluster="lambda expression", file="StackExceptionInterpreter.cs", label="e.Message", span="96-96"];
m21_32 [cluster="lambda expression", file="StackExceptionInterpreter.cs", label="Exit lambda expression", span="96-96"];
m21_42 [cluster="Unk.GetConstructor", file="StackExceptionInterpreter.cs", label="Entry Unk.GetConstructor", span=""];
m21_27 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.InnersAndSelf(System.Exception)", file="StackExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.InnersAndSelf(System.Exception)", span="129-129"];
m21_47 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.InnersAndSelf(System.Exception)", file="StackExceptionInterpreter.cs", label="yield return exception;", span="131-131"];
m21_50 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.InnersAndSelf(System.Exception)", file="StackExceptionInterpreter.cs", label="yield return exception;", span="135-135"];
m21_48 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.InnersAndSelf(System.Exception)", file="StackExceptionInterpreter.cs", label="exception.InnerException != null", span="132-132"];
m21_49 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.InnersAndSelf(System.Exception)", file="StackExceptionInterpreter.cs", label="exception = exception.InnerException", span="134-134"];
m21_51 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.InnersAndSelf(System.Exception)", file="StackExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.StackExceptionInterpreter.InnersAndSelf(System.Exception)", span="129-129"];
m21_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="StackExceptionInterpreter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m21_46 [cluster="QuantConnect.Logging.Log.Debug(string, int, int)", file="StackExceptionInterpreter.cs", label="Entry QuantConnect.Logging.Log.Debug(string, int, int)", span="142-142"];
m21_7 [cluster="Unk.Any", file="StackExceptionInterpreter.cs", label="Entry Unk.Any", span=""];
m21_29 [cluster="Unk.Join", file="StackExceptionInterpreter.cs", label="Entry Unk.Join", span=""];
m21_40 [cluster="System.Reflection.Assembly.GetTypes()", file="StackExceptionInterpreter.cs", label="Entry System.Reflection.Assembly.GetTypes()", span="0-0"];
m21_4 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CanInterpret(System.Exception)", file="StackExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.CanInterpret(System.Exception)", span="49-49"];
m21_5 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CanInterpret(System.Exception)", color=green, community=0, file="StackExceptionInterpreter.cs", label="0: return _interpreters.Any(interpreter => interpreter.CanInterpret(exception));", span="51-51"];
m21_6 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CanInterpret(System.Exception)", file="StackExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.StackExceptionInterpreter.CanInterpret(System.Exception)", span="49-49"];
m21_43 [cluster="Unk.CreateInstance", file="StackExceptionInterpreter.cs", label="Entry Unk.CreateInstance", span=""];
m21_44 [cluster="StackExceptionInterpreter.cstr", file="StackExceptionInterpreter.cs", label="Entry StackExceptionInterpreter.cstr", span=""];
m21_28 [cluster="Unk.Select", file="StackExceptionInterpreter.cs", label="Entry Unk.Select", span=""];
m21_33 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="StackExceptionInterpreter.cs", label="Entry QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="104-104"];
m21_34 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", color=green, community=0, file="StackExceptionInterpreter.cs", label="0: var interpreters =\r\n                from assembly in assemblies\r\n                from type in assembly.GetTypes()\r\n                // ignore non-public and non-instantiable abstract types\r\n                where type.IsPublic && !type.IsAbstract\r\n                // type implements IExceptionInterpreter\r\n                where typeof(IExceptionInterpreter).IsAssignableFrom(type)\r\n                // type has default parameterless ctor\r\n                where type.GetConstructor(new Type[0]) != null\r\n                // provide guarantee of deterministic ordering\r\n                orderby type.FullName\r\n                select (IExceptionInterpreter) Activator.CreateInstance(type)", span="106-117"];
m21_35 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", color=green, community=0, file="StackExceptionInterpreter.cs", label="0: var stackExceptionInterpreter = new StackExceptionInterpreter(interpreters)", span="119-119"];
m21_36 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", color=green, community=0, file="StackExceptionInterpreter.cs", label="0: stackExceptionInterpreter.Interpreters", span="121-121"];
m21_38 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", color=green, community=0, file="StackExceptionInterpreter.cs", label="0: return stackExceptionInterpreter;", span="126-126"];
m21_37 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", color=green, community=0, file="StackExceptionInterpreter.cs", label="0: Log.Debug($''Loaded ExceptionInterpreter: {interpreter.GetType().Name}'')", span="123-123"];
m21_39 [cluster="QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", file="StackExceptionInterpreter.cs", label="Exit QuantConnect.Exceptions.StackExceptionInterpreter.CreateFromAssemblies(System.Collections.Generic.IEnumerable<System.Reflection.Assembly>)", span="104-104"];
m21_52 [file="StackExceptionInterpreter.cs", label="QuantConnect.Exceptions.StackExceptionInterpreter", span=""];
m21_53 [file="StackExceptionInterpreter.cs", label="System.Exception", span=""];
d70 -> d70  [color=green, key=1, label=sub, style=dashed];
d70 -> d71  [color=green, key=0, style=solid];
d70 -> d72  [color=green, key=2, style=dotted];
d70 -> d52  [color=green, key=2, style=dotted];
d70 -> d48  [color=green, key=2, style=dotted];
d70 -> d73  [color=green, key=1, label="lambda expression", style=dashed];
d20 -> d70  [color=green, key=0, style=solid];
d20 -> d3  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d11  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d27  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d30  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d33  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d36  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d20 -> d42  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
d71 -> d20  [color=blue, key=0, style=bold];
d73 -> d74  [color=green, key=0, style=solid];
d74 -> d75  [color=green, key=0, style=solid];
d75 -> d73  [color=blue, key=0, style=bold];
d5 -> d20  [key=2, style=dotted];
d5 -> d6  [key=0, style=solid];
d5 -> d19  [key=2, style=dotted];
d13 -> d20  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d19  [key=2, style=dotted];
d29 -> d20  [key=2, style=dotted];
d29 -> d30  [key=0, style=solid];
d29 -> d19  [key=2, style=dotted];
d32 -> d20  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d19  [key=2, style=dotted];
d35 -> d20  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d19  [key=2, style=dotted];
d38 -> d20  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d19  [key=2, style=dotted];
d44 -> d20  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d44 -> d19  [key=2, style=dotted];
d45 -> d20  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d45 -> d19  [key=2, style=dotted];
d3 -> d5  [color=darkseagreen4, key=1, label=forexTrade, style=dashed];
d3 -> d4  [key=0, style=solid];
d3 -> d17  [key=2, style=dotted];
d11 -> d13  [color=darkseagreen4, key=1, label=forexQuote, style=dashed];
d11 -> d12  [key=0, style=solid];
d11 -> d17  [key=2, style=dotted];
d27 -> d29  [color=darkseagreen4, key=1, label=forex, style=dashed];
d27 -> d28  [key=0, style=solid];
d27 -> d47  [key=2, style=dotted];
d30 -> d32  [color=darkseagreen4, key=1, label=equity, style=dashed];
d30 -> d31  [key=0, style=solid];
d30 -> d47  [key=2, style=dotted];
d33 -> d35  [color=darkseagreen4, key=1, label=option, style=dashed];
d33 -> d34  [key=0, style=solid];
d33 -> d47  [key=2, style=dotted];
d36 -> d38  [color=darkseagreen4, key=1, label=cfd, style=dashed];
d36 -> d37  [key=0, style=solid];
d36 -> d47  [key=2, style=dotted];
d42 -> d44  [color=darkseagreen4, key=1, label=crypto, style=dashed];
d42 -> d45  [color=darkseagreen4, key=1, label=crypto, style=dashed];
d42 -> d43  [key=0, style=solid];
d42 -> d47  [key=2, style=dotted];
d50 -> d52  [key=2, style=dotted];
d50 -> d51  [key=0, style=solid];
d41 -> d48  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d41 -> d19  [key=2, style=dotted];
d41 -> d49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d56 -> d48  [key=2, style=dotted];
d56 -> d57  [key=0, style=solid];
d56 -> d64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d59 -> d48  [key=2, style=dotted];
d59 -> d60  [key=0, style=solid];
d59 -> d67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d4 -> d5  [key=0, style=solid];
d4 -> d18  [key=2, style=dotted];
d4 -> d19  [key=2, style=dotted];
d6 -> d7  [key=0, style=solid];
d6 -> d21  [key=2, style=dotted];
d6 -> d8  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
d6 -> d9  [color=darkseagreen4, key=1, label=dataFeedsConfigString, style=dashed];
d12 -> d13  [key=0, style=solid];
d12 -> d19  [key=2, style=dotted];
d12 -> d18  [key=2, style=dotted];
d14 -> d0  [color=blue, key=0, style=bold];
d28 -> d29  [key=0, style=solid];
d28 -> d19  [key=2, style=dotted];
d28 -> d18  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d31 -> d19  [key=2, style=dotted];
d31 -> d18  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d19  [key=2, style=dotted];
d34 -> d18  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d19  [key=2, style=dotted];
d37 -> d18  [key=2, style=dotted];
d39 -> d41  [color=darkseagreen4, key=1, label=future, style=dashed];
d39 -> d40  [key=0, style=solid];
d39 -> d47  [key=2, style=dotted];
d43 -> d44  [key=0, style=solid];
d43 -> d19  [key=2, style=dotted];
d43 -> d18  [key=2, style=dotted];
d46 -> d25  [color=blue, key=0, style=bold];
d2 -> d3  [key=0, style=solid];
d2 -> d11  [color=darkseagreen4, key=1, label=algo, style=dashed];
d2 -> d16  [key=2, style=dotted];
d2 -> d10  [color=darkseagreen4, key=1, label=algo, style=dashed];
d10 -> d11  [key=0, style=solid];
d10 -> d24  [key=2, style=dotted];
d26 -> d27  [key=0, style=solid];
d26 -> d30  [color=darkseagreen4, key=1, label=algo, style=dashed];
d26 -> d33  [color=darkseagreen4, key=1, label=algo, style=dashed];
d26 -> d36  [color=darkseagreen4, key=1, label=algo, style=dashed];
d26 -> d42  [color=darkseagreen4, key=1, label=algo, style=dashed];
d26 -> d39  [color=darkseagreen4, key=1, label=algo, style=dashed];
d26 -> d16  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d51 -> d49  [color=blue, key=0, style=bold];
d40 -> d41  [key=0, style=solid];
d40 -> d19  [key=2, style=dotted];
d40 -> d18  [key=2, style=dotted];
d54 -> d56  [color=darkseagreen4, key=1, label=qcAlgorithm, style=dashed];
d54 -> d59  [color=darkseagreen4, key=1, label=qcAlgorithm, style=dashed];
d54 -> d55  [key=0, style=solid];
d54 -> d16  [key=2, style=dotted];
d54 -> d58  [color=darkseagreen4, key=1, label=qcAlgorithm, style=dashed];
d55 -> d56  [key=0, style=solid];
d55 -> d62  [key=2, style=dotted];
d57 -> d58  [key=0, style=solid];
d57 -> d63  [key=2, style=dotted];
d64 -> d65  [key=0, style=solid];
d58 -> d59  [key=0, style=solid];
d58 -> d62  [key=2, style=dotted];
d60 -> d61  [key=0, style=solid];
d60 -> d63  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d7 -> d10  [color=darkseagreen4, key=1, label=dataFeeds, style=dashed];
d7 -> d8  [key=0, style=solid];
d7 -> d22  [key=2, style=dotted];
d8 -> d10  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d9 -> d23  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d1 -> d15  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d66 -> d64  [color=blue, key=0, style=bold];
d65 -> d66  [key=0, style=solid];
d61 -> d53  [color=blue, key=0, style=bold];
d69 -> d67  [color=blue, key=0, style=bold];
d68 -> d69  [key=0, style=solid];
m3_253 -> m3_254  [key=0, style=solid];
m3_263 -> m3_27  [key=2, style=dotted];
m3_263 -> m3_264  [key=0, style=solid];
m3_262 -> m3_27  [key=2, style=dotted];
m3_262 -> m3_263  [key=0, style=solid];
m3_254 -> m3_263  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_254 -> m3_29  [key=2, style=dotted];
m3_254 -> m3_255  [key=0, style=solid];
m3_254 -> m3_256  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_254 -> m3_258  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_254 -> m3_259  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_256 -> m3_262  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_256 -> m3_34  [key=2, style=dotted];
m3_256 -> m3_257  [key=0, style=solid];
m3_256 -> m3_261  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_261 -> m3_262  [key=0, style=solid];
m3_261 -> m3_192  [key=2, style=dotted];
m3_255 -> m3_256  [key=0, style=solid];
m3_255 -> m3_33  [key=2, style=dotted];
m3_258 -> m3_259  [key=0, style=solid];
m3_258 -> m3_30  [key=2, style=dotted];
m3_258 -> m3_183  [key=2, style=dotted];
m3_258 -> m3_32  [key=2, style=dotted];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_238  [key=2, style=dotted];
m3_257 -> m3_258  [key=0, style=solid];
m3_257 -> m3_251  [key=2, style=dotted];
m3_260 -> m3_261  [key=0, style=solid];
m3_260 -> m3_252  [key=2, style=dotted];
m3_264 -> m3_253  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_3 -> m3_23  [key=2, style=dotted];
m3_3 -> m3_24  [key=2, style=dotted];
m3_3 -> m3_25  [key=2, style=dotted];
m3_3 -> m3_26  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_3 -> m3_5  [color=darkseagreen4, key=1, label=fills, style=dashed];
m3_3 -> m3_14  [color=darkseagreen4, key=1, label=fills, style=dashed];
m3_3 -> m3_15  [color=darkseagreen4, key=1, label=fills, style=dashed];
m3_4 -> m3_23  [key=2, style=dotted];
m3_4 -> m3_24  [key=2, style=dotted];
m3_4 -> m3_25  [key=2, style=dotted];
m3_4 -> m3_26  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_4 -> m3_12  [color=darkseagreen4, key=1, label=equity, style=dashed];
m3_4 -> m3_20  [color=darkseagreen4, key=1, label=equity, style=dashed];
m3_1 -> m3_3  [color=darkseagreen4, key=1, label=fillsFile, style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [color=darkseagreen4, key=1, label=equityFile, style=dashed];
m3_5 -> m3_27  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_22  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_19  [color=darkseagreen4, key=1, label=fill, style=dashed];
m3_12 -> m3_35  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_20 -> m3_27  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_6 -> m3_28  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_8  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_13 -> m3_20  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_13 -> m3_16  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_13 -> m3_18  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_13 -> m3_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_21 -> m3_14  [key=0, style=solid];
m3_21 -> m3_21  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_16 -> m3_36  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_41  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_20  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_11 -> m3_34  [key=2, style=dotted];
m3_11 -> m3_19  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_7 -> m3_11  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_7 -> m3_29  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_7 -> m3_10  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_8 -> m3_31  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_30  [key=2, style=dotted];
m3_8 -> m3_18  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_39  [key=2, style=dotted];
m3_18 -> m3_40  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_37  [key=2, style=dotted];
m3_17 -> m3_38  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_33  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_32  [key=2, style=dotted];
m3_22 -> m3_0  [color=blue, key=0, style=bold];
m3_362 -> m3_363  [key=0, style=solid];
m3_111 -> m3_112  [color=green, key=0, style=solid];
m3_112 -> m3_113  [color=green, key=0, style=solid];
m3_112 -> m3_45  [color=green, key=2, style=dotted];
m3_112 -> m3_46  [color=green, key=2, style=dotted];
m3_113 -> m3_111  [color=blue, key=0, style=bold];
m3_114 -> m3_115  [key=0, style=solid];
m3_43 -> m3_45  [key=2, style=dotted];
m3_43 -> m3_46  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_117 -> m3_118  [key=0, style=solid];
m3_116 -> m3_114  [color=blue, key=0, style=bold];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_50  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_47 -> m3_48  [key=0, style=solid];
m3_44 -> m3_42  [color=blue, key=0, style=bold];
m3_122 -> m3_120  [color=blue, key=0, style=bold];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_50  [key=2, style=dotted];
m3_119 -> m3_117  [color=blue, key=0, style=bold];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_50  [key=2, style=dotted];
m3_49 -> m3_47  [color=blue, key=0, style=bold];
m3_48 -> m3_50  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_363 -> m3_364  [key=0, style=solid];
m3_363 -> m3_365  [key=2, style=dotted];
m3_364 -> m3_362  [color=blue, key=0, style=bold];
m3_265 -> m3_266  [key=0, style=solid];
m3_273 -> m3_27  [key=2, style=dotted];
m3_273 -> m3_274  [key=0, style=solid];
m3_276 -> m3_27  [key=2, style=dotted];
m3_276 -> m3_277  [key=0, style=solid];
m3_275 -> m3_27  [key=2, style=dotted];
m3_275 -> m3_276  [key=0, style=solid];
m3_266 -> m3_273  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_266 -> m3_276  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_266 -> m3_29  [key=2, style=dotted];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_268  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_266 -> m3_270  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_266 -> m3_271  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_272 -> m3_273  [key=0, style=solid];
m3_272 -> m3_252  [key=2, style=dotted];
m3_272 -> m3_274  [color=darkseagreen4, key=1, label=fill, style=dashed];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_192  [key=2, style=dotted];
m3_268 -> m3_275  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_268 -> m3_34  [key=2, style=dotted];
m3_268 -> m3_274  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_268 -> m3_269  [key=0, style=solid];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_33  [key=2, style=dotted];
m3_270 -> m3_271  [key=0, style=solid];
m3_270 -> m3_30  [key=2, style=dotted];
m3_270 -> m3_183  [key=2, style=dotted];
m3_270 -> m3_32  [key=2, style=dotted];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_238  [key=2, style=dotted];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_251  [key=2, style=dotted];
m3_277 -> m3_265  [color=blue, key=0, style=bold];
m3_51 -> m3_52  [key=0, style=solid];
m3_56 -> m3_57  [color=green, key=0, style=solid];
m3_56 -> m3_23  [color=green, key=2, style=dotted];
m3_56 -> m3_24  [color=green, key=2, style=dotted];
m3_56 -> m3_25  [color=green, key=2, style=dotted];
m3_56 -> m3_26  [color=green, key=2, style=dotted];
m3_56 -> m3_111  [color=green, key=1, label="lambda expression", style=dashed];
m3_56 -> m3_60  [color=green, key=1, label=fills, style=dashed];
m3_56 -> m3_82  [color=green, key=1, label=fills, style=dashed];
m3_56 -> m3_83  [color=green, key=1, label=fills, style=dashed];
m3_52 -> m3_56  [color=green, key=1, label=fillsFile, style=dashed];
m3_52 -> m3_53  [key=0, style=solid];
m3_55 -> m3_56  [color=green, key=0, style=solid];
m3_55 -> m3_59  [color=darkseagreen4, key=1, label=jwbQuantityFile, style=dashed];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_23  [key=2, style=dotted];
m3_57 -> m3_24  [key=2, style=dotted];
m3_57 -> m3_25  [key=2, style=dotted];
m3_57 -> m3_26  [key=2, style=dotted];
m3_57 -> m3_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_57 -> m3_60  [color=darkseagreen4, key=1, label=equity, style=dashed];
m3_57 -> m3_65  [color=darkseagreen4, key=1, label=equity, style=dashed];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_27  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_100  [key=0, style=solid];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_95  [color=darkseagreen4, key=1, label=fill, style=dashed];
m3_53 -> m3_57  [color=darkseagreen4, key=1, label=equityFile, style=dashed];
m3_53 -> m3_54  [key=0, style=solid];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_58  [color=darkseagreen4, key=1, label=mchQuantityFile, style=dashed];
m3_59 -> m3_23  [key=2, style=dotted];
m3_59 -> m3_24  [key=2, style=dotted];
m3_59 -> m3_25  [key=2, style=dotted];
m3_59 -> m3_26  [key=2, style=dotted];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_59 -> m3_67  [color=darkseagreen4, key=1, label=jwbQuantity, style=dashed];
m3_59 -> m3_98  [color=darkseagreen4, key=1, label=jwbQuantity, style=dashed];
m3_58 -> m3_23  [key=2, style=dotted];
m3_58 -> m3_24  [key=2, style=dotted];
m3_58 -> m3_25  [key=2, style=dotted];
m3_58 -> m3_26  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_58 -> m3_66  [color=darkseagreen4, key=1, label=mchQuantity, style=dashed];
m3_58 -> m3_97  [color=darkseagreen4, key=1, label=mchQuantity, style=dashed];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_35  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_28  [key=2, style=dotted];
m3_61 -> m3_71  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m3_61 -> m3_72  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m3_61 -> m3_73  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m3_61 -> m3_80  [color=darkseagreen4, key=1, label=subscriptions, style=dashed];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_81 -> m3_84  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_81 -> m3_85  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_81 -> m3_86  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_81 -> m3_87  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_81 -> m3_96  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_81 -> m3_97  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_81 -> m3_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_81 -> m3_99  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_99 -> m3_82  [key=0, style=solid];
m3_99 -> m3_99  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_36  [key=2, style=dotted];
m3_84 -> m3_89  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_84 -> m3_90  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_84 -> m3_91  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_84 -> m3_92  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_41  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_101  [key=2, style=dotted];
m3_98 -> m3_27  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_101  [key=2, style=dotted];
m3_97 -> m3_27  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_95  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_64 -> m3_67  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_64 -> m3_98  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_64 -> m3_66  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_64 -> m3_97  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_64 -> m3_34  [key=2, style=dotted];
m3_64 -> m3_68  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_64 -> m3_69  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_64 -> m3_70  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_64 -> m3_80  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_64 -> m3_96  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_62 -> m3_64  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_29  [key=2, style=dotted];
m3_62 -> m3_77  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_62 -> m3_78  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_62 -> m3_79  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_62 -> m3_80  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_102  [key=2, style=dotted];
m3_71 -> m3_31  [key=2, style=dotted];
m3_71 -> m3_74  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m3_71 -> m3_77  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m3_71 -> m3_92  [color=darkseagreen4, key=1, label=mchJwbSecurity, style=dashed];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_102  [key=2, style=dotted];
m3_72 -> m3_31  [key=2, style=dotted];
m3_72 -> m3_75  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m3_72 -> m3_79  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m3_72 -> m3_92  [color=darkseagreen4, key=1, label=mchUsdSecurity, style=dashed];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_102  [key=2, style=dotted];
m3_73 -> m3_31  [key=2, style=dotted];
m3_73 -> m3_76  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m3_73 -> m3_78  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m3_73 -> m3_92  [color=darkseagreen4, key=1, label=usdJwbSecurity, style=dashed];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_105  [key=2, style=dotted];
m3_80 -> m3_106  [key=2, style=dotted];
m3_88 -> m3_27  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_85 -> m3_88  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_89  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m3_85 -> m3_92  [color=darkseagreen4, key=1, label=mchJwb, style=dashed];
m3_86 -> m3_88  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_90  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m3_86 -> m3_92  [color=darkseagreen4, key=1, label=mchUsd, style=dashed];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_91  [color=darkseagreen4, key=1, label=usdJwb, style=dashed];
m3_87 -> m3_92  [color=darkseagreen4, key=1, label=usdJwb, style=dashed];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_109  [key=2, style=dotted];
m3_96 -> m3_110  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_39  [key=2, style=dotted];
m3_89 -> m3_107  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_39  [key=2, style=dotted];
m3_90 -> m3_107  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_39  [key=2, style=dotted];
m3_91 -> m3_107  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_108  [key=2, style=dotted];
m3_92 -> m3_39  [key=2, style=dotted];
m3_93 -> m3_95  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_68 -> m3_71  [color=darkseagreen4, key=1, label=jwbCash, style=dashed];
m3_68 -> m3_89  [color=darkseagreen4, key=1, label=jwbCash, style=dashed];
m3_68 -> m3_69  [key=0, style=solid];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_33  [key=2, style=dotted];
m3_69 -> m3_73  [color=darkseagreen4, key=1, label=mchCash, style=dashed];
m3_69 -> m3_91  [color=darkseagreen4, key=1, label=mchCash, style=dashed];
m3_69 -> m3_70  [key=0, style=solid];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_72  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m3_70 -> m3_90  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_104  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_104  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_104  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_103  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_103  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_103  [key=2, style=dotted];
m3_94 -> m3_93  [key=0, style=solid];
m3_94 -> m3_94  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m3_94 -> m3_40  [key=2, style=dotted];
m3_100 -> m3_51  [color=blue, key=0, style=bold];
m3_191 -> m3_350  [key=0, style=solid];
m3_350 -> m3_351  [key=0, style=solid];
m3_351 -> m3_191  [color=blue, key=0, style=bold];
m3_358 -> m3_359  [key=0, style=solid];
m3_358 -> m3_363  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_359 -> m3_360  [key=0, style=solid];
m3_359 -> m3_361  [key=2, style=dotted];
m3_359 -> m3_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_360 -> m3_358  [color=blue, key=0, style=bold];
m3_366 -> m3_367  [key=0, style=solid];
m3_367 -> m3_368  [key=0, style=solid];
m3_367 -> m3_369  [key=2, style=dotted];
m3_368 -> m3_366  [color=blue, key=0, style=bold];
m3_123 -> m3_124  [key=0, style=solid];
m3_147 -> m3_27  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_148 -> m3_27  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_155 -> m3_27  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_156 -> m3_27  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_157 -> m3_27  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_164 -> m3_27  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_165 -> m3_27  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_166 -> m3_27  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_144 -> m3_27  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_146 -> m3_27  [key=2, style=dotted];
m3_146 -> m3_147  [key=0, style=solid];
m3_174 -> m3_27  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_177 -> m3_27  [key=2, style=dotted];
m3_177 -> m3_178  [key=0, style=solid];
m3_169 -> m3_27  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_125 -> m3_147  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_148  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_155  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_156  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_157  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_164  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_165  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_166  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_131  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_138  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_139  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_171  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_125 -> m3_172  [color=darkseagreen4, key=1, label=quantity, style=dashed];
m3_130 -> m3_147  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_148  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_155  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_156  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_157  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_164  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_165  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_166  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_144  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_146  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_174  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_34  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_145  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_150  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_159  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_168  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_173  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_175  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_130 -> m3_178  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_185  [key=2, style=dotted];
m3_149 -> m3_193  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_184  [key=2, style=dotted];
m3_154 -> m3_40  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_185  [key=2, style=dotted];
m3_158 -> m3_193  [key=2, style=dotted];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_184  [key=2, style=dotted];
m3_163 -> m3_40  [key=2, style=dotted];
m3_167 -> m3_168  [key=0, style=solid];
m3_139 -> m3_144  [color=darkseagreen4, key=1, label=fill, style=dashed];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_186  [key=2, style=dotted];
m3_139 -> m3_145  [color=darkseagreen4, key=1, label=fill, style=dashed];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_190  [key=2, style=dotted];
m3_143 -> m3_191  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_192  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_192  [key=2, style=dotted];
m3_175 -> m3_177  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_197  [key=2, style=dotted];
m3_175 -> m3_178  [color=darkseagreen4, key=1, label=marginCallOrders, style=dashed];
m3_136 -> m3_177  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_136 -> m3_154  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_136 -> m3_163  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_141  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_136 -> m3_170  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_136 -> m3_178  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_199  [key=2, style=dotted];
m3_178 -> m3_179  [key=0, style=solid];
m3_178 -> m3_200  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_197  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_198  [key=2, style=dotted];
m3_152 -> m3_36  [key=2, style=dotted];
m3_152 -> m3_154  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_152 -> m3_158  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_152 -> m3_152  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_161 -> m3_36  [key=2, style=dotted];
m3_161 -> m3_163  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_161 -> m3_161  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_161 -> m3_162  [key=0, style=solid];
m3_161 -> m3_171  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_126 -> m3_29  [key=2, style=dotted];
m3_126 -> m3_130  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_126 -> m3_136  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_133  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_170  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m3_124 -> m3_133  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_182  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_185  [key=2, style=dotted];
m3_138 -> m3_140  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_138 -> m3_141  [color=darkseagreen4, key=1, label=order, style=dashed];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_185  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_186  [key=2, style=dotted];
m3_127 -> m3_130  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m3_127 -> m3_33  [key=2, style=dotted];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_129  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m3_127 -> m3_150  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m3_127 -> m3_159  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_181  [key=2, style=dotted];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_194  [key=2, style=dotted];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_194  [key=2, style=dotted];
m3_134 -> m3_149  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_134 -> m3_152  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_134 -> m3_138  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_137  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_135 -> m3_149  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m3_135 -> m3_139  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_138  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m3_135 -> m3_171  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m3_135 -> m3_172  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m3_135 -> m3_137  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m3_135 -> m3_153  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m3_135 -> m3_162  [color=darkseagreen4, key=1, label=buyPrice, style=dashed];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_158  [color=darkseagreen4, key=1, label=highPrice, style=dashed];
m3_162 -> m3_163  [key=0, style=solid];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_187  [key=2, style=dotted];
m3_128 -> m3_143  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_140  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m3_128 -> m3_180  [key=2, style=dotted];
m3_141 -> m3_143  [color=darkseagreen4, key=1, label=request, style=dashed];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_188  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_189  [key=2, style=dotted];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_184  [key=2, style=dotted];
m3_137 -> m3_40  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_195  [key=2, style=dotted];
m3_160 -> m3_161  [key=0, style=solid];
m3_160 -> d19  [key=2, style=dotted];
m3_133 -> m3_104  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_30  [key=2, style=dotted];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_183  [key=2, style=dotted];
m3_179 -> m3_123  [color=blue, key=0, style=bold];
m3_183 -> m3_339  [key=0, style=solid];
m3_183 -> m3_340  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_183 -> m3_341  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m3_183 -> m3_342  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m3_183 -> m3_343  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m3_339 -> m3_340  [key=0, style=solid];
m3_339 -> m3_341  [key=0, style=solid];
m3_340 -> m3_344  [key=0, style=solid];
m3_340 -> m3_345  [key=2, style=dotted];
m3_341 -> m3_342  [key=0, style=solid];
m3_341 -> m3_343  [key=0, style=solid];
m3_342 -> m3_344  [key=0, style=solid];
m3_342 -> m3_345  [key=2, style=dotted];
m3_343 -> m3_344  [key=0, style=solid];
m3_343 -> m3_346  [key=2, style=dotted];
m3_343 -> m3_347  [key=2, style=dotted];
m3_344 -> m3_183  [color=blue, key=0, style=bold];
m3_297 -> m3_298  [key=0, style=solid];
m3_307 -> m3_27  [key=2, style=dotted];
m3_307 -> m3_308  [key=0, style=solid];
m3_308 -> m3_27  [key=2, style=dotted];
m3_308 -> m3_309  [key=0, style=solid];
m3_314 -> m3_27  [key=2, style=dotted];
m3_314 -> m3_315  [key=0, style=solid];
m3_315 -> m3_27  [key=2, style=dotted];
m3_315 -> m3_316  [key=0, style=solid];
m3_321 -> m3_27  [key=2, style=dotted];
m3_321 -> m3_322  [key=0, style=solid];
m3_322 -> m3_27  [key=2, style=dotted];
m3_322 -> m3_323  [key=0, style=solid];
m3_325 -> m3_27  [key=2, style=dotted];
m3_325 -> m3_326  [key=0, style=solid];
m3_326 -> m3_27  [key=2, style=dotted];
m3_326 -> m3_327  [key=0, style=solid];
m3_329 -> m3_27  [key=2, style=dotted];
m3_329 -> m3_330  [key=0, style=solid];
m3_330 -> m3_27  [key=2, style=dotted];
m3_330 -> m3_331  [key=0, style=solid];
m3_306 -> m3_27  [key=2, style=dotted];
m3_306 -> m3_307  [key=0, style=solid];
m3_313 -> m3_27  [key=2, style=dotted];
m3_313 -> m3_314  [key=0, style=solid];
m3_320 -> m3_27  [key=2, style=dotted];
m3_320 -> m3_321  [key=0, style=solid];
m3_301 -> m3_307  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_308  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_314  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_315  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_321  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_322  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_325  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_326  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_329  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_330  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_34  [key=2, style=dotted];
m3_301 -> m3_302  [key=0, style=solid];
m3_301 -> m3_312  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_319  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_324  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_301 -> m3_328  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_309 -> m3_310  [key=0, style=solid];
m3_309 -> m3_336  [key=2, style=dotted];
m3_309 -> m3_311  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m3_309 -> m3_316  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m3_316 -> m3_36  [key=2, style=dotted];
m3_316 -> m3_316  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m3_316 -> m3_317  [key=0, style=solid];
m3_316 -> m3_318  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m3_316 -> m3_323  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m3_323 -> m3_36  [key=2, style=dotted];
m3_323 -> m3_323  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m3_323 -> m3_324  [key=0, style=solid];
m3_323 -> m3_327  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m3_324 -> m3_325  [key=0, style=solid];
m3_324 -> m3_337  [key=2, style=dotted];
m3_327 -> m3_36  [key=2, style=dotted];
m3_327 -> m3_327  [color=darkseagreen4, key=1, label=timeUtc, style=dashed];
m3_327 -> m3_328  [key=0, style=solid];
m3_327 -> m3_338  [key=2, style=dotted];
m3_327 -> m3_37  [key=2, style=dotted];
m3_328 -> m3_329  [key=0, style=solid];
m3_328 -> m3_337  [key=2, style=dotted];
m3_304 -> m3_306  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_304 -> m3_313  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_304 -> m3_320  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_304 -> m3_305  [key=0, style=solid];
m3_304 -> m3_310  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_304 -> m3_317  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_305 -> m3_306  [key=0, style=solid];
m3_305 -> m3_334  [key=2, style=dotted];
m3_305 -> m3_335  [key=2, style=dotted];
m3_312 -> m3_313  [key=0, style=solid];
m3_312 -> m3_192  [key=2, style=dotted];
m3_319 -> m3_320  [key=0, style=solid];
m3_319 -> m3_192  [key=2, style=dotted];
m3_299 -> m3_29  [key=2, style=dotted];
m3_299 -> m3_301  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_299 -> m3_304  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_299 -> m3_300  [key=0, style=solid];
m3_299 -> m3_303  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_300 -> m3_301  [key=0, style=solid];
m3_300 -> m3_33  [key=2, style=dotted];
m3_302 -> m3_303  [key=0, style=solid];
m3_302 -> m3_251  [key=2, style=dotted];
m3_310 -> m3_185  [key=2, style=dotted];
m3_310 -> m3_296  [key=2, style=dotted];
m3_310 -> m3_311  [key=0, style=solid];
m3_311 -> m3_312  [key=0, style=solid];
m3_311 -> m3_252  [key=2, style=dotted];
m3_317 -> m3_185  [key=2, style=dotted];
m3_317 -> m3_296  [key=2, style=dotted];
m3_317 -> m3_318  [key=0, style=solid];
m3_318 -> m3_319  [key=0, style=solid];
m3_318 -> m3_252  [key=2, style=dotted];
m3_298 -> m3_327  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m3_298 -> m3_299  [key=0, style=solid];
m3_298 -> m3_332  [key=2, style=dotted];
m3_298 -> m3_303  [color=darkseagreen4, key=1, label=securityExchangeHours, style=dashed];
m3_303 -> m3_304  [key=0, style=solid];
m3_303 -> m3_333  [key=2, style=dotted];
m3_303 -> m3_183  [key=2, style=dotted];
m3_303 -> m3_32  [key=2, style=dotted];
m3_331 -> m3_297  [color=blue, key=0, style=bold];
m3_373 -> m3_374  [key=0, style=solid];
m3_374 -> m3_375  [key=0, style=solid];
m3_374 -> m3_369  [key=2, style=dotted];
m3_375 -> m3_373  [color=blue, key=0, style=bold];
m3_240 -> m3_241  [key=0, style=solid];
m3_249 -> m3_27  [key=2, style=dotted];
m3_249 -> m3_250  [key=0, style=solid];
m3_248 -> m3_27  [key=2, style=dotted];
m3_248 -> m3_249  [key=0, style=solid];
m3_241 -> m3_249  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_241 -> m3_29  [key=2, style=dotted];
m3_241 -> m3_242  [key=0, style=solid];
m3_241 -> m3_243  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_241 -> m3_245  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_243 -> m3_248  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_243 -> m3_34  [key=2, style=dotted];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_247  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_247 -> m3_248  [key=0, style=solid];
m3_247 -> m3_192  [key=2, style=dotted];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_33  [key=2, style=dotted];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_30  [key=2, style=dotted];
m3_245 -> m3_183  [key=2, style=dotted];
m3_245 -> m3_32  [key=2, style=dotted];
m3_244 -> m3_245  [key=0, style=solid];
m3_244 -> m3_251  [key=2, style=dotted];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_252  [key=2, style=dotted];
m3_250 -> m3_240  [color=blue, key=0, style=bold];
m3_352 -> m3_354  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_352 -> m3_353  [key=0, style=solid];
m3_354 -> m3_355  [key=0, style=solid];
m3_354 -> m3_357  [key=2, style=dotted];
m3_353 -> m3_354  [key=0, style=solid];
m3_355 -> m3_356  [key=0, style=solid];
m3_356 -> m3_352  [color=blue, key=0, style=bold];
m3_187 -> m3_348  [key=0, style=solid];
m3_348 -> m3_349  [key=0, style=solid];
m3_349 -> m3_187  [color=blue, key=0, style=bold];
m3_201 -> m3_202  [key=0, style=solid];
m3_206 -> m3_34  [key=2, style=dotted];
m3_206 -> m3_207  [key=0, style=solid];
m3_206 -> m3_208  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_206 -> m3_209  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_206 -> m3_210  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_206 -> m3_211  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_206 -> m3_212  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_206 -> m3_231  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_206 -> m3_234  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_202 -> m3_29  [key=2, style=dotted];
m3_202 -> m3_206  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_215  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_202 -> m3_216  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_202 -> m3_217  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_202 -> m3_219  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_202 -> m3_220  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_202 -> m3_221  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_202 -> m3_223  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_202 -> m3_224  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_202 -> m3_225  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_219 -> m3_102  [key=2, style=dotted];
m3_219 -> m3_104  [key=2, style=dotted];
m3_219 -> m3_220  [key=0, style=solid];
m3_223 -> m3_102  [key=2, style=dotted];
m3_223 -> m3_104  [key=2, style=dotted];
m3_223 -> m3_224  [key=0, style=solid];
m3_203 -> m3_33  [key=2, style=dotted];
m3_203 -> m3_206  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m3_203 -> m3_204  [key=0, style=solid];
m3_203 -> m3_205  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m3_203 -> m3_231  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m3_203 -> m3_234  [color=darkseagreen4, key=1, label=transactions, style=dashed];
m3_205 -> m3_206  [key=0, style=solid];
m3_205 -> m3_181  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_207 -> m3_182  [key=2, style=dotted];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_237  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_237  [key=2, style=dotted];
m3_210 -> m3_211  [key=0, style=solid];
m3_211 -> m3_223  [color=darkseagreen4, key=1, label=gbpCash, style=dashed];
m3_211 -> m3_212  [key=0, style=solid];
m3_212 -> m3_219  [color=darkseagreen4, key=1, label=usdCash, style=dashed];
m3_212 -> m3_213  [key=0, style=solid];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_194  [key=2, style=dotted];
m3_234 -> m3_235  [key=0, style=solid];
m3_234 -> m3_194  [key=2, style=dotted];
m3_215 -> m3_104  [key=2, style=dotted];
m3_215 -> m3_30  [key=2, style=dotted];
m3_215 -> m3_216  [key=0, style=solid];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_238  [key=2, style=dotted];
m3_217 -> m3_40  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_217 -> m3_239  [key=2, style=dotted];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_238  [key=2, style=dotted];
m3_221 -> m3_40  [key=2, style=dotted];
m3_221 -> m3_222  [key=0, style=solid];
m3_221 -> m3_239  [key=2, style=dotted];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_238  [key=2, style=dotted];
m3_225 -> m3_40  [key=2, style=dotted];
m3_225 -> m3_226  [key=0, style=solid];
m3_225 -> m3_239  [key=2, style=dotted];
m3_218 -> m3_219  [key=0, style=solid];
m3_218 -> m3_183  [key=2, style=dotted];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_183  [key=2, style=dotted];
m3_226 -> m3_185  [key=2, style=dotted];
m3_226 -> m3_231  [color=darkseagreen4, key=1, label=acceptedOrder, style=dashed];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_228  [color=darkseagreen4, key=1, label=acceptedOrder, style=dashed];
m3_233 -> m3_185  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_230 -> m3_190  [key=2, style=dotted];
m3_230 -> m3_191  [key=2, style=dotted];
m3_230 -> m3_231  [key=0, style=solid];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_180  [key=2, style=dotted];
m3_204 -> m3_230  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m3_204 -> m3_227  [color=darkseagreen4, key=1, label=orderProcessor, style=dashed];
m3_213 -> m3_217  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_213 -> m3_221  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_213 -> m3_225  [color=darkseagreen4, key=1, label=time, style=dashed];
m3_213 -> m3_214  [key=0, style=solid];
m3_232 -> m3_233  [key=0, style=solid];
m3_232 -> d19  [key=2, style=dotted];
m3_235 -> m3_195  [key=2, style=dotted];
m3_235 -> m3_236  [key=0, style=solid];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_183  [key=2, style=dotted];
m3_227 -> m3_187  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_228 -> m3_188  [key=2, style=dotted];
m3_228 -> m3_230  [color=darkseagreen4, key=1, label=request, style=dashed];
m3_228 -> m3_229  [key=0, style=solid];
m3_229 -> m3_189  [key=2, style=dotted];
m3_229 -> m3_230  [key=0, style=solid];
m3_236 -> m3_201  [color=blue, key=0, style=bold];
m3_278 -> m3_279  [key=0, style=solid];
m3_287 -> m3_27  [key=2, style=dotted];
m3_287 -> m3_288  [key=0, style=solid];
m3_292 -> m3_27  [key=2, style=dotted];
m3_292 -> m3_293  [key=0, style=solid];
m3_293 -> m3_27  [key=2, style=dotted];
m3_293 -> m3_294  [key=0, style=solid];
m3_294 -> m3_27  [key=2, style=dotted];
m3_294 -> m3_295  [key=0, style=solid];
m3_286 -> m3_27  [key=2, style=dotted];
m3_286 -> m3_287  [key=0, style=solid];
m3_291 -> m3_27  [key=2, style=dotted];
m3_291 -> m3_292  [key=0, style=solid];
m3_281 -> m3_287  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_281 -> m3_292  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_281 -> m3_293  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_281 -> m3_294  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_281 -> m3_34  [key=2, style=dotted];
m3_281 -> m3_282  [key=0, style=solid];
m3_281 -> m3_283  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_281 -> m3_284  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_281 -> m3_290  [color=darkseagreen4, key=1, label=portfolio, style=dashed];
m3_288 -> m3_289  [key=0, style=solid];
m3_288 -> m3_185  [key=2, style=dotted];
m3_288 -> m3_296  [key=2, style=dotted];
m3_285 -> m3_286  [key=0, style=solid];
m3_285 -> m3_291  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_285 -> m3_288  [color=darkseagreen4, key=1, label=security, style=dashed];
m3_290 -> m3_291  [key=0, style=solid];
m3_290 -> m3_192  [key=2, style=dotted];
m3_279 -> m3_29  [key=2, style=dotted];
m3_279 -> m3_281  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_279 -> m3_285  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_279 -> m3_280  [key=0, style=solid];
m3_279 -> m3_284  [color=darkseagreen4, key=1, label=securities, style=dashed];
m3_284 -> m3_102  [key=2, style=dotted];
m3_284 -> m3_285  [key=0, style=solid];
m3_284 -> m3_183  [key=2, style=dotted];
m3_284 -> m3_32  [key=2, style=dotted];
m3_280 -> m3_281  [key=0, style=solid];
m3_280 -> m3_33  [key=2, style=dotted];
m3_282 -> m3_283  [key=0, style=solid];
m3_282 -> m3_251  [key=2, style=dotted];
m3_283 -> m3_284  [key=0, style=solid];
m3_283 -> m3_237  [key=2, style=dotted];
m3_289 -> m3_290  [key=0, style=solid];
m3_289 -> m3_252  [key=2, style=dotted];
m3_295 -> m3_278  [color=blue, key=0, style=bold];
m3_383 -> m3_284  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m3_383 -> m3_245  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m3_383 -> m3_258  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m3_383 -> m3_270  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m3_383 -> m3_303  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m3_383 -> m3_218  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m3_383 -> m3_222  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m3_383 -> m3_132  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m3_383 -> m3_214  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests", style=dashed];
m3_384 -> m3_350  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m3_384 -> m3_348  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m3_384 -> m3_354  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m3_384 -> m3_359  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m3_384 -> m3_367  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m3_384 -> m3_374  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Securities.SecurityPortfolioManagerTests.OrderProcessor", style=dashed];
m3_385 -> m3_363  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_25 -> m4_26  [key=0, style=solid];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_28  [key=2, style=dotted];
m4_27 -> m4_25  [color=blue, key=0, style=bold];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_49  [key=2, style=dotted];
m4_48 -> m4_46  [color=blue, key=0, style=bold];
m4_64 -> m4_65  [key=0, style=solid];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_33  [key=2, style=dotted];
m4_65 -> m4_67  [key=2, style=dotted];
m4_66 -> m4_64  [color=blue, key=0, style=bold];
m4_117 -> m4_118  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_10  [key=2, style=dotted];
m4_9 -> m4_7  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_15  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<K, V>", style=dashed];
m4_16 -> m4_14  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<K, V>", style=dashed];
m4_19 -> m4_17  [color=blue, key=0, style=bold];
m4_43 -> m4_44  [color=red, key=0, style=solid];
m4_43 -> m4_45  [color=red, key=2, style=dotted];
m4_42 -> m4_43  [color=red, key=0, style=solid];
m4_44 -> m4_42  [color=blue, key=0, style=bold];
m4_61 -> m4_62  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_63 -> m4_61  [color=blue, key=0, style=bold];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_111  [key=2, style=dotted];
m4_118 -> m4_120  [key=2, style=dotted];
m4_119 -> m4_117  [color=blue, key=0, style=bold];
m4_90 -> m4_91  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_91 -> m4_93  [key=2, style=dotted];
m4_92 -> m4_90  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_1 -> m4_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_87 -> m4_88  [key=0, style=solid];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_90  [key=2, style=dotted];
m4_89 -> m4_87  [color=blue, key=0, style=bold];
m4_50 -> m4_51  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_33  [key=2, style=dotted];
m4_51 -> m4_53  [key=2, style=dotted];
m4_52 -> m4_50  [color=blue, key=0, style=bold];
m4_34 -> m4_35  [key=0, style=solid];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_33  [key=2, style=dotted];
m4_35 -> m4_37  [key=2, style=dotted];
m4_36 -> m4_34  [color=blue, key=0, style=bold];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_129  [color=crimson, key=0, style=bold];
m4_121 -> m4_132  [color=crimson, key=0, style=bold];
m4_121 -> m4_127  [color=darkseagreen4, key=1, label="System.Func<T, T, bool>", style=dashed];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_134  [key=2, style=dotted];
m4_122 -> m4_124  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_122 -> m4_125  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_122 -> m4_126  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_122 -> m4_127  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_122 -> m4_128  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_122 -> m4_130  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_122 -> m4_131  [color=darkseagreen4, key=1, label=e, style=dashed];
m4_129 -> m4_130  [key=0, style=solid];
m4_132 -> m4_133  [key=0, style=solid];
m4_127 -> m4_128  [key=0, style=solid];
m4_127 -> m4_129  [key=0, style=solid];
m4_127 -> m4_86  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_133  [key=0, style=solid];
m4_123 -> m4_135  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_136  [key=2, style=dotted];
m4_124 -> m4_128  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_124 -> m4_129  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_124 -> m4_132  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_125 -> m4_126  [key=0, style=solid];
m4_125 -> m4_127  [color=darkseagreen4, key=1, label=pred, style=dashed];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_132  [key=0, style=solid];
m4_126 -> m4_135  [key=2, style=dotted];
m4_128 -> m4_131  [key=0, style=solid];
m4_128 -> m4_137  [key=2, style=dotted];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_136  [key=2, style=dotted];
m4_130 -> m4_132  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_131 -> m4_126  [key=0, style=solid];
m4_133 -> m4_121  [color=blue, key=0, style=bold];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_3  [key=2, style=dotted];
m4_12 -> m4_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_12 -> m4_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_13 -> m4_11  [color=blue, key=0, style=bold];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=2, style=dotted];
m4_30 -> m4_33  [key=2, style=dotted];
m4_31 -> m4_29  [color=blue, key=0, style=bold];
m4_94 -> m4_95  [key=0, style=solid];
m4_94 -> m4_96  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m4_94 -> m4_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_97  [key=0, style=solid];
m4_96 -> m4_98  [key=0, style=solid];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_99  [key=2, style=dotted];
m4_98 -> m4_94  [color=blue, key=0, style=bold];
m4_138 -> m4_139  [key=0, style=solid];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_141  [key=2, style=dotted];
m4_139 -> m4_49  [key=2, style=dotted];
m4_140 -> m4_138  [color=blue, key=0, style=bold];
m4_100 -> m4_101  [key=0, style=solid];
m4_100 -> m4_104  [color=crimson, key=0, style=bold];
m4_100 -> m4_107  [color=crimson, key=0, style=bold];
m4_100 -> m4_102  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_100 -> m4_103  [color=darkseagreen4, key=1, label=T, style=dashed];
m4_100 -> m4_105  [color=darkseagreen4, key=1, label="System.Func<T, T>", style=dashed];
m4_100 -> m4_106  [color=darkseagreen4, key=1, label=T, style=dashed];
m4_100 -> m4_108  [color=darkseagreen4, key=1, label="System.Func<T, T>", style=dashed];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_103  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_101 -> m4_104  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_101 -> m4_105  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_101 -> m4_106  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_101 -> m4_107  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_101 -> m4_108  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_104 -> m4_105  [key=0, style=solid];
m4_107 -> m4_108  [key=0, style=solid];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_106  [key=0, style=solid];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_109  [key=0, style=solid];
m4_103 -> m4_110  [key=2, style=dotted];
m4_105 -> m4_103  [key=0, style=solid];
m4_105 -> m4_111  [key=2, style=dotted];
m4_105 -> m4_105  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_109  [key=0, style=solid];
m4_106 -> m4_110  [key=2, style=dotted];
m4_108 -> m4_103  [key=0, style=solid];
m4_108 -> m4_111  [key=2, style=dotted];
m4_108 -> m4_108  [color=darkseagreen4, key=1, label=current, style=dashed];
m4_109 -> m4_100  [color=blue, key=0, style=bold];
m4_38 -> m4_39  [color=red, key=0, style=solid];
m4_38 -> m4_43  [color=red, key=1, label="System.Collections.Generic.ISet<T>", style=dashed];
m4_39 -> m4_40  [color=red, key=0, style=solid];
m4_39 -> m4_41  [color=red, key=2, style=dotted];
m4_39 -> m4_42  [color=red, key=1, label="lambda expression", style=dashed];
m4_40 -> m4_38  [color=blue, key=0, style=bold];
m4_68 -> m4_69  [key=0, style=solid];
m4_68 -> m4_71  [color=darkseagreen4, key=1, label="System.Func<TSearch, TItem, int>", style=dashed];
m4_68 -> m4_74  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<TItem>", style=dashed];
m4_68 -> m4_77  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<TItem>", style=dashed];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_71  [key=0, style=solid];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_73  [key=0, style=solid];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_76  [color=darkseagreen4, key=1, label=upper, style=dashed];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_86  [key=2, style=dotted];
m4_77 -> m4_80  [color=darkseagreen4, key=1, label=comparisonResult, style=dashed];
m4_70 -> m4_84  [key=0, style=solid];
m4_70 -> m4_85  [key=2, style=dotted];
m4_72 -> m4_84  [key=0, style=solid];
m4_72 -> m4_85  [key=2, style=dotted];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_75  [color=darkseagreen4, key=1, label=lower, style=dashed];
m4_73 -> m4_76  [color=darkseagreen4, key=1, label=lower, style=dashed];
m4_73 -> m4_83  [color=darkseagreen4, key=1, label=lower, style=dashed];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_83  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_79  [color=darkseagreen4, key=1, label=middle, style=dashed];
m4_76 -> m4_81  [color=darkseagreen4, key=1, label=middle, style=dashed];
m4_76 -> m4_82  [color=darkseagreen4, key=1, label=middle, style=dashed];
m4_83 -> m4_84  [key=0, style=solid];
m4_79 -> m4_75  [key=0, style=solid];
m4_81 -> m4_75  [key=0, style=solid];
m4_81 -> m4_83  [color=darkseagreen4, key=1, label=lower, style=dashed];
m4_82 -> m4_84  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_80  [key=0, style=solid];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_82  [key=0, style=solid];
m4_84 -> m4_68  [color=blue, key=0, style=bold];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_114  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
m4_112 -> m4_118  [color=darkseagreen4, key=1, label="System.Func<T, TPropery>", style=dashed];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_116  [key=2, style=dotted];
m4_113 -> m4_118  [color=darkseagreen4, key=1, label=hash, style=dashed];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_41  [key=2, style=dotted];
m4_114 -> m4_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_115 -> m4_112  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=2, style=dotted];
m4_21 -> m4_24  [key=2, style=dotted];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_54 -> m4_55  [key=0, style=solid];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_10  [key=2, style=dotted];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_58  [key=2, style=dotted];
m4_56 -> m4_59  [key=2, style=dotted];
m4_56 -> m4_60  [key=2, style=dotted];
m4_56 -> m4_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_57 -> m4_54  [color=blue, key=0, style=bold];
m4_142 -> m4_43  [color=red, key=1, label="System.Collections.Generic.ISet<T>", style=dashed];
m4_143 -> m4_118  [color=darkseagreen4, key=1, label="System.Func<T, TPropery>", style=dashed];
m4_144 -> m4_118  [color=darkseagreen4, key=1, label=hash, style=dashed];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_0  [key=2, style=dotted];
m9_8 -> m9_10  [color=darkseagreen4, key=1, label=order, style=dashed];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_12  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_7  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_6 -> m9_4  [color=blue, key=0, style=bold];
m9_13 -> m9_5  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m9_13 -> m9_9  [color=darkseagreen4, key=1, label="QuantConnect.Orders.MarketOnCloseOrder", style=dashed];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_34  [color=darkseagreen4, key=1, label="QuantConnect.Data.Market.TradeBars", style=dashed];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_32  [color=green, key=0, style=solid];
m10_30 -> m10_44  [key=2, style=dotted];
m10_30 -> m10_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_45  [key=2, style=dotted];
m10_31 -> m10_43  [key=0, style=solid];
m10_32 -> m10_33  [color=green, key=0, style=solid];
m10_32 -> m10_34  [color=green, key=0, style=solid];
m10_33 -> m10_43  [color=green, key=0, style=solid];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_46  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_15  [key=2, style=dotted];
m10_36 -> m10_16  [key=2, style=dotted];
m10_36 -> m10_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_36 -> m10_38  [color=darkseagreen4, key=1, label=values, style=dashed];
m10_36 -> m10_40  [color=green, key=1, label=values, style=dashed];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_40  [color=green, key=1, label=holding, style=dashed];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_40  [color=green, key=0, style=solid];
m10_38 -> m10_47  [key=2, style=dotted];
m10_40 -> m10_41  [color=green, key=0, style=solid];
m10_40 -> m10_42  [color=green, key=0, style=solid];
m10_40 -> m10_49  [color=green, key=2, style=dotted];
m10_39 -> m10_42  [key=0, style=solid];
m10_39 -> m10_48  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_50  [key=2, style=dotted];
m10_42 -> m10_43  [key=0, style=solid];
m10_43 -> m10_29  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_10  [key=2, style=dotted];
m10_2 -> m10_3  [color=green, key=0, style=solid];
m10_2 -> m10_11  [key=2, style=dotted];
m10_3 -> m10_4  [color=green, key=0, style=solid];
m10_3 -> d47  [color=green, key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_8  [color=green, key=1, label=count, style=dashed];
m10_4 -> m10_4  [color=green, key=3, label="Local variable int count", style=bold];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_8  [color=green, key=1, label=offset, style=dashed];
m10_5 -> m10_18  [color=darkseagreen4, key=1, label=offset, style=dashed];
m10_5 -> m10_5  [color=green, key=3, label="Local variable int offset", style=bold];
m10_8 -> m10_9  [color=green, key=0, style=solid];
m10_8 -> m10_14  [color=green, key=2, style=dotted];
m10_8 -> m10_15  [color=green, key=2, style=dotted];
m10_8 -> m10_16  [color=green, key=2, style=dotted];
m10_8 -> m10_17  [color=green, key=1, label="lambda expression", style=dashed];
m10_8 -> m10_8  [color=green, key=3, label="method methodReturn QuantConnect.Indicators.Delay ", style=bold];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_6  [color=green, key=3, label="Local variable int period", style=bold];
m10_7 -> m10_8  [color=green, key=0, style=solid];
m10_7 -> m10_13  [key=2, style=dotted];
m10_7 -> m10_19  [color=darkseagreen4, key=1, label=sma, style=dashed];
m10_9 -> m10_0  [color=blue, key=0, style=bold];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<decimal>", style=dashed];
m10_57 -> m10_63  [color=green, key=3, label="method methodReturn bool IsAscending", style=bold];
m10_57 -> m10_65  [color=green, key=3, label="method methodReturn bool IsAscending", style=bold];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_60  [color=darkseagreen4, key=1, label=last, style=dashed];
m10_58 -> m10_62  [color=darkseagreen4, key=1, label=last, style=dashed];
m10_58 -> m10_58  [color=green, key=3, label="Local variable decimal? last", style=bold];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_65  [key=0, style=solid];
m10_59 -> m10_61  [color=green, key=1, label=val, style=dashed];
m10_59 -> m10_62  [color=darkseagreen4, key=1, label=val, style=dashed];
m10_59 -> m10_64  [color=darkseagreen4, key=1, label=val, style=dashed];
m10_60 -> m10_61  [color=green, key=0, style=solid];
m10_60 -> m10_62  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_64  [key=0, style=solid];
m10_65 -> m10_66  [key=0, style=solid];
m10_61 -> m10_59  [color=green, key=0, style=solid];
m10_61 -> m10_62  [color=green, key=1, label=last, style=dashed];
m10_64 -> m10_59  [key=0, style=solid];
m10_63 -> m10_66  [key=0, style=solid];
m10_66 -> m10_57  [color=blue, key=0, style=bold];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<decimal>", style=dashed];
m10_67 -> m10_65  [color=green, key=3, label="method methodReturn bool IsDescending", style=bold];
m10_67 -> m10_63  [color=green, key=3, label="method methodReturn bool IsDescending", style=bold];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_70  [color=darkseagreen4, key=1, label=last, style=dashed];
m10_68 -> m10_72  [color=darkseagreen4, key=1, label=last, style=dashed];
m10_68 -> m10_58  [color=green, key=3, label="Local variable decimal? last", style=bold];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_75  [key=0, style=solid];
m10_69 -> m10_71  [color=darkseagreen4, key=1, label=val, style=dashed];
m10_69 -> m10_72  [color=darkseagreen4, key=1, label=val, style=dashed];
m10_69 -> m10_74  [color=darkseagreen4, key=1, label=val, style=dashed];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_72  [key=0, style=solid];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_74  [key=0, style=solid];
m10_75 -> m10_76  [key=0, style=solid];
m10_71 -> m10_69  [key=0, style=solid];
m10_71 -> m10_72  [color=darkseagreen4, key=1, label=last, style=dashed];
m10_74 -> m10_69  [key=0, style=solid];
m10_73 -> m10_76  [key=0, style=solid];
m10_76 -> m10_67  [color=blue, key=0, style=bold];
m10_54 -> m10_55  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_23  [key=2, style=dotted];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_24  [key=2, style=dotted];
m10_19 -> m10_21  [color=darkseagreen4, key=1, label=delayedSma, style=dashed];
m10_17 -> m10_18  [key=0, style=solid];
m10_20 -> m10_21  [key=0, style=solid];
m10_20 -> m10_25  [key=2, style=dotted];
m10_20 -> m10_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_21 -> m10_22  [key=0, style=solid];
m10_26 -> m10_27  [key=0, style=solid];
m10_22 -> m10_17  [color=blue, key=0, style=bold];
m10_27 -> m10_28  [key=0, style=solid];
m10_28 -> m10_26  [color=blue, key=0, style=bold];
m10_51 -> m10_52  [key=0, style=solid];
m10_52 -> m10_53  [key=0, style=solid];
m10_53 -> m10_51  [color=blue, key=0, style=bold];
m10_55 -> m10_56  [key=0, style=solid];
m10_56 -> m10_54  [color=blue, key=0, style=bold];
m10_77 -> m10_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_3  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_8  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_32  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_35  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_36  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_37  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_40  [color=green, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_77 -> m10_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.CSharp.DisplacedMovingAverageRibbon", style=dashed];
m10_78 -> m10_18  [color=darkseagreen4, key=1, label=offset, style=dashed];
m10_79 -> m10_19  [color=darkseagreen4, key=1, label=sma, style=dashed];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_2  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [color=blue, key=0, style=bold];
m13_119 -> m13_126  [key=0, style=solid];
m13_119 -> m13_128  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m13_119 -> m13_76  [color=darkorchid, key=3, label="Parameter variable System.Reflection.Assembly assembly", style=bold];
m13_126 -> m13_127  [key=0, style=solid];
m13_126 -> m13_138  [key=2, style=dotted];
m13_126 -> m13_136  [color=darkseagreen4, key=1, label=types, style=dashed];
m13_128 -> m13_129  [key=0, style=solid];
m13_128 -> m13_131  [key=0, style=solid];
m13_128 -> m13_139  [key=2, style=dotted];
m13_127 -> m13_128  [key=0, style=solid];
m13_136 -> m13_137  [key=0, style=solid];
m13_129 -> m13_130  [key=0, style=solid];
m13_131 -> m13_132  [key=0, style=solid];
m13_131 -> m13_133  [key=0, style=solid];
m13_130 -> m13_131  [key=0, style=solid];
m13_130 -> m13_132  [color=darkseagreen4, key=1, label=assemblyTypes, style=dashed];
m13_132 -> m13_134  [key=0, style=solid];
m13_132 -> m13_136  [key=0, style=solid];
m13_132 -> m13_140  [key=2, style=dotted];
m13_132 -> m13_141  [key=2, style=dotted];
m13_132 -> m13_142  [key=2, style=dotted];
m13_132 -> m13_132  [color=darkseagreen4, key=1, label=t, style=dashed];
m13_133 -> m13_134  [key=0, style=solid];
m13_133 -> m13_136  [key=0, style=solid];
m13_133 -> m13_118  [key=2, style=dotted];
m13_134 -> m13_135  [key=0, style=solid];
m13_135 -> m13_136  [key=0, style=solid];
m13_135 -> m13_64  [key=2, style=dotted];
m13_137 -> m13_119  [color=blue, key=0, style=bold];
m13_157 -> m13_158  [key=0, style=solid];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_5  [key=2, style=dotted];
m13_4 -> m13_2  [color=blue, key=0, style=bold];
m13_158 -> m13_159  [key=0, style=solid];
m13_158 -> m13_16  [key=2, style=dotted];
m13_159 -> m13_157  [color=blue, key=0, style=bold];
m13_16 -> m13_17  [key=0, style=solid];
m13_16 -> m13_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_16 -> m13_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_16 -> m13_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_16 -> m13_20  [color=darkorchid, key=3, label="method methodReturn bool TryCreateAlgorithmInstance", style=bold];
m13_16 -> m13_143  [color=darkorchid, key=3, label="Parameter variable string assemblyPath", style=bold];
m13_16 -> m13_144  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Interfaces.IAlgorithm algorithmInstance", style=bold];
m13_16 -> m13_145  [color=darkorchid, key=3, label="Parameter variable string errorMessage", style=bold];
m13_17 -> m13_18  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_21  [key=0, style=solid];
m13_19 -> m13_27  [key=2, style=dotted];
m13_23 -> m13_25  [key=0, style=solid];
m13_23 -> m13_28  [key=2, style=dotted];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_29  [key=2, style=dotted];
m13_24 -> m13_26  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_18 -> m13_19  [key=0, style=solid];
m13_20 -> m13_26  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_24  [key=0, style=solid];
m13_22 -> m13_23  [key=0, style=solid];
m13_25 -> m13_26  [key=0, style=solid];
m13_26 -> m13_16  [color=blue, key=0, style=bold];
m13_143 -> m13_144  [key=0, style=solid];
m13_143 -> m13_148  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_143 -> m13_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_143 -> m13_145  [color=darkorchid, key=3, label="Parameter variable string errorMessage", style=bold];
m13_144 -> m13_145  [key=0, style=solid];
m13_144 -> m13_67  [color=darkorchid, key=3, label="Local variable QuantConnect.Interfaces.IAlgorithm instance", style=bold];
m13_148 -> m13_149  [key=0, style=solid];
m13_148 -> m13_156  [key=2, style=dotted];
m13_148 -> m13_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_148 -> m13_150  [color=darkseagreen4, key=1, label=error, style=dashed];
m13_148 -> m13_151  [color=darkseagreen4, key=1, label=complete, style=dashed];
m13_148 -> m13_152  [color=darkseagreen4, key=1, label=error, style=dashed];
m13_148 -> m13_153  [color=darkseagreen4, key=1, label=success, style=dashed];
m13_145 -> m13_146  [key=0, style=solid];
m13_146 -> m13_147  [key=0, style=solid];
m13_146 -> m13_20  [color=darkorchid, key=3, label="Local variable bool success", style=bold];
m13_146 -> m13_16  [color=darkorchid, key=3, label="Local variable bool success", style=bold];
m13_147 -> m13_148  [key=0, style=solid];
m13_147 -> m13_155  [key=2, style=dotted];
m13_149 -> m13_150  [key=0, style=solid];
m13_149 -> m13_153  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_149 -> m13_154  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_150 -> m13_151  [key=0, style=solid];
m13_150 -> m13_154  [color=darkseagreen4, key=1, label="out string", style=dashed];
m13_151 -> m13_152  [key=0, style=solid];
m13_151 -> m13_153  [key=0, style=solid];
m13_152 -> m13_153  [key=0, style=solid];
m13_152 -> m13_154  [color=darkseagreen4, key=1, label="out string", style=dashed];
m13_153 -> m13_154  [key=0, style=solid];
m13_154 -> m13_143  [color=blue, key=0, style=bold];
m13_29 -> m13_65  [key=0, style=solid];
m13_29 -> m13_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_29 -> m13_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_29 -> m13_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_29 -> m13_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_29 -> m13_81  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_29 -> m13_16  [color=darkorchid, key=3, label="Parameter variable string errorMessage", style=bold];
m13_29 -> m13_20  [color=darkorchid, key=3, label="method methodReturn bool TryCreateILAlgorithm", style=bold];
m13_29 -> m13_111  [color=darkorchid, key=3, label="method methodReturn bool TryCreateILAlgorithm", style=bold];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_112  [color=darkseagreen4, key=1, label="out string", style=dashed];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_55  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_74  [color=darkseagreen4, key=1, label=mdbFilename, style=dashed];
m13_70 -> m13_75  [color=darkseagreen4, key=1, label=mdbFilename, style=dashed];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_114  [key=2, style=dotted];
m13_71 -> m13_73  [color=darkseagreen4, key=1, label=pdbFilename, style=dashed];
m13_79 -> m13_83  [key=0, style=solid];
m13_79 -> m13_116  [key=2, style=dotted];
m13_79 -> m13_87  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m13_79 -> m13_99  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_115  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_77  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m13_67 -> m13_82  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m13_67 -> m13_67  [color=darkorchid, key=3, label="Local variable byte[] debugInformationBytes", style=bold];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_80  [key=0, style=solid];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_117  [key=2, style=dotted];
m13_82 -> m13_87  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m13_82 -> m13_99  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_76  [key=0, style=solid];
m13_69 -> m13_113  [key=2, style=dotted];
m13_76 -> m13_77  [key=0, style=solid];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_76  [key=0, style=solid];
m13_74 -> m13_27  [key=2, style=dotted];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_115  [key=2, style=dotted];
m13_75 -> m13_77  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m13_75 -> m13_82  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_74  [key=0, style=solid];
m13_72 -> m13_27  [key=2, style=dotted];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_115  [key=2, style=dotted];
m13_73 -> m13_77  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m13_73 -> m13_82  [color=darkseagreen4, key=1, label=debugInformationBytes, style=dashed];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_60  [key=2, style=dotted];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_60  [key=2, style=dotted];
m13_83 -> m13_84  [key=0, style=solid];
m13_83 -> m13_87  [key=0, style=solid];
m13_87 -> m13_88  [key=0, style=solid];
m13_87 -> m13_119  [key=2, style=dotted];
m13_87 -> m13_89  [color=darkseagreen4, key=1, label=types, style=dashed];
m13_87 -> m13_93  [color=darkseagreen4, key=1, label=types, style=dashed];
m13_87 -> m13_94  [color=darkseagreen4, key=1, label=types, style=dashed];
m13_87 -> m13_95  [color=darkseagreen4, key=1, label=types, style=dashed];
m13_87 -> m13_99  [color=darkseagreen4, key=1, label=types, style=dashed];
m13_99 -> m13_100  [key=0, style=solid];
m13_99 -> m13_124  [key=2, style=dotted];
m13_99 -> m13_101  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_99 -> m13_112  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_112  [color=darkseagreen4, key=1, label="out string", style=dashed];
m13_85 -> m13_86  [key=0, style=solid];
m13_85 -> m13_118  [key=2, style=dotted];
m13_86 -> m13_112  [key=0, style=solid];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_120  [key=2, style=dotted];
m13_88 -> m13_121  [key=2, style=dotted];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_93  [key=0, style=solid];
m13_93 -> m13_94  [key=0, style=solid];
m13_93 -> m13_99  [key=0, style=solid];
m13_94 -> m13_95  [key=0, style=solid];
m13_94 -> m13_122  [key=2, style=dotted];
m13_95 -> m13_96  [key=0, style=solid];
m13_95 -> m13_99  [key=0, style=solid];
m13_95 -> m13_123  [key=2, style=dotted];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_112  [color=darkseagreen4, key=1, label="out string", style=dashed];
m13_91 -> m13_92  [key=0, style=solid];
m13_91 -> m13_118  [key=2, style=dotted];
m13_92 -> m13_112  [key=0, style=solid];
m13_96 -> m13_97  [key=0, style=solid];
m13_96 -> m13_112  [color=darkseagreen4, key=1, label="out string", style=dashed];
m13_97 -> m13_98  [key=0, style=solid];
m13_97 -> m13_118  [key=2, style=dotted];
m13_98 -> m13_112  [key=0, style=solid];
m13_100 -> m13_101  [key=0, style=solid];
m13_100 -> m13_102  [key=0, style=solid];
m13_100 -> m13_107  [key=0, style=solid];
m13_100 -> m13_111  [key=0, style=solid];
m13_101 -> m13_102  [key=0, style=solid];
m13_101 -> m13_107  [key=0, style=solid];
m13_101 -> m13_111  [key=0, style=solid];
m13_101 -> m13_125  [key=2, style=dotted];
m13_101 -> m13_60  [key=2, style=dotted];
m13_102 -> m13_103  [key=0, style=solid];
m13_107 -> m13_108  [key=0, style=solid];
m13_111 -> m13_112  [key=0, style=solid];
m13_103 -> m13_104  [key=0, style=solid];
m13_103 -> m13_64  [key=2, style=dotted];
m13_104 -> m13_105  [key=0, style=solid];
m13_104 -> m13_118  [key=2, style=dotted];
m13_105 -> m13_106  [key=0, style=solid];
m13_105 -> m13_111  [key=0, style=solid];
m13_106 -> m13_111  [key=0, style=solid];
m13_106 -> m13_112  [color=darkseagreen4, key=1, label="out string", style=dashed];
m13_108 -> m13_109  [key=0, style=solid];
m13_108 -> m13_64  [key=2, style=dotted];
m13_109 -> m13_110  [key=0, style=solid];
m13_109 -> m13_111  [key=0, style=solid];
m13_110 -> m13_111  [key=0, style=solid];
m13_110 -> m13_112  [color=darkseagreen4, key=1, label="out string", style=dashed];
m13_112 -> m13_29  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m13_160 -> m13_161  [key=0, style=solid];
m13_161 -> m13_162  [key=0, style=solid];
m13_161 -> m13_164  [key=0, style=solid];
m13_162 -> m13_163  [key=0, style=solid];
m13_162 -> m13_165  [key=2, style=dotted];
m13_163 -> m13_164  [key=0, style=solid];
m13_164 -> m13_160  [color=blue, key=0, style=bold];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_8  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, string>", style=dashed];
m13_6 -> m13_10  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m13_6 -> m13_11  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, string>", style=dashed];
m13_7 -> m13_8  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_10  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_11 -> m13_12  [key=0, style=solid];
m13_9 -> m13_13  [key=0, style=solid];
m13_9 -> m13_14  [key=2, style=dotted];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_15  [key=2, style=dotted];
m13_13 -> m13_6  [color=blue, key=0, style=bold];
m13_28 -> m13_30  [key=0, style=solid];
m13_28 -> m13_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_28 -> m13_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_28 -> m13_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_28 -> m13_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_28 -> m13_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m13_28 -> m13_16  [color=darkorchid, key=3, label="Parameter variable string errorMessage", style=bold];
m13_28 -> m13_20  [color=darkorchid, key=3, label="method methodReturn bool TryCreatePythonAlgorithm", style=bold];
m13_30 -> m13_31  [key=0, style=solid];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_35  [key=0, style=solid];
m13_32 -> m13_27  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_35 -> m13_36  [key=0, style=solid];
m13_35 -> m13_55  [key=2, style=dotted];
m13_35 -> m13_37  [color=darkseagreen4, key=1, label=pythonFile, style=dashed];
m13_45 -> m13_46  [key=0, style=solid];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_54  [color=darkseagreen4, key=1, label="out string", style=dashed];
m13_31 -> m13_32  [key=0, style=solid];
m13_34 -> m13_54  [key=0, style=solid];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_56  [key=2, style=dotted];
m13_36 -> m13_42  [color=darkseagreen4, key=1, label=moduleName, style=dashed];
m13_36 -> m13_43  [color=darkseagreen4, key=1, label=moduleName, style=dashed];
m13_37 -> m13_38  [key=0, style=solid];
m13_37 -> m13_15  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_60  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_61  [key=2, style=dotted];
m13_43 -> m13_48  [color=darkseagreen4, key=1, label=module, style=dashed];
m13_43 -> m13_49  [color=red, key=1, label=module, style=dashed];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_41  [key=0, style=solid];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_57  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_59  [key=2, style=dotted];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_58  [key=2, style=dotted];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_47  [key=0, style=solid];
m13_48 -> m13_49  [color=red, key=0, style=solid];
m13_48 -> m13_62  [key=2, style=dotted];
m13_48 -> m13_53  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_48 -> m13_54  [color=darkseagreen4, key=1, label="out QuantConnect.Interfaces.IAlgorithm", style=dashed];
m13_49 -> m13_50  [color=red, key=0, style=solid];
m13_49 -> m13_53  [color=red, key=0, style=solid];
m13_49 -> m13_63  [color=red, key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_60  [key=2, style=dotted];
m13_46 -> m13_54  [key=0, style=solid];
m13_53 -> m13_54  [key=0, style=solid];
m13_50 -> m13_51  [key=0, style=solid];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_64  [key=2, style=dotted];
m13_54 -> m13_28  [color=blue, key=0, style=bold];
m13_166 -> m13_7  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_10  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_11  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_21  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_23  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_24  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_94  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_148  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_158  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_161  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_162  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_166 -> m13_163  [color=darkseagreen4, key=1, label="QuantConnect.AlgorithmFactory.Loader", style=dashed];
m13_167 -> m13_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> d22  [key=2, style=dotted];
m14_19 -> m14_33  [color=darkseagreen4, key=1, label=dropboxBaseDataUniverseSelectionStatistics, style=dashed];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> d22  [key=2, style=dotted];
m14_20 -> m14_33  [color=darkseagreen4, key=1, label=dropboxUniverseSelectionStatistics, style=dashed];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_23  [key=0, style=solid];
m14_21 -> d22  [key=2, style=dotted];
m14_21 -> m14_33  [color=darkseagreen4, key=1, label=parameterizedStatistics, style=dashed];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_24  [key=2, style=dotted];
m14_22 -> d22  [key=2, style=dotted];
m14_22 -> m14_33  [color=darkseagreen4, key=1, label=historyAlgorithmStatistics, style=dashed];
m14_23 -> m14_19  [color=blue, key=0, style=bold];
m14_23 -> d22  [key=2, style=dotted];
m14_23 -> m14_33  [color=darkseagreen4, key=1, label=coarseFundamentalTop5AlgorithmStatistics, style=dashed];
m14_23 -> m14_24  [key=0, style=solid];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> d22  [key=2, style=dotted];
m14_16 -> m14_33  [color=darkseagreen4, key=1, label=universeSelectionRegressionStatistics, style=dashed];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_12  [key=2, style=dotted];
m14_17 -> d22  [key=2, style=dotted];
m14_17 -> m14_33  [color=darkseagreen4, key=1, label=customDataRegressionStatistics, style=dashed];
m14_18 -> m14_16  [color=blue, key=0, style=bold];
m14_18 -> d22  [key=2, style=dotted];
m14_18 -> m14_33  [color=darkseagreen4, key=1, label=addRemoveSecurityRegressionStatistics, style=dashed];
m14_18 -> m14_19  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> d22  [key=2, style=dotted];
m14_13 -> m14_33  [color=darkseagreen4, key=1, label=limitFillRegressionStatistics, style=dashed];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_12  [key=2, style=dotted];
m14_14 -> d22  [key=2, style=dotted];
m14_14 -> m14_33  [color=darkseagreen4, key=1, label=updateOrderRegressionStatistics, style=dashed];
m14_15 -> m14_13  [color=blue, key=0, style=bold];
m14_15 -> d22  [key=2, style=dotted];
m14_15 -> m14_33  [color=darkseagreen4, key=1, label=regressionStatistics, style=dashed];
m14_15 -> m14_16  [key=0, style=solid];
m14_31 -> d22  [key=2, style=dotted];
m14_31 -> m14_33  [color=darkseagreen4, key=1, label=optionExerciseAssignRegressionAlgorithmStatistics, style=dashed];
m14_31 -> m14_32  [key=0, style=solid];
m14_30 -> d22  [key=2, style=dotted];
m14_30 -> m14_33  [color=darkseagreen4, key=1, label=weeklyUniverseSelectionRegressionAlgorithmStatistics, style=dashed];
m14_30 -> m14_31  [key=0, style=solid];
m14_40 -> m14_41  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_7  [key=2, style=dotted];
m14_5 -> m14_8  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid];
m14_6 -> m14_4  [color=blue, key=0, style=bold];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_43  [key=2, style=dotted];
m14_41 -> m14_44  [key=2, style=dotted];
m14_42 -> m14_40  [color=blue, key=0, style=bold];
m14_12 -> m14_25  [key=0, style=solid];
m14_12 -> m14_26  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_12 -> m14_13  [color=green, key=0, style=solid];
m14_12 -> d22  [color=green, key=2, style=dotted];
m14_12 -> m14_33  [color=green, key=1, label=basicTemplateOptionsStatistics, style=dashed];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> d22  [key=2, style=dotted];
m14_25 -> m14_33  [color=darkseagreen4, key=1, label=macdTrendAlgorithmStatistics, style=dashed];
m14_26 -> m14_27  [color=red, key=0, style=solid];
m14_26 -> m14_29  [key=2, style=dotted];
m14_26 -> m14_30  [key=2, style=dotted];
m14_26 -> d22  [key=2, style=dotted];
m14_26 -> m14_33  [color=darkseagreen4, key=1, label=optionSplitRegressionAlgorithmStatistics, style=dashed];
m14_27 -> m14_28  [color=red, key=0, style=solid];
m14_27 -> m14_31  [color=red, key=2, style=dotted];
m14_27 -> d22  [key=2, style=dotted];
m14_27 -> m14_33  [color=darkseagreen4, key=1, label=optionRenameRegressionAlgorithmStatistics, style=dashed];
m14_28 -> m14_12  [color=blue, key=0, style=bold];
m14_28 -> d22  [key=2, style=dotted];
m14_28 -> m14_33  [color=darkseagreen4, key=1, label=optionOpenInterestRegressionAlgorithmStatistics, style=dashed];
m14_28 -> m14_29  [key=0, style=solid];
m14_37 -> m14_45  [key=0, style=solid];
m14_37 -> m14_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m14_37 -> m14_47  [color=darkseagreen4, key=1, label="QuantConnect.Language", style=dashed];
m14_45 -> m14_46  [key=0, style=solid];
m14_46 -> m14_47  [key=0, style=solid];
m14_47 -> m14_48  [key=0, style=solid];
m14_48 -> m14_37  [color=blue, key=0, style=bold];
m14_29 -> d22  [key=2, style=dotted];
m14_29 -> m14_33  [color=darkseagreen4, key=1, label=optionChainConsistencyRegressionAlgorithmStatistics, style=dashed];
m14_29 -> m14_30  [key=0, style=solid];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m14_24 -> d22  [key=2, style=dotted];
m14_24 -> m14_33  [color=darkseagreen4, key=1, label=coarseFineFundamentalRegressionAlgorithmStatistics, style=dashed];
m14_24 -> m14_25  [key=0, style=solid];
m14_10 -> m14_11  [color=green, key=0, style=solid];
m14_10 -> m14_12  [key=2, style=dotted];
m14_11 -> m14_12  [color=green, key=0, style=solid];
m14_11 -> d22  [color=green, key=2, style=dotted];
m14_11 -> m14_33  [color=green, key=1, label=basicTemplateStatistics, style=dashed];
m14_11 -> m14_9  [color=blue, key=0, style=bold];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_36  [key=2, style=dotted];
m14_33 -> m14_37  [key=2, style=dotted];
m14_33 -> m14_38  [key=2, style=dotted];
m14_33 -> m14_39  [key=2, style=dotted];
m14_33 -> m14_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_33 -> m14_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_32 -> d22  [key=2, style=dotted];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_1  [color=darkseagreen4, key=1, label="QuantConnect.Logging.FileLogHandler", style=dashed];
m14_32 -> m14_10  [color=darkseagreen4, key=1, label="QuantConnect.Logging.FileLogHandler", style=dashed];
m14_32 -> m14_14  [color=darkseagreen4, key=1, label="QuantConnect.Logging.FileLogHandler", style=dashed];
m14_32 -> m14_17  [color=darkseagreen4, key=1, label="QuantConnect.Logging.FileLogHandler", style=dashed];
m14_32 -> m14_20  [color=darkseagreen4, key=1, label="QuantConnect.Logging.FileLogHandler", style=dashed];
m14_32 -> m14_21  [color=darkseagreen4, key=1, label="QuantConnect.Logging.FileLogHandler", style=dashed];
m14_32 -> m14_22  [color=darkseagreen4, key=1, label="QuantConnect.Logging.FileLogHandler", style=dashed];
m14_32 -> m14_25  [color=darkseagreen4, key=1, label="QuantConnect.Logging.FileLogHandler", style=dashed];
m14_32 -> m14_26  [color=darkseagreen4, key=1, label="QuantConnect.Logging.FileLogHandler", style=dashed];
m14_32 -> m14_27  [color=red, key=1, label="QuantConnect.Logging.FileLogHandler", style=dashed];
m14_34 -> m14_10  [color=blue, key=0, style=bold];
m14_9 -> m14_10  [key=0, style=solid];
m14_49 -> m14_45  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m14_49 -> m14_46  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m14_49 -> m14_47  [color=darkseagreen4, key=1, label="QuantConnect.Tests.RegressionTests.AlgorithmStatisticsTestParameters", style=dashed];
m16_1 -> m16_2  [key=0, style=solid];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_27  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_28  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_29  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_30  [key=2, style=dotted];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_31  [key=2, style=dotted];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_32  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_33  [key=2, style=dotted];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_34  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_35  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_36  [key=2, style=dotted];
m16_13 -> m16_14  [key=0, style=solid];
m16_13 -> m16_37  [key=2, style=dotted];
m16_14 -> m16_15  [key=0, style=solid];
m16_15 -> m16_16  [key=0, style=solid];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_38  [key=2, style=dotted];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_39  [key=2, style=dotted];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_40  [key=2, style=dotted];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_41  [key=2, style=dotted];
m16_20 -> m16_21  [key=0, style=solid];
m16_20 -> m16_42  [key=2, style=dotted];
m16_20 -> m16_43  [key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid];
m16_21 -> m16_44  [key=2, style=dotted];
m16_22 -> m16_23  [color=red, key=0, style=solid];
m16_22 -> m16_45  [key=2, style=dotted];
m16_23 -> m16_24  [color=red, key=0, style=solid];
m16_23 -> m16_46  [color=red, key=2, style=dotted];
m16_23 -> m16_36  [color=red, key=2, style=dotted];
m16_23 -> m16_47  [color=red, key=2, style=dotted];
m16_24 -> m16_25  [color=red, key=0, style=solid];
m16_24 -> m16_48  [key=2, style=dotted];
m16_25 -> m16_26  [color=red, key=0, style=solid];
m16_25 -> m16_49  [color=red, key=2, style=dotted];
m16_26 -> d16  [color=blue, key=0, style=bold];
m16_194 -> m16_195  [key=0, style=solid];
m16_194 -> m16_197  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m16_194 -> m16_199  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m16_194 -> m16_200  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m16_194 -> m16_201  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m16_194 -> m16_186  [color=darkorchid, key=3, label="Parameter variable DateTimeZone timeZone", style=bold];
m16_195 -> m16_196  [key=0, style=solid];
m16_195 -> m16_197  [key=0, style=solid];
m16_197 -> m16_198  [key=0, style=solid];
m16_197 -> m16_199  [key=0, style=solid];
m16_199 -> m16_200  [key=0, style=solid];
m16_199 -> m16_205  [key=2, style=dotted];
m16_200 -> m16_201  [key=0, style=solid];
m16_200 -> m16_30  [key=2, style=dotted];
m16_201 -> m16_202  [key=0, style=solid];
m16_201 -> m16_206  [key=2, style=dotted];
m16_196 -> m16_202  [key=0, style=solid];
m16_196 -> m16_203  [key=2, style=dotted];
m16_198 -> m16_202  [key=0, style=solid];
m16_198 -> m16_204  [key=2, style=dotted];
m16_202 -> m16_194  [color=blue, key=0, style=bold];
m16_325 -> m16_326  [key=0, style=solid];
m16_325 -> m16_33  [color=darkorchid, key=3, label="method methodReturn bool GetLocked", style=bold];
m16_326 -> m16_327  [key=0, style=solid];
m16_327 -> m16_325  [color=blue, key=0, style=bold];
m16_185 -> m16_186  [key=0, style=solid];
m16_185 -> m16_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_185 -> m16_189  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_186 -> m16_187  [key=0, style=solid];
m16_187 -> m16_188  [key=0, style=solid];
m16_187 -> m16_190  [key=0, style=solid];
m16_189 -> m16_191  [key=0, style=solid];
m16_189 -> m16_192  [key=2, style=dotted];
m16_189 -> m16_193  [key=2, style=dotted];
m16_188 -> m16_189  [key=0, style=solid];
m16_190 -> m16_191  [key=0, style=solid];
m16_190 -> m16_194  [key=2, style=dotted];
m16_191 -> m16_185  [color=blue, key=0, style=bold];
m16_100 -> m16_101  [key=0, style=solid];
m16_101 -> m16_102  [key=0, style=solid];
m16_101 -> m16_103  [key=0, style=solid];
m16_102 -> m16_101  [key=0, style=solid];
m16_102 -> m16_102  [color=darkseagreen4, key=1, label=dataFeed, style=dashed];
m16_103 -> m16_100  [color=blue, key=0, style=bold];
m16_484 -> m16_485  [key=0, style=solid];
m16_484 -> m16_396  [key=2, style=dotted];
m16_484 -> m16_397  [key=2, style=dotted];
m16_480 -> m16_481  [key=0, style=solid];
m16_480 -> m16_482  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_480 -> m16_483  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_480 -> m16_484  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m16_480 -> m16_477  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m16_481 -> m16_482  [key=0, style=solid];
m16_481 -> m16_394  [key=2, style=dotted];
m16_481 -> m16_484  [color=darkseagreen4, key=1, label=marketHoursDbEntry, style=dashed];
m16_482 -> m16_483  [key=0, style=solid];
m16_482 -> m16_487  [key=2, style=dotted];
m16_482 -> m16_488  [key=2, style=dotted];
m16_482 -> m16_484  [color=darkseagreen4, key=1, label=symbolObject, style=dashed];
m16_483 -> m16_484  [key=0, style=solid];
m16_483 -> m16_395  [key=2, style=dotted];
m16_485 -> m16_486  [key=0, style=solid];
m16_485 -> m16_76  [key=2, style=dotted];
m16_486 -> m16_480  [color=blue, key=0, style=bold];
m16_520 -> m16_521  [key=0, style=solid];
m16_521 -> m16_522  [key=0, style=solid];
m16_521 -> m16_523  [key=2, style=dotted];
m16_522 -> m16_520  [color=blue, key=0, style=bold];
m16_253 -> m16_254  [key=0, style=solid];
m16_254 -> m16_255  [key=0, style=solid];
m16_254 -> m16_256  [key=2, style=dotted];
m16_255 -> m16_253  [color=blue, key=0, style=bold];
m16_35 -> m16_99  [color=darkorchid, key=3, label="Field variable string _previousErrorMessage", style=bold];
m16_35 -> m16_506  [color=darkorchid, key=3, label="Field variable string _previousErrorMessage", style=bold];
m16_279 -> m16_280  [key=0, style=solid];
m16_280 -> m16_281  [key=0, style=solid];
m16_280 -> m16_27  [key=2, style=dotted];
m16_281 -> m16_282  [key=0, style=solid];
m16_281 -> m16_28  [key=2, style=dotted];
m16_281 -> m16_286  [key=2, style=dotted];
m16_281 -> m16_287  [key=2, style=dotted];
m16_281 -> m16_281  [color=darkseagreen4, key=1, label=end, style=dashed];
m16_282 -> m16_283  [key=0, style=solid];
m16_282 -> m16_285  [key=0, style=solid];
m16_282 -> m16_288  [key=2, style=dotted];
m16_283 -> m16_284  [key=0, style=solid];
m16_284 -> m16_285  [key=0, style=solid];
m16_284 -> m16_203  [key=2, style=dotted];
m16_285 -> m16_279  [color=blue, key=0, style=bold];
m16_159 -> m16_160  [key=0, style=solid];
m16_160 -> m16_159  [color=blue, key=0, style=bold];
m16_217 -> m16_218  [key=0, style=solid];
m16_217 -> m16_220  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.IBrokerageModel", style=dashed];
m16_218 -> m16_219  [key=0, style=solid];
m16_220 -> m16_221  [key=0, style=solid];
m16_220 -> m16_46  [key=2, style=dotted];
m16_220 -> m16_47  [key=2, style=dotted];
m16_219 -> m16_220  [key=0, style=solid];
m16_219 -> m16_225  [key=0, style=solid];
m16_221 -> m16_222  [key=0, style=solid];
m16_221 -> m16_225  [key=0, style=solid];
m16_221 -> m16_223  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_221 -> m16_224  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_222 -> m16_223  [key=0, style=solid];
m16_222 -> m16_224  [color=darkseagreen4, key=1, label=leverage, style=dashed];
m16_223 -> m16_224  [key=0, style=solid];
m16_223 -> m16_226  [key=2, style=dotted];
m16_224 -> m16_221  [key=0, style=solid];
m16_224 -> m16_227  [key=2, style=dotted];
m16_225 -> m16_217  [color=blue, key=0, style=bold];
m16_257 -> m16_258  [key=0, style=solid];
m16_258 -> m16_259  [key=0, style=solid];
m16_258 -> m16_256  [key=2, style=dotted];
m16_259 -> m16_257  [color=blue, key=0, style=bold];
m16_288 -> m16_309  [key=0, style=solid];
m16_288 -> m16_311  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_288 -> m16_314  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_288 -> m16_316  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_288 -> m16_280  [color=darkorchid, key=3, label="Parameter variable System.DateTime end", style=bold];
m16_309 -> m16_310  [key=0, style=solid];
m16_309 -> m16_311  [key=0, style=solid];
m16_311 -> m16_312  [key=0, style=solid];
m16_311 -> m16_313  [key=0, style=solid];
m16_311 -> m16_28  [key=2, style=dotted];
m16_314 -> m16_315  [key=0, style=solid];
m16_314 -> m16_316  [key=0, style=solid];
m16_316 -> m16_317  [key=0, style=solid];
m16_316 -> m16_43  [key=2, style=dotted];
m16_316 -> m16_307  [key=2, style=dotted];
m16_316 -> m16_28  [key=2, style=dotted];
m16_316 -> m16_321  [key=2, style=dotted];
m16_316 -> m16_316  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_316 -> m16_318  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_310 -> m16_320  [key=0, style=solid];
m16_312 -> m16_313  [key=0, style=solid];
m16_312 -> m16_28  [key=2, style=dotted];
m16_312 -> m16_314  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_312 -> m16_316  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_313 -> m16_314  [key=0, style=solid];
m16_313 -> m16_316  [key=0, style=solid];
m16_313 -> m16_306  [key=2, style=dotted];
m16_315 -> m16_320  [key=0, style=solid];
m16_315 -> m16_203  [key=2, style=dotted];
m16_317 -> m16_318  [key=0, style=solid];
m16_317 -> m16_319  [key=0, style=solid];
m16_318 -> m16_320  [key=0, style=solid];
m16_319 -> m16_320  [key=0, style=solid];
m16_319 -> m16_203  [key=2, style=dotted];
m16_320 -> m16_288  [color=blue, key=0, style=bold];
m16_338 -> m16_339  [key=0, style=solid];
m16_339 -> m16_340  [key=0, style=solid];
m16_340 -> m16_341  [key=0, style=solid];
m16_340 -> m16_337  [key=2, style=dotted];
m16_341 -> m16_338  [color=blue, key=0, style=bold];
m16_173 -> m16_174  [key=0, style=solid];
m16_174 -> m16_173  [color=blue, key=0, style=bold];
m16_512 -> m16_513  [key=0, style=solid];
m16_513 -> m16_514  [key=0, style=solid];
m16_513 -> m16_212  [key=2, style=dotted];
m16_514 -> m16_515  [key=0, style=solid];
m16_515 -> m16_512  [color=blue, key=0, style=bold];
m16_441 -> m16_442  [key=0, style=solid];
m16_441 -> m16_443  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_441 -> m16_447  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_441 -> m16_465  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_441 -> m16_449  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_441 -> m16_450  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_441 -> m16_451  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m16_442 -> m16_443  [key=0, style=solid];
m16_442 -> m16_75  [color=darkorchid, key=3, label="Local variable QuantConnect.Securities.Security security", style=bold];
m16_443 -> m16_444  [key=0, style=solid];
m16_443 -> m16_456  [key=0, style=solid];
m16_443 -> m16_74  [key=2, style=dotted];
m16_443 -> m16_445  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_443 -> m16_446  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_447 -> m16_448  [key=0, style=solid];
m16_447 -> m16_460  [key=2, style=dotted];
m16_447 -> m16_136  [key=2, style=dotted];
m16_447 -> m16_464  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_447 -> m16_449  [color=darkseagreen4, key=1, label=universe, style=dashed];
m16_447 -> m16_454  [color=darkseagreen4, key=1, label=universe, style=dashed];
m16_449 -> m16_450  [key=0, style=solid];
m16_449 -> m16_461  [key=2, style=dotted];
m16_449 -> m16_455  [color=darkseagreen4, key=1, label=ret, style=dashed];
m16_450 -> m16_451  [key=0, style=solid];
m16_450 -> m16_454  [key=0, style=solid];
m16_451 -> m16_452  [key=0, style=solid];
m16_451 -> m16_462  [key=2, style=dotted];
m16_444 -> m16_445  [key=0, style=solid];
m16_444 -> m16_458  [key=2, style=dotted];
m16_456 -> m16_457  [key=0, style=solid];
m16_445 -> m16_446  [key=0, style=solid];
m16_445 -> m16_447  [key=0, style=solid];
m16_446 -> m16_447  [key=0, style=solid];
m16_446 -> m16_459  [key=2, style=dotted];
m16_448 -> m16_449  [key=0, style=solid];
m16_448 -> m16_456  [key=0, style=solid];
m16_454 -> m16_455  [key=0, style=solid];
m16_454 -> m16_463  [key=2, style=dotted];
m16_454 -> m16_468  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_455 -> m16_457  [key=0, style=solid];
m16_452 -> m16_453  [key=0, style=solid];
m16_452 -> m16_75  [key=2, style=dotted];
m16_453 -> m16_454  [key=0, style=solid];
m16_453 -> m16_76  [key=2, style=dotted];
m16_457 -> m16_441  [color=blue, key=0, style=bold];
m16_161 -> m16_162  [key=0, style=solid];
m16_162 -> m16_161  [color=blue, key=0, style=bold];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_87 -> m16_88  [key=0, style=solid];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_90  [key=2, style=dotted];
m16_88 -> m16_88  [color=darkseagreen4, key=1, label=value, style=dashed];
m16_89 -> m16_86  [color=blue, key=0, style=bold];
m16_265 -> m16_266  [key=0, style=solid];
m16_265 -> m16_267  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_266 -> m16_267  [key=0, style=solid];
m16_266 -> m16_268  [key=0, style=solid];
m16_267 -> m16_269  [key=0, style=solid];
m16_267 -> m16_270  [key=2, style=dotted];
m16_268 -> m16_269  [key=0, style=solid];
m16_268 -> m16_203  [key=2, style=dotted];
m16_269 -> m16_265  [color=blue, key=0, style=bold];
m16_207 -> m16_208  [key=0, style=solid];
m16_208 -> m16_209  [key=0, style=solid];
m16_208 -> m16_210  [key=0, style=solid];
m16_209 -> m16_211  [key=0, style=solid];
m16_210 -> m16_211  [key=0, style=solid];
m16_210 -> m16_212  [key=2, style=dotted];
m16_211 -> m16_207  [color=blue, key=0, style=bold];
m16_474 -> m16_475  [key=0, style=solid];
m16_475 -> m16_476  [key=0, style=solid];
m16_475 -> m16_477  [key=2, style=dotted];
m16_476 -> m16_474  [color=blue, key=0, style=bold];
m16_471 -> m16_472  [key=0, style=solid];
m16_83 -> m16_84  [key=0, style=solid];
m16_84 -> m16_85  [key=0, style=solid];
m16_84 -> m16_84  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m16_85 -> m16_83  [color=blue, key=0, style=bold];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_118  [key=2, style=dotted];
m16_115 -> m16_116  [key=0, style=solid];
m16_117 -> m16_115  [color=blue, key=0, style=bold];
m16_142 -> m16_143  [key=0, style=solid];
m16_145 -> m16_146  [key=0, style=solid];
m16_148 -> m16_149  [key=0, style=solid];
m16_152 -> m16_153  [key=0, style=solid];
m16_143 -> m16_144  [key=0, style=solid];
m16_144 -> m16_142  [color=blue, key=0, style=bold];
m16_146 -> m16_147  [key=0, style=solid];
m16_147 -> m16_145  [color=blue, key=0, style=bold];
m16_149 -> m16_150  [key=0, style=solid];
m16_149 -> m16_151  [key=2, style=dotted];
m16_150 -> m16_148  [color=blue, key=0, style=bold];
m16_153 -> m16_154  [key=0, style=solid];
m16_153 -> m16_151  [key=2, style=dotted];
m16_154 -> m16_152  [color=blue, key=0, style=bold];
m16_244 -> m16_245  [key=0, style=solid];
m16_244 -> m16_244  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<QuantConnect.Symbol, QuantConnect.Securities.Security>", style=dashed];
m16_243 -> m16_244  [key=0, style=solid];
m16_245 -> m16_243  [color=blue, key=0, style=bold];
m16_465 -> m16_466  [key=0, style=solid];
m16_465 -> m16_467  [key=2, style=dotted];
m16_464 -> m16_465  [key=0, style=solid];
m16_468 -> m16_469  [key=0, style=solid];
m16_466 -> m16_464  [color=blue, key=0, style=bold];
m16_469 -> m16_470  [key=0, style=solid];
m16_469 -> m16_463  [key=2, style=dotted];
m16_469 -> m16_471  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_470 -> m16_468  [color=blue, key=0, style=bold];
m16_472 -> m16_473  [key=0, style=solid];
m16_473 -> m16_471  [color=blue, key=0, style=bold];
m16_179 -> m16_180  [key=0, style=solid];
m16_180 -> m16_179  [color=blue, key=0, style=bold];
m16_542 -> m16_543  [key=0, style=solid];
m16_542 -> m16_545  [color=darkseagreen4, key=1, label="QuantConnect.Interfaces.IHistoryProvider", style=dashed];
m16_543 -> m16_544  [key=0, style=solid];
m16_543 -> m16_545  [key=0, style=solid];
m16_545 -> m16_546  [key=0, style=solid];
m16_544 -> m16_546  [key=0, style=solid];
m16_544 -> m16_204  [key=2, style=dotted];
m16_546 -> m16_542  [color=blue, key=0, style=bold];
m16_233 -> m16_234  [key=0, style=solid];
m16_233 -> m16_235  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m16_234 -> m16_235  [key=0, style=solid];
m16_235 -> m16_236  [key=0, style=solid];
m16_235 -> m16_73  [key=2, style=dotted];
m16_236 -> m16_233  [color=blue, key=0, style=bold];
m16_237 -> m16_238  [key=0, style=solid];
m16_238 -> m16_239  [key=0, style=solid];
m16_238 -> m16_242  [key=2, style=dotted];
m16_238 -> m16_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_238 -> m16_244  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_238 -> m16_240  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_239 -> m16_240  [key=0, style=solid];
m16_239 -> m16_136  [key=2, style=dotted];
m16_239 -> m16_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_240 -> m16_241  [key=0, style=solid];
m16_240 -> m16_73  [key=2, style=dotted];
m16_241 -> m16_237  [color=blue, key=0, style=bold];
m16_212 -> m16_489  [key=0, style=solid];
m16_212 -> m16_491  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_212 -> m16_492  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_212 -> m16_210  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m16_489 -> m16_490  [key=0, style=solid];
m16_489 -> m16_491  [key=0, style=solid];
m16_491 -> m16_492  [key=0, style=solid];
m16_491 -> m16_494  [key=2, style=dotted];
m16_492 -> m16_493  [key=0, style=solid];
m16_490 -> m16_493  [key=0, style=solid];
m16_493 -> m16_212  [color=blue, key=0, style=bold];
m16_181 -> m16_182  [key=0, style=solid];
m16_182 -> m16_183  [key=0, style=solid];
m16_182 -> m16_184  [key=2, style=dotted];
m16_183 -> m16_181  [color=blue, key=0, style=bold];
m16_495 -> m16_496  [key=0, style=solid];
m16_495 -> m16_498  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_496 -> m16_497  [key=0, style=solid];
m16_496 -> m16_498  [key=0, style=solid];
m16_498 -> m16_499  [key=0, style=solid];
m16_498 -> m16_494  [key=2, style=dotted];
m16_497 -> m16_499  [key=0, style=solid];
m16_499 -> m16_495  [color=blue, key=0, style=bold];
m16_169 -> m16_170  [key=0, style=solid];
m16_170 -> m16_169  [color=blue, key=0, style=bold];
m16_249 -> m16_250  [key=0, style=solid];
m16_250 -> m16_251  [key=0, style=solid];
m16_250 -> m16_252  [key=2, style=dotted];
m16_251 -> m16_249  [color=blue, key=0, style=bold];
m16_246 -> m16_247  [key=0, style=solid];
m16_247 -> m16_248  [key=0, style=solid];
m16_248 -> m16_246  [color=blue, key=0, style=bold];
m16_108 -> m16_109  [key=0, style=solid];
m16_109 -> m16_110  [key=0, style=solid];
m16_109 -> m16_111  [key=2, style=dotted];
m16_109 -> m16_104  [key=2, style=dotted];
m16_110 -> m16_108  [color=blue, key=0, style=bold];
m16_171 -> m16_172  [key=0, style=solid];
m16_172 -> m16_171  [color=blue, key=0, style=bold];
m16_157 -> m16_158  [key=0, style=solid];
m16_158 -> m16_157  [color=blue, key=0, style=bold];
m16_155 -> m16_156  [key=0, style=solid];
m16_156 -> m16_155  [color=blue, key=0, style=bold];
m16_99 -> m16_500  [key=0, style=solid];
m16_99 -> m16_502  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_99 -> m16_503  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_500 -> m16_501  [key=0, style=solid];
m16_500 -> m16_502  [key=0, style=solid];
m16_502 -> m16_503  [key=0, style=solid];
m16_502 -> m16_494  [key=2, style=dotted];
m16_503 -> m16_504  [key=0, style=solid];
m16_501 -> m16_504  [key=0, style=solid];
m16_504 -> m16_99  [color=blue, key=0, style=bold];
m16_175 -> m16_176  [key=0, style=solid];
m16_176 -> m16_175  [color=blue, key=0, style=bold];
m16_289 -> m16_290  [key=0, style=solid];
m16_290 -> m16_291  [key=0, style=solid];
m16_291 -> m16_289  [color=blue, key=0, style=bold];
m16_345 -> m16_346  [key=0, style=solid];
m16_345 -> m16_342  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m16_345 -> m16_343  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m16_345 -> m16_348  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m16_346 -> m16_347  [key=0, style=solid];
m16_346 -> m16_348  [key=2, style=dotted];
m16_347 -> m16_345  [color=blue, key=0, style=bold];
m16_552 -> m16_553  [key=0, style=solid];
m16_553 -> m16_554  [key=0, style=solid];
m16_554 -> m16_552  [color=blue, key=0, style=bold];
m16_371 -> m16_372  [key=0, style=solid];
m16_371 -> m16_374  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Equity.Equity AddEquity", style=bold];
m16_372 -> m16_373  [key=0, style=solid];
m16_372 -> m16_374  [key=2, style=dotted];
m16_373 -> m16_371  [color=blue, key=0, style=bold];
m16_271 -> m16_272  [key=0, style=solid];
m16_272 -> m16_273  [key=0, style=solid];
m16_272 -> m16_27  [key=2, style=dotted];
m16_273 -> m16_274  [key=0, style=solid];
m16_273 -> m16_273  [color=darkseagreen4, key=1, label=start, style=dashed];
m16_274 -> m16_275  [key=0, style=solid];
m16_274 -> m16_277  [key=0, style=solid];
m16_274 -> m16_278  [key=2, style=dotted];
m16_275 -> m16_276  [key=0, style=solid];
m16_276 -> m16_277  [key=0, style=solid];
m16_276 -> m16_203  [key=2, style=dotted];
m16_277 -> m16_271  [color=blue, key=0, style=bold];
m16_54 -> m16_55  [key=0, style=solid];
m16_55 -> m16_56  [key=0, style=solid];
m16_55 -> m16_63  [key=0, style=solid];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_58  [key=0, style=solid];
m16_63 -> m16_64  [key=0, style=solid];
m16_63 -> m16_72  [key=0, style=solid];
m16_63 -> m16_78  [key=2, style=dotted];
m16_63 -> m16_79  [key=2, style=dotted];
m16_63 -> m16_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_63 -> m16_67  [color=darkseagreen4, key=1, label=option, style=dashed];
m16_63 -> m16_68  [color=darkseagreen4, key=1, label=option, style=dashed];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_73  [key=2, style=dotted];
m16_58 -> m16_59  [key=0, style=solid];
m16_58 -> m16_75  [color=darkorchid, key=3, label="Local variable QuantConnect.Securities.Security security", style=bold];
m16_59 -> m16_60  [key=0, style=solid];
m16_59 -> m16_62  [key=0, style=solid];
m16_59 -> m16_74  [key=2, style=dotted];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_75  [key=2, style=dotted];
m16_60 -> m16_62  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_62 -> m16_63  [key=0, style=solid];
m16_62 -> m16_77  [key=2, style=dotted];
m16_61 -> m16_62  [key=0, style=solid];
m16_61 -> m16_76  [key=2, style=dotted];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_66  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m16_64 -> m16_67  [color=darkseagreen4, key=1, label=underlying, style=dashed];
m16_67 -> m16_68  [key=0, style=solid];
m16_67 -> m16_81  [key=2, style=dotted];
m16_67 -> m16_69  [color=darkseagreen4, key=1, label=equity, style=dashed];
m16_67 -> m16_71  [color=darkseagreen4, key=1, label=equity, style=dashed];
m16_68 -> m16_69  [key=0, style=solid];
m16_68 -> m16_68  [color=darkseagreen4, key=1, label=option, style=dashed];
m16_65 -> m16_66  [key=0, style=solid];
m16_66 -> m16_67  [key=0, style=solid];
m16_66 -> m16_68  [key=0, style=solid];
m16_66 -> m16_80  [key=2, style=dotted];
m16_66 -> m16_69  [color=darkseagreen4, key=1, label=equity, style=dashed];
m16_66 -> m16_71  [color=darkseagreen4, key=1, label=equity, style=dashed];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_63  [key=0, style=solid];
m16_71 -> m16_63  [key=0, style=solid];
m16_71 -> m16_82  [key=2, style=dotted];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_70  [color=darkorchid, key=3, label="Local variable int periods", style=bold];
m16_72 -> m16_54  [color=blue, key=0, style=bold];
m16_430 -> m16_431  [key=0, style=solid];
m16_431 -> m16_432  [key=0, style=solid];
m16_431 -> m16_370  [key=2, style=dotted];
m16_431 -> m16_433  [color=darkseagreen4, key=1, label=option, style=dashed];
m16_432 -> m16_433  [key=0, style=solid];
m16_432 -> m16_76  [key=2, style=dotted];
m16_433 -> m16_434  [key=0, style=solid];
m16_434 -> m16_430  [color=blue, key=0, style=bold];
m16_165 -> m16_166  [key=0, style=solid];
m16_166 -> m16_167  [key=0, style=solid];
m16_166 -> m16_168  [key=2, style=dotted];
m16_166 -> m16_163  [key=2, style=dotted];
m16_167 -> m16_165  [color=blue, key=0, style=bold];
m16_75 -> m16_534  [key=0, style=solid];
m16_534 -> m16_535  [key=0, style=solid];
m16_535 -> m16_536  [key=0, style=solid];
m16_535 -> m16_537  [key=0, style=solid];
m16_536 -> m16_539  [key=0, style=solid];
m16_537 -> m16_538  [key=0, style=solid];
m16_537 -> m16_541  [key=2, style=dotted];
m16_537 -> m16_463  [key=2, style=dotted];
m16_537 -> m16_537  [color=darkseagreen4, key=1, label=kvp, style=dashed];
m16_538 -> m16_539  [key=0, style=solid];
m16_539 -> m16_540  [key=0, style=solid];
m16_539 -> m16_370  [key=2, style=dotted];
m16_540 -> m16_75  [color=blue, key=0, style=bold];
m16_328 -> m16_329  [key=0, style=solid];
m16_328 -> m16_330  [color=darkseagreen4, key=1, label=bool, style=dashed];
m16_328 -> m16_331  [color=darkseagreen4, key=1, label=bool, style=dashed];
m16_328 -> m16_332  [color=darkseagreen4, key=1, label=bool, style=dashed];
m16_328 -> m16_333  [color=darkseagreen4, key=1, label=bool, style=dashed];
m16_329 -> m16_330  [key=0, style=solid];
m16_329 -> m16_336  [key=0, style=solid];
m16_330 -> m16_331  [key=0, style=solid];
m16_331 -> m16_332  [key=0, style=solid];
m16_331 -> m16_37  [key=2, style=dotted];
m16_332 -> m16_333  [key=0, style=solid];
m16_332 -> m16_337  [key=2, style=dotted];
m16_333 -> m16_334  [key=0, style=solid];
m16_333 -> m16_336  [key=0, style=solid];
m16_334 -> m16_335  [key=0, style=solid];
m16_335 -> m16_336  [key=0, style=solid];
m16_336 -> m16_328  [color=blue, key=0, style=bold];
m16_91 -> m16_92  [key=0, style=solid];
m16_91 -> m16_93  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m16_92 -> m16_93  [key=0, style=solid];
m16_92 -> m16_97  [key=2, style=dotted];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_96  [key=0, style=solid];
m16_93 -> m16_98  [key=2, style=dotted];
m16_94 -> m16_95  [key=0, style=solid];
m16_95 -> m16_96  [key=0, style=solid];
m16_95 -> m16_99  [key=2, style=dotted];
m16_96 -> m16_91  [color=blue, key=0, style=bold];
m16_213 -> m16_214  [key=0, style=solid];
m16_214 -> m16_215  [key=0, style=solid];
m16_214 -> m16_216  [key=2, style=dotted];
m16_214 -> m16_217  [key=2, style=dotted];
m16_215 -> m16_213  [color=blue, key=0, style=bold];
m16_50 -> m16_51  [key=0, style=solid];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_53  [key=2, style=dotted];
m16_52 -> m16_50  [color=blue, key=0, style=bold];
m16_374 -> m16_524  [key=0, style=solid];
m16_374 -> m16_525  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m16_374 -> m16_526  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m16_374 -> m16_528  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_374 -> m16_529  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m16_374 -> m16_530  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m16_374 -> m16_57  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m16_374 -> m16_436  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m16_374 -> m16_439  [color=darkorchid, key=3, label="Parameter variable QuantConnect.SecurityType securityType", style=bold];
m16_374 -> m16_371  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m16_374 -> m16_435  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m16_374 -> m16_438  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m16_524 -> m16_525  [key=0, style=solid];
m16_524 -> m16_527  [key=0, style=solid];
m16_525 -> m16_526  [key=0, style=solid];
m16_525 -> m16_527  [key=0, style=solid];
m16_525 -> m16_368  [key=2, style=dotted];
m16_525 -> m16_529  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_526 -> m16_533  [key=0, style=solid];
m16_526 -> m16_203  [key=2, style=dotted];
m16_528 -> m16_529  [key=0, style=solid];
m16_528 -> m16_530  [key=0, style=solid];
m16_528 -> m16_369  [key=2, style=dotted];
m16_529 -> m16_530  [key=0, style=solid];
m16_529 -> m16_73  [key=2, style=dotted];
m16_530 -> m16_531  [key=0, style=solid];
m16_530 -> m16_370  [key=2, style=dotted];
m16_530 -> m16_532  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_527 -> m16_528  [key=0, style=solid];
m16_531 -> m16_532  [key=0, style=solid];
m16_531 -> m16_76  [key=2, style=dotted];
m16_532 -> m16_533  [key=0, style=solid];
m16_533 -> m16_374  [color=blue, key=0, style=bold];
m16_104 -> m16_105  [key=0, style=solid];
m16_104 -> m16_106  [color=darkseagreen4, key=1, label="QuantConnect.Securities.ISecurityInitializer", style=dashed];
m16_105 -> m16_106  [key=0, style=solid];
m16_106 -> m16_107  [key=0, style=solid];
m16_107 -> m16_104  [color=blue, key=0, style=bold];
m16_256 -> m16_260  [key=0, style=solid];
m16_256 -> m16_261  [color=darkseagreen4, key=1, label=decimal, style=dashed];
m16_256 -> m16_253  [color=darkorchid, key=3, label="Parameter variable decimal startingCash", style=bold];
m16_256 -> m16_257  [color=darkorchid, key=3, label="Parameter variable decimal startingCash", style=bold];
m16_260 -> m16_261  [key=0, style=solid];
m16_260 -> m16_262  [key=0, style=solid];
m16_261 -> m16_263  [key=0, style=solid];
m16_261 -> m16_264  [key=2, style=dotted];
m16_262 -> m16_263  [key=0, style=solid];
m16_262 -> m16_203  [key=2, style=dotted];
m16_263 -> m16_256  [color=blue, key=0, style=bold];
m16_342 -> m16_343  [key=0, style=solid];
m16_342 -> m16_345  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m16_343 -> m16_344  [key=0, style=solid];
m16_343 -> m16_345  [key=2, style=dotted];
m16_344 -> m16_342  [color=blue, key=0, style=bold];
m16_177 -> m16_178  [key=0, style=solid];
m16_178 -> m16_177  [color=blue, key=0, style=bold];
m16_119 -> m16_120  [key=0, style=solid];
m16_119 -> m16_131  [color=darkseagreen4, key=1, label="QuantConnect.Data.Slice", style=dashed];
m16_120 -> m16_121  [key=0, style=solid];
m16_120 -> m16_130  [key=0, style=solid];
m16_131 -> m16_132  [key=0, style=solid];
m16_131 -> m16_118  [key=2, style=dotted];
m16_121 -> m16_122  [key=0, style=solid];
m16_130 -> m16_131  [key=0, style=solid];
m16_130 -> m16_132  [key=0, style=solid];
m16_122 -> m16_123  [key=0, style=solid];
m16_122 -> m16_133  [key=2, style=dotted];
m16_122 -> m16_134  [key=2, style=dotted];
m16_122 -> m16_135  [key=2, style=dotted];
m16_122 -> m16_136  [key=2, style=dotted];
m16_122 -> m16_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_122 -> m16_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_122 -> m16_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_122 -> m16_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_122 -> m16_127  [color=darkseagreen4, key=1, label=method, style=dashed];
m16_123 -> m16_124  [key=0, style=solid];
m16_123 -> m16_125  [key=0, style=solid];
m16_127 -> m16_128  [key=0, style=solid];
m16_127 -> m16_139  [key=2, style=dotted];
m16_124 -> m16_132  [key=0, style=solid];
m16_125 -> m16_126  [key=0, style=solid];
m16_125 -> m16_137  [key=2, style=dotted];
m16_125 -> m16_127  [color=darkseagreen4, key=1, label=self, style=dashed];
m16_126 -> m16_127  [key=0, style=solid];
m16_126 -> m16_138  [key=2, style=dotted];
m16_126 -> m16_128  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_140  [key=2, style=dotted];
m16_129 -> m16_130  [key=0, style=solid];
m16_129 -> m16_141  [key=2, style=dotted];
m16_132 -> m16_119  [color=blue, key=0, style=bold];
m16_384 -> m16_385  [key=0, style=solid];
m16_384 -> m16_396  [key=2, style=dotted];
m16_384 -> m16_397  [key=2, style=dotted];
m16_384 -> m16_386  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m16_384 -> m16_390  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m16_384 -> m16_392  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m16_366 -> m16_375  [key=0, style=solid];
m16_366 -> m16_379  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_366 -> m16_381  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_366 -> m16_382  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_366 -> m16_383  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_366 -> m16_384  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m16_366 -> m16_389  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m16_366 -> m16_348  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m16_375 -> m16_376  [key=0, style=solid];
m16_375 -> m16_378  [key=0, style=solid];
m16_379 -> m16_380  [key=0, style=solid];
m16_379 -> m16_381  [color=darkseagreen4, key=1, label=alias, style=dashed];
m16_381 -> m16_382  [key=0, style=solid];
m16_381 -> m16_73  [key=2, style=dotted];
m16_381 -> m16_384  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_381 -> m16_388  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_381 -> m16_391  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_382 -> m16_383  [key=0, style=solid];
m16_382 -> m16_394  [key=2, style=dotted];
m16_382 -> m16_384  [color=darkseagreen4, key=1, label=marketHoursEntry, style=dashed];
m16_383 -> m16_384  [key=0, style=solid];
m16_383 -> m16_395  [key=2, style=dotted];
m16_389 -> m16_390  [key=0, style=solid];
m16_389 -> m16_42  [key=2, style=dotted];
m16_376 -> m16_377  [key=0, style=solid];
m16_376 -> m16_378  [key=0, style=solid];
m16_376 -> m16_368  [key=2, style=dotted];
m16_376 -> m16_381  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_376 -> m16_382  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_376 -> m16_383  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_378 -> m16_379  [key=0, style=solid];
m16_377 -> m16_393  [key=0, style=solid];
m16_377 -> m16_203  [key=2, style=dotted];
m16_380 -> m16_381  [key=0, style=solid];
m16_380 -> m16_382  [key=0, style=solid];
m16_380 -> m16_369  [key=2, style=dotted];
m16_380 -> m16_384  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_380 -> m16_388  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_380 -> m16_391  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_388 -> m16_389  [key=0, style=solid];
m16_388 -> m16_392  [key=0, style=solid];
m16_388 -> m16_399  [key=2, style=dotted];
m16_391 -> m16_392  [key=0, style=solid];
m16_391 -> m16_401  [key=2, style=dotted];
m16_385 -> m16_386  [key=0, style=solid];
m16_386 -> m16_387  [key=0, style=solid];
m16_386 -> m16_398  [key=2, style=dotted];
m16_390 -> m16_391  [key=0, style=solid];
m16_390 -> m16_400  [key=2, style=dotted];
m16_392 -> m16_393  [key=0, style=solid];
m16_387 -> m16_388  [key=0, style=solid];
m16_393 -> m16_366  [color=blue, key=0, style=bold];
m16_547 -> m16_548  [key=0, style=solid];
m16_547 -> m16_550  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m16_548 -> m16_549  [key=0, style=solid];
m16_548 -> m16_550  [key=0, style=solid];
m16_550 -> m16_551  [key=0, style=solid];
m16_549 -> m16_551  [key=0, style=solid];
m16_549 -> m16_204  [key=2, style=dotted];
m16_551 -> m16_547  [color=blue, key=0, style=bold];
m16_425 -> m16_426  [key=0, style=solid];
m16_426 -> m16_427  [key=0, style=solid];
m16_426 -> m16_370  [key=2, style=dotted];
m16_426 -> m16_428  [color=darkseagreen4, key=1, label=future, style=dashed];
m16_427 -> m16_428  [key=0, style=solid];
m16_427 -> m16_76  [key=2, style=dotted];
m16_428 -> m16_429  [key=0, style=solid];
m16_429 -> m16_425  [color=blue, key=0, style=bold];
m16_412 -> m16_413  [key=0, style=solid];
m16_412 -> m16_397  [key=2, style=dotted];
m16_412 -> m16_414  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m16_412 -> m16_418  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m16_412 -> m16_420  [color=darkseagreen4, key=1, label=canonicalSecurity, style=dashed];
m16_367 -> m16_402  [key=0, style=solid];
m16_367 -> m16_406  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_367 -> m16_408  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_367 -> m16_409  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_367 -> m16_410  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_367 -> m16_411  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m16_367 -> m16_412  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m16_367 -> m16_417  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m16_367 -> m16_348  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m16_402 -> m16_403  [key=0, style=solid];
m16_402 -> m16_405  [key=0, style=solid];
m16_406 -> m16_407  [key=0, style=solid];
m16_406 -> m16_408  [color=darkseagreen4, key=1, label=alias, style=dashed];
m16_408 -> m16_409  [key=0, style=solid];
m16_408 -> m16_73  [key=2, style=dotted];
m16_408 -> m16_411  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_408 -> m16_412  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_408 -> m16_416  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_408 -> m16_419  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_409 -> m16_410  [key=0, style=solid];
m16_409 -> m16_394  [key=2, style=dotted];
m16_409 -> m16_412  [color=darkseagreen4, key=1, label=marketHoursEntry, style=dashed];
m16_410 -> m16_411  [key=0, style=solid];
m16_410 -> m16_395  [key=2, style=dotted];
m16_410 -> m16_412  [color=darkseagreen4, key=1, label=symbolProperties, style=dashed];
m16_411 -> m16_412  [key=0, style=solid];
m16_411 -> m16_422  [key=2, style=dotted];
m16_411 -> m16_423  [key=2, style=dotted];
m16_417 -> m16_418  [key=0, style=solid];
m16_417 -> m16_42  [key=2, style=dotted];
m16_403 -> m16_404  [key=0, style=solid];
m16_403 -> m16_405  [key=0, style=solid];
m16_403 -> m16_368  [key=2, style=dotted];
m16_403 -> m16_408  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_403 -> m16_409  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_403 -> m16_410  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_405 -> m16_406  [key=0, style=solid];
m16_404 -> m16_421  [key=0, style=solid];
m16_404 -> m16_203  [key=2, style=dotted];
m16_407 -> m16_408  [key=0, style=solid];
m16_407 -> m16_409  [key=0, style=solid];
m16_407 -> m16_369  [key=2, style=dotted];
m16_407 -> m16_411  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_407 -> m16_412  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_407 -> m16_416  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_407 -> m16_419  [color=darkseagreen4, key=1, label=canonicalSymbol, style=dashed];
m16_416 -> m16_417  [key=0, style=solid];
m16_416 -> m16_420  [key=0, style=solid];
m16_416 -> m16_399  [key=2, style=dotted];
m16_419 -> m16_420  [key=0, style=solid];
m16_419 -> m16_401  [key=2, style=dotted];
m16_413 -> m16_414  [key=0, style=solid];
m16_414 -> m16_415  [key=0, style=solid];
m16_414 -> m16_398  [key=2, style=dotted];
m16_418 -> m16_419  [key=0, style=solid];
m16_418 -> m16_424  [key=2, style=dotted];
m16_420 -> m16_421  [key=0, style=solid];
m16_415 -> m16_416  [key=0, style=solid];
m16_421 -> m16_367  [color=blue, key=0, style=bold];
m16_348 -> m16_349  [key=0, style=solid];
m16_348 -> m16_350  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_348 -> m16_351  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m16_348 -> m16_352  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_348 -> m16_353  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_348 -> m16_354  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m16_348 -> m16_355  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m16_348 -> m16_357  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_348 -> m16_358  [color=darkseagreen4, key=1, label="QuantConnect.SecurityType", style=dashed];
m16_348 -> m16_359  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m16_348 -> m16_345  [color=darkorchid, key=3, label="Parameter variable bool extendedMarketHours", style=bold];
m16_348 -> m16_56  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m16_348 -> m16_366  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m16_348 -> m16_367  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Security AddSecurity", style=bold];
m16_349 -> m16_350  [key=0, style=solid];
m16_349 -> m16_351  [key=0, style=solid];
m16_350 -> m16_365  [key=0, style=solid];
m16_350 -> m16_366  [key=2, style=dotted];
m16_351 -> m16_352  [key=0, style=solid];
m16_351 -> m16_353  [key=0, style=solid];
m16_352 -> m16_365  [key=0, style=solid];
m16_352 -> m16_367  [key=2, style=dotted];
m16_353 -> m16_354  [key=0, style=solid];
m16_353 -> m16_356  [key=0, style=solid];
m16_354 -> m16_355  [key=0, style=solid];
m16_354 -> m16_356  [key=0, style=solid];
m16_354 -> m16_368  [key=2, style=dotted];
m16_354 -> m16_358  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_355 -> m16_365  [key=0, style=solid];
m16_355 -> m16_203  [key=2, style=dotted];
m16_357 -> m16_358  [key=0, style=solid];
m16_357 -> m16_359  [key=0, style=solid];
m16_357 -> m16_369  [key=2, style=dotted];
m16_358 -> m16_359  [key=0, style=solid];
m16_358 -> m16_73  [key=2, style=dotted];
m16_359 -> m16_360  [key=0, style=solid];
m16_359 -> m16_370  [key=2, style=dotted];
m16_359 -> m16_361  [color=darkseagreen4, key=1, label=security, style=dashed];
m16_356 -> m16_357  [key=0, style=solid];
m16_360 -> m16_361  [key=0, style=solid];
m16_360 -> m16_76  [key=2, style=dotted];
m16_361 -> m16_365  [key=0, style=solid];
m16_362 -> m16_363  [key=0, style=solid];
m16_363 -> m16_364  [key=0, style=solid];
m16_363 -> m16_99  [key=2, style=dotted];
m16_364 -> m16_365  [key=0, style=solid];
m16_365 -> m16_348  [color=blue, key=0, style=bold];
m16_163 -> m16_164  [key=0, style=solid];
m16_164 -> m16_163  [color=blue, key=0, style=bold];
m16_477 -> m16_478  [key=0, style=solid];
m16_477 -> m16_474  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m16_477 -> m16_539  [color=darkorchid, key=3, label="Parameter variable decimal leverage", style=bold];
m16_478 -> m16_479  [key=0, style=solid];
m16_478 -> m16_480  [key=2, style=dotted];
m16_479 -> m16_477  [color=blue, key=0, style=bold];
m16_435 -> m16_436  [key=0, style=solid];
m16_435 -> m16_374  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Forex.Forex AddForex", style=bold];
m16_436 -> m16_437  [key=0, style=solid];
m16_436 -> m16_374  [key=2, style=dotted];
m16_437 -> m16_435  [color=blue, key=0, style=bold];
m16_516 -> m16_517  [key=0, style=solid];
m16_517 -> m16_518  [key=0, style=solid];
m16_517 -> m16_519  [key=0, style=solid];
m16_518 -> m16_519  [key=0, style=solid];
m16_519 -> m16_516  [color=blue, key=0, style=bold];
m16_438 -> m16_439  [key=0, style=solid];
m16_438 -> m16_374  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Securities.Cfd.Cfd AddCfd", style=bold];
m16_439 -> m16_440  [key=0, style=solid];
m16_439 -> m16_374  [key=2, style=dotted];
m16_440 -> m16_438  [color=blue, key=0, style=bold];
m16_112 -> m16_113  [key=0, style=solid];
m16_112 -> m16_116  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m16_113 -> m16_114  [key=0, style=solid];
m16_113 -> m16_111  [key=2, style=dotted];
m16_113 -> m16_104  [key=2, style=dotted];
m16_113 -> m16_116  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m16_114 -> m16_112  [color=blue, key=0, style=bold];
m16_32 -> m16_328  [color=darkorchid, key=3, label="Field variable bool _liveMode", style=bold];
m16_228 -> m16_229  [key=0, style=solid];
m16_228 -> m16_231  [color=darkseagreen4, key=1, label="QuantConnect.Brokerages.IBrokerageMessageHandler", style=dashed];
m16_229 -> m16_230  [key=0, style=solid];
m16_229 -> m16_231  [key=0, style=solid];
m16_231 -> m16_232  [key=0, style=solid];
m16_230 -> m16_232  [key=0, style=solid];
m16_230 -> m16_204  [key=2, style=dotted];
m16_232 -> m16_228  [color=blue, key=0, style=bold];
m16_278 -> m16_292  [key=0, style=solid];
m16_278 -> m16_294  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_278 -> m16_297  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_278 -> m16_299  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_278 -> m16_272  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m16_292 -> m16_293  [key=0, style=solid];
m16_292 -> m16_294  [key=0, style=solid];
m16_294 -> m16_295  [key=0, style=solid];
m16_294 -> m16_296  [key=0, style=solid];
m16_294 -> m16_27  [key=2, style=dotted];
m16_297 -> m16_298  [key=0, style=solid];
m16_297 -> m16_299  [key=0, style=solid];
m16_299 -> m16_300  [key=0, style=solid];
m16_299 -> m16_43  [key=2, style=dotted];
m16_299 -> m16_307  [key=2, style=dotted];
m16_299 -> m16_299  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_299 -> m16_302  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m16_293 -> m16_305  [key=0, style=solid];
m16_295 -> m16_305  [key=0, style=solid];
m16_295 -> m16_203  [key=2, style=dotted];
m16_296 -> m16_297  [key=0, style=solid];
m16_296 -> m16_299  [key=0, style=solid];
m16_296 -> m16_306  [key=2, style=dotted];
m16_298 -> m16_305  [key=0, style=solid];
m16_298 -> m16_203  [key=2, style=dotted];
m16_300 -> m16_301  [key=0, style=solid];
m16_300 -> m16_304  [key=0, style=solid];
m16_302 -> m16_303  [key=0, style=solid];
m16_301 -> m16_302  [key=0, style=solid];
m16_301 -> m16_305  [key=0, style=solid];
m16_304 -> m16_305  [key=0, style=solid];
m16_304 -> m16_203  [key=2, style=dotted];
m16_303 -> m16_305  [key=0, style=solid];
m16_303 -> m16_308  [key=2, style=dotted];
m16_303 -> m16_181  [key=2, style=dotted];
m16_305 -> m16_278  [color=blue, key=0, style=bold];
m16_505 -> m16_506  [key=0, style=solid];
m16_506 -> m16_507  [key=0, style=solid];
m16_506 -> m16_509  [color=darkseagreen4, key=1, label=message, style=dashed];
m16_506 -> m16_510  [color=darkseagreen4, key=1, label=message, style=dashed];
m16_507 -> m16_508  [key=0, style=solid];
m16_507 -> m16_509  [key=0, style=solid];
m16_509 -> m16_510  [key=0, style=solid];
m16_509 -> m16_494  [key=2, style=dotted];
m16_510 -> m16_511  [key=0, style=solid];
m16_508 -> m16_511  [key=0, style=solid];
m16_511 -> m16_505  [color=blue, key=0, style=bold];
m16_322 -> m16_323  [key=0, style=solid];
m16_323 -> m16_324  [key=0, style=solid];
m16_324 -> m16_322  [color=blue, key=0, style=bold];
m16_555 -> m16_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_4  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_5  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_7  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_8  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_12  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_13  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_15  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_16  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_20  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_21  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_23  [color=red, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_24  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_25  [color=red, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_56  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_57  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_60  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_61  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_63  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_66  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_88  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_95  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_102  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_106  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_109  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_120  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_121  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_122  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_129  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_130  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_131  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_166  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_182  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_190  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_195  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_199  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_200  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_201  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_210  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_214  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_218  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_219  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_220  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_221  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_223  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_231  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_235  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_239  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_240  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_247  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_250  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_254  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_258  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_260  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_261  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_266  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_267  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_274  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_282  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_292  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_296  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_297  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_300  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_301  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_302  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_303  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_309  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_313  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_314  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_317  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_318  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_323  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_326  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_329  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_330  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_331  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_332  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_334  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_335  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_339  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_340  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_343  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_346  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_350  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_352  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_354  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_359  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_360  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_363  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_372  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_376  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_382  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_383  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_384  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_386  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_388  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_390  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_391  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_403  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_409  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_410  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_411  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_412  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_414  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_416  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_418  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_419  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_426  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_427  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_431  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_432  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_436  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_439  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_443  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_444  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_446  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_447  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_450  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_451  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_452  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_453  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_454  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_475  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_478  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_481  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_483  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_484  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_485  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_489  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_491  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_492  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_496  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_498  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_500  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_502  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_503  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_507  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_509  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_510  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_513  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_514  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_518  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_525  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_530  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_531  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_535  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_537  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_538  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_539  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_545  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_550  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_555 -> m16_553  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m16_556 -> m16_116  [color=darkseagreen4, key=1, label="System.Action<QuantConnect.Securities.Security>", style=dashed];
m16_557 -> m16_244  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_558 -> m16_465  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_58  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_61 -> m18_64  [color=crimson, key=0, style=bold];
m18_61 -> m18_63  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_64  [key=2, style=dotted];
m18_62 -> m18_53  [key=2, style=dotted];
m18_62 -> m18_65  [color=darkseagreen4, key=1, label=day, style=dashed];
m18_63 -> m18_61  [color=blue, key=0, style=bold];
m18_63 -> m18_64  [key=0, style=solid];
m18_63 -> m18_66  [key=0, style=solid];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_24  [key=2, style=dotted];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m18_0 -> m18_5  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan timeSpan", style=bold];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_4  [key=2, style=dotted];
m18_1 -> m18_135  [color=darkseagreen4, key=1, label="QuantConnect.Time.DateTimeWithZone", style=dashed];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_135  [color=darkseagreen4, key=1, label="QuantConnect.Time.DateTimeWithZone", style=dashed];
m18_3 -> m18_0  [color=blue, key=0, style=bold];
m18_3 -> m18_4  [key=0, style=solid];
m18_152 -> m18_192  [key=0, style=solid];
m18_192 -> m18_193  [key=0, style=solid];
m18_192 -> m18_176  [key=2, style=dotted];
m18_192 -> m18_53  [key=2, style=dotted];
m18_193 -> m18_152  [color=blue, key=0, style=bold];
m18_121 -> m18_127  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_121 -> m18_129  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m18_121 -> m18_131  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_121 -> m18_132  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_121 -> m18_133  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_121 -> m18_83  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_121 -> m18_124  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_121 -> m18_122  [key=0, style=solid];
m18_121 -> m18_130  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_121 -> m18_126  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_121 -> m18_128  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m18_125 -> m18_134  [key=0, style=solid];
m18_125 -> m18_118  [key=2, style=dotted];
m18_125 -> m18_126  [key=0, style=solid];
m18_125 -> m18_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_127 -> m18_128  [key=0, style=solid];
m18_127 -> m18_82  [key=2, style=dotted];
m18_127 -> m18_129  [color=darkseagreen4, key=1, label=previous, style=dashed];
m18_129 -> m18_130  [key=0, style=solid];
m18_129 -> m18_69  [key=2, style=dotted];
m18_129 -> m18_135  [key=2, style=dotted];
m18_129 -> m18_136  [key=2, style=dotted];
m18_129 -> m18_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_129 -> m18_126  [key=0, style=solid];
m18_129 -> m18_101  [key=2, style=dotted];
m18_131 -> m18_131  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_131 -> m18_132  [key=0, style=solid];
m18_131 -> m18_83  [key=2, style=dotted];
m18_131 -> m18_133  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_132 -> m18_133  [key=0, style=solid];
m18_132 -> m18_84  [key=2, style=dotted];
m18_132 -> m18_121  [color=blue, key=0, style=bold];
m18_133 -> m18_134  [key=0, style=solid];
m18_133 -> m18_86  [key=2, style=dotted];
m18_133 -> m18_87  [key=2, style=dotted];
m18_133 -> m18_107  [key=2, style=dotted];
m18_133 -> m18_53  [key=2, style=dotted];
m18_124 -> m18_125  [key=0, style=solid];
m18_124 -> m18_126  [key=0, style=solid];
m18_124 -> m18_134  [key=2, style=dotted];
m18_124 -> m18_127  [color=darkseagreen4, key=1, label=current, style=dashed];
m18_124 -> m18_128  [color=darkseagreen4, key=1, label=current, style=dashed];
m18_124 -> m18_131  [color=darkseagreen4, key=1, label=current, style=dashed];
m18_126 -> m18_127  [key=0, style=solid];
m18_126 -> m18_130  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m18_126 -> m18_131  [key=0, style=solid];
m18_128 -> m18_129  [key=0, style=solid];
m18_128 -> m18_131  [key=0, style=solid];
m18_128 -> m18_128  [color=darkseagreen4, key=1, label=current, style=dashed];
m18_130 -> m18_134  [key=0, style=solid];
m18_130 -> m18_137  [key=2, style=dotted];
m18_130 -> m18_138  [key=2, style=dotted];
m18_130 -> m18_126  [key=0, style=solid];
m18_130 -> m18_130  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_123 -> m18_118  [key=2, style=dotted];
m18_123 -> m18_134  [key=0, style=solid];
m18_123 -> m18_132  [key=0, style=solid];
m18_123 -> m18_133  [key=2, style=dotted];
m18_122 -> m18_124  [key=0, style=solid];
m18_122 -> m18_123  [key=0, style=solid];
m18_134 -> m18_121  [color=blue, key=0, style=bold];
m18_68 -> m18_69  [key=0, style=solid];
m18_68 -> m18_72  [color=crimson, key=0, style=bold];
m18_68 -> m18_70  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_68 -> m18_71  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>", style=dashed];
m18_68 -> m18_65  [color=blue, key=0, style=bold];
m18_69 -> m18_70  [key=0, style=solid];
m18_69 -> m18_71  [color=darkseagreen4, key=1, label=day, style=dashed];
m18_69 -> m18_72  [color=darkseagreen4, key=1, label=day, style=dashed];
m18_69 -> m18_73  [color=darkseagreen4, key=1, label=day, style=dashed];
m18_72 -> m18_73  [key=0, style=solid];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_74  [key=0, style=solid];
m18_71 -> m18_72  [key=0, style=solid];
m18_71 -> m18_73  [key=0, style=solid];
m18_71 -> m18_75  [key=2, style=dotted];
m18_73 -> m18_70  [key=0, style=solid];
m18_73 -> m18_67  [key=2, style=dotted];
m18_73 -> m18_73  [color=darkseagreen4, key=1, label=day, style=dashed];
m18_74 -> m18_68  [color=blue, key=0, style=bold];
m18_74 -> m18_75  [key=0, style=solid];
m18_74 -> m18_78  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_74 -> m18_79  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_23 -> m18_21  [color=blue, key=0, style=bold];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_26  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_24 -> m18_27  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m18_24 -> m18_29  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_15  [key=2, style=dotted];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_24  [color=blue, key=0, style=bold];
m18_27 -> m18_28  [key=0, style=solid];
m18_28 -> m18_24  [color=blue, key=0, style=bold];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_30  [key=2, style=dotted];
m18_28 -> m18_31  [key=2, style=dotted];
m18_28 -> m18_28  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m18_109 -> m18_110  [key=0, style=solid];
m18_109 -> m18_111  [key=0, style=solid];
m18_100 -> m18_95  [color=blue, key=0, style=bold];
m18_48 -> m18_49  [key=0, style=solid];
m18_48 -> m18_50  [key=0, style=solid];
m18_48 -> m18_59  [key=2, style=dotted];
m18_48 -> m18_58  [key=2, style=dotted];
m18_47 -> m18_41  [color=darkorchid, key=3, label="Parameter variable System.DateTime endAlgoTz", style=bold];
m18_47 -> m18_254  [key=0, style=solid];
m18_47 -> m18_263  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_47 -> m18_264  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_47 -> m18_265  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m18_47 -> m18_266  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m18_47 -> m18_267  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m18_47 -> m18_268  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m18_47 -> m18_52  [color=darkorchid, key=3, label="Parameter variable bool? extendedMarket", style=bold];
m18_47 -> m18_57  [key=0, style=solid];
m18_254 -> m18_70  [key=2, style=dotted];
m18_254 -> m18_254  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Symbol> ", style=bold];
m18_254 -> m18_255  [key=0, style=solid];
m18_254 -> m18_256  [key=2, style=dotted];
m18_254 -> m18_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_254 -> m18_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_254 -> m18_88  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.HistoryRequest request", style=bold];
m18_254 -> m18_83  [color=darkorchid, key=3, label="Local variable QuantConnect.Resolution? res", style=bold];
m18_255 -> m18_47  [color=blue, key=0, style=bold];
m18_64 -> m18_65  [key=0, style=solid];
m18_64 -> m18_92  [key=0, style=solid];
m18_64 -> m18_99  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_64 -> m18_61  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_65 -> m18_63  [key=0, style=solid];
m18_65 -> m18_67  [key=2, style=dotted];
m18_65 -> m18_65  [color=darkseagreen4, key=1, label=day, style=dashed];
m18_65 -> m18_66  [key=0, style=solid];
m18_65 -> m18_78  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_65 -> m18_79  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_66 -> m18_61  [color=blue, key=0, style=bold];
m18_66 -> m18_66  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_69  [key=2, style=dotted];
m18_66 -> m18_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_66 -> m18_82  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.SubscriptionDataConfig config", style=bold];
m18_66 -> m18_88  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m18_66 -> m18_83  [color=darkorchid, key=3, label="Local variable QuantConnect.Resolution? res", style=bold];
m18_60 -> m18_58  [color=blue, key=0, style=bold];
m18_92 -> m18_66  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m18_92 -> m18_93  [key=0, style=solid];
m18_92 -> m18_69  [key=2, style=dotted];
m18_92 -> m18_95  [color=darkseagreen4, key=1, label=currentInTimeZoneEod, style=dashed];
m18_92 -> m18_82  [color=darkorchid, key=3, label="Local variable QuantConnect.Data.SubscriptionDataConfig config", style=bold];
m18_92 -> m18_88  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.HistoryRequest ", style=bold];
m18_92 -> m18_67  [key=2, style=dotted];
m18_92 -> m18_98  [color=darkseagreen4, key=1, label=currentInTimeZoneEod, style=dashed];
m18_93 -> m18_70  [key=2, style=dotted];
m18_93 -> m18_94  [key=0, style=solid];
m18_93 -> m18_71  [key=2, style=dotted];
m18_93 -> m18_72  [key=2, style=dotted];
m18_93 -> m18_73  [key=2, style=dotted];
m18_93 -> m18_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_93 -> m18_95  [key=0, style=solid];
m18_93 -> m18_100  [key=2, style=dotted];
m18_94 -> m18_64  [color=blue, key=0, style=bold];
m18_94 -> m18_95  [key=0, style=solid];
m18_94 -> m18_100  [key=2, style=dotted];
m18_94 -> m18_98  [color=darkseagreen4, key=1, label=currentInTimeZoneEod, style=dashed];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_8  [key=2, style=dotted];
m18_79 -> m18_80  [key=0, style=solid];
m18_79 -> m18_83  [color=crimson, key=0, style=bold];
m18_79 -> m18_81  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_79 -> m18_82  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m18_79 -> m18_84  [key=2, style=dotted];
m18_79 -> m18_85  [key=2, style=dotted];
m18_80 -> m18_81  [key=0, style=solid];
m18_80 -> m18_82  [color=darkseagreen4, key=1, label=day, style=dashed];
m18_80 -> m18_83  [color=darkseagreen4, key=1, label=day, style=dashed];
m18_80 -> m18_84  [color=darkseagreen4, key=1, label=day, style=dashed];
m18_80 -> m18_86  [key=2, style=dotted];
m18_80 -> m18_87  [key=2, style=dotted];
m18_80 -> m18_88  [key=2, style=dotted];
m18_83 -> m18_84  [key=0, style=solid];
m18_83 -> m18_66  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_83 -> m18_254  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_83 -> m18_274  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_83 -> m18_322  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_83 -> m18_324  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_83 -> m18_45  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_83 -> m18_47  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_83 -> m18_65  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_83 -> m18_321  [key=0, style=solid];
m18_83 -> m18_323  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_83 -> m18_108  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_83 -> m18_121  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_81 -> m18_82  [key=0, style=solid];
m18_81 -> m18_85  [key=0, style=solid];
m18_81 -> m18_74  [color=blue, key=0, style=bold];
m18_82 -> m18_83  [key=0, style=solid];
m18_82 -> m18_84  [key=0, style=solid];
m18_82 -> m18_86  [key=2, style=dotted];
m18_82 -> m18_66  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_82 -> m18_92  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_82 -> m18_294  [key=0, style=solid];
m18_82 -> m18_121  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_82 -> m18_107  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_82 -> m18_126  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m18_82 -> m18_144  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m18_82 -> m18_203  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m18_84 -> m18_81  [key=0, style=solid];
m18_84 -> m18_67  [key=2, style=dotted];
m18_84 -> m18_84  [color=darkseagreen4, key=1, label=day, style=dashed];
m18_84 -> m18_66  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_84 -> m18_180  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_84 -> m18_181  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_84 -> m18_182  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_84 -> m18_185  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_84 -> m18_274  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_84 -> m18_45  [color=darkorchid, key=3, label="Parameter variable int periods", style=bold];
m18_84 -> m18_65  [color=darkorchid, key=3, label="Parameter variable int periods", style=bold];
m18_84 -> m18_83  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_84 -> m18_179  [key=0, style=solid];
m18_84 -> m18_108  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_84 -> m18_121  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_85 -> m18_79  [color=blue, key=0, style=bold];
m18_4 -> m18_0  [color=blue, key=0, style=bold];
m18_101 -> m18_102  [key=0, style=solid];
m18_32 -> m18_33  [key=0, style=solid];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_35  [key=2, style=dotted];
m18_33 -> m18_31  [key=2, style=dotted];
m18_33 -> m18_33  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m18_34 -> m18_32  [color=blue, key=0, style=bold];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_36  [key=2, style=dotted];
m18_308 -> m18_309  [key=0, style=solid];
m18_250 -> m18_251  [color=green, key=0, style=solid];
m18_251 -> m18_252  [color=green, key=0, style=solid];
m18_251 -> m18_253  [color=green, key=2, style=dotted];
m18_252 -> m18_250  [color=blue, key=0, style=bold];
m18_75 -> m18_76  [key=0, style=solid];
m18_75 -> m18_82  [key=2, style=dotted];
m18_75 -> m18_80  [color=darkseagreen4, key=1, label=config, style=dashed];
m18_75 -> m18_102  [key=0, style=solid];
m18_75 -> m18_103  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_78 -> m18_79  [key=0, style=solid];
m18_78 -> m18_83  [key=2, style=dotted];
m18_78 -> m18_80  [color=darkseagreen4, key=1, label=res, style=dashed];
m18_78 -> m18_76  [color=blue, key=0, style=bold];
m18_96 -> m18_97  [key=0, style=solid];
m18_96 -> m18_82  [key=2, style=dotted];
m18_96 -> m18_99  [color=darkseagreen4, key=1, label=config, style=dashed];
m18_96 -> m18_98  [key=0, style=solid];
m18_96 -> m18_101  [key=2, style=dotted];
m18_99 -> m18_100  [key=0, style=solid];
m18_99 -> m18_88  [key=2, style=dotted];
m18_99 -> m18_87  [color=blue, key=0, style=bold];
m18_262 -> m18_263  [key=0, style=solid];
m18_262 -> m18_270  [key=0, style=solid];
m18_262 -> m18_272  [key=2, style=dotted];
m18_263 -> m18_264  [key=0, style=solid];
m18_263 -> m18_88  [key=2, style=dotted];
m18_263 -> m18_266  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_263 -> m18_268  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_263 -> m18_269  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_264 -> m18_265  [key=0, style=solid];
m18_264 -> m18_83  [key=2, style=dotted];
m18_264 -> m18_266  [color=darkseagreen4, key=1, label=res, style=dashed];
m18_280 -> m18_281  [key=0, style=solid];
m18_280 -> m18_83  [key=2, style=dotted];
m18_280 -> m18_282  [color=darkseagreen4, key=1, label=res, style=dashed];
m18_281 -> m18_282  [key=0, style=solid];
m18_281 -> m18_84  [key=2, style=dotted];
m18_281 -> m18_283  [color=darkseagreen4, key=1, label=start, style=dashed];
m18_281 -> m18_286  [color=darkseagreen4, key=1, label=start, style=dashed];
m18_282 -> m18_283  [key=0, style=solid];
m18_282 -> m18_86  [key=2, style=dotted];
m18_282 -> m18_87  [key=2, style=dotted];
m18_282 -> m18_286  [color=darkseagreen4, key=1, label=end, style=dashed];
m18_283 -> m18_284  [key=0, style=solid];
m18_283 -> m18_272  [key=2, style=dotted];
m18_283 -> m18_69  [key=2, style=dotted];
m18_283 -> m18_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_286 -> m18_287  [key=0, style=solid];
m18_286 -> m18_88  [key=2, style=dotted];
m18_312 -> m18_313  [key=0, style=solid];
m18_312 -> m18_314  [key=2, style=dotted];
m18_76 -> m18_78  [key=0, style=solid];
m18_76 -> m18_77  [key=0, style=solid];
m18_89 -> m18_90  [key=0, style=solid];
m18_89 -> m18_67  [key=2, style=dotted];
m18_89 -> m18_89  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_89 -> m18_93  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_89 -> m18_94  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_95 -> m18_96  [key=0, style=solid];
m18_95 -> m18_100  [key=2, style=dotted];
m18_97 -> m18_99  [key=0, style=solid];
m18_97 -> m18_98  [key=0, style=solid];
m18_139 -> m18_140  [key=0, style=solid];
m18_154 -> m18_155  [key=0, style=solid];
m18_257 -> m18_258  [key=0, style=solid];
m18_260 -> m18_262  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_260 -> m18_264  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_260 -> m18_261  [key=0, style=solid];
m18_261 -> m18_262  [key=0, style=solid];
m18_261 -> m18_226  [key=2, style=dotted];
m18_261 -> m18_269  [color=darkseagreen4, key=1, label=requests, style=dashed];
m18_261 -> m18_270  [color=darkseagreen4, key=1, label=requests, style=dashed];
m18_269 -> m18_262  [key=0, style=solid];
m18_269 -> m18_273  [key=2, style=dotted];
m18_270 -> m18_271  [key=0, style=solid];
m18_266 -> m18_267  [key=0, style=solid];
m18_268 -> m18_269  [key=0, style=solid];
m18_265 -> m18_266  [key=0, style=solid];
m18_265 -> m18_267  [key=0, style=solid];
m18_276 -> m18_277  [key=0, style=solid];
m18_279 -> m18_280  [key=0, style=solid];
m18_279 -> m18_281  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_279 -> m18_283  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_284 -> m18_279  [color=blue, key=0, style=bold];
m18_285 -> m18_286  [key=0, style=solid];
m18_287 -> m18_285  [color=blue, key=0, style=bold];
m18_311 -> m18_312  [key=0, style=solid];
m18_313 -> m18_311  [color=blue, key=0, style=bold];
m18_267 -> m18_269  [key=0, style=solid];
m18_267 -> m18_268  [key=0, style=solid];
m18_77 -> m18_81  [key=0, style=solid];
m18_77 -> m18_78  [key=0, style=solid];
m18_77 -> m18_79  [key=2, style=dotted];
m18_91 -> m18_89  [color=blue, key=0, style=bold];
m18_91 -> m18_92  [key=0, style=solid];
m18_91 -> m18_100  [key=2, style=dotted];
m18_91 -> m18_97  [color=darkseagreen4, key=1, label=currentInTimeZone, style=dashed];
m18_90 -> m18_91  [key=0, style=solid];
m18_90 -> m18_99  [key=0, style=solid];
m18_98 -> m18_100  [key=0, style=solid];
m18_98 -> m18_90  [key=0, style=solid];
m18_103 -> m18_101  [color=blue, key=0, style=bold];
m18_103 -> m18_104  [key=0, style=solid];
m18_103 -> m18_102  [key=0, style=solid];
m18_103 -> m18_67  [key=2, style=dotted];
m18_103 -> m18_109  [key=2, style=dotted];
m18_102 -> m18_103  [key=0, style=solid];
m18_102 -> m18_105  [key=0, style=solid];
m18_102 -> m18_107  [key=0, style=solid];
m18_141 -> m18_139  [color=blue, key=0, style=bold];
m18_140 -> m18_141  [key=0, style=solid];
m18_156 -> m18_154  [color=blue, key=0, style=bold];
m18_155 -> m18_156  [key=0, style=solid];
m18_258 -> m18_216  [key=2, style=dotted];
m18_258 -> m18_259  [key=0, style=solid];
m18_277 -> m18_216  [key=2, style=dotted];
m18_277 -> m18_278  [key=0, style=solid];
m18_259 -> m18_257  [color=blue, key=0, style=bold];
m18_271 -> m18_260  [color=blue, key=0, style=bold];
m18_278 -> m18_276  [color=blue, key=0, style=bold];
m18_309 -> m18_310  [key=0, style=solid];
m18_310 -> m18_308  [color=blue, key=0, style=bold];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_7  [color=darkseagreen4, key=1, label=double, style=dashed];
m18_5 -> m18_9  [color=darkseagreen4, key=1, label=double, style=dashed];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_0  [key=2, style=dotted];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_11  [key=0, style=solid];
m18_7 -> m18_13  [key=2, style=dotted];
m18_7 -> m18_5  [color=blue, key=0, style=bold];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_14  [key=2, style=dotted];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_10  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m18_8 -> m18_11  [color=darkseagreen4, key=1, label="QuantConnect.Resolution", style=dashed];
m18_8 -> m18_13  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution resolution", style=bold];
m18_11 -> m18_12  [key=0, style=solid];
m18_10 -> m18_11  [key=0, style=solid];
m18_12 -> m18_5  [color=blue, key=0, style=bold];
m18_12 -> m18_8  [color=blue, key=0, style=bold];
m18_67 -> m18_70  [key=2, style=dotted];
m18_67 -> m18_68  [key=0, style=solid];
m18_67 -> m18_71  [key=2, style=dotted];
m18_67 -> m18_72  [key=2, style=dotted];
m18_67 -> m18_73  [key=2, style=dotted];
m18_67 -> m18_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_157 -> m18_161  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_157 -> m18_158  [key=0, style=solid];
m18_160 -> m18_161  [key=0, style=solid];
m18_160 -> m18_119  [key=2, style=dotted];
m18_161 -> m18_162  [key=0, style=solid];
m18_161 -> m18_163  [key=2, style=dotted];
m18_161 -> m18_120  [key=2, style=dotted];
m18_161 -> m18_53  [key=2, style=dotted];
m18_159 -> m18_160  [key=0, style=solid];
m18_159 -> m18_161  [key=0, style=solid];
m18_158 -> m18_159  [key=0, style=solid];
m18_162 -> m18_157  [color=blue, key=0, style=bold];
m18_322 -> m18_323  [key=0, style=solid];
m18_322 -> m18_324  [key=0, style=solid];
m18_322 -> m18_189  [key=2, style=dotted];
m18_324 -> m18_325  [key=0, style=solid];
m18_321 -> m18_322  [key=0, style=solid];
m18_323 -> m18_325  [key=0, style=solid];
m18_325 -> m18_83  [color=blue, key=0, style=bold];
m18_272 -> m18_254  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_272 -> m18_274  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_272 -> m18_298  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_272 -> m18_301  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_272 -> m18_302  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_272 -> m18_303  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_272 -> m18_312  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_272 -> m18_82  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m18_272 -> m18_297  [key=0, style=solid];
m18_272 -> m18_299  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m18_298 -> m18_299  [key=0, style=solid];
m18_298 -> m18_300  [key=0, style=solid];
m18_298 -> m18_189  [key=2, style=dotted];
m18_300 -> m18_301  [key=0, style=solid];
m18_300 -> m18_302  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_300 -> m18_303  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_300 -> m18_312  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_301 -> m18_302  [key=0, style=solid];
m18_301 -> m18_188  [key=2, style=dotted];
m18_301 -> m18_303  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m18_301 -> m18_312  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m18_302 -> m18_303  [key=0, style=solid];
m18_302 -> m18_216  [key=2, style=dotted];
m18_302 -> m18_307  [key=2, style=dotted];
m18_303 -> m18_304  [key=0, style=solid];
m18_303 -> m18_69  [key=2, style=dotted];
m18_303 -> m18_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_297 -> m18_298  [key=0, style=solid];
m18_299 -> m18_299  [color=darkseagreen4, key=1, label=sub, style=dashed];
m18_299 -> m18_304  [key=0, style=solid];
m18_299 -> d72  [key=2, style=dotted];
m18_299 -> m18_306  [key=2, style=dotted];
m18_299 -> m18_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_304 -> m18_272  [color=blue, key=0, style=bold];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_45  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> GetWarmupHistoryRequests", style=bold];
m18_37 -> m18_47  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> GetWarmupHistoryRequests", style=bold];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_40  [key=0, style=solid];
m18_38 -> m18_36  [color=blue, key=0, style=bold];
m18_39 -> m18_44  [key=0, style=solid];
m18_39 -> m18_45  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_43  [key=0, style=solid];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_46  [key=2, style=dotted];
m18_41 -> m18_39  [color=blue, key=0, style=bold];
m18_42 -> m18_44  [key=0, style=solid];
m18_42 -> m18_47  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_42 -> m18_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_42 -> m18_50  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_42 -> m18_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_43 -> m18_44  [key=0, style=solid];
m18_43 -> m18_48  [key=2, style=dotted];
m18_44 -> m18_37  [color=blue, key=0, style=bold];
m18_44 -> m18_45  [key=0, style=solid];
m18_44 -> m18_46  [key=0, style=solid];
m18_44 -> m18_58  [key=2, style=dotted];
m18_176 -> m18_194  [key=0, style=solid];
m18_176 -> m18_45  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> requests", style=bold];
m18_176 -> m18_47  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> requests", style=bold];
m18_194 -> m18_196  [key=2, style=dotted];
m18_194 -> m18_195  [key=0, style=solid];
m18_194 -> m18_53  [key=2, style=dotted];
m18_195 -> m18_176  [color=blue, key=0, style=bold];
m18_196 -> m18_236  [color=green, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest>", style=dashed];
m18_196 -> m18_235  [key=0, style=solid];
m18_196 -> m18_245  [color=darkseagreen4, key=1, label=DateTimeZone, style=dashed];
m18_196 -> m18_176  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<QuantConnect.Data.HistoryRequest> requests", style=bold];
m18_236 -> m18_237  [color=green, key=0, style=solid];
m18_236 -> m18_70  [color=green, key=2, style=dotted];
m18_236 -> m18_247  [color=green, key=2, style=dotted];
m18_236 -> m18_250  [color=green, key=1, label="lambda expression", style=dashed];
m18_236 -> m18_245  [color=green, key=1, label=reqs, style=dashed];
m18_235 -> m18_236  [color=green, key=0, style=solid];
m18_235 -> m18_235  [color=darkorchid, key=3, label="Local variable bool sentMessage", style=bold];
m18_235 -> m18_242  [color=darkseagreen4, key=1, label=sentMessage, style=dashed];
m18_237 -> m18_238  [key=0, style=solid];
m18_237 -> m18_245  [key=0, style=solid];
m18_237 -> m18_239  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_245 -> m18_246  [key=0, style=solid];
m18_245 -> m18_249  [key=2, style=dotted];
m18_238 -> m18_237  [key=0, style=solid];
m18_238 -> m18_239  [key=0, style=solid];
m18_239 -> m18_239  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_239 -> m18_240  [key=0, style=solid];
m18_239 -> m18_241  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_244 -> m18_237  [key=0, style=solid];
m18_244 -> m18_248  [key=2, style=dotted];
m18_242 -> m18_237  [key=0, style=solid];
m18_242 -> m18_243  [key=0, style=solid];
m18_240 -> m18_242  [key=0, style=solid];
m18_240 -> m18_241  [key=0, style=solid];
m18_241 -> m18_242  [key=0, style=solid];
m18_241 -> m18_241  [color=darkseagreen4, key=1, label=request, style=dashed];
m18_243 -> m18_244  [key=0, style=solid];
m18_246 -> m18_196  [color=blue, key=0, style=bold];
m18_57 -> m18_174  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<QuantConnect.Symbol>", style=dashed];
m18_57 -> m18_54  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_57 -> m18_172  [key=0, style=solid];
m18_57 -> m18_42  [color=blue, key=0, style=bold];
m18_174 -> m18_175  [key=0, style=solid];
m18_174 -> m18_45  [key=2, style=dotted];
m18_174 -> m18_176  [key=2, style=dotted];
m18_174 -> m18_53  [key=2, style=dotted];
m18_172 -> m18_174  [key=0, style=solid];
m18_172 -> m18_173  [key=0, style=solid];
m18_173 -> m18_118  [key=2, style=dotted];
m18_173 -> m18_175  [key=0, style=solid];
m18_175 -> m18_57  [color=blue, key=0, style=bold];
m18_188 -> m18_316  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_188 -> m18_318  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_188 -> m18_84  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_188 -> m18_315  [key=0, style=solid];
m18_188 -> m18_272  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Symbol symbol", style=bold];
m18_316 -> m18_317  [key=0, style=solid];
m18_316 -> m18_318  [key=0, style=solid];
m18_316 -> m18_189  [key=2, style=dotted];
m18_318 -> m18_319  [key=0, style=solid];
m18_318 -> m18_320  [key=2, style=dotted];
m18_315 -> m18_316  [key=0, style=solid];
m18_317 -> m18_319  [key=0, style=solid];
m18_319 -> m18_188  [color=blue, key=0, style=bold];
m18_87 -> m18_88  [key=0, style=solid];
m18_87 -> m18_97  [color=crimson, key=0, style=bold];
m18_87 -> m18_89  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_87 -> m18_91  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m18_87 -> m18_93  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m18_87 -> m18_94  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m18_87 -> m18_95  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m18_87 -> m18_96  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m18_87 -> m18_98  [color=darkseagreen4, key=1, label="QuantConnect.Securities.SecurityExchangeHours", style=dashed];
m18_87 -> m18_149  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.HistoryRequest request", style=bold];
m18_88 -> m18_89  [key=0, style=solid];
m18_88 -> m18_90  [color=darkseagreen4, key=1, label=currentExchangeTime, style=dashed];
m18_88 -> m18_91  [color=darkseagreen4, key=1, label=currentExchangeTime, style=dashed];
m18_88 -> m18_96  [color=darkseagreen4, key=1, label=currentExchangeTime, style=dashed];
m18_88 -> m18_66  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_88 -> m18_92  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscription", style=bold];
m18_88 -> m18_145  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscription", style=bold];
m18_88 -> m18_254  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Data.SubscriptionDataConfig subscription", style=bold];
m18_88 -> m18_274  [color=darkorchid, key=3, label="Parameter variable System.DateTime endAlgoTz", style=bold];
m18_88 -> m18_290  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_88 -> m18_45  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_88 -> m18_47  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_88 -> m18_64  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_88 -> m18_288  [key=0, style=solid];
m18_88 -> m18_289  [color=darkseagreen4, key=1, label="QuantConnect.Data.SubscriptionDataConfig", style=dashed];
m18_88 -> m18_107  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_48  [key=0, style=solid];
m18_46 -> m18_58  [key=2, style=dotted];
m18_53 -> m18_57  [key=0, style=solid];
m18_119 -> m18_110  [color=blue, key=0, style=bold];
m18_294 -> m18_295  [key=0, style=solid];
m18_294 -> m18_272  [key=2, style=dotted];
m18_294 -> m18_296  [key=2, style=dotted];
m18_295 -> m18_82  [color=blue, key=0, style=bold];
m18_50 -> m18_51  [key=0, style=solid];
m18_50 -> m18_52  [key=0, style=solid];
m18_50 -> m18_58  [key=2, style=dotted];
m18_50 -> m18_53  [key=2, style=dotted];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_54  [key=0, style=solid];
m18_52 -> m18_56  [key=0, style=solid];
m18_52 -> m18_60  [key=2, style=dotted];
m18_52 -> m18_115  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m18_52 -> m18_177  [key=0, style=solid];
m18_52 -> m18_49  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_52 -> m18_163  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_52 -> m18_164  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m18_52 -> m18_108  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_45 -> m18_57  [key=0, style=solid];
m18_45 -> m18_274  [key=0, style=solid];
m18_45 -> m18_280  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_45 -> m18_281  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_45 -> m18_283  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_45 -> m18_286  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_49 -> m18_57  [key=0, style=solid];
m18_49 -> m18_50  [key=0, style=solid];
m18_51 -> m18_57  [key=0, style=solid];
m18_51 -> m18_49  [color=blue, key=0, style=bold];
m18_54 -> m18_55  [key=0, style=solid];
m18_56 -> m18_57  [key=0, style=solid];
m18_56 -> m18_54  [color=blue, key=0, style=bold];
m18_55 -> m18_56  [key=0, style=solid];
m18_55 -> m18_14  [key=2, style=dotted];
m18_55 -> m18_57  [key=2, style=dotted];
m18_55 -> m18_53  [key=2, style=dotted];
m18_218 -> m18_201  [color=darkorchid, key=3, label="Parameter variable int periods", style=bold];
m18_218 -> m18_232  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m18_218 -> m18_233  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m18_218 -> m18_197  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Securities.Security security", style=bold];
m18_218 -> m18_200  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_218 -> m18_230  [key=0, style=solid];
m18_232 -> m18_233  [key=0, style=solid];
m18_232 -> m18_46  [key=2, style=dotted];
m18_232 -> m18_190  [key=2, style=dotted];
m18_233 -> m18_234  [key=0, style=solid];
m18_233 -> m18_191  [key=2, style=dotted];
m18_231 -> m18_232  [key=0, style=solid];
m18_231 -> m18_231  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m18_230 -> m18_86  [key=2, style=dotted];
m18_230 -> m18_231  [key=0, style=solid];
m18_234 -> m18_218  [color=blue, key=0, style=bold];
m18_118 -> m18_119  [key=0, style=solid];
m18_163 -> m18_170  [key=0, style=solid];
m18_163 -> m18_157  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_170 -> m18_171  [key=0, style=solid];
m18_170 -> m18_52  [key=2, style=dotted];
m18_170 -> m18_53  [key=2, style=dotted];
m18_171 -> m18_163  [color=blue, key=0, style=bold];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_16  [key=2, style=dotted];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_27  [color=blue, key=0, style=bold];
m18_31 -> m18_29  [color=blue, key=0, style=bold];
m18_58 -> m18_59  [key=0, style=solid];
m18_59 -> m18_60  [key=0, style=solid];
m18_59 -> m18_61  [key=2, style=dotted];
m18_59 -> m18_53  [key=2, style=dotted];
m18_177 -> m18_178  [key=0, style=solid];
m18_177 -> m18_47  [key=2, style=dotted];
m18_177 -> m18_176  [key=2, style=dotted];
m18_177 -> m18_53  [key=2, style=dotted];
m18_178 -> m18_52  [color=blue, key=0, style=bold];
m18_107 -> m18_132  [color=darkorchid, key=3, label="Parameter variable System.DateTime start", style=bold];
m18_107 -> m18_145  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_107 -> m18_147  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_107 -> m18_149  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_107 -> m18_150  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_107 -> m18_104  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_107 -> m18_142  [key=0, style=solid];
m18_107 -> m18_148  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_107 -> m18_121  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_107 -> m18_108  [key=0, style=solid];
m18_143 -> m18_151  [key=0, style=solid];
m18_143 -> m18_118  [key=2, style=dotted];
m18_145 -> m18_146  [key=0, style=solid];
m18_145 -> m18_82  [key=2, style=dotted];
m18_145 -> m18_149  [color=darkseagreen4, key=1, label=config, style=dashed];
m18_147 -> m18_148  [key=0, style=solid];
m18_147 -> m18_69  [key=2, style=dotted];
m18_147 -> m18_135  [key=2, style=dotted];
m18_147 -> m18_136  [key=2, style=dotted];
m18_147 -> m18_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_149 -> m18_150  [key=0, style=solid];
m18_149 -> m18_88  [key=2, style=dotted];
m18_150 -> m18_151  [key=0, style=solid];
m18_150 -> m18_152  [key=2, style=dotted];
m18_150 -> m18_153  [key=2, style=dotted];
m18_150 -> m18_53  [key=2, style=dotted];
m18_142 -> m18_143  [key=0, style=solid];
m18_142 -> m18_144  [key=0, style=solid];
m18_144 -> m18_145  [key=0, style=solid];
m18_144 -> m18_148  [color=darkseagreen4, key=1, label=requestedType, style=dashed];
m18_146 -> m18_147  [key=0, style=solid];
m18_146 -> m18_149  [key=0, style=solid];
m18_148 -> m18_151  [key=0, style=solid];
m18_148 -> m18_137  [key=2, style=dotted];
m18_148 -> m18_138  [key=2, style=dotted];
m18_151 -> m18_107  [color=blue, key=0, style=bold];
m18_290 -> m18_291  [key=0, style=solid];
m18_290 -> m18_293  [key=2, style=dotted];
m18_290 -> m18_188  [key=2, style=dotted];
m18_290 -> m18_85  [key=2, style=dotted];
m18_288 -> m18_290  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_288 -> m18_288  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_288 -> m18_289  [key=0, style=solid];
m18_289 -> m18_290  [key=0, style=solid];
m18_289 -> m18_219  [key=2, style=dotted];
m18_291 -> m18_292  [key=0, style=solid];
m18_292 -> m18_88  [color=blue, key=0, style=bold];
m18_105 -> m18_106  [key=0, style=solid];
m18_105 -> m18_107  [key=2, style=dotted];
m18_105 -> m18_53  [key=2, style=dotted];
m18_104 -> m18_108  [key=0, style=solid];
m18_104 -> m18_105  [key=0, style=solid];
m18_106 -> m18_107  [key=0, style=solid];
m18_106 -> m18_14  [key=2, style=dotted];
m18_106 -> m18_104  [color=blue, key=0, style=bold];
m18_108 -> m18_75  [color=blue, key=0, style=bold];
m18_108 -> m18_114  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_108 -> m18_115  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_108 -> m18_116  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_108 -> m18_83  [color=darkorchid, key=3, label="Parameter variable QuantConnect.Resolution? resolution", style=bold];
m18_108 -> m18_109  [key=0, style=solid];
m18_108 -> m18_111  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_15  [color=blue, key=0, style=bold];
m18_13 -> m18_14  [key=0, style=solid];
m18_15 -> m18_13  [color=blue, key=0, style=bold];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_17  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_15 -> m18_19  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_36 -> m18_37  [key=0, style=solid];
m18_180 -> m18_180  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_180 -> m18_181  [key=0, style=solid];
m18_180 -> m18_83  [key=2, style=dotted];
m18_180 -> m18_183  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_181 -> m18_182  [key=0, style=solid];
m18_181 -> m18_188  [key=2, style=dotted];
m18_181 -> m18_185  [color=darkseagreen4, key=1, label=exchange, style=dashed];
m18_181 -> m18_186  [color=darkseagreen4, key=1, label=exchange, style=dashed];
m18_182 -> m18_182  [color=darkseagreen4, key=1, label=security, style=dashed];
m18_182 -> m18_183  [key=0, style=solid];
m18_182 -> m18_189  [key=2, style=dotted];
m18_182 -> m18_185  [color=darkseagreen4, key=1, label=isExtendedMarketHours, style=dashed];
m18_185 -> m18_186  [key=0, style=solid];
m18_185 -> m18_46  [key=2, style=dotted];
m18_185 -> m18_190  [key=2, style=dotted];
m18_186 -> m18_187  [key=0, style=solid];
m18_186 -> m18_191  [key=2, style=dotted];
m18_179 -> m18_180  [key=0, style=solid];
m18_179 -> m18_182  [color=darkseagreen4, key=1, label=security, style=dashed];
m18_183 -> m18_86  [key=2, style=dotted];
m18_183 -> m18_184  [key=0, style=solid];
m18_184 -> m18_185  [key=0, style=solid];
m18_184 -> m18_184  [color=darkseagreen4, key=1, label=timeSpan, style=dashed];
m18_187 -> m18_84  [color=blue, key=0, style=bold];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_18  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_16 -> m18_21  [color=darkorchid, key=3, label="Parameter variable int barCount", style=bold];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_20  [key=0, style=solid];
m18_17 -> m18_22  [key=2, style=dotted];
m18_17 -> m18_17  [color=darkorchid, key=3, label="Field variable string _symbolEmptyErrorMessage", style=bold];
m18_18 -> m18_19  [key=0, style=solid];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_23  [key=2, style=dotted];
m18_19 -> m18_14  [key=2, style=dotted];
m18_20 -> m18_16  [color=blue, key=0, style=bold];
m18_20 -> m18_21  [key=0, style=solid];
m18_35 -> m18_32  [color=blue, key=0, style=bold];
m18_110 -> m18_117  [key=0, style=solid];
m18_110 -> m18_118  [key=2, style=dotted];
m18_110 -> m18_111  [key=0, style=solid];
m18_110 -> m18_112  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>", style=dashed];
m18_110 -> m18_113  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_110 -> m18_114  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<QuantConnect.Securities.Security>", style=dashed];
m18_113 -> m18_114  [key=0, style=solid];
m18_113 -> m18_119  [key=2, style=dotted];
m18_113 -> m18_116  [key=0, style=solid];
m18_113 -> m18_118  [key=0, style=solid];
m18_113 -> m18_61  [key=2, style=dotted];
m18_114 -> m18_114  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_114 -> m18_115  [key=0, style=solid];
m18_114 -> m18_83  [key=2, style=dotted];
m18_114 -> m18_116  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_114 -> m18_113  [key=0, style=solid];
m18_114 -> m18_75  [key=2, style=dotted];
m18_115 -> m18_116  [key=0, style=solid];
m18_115 -> m18_84  [key=2, style=dotted];
m18_115 -> m18_113  [key=0, style=solid];
m18_115 -> m18_115  [color=darkseagreen4, key=1, label=count, style=dashed];
m18_115 -> m18_118  [color=darkseagreen4, key=1, label=count, style=dashed];
m18_116 -> m18_117  [key=0, style=solid];
m18_116 -> m18_86  [key=2, style=dotted];
m18_116 -> m18_87  [key=2, style=dotted];
m18_116 -> m18_52  [key=2, style=dotted];
m18_116 -> m18_120  [key=2, style=dotted];
m18_116 -> m18_53  [key=2, style=dotted];
m18_112 -> m18_113  [key=0, style=solid];
m18_112 -> m18_114  [key=0, style=solid];
m18_112 -> m18_120  [key=2, style=dotted];
m18_111 -> m18_112  [key=0, style=solid];
m18_111 -> m18_115  [color=darkseagreen4, key=1, label=count, style=dashed];
m18_111 -> m18_118  [color=darkseagreen4, key=1, label=count, style=dashed];
m18_117 -> m18_108  [color=blue, key=0, style=bold];
m18_117 -> m18_118  [key=0, style=solid];
m18_117 -> m18_14  [key=2, style=dotted];
m18_164 -> m18_168  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_164 -> m18_165  [key=0, style=solid];
m18_167 -> m18_168  [key=0, style=solid];
m18_167 -> m18_119  [key=2, style=dotted];
m18_168 -> m18_169  [key=0, style=solid];
m18_168 -> m18_52  [key=2, style=dotted];
m18_168 -> m18_120  [key=2, style=dotted];
m18_168 -> m18_53  [key=2, style=dotted];
m18_166 -> m18_167  [key=0, style=solid];
m18_166 -> m18_168  [key=0, style=solid];
m18_165 -> m18_166  [key=0, style=solid];
m18_169 -> m18_164  [color=blue, key=0, style=bold];
m18_197 -> m18_66  [color=darkorchid, key=3, label="method methodReturn QuantConnect.Data.BaseData GetLastKnownPrice", style=bold];
m18_197 -> m18_198  [key=0, style=solid];
m18_197 -> m18_201  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m18_197 -> m18_206  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m18_197 -> m18_210  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m18_197 -> m18_200  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m18_197 -> m18_204  [color=darkseagreen4, key=1, label="QuantConnect.Securities.Security", style=dashed];
m18_198 -> m18_199  [key=0, style=solid];
m18_198 -> m18_200  [key=0, style=solid];
m18_198 -> m18_216  [key=2, style=dotted];
m18_201 -> m18_202  [key=0, style=solid];
m18_201 -> m18_218  [key=2, style=dotted];
m18_201 -> m18_210  [color=darkseagreen4, key=1, label=startTime, style=dashed];
m18_202 -> m18_203  [key=0, style=solid];
m18_202 -> m18_86  [key=2, style=dotted];
m18_202 -> m18_87  [key=2, style=dotted];
m18_202 -> m18_210  [color=darkseagreen4, key=1, label=endTime, style=dashed];
m18_206 -> m18_207  [key=0, style=solid];
m18_206 -> m18_82  [key=2, style=dotted];
m18_206 -> m18_208  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m18_206 -> m18_209  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m18_206 -> m18_210  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m18_210 -> m18_211  [key=0, style=solid];
m18_210 -> m18_221  [key=2, style=dotted];
m18_210 -> m18_85  [key=2, style=dotted];
m18_210 -> m18_222  [key=2, style=dotted];
m18_210 -> m18_223  [key=2, style=dotted];
m18_210 -> m18_224  [key=2, style=dotted];
m18_210 -> m18_225  [key=2, style=dotted];
m18_211 -> m18_212  [key=0, style=solid];
m18_211 -> m18_226  [key=2, style=dotted];
m18_211 -> m18_176  [key=2, style=dotted];
m18_211 -> m18_227  [key=2, style=dotted];
m18_211 -> m18_213  [color=darkseagreen4, key=1, label=history, style=dashed];
m18_199 -> m18_215  [key=0, style=solid];
m18_200 -> m18_201  [key=0, style=solid];
m18_200 -> m18_202  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_200 -> m18_210  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_200 -> m18_217  [key=2, style=dotted];
m18_200 -> m18_205  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_200 -> m18_208  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_200 -> m18_209  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_203 -> m18_206  [color=darkseagreen4, key=1, label=dataType, style=dashed];
m18_203 -> m18_204  [key=0, style=solid];
m18_204 -> m18_206  [key=0, style=solid];
m18_204 -> m18_205  [key=0, style=solid];
m18_205 -> m18_206  [key=0, style=solid];
m18_205 -> m18_219  [key=2, style=dotted];
m18_207 -> m18_210  [key=0, style=solid];
m18_207 -> m18_208  [key=0, style=solid];
m18_208 -> m18_209  [key=0, style=solid];
m18_208 -> m18_219  [key=2, style=dotted];
m18_209 -> m18_210  [key=0, style=solid];
m18_209 -> m18_209  [color=darkseagreen4, key=1, label=subscriptionDataConfig, style=dashed];
m18_209 -> m18_220  [key=2, style=dotted];
m18_212 -> m18_213  [key=0, style=solid];
m18_212 -> m18_214  [key=0, style=solid];
m18_212 -> m18_228  [key=2, style=dotted];
m18_212 -> m18_229  [key=2, style=dotted];
m18_213 -> m18_215  [key=0, style=solid];
m18_213 -> m18_229  [key=2, style=dotted];
m18_214 -> m18_215  [key=0, style=solid];
m18_215 -> m18_197  [color=blue, key=0, style=bold];
m18_274 -> m18_70  [key=2, style=dotted];
m18_274 -> m18_275  [key=0, style=solid];
m18_274 -> m18_256  [key=2, style=dotted];
m18_274 -> m18_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_274 -> m18_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_274 -> m18_83  [color=darkorchid, key=3, label="Local variable QuantConnect.Resolution? res", style=bold];
m18_274 -> m18_84  [color=darkorchid, key=3, label="Local variable System.DateTime start", style=bold];
m18_275 -> m18_45  [color=blue, key=0, style=bold];
m18_326 -> m18_236  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_251  [color=green, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_1  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_2  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_3  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_6  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_9  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_10  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_11  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_14  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_17  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_18  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_19  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_22  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_25  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_26  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_27  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_30  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_33  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_34  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_38  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_39  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_40  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_41  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_42  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_50  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_55  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_59  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_62  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_66  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_75  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_78  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_79  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_80  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_67  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_92  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_96  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_99  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_93  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_105  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_110  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_113  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_114  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_115  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_116  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_125  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_127  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_129  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_131  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_132  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_133  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_143  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_145  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_147  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_149  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_150  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_160  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_161  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_167  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_168  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_170  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_174  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_177  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_180  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_181  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_182  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_185  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_186  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_192  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_194  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_198  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_201  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_202  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_206  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_210  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_211  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_232  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_233  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_238  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_239  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_244  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_245  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_254  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_262  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_263  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_264  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_274  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_280  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_281  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_282  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_283  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_286  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_290  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_294  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_298  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_300  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_301  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_302  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_303  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_312  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_316  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_318  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_322  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_326 -> m18_324  [color=darkseagreen4, key=1, label="QuantConnect.Algorithm.QCAlgorithm", style=dashed];
m18_327 -> m18_78  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_328 -> m18_79  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_329 -> m18_99  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_330 -> m18_99  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_331 -> m18_99  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_332 -> m18_263  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_333 -> m18_263  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m18_334 -> m18_263  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_334 -> m18_264  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_337 -> m18_280  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_337 -> m18_283  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_337 -> m18_286  [color=darkseagreen4, key=1, label="QuantConnect.Resolution?", style=dashed];
m18_338 -> m18_281  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_339 -> m18_286  [color=darkseagreen4, key=1, label=start, style=dashed];
m18_340 -> m18_286  [color=darkseagreen4, key=1, label=end, style=dashed];
m18_341 -> m18_312  [color=darkseagreen4, key=1, label="QuantConnect.Symbol", style=dashed];
m18_342 -> m18_312  [color=darkseagreen4, key=1, label=resolution, style=dashed];
m18_343 -> m18_312  [color=darkseagreen4, key=1, label=timeZone, style=dashed];
m18_335 -> m18_266  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m18_335 -> m18_265  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m18_336 -> m18_268  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m18_336 -> m18_267  [color=darkseagreen4, key=1, label="bool?", style=dashed];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [color=blue, key=0, style=bold];
m19_2 -> m19_4  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_7  [color=red, key=1, label="QuantConnect.Exceptions.IExceptionInterpreter", style=dashed];
m19_3 -> m19_4  [color=green, key=0, style=solid];
m19_3 -> m19_5  [color=darkseagreen4, key=1, label=see, style=dashed];
m19_3 -> m19_6  [color=darkseagreen4, key=1, label=see, style=dashed];
m19_3 -> m19_7  [color=darkseagreen4, key=1, label=see, style=dashed];
m19_3 -> m19_8  [color=darkseagreen4, key=1, label=see, style=dashed];
m19_4 -> m19_5  [color=green, key=0, style=solid];
m19_4 -> m19_6  [color=green, key=1, label=message, style=dashed];
m19_4 -> m19_8  [color=green, key=1, label=message, style=dashed];
m19_7 -> m19_8  [color=red, key=0, style=solid];
m19_7 -> m19_11  [color=red, key=2, style=dotted];
m19_5 -> m19_6  [color=red, key=0, style=solid];
m19_5 -> m19_7  [color=red, key=0, style=solid];
m19_5 -> m19_10  [key=2, style=dotted];
m19_6 -> m19_7  [color=red, key=0, style=solid];
m19_6 -> m19_6  [color=darkseagreen4, key=1, label=message, style=dashed];
m19_6 -> m19_8  [color=darkseagreen4, key=1, label=message, style=dashed];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_12  [key=2, style=dotted];
m19_9 -> m19_2  [color=blue, key=0, style=bold];
m20_18 -> m20_19  [key=0, style=solid];
m20_24 -> m20_25  [color=green, key=0, style=solid];
m20_20 -> m20_24  [color=green, key=1, label=name, style=dashed];
m20_20 -> m20_20  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_28  [key=2, style=dotted];
m20_20 -> m20_22  [color=darkseagreen4, key=1, label=name, style=dashed];
m20_21 -> m20_24  [color=green, key=1, label=message, style=dashed];
m20_21 -> m20_21  [color=darkseagreen4, key=1, label=id, style=dashed];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_28  [key=2, style=dotted];
m20_23 -> m20_24  [color=green, key=0, style=solid];
m20_23 -> m20_5  [color=green, key=2, style=dotted];
m20_23 -> m20_17  [color=green, key=2, style=dotted];
m20_23 -> m20_25  [color=green, key=1, label=projected, style=dashed];
m20_25 -> m20_26  [color=green, key=0, style=solid];
m20_25 -> d63  [color=green, key=2, style=dotted];
m20_22 -> m20_23  [color=green, key=0, style=solid];
m20_22 -> m20_29  [key=2, style=dotted];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_27  [key=2, style=dotted];
m20_26 -> m20_18  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_2 -> m20_5  [key=2, style=dotted];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_6  [key=2, style=dotted];
m20_1 -> m20_4  [key=2, style=dotted];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_0  [color=blue, key=0, style=bold];
m20_3 -> m20_0  [color=blue, key=0, style=bold];
m20_58 -> m20_59  [color=green, key=0, style=solid];
m20_15 -> m20_16  [color=green, key=0, style=solid];
m20_15 -> m20_17  [color=green, key=2, style=dotted];
m20_14 -> m20_15  [color=green, key=0, style=solid];
m20_16 -> m20_14  [color=blue, key=0, style=bold];
m20_55 -> m20_56  [color=green, key=0, style=solid];
m20_56 -> m20_57  [color=green, key=0, style=solid];
m20_56 -> m20_52  [color=green, key=2, style=dotted];
m20_57 -> m20_55  [color=blue, key=0, style=bold];
m20_59 -> m20_60  [color=green, key=0, style=solid];
m20_59 -> m20_52  [color=green, key=2, style=dotted];
m20_60 -> m20_58  [color=blue, key=0, style=bold];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_10  [color=darkseagreen4, key=1, label=bool, style=dashed];
m20_9 -> m20_10  [color=green, key=0, style=solid];
m20_9 -> m20_5  [color=green, key=2, style=dotted];
m20_9 -> m20_11  [color=green, key=1, label=projection, style=dashed];
m20_9 -> m20_15  [color=green, key=1, label=projection, style=dashed];
m20_8 -> m20_9  [color=green, key=0, style=solid];
m20_8 -> m20_11  [color=green, key=1, label=exception, style=dashed];
m20_8 -> m20_15  [color=green, key=1, label=exception, style=dashed];
m20_8 -> m20_4  [key=2, style=dotted];
m20_10 -> m20_11  [color=green, key=0, style=solid];
m20_11 -> m20_12  [color=green, key=0, style=solid];
m20_11 -> m20_13  [color=green, key=2, style=dotted];
m20_11 -> m20_14  [color=green, key=1, label="lambda expression", style=dashed];
m20_12 -> m20_7  [color=blue, key=0, style=bold];
m20_38 -> m20_39  [key=0, style=solid];
m20_42 -> m20_43  [color=green, key=0, style=solid];
m20_42 -> m20_49  [color=green, key=2, style=dotted];
m20_42 -> m20_47  [color=green, key=2, style=dotted];
m20_42 -> m20_50  [color=green, key=2, style=dotted];
m20_42 -> m20_51  [color=green, key=2, style=dotted];
m20_42 -> m20_55  [color=green, key=1, label="lambda expression", style=dashed];
m20_39 -> m20_42  [color=green, key=1, label=inner, style=dashed];
m20_39 -> m20_56  [color=green, key=1, label=inner, style=dashed];
m20_39 -> m20_45  [color=green, key=1, label=inner, style=dashed];
m20_39 -> m20_59  [color=green, key=1, label=inner, style=dashed];
m20_39 -> m20_40  [key=0, style=solid];
m20_39 -> m20_47  [key=2, style=dotted];
m20_41 -> m20_42  [color=green, key=0, style=solid];
m20_41 -> m20_56  [color=green, key=1, label=mockInnerProjection, style=dashed];
m20_41 -> m20_45  [color=green, key=1, label=mockInnerProjection, style=dashed];
m20_41 -> m20_59  [color=green, key=1, label=mockInnerProjection, style=dashed];
m20_41 -> m20_48  [color=green, key=2, style=dotted];
m20_41 -> m20_44  [color=green, key=1, label=mockInnerProjection, style=dashed];
m20_43 -> m20_44  [color=green, key=0, style=solid];
m20_43 -> m20_5  [color=green, key=2, style=dotted];
m20_45 -> m20_46  [color=green, key=0, style=solid];
m20_45 -> m20_53  [color=green, key=2, style=dotted];
m20_45 -> m20_54  [color=green, key=2, style=dotted];
m20_45 -> m20_58  [color=green, key=1, label="lambda expression", style=dashed];
m20_44 -> m20_45  [color=green, key=0, style=solid];
m20_44 -> m20_52  [color=green, key=2, style=dotted];
m20_40 -> m20_41  [color=green, key=0, style=solid];
m20_40 -> m20_44  [color=green, key=1, label=exception, style=dashed];
m20_40 -> m20_29  [key=2, style=dotted];
m20_46 -> m20_38  [color=blue, key=0, style=bold];
m20_4 -> m20_7  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m20_4 -> m20_61  [key=0, style=solid];
m20_4 -> m20_64  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m20_4 -> m20_0  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m20_62 -> m20_47  [key=2, style=dotted];
m20_62 -> m20_63  [key=0, style=solid];
m20_61 -> m20_62  [key=0, style=solid];
m20_61 -> m20_64  [key=0, style=solid];
m20_64 -> m20_65  [key=0, style=solid];
m20_64 -> m20_67  [key=2, style=dotted];
m20_63 -> m20_29  [key=2, style=dotted];
m20_63 -> m20_65  [key=0, style=solid];
m20_63 -> m20_27  [key=2, style=dotted];
m20_63 -> m20_66  [key=2, style=dotted];
m20_65 -> m20_4  [color=blue, key=0, style=bold];
m20_31 -> m20_32  [key=0, style=solid];
m20_35 -> m20_36  [color=green, key=0, style=solid];
m20_35 -> d63  [color=green, key=2, style=dotted];
m20_32 -> m20_35  [color=green, key=1, label=inner, style=dashed];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_37  [key=2, style=dotted];
m20_34 -> m20_35  [color=green, key=0, style=solid];
m20_34 -> m20_5  [color=green, key=2, style=dotted];
m20_34 -> m20_17  [color=green, key=2, style=dotted];
m20_33 -> m20_34  [color=green, key=0, style=solid];
m20_33 -> m20_29  [key=2, style=dotted];
m20_36 -> m20_31  [color=blue, key=0, style=bold];
m20_69 -> m20_15  [color=green, key=1, label=exception, style=dashed];
m20_70 -> m20_15  [color=green, key=1, label=projection, style=dashed];
m20_71 -> m20_56  [color=green, key=1, label=inner, style=dashed];
m20_71 -> m20_59  [color=green, key=1, label=inner, style=dashed];
m20_72 -> m20_56  [color=green, key=1, label=mockInnerProjection, style=dashed];
m20_72 -> m20_59  [color=green, key=1, label=mockInnerProjection, style=dashed];
m20_68 -> m20_8  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests", style=dashed];
m20_68 -> m20_1  [color=darkseagreen4, key=1, label="QuantConnect.Tests.Common.Exceptions.ScheduledEventExceptionProjectionTests", style=dashed];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=2, style=dotted];
m21_2 -> m21_0  [color=blue, key=0, style=bold];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_16  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m21_12 -> m21_17  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m21_12 -> m21_20  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m21_12 -> m21_12  [color=green, key=3, label="method methodReturn System.Exception Interpret", style=bold];
m21_12 -> m21_14  [color=green, key=3, label="method methodReturn System.Exception Interpret", style=bold];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_15  [key=0, style=solid];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_18  [key=0, style=solid];
m21_16 -> m21_15  [key=0, style=solid];
m21_16 -> m21_11  [key=2, style=dotted];
m21_17 -> m21_21  [key=0, style=solid];
m21_17 -> m21_22  [key=2, style=dotted];
m21_20 -> m21_21  [key=0, style=solid];
m21_14 -> m21_21  [key=0, style=solid];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_20  [key=0, style=solid];
m21_15 -> m21_17  [color=darkseagreen4, key=1, label=interpreter, style=dashed];
m21_18 -> m21_19  [key=0, style=solid];
m21_19 -> m21_15  [key=0, style=solid];
m21_19 -> m21_23  [key=2, style=dotted];
m21_21 -> m21_12  [color=blue, key=0, style=bold];
m21_24 -> m21_25  [key=0, style=solid];
m21_25 -> m21_26  [key=0, style=solid];
m21_25 -> m21_27  [key=2, style=dotted];
m21_25 -> m21_28  [key=2, style=dotted];
m21_25 -> m21_29  [key=2, style=dotted];
m21_25 -> m21_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_26 -> m21_24  [color=blue, key=0, style=bold];
m21_30 -> m21_31  [key=0, style=solid];
m21_9 -> m21_10  [color=green, key=0, style=solid];
m21_9 -> m21_11  [color=green, key=2, style=dotted];
m21_8 -> m21_9  [color=green, key=0, style=solid];
m21_10 -> m21_8  [color=blue, key=0, style=bold];
m21_31 -> m21_32  [key=0, style=solid];
m21_32 -> m21_30  [color=blue, key=0, style=bold];
m21_27 -> m21_47  [key=0, style=solid];
m21_27 -> m21_50  [color=crimson, key=0, style=bold];
m21_27 -> m21_48  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m21_27 -> m21_49  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m21_27 -> m21_24  [color=green, key=3, label="Parameter variable System.Exception exception", style=bold];
m21_47 -> m21_48  [key=0, style=solid];
m21_50 -> m21_48  [key=0, style=solid];
m21_48 -> m21_49  [key=0, style=solid];
m21_48 -> m21_51  [key=0, style=solid];
m21_49 -> m21_50  [key=0, style=solid];
m21_49 -> m21_49  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m21_51 -> m21_27  [color=blue, key=0, style=bold];
m21_4 -> m21_5  [color=green, key=0, style=solid];
m21_4 -> m21_9  [color=green, key=1, label="System.Exception", style=dashed];
m21_5 -> m21_6  [color=green, key=0, style=solid];
m21_5 -> m21_7  [color=green, key=2, style=dotted];
m21_5 -> m21_8  [color=green, key=1, label="lambda expression", style=dashed];
m21_6 -> m21_4  [color=blue, key=0, style=bold];
m21_33 -> m21_34  [color=green, key=0, style=solid];
m21_33 -> m21_35  [color=green, key=3, label="method methodReturn QuantConnect.Exceptions.StackExceptionInterpreter CreateFromAssemblies", style=bold];
m21_34 -> m21_35  [color=green, key=0, style=solid];
m21_34 -> m21_40  [color=green, key=2, style=dotted];
m21_34 -> m21_41  [color=green, key=2, style=dotted];
m21_34 -> m21_42  [color=green, key=2, style=dotted];
m21_34 -> m21_43  [color=green, key=2, style=dotted];
m21_34 -> m21_34  [color=green, key=1, label=assembly, style=dashed];
m21_35 -> m21_36  [color=green, key=0, style=solid];
m21_35 -> m21_44  [color=green, key=2, style=dotted];
m21_35 -> m21_38  [color=green, key=1, label=stackExceptionInterpreter, style=dashed];
m21_36 -> m21_37  [color=green, key=0, style=solid];
m21_36 -> m21_38  [color=green, key=0, style=solid];
m21_38 -> m21_39  [color=green, key=0, style=solid];
m21_37 -> m21_36  [color=green, key=0, style=solid];
m21_37 -> m21_45  [color=green, key=2, style=dotted];
m21_37 -> m21_46  [color=green, key=2, style=dotted];
m21_39 -> m21_33  [color=blue, key=0, style=bold];
m21_52 -> m21_1  [color=darkseagreen4, key=1, label="QuantConnect.Exceptions.StackExceptionInterpreter", style=dashed];
m21_52 -> m21_5  [color=green, key=1, label="QuantConnect.Exceptions.StackExceptionInterpreter", style=dashed];
m21_52 -> m21_15  [color=darkseagreen4, key=1, label="QuantConnect.Exceptions.StackExceptionInterpreter", style=dashed];
m21_52 -> m21_17  [color=darkseagreen4, key=1, label="QuantConnect.Exceptions.StackExceptionInterpreter", style=dashed];
m21_52 -> m21_25  [color=darkseagreen4, key=1, label="QuantConnect.Exceptions.StackExceptionInterpreter", style=dashed];
m21_53 -> m21_9  [color=green, key=1, label="System.Exception", style=dashed];
}
